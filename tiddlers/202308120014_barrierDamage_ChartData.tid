created: 20230812001414000
creator: Drevarr
tags: ChartData
title: 202308120014_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Budget Chicken", "Seiker Novus Terra", "Eibh\u00ebar", "King Jamls", "Oo Dads Mad", "Yummy Kiwi", "Bella Sassy", "Tribal S", "Ryvalia Fazebringer", "Venomina The Sly", "Jedd Eye", "Zaylen Harker", "Rockdevil", "Gamora Titus", "Air One Com", "Morton Saltbringer", "Vee U", "Mike The Archmagus", "J\u00e2sm\u00eene", "Cerys Fireblade", "Revitiel", "Zaedy Zae", "Solus Sanctus", "Brutal Araden", "Tootsie Pop Rocks", "Arcanophage Farra", "Drevarr Moonwillow", "Cesare Pirane", "Blancooo Padreee", "Daphne Agla\u00e9", "Rozaalyna", "Newtype Khan", "Name Is What", "Be\u00eb", "\u00c1rk\u00e1ntor", "Rina Of Theros", "Jimbo One Eye", "Keypek The Drunk"];
const professions = ["Tempest", "Firebrand", "Tempest", "Chronomancer", "Virtuoso", "Berserker", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Druid", "Berserker", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Weaver", "Tempest", "Berserker", "Vindicator", "Druid", "Firebrand", "Vindicator", "Scrapper", "Spellbreaker", "Scrapper", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 1079, 0, 0, 3, 445, 0, 11852, 1667, 385, 0, 3248, 0, 385, 75, 0, 0, 0, 0, 0], [219, 0, 0, 0, 0, 269, 0, 0, 1034, 0, 445, 13638, 3170, 479, 0], [334, 0, 0, 268, 0, 0, 0, 2918, 0, 0, 1074, 302, 10691, 4001], [295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 438, 1003, 0, 4146, 419, 646, 0, 7341, 0, 0, 2631, 0, 0, 1305, 0, 278, 1264], [0, 0, 0, 0, 0, 0, 3925, 314, 0, 419, 1400, 0, 14247], [1001, 0, 0, 0, 712, 459, 0, 364, 0, 910, 890, 0, 16440], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 890, 0, 12376, 0, 3033, 0, 0, 0, 2692, 261, 0, 0, 1250, 0, 0, 460], [0, 0, 0, 0, 0, 0, 0, 269, 0, 0, 3699, 890, 0, 5704, 3529, 0, 0, 3866, 0, 454, 0, 13, 0, 0, 0, 535, 2120], [352, 0, 0, 0, 0, 0, 3215, 0, 0, 0, 445, 9760, 621, 879, 0, 339, 0, 1455, 261, 0, 205, 0, 0, 3888], [41, 0, 0, 108, 0, 0, 0, 269, 0, 0, 1452, 1780, 705, 7282, 452, 646, 0, 8205, 0, 0, 0, 261, 0, 823, 0, 51, 0], [401, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0, 0, 16373, 0, 1297, 0, 2426, 0, 0, 385, 0, 0, 0, 0, 0, 2247], [295, 0, 0, 0, 261, 163, 269, 0, 314, 463, 1255, 0, 15379, 0, 543, 0, 2660, 0, 0, 0, 0, 0, 0, 0, 0, 2385], [261, 0, 0, 0, 189, 0, 1263, 0, 965, 22158], [2049, 0, 0, 0, 0, 0, 269, 3187, 0, 0, 269, 562, 0, 14282, 1143, 387, 261, 261, 0, 261, 1684, 74, 0, 823, 9, 1184, 889], [412, 0, 0, 0, 0, 0, 1055, 0, 0, 0, 441, 1288, 0, 17592, 295, 479, 0, 1779, 261, 0, 215, 0, 548, 0, 261, 4379], [0, 0, 0, 0, 0, 0, 0, 0, 0, 457, 0, 11840, 483, 2605, 5106, 0, 0, 0, 269, 0, 161, 0, 1686, 6590], [0, 0, 0, 0, 0, 459, 0, 269, 0, 0, 426, 755, 446, 15323, 0, 646, 329, 2244, 0, 0, 840, 0, 0, 2859, 0, 269, 4693], [1206, 0, 0, 0, 0, 0, 0, 441, 0, 443, 0, 445, 9708, 4293, 247, 0, 6294, 0, 693, 419, 1425, 0, 0, 0, 983, 3699], [288, 0, 0, 0, 0, 2555, 0, 0, 0, 0, 326, 909, 0, 13286, 4162, 0, 0, 2954, 0, 1325, 624, 528, 269, 754, 0, 303, 4395], [295, 0, 0, 0, 0, 0, 0, 0, 412, 72, 0, 17198, 2841, 421, 0, 3041, 0, 3476, 385, 0, 0, 0, 2925, 2119], [1156, 0, 0, 0, 0, 3277, 0, 476, 0, 0, 5486, 576, 0, 14475, 2488, 543, 0, 2933, 0, 261, 1614, 0, 0, 0, 0, 562, 1572], [1605, 0, 0, 922, 0, 520, 0, 0, 0, 3339, 0, 0, 14412, 3143, 968, 0, 2636, 0, 590, 0, 143, 1669, 0, 1307, 4867], [71, 0, 0, 0, 0, 1380, 0, 0, 0, 0, 2317, 0, 26524, 421, 0, 0, 3654, 0, 0, 0, 0, 0, 1839, 0, 0, 2331], [453, 0, 0, 0, 0, 698, 0, 0, 0, 0, 819, 646, 70, 25026, 1015, 1114, 1811, 0, 0, 0, 0, 0, 2921, 0, 830, 3488], [608, 0, 0, 0, 459, 0, 451, 0, 1552, 0, 631, 18826, 2857, 907, 0, 5301, 455, 0, 385, 0, 0, 1597, 0, 579, 4686], [1946, 0, 0, 0, 0, 3360, 133, 71, 0, 572, 1226, 648, 2242, 16807, 1269, 462, 0, 3666, 0, 615, 2085, 0, 0, 278, 33, 1993, 5774], [0, 0, 0, 0, 0, 1461, 901, 2629, 0, 0, 3523, 1416, 446, 35706, 385, 174, 0, 1491, 0, 0, 385, 0, 0, 1027, 0, 0, 443], [553, 0, 0, 23, 149, 0, 0, 209, 51, 0, 4103, 3423, 1251, 20959, 4284, 1039, 110, 8375, 70, 1260, 1132, 1211, 0, 629, 366, 1569, 3129], [42430, 15814, 2418, 0], [868, 0, 0, 708, 0, 0, 3437, 0, 0, 515, 0, 31862, 5987, 261, 0, 4612, 0, 242, 941, 0, 269, 3442, 0, 1648, 7379], [2020, 0, 0, 0, 0, 1000, 0, 982, 0, 3488, 3676, 859, 37570, 5525, 2896, 0, 8927], [1958, 0, 0, 0, 0, 1417, 0, 0, 0, 6116, 0, 46340, 5910, 2361, 0, 15499, 0, 3257, 646, 0], [542, 0, 0, 1287, 0, 0, 0, 2628, 0, 157, 2918, 481, 0, 47207, 8438, 1564, 0, 7184, 0, 2882, 1990, 0, 0, 3180, 0, 9867, 9205], [3201, 0, 0, 0, 0, 0, 768, 842, 0, 0, 3455, 6713, 141, 61384, 3310, 3732, 0, 17249, 0, 1733, 2996, 1601, 0, 3101, 224, 2624, 6337], [2015, 0, 1000, 0, 0, 0, 0, 1948, 0, 0, 8713, 3776, 1797, 59378, 6987, 8867, 0, 10090, 0, 8175, 2527, 931, 0, 554, 0, 4769, 4462], [2189, 0, 747, 0, 0, 2735, 2794, 1653, 0, 0, 7971, 11601, 0, 100848], [2915, 0, 952, 0, 0, 0, 269, 1533, 0, 0, 4590, 5005, 6872, 65592, 9414, 7076, 0, 23846, 0, 5697, 4034, 219, 0, 6411, 1016, 6506, 8448], [3824, 0, 0, 0, 0, 0, 2789, 3480, 0, 18, 2486, 13260, 9820, 119168, 24118, 8041, 0, 28697, 0, 7481, 15599, 1592, 880, 4734, 930, 4752, 25117], [12324, 0, 1209, 153, 0, 670, 9243, 9705, 0, 16, 10172, 11097, 8551, 133335, 23128, 16139, 0, 43427, 9989, 12755, 12089, 1633, 10451, 0, 13358, 29857]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

