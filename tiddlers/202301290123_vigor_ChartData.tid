created: 20230129012318000
creator: Drevarr
modified: 20230705163518325
modifier: drevarr
tags: ChartData
title: 202301290123_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Bubble Teabringer", "Vopiscus Zergherdus", "Belvyn Brightblade", "Antonio Mancia", "Venomina The Fierce", "Fribble Bibble", "Sola Machina", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.9039, 18.9813, 0.0, 15.9269, 63.5664, 45.8143, 32.8799, 54.7978, 15.6713, 0.0, 18.1447, 15.9894, 2.5664, 0.1962], [42.4864, 16.7661, 19.728, 0.0, 0.0, 72.4066, 141.0752, 66.9266, 84.9938], [16.3078, 172.0092, 47.8467, 25.5499, 75.7639, 35.8918, 81.095], [156.4844, 373.2509], [54.7145, 30.1553, 0.0, 120.0965, 0.0, 22.416, 116.5913, 211.4154, 58.7941, 60.3119], [96.3329, 161.9298, 97.2729, 0.0, 216.9761, 76.7836, 382.2124], [71.4571, 78.5628, 66.4848, 134.9796, 292.3218, 101.9776, 186.2327, 153.1683, 1.2356, 52.008, 0.0, 44.2708, 52.5084, 5.1995, 16.4808], [59.4619, 85.5336, 128.5956, 128.3927, 190.7689, 59.264, 324.9, 134.0977, 58.9159, 31.296, 14.8931, 141.5403, 268.9904, 0.0, 119.7212], [124.0075, 196.6896, 106.5798, 151.0608, 299.7797, 168.4897, 414.0526, 706.8192, 21.6614, 54.648, 5.5037, 29.8848, 69.6505, 271.5566, 113.822, 162.4144]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

