created: 20230410221909000
creator: Drevarr
modified: 20230705163525238
modifier: drevarr
tags: ChartData
title: 202304102219_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aisling Sidra", "Newtype Khan", "Sumatra Satyricon", "Smol Gluvs", "Skye Nightroad", "Rozaalyna", "Legacy Of Mathus", "Blancooo Padreee", "Rina Of Theros", "Nazhul Naxxremis", "Kmpek", "Jeckyll Mbs", "Inedible Plant", "Elonith Requiem", "Be\u00eb", "Smol Daddy Tika", "Sassy Daddy Demon", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Xyntharos", "Sofya De Nova", "Mistwalker Caelon", "Mike The Archmagus", "Xanvias Einzbern"];
const professions = ["Reaper", "Spellbreaker", "Soulbeast", "Scourge", "Scrapper", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Vindicator", "Berserker", "Vindicator", "Scourge", "Scourge", "Berserker", "Vindicator", "Weaver", "Berserker", "Vindicator", "Weaver", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89.8865, 171.4645, 158.5794, 92.8636, 1161.7222, 697.0909, 772.1058, 218.1, 359.75, 1269.5, 28.7257, 13.7111, 17.9481, 47.8113, 0.0, 321.2642, 496.7761, 1005.7768], [65.4109, 127.1667, 233.4291, 106.7616, 47.7065, 180.8516, 92.0635, 239.125, 643.0139, 260.5227, 454.5, 596.7, 387.875, 958.4677, 23.4248, 37.4222, 418.1429, 0.0, 397.3118, 377.8019, 336.7612, 491.4821], [169.4731, 146.6291, 140.0, 156.4205, 116.4516, 190.7857, 251.7045, 611.625, 252.9773, 221.0673, 100.85, 131.1667, 440.3226, 66.4867, 533.8222, 335.5195, 161.6981, 332.8387, 80.9151, 339.5075, 513.2054], [0.0, 213.5914, 236.4364, 150.1793, 132.1488, 226.4129, 341.3175, 322.3295, 734.2917, 617.1818, 252.9712, 529.875, 256.2361, 760.4839, 177.4159, 104.9556, 275.2727, 0.0, 454.043], [383.0484, 488.9491, 142.6673, 208.9918, 546.5032, 660.5397, 572.1705, 964.6667], [22.2419, 207.9164, 101.7135, 223.2914, 317.1548, 138.7381, 464.4659, 1511.4028, 603.9231, 488.9, 564.125, 1165.1935, 65.6018, 121.9111, 46.9481, 0.0, 1615.914], [716.9677, 664.7564, 257.5712, 277.1515, 484.0194, 413.873, 1122.5682], [327.371, 252.6836, 168.5397, 182.8777, 126.4194, 49.4921, 53.1818, 395.0833, 94.7727, 450.9904, 490.325, 385.3472, 1227.9355, 69.8761, 320.2444, 289.0, 52.3208, 441.6774, 912.7642, 2161.5672, 781.6429], [428.4086, 349.1382, 188.2163, 181.803, 409.4, 173.627, 587.6591, 1269.9583, 605.7273, 693.8846, 498.75, 717.0278, 1491.2097, 189.2743, 68.9778, 618.8312, 0.0, 1048.6022], [365.876, 310.7742, 545.9855, 211.1701, 245.1542, 1695.5833, 314.7727, 898.7596, 648.2, 987.0972, 1405.5484, 286.5664, 297.4444, 779.4026, 13.4528, 1010.2688], [266.9032, 604.1508, 493.375, 1651.5833, 394.0, 1273.4135, 858.25, 750.1667, 1957.0968, 393.9292, 479.2889, 631.013, 253.6038, 829.7312, 1917.2642, 55.6567, 3070.2321], [190.3876, 421.8118, 496.5091, 86.0906, 155.1868, 808.9226, 223.4365, 855.4659, 1243.1944, 343.9091, 1098.1731, 1046.85, 1391.5694, 1708.0323, 415.5133, 336.6667, 1732.8831, 87.5472, 1496.2151, 501.2547, 1636.791], [581.7849, 416.3782, 221.3845, 188.2486, 330.929, 472.6667, 5.9659, 1220.8194, 652.3864, 1191.6058, 615.175, 963.75, 1787.1613, 249.9381, 86.0889, 759.3636, 115.7358, 1118.2688, 1231.2358, 11.1343, 2072.8661], [49.1564, 405.1867, 429.3526, 455.329, 305.373, 841.6591, 1361.8056, 618.3182, 1339.4712, 870.65, 1531.5556, 2357.9677, 24.7434, 233.1333, 1366.1039, 130.8868, 1278.172], [277.3333, 432.0161, 380.52, 410.4898, 477.587, 449.2581, 470.3651, 552.7386, 1946.7639, 1372.4091, 723.3558, 1590.475, 878.5278, 1933.6452, 169.6637, 525.1111, 147.4156, 0.0, 1686.9677], [0.0, 630.2043, 848.6909, 418.0388, 202.6542, 482.2645, 320.8254, 533.0227, 2384.0556, 1122.7404, 541.625, 1078.0, 2469.7258, 483.1947, 92.2444, 1256.7922, 95.717, 814.3226, 940.9151, 2393.5075, 352.1607], [475.6828, 969.7927, 207.8909, 373.267, 400.6452, 445.6111, 1023.375, 1492.3173, 562.925, 1744.4028, 3474.1935, 223.6106, 542.6222, 1102.5974, 145.7547, 1222.4086, 1170.8774, 11.7015], [1536.8372, 469.0968, 216.7309, 380.915, 488.1963, 123.0, 29.7619, 937.4659, 1368.3611, 353.5227, 982.7788, 628.7, 1604.25, 1308.0161, 647.8761, 213.1556, 700.5974, 238.8113, 761.3978, 1715.6415], [73.186, 830.8495, 1103.1709, 495.8115, 207.2622, 715.5613, 99.619, 1147.5568, 3446.7778, 234.1136, 1715.25, 1978.85, 2320.4444, 4183.871, 699.7788, 829.8, 171.7792, 492.4151, 1784.129, 2052.4245, 3354.4776, 2727.7679], [324.2636, 647.6452, 984.1745, 500.4621, 566.8621, 336.7871, 360.5476, 1075.0909, 2270.6389, 685.1364, 1287.2692, 1477.575, 417.1944, 2860.1935, 475.0265, 580.7333, 1743.0519, 286.1509, 2184.4409, 1336.5755, 2416.9104, 2661.9821], [409.1497, 774.0333, 665.1742, 321.9127, 939.8409, 2053.2917, 550.6827, 1564.0, 1590.1667, 1299.7742, 942.7699, 779.4, 2042.3766, 509.2075, 2091.4516, 2558.5, 3209.1493, 2940.4286], [354.5891, 1104.7742, 1057.0836, 626.8466, 730.5808, 1011.6065, 665.5556, 980.1591, 2547.9444, 1623.9773, 2119.3173, 2278.65, 1654.3056, 3766.9516, 1276.354, 563.2444, 2125.2338, 1174.434, 2655.8065, 4148.566, 907.0299, 4175.6429], [675.9302, 1150.3602, 1146.0727, 595.5305, 1122.1114, 392.9548, 767.1032, 1088.6477, 1989.9167, 329.75, 2172.1154, 2837.325, 2778.2917, 3181.2419, 2237.2743, 933.5111, 2056.5195, 890.717, 2271.4624, 3114.5283, 0.0, 2505.4821], [2547.5659, 1083.6989, 1508.6909, 432.8207, 808.4239, 874.9484, 1499.7857, 2518.1477, 4215.0139, 604.7727, 1926.4904, 2572.0, 3972.2639, 3243.9194, 1883.8053, 1691.7778, 2596.5584, 353.0566, 4731.0323, 5263.3491, 3055.3284, 5473.6429]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

