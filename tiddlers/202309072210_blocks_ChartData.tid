created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Lasting Beauty", "Skylieonna", "Pl\u00eeo", "Snoguard", "Beware My Math", "Cormac Shadowcharm", "Kittendo", "Reckkyy", "Glorious Gluvs", "Hawaiian Supreme", "Ean Thane", "Snowe Shadowcharm", "Poppy Pittstop", "Melody Phoenixstorm", "Sub Train", "Kary\u00edna", "Aira Draugr", "Xuerreux", "High Sorcer Baradun", "Morv\u00e4rth", "Lord Erin The Wise", "Steamy Steam", "Smol Gluvs", "Regis Hawkesburne", "Seiker Novus Terra", "Latedoctor", "Vanhelsing Wizard", "Serum Vision", "Empressy", "Raelyn Sunray", "Bella Sassy", "Cat Wigglebooty", "Daphne Agla\u00e9", "Pafema", "Darks Na", "Belvyn Brightblade", "Blaize Harlot", "Forever Dreaming", "Tootsie Pop Rocks", "Traidoruns Maximus", "Black Raspberry Pie", "Cyclotechnist Farra", "Mistwalker Cael", "Malfax Jinn", "Toka Lockhart", "Xanvias", "Sonja Wintersong", "Koralia Danai", "Hyde En Sikh", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Firebrand", "Mechanist", "Firebrand", "Scrapper", "Mechanist", "Soulbeast", "Scrapper", "Berserker", "Spellbreaker", "Chronomancer", "Reaper", "Mechanist", "Scrapper", "Firebrand", "Vindicator", "Herald", "Berserker", "Tempest", "Reaper", "Weaver", "Berserker", "Reaper", "Berserker", "Tempest", "Reaper", "Chronomancer", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Reaper", "Druid", "Dragonhunter", "Firebrand", "Scourge", "Scourge", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Herald", "Firebrand", "Tempest", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 3, 5, 2, 5, 6, 0], [15, 8], [1, 1, 22], [14, 3, 8], [8, 0, 17], [2, 0, 0, 0, 0, 7, 6, 5, 6], [3, 2, 16, 2, 4], [8, 10, 12, 1], [0, 8, 5, 15, 4, 7], [4, 7, 4, 6, 4, 5, 0, 9], [2, 0, 3, 34], [2, 3, 7, 2, 2, 0, 5, 11, 2, 6], [2, 2, 0, 3, 2, 3, 2, 5, 0, 18, 4, 6, 1], [4, 6, 4, 7, 2, 5, 3, 15, 3], [14, 14, 13, 3, 9], [4, 6, 2, 4, 8, 2, 1, 4, 15, 6, 4], [0, 9, 5, 6, 3, 4, 7, 14, 3, 6], [3, 18, 24, 3, 9], [4, 6, 9, 7, 6, 19, 0, 7], [0, 4, 2, 2, 8, 44], [2, 7, 3, 4, 0, 2, 11, 7, 23, 2, 3, 1, 0, 0, 0, 0, 0], [1, 5, 6, 11, 7, 7, 8, 21], [5, 20, 0, 4, 0, 3, 2, 6, 9, 17], [5, 11, 4, 6, 0, 1, 6, 8, 13, 6, 7], [2, 7, 3, 8, 3, 4, 16, 7, 19, 2, 4, 0], [3, 10, 6, 4, 5, 6, 13, 9, 14, 3, 3], [0, 5, 1, 2, 1, 5, 7, 15, 27, 5, 9], [14, 8, 11, 18, 30], [0, 4, 15, 3, 9, 20, 5, 5, 11, 11], [4, 8, 7, 8, 8, 7, 6, 7, 25, 4], [19, 2, 14, 15, 39], [4, 7, 0, 5, 7, 6, 14, 5, 16, 2, 9, 0, 10, 3, 7, 0], [1, 5, 2, 4, 1, 3, 15, 18, 3, 5, 1, 10, 0, 20, 17], [0, 27, 4, 16, 19, 39], [22, 30, 3, 12, 0, 28, 3, 8], [6, 13, 6, 11, 5, 9, 14, 16, 24, 4, 5], [0, 3, 1, 3, 1, 5, 13, 8, 38, 5, 6, 0, 8, 3, 1, 12, 18], [18, 15, 3, 8, 0, 15, 7, 11, 15, 35], [1, 11, 8, 8, 8, 7, 5, 25, 1, 3, 0, 13, 1, 7, 12, 20], [5, 8, 6, 9, 8, 11, 16, 8, 32, 3, 3, 0, 15, 3, 4], [0, 0, 4, 13, 8, 8, 9, 27, 5, 4, 0, 0, 0, 22, 34], [1, 10, 2, 7, 10, 12, 13, 13, 37, 5, 6, 0, 12, 5, 7, 18, 17], [7, 6, 5, 11, 6, 6, 18, 27, 5, 6, 0, 12, 2, 8, 14, 43], [7, 19, 4, 9, 6, 7, 16, 33, 7, 8, 1, 21, 2, 13, 19, 18], [5, 8, 2, 15, 6, 8, 13, 13, 34, 7, 9, 0, 14, 3, 8, 18, 28], [5, 8, 6, 13, 5, 11, 12, 9, 25, 4, 7, 0, 21, 6, 11, 19, 38], [2, 13, 17, 30, 5, 12, 27, 8, 23, 26, 42], [6, 12, 4, 11, 6, 9, 19, 12, 27, 5, 8, 0, 22, 6, 10, 20, 39], [7, 11, 6, 9, 5, 11, 6, 12, 30, 5, 9, 0, 17, 6, 16, 18, 52], [4, 10, 9, 15, 8, 6, 5, 15, 31, 5, 9, 1, 18, 3, 16, 21, 54]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

