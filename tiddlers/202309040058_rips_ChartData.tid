created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Vesnan", "Reina Armitage", "Glizzy Gobbl\u00e9r", "Necrotic Windrunner", "Drac Tepes", "Chocolate Teapot", "Xanvias"];
const professions = ["Reaper", "Druid", "Reaper", "Reaper", "Scourge", "Chronomancer", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1481, 0.0364, 0.131, 0.2143, 0.0312, 0.1556, 0.0909, 0.1707, 0.0, 0.0727, 0.0098, 0.0, 0.1163, 0.3735, 0.0714], [0.0484, 0.04, 0.0204, 0.1613, 0.0571, 0.1, 0.1064, 0.1408, 0.0455, 0.1522, 0.0309, 0.0856, 0.0495, 0.0602, 0.0278, 0.0091, 0.0476, 0.0, 0.0, 0.0667, 0.0909], [0.3913, 0.0, 0.0856, 0.1089, 0.0723, 0.0463, 0.0273, 0.1667, 0.0, 0.0, 0.0222, 0.3333, 0.0244, 0.0, 0.0727, 0.0049, 0.0702, 0.0, 0.3721, 0.2169, 0.1429], [0.3976, 0.2593, 0.1045, 0.131, 0.0, 0.0, 0.3778, 0.3939, 0.0244, 0.0, 0.0182, 0.0, 0.0, 0.4423, 0.5349, 0.1928, 0.3571], [0.0833, 0.0773, 0.1548, 0.0, 0.0625, 0.8444, 1.3333, 0.0244, 0.0, 0.0727, 0.0196, 0.3509, 0.1731, 0.4651, 0.3614, 0.5], [0.0122, 0.1458, 0.0896, 0.0484, 0.14, 0.0102, 0.0726, 0.0143, 0.0333, 0.0213, 0.0423, 0.0455, 0.0435, 0.0, 0.0214, 0.0297, 0.1687, 0.463, 0.1818, 0.0119, 0.0357, 0.3125, 0.4444, 0.1515, 0.0732, 0.0, 0.0, 0.0, 0.6316, 0.0, 0.6744, 0.3614, 0.0], [0.0, 0.0333, 0.1304, 0.2073, 0.6875, 0.2388, 0.4516, 0.32, 0.2245, 0.2661, 0.2429, 0.35, 0.7021, 0.2254, 1.0, 0.9565, 0.4227, 0.1738, 0.5446, 0.3133, 0.2593, 0.1273, 0.1786, 0.6071, 0.125, 0.5333, 0.8788, 0.0976, 0.0, 0.3455, 0.0098, 0.3333, 0.7907, 0.3012, 0.6429]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

