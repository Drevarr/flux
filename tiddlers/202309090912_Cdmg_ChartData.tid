created: 20230909091225000
creator: Drevarr
tags: ChartData
title: 202309090912_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Vesnan", "Gestern Yesteryear", "Chunky Meat Flapper", "Necrotic Windrunner", "Drevarr Moonwillow", "Gamora Titus", "Serene Azura", "Sister Elonith"];
const professions = ["Reaper", "Firebrand", "Soulbeast", "Reaper", "Scrapper", "Firebrand", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 10.8973, 0.0, 0.0, 17.1494, 35.5161, 3.5176, 4.3661, 5.2, 0.0, 0.0, 0.0], [64.9231, 0.0, 14.9886, 66.6143, 3.9074, 5.1667, 8.1868, 18.0, 5.5372, 7.5232, 0.0, 2.7701, 8.3118, 17.1412, 9.6607, 0.0351, 1.5233, 0.0, 10.6087, 4.2979, 0.0], [53.0769, 5.3111, 24.3182, 11.5143, 19.7593, 0.0, 3.4505, 53.4667, 21.6281, 12.0269, 0.0476, 0.0, 9.4943, 13.6022, 7.6, 10.7946, 4.3743, 0.0, 18.2174, 0.383, 2.2041], [0.0, 38.6, 6.5227, 20.7857, 2.5, 3.5833, 44.022, 27.5333, 14.3388, 2.022, 0.0, 1.2838, 10.6207, 16.7742, 11.6941, 29.125, 2.9006, 7.1977, 0.0, 5.0, 0.1489, 36.8776], [5.9744, 3.2889, 59.7955, 21.2429, 36.9074, 16.4167, 19.2198, 6.2, 38.9421, 7.89, 0.0, 1.2027, 6.2069, 18.0, 9.5647, 24.7902, 2.4152, 30.7674], [23.3077, 4.2222, 48.3704, 0.0, 3.4066, 0.0, 127.4628, 65.5697, 0.0, 3.0], [46.8974, 8.8667, 14.6477, 22.3571, 52.3148, 9.3333, 48.1648, 174.4333, 31.2562, 7.4352, 12.6429, 1.2297, 30.9425, 39.3978, 52.9412, 40.7946, 11.6374, 44.3605, 0.0, 33.0435, 0.0, 9.3673], [0.0, 361.2333, 224.6612, 89.6333, 45.3333, 2.6892, 57.1092, 246.1935, 223.8118, 100.4062, 0.0, 0.0, 0.0, 259.102]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

