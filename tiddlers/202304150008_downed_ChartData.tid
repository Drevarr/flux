created: 20230415000841000
creator: Drevarr
modified: 20230705163525546
modifier: drevarr
tags: ChartData
title: 202304150008_downed_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Primal", "Spucygirl", "Smol Daddy Tika", "Smol Daddy Tika", "Mac Chiato", "Nazhul Naxxremis", "Rozaalyna", "Drevarr Moonwillow", "Solus Sanctus", "Johosh The Great", "Xanvias Einzbern", "Mistwalker Caelon", "Be\u00eb", "Zadie Miststep", "Koralia Danai", "Arcanophage Farra", "Mmathuss", "Grasszanine", "Aronorf Xideliesi", "Nazhul Naxxremis", "Hauzzy", "Primal Clone", "Newtype Khan", "Stoic Rapidfire", "Ryvalia Fazebringer", "Xyntharos", "Fruji", "Bella Sassy", "Paul Bjart Mist Cop", "Kosa\u00edr", "Smol Gluvs", "Drogo Deception", "Sheep Paws", "Tegan Parker", "Venomina The Siren", "Lucas Ryn", "The Fancy Cheese", "Rina Of Theros", "Air One Com", "Kmpek", "Sassy Daddy Demon", "Inedible Plant", "Black Raspberry Pie", "Panther B Me", "Lord Erin The Wise", "Cat Wigglebooty", "Blancooo Padreee", "High Sorcer Baradun", "Corlyss Velaryonn", "Cedryn X"];
const professions = ["Tempest", "Spellbreaker", "Berserker", "Spellbreaker", "Tempest", "Reaper", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Reaper", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Druid", "Chronomancer", "Vindicator", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Reaper", "Chronomancer", "Berserker", "Tempest", "Tempest", "Firebrand", "Scrapper", "Scourge", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Chronomancer", "Scourge", "Weaver", "Scrapper", "Spellbreaker", "Tempest", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Downed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 2], [0, 0, 2, 0, 2, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [2, 0, 0, 0, 0, 0, 2, 0, 2], [1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2], [0, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1], [0, 0, 2, 0, 1, 0, 0, 2, 2, 1], [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1], [0, 0, 3, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 2, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 2, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2], [0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 1, 1, 0, 2, 1], [1, 0, 0, 1, 3, 2, 0, 1, 0, 0, 0, 0, 0, 0, 3], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 1], [0, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 3, 2, 1, 1], [1, 0, 1, 0, 0, 0, 0, 3, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 1, 1], [0, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 2, 0, 0, 0, 1, 1, 0, 2, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 1, 0, 1, 1, 0, 0, 1, 1, 2, 1], [1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 2, 1, 1, 2], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 2, 0, 0, 3, 1, 1, 2], [1, 0, 1, 0, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 3, 0, 0, 0, 1, 1, 0, 3, 1, 1, 1], [1, 0, 1, 0, 4, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 1, 1, 0, 1, 2], [0, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0, 3, 0, 0, 2, 1, 2, 0, 4], [0, 2, 3, 1, 0, 1, 0, 0, 2, 0, 0, 2, 3, 1, 3], [0, 1, 2, 1, 1, 0, 0, 4, 1, 1, 0, 1, 0, 0, 2, 1, 0, 2, 1, 2], [0, 0, 1, 0, 1, 0, 0, 2, 1, 1, 0, 1, 0, 0, 1, 3, 1, 3, 2, 2, 1], [0, 0, 1, 0, 2, 0, 0, 2, 3, 2, 0, 3, 1, 0, 2, 0, 0, 3, 2], [0, 1, 2, 0, 3, 0, 0, 1, 2, 2, 0, 3, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

