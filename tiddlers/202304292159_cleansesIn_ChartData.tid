created: 20230429215910000
creator: Drevarr
modified: 20230705163527372
modifier: drevarr
tags: ChartData
title: 202304292159_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Skylar Shadowmoon", "Shondria Telthalion", "Kira Dragonblaze", "Pappaa Fooolery", "Stark Gandalf", "Stark Gandalf", "Mistwalker Caelon", "Tootsie Pop Rocks", "Blancooo Padreee", "Cedryn X", "Bombshell Cutie", "Surethang Jr", "Necrotic Windrunner", "Khailerian", "Kenley Ellesmera", "Rage Wildboy", "Yuuka Chou", "Rudjulin", "Kary\u00edna", "Duchess Hazel", "Morv\u00e4rth", "Hauzzy", "Lord Erin The Wise", "Xyntharos", "Venomina The Fierce", "Belvyn Brightblade", "Fribble Bibble", "Madame Charrlotte", "Tika Fiery", "Oo Dads Mad", "Gabe Malhorn", "Ria Zerria", "Skye Nightroad", "Outer Ocean", "Johosh The Great", "Xanvias Tsolice", "Newtype Khan", "Miphest\u00f6", "Magister Boombottom", "Husky Guard", "Smol Gluvs", "Owl Scowls", "Zenek Tryst", "Kaotic Reaper Z", "Jupi Jupi Jupi", "Be\u00eb", "Hyde En Sikh", "Zady Stardust", "Drevarr Moonwillow", "Fallendruid"];
const professions = ["Scrapper", "Deadeye", "Dragonhunter", "Scrapper", "Weaver", "Tempest", "Vindicator", "Scrapper", "Spellbreaker", "Berserker", "Chronomancer", "Chronomancer", "Scourge", "Vindicator", "Druid", "Warrior", "Tempest", "Willbender", "Vindicator", "Vindicator", "Reaper", "Berserker", "Weaver", "Vindicator", "Spellbreaker", "Firebrand", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Scrapper", "Berserker", "Firebrand", "Weaver", "Spellbreaker", "Tempest", "Tempest", "Dragonhunter", "Scourge", "Scrapper", "Weaver", "Tempest", "Firebrand", "Scourge", "Chronomancer", "Firebrand", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0741, 0.3175, 0.0, 0.0132, 0.2083, 0.0929, 0.0609], [0.0, 0.0159, 0.0, 0.0066, 0.0, 0.0214, 0.0761, 0.0, 0.3793, 0.0817, 0.0, 0.0, 0.0, 0.2179, 0.0172, 0.0, 0.1304, 0.0725], [0.0095, 0.0729, 0.037, 0.2222, 0.0, 0.0, 0.1875, 0.0786, 0.1461], [0.1746, 0.0, 0.1667, 0.0214, 0.1887], [0.0, 0.0066, 0.2083, 0.1143, 0.2055, 0.0303], [0.1581, 0.5172, 0.2451, 0.0267, 0.0, 0.0, 0.4103, 0.0, 0.0, 0.058], [0.0667, 0.0104, 0.1111, 0.2381, 0.0159, 0.0, 0.2083, 0.0429, 0.1218, 0.0, 0.0226, 0.3077, 0.0172, 0.0606, 0.0217, 0.0797], [0.0741, 0.3492, 0.127, 0.0761, 0.2414, 0.2412, 0.0, 0.0, 0.0, 0.3462, 0.0172, 0.0, 0.0652, 0.1667], [0.0, 0.0, 0.0833, 0.1429, 0.1096, 0.1912, 0.0428, 0.0267, 0.0, 0.0, 0.3974, 0.0172, 0.0, 0.087, 0.1449], [0.1111, 0.0, 0.0159, 0.0197, 0.125, 0.0714, 0.2055, 0.3793, 0.0467, 0.16, 0.0045, 0.0769, 0.0, 0.0435, 0.1667], [0.0794, 0.0317, 0.0, 0.25, 0.0357, 0.1142, 0.2243, 0.4483, 0.2101, 0.0533, 0.0, 0.0, 0.0385], [0.0, 0.0, 0.1667, 0.1357, 0.2116, 0.2574], [0.0, 0.0132, 0.2083, 0.0786, 0.1492, 0.1691, 0.3103, 0.1984, 0.0533, 0.0, 0.009, 0.1026, 0.0, 0.1212, 0.1087, 0.0145], [0.1852, 0.1905, 0.0159, 0.0395, 0.1667, 0.0071, 0.2116, 0.1801, 0.4483, 0.0895], [0.0159, 0.0, 0.105, 0.2537, 0.3103, 0.249, 0.12, 0.0, 0.0045, 0.2436, 0.0, 0.0, 0.0, 0.1232], [0.0159, 0.0066, 0.125, 0.1714, 0.105, 0.2684, 0.1724, 0.1829, 0.0933, 0.0, 0.009, 0.1667, 0.0172, 0.0, 0.0435, 0.087], [0.1905, 0.0794, 0.0132, 0.2917, 0.0071, 0.2496, 0.2721], [0.0, 0.0066, 0.1875, 0.0714, 0.1903, 0.136, 0.0345, 0.2062, 0.0267, 0.0, 0.0045, 0.1154, 0.0, 0.0, 0.2609, 0.1232], [0.2593, 0.0794, 0.0, 0.0066, 0.0625, 0.1643, 0.1065, 0.2243, 0.3103, 0.2062, 0.0267, 0.0, 0.009, 0.2051, 0.0517, 0.1515, 0.087, 0.1232], [0.1111, 0.2381, 0.0, 0.0, 0.0417, 0.1, 0.2207, 0.2353, 0.2414, 0.1712], [0.0741, 0.2381, 0.0476, 0.0395, 0.2292, 0.1143, 0.2374, 0.3793, 0.1712, 0.0133, 0.0, 0.0, 0.3333, 0.0172, 0.0303, 0.0, 0.0362], [0.1111, 0.1746, 0.0, 0.0066, 0.25, 0.1571, 0.2024, 0.2353, 0.2101], [0.1481, 0.2222, 0.0, 0.0197, 0.0833, 0.1786, 0.1431, 0.3971, 0.4483, 0.1673], [0.037, 0.1905, 0.0066, 0.1667, 0.0429, 0.1629, 0.2206, 0.2759, 0.3035, 0.12, 0.0, 0.0, 0.2308, 0.0, 0.0, 0.0435, 0.1667], [0.0317, 0.0263, 0.0625, 0.0714, 0.1994, 0.261, 0.4483, 0.1907, 0.0133, 0.0, 0.0, 0.3974, 0.0, 0.0, 0.0435, 0.1159], [0.0833, 0.037, 0.2063, 0.0952, 0.0, 0.3333, 0.1, 0.2542, 0.1801, 0.3103, 0.2218], [0.0159, 0.0, 0.4167, 0.0714, 0.2755, 0.2316, 0.5172, 0.1946], [0.2922, 0.2794, 0.3448, 0.1868, 0.0533, 0.0045, 0.1282], [0.0741, 0.1587, 0.0, 0.0, 0.2083, 0.1143, 0.1994, 0.2684, 0.3103, 0.2335, 0.04, 0.009, 0.0897, 0.0172, 0.0606, 0.0652, 0.0942], [0.0762, 0.0938, 0.0741, 0.3651, 0.0, 0.0, 0.2292, 0.1214, 0.1979, 0.2537, 0.3448, 0.249], [0.037, 0.1905, 0.0317, 0.0066, 0.2917, 0.0714, 0.1872, 0.2721, 0.3448, 0.1984, 0.0133, 0.0, 0.3205, 0.0, 0.0, 0.2826, 0.087], [0.0, 0.1111, 0.0, 0.0066, 0.25, 0.1714, 0.1918, 0.2794, 0.4138, 0.1946, 0.0133, 0.0, 0.0, 0.2308, 0.0172, 0.0, 0.0, 0.1594], [0.0, 0.2857, 0.0, 0.0, 0.125, 0.1286, 0.1948, 0.261, 0.5517, 0.1907, 0.1733, 0.0, 0.0045, 0.3205, 0.0172, 0.0, 0.0217, 0.058], [0.1111, 0.3492, 0.0, 0.0, 0.4583, 0.1, 0.2603, 0.2279, 0.3793, 0.214], [0.1481, 0.1429, 0.0, 0.0, 0.2292, 0.1, 0.2131, 0.239, 0.5517, 0.249, 0.12, 0.0, 0.0, 0.2308, 0.0, 0.1087, 0.0652], [0.0381, 0.0729, 0.037, 0.254, 0.0, 0.0, 0.1458, 0.0714, 0.2131, 0.2794, 0.2759, 0.2101, 0.1067, 0.0, 0.0045, 0.1923, 0.0345, 0.0303, 0.0652, 0.1087], [0.0, 0.0729, 0.037, 0.2222, 0.0159, 0.0329, 0.1875, 0.0714, 0.2983, 0.1434, 0.0, 0.1595, 0.0133, 0.0, 0.0271, 0.3974, 0.0172, 0.0, 0.0435, 0.0942], [0.0741, 0.1905, 0.0, 0.0066, 0.2917, 0.1, 0.2709, 0.2574, 0.4138, 0.1323, 0.0, 0.0045, 0.3205, 0.0345, 0.0, 0.0652, 0.0725], [0.1852, 0.2857, 0.0, 0.0263, 0.2708, 0.0786, 0.2892, 0.2868, 0.0, 0.0267, 0.0, 0.0, 0.5, 0.0, 0.0, 0.087, 0.1087], [0.0741, 0.2381, 0.1111, 0.0, 0.125, 0.1, 0.2588, 0.3529, 0.1829, 0.0533, 0.0, 0.1795, 0.0172, 0.0303, 0.0652, 0.0362], [0.0, 0.2857, 0.0, 0.0329, 0.375, 0.1857, 0.2024, 0.2132, 0.4483, 0.1712, 0.12, 0.0, 0.0136, 0.4231, 0.0, 0.0909, 0.1087, 0.1377], [0.037, 0.2222, 0.0317, 0.0197, 0.0417, 0.0929, 0.2755, 0.2904, 0.179, 0.0533, 0.0, 0.009, 0.1282, 0.0172, 0.0303, 0.1522, 0.1739], [0.0952, 0.0, 0.0, 0.0833, 0.0571, 0.3272, 0.3456, 0.2069, 0.2335], [0.2083, 0.0929, 0.2648, 0.2426, 0.2759, 0.284, 0.0267, 0.0, 0.0, 0.4103, 0.0517, 0.0, 0.0652, 0.0942], [0.0, 0.125, 0.05, 0.2983, 0.3309, 0.4138, 0.2529, 0.04, 0.0, 0.0, 0.2949, 0.0345, 0.0, 0.0652, 0.0797], [0.1852, 0.1587, 0.0317, 0.0263, 0.4375, 0.2071, 0.274, 0.1801, 0.4483, 0.2257, 0.0133, 0.0136, 0.3205, 0.0345, 0.0909, 0.0652, 0.1377], [0.0417, 0.037, 0.2698, 0.0, 0.0, 0.1458, 0.1786, 0.2496, 0.2941, 0.7241, 0.2685, 0.0, 0.0271, 0.3077, 0.0172, 0.0606, 0.1522, 0.1232], [0.1111, 0.1905, 0.0159, 0.0066, 0.3542, 0.0929, 0.277, 0.2353, 0.2759, 0.2918, 0.08, 0.009, 0.3077, 0.0345, 0.0, 0.4348, 0.1087], [0.0, 0.0938, 0.2963, 0.1746, 0.0, 0.0329, 0.375, 0.1929, 0.3303, 0.2574, 0.2568, 0.0133, 0.0543, 0.2308, 0.0172, 0.0, 0.413, 0.0942], [0.2222, 0.3492, 0.0, 0.1458, 0.2214, 0.4125, 0.3125, 0.3793, 0.2296, 0.0533, 0.0, 0.0588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

