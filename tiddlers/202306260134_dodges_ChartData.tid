created: 20230626013408000
creator: Drevarr
modified: 20230705163538790
modifier: drevarr
tags: ChartData
title: 202306260134_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Obsidian Stormbow", "Azariel Moon", "Cedryn X", "Sub Train", "Smol Gluvs", "Taery Shimui", "Axunar", "Sumatra Satyricon", "Venomina The Siren", "Minka Bringer", "Bella Sassy", "Sygaldry Verdandi", "Tegan Parker", "Tootsie Pop Rocks", "Crusader Siolith", "Rosie Sunray", "Primal Clone", "Mister Jekyll", "Taery Shimui", "Artakama Nahid", "Blanco Padre Guard", "Morv\u00e4rth", "Lucky Leipreach\u00e1n", "Xanvias Einzbern", "Tika Fiery", "Melli Dragonswrath", "Fribble Bibble", "Fuuko Kazari", "Be\u00eb", "Lord Erin The Wise", "Ryvalia Fazebringer", "Miphest\u00f6", "Cat Wigglebooty", "Belvyn Brightblade", "No Reserv\u00e9", "Koralia Danai", "Zayde Sunsabre", "Drevarr Moonwillow", "Gestern Yesteryear", "Mistwalker Cael", "Johosh The Mighty", "Newtype Khan", "Kary\u00edna", "Traidoruns Maximus", "Arcanophage Farra", "Mememonoko", "Elon The Archmagus", "Solus Sanctus", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Soulbeast", "Reaper", "Berserker", "Dragonhunter", "Reaper", "Scourge", "Dragonhunter", "Soulbeast", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Vindicator", "Chronomancer", "Reaper", "Reaper", "Tempest", "Dragonhunter", "Reaper", "Scrapper", "Berserker", "Firebrand", "Berserker", "Scrapper", "Berserker", "Reaper", "Weaver", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Vindicator", "Berserker", "Spellbreaker", "Vindicator", "Firebrand", "Spellbreaker", "Vindicator", "Tempest", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 6, 1, 1, 14, 3, 1, 6, 2], [3, 2, 13, 1, 0, 6, 3, 3, 3, 3], [10, 0, 0, 0, 1, 4, 1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 1, 2, 3, 1, 1, 4, 4], [3, 0, 2, 5, 0, 0, 0, 0, 0, 1, 1, 1, 3, 1, 2, 2, 2, 0, 1, 6, 4, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 4, 6, 4, 10, 5, 3, 1, 1, 1], [5, 6, 8, 12, 4, 8, 5], [12, 5, 6, 4, 3, 2, 7, 2, 1, 4, 4], [3, 1, 2, 10, 0, 0, 1, 2, 1, 3, 2, 0, 3, 0, 1, 1, 2, 1, 2, 0, 1, 5, 4, 2, 2, 0, 0, 1, 2, 0, 3], [1, 1, 2, 1, 16, 2, 0, 5, 3, 4, 1, 4, 1, 3, 1, 1, 3, 0, 3, 6, 0], [4, 1, 2, 3, 2, 3, 5, 9, 4, 5, 0, 1, 4, 1, 3, 2, 3, 0, 0, 1, 2, 1, 1, 1, 3], [6, 1, 6, 5, 6, 2, 3, 7, 5, 2, 1, 5, 3, 0, 1, 4, 1, 0, 0, 4], [0, 3, 1, 1, 6, 0, 0, 2, 1, 4, 2, 5, 4, 0, 2, 3, 0, 0, 1, 2, 1, 3, 5, 1, 0, 0, 1, 5, 2, 1, 2, 6], [7, 0, 1, 4, 4, 0, 2, 6, 3, 3, 0, 0, 4, 2, 3, 1, 6, 3, 2, 0, 3, 1, 3, 3, 3], [7, 0, 2, 1, 5, 4, 3, 2, 3, 3, 2, 2, 4, 2, 7, 3, 3, 0, 2, 1, 1, 2, 1, 3, 2], [0, 3, 3, 0, 12, 2, 0, 2, 0, 1, 0, 3, 3, 3, 7, 1, 3, 3, 2, 4, 0, 2, 2, 2, 1, 1, 2, 1, 1, 1, 0, 2], [0, 5, 1, 3, 6, 1, 5, 6, 1, 6, 5, 4, 6, 3, 4, 2, 0, 2, 3, 1, 2, 4], [0, 3, 3, 1, 3, 3, 5, 2, 7, 5, 4, 6, 7, 5, 6, 5, 5], [1, 2, 0, 0, 6, 0, 0, 7, 2, 1, 3, 3, 5, 5, 8, 6, 1, 0, 1, 2, 0, 4, 4, 1, 1, 2, 0, 1, 2, 1, 2, 0], [5, 5, 1, 1, 19, 2, 0, 7, 4, 3, 3, 5, 4, 6, 5, 1], [14, 6, 10, 8, 8, 1, 5, 8, 6, 8], [2, 3, 1, 4, 12, 2, 4, 3, 2, 0, 4, 2, 2, 1, 4, 2, 1, 1, 0, 6, 4, 1, 3, 1, 3, 1, 0, 3, 1, 3, 0], [1, 2, 9, 3, 7, 7, 2, 4, 3, 7, 7, 5, 4, 1, 0, 3, 5, 0, 0, 3, 3], [5, 2, 0, 23, 1, 0, 2, 1, 2, 2, 4, 9, 3, 5, 2, 2, 0, 1, 3, 0, 1, 3, 1, 3, 3], [3, 0, 26, 2, 0, 0, 1, 0, 2, 5, 2, 3, 6, 1, 3, 1, 1, 5, 1, 3, 7, 4, 4], [0, 0, 11, 1, 0, 9, 1, 1, 2, 5, 3, 1, 11, 5, 2, 0, 0, 2, 6, 0, 7, 4, 3, 1, 1, 1, 4, 1, 2, 1], [1, 1, 0, 1, 5, 1, 0, 5, 1, 1, 3, 5, 9, 4, 3, 6, 3, 0, 0, 3, 5, 1, 7, 5, 3, 2, 0, 0, 3, 4, 2, 0, 2], [3, 1, 3, 0, 12, 2, 0, 3, 2, 3, 3, 7, 4, 2, 4, 3, 2, 1, 0, 4, 3, 3, 1, 3, 4, 2, 0, 2, 4, 1, 0, 1, 3], [1, 1, 3, 0, 19, 2, 1, 6, 2, 3, 2, 3, 4, 2, 7, 5, 5, 1, 1, 4, 3, 3, 5, 4], [7, 6, 5, 5, 6, 4, 2, 6, 5, 4, 10, 4, 4, 2, 0, 0, 4, 4, 3, 2, 4], [2, 1, 0, 1, 15, 0, 0, 9, 3, 2, 5, 6, 3, 4, 8, 6, 2, 0, 1, 4, 2, 3, 6, 2, 2, 2], [0, 1, 1, 3, 9, 3, 3, 2, 4, 5, 1, 3, 3, 3, 4, 7, 1, 0, 4, 5, 5, 4, 4, 3, 2, 1, 2, 1, 2, 3], [3, 3, 1, 1, 6, 1, 0, 8, 4, 3, 4, 3, 6, 3, 3, 5, 1, 0, 2, 5, 0, 3, 5, 4, 3, 1, 2, 5, 3, 5, 0, 2], [0, 3, 0, 3, 18, 0, 0, 7, 3, 2, 3, 4, 7, 4, 5, 4, 5, 3, 3, 4, 2, 5, 6, 1, 1, 1, 0, 2, 3], [1, 3, 2, 1, 30, 3, 0, 7, 1, 3, 2, 4, 7, 3, 7, 1, 4, 0, 1, 4, 1, 3, 7, 5, 4, 1, 0, 0, 2, 0, 3, 4], [7, 1, 3, 3, 37, 5, 6, 2, 3, 6, 8, 6, 7, 9, 5, 7, 3], [5, 10, 0, 3, 30, 0, 0, 6, 5, 3, 4, 7, 6, 4, 4, 2, 6, 1, 2, 3, 1, 4, 2, 4, 4, 4], [3, 4, 2, 0, 13, 2, 0, 6, 5, 4, 4, 6, 1, 4, 9, 7, 1, 0, 4, 5, 6, 8, 5, 4, 3, 0, 1, 2, 2, 3, 2, 6], [1, 4, 1, 0, 16, 3, 0, 6, 0, 3, 2, 6, 0, 0, 9, 6, 3, 0, 5, 1, 4, 2, 7, 6, 6, 1, 1, 2, 10, 2, 7, 2, 6], [1, 4, 3, 0, 18, 3, 0, 6, 1, 5, 5, 4, 8, 3, 7, 4, 4, 2, 2, 2, 5, 3, 6, 4, 6, 4, 0, 1, 3, 3, 3, 2, 2], [3, 9, 2, 2, 5, 8, 6, 3, 6, 7, 5, 3, 5, 6, 7, 7, 6, 5, 5, 3, 2, 4, 4, 5, 3, 3], [3, 8, 5, 5, 3, 9, 8, 4, 6, 9, 4, 0, 1, 4, 6, 10, 10, 8, 7, 6, 2, 1, 2, 3, 5, 6, 5], [2, 4, 3, 0, 37, 4, 0, 9, 3, 3, 5, 10, 7, 3, 9, 6, 3, 1, 3, 4, 5, 7, 4, 6, 1, 0, 1, 2, 3, 4, 3, 5], [4, 9, 4, 4, 31, 2, 3, 4, 2, 5, 3, 7, 6, 5, 7, 2, 7, 2, 4, 3, 5, 7, 2, 7, 5, 4, 2, 2, 5, 1, 3, 1, 2], [12, 8, 14, 3, 45, 6, 3, 12, 4, 2, 4, 6, 5, 2, 1, 0, 5, 0, 0, 2, 0, 3, 1, 3, 4, 4, 1, 0, 1, 3, 3, 2, 3], [1, 3, 2, 34, 3, 2, 10, 6, 3, 6, 4, 11, 5, 7, 5, 6, 1, 2, 5, 9, 8, 6, 8, 5, 6, 0, 7, 2], [1, 6, 3, 2, 40, 3, 0, 10, 3, 1, 5, 7, 4, 5, 6, 2, 8, 1, 3, 5, 4, 2, 8, 8, 5, 8, 4, 2, 4, 7, 4, 3], [14, 6, 1, 35, 4, 1, 8, 4, 1, 3, 6, 7, 1, 10, 7, 7, 1, 1, 4, 4, 10, 9, 7, 11, 3, 11, 6, 9, 9, 7], [2, 8, 8, 5, 50, 6, 3, 8, 2, 2, 4, 10, 4, 7, 9, 8, 13, 3, 3, 3, 8, 5, 3, 6, 5, 10, 3, 3, 3, 2, 4, 1, 4], [7, 6, 3, 6, 50, 2, 1, 9, 3, 3, 9, 9, 7, 5, 12, 6, 5, 2, 5, 8, 8, 9, 10, 7, 7, 1, 1, 4, 5, 1, 4, 6], [4, 4, 5, 4, 38, 7, 1, 12, 5, 8, 7, 8, 9, 6, 14, 9, 7, 1, 2, 6, 7, 7, 10, 9, 4, 2, 1, 1, 7, 3, 7, 3, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

