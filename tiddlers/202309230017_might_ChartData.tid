created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ttv Rodrigoapss", "Darkandshadow", "Elon Illusionblade", "Oo Dads Mad", "Jimbo The Pleb", "Seiker Novus Terra", "Lord Erin The Wise", "Black Raspberry Pie", "Deborah Draconnum", "Inquisitor Stryker", "Brutal Araden", "Klavde\u00efa", "Anita Strips", "Leafzely", "Budget Chicken", "Mimbsi", "Arriasa", "Glorious Gluvs", "Venomina The Sly", "Zaedy Zae", "Tegan Parker", "Gamora Titus", "Liu Mira", "Air One Com", "Koralia Danai", "Gavann", "High Sorcer Baradun", "Sub Train", "Mistwalker Cael", "Bella Sassy", "Drevarr Moonwillow", "Arcanophage Farra", "Grasszanine"];
const professions = ["Spellbreaker", "Virtuoso", "Chronomancer", "Berserker", "Berserker", "Tempest", "Weaver", "Chronomancer", "Firebrand", "Firebrand", "Herald", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Druid", "Berserker", "Druid", "Druid", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Herald", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.9936, 13.175, 2.8174, 6.2324, 2.2926, 12.983, 0.0, 1.6512, 0.0, 0.0, 2.2118, 0.0, 0.0], [0.4495, 7.6669, 15.6461, 6.4691, 3.5089, 0.688, 2.9988, 2.8063, 0.0, 3.616, 0.0, 3.7632, 3.2175, 0.0], [0.0, 4.3008, 4.1441, 5.014, 3.0467, 10.5336, 0.6141, 11.1798, 0.6149, 3.648, 5.146, 2.7783, 4.2509, 0.6749, 0.7181], [2.5141, 13.1222, 0.0, 10.5815, 2.9458, 0.0, 2.3696, 2.8084, 0.0, 0.0, 2.88, 0.0, 5.5776, 0.0, 1.8669, 7.3055, 5.6179], [0.0, 4.5706, 0.0, 4.7933, 3.119, 0.0, 0.0, 0.2675, 3.808, 0.0, 0.4805, 3.36, 0.0, 3.4272, 0.0, 0.0, 9.4676, 2.5456, 0.0, 15.8682, 5.5925, 0.4608, 0.785, 0.0, 5.3568, 0.0, 0.0], [8.7246, 40.3986, 0.0, 3.7985, 1.675, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6136, 0.0, 1.6988, 7.6276, 0.0, 0.0, 0.0], [0.0, 0.575, 4.3411, 4.7363, 3.2935, 4.8157, 0.952, 0.0, 0.0, 0.0, 0.0, 0.6048, 2.3681, 0.5867, 2.326, 10.4458, 0.0, 15.8682, 3.0158, 2.4576, 3.6632, 4.8422, 2.281], [0.0, 8.699, 0.0, 5.5168, 5.776, 0.0, 0.4586, 4.998, 0.0, 0.0, 4.128, 0.0, 3.6624, 1.7246, 0.0, 2.8501, 5.8813, 2.3745, 15.3272, 3.4843, 3.1104, 1.5264, 0.0, 3.0758, 0.0, 1.5629], [10.89, 48.3258, 1.2005, 10.4832, 1.0466, 7.1177, 3.9053, 1.705], [2.3144, 13.7119, 0.1232, 24.2379, 6.007, 7.2949, 0.0, 1.904, 0.0, 0.9322, 6.496, 0.0, 1.5469, 7.6658, 7.4613, 0.0, 1.6229, 0.8491, 0.96, 0.9594, 1.3495, 4.9075, 4.2624], [9.8679, 2.8174, 6.8468, 0.4503, 28.1299, 23.9218, 23.0016], [3.7838, 5.0932, 0.0, 0.0, 4.032, 10.0464, 5.8172, 5.8141, 10.6142, 14.747, 4.2578, 17.8517, 0.0, 3.8784, 2.0061, 3.969, 5.184], [0.0, 15.4812, 1.3006, 5.2455, 5.545, 3.4188, 3.4474, 0.0, 3.4272, 0.0, 0.0, 2.208, 0.0, 4.0992, 2.8829, 0.0, 4.2588, 3.0723, 4.0531, 18.2123, 4.8898, 2.7264, 2.573, 3.4927, 6.7738, 3.0902], [4.3124, 21.8211, 3.9701, 4.8838, 4.7363, 0.0, 3.1088, 6.3827, 11.186, 0.0, 0.0, 3.392, 0.0, 2.7216, 2.471, 1.9736, 1.8673, 3.5112, 8.2289, 10.4586, 3.6014, 1.3824, 5.7129, 0.5292, 1.728, 2.3088, 0.0], [0.79, 8.1061, 39.6704, 8.1691, 11.136, 15.3507, 8.573, 8.0525, 17.5114, 7.7088], [3.8556, 0.0, 8.096, 0.0, 11.6256, 7.0785, 15.842, 2.6208, 14.2204, 8.0652, 31.1954, 0.0, 4.3008, 14.7838, 7.8057, 3.2832, 4.1203], [0.0, 40.2511, 1.8892, 12.2998, 18.4254, 1.1389, 2.1403, 3.6652, 0.0, 9.28, 0.8712, 6.1488, 3.0631, 6.3866, 24.7038, 1.5226, 2.5728, 8.5912, 2.1168], [2.4476, 20.9365, 0.0, 16.8218, 18.7142, 0.0, 0.8003, 0.0, 5.2836, 0.0, 0.0, 12.0, 0.9346, 2.4864, 5.251, 5.8141, 6.4537, 16.8538, 1.9651, 31.556, 13.2346, 6.4512, 9.6814, 3.334, 0.0, 5.6477, 0.0], [3.996, 31.4047, 4.9147, 24.5092, 13.0538, 3.1396, 7.3765, 7.2828, 0.0, 0.0, 5.312, 0.0, 7.3584, 5.8172, 6.9342, 0.8845, 9.3047, 0.7779, 38.0475, 2.401, 7.9872, 11.2078, 1.2172, 3.6979, 1.2077, 1.753], [0.0, 39.3665, 2.7791, 11.7572, 7.3355, 3.2076, 7.4488, 15.2116, 4.4744, 0.0, 0.0, 3.584, 0.0, 7.7616, 3.3205, 3.8938, 6.1261, 13.5181, 6.4276, 36.4246, 1.991, 1.4208, 16.7026, 1.6141, 6.5318, 1.3142], [5.2447, 41.7255, 3.7784, 20.4394, 5.0829, 0.0, 0.0, 5.733, 0.0, 8.6184, 2.656, 0.0, 0.0, 3.2175, 3.3604, 18.3128, 0.0, 13.1417, 23.4416, 5.1533, 12.7488, 31.6172, 0.0, 2.592, 4.5466], [1.2488, 36.2702, 0.0821, 26.0467, 10.0502, 1.3992, 5.3249, 19.0336, 22.5148, 7.6874, 2.5082, 3.136, 4.7599, 6.4176, 4.9678, 5.0673, 1.1794, 17.4682, 5.8954, 37.8672, 0.937, 5.4912, 8.1115, 5.0274, 6.3245, 9.1642], [3.0803, 40.546, 6.3522, 27.4938, 18.8875, 2.904, 5.8482, 9.899, 15.0416, 0.0, 5.6218, 10.528, 4.2689, 9.5424, 10.991, 15.5753, 15.6593, 12.6403, 3.1524, 11.3602, 0.0, 8.7168, 12.298, 11.6689, 7.9834, 7.4947, 0.0], [0.0, 61.1876, 7.4063, 28.3982, 23.0462, 3.8544, 8.1259, 6.9943, 19.6588, 0.3267, 6.784, 2.772, 4.3008, 7.8507, 17.0155, 2.7846, 9.7436, 3.4799, 43.4571, 6.9686, 4.3776, 2.8783, 8.626, 5.5642, 4.0848, 2.9568], [0.999, 54.8477, 6.1468, 40.4267, 9.5882, 0.0, 4.9864, 21.1739, 8.1396, 0.0, 6.528, 2.0909, 2.2848, 8.0309, 9.0145, 6.3882, 20.365, 6.9189, 70.1445, 2.1374, 3.3408, 5.1896, 8.4937, 3.6979, 0.0], [0.0, 74.6046, 6.2837, 40.1554, 11.4365, 20.4687, 21.8236, 23.086, 9.408, 0.0, 10.6564, 14.0284, 5.3726, 25.3684, 0.0, 30.6544, 10.1016, 7.5648, 6.3671, 10.7957, 18.7315], [21.5951, 163.8058, 7.4474, 11.2146, 43.089, 45.3082, 49.5713, 31.8444, 19.2584, 0.1345, 6.816, 2.7737], [1.7649, 62.5146, 1.5743, 27.3129, 19.8694, 25.609, 12.8419, 21.182, 7.049, 2.6524, 9.408, 0.0, 9.1392, 11.686, 13.8684, 9.14, 13.3426, 7.4511, 81.8653, 10.3358, 13.6704, 4.1866, 16.8021, 16.1395, 9.5549, 0.0], [8.6747, 58.3862, 6.0647, 47.9332, 14.209, 6.6396, 11.5117, 17.1226, 20.4204, 8.7115, 4.8723, 12.192, 4.2847, 9.3744, 8.7516, 16.0553, 13.235, 36.8676, 13.1827, 60.7678, 8.9304, 12.9408, 15.9613, 13.6269, 13.3056, 5.1504, 4.7731], [3.33, 76.079, 5.5718, 46.2148, 18.3099, 3.8148, 9.5726, 19.9126, 15.47, 5.4264, 3.8921, 16.864, 2.075, 12.0624, 10.9138, 14.6152, 11.8919, 47.4012, 11.8317, 61.4891, 6.9686, 8.5632, 18.4906, 10.1606, 5.8406, 18.719, 5.4912], [7.3426, 89.791, 17.3315, 38.7988, 29.8619, 10.3488, 18.0986, 29.1619, 26.0848, 5.5062, 21.952, 1.9246, 22.3104, 14.3887, 22.9362, 13.1368, 61.1827, 10.7672, 87.8158, 13.2346, 20.6976, 22.7644, 14.4736, 13.513, 18.5059, 0.8237], [18.1319, 74.7521, 1.6702, 55.3493, 60.0704, 11.22, 17.8832, 30.92, 50.9796, 25.312, 5.9162, 19.5216, 20.4118, 10.1346, 9.959, 52.0535, 0.0, 99.717, 24.9173, 16.4352, 25.4682, 21.4855, 23.8118, 16.7654, 0.9293], [11.7216, 140.8052, 13.8817, 75.2461, 48.8072, 18.1602, 34.742, 37.2708, 8.4455, 28.256, 26.712, 24.4273, 39.1516, 25.258, 69.434, 35.495, 122.0766, 25.5322, 28.8768, 34.0158, 11.7218, 20.8397, 16.0906, 9.7786]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

