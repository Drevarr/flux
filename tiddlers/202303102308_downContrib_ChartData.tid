created: 20230310230833000
creator: Drevarr
modified: 20230705163521592
modifier: drevarr
tags: ChartData
title: 202303102308_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Nano", "Ace Hammers", "Xmus Jaxnflaxn Waxn", "Smol Gluvs", "Rozaalyna", "Kmpek", "K\u00f4sair", "Lord Erin The Wise", "Nimplet", "Cerys Fireblade", "Be\u00eb", "Legacy Of Mathus", "Demon Sekhmet", "Akira Moonbright", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Sofya De Nova", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Berserker", "Vindicator", "Holosmith", "Scourge", "Scourge", "Vindicator", "Berserker", "Weaver", "Scrapper", "Berserker", "Scourge", "Berserker", "Berserker", "Herald", "Berserker", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4605.0, 4117.0, 6155.0, 6334.0, 1490.0, 126433.0, 0.0, 20869.0, 2080.0, 2709.0, 0.0, 23136.0, 37.0, 498.0, 0.0, 0.0, 0.0, 1598.0, 1776.0, 11325.0, 21432.0, 27998.0, 14183.0, 10391.0, 18816.0, 1933.0, 0.0, 1247.0, 963.0], [48518.0, 70114.0, 25931.0, 6217.0, 28667.0, 137489.0], [0.0, 6108.0, 46446.0, 6989.0, 18324.0, 115851.0, 0.0, 15465.0, 8881.0, 0.0, 10221.0, 9592.0, 15630.0, 0.0, 70015.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11621.0, 58945.0, 22197.0, 8554.0, 12430.0, 11404.0, 5454.0, 1609.0, 1012.0, 9393.0], [0.0, 0.0, 45645.0, 14159.0, 19484.0, 1522.0, 12803.0, 36495.0, 2930.0, 25298.0, 14255.0, 835.0, 0.0, 0.0, 13495.0, 3946.0, 23941.0, 35008.0, 79400.0, 20426.0, 32118.0, 5138.0, 21712.0, 6816.0, 16670.0, 87767.0], [548.0, 25394.0, 33163.0, 10555.0, 9117.0, 147083.0, 0.0, 42565.0, 12471.0, 18406.0, 2887.0, 0.0, 18569.0, 3068.0, 15375.0, 4447.0, 144.0, 0.0, 246.0, 9059.0, 2702.0, 30394.0, 20255.0, 27468.0, 18807.0, 23856.0, 6236.0, 7020.0, 1997.0, 2383.0, 31254.0], [35390.0, 65939.0, 44821.0, 6890.0, 3436.0, 180093.0, 0.0, 30255.0, 2449.0, 6042.0, 3749.0, 18944.0, 11247.0, 0.0, 27387.0, 743.0, 0.0, 0.0, 0.0, 11600.0, 0.0, 29418.0, 31574.0, 31396.0, 15950.0, 34033.0, 0.0, 3168.0, 0.0, 13144.0, 53967.0], [46515.0, 55235.0, 25946.0, 3143.0, 435.0, 123076.0, 0.0, 4028.0, 9513.0, 22022.0, 3575.0, 42398.0, 6898.0, 61083.0, 4735.0, 0.0, 0.0, 4569.0, 2381.0, 11882.0, 55337.0, 58040.0, 2414.0, 68151.0, 19178.0, 13044.0, 0.0, 8772.0, 62300.0], [53835.0, 213123.0, 111566.0, 27332.0, 27894.0, 336523.0], [24651.0, 103919.0, 52144.0, 11407.0, 20328.0, 163240.0, 0.0, 89676.0, 2665.0, 22283.0, 5782.0, 7403.0, 40431.0, 15160.0, 29672.0, 3118.0, 5793.0, 0.0, 738.0, 43852.0, 9305.0, 14641.0, 0.0, 0.0, 39595.0, 26753.0, 46565.0, 243.0, 28974.0], [58821.0, 4679.0, 46878.0, 17942.0, 24707.0, 0.0, 0.0, 49257.0, 0.0, 82656.0, 83774.0, 139278.0, 67016.0, 75908.0, 67326.0, 37080.0, 1330.0, 44067.0, 108252.0], [9595.0, 78540.0, 57821.0, 24244.0, 30747.0, 187892.0, 7491.0, 73899.0, 24545.0, 1092.0, 9293.0, 3402.0, 33570.0, 0.0, 75986.0, 2208.0, 8208.0, 0.0, 0.0, 6218.0, 5086.0, 28179.0, 52414.0, 148069.0, 25995.0, 64915.0, 15398.0, 23298.0, 0.0, 8029.0, 37411.0], [49809.0, 64889.0, 72305.0, 26625.0, 19938.0, 320004.0, 0.0, 52094.0, 28065.0, 7898.0, 22797.0, 34195.0, 17690.0, 38498.0, 3784.0, 239.0, 0.0, 226.0, 19310.0, 1856.0, 53030.0, 69725.0, 61248.0, 33868.0, 49820.0, 24751.0, 18830.0, 0.0, 8685.0, 68132.0], [91565.0, 74832.0, 43767.0, 29890.0, 24365.0, 165113.0, 0.0, 47864.0, 8526.0, 38465.0, 14205.0, 19029.0, 4544.0, 5456.0, 131681.0, 5252.0, 4208.0, 0.0, 0.0, 20137.0, 2751.0, 31134.0, 69417.0, 106115.0, 42867.0, 45815.0, 39942.0, 35058.0, 1551.0, 6449.0, 117366.0], [122312.0, 68720.0, 66913.0, 23319.0, 16541.0, 485648.0, 614.0, 92931.0, 1968.0, 11720.0, 14527.0, 23437.0, 42799.0, 11018.0, 101511.0, 1998.0, 2325.0, 0.0, 25044.0, 10613.0, 61506.0, 52603.0, 91537.0, 35690.0, 37533.0], [49733.0, 75582.0, 71548.0, 33637.0, 47047.0, 466556.0, 3268.0, 89793.0, 15471.0, 38918.0, 0.0, 7403.0, 60208.0, 12586.0, 91818.0, 14945.0, 3520.0, 0.0, 0.0, 45450.0, 5570.0, 82509.0, 115451.0, 64105.0, 44275.0, 67262.0, 0.0], [29029.0, 107205.0, 80442.0, 31690.0, 20956.0, 355062.0, 0.0, 99471.0, 12240.0, 25682.0, 18254.0, 36473.0, 65942.0, 8687.0, 105860.0, 32157.0, 0.0, 0.0, 0.0, 38051.0, 0.0, 119533.0, 75298.0, 165499.0, 44923.0, 90751.0, 72687.0, 10880.0, 0.0, 1750.0, 110576.0], [46383.0, 114967.0, 20214.0, 29370.0, 19710.0, 643090.0, 4490.0, 134635.0, 18613.0, 53714.0, 1580.0, 9397.0, 55880.0, 12089.0, 60114.0, 6033.0, 0.0, 0.0, 3480.0, 28197.0, 2034.0, 88305.0, 90640.0, 156971.0, 72182.0, 86519.0, 69562.0, 30040.0, 0.0, 21569.0, 128407.0], [57174.0, 158472.0, 60949.0, 31947.0, 85580.0, 1068916.0, 2116.0, 193297.0, 24143.0, 24172.0, 24193.0, 26332.0, 51095.0, 29.0, 118013.0, 14698.0, 3323.0, 28959.0, 4357.0, 115283.0, 3893.0, 67953.0, 128585.0, 145103.0, 40449.0, 60985.0, 22258.0, 46536.0, 3743.0, 4640.0, 69332.0], [156933.0, 143654.0, 97805.0, 20527.0, 82765.0, 576625.0, 6023.0, 85319.0, 42502.0, 40992.0, 11575.0, 39657.0, 71800.0, 799.0, 102610.0, 15490.0, 5916.0, 0.0, 0.0, 48360.0, 6974.0, 130025.0, 172713.0, 145682.0, 98389.0, 148818.0, 109568.0, 29531.0, 0.0, 63038.0, 291175.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

