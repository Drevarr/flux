created: 20230204000024000
creator: Drevarr
modified: 20230705163518635
modifier: drevarr
tags: ChartData
title: 202302040000_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Nelliel T", "Sumatra Satyricon", "Rozaalyna", "Evil Stepmother", "Bella Sassy", "Seren\u00e1 Joy", "Fungus", "Demon Sekhmet", "Bambiae", "Veron Blackburn", "Grasszanine", "Blancoopadree", "Fribble Bibble", "Tyrisai", "P\u00efsc\u00efs", "Arcanophage Farra", "Kahless The Drunk", "Air One Com", "Daddys Lil Orchid", "Ryvalia Fazebringer", "Raven The Guard", "\u00c2 R K", "Palatine Of Ruin", "Ravioli Fetabringer", "Zady Stardust", "Koralia Danai", "Johosh The Great"];
const professions = ["Scourge", "Soulbeast", "Scourge", "Firebrand", "Firebrand", "Chronomancer", "Scourge", "Berserker", "Chronomancer", "Herald", "Spellbreaker", "Vindicator", "Scrapper", "Firebrand", "Soulbeast", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6412, 0.0, 0.0, 0.0, 0.0, 1.1466, 0.2318, 0.7762, 1.1404, 0.9739, 0.5452, 1.6317, 0.0, 0.99, 0.423, 1.5444, 1.3728, 0.682, 0.0, 1.8013, 1.6988, 0.0, 0.202, 0.0, 0.0, 0.3832, 0.7106, 0.0, 1.377], [1.4145, 1.4087, 1.1424, 1.3308, 1.152, 1.3406, 0.0, 1.4112, 1.3743, 0.0, 0.7269, 1.323, 0.0, 1.188, 2.8341, 0.0, 2.4253, 0.2728], [1.0562, 0.6321, 0.4872, 0.0, 1.637, 0.0, 0.6086, 0.0, 0.614, 0.0, 0.4932, 1.5435, 0.0, 2.376, 0.2961, 1.0296, 0.961, 1.364, 0.7813, 0.685, 0.7722, 0.869, 1.3913, 0.5222, 1.0086, 0.0, 0.3807], [3.9494, 11.0976, 3.5711, 2.5921], [4.5797, 3.9896, 4.5938, 2.2136, 7.9407], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.2966, 2.0722, 2.1818, 2.2651, 0.0, 1.122, 1.5667, 2.2081, 0.0, 4.4415, 1.5609, 3.213], [0.9807, 0.5057, 0.6552, 0.0, 0.869, 0.0353, 0.5506, 0.8467, 1.8714, 0.8441, 0.3894, 2.3373, 0.0, 0.3564, 0.9729, 1.9305, 1.5101, 0.8184, 1.189, 0.6596, 1.4414, 0.5861, 1.1669, 0.7834, 0.8723, 1.127, 1.6243, 0.0, 1.7442], [0.9053, 1.5351, 0.1344, 0.0, 0.9701, 1.7464, 1.0723, 1.3759, 1.8421, 2.6621, 0.3894, 1.4553, 0.0, 1.782, 1.9881, 3.0244, 2.7456, 1.9096, 1.0191, 1.37, 0.5663, 0.384, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.6352, 2.8644, 3.7027, 3.0698, 3.5521, 1.9806, 2.603, 7.1808, 0.0, 0.0, 0.0, 0.0, 0.0], [19.0618, 3.98, 1.961, 2.0812, 0.0, 5.3703], [1.6974, 0.7224, 0.1008, 0.0, 0.0, 1.5523, 1.0723, 2.1521, 3.0994, 1.5583, 0.675, 0.6615, 0.0, 2.0196, 1.4805, 2.1236, 2.9286, 2.4552, 1.4947, 1.1924, 2.1107, 0.2425, 0.5834, 0.0, 1.0359, 0.9016, 0.4568, 0.0, 1.6524], [0.0, 0.2348, 0.0336, 0.0, 0.0, 2.6813, 0.1449, 1.1995, 0.0292, 2.6621, 2.2845, 5.4684, 1.178, 3.4848, 3.0879, 5.2767, 0.5034, 4.092, 1.5286, 0.203, 0.4633, 1.0105, 2.5133], [0.4715, 0.0, 0.6216, 0.0, 0.9094, 0.8644, 0.6086, 1.4818, 2.0468, 3.5711, 1.2461, 2.3814, 0.0, 2.1384, 2.2842, 3.0888, 1.6931, 3.2054, 0.7813, 1.5222, 1.39, 0.7074, 0.9649, 6.3974, 1.1722, 0.8114, 1.1929], [0.2829, 0.3431, 0.0336, 0.2067, 0.3031, 0.3352, 0.029, 0.3881, 0.0, 0.4545, 0.1817, 0.3087, 0.4356, 0.3384, 0.5791, 6.1776, 3.2054, 2.4119, 2.2579, 4.6332, 1.2126, 1.7728, 0.0, 4.0345, 2.2315, 3.0456, 2.119, 5.0949], [0.0, 0.0, 1.2264, 0.0, 1.253, 0.0, 0.0, 1.4112, 1.4328, 0.0, 0.7009, 1.4112, 2.6136, 2.8341, 3.9897, 4.1184, 4.7058, 1.4267, 1.37, 2.8314, 0.9701, 1.3688, 4.1779, 2.1808, 1.42, 0.5584, 1.4095, 1.4229], [1.5088, 1.499, 0.0, 0.0, 1.6774, 1.6405, 1.5939, 1.7287, 0.0, 0.4545, 1.5836, 1.9404, 0.0, 2.97, 1.692, 4.3115, 2.8371, 2.3188, 0.8493, 0.0, 3.3977, 1.3945, 1.0771, 3.1334, 1.9355, 1.3975, 3.1979, 0.0, 1.3311], [0.1886, 0.1987, 0.0, 0.0, 0.8084, 1.1819, 0.8114, 2.0462, 3.2456, 0.3896, 1.5057, 2.4696, 0.19, 2.5344, 5.2875, 3.9897, 3.2947, 4.1602, 3.5668, 3.5264, 2.9344, 0.2425, 3.5006, 3.1334, 2.9986, 2.8851, 2.3096, 0.1892, 1.4229], [1.3391, 0.8127, 0.8736, 0.0, 1.6774, 1.4994, 0.9274, 3.1046, 0.7602, 5.2593, 2.6479, 2.1609, 0.0, 4.752, 3.8916, 5.2767, 3.2032, 3.1372, 3.2951, 3.6533, 2.677, 1.8189, 1.4137, 2.089, 1.7719, 1.3299, 2.9441, 1.4229], [0.0754, 1.4087, 2.2512, 1.124, 0.2021, 1.764, 2.8948, 9.0902, 0.4673, 2.0286, 0.0, 7.326, 3.7224, 6.6924, 3.249, 4.9786, 0.4076, 1.5729, 1.7503, 0.384, 1.0322, 14.1005, 1.7446, 0.0902, 1.0152, 0.0, 1.7901], [2.018, 1.7518, 0.7896, 0.0, 3.2538, 2.5931, 2.6662, 2.1168, 0.4678, 0.0, 1.6355, 1.6317, 0.0, 4.1184, 5.3721, 0.4505, 5.3082, 2.7962, 4.552, 2.4863, 8.5972, 4.4462, 3.4558, 3.5251, 3.353, 0.6086, 1.9035, 1.7879, 2.9835], [3.4839, 2.2496, 11.088, 5.8374, 6.3063, 9.6554, 4.5012, 5.9108, 4.3129, 4.9936, 3.9612, 4.1065, 8.8781], [3.8474, 3.7023, 2.0496, 0.0, 2.506, 2.646, 3.6805, 5.965, 0.0, 2.4143, 3.7926, 2.6532, 5.7951, 5.4698, 8.008, 6.0016, 2.8195, 3.3462, 2.405, 2.9172, 4.439, 5.2884], [3.6805, 6.809, 2.1345, 2.7271, 3.5825, 2.9106, 1.178, 8.2368, 7.6563, 6.1132, 5.4454, 8.525, 5.9787, 3.222, 6.8983, 3.9005, 3.2314, 6.2669, 4.1708, 3.2683, 2.6395, 0.8041, 4.7277], [2.4143, 5.3802, 1.064, 1.3068, 10.5327, 10.7464, 12.1264, 8.5932, 7.881, 5.7336, 8.6486, 5.295, 4.4656, 6.6586, 6.6787, 3.0204, 5.2029, 0.0757, 5.4162], [2.7536, 3.9913, 1.2936, 2.5465, 4.7804, 3.6805, 7.0207, 10.117, 11.6874, 2.8816, 2.8665, 3.1236, 4.3956, 9.6444, 8.5586, 13.2246, 9.207, 6.9638, 4.1353, 5.251, 2.5263, 4.7573, 9.1392, 5.2612, 3.5388, 5.9389, 2.5826, 7.9866], [3.2628, 3.323, 2.184, 3.4559, 5.292, 3.7384, 3.3516, 4.386, 9.4798, 2.3883, 4.5864, 0.0, 9.9792, 9.1368, 8.816, 10.0214, 12.958, 6.0127, 4.5666, 10.193, 5.0525, 3.0294, 15.6672, 2.3716, 3.4937, 6.1927, 2.3461, 8.4915], [4.3189, 3.4495, 2.8896, 3.1008, 3.7186, 5.0627, 3.3037, 7.6558, 7.5147, 8.7655, 3.7902, 5.6007, 2.1204, 9.7812, 10.9134, 9.6525, 11.44, 11.3212, 6.2505, 6.0381, 9.1634, 4.6281, 4.3758, 10.967, 5.9154, 4.1023, 5.7866, 2.1663, 6.426]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

