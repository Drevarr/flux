created: 20230701000406000
creator: Drevarr
modified: 20230705163540042
modifier: drevarr
tags: ChartData
title: 202307010004_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Zayde Sunsabre", "Traidoruns Maximus", "Brad Bellick", "Tribal S", "Air One Com", "Waffalini", "Smol Daddy Tika", "Sumatra Satyricon", "Drumina", "Sakis Ranger", "K\u00f4sair", "Mistwalker Cael", "Mike The Archmagus", "Pale Pam", "Ak\u00e1nt\u00f3r", "Sister Elonith", "Ima Lou", "Demon Staph", "Lucky Leipreach\u00e1n", "Xanvias Einzbern", "Dingle Mcbingle", "Fluffy No Care Bear", "Be\u00eb", "Blancooo Padreee", "Klengah", "Zefirokai", "Broken Cheese", "Koralia Danai", "Arcanophage Farra", "Morv\u00e4rth", "Gavann", "Arriasa", "Lord Erin The Wise", "Tegan Parker", "Morton Saltbringer", "Mike The Archmagus", "Gamora Titus", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Newtype Khan", "Duke Silvver", "Gestern Yesteryear", "Xyntharos", "Kary\u00edna", "Solus Sanctus", "Melli Dragonswrath", "Johosh The Mighty", "Aronorf Xideliesi", "Mmathuss", "Smol Gluvs"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Druid", "Firebrand", "Holosmith", "Berserker", "Soulbeast", "Druid", "Druid", "Berserker", "Vindicator", "Tempest", "Druid", "Druid", "Berserker", "Druid", "Druid", "Scrapper", "Berserker", "Firebrand", "Berserker", "Scourge", "Berserker", "Druid", "Catalyst", "Chronomancer", "Firebrand", "Spellbreaker", "Reaper", "Firebrand", "Druid", "Weaver", "Tempest", "Chronomancer", "Weaver", "Firebrand", "Scrapper", "Chronomancer", "Spellbreaker", "Vindicator", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 1, 1, 2, 0, 0, 0, 1, 0, 5, 1, 2, 0, 3, 1, 1, 1, 0, 1, 6, 5], [2, 1, 3, 1, 2, 1, 3, 1, 1, 0, 4, 1, 0, 0, 2, 2, 1, 1, 0, 0, 3, 4], [8, 4, 5, 2, 7, 3, 2, 2, 3], [3, 2, 0, 4, 2, 4, 2, 0, 1, 4, 9, 3, 0, 2, 0, 1], [2, 3, 2, 2, 0, 1, 1, 2, 2, 1, 2, 4, 1, 0, 4, 1, 4, 1, 0, 0, 5, 4], [2, 2, 2, 4, 1, 0, 1, 1, 0, 2, 4, 0, 1, 2, 1, 5, 1, 0, 2, 2, 2, 8], [6, 4, 17, 0, 0, 0, 4, 10, 2], [0, 2, 6, 1, 1, 1, 1, 0, 3, 4, 5, 0, 0, 1, 1, 3, 3, 0, 2, 5, 5], [3, 3, 6, 4, 2, 1, 1, 4, 3, 0, 2, 0, 1, 1, 1, 5, 2, 3, 0, 2, 4], [8, 1, 3, 3, 5, 5, 5, 6, 1, 5, 7], [3, 1, 2, 2, 0, 0, 0, 1, 5, 3, 5, 3, 1, 0, 3, 1, 4, 4, 0, 2, 4, 7], [4, 4, 4, 3, 3, 2, 5, 5, 5, 4, 0, 0, 3, 9], [7, 4, 6, 7, 9, 2, 5, 4, 4, 4], [2, 6, 17, 27], [6, 3, 7, 7, 2, 3, 4, 6, 3, 5, 7], [6, 4, 2, 4, 1, 0, 0, 0, 3, 4, 5, 4, 1, 1, 3, 1, 0, 3, 0, 0, 6, 7], [4, 5, 4, 5, 5, 0, 3, 5, 24], [3, 5, 8, 5, 3, 3, 4, 6, 4, 3, 9, 3], [4, 4, 6, 3, 5, 1, 1, 2, 3, 3, 6, 4, 4, 1, 2, 2, 2, 7], [2, 2, 1, 3, 1, 2, 0, 0, 1, 2, 11, 2, 1, 1, 2, 2, 4, 1, 4, 10, 8], [5, 3, 1, 3, 1, 1, 1, 1, 5, 0, 9, 6, 2, 1, 3, 4, 3, 2, 0, 2, 1, 7], [2, 4, 3, 5, 2, 2, 4, 5, 4, 5, 4, 1, 6, 15], [5, 6, 3, 5, 5, 3, 0, 2, 10, 23], [2, 4, 3, 3, 0, 2, 2, 4, 3, 7, 3, 2, 1, 4, 2, 4, 4, 0, 1, 6, 6], [4, 0, 1, 2, 2, 3, 5, 1, 3, 3, 3, 3, 1, 3, 5, 2, 1, 4, 1, 2, 5, 9], [4, 2, 1, 1, 2, 1, 1, 3, 2, 2, 11, 3, 2, 1, 3, 2, 3, 0, 0, 2, 8, 9], [4, 2, 2, 2, 5, 1, 4, 2, 1, 3, 8, 3, 1, 2, 5, 0, 5, 5, 0, 1, 9], [4, 3, 1, 6, 3, 0, 2, 1, 4, 2, 9, 3, 3, 4, 5, 3, 0, 1, 10, 2], [6, 2, 5, 5, 2, 1, 1, 0, 2, 1, 10, 5, 3, 2, 5, 4, 5, 3, 0, 2, 1, 3], [3, 1, 5, 3, 3, 3, 4, 1, 1, 3, 2, 5, 3, 0, 2, 6, 3, 5, 4, 7, 8], [3, 3, 5, 4, 2, 0, 1, 2, 4, 1, 10, 1, 1, 1, 3, 6, 2, 6, 0, 1, 3, 13], [5, 2, 6, 4, 3, 17, 3, 3, 1, 3, 0, 3, 2, 4, 6, 11], [2, 2, 3, 2, 2, 2, 4, 3, 2, 3, 8, 2, 2, 0, 6, 1, 3, 1, 1, 2, 11, 14], [5, 1, 1, 5, 3, 0, 6, 4, 3, 1, 3, 4, 3, 2, 4, 6, 5, 5, 0, 3, 12], [2, 1, 3, 4, 3, 2, 3, 3, 2, 1, 9, 1, 0, 1, 2, 4, 1, 5, 0, 1, 10, 19], [5, 3, 3, 4, 0, 2, 2, 0, 3, 2, 4, 4, 1, 6, 6, 1, 3, 1, 2, 9, 18], [6, 1, 4, 4, 3, 4, 5, 2, 4, 2, 24, 3, 6, 4, 2, 6, 4, 4], [4, 5, 0, 1, 3, 0, 1, 5, 15, 3, 3, 2, 4, 4, 2, 5, 0, 1, 12, 18], [3, 2, 4, 3, 2, 0, 1, 2, 2, 3, 11, 6, 1, 2, 7, 3, 3, 5, 0, 5, 10, 16], [6, 3, 6, 7, 4, 2, 2, 3, 3, 4, 6, 4, 4, 3, 3, 4, 5, 2, 1, 3, 7, 11], [2, 2, 4, 5, 0, 1, 6, 5, 3, 1, 12, 4, 2, 3, 2, 7, 2, 1, 0, 2, 9, 24], [2, 3, 1, 5, 4, 1, 7, 4, 7, 4, 7, 3, 5, 7, 6, 1, 5, 2, 0, 14, 10], [5, 4, 4, 5, 3, 3, 3, 4, 3, 2, 15, 5, 3, 2, 6, 8, 6, 4, 0, 2, 6, 9], [5, 3, 3, 4, 6, 2, 4, 5, 5, 4, 17, 5, 8, 6, 7, 10, 1, 8], [4, 3, 4, 5, 3, 2, 4, 3, 4, 4, 17, 6, 8, 4, 5, 2, 3, 5, 1, 4, 5, 10], [3, 1, 3, 4, 5, 2, 3, 3, 2, 3, 12, 4, 2, 5, 2, 3, 6, 4, 1, 6, 11, 23], [1, 2, 5, 4, 5, 2, 4, 4, 4, 4, 14, 4, 4, 3, 7, 3, 3, 7, 0, 7, 9, 12], [6, 5, 8, 3, 5, 1, 2, 4, 3, 4, 7, 5, 2, 3, 8, 8, 2, 8, 0, 3, 7, 14], [7, 3, 7, 6, 5, 3, 3, 2, 5, 8, 12, 5, 2, 3, 3, 6, 4, 5, 4, 6, 13], [7, 3, 2, 4, 2, 2, 2, 4, 5, 7, 14, 4, 3, 6, 6, 7, 3, 6, 2, 4, 8, 12], [4, 3, 4, 7, 2, 3, 6, 3, 3, 3, 15, 5, 7, 3, 4, 2, 6, 6, 0, 4, 13, 26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

