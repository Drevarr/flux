created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Morv\u00e4rth", "Whip \u00d1 Sl\u00e0pper", "Gestern Yesteryear", "Jerryatric Reflexes", "Smol Gluvs", "Surethang Smarts", "Jakeki", "Charr Surethang", "Jerryatric Reflexes", "Dinah M\u00f3e Humm", "Luke The Ghastly", "Audra Storm", "Free H\u00e4nd", "Trodek", "Legoh Brave", "Darth Sies", "World Devourerer", "Suredude", "Jimbo The Pleb", "Elonith Requiem", "Drevarr Moonwillow"];
const professions = ["Reaper", "Tempest", "Firebrand", "Berserker", "Reaper", "Holosmith", "Berserker", "Berserker", "Spellbreaker", "Dragonhunter", "Scourge", "Weaver", "Renegade", "Scrapper", "Tempest", "Willbender", "Guardian", "Weaver", "Berserker", "Reaper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1782.9348, 1105.1429, 1018.1594, 454.6373, 234.6], [292.5172, 274.1018, 183.7143, 0.0, 314.7667, 0.0, 81.4554, 100.5, 179.541, 75.9718, 97.4943, 395.7966, 404.6076, 80.1341, 351.0652, 90.8333, 46.6087, 29.3922, 27.9524, 25.2857, 16.1071, 109.3659, 129.9231, 119.2308, 0.0], [165.9277, 168.6639, 533.6, 99.3142, 58.7931, 124.5228, 74.1429, 123.2609, 119.7278, 120.3916, 257.75, 256.1509, 205.9426, 193.7324, 328.2414, 1.7288, 48.1139, 152.4146, 456.587, 73.3095, 92.8116, 68.2843, 62.5571, 82.5179, 102.0488, 96.8077, 36.0256, 18.4444, 10.2121], [1818.3393, 1774.5976, 226.1538, 316.875, 267.7949, 455.8519, 3507.5152], [54.5722, 229.9301, 505.3661, 1814.9906, 980.8852, 361.0211], [1984.1552, 396.7719, 964.3459, 847.1222, 0.0], [1683.3095, 3412.2174, 1270.2059, 812.6667, 44.5143], [5693.8478, 2351.25, 641.5392, 0.0, 2279.1818], [527.6541, 201.8261, 478.8444, 6.6503, 252.125, 546.5283, 691.6803, 535.9014, 384.5287, 20.6271, 451.7089, 771.8537, 1095.413, 165.631, 58.2174, 41.8333, 159.7619, 114.0714], [1032.7744, 270.913, 2155.4667, 140.3986, 711.5625], [548.1607, 858.1981, 761.5902, 901.1549, 490.2644, 0.0, 537.0759, 115.2439, 1714.5217, 396.7738, 783.2754, 113.0588, 83.0714, 158.7], [3144.619, 3722.8261, 902.5196, 1195.5429], [688.2787, 618.7676, 611.6437, 596.9322, 1043.5949, 624.2561, 1387.4565, 393.8333, 89.5952, 491.5429, 85.0893, 1390.0244, 981.6923, 99.9167, 266.1795, 399.1111], [720.1444, 1656.4266, 524.2411, 952.2264, 357.8279, 840.7324, 473.5057, 83.1864, 635.3038, 1059.939, 1924.5217], [0.0, 893.9426, 810.8239, 927.9195, 304.8305, 1294.2152, 502.9146, 998.3043, 867.369, 357.7826, 356.8529, 593.8143, 1507.7679, 2138.2683, 657.0, 0.0], [217.972, 585.7143, 1824.7358, 1935.6475, 2006.7042, 1269.5287, 123.7288, 1568.2658, 0.0, 2397.1522, 327.131, 845.3043, 295.7059, 203.7857, 91.7286, 209.2857, 1602.0, 375.5, 111.7917, 246.8974, 138.3704, 201.8485], [2290.0723, 5503.3279, 8154.15, 1320.6351], [929.8774, 1874.418, 4032.0775, 3472.8391, 408.0508, 2529.2532, 2488.4512], [1647.7069, 804.7193, 1438.8797, 555.8261, 1137.65, 859.7902, 3350.3393, 636.0849, 1065.4262, 780.2394, 774.6207, 1536.3924, 1300.9512, 0.0, 1215.0476, 1128.8986, 715.4118, 1266.5, 533.8286, 1611.4286, 736.2439, 1028.0385, 132.75, 719.0, 135.1111], [1982.8675, 530.0492, 1977.075, 1611.1081, 1355.9828, 2023.4105, 721.9699, 766.3043, 2436.35, 1187.8462, 2643.875, 1674.717, 2479.4016, 983.8732, 1339.5172, 1994.4783, 2109.9524, 1878.2609, 1535.8627, 416.2857, 713.7, 1436.4821, 3040.6951, 1295.1923, 338.0417, 591.0769, 586.2222], [2173.0964, 1916.2377, 3035.45, 2074.7635, 1426.3276, 2065.2281, 2271.7895, 843.6957, 2232.3889, 2430.0979, 1479.1964, 2038.1132, 3393.7705, 3856.2676, 2081.6322, 1025.7966, 2062.0633, 3481.2927, 0.0, 1786.8929, 2853.6667, 1720.8922, 55.881, 988.2143]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

