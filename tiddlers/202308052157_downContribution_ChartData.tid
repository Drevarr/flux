created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Crabbedmermaid", "Melody Phoenixstorm", "Aira Draugr", "One Bad King", "Minnie Darley", "Eaffi", "Frozen Impaler", "One Bad King", "Rahani Sunray", "Leto Warr", "Daphne Agla\u00e9", "Newtype Khan", "Vee Nemesis", "Rina Of Theros", "Avalanche", "K H I T H", "Civil Rules", "Lord Erin The Wise", "Jimbo One Eye", "Vee Usagi", "Rina Of Theros", "Be\u00eb", "Blancooo Padreee", "Revitiel", "Galrath Doomdragon", "Cedryn X", "Permanent Dawn", "Glorious Gluvs", "Legacy Of Mathus", "Kosair", "K\u00e1 Otik", "Be\u00eb", "Xanvias Einzbern", "Keypek The Drunk", "Mistwalker Cael"];
const professions = ["Scrapper", "Dragonhunter", "Scrapper", "Herald", "Dragonhunter", "Dragonhunter", "Tempest", "Reaper", "Guardian", "Chronomancer", "Berserker", "Scourge", "Spellbreaker", "Chronomancer", "Reaper", "Berserker", "Dragonhunter", "Berserker", "Weaver", "Scrapper", "Reaper", "Scourge", "Reaper", "Berserker", "Vindicator", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Dragonhunter", "Vindicator", "Scourge", "Berserker", "Scrapper", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.0861, 16.8632, 36.2857, 8.3905, 10.0405, 0.0, 10.1717, 0.0, 18.8442, 80.4255, 31.7647, 14.6074, 15.767, 3.8276, 72.7971, 22.8491, 28.2625, 42.9679, 71.5526, 0.0, 4.3167], [162.7347, 55.2571, 532.7353, 14.0148, 230.4151], [0.0, 141.0579, 224.1224, 79.9333, 0.0, 30.7172, 0.0, 105.9351], [222.8742, 22.1474, 87.9184, 123.4, 0.0, 22.075, 45.7374, 0.0], [88.6552, 169.8261, 10.0755, 126.5219, 0.0, 0.0, 0.0, 44.2583], [0.0, 0.0, 39.581, 0.0, 0.0, 35.9351, 107.8298, 0.0, 0.0, 18.5243, 48.8448, 78.0, 0.0, 75.3063, 145.6987], [0.0, 78.7281, 326.9167, 0.0, 0.0, 0.0], [0.0, 205.9394, 0.0, 85.4026, 610.0638, 0.0, 60.1407, 236.4493], [112.2041, 77.1048, 53.3919, 44.9293, 0.0, 271.1039, 133.4681, 0.0, 49.5259, 244.5922], [11.702, 26.6368, 160.6327, 63.5619, 1.973, 11.8, 51.2929, 0.0, 102.4935, 37.0638, 0.0, 8.0963, 41.2233, 54.9655, 5.2029, 0.0, 82.8563, 88.4615, 0.0, 3.5], [0.0, 193.3673, 21.2286, 0.0, 0.0, 25.2626, 0.0, 90.5584, 46.5319, 60.7353, 18.9704, 12.9612, 49.8621, 314.3768, 79.5472, 89.8469, 0.0, 16.1842, 0.0, 0.0], [165.3775, 35.0526, 168.6531, 63.1429, 30.9595, 18.375, 42.3131, 0.0, 24.6234, 351.1064, 0.0, 0.0, 21.1845, 0.0, 53.3269, 125.1842, 14.2394, 22.1083], [83.6291, 59.8, 13.8776, 48.581, 19.0, 0.0, 76.9798, 0.0, 87.2338, 13.5319, 29.5588, 3.0963, 75.7087, 45.8103, 8.6957, 189.1698, 58.5531, 37.6795, 249.5789, 9.7535, 8.2583], [65.3576, 134.7053, 180.551, 114.6286, 67.0135, 18.625, 127.1313, 0.0, 226.7792, 332.7447, 52.0588, 5.4], [179.2464, 126.9623, 113.6469, 411.75, 274.8684, 37.8169, 0.0], [114.6377, 46.9057, 307.5969, 61.859, 0.0, 146.1417], [269.0397, 33.3368, 424.1633, 216.5143, 104.9865, 115.775, 0.0, 0.0, 327.5714, 516.1702, 93.5882, 0.237], [530.2766, 0.0, 75.6296, 151.8738, 0.0, 19.913, 138.2264, 108.5969, 309.9615, 333.9474, 0.0, 39.9583], [442.3046, 354.6632, 309.0816, 156.1619, 0.0, 0.0, 150.3232, 0.0, 26.9351], [0.0, 310.3265, 334.0286, 1.7838, 0.0, 102.4242, 0.0, 704.5714, 480.4894, 371.6471, 102.3185, 339.8738], [662.3333, 119.3585, 249.6219, 323.7949, 178.4211, 0.0, 84.6333], [200.0199, 211.4737, 324.3265, 110.6571, 14.2297, 12.7, 105.5152, 0.0, 235.6753, 797.6596, 76.4706, 57.9926, 245.1553, 138.8448], [727.971, 11.9434, 296.2719, 440.2436, 74.0789, 19.0211, 0.0], [51.1457, 85.0579, 146.6531, 103.1333, 31.4324, 9.65, 80.1616, 0.0, 226.987, 212.3617, 212.7353, 124.2667, 211.3204, 35.6034, 66.4348, 109.566, 131.7312, 235.6538, 76.1053, 8.6901, 0.0], [128.4768, 92.4, 42.551, 69.9619, 64.9324, 16.8283, 0.0, 18.026, 416.0213, 220.7059, 46.6, 110.5825, 27.4483, 78.0, 126.2642, 199.8969, 225.4808, 0.0, 0.0, 116.3], [247.5298, 216.4368, 218.3265, 268.4952, 29.2838, 0.0, 50.4935, 817.6383, 0.0, 0.0, 256.6214, 264.4744, 12.2632, 34.493, 0.0], [41.5033, 82.0368, 117.3469, 88.0571, 0.0, 31.025, 118.7677, 0.0, 56.026, 833.3404, 0.0, 15.6, 127.9417, 65.931, 21.5652, 74.3585, 250.7625, 256.6346, 0.0, 9.831, 16.225], [753.8808, 136.0105, 111.5102, 194.1429, 0.0, 284.7071, 111.2857, 96.6809, 139.4118, 11.5037, 440.0583, 178.4655, 0.0], [131.0265, 185.9263, 31.6531, 160.381, 0.0, 10.925, 85.7172, 0.0, 409.4935, 284.7021, 416.2647, 0.0, 155.068, 54.5862, 186.8406, 0.0, 161.1156, 231.1859, 177.8684, 0.0, 35.7333], [111.5894, 168.7053, 270.2449, 277.5238, 91.0541, 61.575, 108.5051, 0.0, 349.5195, 171.8723, 195.5, 0.0, 130.466, 78.0172, 146.7246, 61.2563, 361.6282, 228.0, 24.4507, 52.1583], [0.0, 293.2078, 894.0, 0.5, 110.8963, 481.1942, 95.4138, 355.7101, 9.3774, 421.5281, 475.1923, 0.0, 0.0, 7.65], [200.457, 150.8895, 0.0, 181.7714, 0.0, 47.1, 107.2323, 0.0, 634.7792, 772.8298, 178.8824, 75.3556, 310.6602, 197.8276, 183.029, 11.9623, 220.0969, 361.7436, 131.5263, 16.993, 24.7917], [603.8079, 404.5105, 554.0204, 457.1238, 47.9054, 0.0, 344.4141, 0.0, 769.5714, 621.1489, 58.3529, 118.6296, 281.6408, 67.5862], [1089.6026, 489.4, 1264.3061, 36.4095, 0.0, 0.0, 28.3838, 1209.7922, 384.8936, 0.0, 163.5778, 1019.0], [205.1523, 554.1684, 262.449, 300.6, 303.2838, 59.45, 419.3434, 0.0, 432.5065, 1560.2766, 375.1176, 310.4667, 871.0388, 28.4655, 534.1594, 204.6981, 439.3906, 369.3718, 417.7632, 0.0, 79.6167], [469.4437, 613.9263, 1651.6327, 218.1429, 60.8919, 102.0, 420.0202, 0.0, 883.2597, 1408.6596, 316.7059, 137.6963, 1066.2816, 454.7931, 518.1739, 152.4906, 446.3656, 441.6923, 48.5704, 14.8083]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

