created: 20230520220730000
creator: Drevarr
modified: 20230705163531107
modifier: drevarr
tags: ChartData
title: 202305202207_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Lavitz Elite", "Ryvalia Fazebringer", "Belvyn Brightblade", "Red Omega Red", "Venomina The Siren", "Tegan Parker", "Black Raspberry Pie", "Pedro O Mago Preto", "Artakama Nahid", "La Morte Vivante", "High Sorcer Baradun", "Crusader Siolith", "Grasszanine", "Tika Mi", "Gabe Malhorn", "Sub Train", "Alnerian", "Drevarr Moonwillow", "Sygaldry Verdandi", "Blanco Padre Guard", "Aronorf Xideliesi", "Koralia Danai"];
const professions = ["Catalyst", "Berserker", "Chronomancer", "Firebrand", "Herald", "Weaver", "Tempest", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Guardian", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[285.3215, 0.0, 0.0, 18.585, 0.0, 0.0, 0.0, 9.6131, 0.0, 0.0, 149.7226, 40.608, 120.6279, 0.0, 45.4377, 104.7107, 0.0, 140.262, 0.0, 18.1157, 217.3036, 110.5299, 43.8497, 71.3507], [449.886, 27.8766, 299.2302, 106.2576, 67.5444, 124.7239, 4.968, 41.1921, 58.3649, 97.6536, 106.9119], [90.8621, 33.2716, 99.3401, 43.3898, 0.0, 0.0, 0.0, 193.8044, 0.0, 0.0, 37.7906, 0.0, 526.8211, 39.777, 0.0, 0.0, 294.7943, 0.0, 0.0, 0.0, 43.941, 10.7612, 60.2408, 130.0471, 0.0, 0.0, 0.0, 0.0, 0.0, 42.4242, 0.0, 24.5124, 0.0], [471.0523, 128.3625, 0.0, 49.8326, 0.0, 0.0, 0.0, 0.0, 0.0, 404.8988, 31.9668, 717.408, 228.5845, 8.0652], [94.9698, 50.49, 72.959, 177.0186, 12.4542, 623.322, 24.1084, 61.9573, 562.6746, 0.0, 0.0, 319.9995, 72.6624, 22.5108, 62.5015, 0.0, 15.3364], [128.4948, 133.1547, 30.9616, 73.9683, 34.1776, 12.6464, 0.0, 58.0345, 33.8982, 0.0, 176.4759, 71.8488, 600.457, 0.0, 10.0505, 57.4695, 0.0, 0.0, 213.8908, 8.721, 228.435, 104.7338, 36.8724, 79.1856, 0.0, 32.2326, 75.1055, 42.6666, 19.1808, 0.0, 26.6305, 71.9928, 20.3895], [164.5535, 114.3967, 0.0, 84.8467, 0.0, 82.5387, 0.0, 57.9554, 0.0, 36.6919, 213.0667, 75.1332, 593.689, 15.8841, 50.2317, 149.711, 0.0, 39.9076, 162.4932, 10.0674, 274.413, 0.0, 69.1746, 235.2726, 0.0, 168.6078, 51.17, 144.2994, 0.0, 83.102, 15.9588, 75.1752], [156.1112, 300.5394, 0.0, 41.3826, 14.186, 0.0, 1.1628, 45.9292, 0.0, 510.9518, 293.0867, 41.6568, 259.6205, 85.0268, 33.9772, 32.2178, 0.0, 34.9919, 35.7549, 61.6284, 540.096, 71.3241, 59.6204, 146.6456, 0.0, 3.9762, 34.5307, 37.4731, 0.0, 27.7056, 9.652, 0.396, 95.742], [137.3664, 155.6096, 0.0, 74.786, 104.6484, 36.3252, 0.0, 71.208, 78.1671, 145.0811, 211.3871, 115.872, 1668.9888, 252.5442, 135.0611], [289.4711, 157.3895, 15.6148, 49.6591, 0.0, 17.2602, 0.0, 88.1397, 2.1461, 133.048, 305.0837, 0.0, 705.767, 39.0429, 25.3744, 12.1905, 11.3546, 32.3077, 207.506, 53.3052, 445.23, 0.0, 282.6317, 0.0, 68.3568, 121.7966, 173.7026, 29.16, 65.8674, 13.7063, 23.1264, 162.1409], [340.295, 195.348, 20.9075, 132.8765, 34.9166, 61.0256, 172.5492, 25.551, 804.324, 223.1902, 87.89, 446.0281, 0.0, 116.0712, 16.5911, 411.485, 29.7864, 10.9557, 90.0581, 149.886, 350.788], [232.3782, 28.4794, 92.9578, 60.0419, 74.6528, 14.8961, 60.9889, 107.8406, 0.0, 255.5215, 464.4039, 361.1405, 93.9699, 35.9005, 15.3833, 0.0, 24.0933, 447.8937, 78.03, 715.86, 115.203, 22.4585, 294.9664, 0.0, 122.8862, 11.5128, 60.5394, 44.8644, 67.914, 161.9635], [683.9702, 69.6238, 21.8753, 20.3692, 9.0364, 34.1899, 0.0, 14.2416, 0.0, 71.4239, 218.3454, 10.608, 562.0147, 30.1665, 18.0536, 302.6727, 60.3636, 41.6216, 783.2553, 40.4838, 360.258, 0.0, 63.653, 312.0217, 9.165, 101.8584, 0.0, 33.4781, 5.5944, 59.1075, 18.1104, 186.0012, 284.5665], [366.3104, 174.1622, 70.8145, 20.4931, 0.0, 0.0, 29.7096, 71.0756, 55.0606, 366.6283, 135.8436, 401.207, 144.6923, 0.0, 109.3081, 0.0, 419.4814, 0.0, 847.392, 109.0717, 31.6818, 303.7986, 0.0, 13.1976, 12.1363, 142.1421, 0.0, 182.4174, 47.5604, 122.6808, 250.9682], [305.211, 173.0669, 137.975, 79.8412, 3.0996, 98.1593, 0.0, 71.6827, 2.3327, 90.6586, 299.5651, 108.1608, 593.9597, 93.5695, 49.9422, 96.5952, 0.0, 143.5249, 476.4657, 89.1684, 616.338, 4.2544, 69.4021, 315.8287, 112.2642, 109.7807, 268.3841, 62.3592, 172.7271, 89.5436, 54.0936, 206.1113], [238.8177, 178.6897, 104.1348, 788.0439, 29.8962, 1279.236, 182.1476, 152.4323, 1073.574, 258.2838, 95.6698, 216.9285, 137.592, 109.7568, 11.2984, 194.4756, 472.5931], [898.7483, 273.2239, 0.0, 123.9248, 45.674, 149.9526, 55.5431, 229.3293, 38.0838, 41.3866, 342.7543, 86.1696, 1014.1171, 350.7854, 260.4439, 165.2683, 106.3432, 0.0, 722.1209, 261.2628, 816.546, 0.0, 0.0, 525.2137, 0.0, 218.1834, 113.4409, 244.1744, 0.0, 17.2494, 50.8943, 0.0, 182.5303], [0.0, 94.5655, 122.884, 51.4468, 73.0952, 0.0, 219.2811, 79.9533, 257.1168, 1053.6965, 88.4544, 1032.5261, 379.2167, 53.2303, 0.0, 768.7299, 1382.832, 118.081, 119.9233, 862.0571, 0.0, 30.8367, 81.583, 376.8883, 118.9296, 173.8926, 69.5398, 108.108, 419.2258], [682.5393, 481.753, 63.7501, 126.7249, 20.2212, 43.2394, 79.2061, 136.1655, 10.1441, 203.1045, 599.0102, 10.1388, 1680.359, 175.9934, 35.673, 366.9341, 4.5553, 128.0664, 748.2986, 142.1982, 1288.257, 65.4847, 46.6541, 684.9554, 62.504, 102.9159, 24.1522, 438.0917, 44.1288, 191.1087, 0.247, 208.7316, 519.9322], [697.5638, 301.4978, 64.7732, 145.6568, 138.7112, 15.0232, 13.6823, 215.4833, 137.219, 221.1997, 860.7847, 50.4492, 1345.4784, 248.6065, 60.2408, 204.278, 128.9627, 202.7395, 578.9417, 27.6012, 1480.899, 140.7274, 868.3006, 222.6249, 33.399, 516.3937, 66.7008, 7.5258, 136.075, 98.5248, 327.9163], [994.4755, 357.0874, 313.7812, 120.1087, 57.4656, 144.9067, 98.7023, 148.1918, 69.8225, 281.0007, 912.2519, 1427.5066, 154.1027, 207.1309, 98.743, 92.0264, 221.0439, 654.2824, 206.3358, 1320.267, 46.5484, 85.0362, 776.9326, 0.0, 258.8337, 123.8675, 506.4062, 159.0408, 119.1474, 108.9094, 186.1596, 447.1506], [972.0104, 259.9426, 150.7153, 229.1159, 92.0368, 139.0982, 182.8891, 40.3908, 145.6702, 571.0262, 722.0994, 183.0492, 1296.7488, 152.8346, 94.8798, 459.0594, 271.8382, 170.6905, 1269.6175, 202.4496, 1395.927, 129.3844, 74.9236, 915.0505, 28.8015, 196.3989, 77.4654, 324.9533, 255.0096, 181.1187, 196.6419, 524.8584, 594.1323], [970.2933, 505.8509, 54.1523, 213.4054, 88.56, 31.9911, 195.1099, 123.1692, 381.2311, 1207.9779, 75.5208, 1860.1171, 227.9838, 169.2658, 298.319, 211.4297, 219.6209, 1165.8645, 70.8696, 1690.419, 286.4226, 81.169, 918.0961, 113.4909, 132.4159, 610.1164, 95.1264, 205.4943, 96.8083, 189.8028, 510.89]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

