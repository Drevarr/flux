created: 20230424220408000
creator: Drevarr
modified: 20230705163526683
modifier: drevarr
tags: ChartData
title: 202304242204_swaps_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Rina Of Theros", "Zadie Miststep", "Seren Nightroad", "Panther B Me", "Ryvalia Fazebringer", "Tika Rucola", "Lord Erin The Wise", "Eibh\u00ebar", "Black Raspberry Pie", "Grasszanine", "Tegan Parker", "Sub Train", "Etch\u00e9ry", "Smol Gluvs", "Inedible Plant", "Sassy Daddy Demon", "Kmpek", "Zefirokai", "Newtype Khan", "Solo Bloodborn", "Cyclotechnist Farra", "Rudjulin", "Sp\u00edcy Cheese", "Tootsie Pop Rocks", "Arriasa", "Smol Bee", "Gavann", "Zaylen Harker", "Daddys Lil Orchid", "Mac Aaroni", "Xyntharos", "Bella Sassy", "Tribal S", "Koralia Danai", "High Sorcer Baradun", "Arka\u00f1tor", "Xanvias Tsoli", "Fribble Bibble", "Kiloak", "Mistwalker Caelon", "Sygaldry Verdandi", "Leana Deeb", "Mike The Archmagus", "Johosh The Great", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scourge", "Tempest", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Weaver", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Scourge", "Vindicator", "Vindicator", "Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Firebrand", "Berserker", "Scrapper", "Druid", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Tempest", "Vindicator", "Firebrand", "Druid", "Firebrand", "Tempest", "Scrapper", "Holosmith", "Scrapper", "Firebrand", "Vindicator", "Firebrand", "Weaver", "Weaver", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Weapon Swaps per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.0, 1.0, 0.0, 3.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0], [3.0, 2.0, 2.0, 3.0, 1.0, 0.0, 1.0, 1.0, 0.0, 2.0, 2.0, 4.0, 1.0], [9.0, 2.0, 2.0, 1.0, 1.0, 1.0, 5.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0], [13.0, 1.0, 2.0, 3.0, 2.0, 1.0, 3.0, 4.0], [7.0, 3.0, 0.0, 2.0, 1.0, 0.0, 2.0, 2.0, 3.0, 2.0, 2.0, 1.0, 6.0], [6.0, 3.0, 2.0, 7.0, 1.0, 0.0, 4.0, 1.0, 4.0, 0.0, 3.0, 2.0, 2.0], [8.0, 2.0, 3.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 4.0, 3.0], [3.0, 1.0, 2.0, 4.0, 3.0, 2.0, 4.0, 3.0, 2.0, 4.0, 4.0, 4.0], [4.0, 1.0, 2.0, 3.0, 2.0, 0.0, 1.0, 1.0, 6.0, 2.0, 3.0, 4.0, 8.0], [19.0, 2.0, 2.0, 4.0, 2.0, 0.0, 0.0, 1.0, 4.0, 0.0, 1.0, 2.0, 1.0], [13.0, 2.0, 4.0, 0.0, 0.0, 1.0, 1.0, 1.0, 5.0, 3.0, 3.0, 3.0, 3.0], [15.0, 3.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 4.0, 3.0, 1.0, 3.0, 2.0], [9.0, 0.0, 5.0, 6.0, 8.0, 2.0, 6.0, 4.0, 2.0, 3.0], [16.0, 2.0, 3.0, 4.0, 2.0, 1.0, 3.0, 3.0, 3.0, 4.0, 3.0, 1.0], [8.0, 5.0, 2.0, 8.0, 3.0, 1.0, 3.0, 3.0, 2.0, 4.0, 1.0, 6.0, 0.0], [8.0, 0.0, 2.0, 6.0, 3.0, 2.0, 8.0, 3.0, 2.0, 4.0, 3.0, 3.0, 2.0], [20.0, 3.0, 2.0, 5.0, 3.0, 1.0, 0.0, 2.0, 3.0, 3.0, 6.0], [8.0, 2.0, 4.0, 6.0, 2.0, 3.0, 3.0, 6.0, 4.0, 10.0], [4.0, 4.0, 5.0, 3.0, 7.0, 8.0, 6.0, 8.0, 6.0], [11.0, 3.0, 4.0, 6.0, 3.0, 1.0, 5.0, 2.0, 2.0, 4.0, 4.0, 6.0, 4.0], [18.0, 2.0, 2.0, 6.0, 4.0, 0.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0], [20.0, 3.0, 5.0, 5.0, 3.0, 0.0, 2.0, 2.0, 5.0, 3.0, 1.0, 6.0], [5.0, 1.0, 4.0, 6.0, 5.0, 8.0, 8.0, 9.0, 10.0], [21.0, 2.0, 3.0, 6.0, 5.0, 2.0, 2.0, 3.0, 5.0, 4.0, 2.0, 3.0], [21.0, 2.0, 3.0, 7.0, 6.0, 0.0, 1.0, 4.0, 5.0, 5.0, 4.0, 1.0, 1.0], [24.0, 1.0, 3.0, 5.0, 4.0, 0.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 6.0], [18.0, 2.0, 2.0, 5.0, 4.0, 2.0, 3.0, 6.0, 4.0, 6.0, 4.0, 8.0, 6.0], [31.0, 2.0, 4.0, 6.0, 0.0, 2.0, 5.0, 3.0, 4.0, 4.0, 9.0, 1.0], [22.0, 1.0, 4.0, 5.0, 6.0, 1.0, 3.0, 4.0, 4.0, 6.0, 5.0, 7.0, 4.0], [17.0, 0.0, 9.0, 3.0, 1.0, 6.0, 3.0, 7.0, 6.0, 4.0, 6.0, 11.0], [24.0, 3.0, 2.0, 6.0, 4.0, 2.0, 6.0, 6.0, 5.0, 3.0, 3.0, 4.0, 7.0], [21.0, 2.0, 2.0, 8.0, 4.0, 1.0, 5.0, 5.0, 5.0, 4.0, 5.0, 9.0, 5.0], [29.0, 2.0, 7.0, 6.0, 4.0, 2.0, 3.0, 5.0, 0.0, 5.0, 5.0, 6.0, 8.0], [34.0, 1.0, 3.0, 5.0, 5.0, 1.0, 4.0, 6.0, 3.0, 6.0, 3.0, 4.0, 7.0], [30.0, 2.0, 4.0, 9.0, 4.0, 3.0, 5.0, 4.0, 4.0, 5.0, 4.0, 6.0, 9.0], [16.0, 6.0, 5.0, 9.0, 4.0, 4.0, 4.0, 5.0, 7.0, 5.0, 6.0, 8.0, 15.0], [41.0, 5.0, 3.0, 5.0, 4.0, 5.0, 5.0, 4.0, 3.0, 5.0, 2.0, 8.0, 6.0], [24.0, 5.0, 5.0, 7.0, 11.0, 1.0, 4.0, 4.0, 9.0, 4.0, 8.0, 9.0, 7.0], [41.0, 1.0, 4.0, 8.0, 8.0, 3.0, 5.0, 7.0, 5.0, 5.0, 5.0, 5.0, 11.0], [46.0, 5.0, 11.0, 10.0, 10.0, 4.0, 10.0, 3.0, 5.0, 6.0, 6.0, 7.0], [35.0, 6.0, 6.0, 9.0, 5.0, 5.0, 6.0, 6.0, 11.0, 7.0, 6.0, 12.0, 14.0], [46.0, 6.0, 9.0, 6.0, 6.0, 1.0, 5.0, 6.0, 6.0, 13.0, 4.0, 14.0, 8.0], [36.0, 4.0, 6.0, 13.0, 8.0, 4.0, 5.0, 7.0, 9.0, 7.0, 9.0, 12.0, 11.0], [49.0, 2.0, 9.0, 14.0, 8.0, 4.0, 5.0, 8.0, 5.0, 9.0, 13.0, 8.0, 13.0], [65.0, 3.0, 11.0, 12.0, 11.0, 5.0, 6.0, 9.0, 9.0, 5.0, 7.0, 16.0, 23.0], [73.0, 3.0, 10.0, 17.0, 8.0, 6.0, 6.0, 13.0, 8.0, 10.0, 15.0, 14.0, 15.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

