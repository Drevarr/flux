created: 20230129012318000
creator: Drevarr
modified: 20230705163518308
modifier: drevarr
tags: ChartData
title: 202301290123_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Palatine Of Ruin", "Kira Dragonblaze", "\u00c2 R K", "Husky Guard", "Zaylen Harker", "Belvyn Brightblade", "Aronorf Xideliesi", "Bubble Teabringer", "Bella Lunabringer", "Koralia Danai"];
const professions = ["Firebrand", "Dragonhunter", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[212.863, 73.7593, 179.4445], [81.9386, 42.0603, 40.8969, 71.5551, 115.9808, 63.2176, 110.7259], [211.6092, 137.7143, 291.6302], [43.7825, 0.0, 53.5572, 36.6138, 79.2489, 76.9386, 116.4442, 143.1502, 31.3269, 32.52, 6.2381, 47.716, 25.004, 0.0, 25.8592], [331.5629, 34.7364, 122.664, 107.2031, 289.6516, 54.6279, 90.2912], [28.2173, 0.0, 139.2147, 197.4006, 192.372, 153.0245, 421.2004], [65.3453, 99.2868, 195.9066, 180.4188, 248.6896, 236.0484, 274.4755, 226.4332, 92.6983, 43.608, 0.0, 5.9699, 94.1401, 226.5494, 5.9327, 80.7559], [49.8658, 76.6788, 177.6816, 226.5526, 345.5029, 228.7615, 572.3438, 264.9365, 100.8467, 48.576, 170.6522, 151.34, 23.8309, 112.3834], [86.394, 220.4751, 187.8147, 202.6752, 253.0807, 170.3502, 416.9117, 481.8344, 76.1668, 38.016, 29.8944, 19.9866, 115.2419, 301.9562, 0.0, 223.1579], [28.1887, 404.589, 207.522, 261.3396, 343.6907, 270.351, 565.326, 513.6992, 124.0721, 86.016, 19.9514, 196.6348, 261.884, 84.8915, 250.2727]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

