created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Irish Necroman", "Sr Conrad", "Marceluuk", "Ryvalia Fazebringer", "Mort\u00e4rion", "Permanent Dawn", "Be\u00eb", "Civil Rules", "Master Marcovius", "Mintolla Root", "Smol Gluvs", "Gabe Malhorn", "M\u00f9st\u00e1ng", "Johosh The Great", "Bruno Dionizi", "K H I T H", "Vera Khin", "K\u00e2 \u00d4tik R\u00e6j", "Irish Necroman", "M A N O W A R", "N\u00eec\u00f4le", "Minnie Darley", "Daphne Agla\u00e9", "Revitiel", "Rahani Sunray", "Xanvias Einzbern", "Govinda Ektar", "Kisumaiasu", "Mistwalker Cael", "Sub Train", "Be\u00eb", "Ax Axun", "Gestern Yesteryear", "Blancoo Padre", "Grasszanine", "Newtype Khan", "Jimbo The Pleb", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy", "Hyde En Sikh", "Drevarr Moonwillow", "Mmathuss", "Zaedy Zae", "Loganlek", "Tegan Parker", "Alarics Bane", "Keypek The Drunk", "Aronorf Xideliesi", "Vini Boy", "Cesare Pirane", "Tootsie Pop Rocks"];
const professions = ["Scourge", "Bladesworn", "Reaper", "Chronomancer", "Scrapper", "Weaver", "Scourge", "Berserker", "Harbinger", "Harbinger", "Reaper", "Firebrand", "Berserker", "Firebrand", "Holosmith", "Dragonhunter", "Dragonhunter", "Berserker", "Reaper", "Berserker", "Spellbreaker", "Dragonhunter", "Reaper", "Vindicator", "Chronomancer", "Berserker", "Vindicator", "Reaper", "Vindicator", "Firebrand", "Reaper", "Vindicator", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Tempest", "Reaper", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0107, 0.1831, 0.0433], [0.0, 0.0, 0.0, 0.1127, 0.0433, 0.0, 0.02], [0.2817, 0.0236], [0.0314, 0.0, 0.0, 0.0094, 0.0, 0.0186, 0.0319, 0.0, 0.0123], [0.0, 0.0, 0.0, 0.0, 0.2254, 0.0669], [0.0, 0.0, 0.0, 0.0053, 0.1127, 0.0, 0.0132, 0.0029, 0.0071, 0.0, 0.0377, 0.0, 0.0211], [0.0, 0.0, 0.0053, 0.2535, 0.0591, 0.0, 0.0], [0.0543, 0.0071, 0.0, 0.0283, 0.0, 0.0124, 0.0, 0.0, 0.0123], [0.0, 0.0, 0.0845, 0.0472, 0.0, 0.0143, 0.0, 0.0, 0.0377, 0.0, 0.0087, 0.0106, 0.0, 0.0], [0.3521, 0.0394, 0.0], [0.0, 0.0343, 0.0, 0.0, 0.0283, 0.0, 0.0211, 0.0319, 0.0, 0.0], [0.0, 0.0286, 0.0071, 0.0, 0.0283, 0.0, 0.0236, 0.0213, 0.0, 0.0], [0.0189, 0.0, 0.036, 0.0532, 0.0, 0.0], [0.0472, 0.0, 0.0143, 0.0, 0.0, 0.0094, 0.0, 0.0211, 0.0319, 0.0, 0.0], [0.1268, 0.0039, 0.0, 0.0257, 0.1132, 0.0, 0.0112, 0.0, 0.0, 0.0], [0.0, 0.02, 0.0071, 0.0179, 0.0943, 0.0, 0.0236, 0.0319, 0.0, 0.0], [0.0286, 0.0, 0.0357, 0.0283, 0.0, 0.0149, 0.1596, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0107, 0.1408, 0.0, 0.0, 0.0371, 0.0071, 0.0, 0.0094, 0.0, 0.0186, 0.0213, 0.0, 0.0], [0.0, 0.0429, 0.0, 0.0893, 0.0472, 0.0, 0.0224, 0.0319, 0.0, 0.0], [0.0315, 0.0143, 0.0143, 0.0, 0.066, 0.0, 0.0261, 0.0426, 0.0], [0.0, 0.0314, 0.0143, 0.0, 0.0566, 0.0, 0.0261, 0.0532, 0.0, 0.037], [0.0, 0.0, 0.0, 0.0053, 0.169, 0.0394, 0.0, 0.0029, 0.0, 0.0, 0.0566, 0.0, 0.0199, 0.0319, 0.0, 0.0], [0.0, 0.0514, 0.0143, 0.0, 0.0189, 0.0, 0.0298, 0.0532, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.1268, 0.0118, 0.0, 0.02, 0.0143, 0.0, 0.0849, 0.0, 0.0236, 0.0319, 0.0, 0.0], [0.2535, 0.0472, 0.0, 0.0029, 0.0, 0.0179, 0.066, 0.0, 0.0199, 0.0106, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.1268, 0.0315, 0.0, 0.0143, 0.0071, 0.0536, 0.0472, 0.0, 0.0286, 0.0638, 0.0, 0.0], [0.0, 0.0, 0.0, 0.2254, 0.0, 0.0143, 0.0, 0.0566, 0.0, 0.036, 0.0745, 0.0], [0.0748, 0.0, 0.0314, 0.0, 0.0, 0.0, 0.0348, 0.0213, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.2958, 0.0512, 0.0, 0.0143, 0.0071, 0.0, 0.0283, 0.0, 0.0186, 0.0319, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.2817, 0.0472, 0.0, 0.0086, 0.0, 0.0, 0.0472, 0.0, 0.0236, 0.0106, 0.0, 0.0], [0.0167, 0.0, 0.0714, 0.0, 0.0, 0.0377, 0.0, 0.0323, 0.0957], [0.0, 0.0, 0.0, 0.016, 0.1549, 0.0354, 0.0, 0.0343, 0.0, 0.0357, 0.0566, 0.0, 0.0273, 0.0106, 0.0, 0.0], [0.0, 0.0, 0.0107, 0.1831, 0.0945, 0.0, 0.0114, 0.0, 0.0, 0.0755, 0.0, 0.0186, 0.0319, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.2676, 0.0394, 0.0, 0.0171, 0.0214, 0.0, 0.0283, 0.0, 0.0348, 0.0106, 0.0, 0.0123], [0.0512, 0.0, 0.0343, 0.0, 0.0179, 0.0566, 0.0, 0.0447, 0.0319, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.3521, 0.0748, 0.0, 0.0229, 0.0, 0.0, 0.0094, 0.0, 0.0286, 0.0426, 0.0], [0.0, 0.0, 0.0, 0.3239, 0.0472, 0.0, 0.0086, 0.0071, 0.0, 0.0849, 0.0, 0.0373, 0.0426, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.2113, 0.0591, 0.0, 0.0571, 0.0214, 0.0357, 0.0755, 0.0, 0.0199, 0.0426, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.2394, 0.1024, 0.0, 0.0143, 0.0429, 0.0, 0.0377, 0.0, 0.0211, 0.0851, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0107, 0.169, 0.0827, 0.0, 0.0514, 0.0, 0.0, 0.0755, 0.0, 0.0248, 0.0426, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0107, 0.3239, 0.0787, 0.0, 0.0314, 0.0143, 0.0, 0.0377, 0.0, 0.0273, 0.0319, 0.0, 0.0], [0.0, 0.0, 0.0, 0.016, 0.3944, 0.063, 0.0, 0.0286, 0.0, 0.0, 0.0566, 0.0, 0.0286, 0.0106, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.2958, 0.063, 0.0, 0.0857, 0.0, 0.0, 0.0283, 0.0, 0.0149, 0.0638, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.2676, 0.0945, 0.0, 0.0286, 0.0214, 0.0, 0.1226, 0.0, 0.0211, 0.0319, 0.0, 0.0], [0.2394, 0.0866, 0.0, 0.0229, 0.0071, 0.0, 0.1321, 0.0, 0.0373, 0.0213, 0.0, 0.0], [0.0107, 0.2535, 0.1102, 0.0029, 0.0071, 0.0179, 0.0472, 0.0, 0.0522, 0.0213, 0.0], [0.0, 0.0, 0.0, 0.0, 0.3239, 0.0591, 0.0, 0.0429, 0.0143, 0.0357, 0.1132, 0.0, 0.0248, 0.1277, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0053, 0.2676, 0.0236, 0.0, 0.0629, 0.0, 0.0, 0.1321, 0.0, 0.046, 0.0106, 0.0227, 0.0], [0.0, 0.0167, 0.0, 0.0053, 0.0563, 0.063, 0.0, 0.0086, 0.0071, 0.0536, 0.1509, 0.0, 0.0683, 0.0213, 0.0, 0.0], [0.0321, 0.3521, 0.0315, 0.0, 0.0314, 0.0, 0.0, 0.1038, 0.0, 0.0509, 0.0745, 0.0, 0.037], [0.3099, 0.0945, 0.0, 0.0514, 0.0, 0.0, 0.1698, 0.0, 0.0323, 0.1809, 0.0, 0.0123], [0.0, 0.0, 0.016, 0.3944, 0.126, 0.0, 0.0657, 0.0071, 0.0, 0.0849, 0.0, 0.0373, 0.0745, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

