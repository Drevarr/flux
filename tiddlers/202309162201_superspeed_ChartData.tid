created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Hawaiian Supreme", "Glorious Gluvs", "Sofya De Nova", "Tegan Parker", "Arcanophage Farra", "Anja Starkin", "Tootsie Pop Rocks", "Oo Dads Mad", "Venomina The Fierce", "Mort\u00e4rion", "Xeltrom", "Regis Hawkesburne", "High Sorcer Baradun", "Sana Minatozak", "Xanvias Einzbern", "Leafzely", "Keypek The Drunk", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Berserker", "Weaver", "Tempest", "Spellbreaker", "Druid", "Scrapper", "Berserker", "Spellbreaker", "Scrapper", "Druid", "Berserker", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.501, 1.171, 0.616, 1.471, 0.773, 0.894], [0.068, 0, 0, 0, 0, 0.787, 0.417, 0.588, 0.444, 0.482, 0, 0.516, 0, 0, 1.073, 0.224, 0, 0.434, 0, 0.296, 0], [0.424, 0.942, 0.582, 0.46, 0.535, 0.25], [0.01, 0.707, 0.603, 0.535, 0.438, 0.704, 0.572, 0.577, 1.0, 0.607, 0.589, 0.718, 1.003, 0.885, 1.143, 0.674, 0, 0.316, 0.286], [0.395, 0.273, 0, 0.312, 0, 0, 0, 0.776, 0.335, 0.482, 1.472, 0.815, 0, 0, 0.584, 1.472, 1.941, 0.275, 0, 0.282, 0.261], [0.686, 0.573, 0.939, 0.094, 0.535, 0.25, 0.705], [0.508, 0.652, 0.942, 0.28, 0, 0.535, 0.375, 1.057, 0, 0.552, 0, 0], [0.522, 0.565, 0, 0.896, 0, 0.889, 0.828, 1.764, 0.551, 0.954, 0, 0.848], [0.467, 1.569, 1.091, 1.278, 1.077, 0.781, 1.534, 1.053, 1.087, 1.192, 0.621, 0.864, 0.304, 1.803, 1.141, 1.223, 1.342], [0.893, 0.966, 0.312, 0.658, 0.479, 0.537, 0.813, 0.986, 0, 0.628], [1.058, 0.989, 0.866, 0.657, 0.459, 1.07, 0.437], [0.541, 0.707, 0, 1.294, 0.276, 0.959, 0.38, 0.538, 0.424, 0.901, 1.25, 0.445, 0, 0.895, 1.232, 0.736, 0, 0.425, 1.145, 0.295, 0.928], [0.738, 0.762, 0, 0.75, 0.615, 0.533, 0.501, 1.059, 0.415, 0.546, 0.748, 0.357, 0.589, 0.646, 0.109, 0.605, 0.849, 0.662, 1.206, 0.532, 0.486], [1.617, 1.02, 0.915, 1.022, 2.52], [1.474, 1.241, 1.809, 0.937, 1.022, 0.892, 1.211, 1.87, 0.443, 0.702, 1.059, 0.464, 0.979, 1.023, 1.109, 1.472, 1.512, 1.101, 2.543], [2.737, 0.261, 3.18, 0.907, 0.307, 1.85, 1.606, 1.056, 0.393, 0.576, 1.781, 1.334, 0.878, 0.538, 0.492, 0.442, 0, 1.504, 2.262, 0.71, 1.281], [1.933, 1.447, 2.983, 1.108, 0.182, 1.444, 0.887, 2.763, 1.141, 1.324, 2.28, 0.268, 0.617, 1.809, 2.021, 1.616, 2.029, 1.432, 2.118, 0.828, 0.737], [2.443, 2.162, 2.125, 1.59, 0.614, 1.606, 1.438, 2.696, 1.28, 1.359, 1.594, 1.364, 1.444, 1.42, 1.602, 1.546, 2.306, 1.511, 1.383, 0.863, 1.207]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

