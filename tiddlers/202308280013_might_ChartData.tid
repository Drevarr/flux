created: 20230828001355000
creator: Drevarr
tags: ChartData
title: 202308280013_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Pafema", "Bee Nemesis", "Drac Tepes", "Xanvias Einzbern", "Lookatyou Lookatme", "Flick Embermage", "Liu Mira", "Mom Tapper", "Jade Quufu", "P Ain", "Reina Armitage", "Gestern Yesteryear", "Heals For Daddy", "Unbreakable Nemesis", "Ayrion", "Bee Nemesis", "Koralia Danai", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Berserker", "Scourge", "Berserker", "Catalyst", "Tempest", "Berserker", "Spellbreaker", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Druid", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.9943, 7.5361, 0.0, 0.0], [5.08, 4.584], [5.1429, 3.3962, 0.0, 1.9265, 0.0], [6.7425, 2.7388, 0.1728, 5.4234, 0.0, 0.0, 0.0], [12.0697, 0.0, 0.0, 0.638, 0.6937, 1.6974], [4.6056, 3.135, 0.198, 5.6272, 0.0, 0.3947, 0.0, 2.0286, 0.0, 0.0, 0.0], [17.595, 0.0, 0.0], [2.7508, 12.213, 0.0, 2.52, 1.38], [2.8017, 6.9493, 1.881, 5.9182, 2.726, 0.0478, 0.0, 0.0, 0.0, 0.61, 0.546], [7.7144, 4.18, 0.495, 3.9501, 4.3645, 1.8658, 0.6432, 4.6368, 0.0, 0.0, 1.29], [0.0, 1.4311, 4.428, 0.0, 3.8247, 4.6056, 6.1655, 0.0, 3.8808, 3.5815, 0.0, 0.0, 11.3022, 0.0, 0.0], [0.525, 0.0, 0.5105, 3.1233, 1.5854, 4.5141, 1.2137, 5.6547, 0.0, 3.8142, 1.947, 0.9286, 7.018, 1.8658, 10.3914, 3.45, 0.882], [6.4512, 4.6944, 0.0, 0.0, 19.5052, 0.0, 1.845, 0.0, 0.0, 0.0, 2.7692, 0.0, 8.5239, 1.595, 0.0, 4.6782, 0.0, 2.21, 0.0], [26.3862, 0.033, 10.4504, 5.597, 3.3966, 0.0, 6.5826, 0.0], [0.516, 1.0332, 0.2436, 5.6181, 17.5397, 9.9275, 9.108, 1.1781, 1.363, 4.9514, 0.0, 7.2036], [0.0, 0.0, 0.0, 8.6779, 25.4293, 2.3727, 2.9274, 0.6742, 3.294, 17.6548, 6.3222, 2.31, 3.9917, 1.421, 1.2917], [12.792, 4.4631, 20.3862, 7.6066, 8.2752, 13.3308, 0.0, 6.34, 4.32], [25.5502, 3.0537, 4.8462, 3.5539, 1.7294, 23.2199, 0.7837, 13.926, 2.4948, 3.886, 6.6019, 0.0, 26.5374], [0.0, 0.0, 0.0, 0.0735, 0.0, 0.1809, 2.9028, 0.0, 0.0, 19.2668, 56.221, 10.131, 18.5308, 15.863, 7.3315, 0.0, 25.8336, 4.95, 3.81]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

