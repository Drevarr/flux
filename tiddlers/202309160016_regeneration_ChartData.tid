created: 20230916001624000
creator: Drevarr
tags: ChartData
title: 202309160016_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00efr", "Revenant Brandorf", "Cat Wigglebooty", "Tegan Parker", "Pafema", "Kahlyanne", "Arriasa", "Tribal S", "Legendary Sakis", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Tempest", "Vindicator", "Scrapper", "Tempest", "Druid", "Tempest", "Druid", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[151.0968, 70.3107, 204.3739, 38.1828, 48.622, 89.8647, 75.7565, 28.5214, 84.8866, 0.0, 108.1423, 15.053, 95.5277, 0.0, 194.2618, 27.8208, 10.764, 56.4376, 141.4718, 149.711, 232.6444], [54.5679, 22.0022, 42.0343, 23.7121, 36.386, 20.1151, 5.3636, 112.7267, 216.2335, 39.802, 157.0804, 83.1257, 0.0, 11.2636, 180.5076, 182.2867, 1.2461, 13.0617, 28.0872, 57.726, 59.9897, 226.2154, 95.0192, 294.6364], [0.0, 156.3775, 25.4245, 452.5765, 7.3691, 73.5319, 2.4343, 115.0796, 178.295, 0.0, 0.0, 67.492, 187.2907, 547.6214, 20.5385, 1032.2723], [172.9976, 85.0538, 179.607, 99.9424, 83.1726, 23.3722, 80.0639, 109.4188, 31.968, 225.8784, 114.1171, 185.3782, 65.561, 17.6697, 248.0755, 38.4565, 20.3481, 22.6352, 283.7703, 487.6051, 7.9012, 741.1186], [309.8831, 69.3036, 139.6464, 60.318, 152.166, 1151.968, 1079.8541, 1923.4952], [316.9169, 120.9639, 267.709, 145.0674, 127.351, 95.3245, 112.8794, 203.0118, 316.4333, 265.8625, 155.0991, 368.5097, 93.8455, 202.2128, 249.3072, 1123.4362, 130.8447, 138.2139, 107.6112, 49.1575, 408.9457, 930.2292], [1778.5626, 33.2121, 893.5606, 229.5924, 341.3522, 153.1232, 548.8913, 1017.1994, 720.3789, 1601.2775, 338.4234, 465.7224, 326.3314, 387.6365, 235.0305], [407.9247, 162.6557, 404.9035, 179.193, 74.1888, 37.2099, 133.6999, 84.6423, 58.4914, 462.5953, 23.3935, 405.8525, 0.0, 134.171, 0.0, 1494.8102, 51.0917, 165.4344, 97.196, 0.0, 101.1136, 893.7051, 1658.473, 0.0, 2252.9586], [1097.4305, 129.7648, 867.0922, 612.0962, 55.4806, 93.1728, 173.9757, 816.4577, 293.3064, 1620.131, 246.1008, 214.038, 17.653, 1751.6083, 485.9656, 236.7459, 289.5576, 35.1529, 1443.5322, 2848.9066, 6219.0574], [1176.2917, 474.1233, 758.1936, 606.5063, 435.0542, 282.7558, 579.3663, 539.3758, 458.6909, 1551.5478, 487.509, 701.316, 401.2985, 594.9143, 114.4746, 1676.2099, 159.361, 373.2624, 330.8424, 15.0064, 1089.8526, 2753.7158, 22.7245, 4419.8946], [1388.7658, 220.825, 446.1186, 387.5077, 163.8014, 0.0, 474.0447, 777.0228, 424.4252, 1203.1668, 313.0833, 641.1425, 271.5343, 365.0739, 122.1741, 2376.8237, 281.077, 214.4727, 504.6296, 78.003, 51.6077, 2269.926, 3802.1328, 210.4631, 5865.5633]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

