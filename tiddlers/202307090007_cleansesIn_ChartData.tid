created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Hayuf", "Heavenm", "Porlen", "Luke The Knight", "Amiti\u00e9l", "Magister Boombottom", "Ggclaudx", "Sonia Truestrike", "Dalveirric", "Greg The Knight", "Miphest\u00f6", "Hayuf", "K\u00e2 Otik", "Zayde Sunsabre", "Kittendo", "K\u00e2 \u00d4tik R\u00e6j", "Lost Uber Driver", "Jello Jawn", "Jerryatric Reflexes", "Lucky Leipreach\u00e1n", "Zaedy Zae", "Naithan Stone", "Jerryatric Reflexes", "Valaria Emberstorm", "Blaze All Might", "Scythe User", "Jmbrage Rev", "Newtype Khan", "Boof Floof", "Glorious Gluvs", "Free H\u00e4nd", "Aisling Vexwind", "Danaeryn", "Enter Effore", "S\u00e2ucy K\u00e2t", "Tantai Jin", "Artakama Nahid", "Audra Storm", "Perpetual Hope", "Red Reaper Robin", "Koranthin", "Erin Celes", "Tika Fiery", "Whip \u00d1 Sl\u00e0pper", "Drevarr Moonwillow", "Sarette Fay"];
const professions = ["Dragonhunter", "Guardian", "Ranger", "Berserker", "Firebrand", "Tempest", "Holosmith", "Firebrand", "Soulbeast", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Soulbeast", "Spellbreaker", "Herald", "Virtuoso", "Berserker", "Scrapper", "Druid", "Tempest", "Spellbreaker", "Tempest", "Firebrand", "Reaper", "Vindicator", "Spellbreaker", "Firebrand", "Berserker", "Vindicator", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Reaper", "Tempest", "Weaver", "Tempest", "Reaper", "Firebrand", "Herald", "Firebrand", "Tempest", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.246], [0.2512, 0.0, 0.2712], [0.1053, 0.0714, 0.0, 0.0047, 0.0606, 0.1017], [0.0437, 0.0556, 0.1638, 0.107, 0.1515, 0.1186, 0.1184, 0.1346], [0.064, 0.0, 0.0345, 0.5789, 0.0206], [0.008, 0.1176, 0.069, 0.7193], [0.0833, 0.0, 0.2414, 0.186, 0.0, 0.1525, 0.5577], [0.1667, 0.2586, 0.1442, 0.0303, 0.0847, 0.0, 0.4423], [0.136, 0.1373, 0.3509, 0.016, 0.0238, 0.1379, 0.1721, 0.2121], [0.2024, 0.0278, 0.3103, 0.2186, 0.0606, 0.1356], [0.3021, 0.0794], [0.136, 0.1373, 0.1379, 0.4561, 0.1876], [0.176, 0.0439, 0.341], [0.2103, 0.0, 0.1983, 0.2558, 0.0606, 0.1864, 0.2763, 0.25], [0.3214, 0.0, 0.1121, 0.2372, 0.0606, 0.2373, 0.3462], [0.246, 0.1111, 0.1207, 0.214, 0.1525, 0.3158, 0.7308], [0.3095, 0.0278, 0.3621, 0.2744, 0.0303, 0.0678, 0.4615], [0.088, 0.098, 0.2759, 0.4561, 0.341], [0.3651, 0.0556, 0.3103, 0.2326, 0.0, 0.2881, 0.2763, 0.3654], [0.072, 0.1569, 0.6207, 0.4298, 0.3524], [0.104, 0.0, 0.3793, 0.3333, 0.4142], [0.184, 0.0784, 0.1379, 0.7193, 0.3249], [0.08, 0.1373, 0.1379, 0.9035, 0.3204], [0.112, 0.3922, 0.7368, 0.3455], [0.2609, 0.1825, 0.0556, 0.2931, 0.2279, 0.0303, 0.2542, 0.0, 0.2692], [0.208, 0.2157, 0.6207, 0.5175, 0.3959], [0.144, 0.1569, 0.1379, 0.4035, 0.3112, 0.2143, 0.0278, 0.3879], [0.032, 0.1373, 0.3509, 0.3272, 0.2698, 0.0278, 0.0259, 0.1953, 0.0303, 0.1525], [0.128, 0.098, 0.1724, 0.193, 0.2082, 0.246, 0.0278, 0.3621, 0.2651, 0.1695, 0.1316, 0.2692], [0.16, 0.0196, 0.0345, 0.2281, 0.2746, 0.2063, 0.0, 0.2672, 0.1907, 0.0303, 0.1356, 0.1184, 0.5192], [0.128, 0.098, 0.0345, 0.3333, 0.2357, 0.2381, 0.0278, 0.3793, 0.1767, 0.0606, 0.1186, 0.2895, 0.2885], [0.0392, 0.1724, 0.3509, 0.2586, 0.2381, 0.0278, 0.4569, 0.2372, 0.1017, 0.2763, 0.0769], [0.08, 0.1765, 0.0, 0.4825, 0.2449, 0.3016, 0.0556, 0.3534, 0.0744, 0.0, 0.0847, 0.3158, 0.2692], [0.096, 0.0784, 0.0345, 0.3421, 0.2654, 0.3135, 0.0, 0.319, 0.1302, 0.1017, 0.2895, 0.3462], [0.144, 0.1765, 0.0345, 0.5877, 0.2792, 0.25, 0.0, 0.2931, 0.2233, 0.0, 0.0678], [0.072, 0.1176, 0.1034, 0.5526, 0.2952, 0.2341, 0.1111, 0.2155, 0.2279, 0.0, 0.0847, 0.1974, 0.2308], [0.056, 0.0588, 0.3684, 0.3043, 0.2976, 0.0, 0.4138, 0.214, 0.0606, 0.3559, 0.2763], [0.104, 0.0588, 0.0345, 0.5877, 0.3066, 0.2659, 0.0556, 0.3448, 0.1907, 0.0303, 0.1017, 0.3026, 0.1923], [0.128, 0.0392, 0.0345, 0.3421, 0.3341, 0.246, 0.0556, 0.431, 0.1349, 0.0303, 0.322, 0.1711, 0.5769], [0.192, 0.2157, 0.4828, 0.4825, 0.2952, 0.2619, 0.0833, 0.2241, 0.2047, 0.0, 0.0847, 0.1316, 0.4808], [0.104, 0.3922, 0.0345, 0.7807, 0.3204, 0.2063, 0.0278, 0.3017, 0.1814, 0.0, 0.1017, 0.2105, 0.5], [0.04, 0.2157, 0.0345, 0.6316, 0.3524, 0.2976, 0.0278, 0.2328, 0.1721, 0.0606, 0.1695, 0.3026, 0.6346], [0.192, 0.0588, 0.0345, 0.5439, 0.3066, 0.3294, 0.0833, 0.431, 0.1442, 0.0, 0.1017, 0.4079, 0.5577], [0.128, 0.0588, 0.3103, 0.3333, 0.4165, 0.4087, 0.1667, 0.3707, 0.3395, 0.0, 0.2034, 0.3654], [0.168, 0.0588, 0.2759, 0.6579, 0.4279, 0.4683, 0.0278, 0.3793, 0.2372, 0.0, 0.2034, 0.4474, 0.3846], [0.256, 0.2157, 0.1724, 0.6754, 0.4668, 0.3968, 0.1111, 0.4397, 0.293, 0.0606, 0.3051, 0.1053, 0.8654]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

