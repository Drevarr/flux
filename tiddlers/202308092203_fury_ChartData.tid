created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["The Defendant", "Mad X King", "Cedryn X", "Tegan Parker", "Konoko K", "Y U So Mean", "Aspros Gemeos", "Harbinger Nergal", "Serafina Tarai", "Mort\u00e4rion", "Raziel Umbra", "Lord Erin The Wise", "Dalveirric", "Ax Axun", "Revitiel", "Oo Dads Mad", "Audens Silvermarker", "Rozaalyna", "Permanent Dawn", "Tootsy Pop Star", "K\u00e2 \u00d4tik R\u00e6j", "Black Raspberry Pie", "Arcanophage Farra", "Mistwalker Cael", "Zaedy Zae", "Morton Saltbringer", "Eibh\u00ebar", "Rahani Sunray", "Mike The Archmagus", "Xanvias Einzbern", "Glorious Gluvs", "Fastdrawl", "Tribal S", "Seren\u00e1 Joy", "Blancooo Padreee", "My Birthday Girl", "Keypek The Drunk", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Berserker", "Berserker", "Tempest", "Tempest", "Mirage", "Spellbreaker", "Specter", "Firebrand", "Scrapper", "Chronomancer", "Weaver", "Soulbeast", "Vindicator", "Vindicator", "Berserker", "Firebrand", "Scourge", "Weaver", "Scourge", "Berserker", "Chronomancer", "Spellbreaker", "Vindicator", "Druid", "Chronomancer", "Chronomancer", "Chronomancer", "Weaver", "Berserker", "Berserker", "Scrapper", "Druid", "Chronomancer", "Spellbreaker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.9494, 8.6242, 14.8685, 80.7797, 1.5232, 114.5107, 0.0, 0.0, 0.0, 9.6529, 15.594, 9.7351], [38.7638, 0.0, 53.7466, 0.0, 31.5586, 0.0, 87.1056, 47.886, 10.3141, 41.4414, 0.0, 0.0, 0.0, 12.8174], [23.9316, 104.4058, 0.0, 0.0, 0.0, 0.0, 38.1005, 90.1454, 33.4368, 0.0, 0.0, 0.0, 50.4094, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 44.1563, 31.833, 0.0, 9.2277, 0.0, 18.2866, 31.9676, 23.327, 0.0, 30.9566, 55.6742, 25.8413, 0.0, 0.0, 22.6766, 0.0, 34.8148, 23.8602, 0.0, 0.0, 0.0, 0.0], [0.0, 19.8396, 15.5848, 61.881, 7.776, 0.0, 23.1554, 19.6992, 17.1312, 11.0446, 31.1328, 0.0, 8.4216, 8.8454, 0.0, 23.0342, 0.0, 0.0, 0.0, 25.5877, 29.9115, 19.4702, 15.249, 0.0, 15.4836, 0.0, 0.0], [20.0134, 134.8012, 40.8645, 41.1696, 25.1821, 23.4662, 41.1547, 29.2579], [0.0, 50.8816, 25.8854, 59.3616, 84.5838, 71.0189, 15.6965, 76.5494, 16.1299], [129.5595, 7.8768, 0.0, 2.8339, 13.705, 0.0, 118.6656, 7.9373, 35.1384, 129.1694, 19.8528, 123.0144, 19.596, 2.3575, 0.0, 11.4149], [18.4435, 211.3452, 0.0, 381.0815, 46.008, 0.0, 47.7338, 0.0, 102.1498, 26.2738], [3.9782, 36.0052, 95.2776, 3.993, 46.1776, 27.4995, 38.5056, 1.9404, 0.0, 32.3899, 18.6249, 25.8538, 25.847, 45.709, 136.9742, 18.176, 99.6499, 3.9837, 35.9835, 15.9236, 21.3486, 0.0, 68.7786, 0.0, 39.9055], [10.8231, 75.9402, 88.0742, 27.5261, 88.8043, 84.2918, 10.4026, 28.5448, 32.5766, 36.3712, 102.6574, 31.2915, 14.3312, 103.0653, 40.7737, 39.457, 42.9723, 96.4661], [11.9347, 8.0093, 102.5838, 32.1376, 229.333, 49.167, 20.592, 54.9349, 50.3539, 71.5526, 69.5947, 63.2131, 52.1011, 100.7688, 20.0323, 33.9322, 16.7546, 17.1188, 0.0, 71.4005, 32.0505, 23.3787, 38.8401], [75.9774, 47.4854, 141.4718, 51.7587, 47.4211, 46.3517, 137.3011, 232.0627, 190.3008, 139.7848, 57.4913, 10.7901, 77.5381], [11.3753, 100.3737, 107.3358, 3.0008, 25.4987, 18.954, 22.4352, 46.2678, 37.0483, 70.3176, 46.7509, 43.1798, 28.7218, 86.365, 173.917, 5.9712, 62.4979, 34.293, 23.7092, 28.26, 111.1611, 35.9835, 39.23, 110.6898, 19.6242, 64.2906, 25.5987, 32.4535], [25.1903, 120.7276, 54.5292, 19.7714, 273.4893, 34.1415, 7.8336, 23.371, 54.8122, 49.043, 39.4107, 49.271, 44.4691, 69.4637, 125.7874, 13.408, 88.4218, 32.6273, 20.0389, 13.8938, 49.6433, 32.1885, 40.2795, 52.8333, 13.6124, 33.3234, 51.6424], [29.0598, 108.4565, 144.2232, 31.2422, 417.6193, 4.212, 19.2672, 124.6599, 121.8931, 47.5291, 82.5601, 125.7946, 39.2285, 236.5598], [0.0, 34.903, 258.3306, 0.0, 306.6066, 45.279, 37.728, 86.7574, 66.5971, 81.0744, 65.7874, 155.3482, 64.4904, 137.4754, 146.7302, 0.0, 120.7027, 52.7132], [1.7405, 99.1245, 80.9028, 78.4322, 88.3126, 37.4625, 44.6256, 70.803, 59.9962, 93.4646, 36.8382, 97.8653, 13.2542, 64.7011, 201.1037, 0.0, 93.9533, 73.1257, 57.2234, 23.3438, 97.2947, 60.168, 43.1023, 68.172, 6.2279, 49.4428, 22.572, 56.6352], [0.0, 45.4106, 123.1362, 27.225, 213.1631, 51.6375, 0.0, 25.4839, 35.9078, 71.3534, 69.3889, 72.8688, 39.1776, 83.7514, 175.2178, 169.3306, 41.4782, 43.1319, 15.8063, 95.073, 60.444, 13.1008, 87.0987, 15.8239, 80.7092, 40.7664, 50.7481], [7.4592, 123.4464, 102.465, 38.6474, 224.5131, 46.1295, 25.9056, 44.3705, 30.0326, 62.1902, 56.8694, 62.6717, 18.3422, 102.2789, 151.283, 32.6464, 45.9859, 63.785, 36.488, 8.2575, 104.496, 49.542, 38.7233, 138.138, 36.2871, 73.0422, 50.4792, 54.4369], [114.1144, 69.9138, 50.1182, 292.4579, 29.241, 0.0, 69.5957, 23.0515, 31.8322, 53.508, 84.8256, 75.4805, 67.9536, 172.2259, 34.0864, 104.0256, 73.0278, 49.3204, 20.3625, 128.475, 79.1775, 36.4795, 83.8695, 34.4441, 37.2504, 60.0039, 93.3736], [22.0823, 153.7936, 49.4208, 19.5294, 291.3695, 57.0645, 36.9504, 56.0991, 47.5546, 100.4366, 59.3733, 87.2621, 35.9976, 112.501, 221.0059, 58.7002, 38.1142, 30.3799, 25.7963, 110.395, 62.1345, 29.712, 142.3539, 50.3062, 35.2682, 37.1241, 74.371], [0.0, 110.8078, 39.9762, 55.3938, 272.8674, 80.19, 71.5968, 80.0307, 34.2835, 61.0747, 49.6664, 100.8883, 34.1405, 156.2352, 142.5677, 108.4838, 72.7991, 11.734, 36.2362, 152.4539, 86.595, 45.3461, 70.7733, 73.3748, 49.0688, 68.4855, 22.8031], [5.0194, 119.7724, 112.6224, 69.9622, 281.8852, 28.7145, 20.304, 63.947, 35.4586, 88.0464, 69.7319, 27.3878, 43.5533, 53.6659, 154.535, 28.9728, 174.3667, 72.5379, 66.1445, 6.1763, 140.3495, 67.896, 17.8055, 143.6994, 0.0, 78.1286, 64.3644, 55.2193], [25.8896, 82.0037, 172.557, 31.097, 374.8623, 40.419, 28.5408, 32.0382, 63.1411, 48.804, 56.7322, 92.4509, 56.7566, 103.9051, 176.5186, 4.7232, 152.0755, 76.9796, 26.4685, 48.9375, 116.7536, 27.4965, 45.3461, 94.185, 21.518, 48.1712, 4.617, 53.4681], [0.0, 166.2852, 112.86, 36.058, 366.1554, 48.6432, 56.7028, 13.1674, 78.6442, 40.5083, 85.8182, 48.1325, 97.8648, 238.957, 46.0928, 81.7344, 65.32, 34.7734, 27.2925, 98.6737, 20.079, 15.4169, 54.3582, 27.3011, 104.0094, 78.7284, 77.7616], [44.289, 137.3341, 103.1778, 38.9862, 180.8232, 35.3565, 70.0992, 26.5619, 90.4435, 107.807, 88.2539, 98.1811, 9.54, 82.009, 168.7138, 48.8832, 142.4986, 55.2281, 52.3209, 3.1613, 104.6493, 76.2105, 51.2088, 89.8794, 68.9772, 103.8972, 42.9381, 28.0568], [8.7179, 117.6415, 104.3064, 85.0872, 339.4128, 21.708, 46.512, 71.493, 17.3146, 101.831, 49.2205, 65.9654, 38.8469, 112.3848, 159.348, 17.5232, 97.9162, 80.8335, 50.4456, 0.1913, 138.1278, 82.524, 35.8643, 106.2945, 47.8532, 62.3832, 37.4661, 75.4888], [1.4763, 206.8462, 214.8498, 32.2344, 672.451, 97.6455, 11.736, 63.602, 114.0475, 226.2797, 393.8822, 246.1114, 84.0995], [38.9899, 157.0268, 132.1056, 15.2944, 119.7196, 57.753, 27.6048, 65.9736, 70.0877, 85.0982, 66.7135, 52.7904, 19.6142, 171.6264, 306.3384, 10.1952, 119.2166, 36.1873, 44.9, 0.0, 144.18, 145.935, 22.4378, 195.6357, 10.0282, 155.4344, 0.0, 160.069], [27.4747, 126.9734, 118.1466, 53.1674, 260.429, 29.4435, 36.72, 57.7808, 48.4877, 89.1619, 20.4771, 95.2032, 77.7955, 158.5584, 250.2739, 16.4288, 190.9613, 27.7937, 30.621, 26.3137, 108.7862, 72.2775, 0.4705, 239.4093, 55.7842, 108.0486, 49.5729, 63.8264], [108.7504, 137.2734, 43.1002, 343.2998, 84.4425, 0.0, 57.6946, 53.1187, 95.8949, 89.5573, 83.5622, 88.7856, 173.6592, 162.6, 3.648, 268.2374, 68.9575, 36.5063, 96.2222, 61.0887, 200.3898, 78.0164, 37.9107, 105.8929], [248.9235, 72.4545, 27.5472, 123.3663, 64.4544, 118.524, 140.6986, 112.7098, 64.9483, 164.7149, 327.9317, 222.7469, 74.2688, 42.0335, 47.115, 229.9832, 84.387, 26.9615, 99.4773, 13.8412, 137.4824, 33.1398, 66.4346], [34.1569, 179.0708, 151.767, 64.4688, 274.8886, 92.8665, 52.0848, 67.5259, 22.0838, 111.313, 119.9814, 136.9843, 68.7134, 105.1829, 242.209, 28.5376, 146.2963, 77.6655, 36.997, 27.2475, 113.4594, 98.3595, 79.2923, 151.2342, 27.3265, 71.2096, 26.9667, 66.3228], [55.2292, 186.0514, 129.8484, 102.971, 548.378, 75.816, 78.264, 67.0516, 57.1968, 108.0062, 117.0316, 164.4173, 96.2395, 133.1194, 205.6565, 4.8, 169.0003, 125.1205, 65.1533, 39.1838, 88.4079, 72.933, 80.8123, 140.0217, 39.4264, 69.0778, 63.8172, 64.3108], [31.1111, 75.3905, 249.5988, 77.077, 642.7543, 131.4225, 74.5776, 118.6231, 161.257, 201.2717, 173.0092, 144.6547, 91.6349, 72.9485, 485.5886, 160.1664, 66.3651, 18.5387, 45.495, 238.87], [78.7878, 148.65, 256.7268, 92.807, 402.5377, 51.435, 90.7632, 64.9387, 116.1216, 115.0579, 91.7868, 74.1322, 98.6054, 204.7901, 422.3698, 15.392, 216.1421, 79.2332, 78.8162, 22.3425, 153.0668, 92.4255, 83.6351, 231.2466, 36.3252, 129.7406, 93.5712, 67.3288], [47.397, 325.296, 371.6658, 104.5924, 1001.9131, 122.877, 5.2128, 133.1546, 84.8102, 126.6912, 126.91, 184.1798, 155.6165, 265.1933, 481.6862, 15.296, 267.9072, 71.1335, 95.801, 87.5025, 241.4747, 85.629, 85.6617, 243.8943, 34.6093, 138.1182, 70.1442, 168.3779]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

