created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Tegan Parker", "Klengah", "Arriasa", "Zaedy Zae", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Tempest", "Druid", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[404.2556, 271.2342, 33.7686, 82.7692, 118.46, 35.5227, 22.3387, 94.4522, 147.3814, 280.6435, 60.5486, 8.8732, 0.0, 201.5778, 0.2029, 81.3341, 8.6429, 137.3904, 200.7289], [1300.9556, 86.3063, 390.4628, 64.3407, 1007.6075, 2.6932, 201.4597, 102.1338, 136.3559, 493.3843, 889.9921, 169.3944, 46.56, 321.6889, 103.8986, 246.5758, 85.9184, 374.2076, 896.8928], [2129.2778, 437.4414, 632.2975, 229.0659, 1350.0, 136.0909, 628.3629, 492.2038, 1382.8475, 95.5926, 1271.1667, 2123.9134, 242.169, 9.48, 357.6667, 269.3043, 628.7607, 429.4286, 831.8386, 1460.0392], [1893.2222, 207.4865, 446.8843, 64.7802, 1943.12, 0.0, 853.879, 470.6879, 1001.339, 39.5556, 1336.9398, 2008.5591, 556.9437, 185.64, 578.6, 610.7488, 412.8469, 1132.2125, 2150.3938], [1985.0222, 311.3874, 646.0909, 160.9121, 2290.6325, 55.8409, 961.1774, 551.5223, 1147.3051, 182.0741, 1852.8657, 2181.042, 644.8028, 436.96, 1016.0, 285.2464, 934.0853, 337.9082, 1240.2718, 1939.6289], [1623.6889, 491.1351, 847.0744, 305.3077, 2415.3425, 230.7841, 504.5968, 739.051, 1183.7458, 209.963, 1870.2269, 2347.1181, 843.0563, 248.32, 707.2222, 674.6667, 755.5498, 319.3776, 1069.6474, 1991.6412], [1430.1111, 321.6577, 802.7686, 280.8132, 3017.82, 183.4773, 705.1532, 559.3503, 1078.8051, 110.2963, 2401.6944, 2682.916, 849.2958, 212.64, 877.6444, 365.0145, 834.4763, 605.1327, 1370.5799, 2068.0258]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

