created: 20230508221143000
creator: Drevarr
modified: 20230705163529319
modifier: drevarr
tags: ChartData
title: 202305082211_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Aaroni", "Artakama Nahid", "Fribble Bibble", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Tempest", "Tempest", "Scrapper", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[54.5148, 204.5318, 0.0, 0.0, 260.176, 600.4656, 202.8786, 0.0, 106.7657, 1378.7856, 25.401, 54.0574, 65.9874, 22.5792, 0.0, 110.7229, 100.8, 45.3376], [263.2343, 451.9539, 31.7898, 979.386, 989.5354, 572.9727, 131.0337, 275.2875, 1904.4, 89.7083, 121.2137, 184.4752, 236.67, 116.4671, 622.4711, 386.505, 220.0352], [66.7734, 272.4223, 0.0, 15.0423, 415.0326, 2677.4384, 616.7841, 2.7594, 121.3498, 5169.3034, 106.6125, 207.0331, 220.5939, 602.8176, 61.9683, 685.4833, 46.809, 197.1904], [96.1225, 423.972, 107.5457, 465.2793, 2743.069, 1393.8163, 93.7818, 398.2968, 6497.8128, 316.1257, 170.2865, 516.0568, 397.8408, 0.0, 1398.3816, 608.391, 360.3424], [182.7609, 1207.6255, 5702.2476, 1415.3086, 188.7543, 558.1687, 9545.3606, 320.1058, 519.2443, 868.4938, 823.1412, 150.2071, 1583.699, 1046.682, 475.0592], [346.2227, 339.9115, 338.4246, 146.7081, 2734.758, 6016.9844, 2363.6894, 385.8057, 932.2257, 8650.0387, 485.2791, 340.7275, 340.2659, 578.1804, 1213.3829, 846.846, 545.424]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

