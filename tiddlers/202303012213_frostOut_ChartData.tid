created: 20230301221309000
creator: Drevarr
modified: 20230705163520918
modifier: drevarr
tags: ChartData
title: 202303012213_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Flanneryflame", "Abigail Ryn", "Zadie Miststep", "Tegan Parker", "Mac Aaroni"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.4505, 117.0324, 65.9173, 84.4378, 20.0277, 77.1606, 81.7628, 89.2012, 92.2925, 38.0811, 78.6821, 71.5783], [43.218, 96.0233, 97.5338, 0.0, 40.0158, 30.4317, 52.5253, 124.7173, 20.0275, 27.985, 106.1825, 153.2593, 0.0, 0.0, 19.9417, 123.8285, 0.0, 0.0, 81.3827, 0.0, 60.493, 20.0486, 29.5402], [42.8148, 118.8804, 104.8892, 60.3645, 20.742, 41.1953, 93.6828, 321.1172, 16.2336, 174.4435, 165.717, 124.2072, 19.8299, 47.142, 0.0, 116.3635, 83.8231, 3.9712, 72.0457, 19.844, 93.3768, 19.9162, 110.5978, 62.1566, 565.6413, 20.1794, 57.1821, 71.1965, 39.6967, 96.492, 21.1248, 74.0743, 132.2748, 34.2346, 95.7581, 39.9483, 56.4003, 68.0802, 19.8889, 93.7742, 21.4122, 145.8081, 182.0808], [76.2048, 107.2162, 145.4934, 43.2502, 59.6204, 46.5885, 113.9623, 253.3695, 60.119, 50.1053, 157.4953, 178.8402, 0.0, 36.504, 105.8227, 59.7008, 0.0, 123.647, 36.2554, 111.5712, 0.0, 0.0, 369.0474, 106.6637, 43.6694, 78.1582, 121.968, 87.0588, 50.901, 101.1636, 76.3659, 136.393, 55.0851, 54.3956, 121.4793, 162.184, 74.209, 65.611, 85.2856, 217.6442], [197.2307, 124.0551, 59.261, 43.7589, 65.4764, 72.1436, 262.5223, 94.6656, 128.1955, 153.1804, 163.8991, 0.0, 26.406, 0.0, 93.5194, 41.2425, 79.4236, 59.3069, 153.4421, 118.0176, 154.3651, 0.0, 23.9848, 481.8601, 40.2628, 84.6451, 105.3787, 91.8822, 48.576, 36.693, 82.0578, 109.7244, 131.4014, 42.8314, 125.1642, 87.4517, 94.1881, 175.927, 146.1499, 19.3406, 88.7053, 269.0582]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

