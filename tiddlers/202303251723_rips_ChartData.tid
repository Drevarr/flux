created: 20230325172304000
creator: Drevarr
modified: 20230705163523036
modifier: drevarr
tags: ChartData
title: 202303251723_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Arriasa", "K\u00f4sair", "Panther B Me", "Arcanophage Farra", "Oo Dads Mad", "Primal Clone", "Smol Gluvs", "Morton Saltbringer", "Newtype Khan", "Rozaalyna", "Black Raspberry Pie", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Druid", "Druid", "Spellbreaker", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.051, 0.0424, 0.0, 0.0, 0.0, 0.0, 0.0486, 0.0089, 0.0, 0.0386, 0.0127, 0.0, 0.0, 0.0068, 0.0286, 0.0087, 0.0387, 0.0437, 0.0683], [0.051, 0.0727, 0.0, 0.0167, 0.0737, 0.0, 0.0, 0.0097, 0.0506, 0.0, 0.0, 0.0274, 0.0286, 0.0087, 0.0331, 0.0437, 0.0512], [0.0, 0.1594, 0.4684, 0.2308, 0.5068, 0.1286, 0.0391, 0.0608, 0.0, 0.0648], [0.121, 0.0242, 0.0, 0.0, 0.0, 0.0, 0.1139, 0.0625, 0.0, 0.0193, 0.038, 0.0, 0.0294, 0.0, 0.2714, 0.0, 0.0, 0.0146, 0.0785], [0.1847, 0.1515, 0.0556, 0.0, 0.0056, 0.0, 0.082, 0.1339, 0.0, 0.0435, 0.1899, 0.1346, 0.1471, 0.0068, 0.0, 0.013, 0.0221, 0.0, 0.1229], [0.1401, 0.0303, 0.0833, 0.0, 0.0, 0.0, 0.0866, 0.3125, 0.0588, 0.1159, 0.1772, 0.1154, 0.0294, 0.2671, 0.0], [0.2611, 0.0909, 0.0278, 0.0, 0.0278, 0.0215, 0.1405, 0.1339, 0.0, 0.1643, 0.1772, 0.0577, 0.1471, 0.0205, 0.0571, 0.0, 0.011, 0.0194, 0.1775], [0.3694, 0.0909, 0.1111, 0.0081, 0.0167, 0.0323, 0.0797, 0.4018, 0.0784, 0.0966, 0.1392, 0.0385, 0.0882, 0.3425, 0.5571, 0.0, 0.0442, 0.068, 0.0922], [0.3057, 0.0727, 0.0556, 0.1138, 0.0778, 0.0323, 0.1602, 0.0268, 0.0588, 0.1498, 0.1646, 0.0577, 0.0137, 0.0, 0.0087, 0.0497, 0.0194, 0.1843], [0.172, 0.0545, 0.3056, 0.0, 0.0222, 0.0215, 0.1822, 0.2054, 0.0392, 0.1304, 0.1646, 0.2115, 0.2059, 0.0479, 0.3571, 0.0, 0.0497, 0.0146, 0.2014], [0.0701, 0.0242, 0.0, 0.0111, 0.0108, 0.2817, 0.1607, 0.0588, 0.0386, 0.038, 0.0, 0.089, 0.4429, 0.0, 0.011, 0.0, 0.1092], [0.4076, 0.2485, 0.1111, 0.0, 0.0444, 0.1412, 0.3214, 0.0, 0.1401, 0.1772, 0.0385, 0.0, 0.2534, 0.0571, 0.0565, 0.0387, 0.0485, 0.2662], [0.1911, 0.103, 0.1667, 0.0244, 0.0056, 0.2043, 0.3804, 0.375, 0.098, 0.1787, 0.4177, 0.1346, 0.1176, 0.5479, 0.1143, 0.0435, 0.0718, 0.0291, 0.2184], [0.3567, 0.1758, 0.1389, 0.0569, 0.05, 0.0215, 0.5399, 0.5268, 0.2549, 0.1981, 0.4557, 0.1538, 0.0294, 0.5616, 0.4286, 0.0304, 0.0331, 0.0971, 0.3038]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

