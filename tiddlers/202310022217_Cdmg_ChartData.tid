created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Soft And Chewy", "Eibh\u00ebar", "Grayson Kin", "Saint Wolfswift", "Tootsie Pop Rocks", "Lastsuperman", "Bella Bitty", "Belvyn Brightblade", "Gabe Malhorn", "Jmbrage Rev", "Glorious Gluvs", "Crusader Siolith", "Drevarr Moonwillow", "Mistwalker Cael", "Lucky Leipreach\u00e1n", "High Sorcer Baradun", "Daphne Agla\u00e9", "Rozaalyna", "Divine Mimine", "Sub Train", "Elonith Requiem", "\u00c7onstant\u00edne", "Solus Luxes", "Adjudicatrix Farra", "Nickhia", "Gollum Mah Precious", "Be\u00eb", "Mike The Archmagus", "Lady Sherena", "Rina Of Theros", "Lord Erin The Wise", "Halfpint The Drunk", "Kosair", "Heres A Quarter", "Astraeus Windrunner", "Swithblight", "Xanvias Tseli", "Jimbo The Pleb"];
const professions = ["Druid", "Chronomancer", "Berserker", "Dragonhunter", "Scrapper", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Scrapper", "Herald", "Scrapper", "Tempest", "Reaper", "Reaper", "Renegade", "Firebrand", "Reaper", "Reaper", "Firebrand", "Reaper", "Scourge", "Harbinger", "Reaper", "Weaver", "Willbender", "Reaper", "Weaver", "Berserker", "Firebrand", "Herald", "Berserker", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.3243, 0.0, 0.0789, 13.4441, 0.0, 5.8257, 6.594], [28.7027, 0.0, 11.9342, 0.0, 1.5528, 6.5, 2.8257, 0.0, 4.7672, 3.6371, 1.4105, 12.4034, 9.3636, 4.2222, 0.2147, 3.2459, 4.5577, 26.8333, 11.0, 0.0, 14.8205, 1.8352], [9.5882, 4.0795, 78.8519, 3.362, 13.3689, 17.8077, 0.8167, 30.0526, 8.0769, 1.7841], [50.6, 110.8596, 0.0, 13.7436, 28.6761], [13.6949, 7.3243, 0.0, 10.4474, 0.0, 0.0, 5.0781, 6.3243, 6.8807, 0.0, 3.3104, 6.7581, 7.4105, 4.1933, 15.3068, 9.3086, 14.9509, 1.9754, 1.25, 30.8667, 5.7544, 4.3099, 36.8974, 1.4545], [100.5439, 1.8169, 31.5385, 79.9545], [12.3729, 3.6216, 0.0, 1.1447, 0.0, 7.4732, 4.6622, 0.0, 0.0, 0.0, 5.2944, 9.9474, 4.2353, 65.0341, 0.0, 0.4479, 17.8361, 14.0577, 58.2333, 0.0, 1.1831, 4.9487, 8.4489], [63.1017, 76.9189, 0.0, 6.2632, 0.0, 0.0, 16.3155, 21.3243, 22.1009, 0.5455], [0.0, 15.7742, 1.1684, 7.7059, 27.4205, 22.4691, 7.227, 49.7131, 12.2692, 6.9333, 1.2632, 90.4366, 9.0, 0.0], [0.0, 0.0, 1.902, 2.4257, 17.5138, 0.0, 7.3701, 28.8992, 22.8526, 8.8739, 13.8523, 8.2346, 8.3313, 0.0, 15.5962, 0.0, 86.2456, 0.0, 0.5385], [7.8305, 0.0, 0.0, 11.1184, 0.0, 0.0, 18.075, 3.5203, 0.0, 0.0, 2.6209, 0.5887, 23.0526, 1.0504, 0.4091, 0.0, 23.4172, 26.0656, 1.8654, 49.05, 0.0, 0.0, 0.9487, 1.375], [55.4237, 15.7027, 0.0, 5.1842, 0.0, 4.4885, 18.277, 0.0, 0.0, 1.2925, 11.9395, 0.6105, 9.1092, 4.125, 50.5062, 0.0245, 4.1803, 13.0, 6.4833, 0.0, 0.662, 167.8205, 6.3239], [44.8305, 0.2432, 0.0, 24.5921, 0.0, 0.0, 7.5819, 22.027, 16.6239, 2.4455, 2.4209, 13.3266, 2.7368, 16.1849, 12.2955, 11.2346, 5.9816, 6.0, 11.6346, 29.3667, 0.0, 5.0423, 6.2564, 9.1534], [33.3898, 0.0, 0.0, 17.4079, 0.0, 0.0, 12.706, 0.0, 12.0367, 0.0, 12.8478, 7.6452, 0.0842, 1.9916, 13.2159, 54.5802, 0.3497, 17.5, 22.1731, 1.6667, 24.4561, 19.0141, 48.3077, 9.358], [5.5872, 0.0, 5.4955, 22.3105, 6.7368, 26.4454, 2.5114, 30.6667, 26.3006, 17.5902, 40.6346, 29.25, 42.5965, 23.0845, 17.2308, 33.0682], [78.6949, 37.2432, 0.0, 62.4737, 3.9495, 57.7568, 11.4404, 0.0, 7.1791, 16.4274, 3.0105, 29.8992, 28.0], [60.661, 24.973, 0.0, 30.9605, 0.0, 19.6554, 16.3649, 2.8991, 0.0, 2.1104, 8.4718, 19.7895, 27.9076, 36.8182, 39.4691, 7.4663, 10.377, 24.5], [33.4865, 0.0, 26.4474, 0.0, 30.7473, 8.6757, 1.4037, 4.1545, 0.6299, 35.8739, 27.2273, 24.5556, 11.184, 22.5738, 7.0385, 18.4667, 53.614, 19.4648], [0.0, 60.5921, 0.0, 0.0, 9.0398, 24.8311, 33.8165, 0.0, 2.8478, 39.7298, 1.0211, 34.0, 0.9886, 4.3951, 24.4969, 5.082, 14.1346, 24.0, 15.6316, 41.5211, 92.4103, 23.767], [14.5763, 134.4054, 3.3137, 49.8421, 0.0, 20.7397, 27.0811, 11.7982, 0.0, 4.6119, 9.754, 12.0316, 29.6891, 54.75, 58.9877, 4.638, 7.5328, 14.1154, 15.9, 12.2456, 6.7465, 26.8205, 28.1534], [4.7182, 9.8784, 37.3211, 5.1455, 24.1015, 26.6411, 37.7895, 44.7227, 46.5909, 6.5926, 8.3742, 28.1311, 35.1154, 8.3833, 94.4035, 13.2535, 40.5128, 30.7898], [16.7451, 58.9342, 21.1803, 0.0, 12.1838, 11.9324, 12.578, 0.0, 25.3463, 41.4395, 22.6737, 35.7059, 7.6364, 43.4321, 19.3374, 28.623, 13.8654, 53.05, 64.9825, 22.6761, 47.6923, 14.8125], [176.6441, 90.9459, 19.9216, 59.9868, 0.0, 34.5773, 15.1216, 48.1468, 1.1091, 4.5015, 11.1371, 9.6421, 38.5462, 32.5682, 8.963, 5.546, 3.9344, 5.7885, 6.9167, 55.8596, 20.0141, 0.0, 7.4148], [118.6271, 5.7027, 0.0, 36.6316, 0.0, 44.83, 28.777, 20.0642, 0.0, 18.8896, 15.9032, 22.3474, 25.6891, 39.3409, 11.9383, 13.0307, 20.3689, 28.9615, 17.3, 0.0, 26.1282, 9.9886], [94.1008, 200.0568, 169.5556, 28.681, 33.2787, 116.4038, 56.45, 171.1404, 108.0, 163.1538, 14.5227], [51.9174, 0.0, 59.3522, 175.2097, 0.0, 159.0, 7.2955], [0.0, 55.4868, 0.0, 19.4545, 33.6478, 15.8108, 23.2477, 1.0182, 17.9194, 45.2258, 11.6737, 75.0924, 52.6591, 81.5185, 19.9877, 24.2623, 71.7692, 53.1, 55.7544, 9.3239, 28.4359, 13.8977], [64.9322, 158.6757, 0.0, 34.9079, 16.5, 22.4946, 49.6689, 21.3119, 6.8545, 11.7224, 36.4476, 39.7263, 41.2941, 61.1023, 67.7407, 21.6503, 35.7131, 53.0769, 108.5167, 14.2807, 7.1127, 152.641, 17.0625], [131.8714, 0.0, 142.4495], [34.339, 70.2162, 24.3725, 40.7368, 0.1311, 0.0, 49.83, 33.1689, 34.4037, 0.0, 16.8388, 48.4073, 24.4105, 18.6218, 65.4432, 55.4938, 13.5644, 23.8197, 29.8462, 22.2333, 99.6491, 18.7746, 51.1795, 16.0398], [3.9189, 0.0, 38.4605, 29.9005, 97.8176, 78.3761, 0.0, 7.1761, 53.6935, 54.3684, 76.9328, 2.8636, 10.4074, 71.8282, 15.1148, 89.4615, 4.0833, 98.8947, 41.0845, 100.5128, 58.5852], [34.4746, 54.4054, 0.0, 4.8816, 0.0, 0.0, 43.0949, 18.7027, 9.9817, 0.3364, 1.4955, 47.3226, 11.3368, 54.6723, 104.8409, 84.1481, 73.4233, 74.0082, 14.0385, 163.95, 204.2105, 0.0, 27.7436, 9.7443], [110.4312, 31.9364, 88.9881, 282.6815, 2.1053, 6.5546, 47.4091, 6.8642, 0.2025, 7.4344, 1.9038, 16.7333, 2.1579, 17.9577, 15.1282, 9.8352], [201.8952, 31.1474, 245.2353, 7.0682, 205.679, 85.6564, 140.0574, 56.5577], [175.7458, 149.7568, 0.0, 74.8816, 0.0, 54.8438, 78.3108, 44.2844, 0.0, 7.7403, 18.5766, 9.6947, 109.8992, 45.7273, 21.5062, 8.6442, 13.5656, 59.4423, 174.6167, 244.2982, 20.5493, 129.0769, 13.0511], [164.4407, 155.1081, 0.0, 94.8947, 0.0, 0.0, 60.2925, 80.3108, 10.8165, 5.5091, 33.6866, 68.9355, 15.0737, 72.5882, 46.1136, 55.4074, 12.5276, 31.7623, 93.4231, 515.8167, 113.9298, 20.3803, 268.5641, 25.6875], [123.1017, 55.973, 0.0, 62.4211, 0.0, 0.0, 89.3691, 0.0, 111.7706, 0.0, 39.5134, 50.7379, 103.7368, 99.8319, 260.0227, 202.358, 59.2822, 40.2459, 81.6538], [133.0847, 19.4054, 0.0, 125.5526, 0.0, 13.1364, 115.2634, 5.0, 50.6697, 80.0727, 83.0657, 110.5565, 52.2632, 167.4454, 71.5227, 198.9136, 15.5337, 125.1148, 91.3269, 205.4833]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

