created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Nickar Foulblade", "Sub Train", "Clean And Green", "Victoria Raskae", "Kittendo", "Cormac Shadowcharm", "Snowe Shadowcharm", "Kittendo", "Skylieonna", "Glorious Gluvs", "Lasting Beauty", "Reckkyy", "Zetsu Shinigami", "Serum Vision", "Steamy Steam", "Raelyn Sunray", "Black Raspberry Pie", "Vanhelsing Wizard", "Aira Draugr", "Regis Hawkesburne", "Hawaiian Supreme", "Morv\u00e4rth", "High Sorcer Baradun", "Darks Na", "Pafema", "Beware My Math", "Kary\u00edna", "Melody Phoenixstorm", "Bella Sassy", "Empressy", "Forever Dreaming", "Latedoctor", "Smol Gluvs", "Belvyn Brightblade", "Lord Erin The Wise", "Seiker Novus Terra", "Poppy Pittstop", "Blaize Harlot", "Tootsie Pop Rocks", "Malfax Jinn", "Daphne Agla\u00e9", "Mistwalker Cael", "Cat Wigglebooty", "Sonja Wintersong", "Koralia Danai", "Drevarr Moonwillow", "Traidoruns Maximus", "Hyde En Sikh", "Xanvias", "Toka Lockhart", "Cyclotechnist Farra"];
const professions = ["Willbender", "Firebrand", "Druid", "Vindicator", "Untamed", "Mechanist", "Reaper", "Soulbeast", "Firebrand", "Berserker", "Spellbreaker", "Scrapper", "Soulbeast", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Chronomancer", "Herald", "Berserker", "Spellbreaker", "Reaper", "Tempest", "Dragonhunter", "Druid", "Scrapper", "Vindicator", "Scrapper", "Firebrand", "Spellbreaker", "Scourge", "Reaper", "Reaper", "Firebrand", "Weaver", "Tempest", "Mechanist", "Scourge", "Scrapper", "Firebrand", "Reaper", "Herald", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Reaper", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.016, 0.0632, 0.0152], [0.0921, 0.0249, 0.0, 0.0, 0.0071], [0.0119, 0.1184, 0.0221], [0.0, 0.0459, 0.0, 0.0, 0.0, 0.0], [0.016, 0.0517, 0.0203, 0.0226, 0.0], [0.0051, 0.0, 0.0, 0.0, 0.0, 0.0249, 0.0047, 0.0, 0.0571], [0.016, 0.0, 0.0113, 0.0152, 0.0, 0.0526, 0.0138, 0.0024, 0.0, 0.0286], [0.006, 0.0166, 0.0189, 0.0, 0.0429], [0.0414, 0.0189], [0.016, 0.0517, 0.0152, 0.0226, 0.0152, 0.0179], [0.0, 0.0169, 0.0, 0.0119, 0.0304, 0.0189, 0.0], [0.1447, 0.0193, 0.0189, 0.0], [0.0, 0.058, 0.0105, 0.0116, 0.0, 0.0], [0.0314, 0.0211, 0.0173, 0.0115, 0.0163], [0.0, 0.0632, 0.0203, 0.0169, 0.0, 0.006, 0.0249, 0.0047], [0.0053, 0.0575, 0.0051, 0.0452, 0.0227, 0.006, 0.0, 0.011, 0.0047, 0.0], [0.0, 0.0, 0.0051, 0.0056, 0.0227, 0.006, 0.011, 0.0047, 0.0153, 0.05, 0.0, 0.0, 0.0, 0.0077, 0.0163], [0.0053, 0.0402, 0.0102, 0.0, 0.0152, 0.0, 0.1447, 0.0083, 0.0118, 0.0, 0.0071], [0.0106, 0.0747, 0.0051, 0.0169, 0.0, 0.0179, 0.0193, 0.0047, 0.0, 0.0071], [0.0106, 0.0517, 0.0, 0.0113, 0.0, 0.0298, 0.0658, 0.0055, 0.0094, 0.0076, 0.0143], [0.016, 0.0575, 0.0, 0.0, 0.0076, 0.006, 0.0658, 0.0414], [0.0, 0.0217, 0.0, 0.0116, 0.0154, 0.0407], [0.0, 0.0226, 0.0076, 0.0, 0.0276, 0.0212, 0.0, 0.029], [0.0331, 0.0165, 0.0, 0.0214, 0.0, 0.029, 0.0211, 0.0], [0.0, 0.0531, 0.0105, 0.0173, 0.0038, 0.0183], [0.0483, 0.0, 0.0387], [0.016, 0.0517, 0.0102, 0.0, 0.0227, 0.0476, 0.0526, 0.0193, 0.0024, 0.0, 0.0214], [0.0106, 0.0517, 0.0, 0.0395, 0.0379, 0.006, 0.0331, 0.0094, 0.0076], [0.0556, 0.0211, 0.0231, 0.0231, 0.0224], [0.0, 0.0083, 0.0, 0.0, 0.0071, 0.0386, 0.0105, 0.0289, 0.0346, 0.0244], [0.0221, 0.0142, 0.0, 0.0071, 0.0, 0.0362, 0.0105, 0.0231, 0.0154, 0.0163], [0.0, 0.0517, 0.0152, 0.0056, 0.0379, 0.0179, 0.1447, 0.0055, 0.0189, 0.0153, 0.0286], [0.0083, 0.0142, 0.0076, 0.0429, 0.0, 0.029, 0.0316, 0.0116, 0.0154, 0.0224], [0.0, 0.0632, 0.0, 0.0169, 0.0076, 0.006, 0.2368, 0.0249, 0.0024, 0.0076, 0.0286], [0.0, 0.0632, 0.0, 0.0395, 0.0152, 0.0298, 0.1579, 0.0221, 0.0094, 0.0, 0.0143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0106, 0.0517, 0.0, 0.0452, 0.0, 0.0238, 0.1316, 0.0331, 0.0165, 0.0, 0.0071, 0.0], [0.0, 0.0282, 0.0152, 0.0119, 0.0083, 0.0189, 0.0, 0.0357, 0.0, 0.0435, 0.0211, 0.0347, 0.0192], [0.0, 0.0402, 0.0, 0.0056, 0.0, 0.0, 0.1711, 0.0083, 0.0094, 0.0, 0.0, 0.0, 0.0483, 0.0105, 0.0173, 0.0115, 0.0122], [0.0053, 0.0632, 0.0102, 0.0395, 0.0, 0.0119, 0.0276, 0.0118, 0.0076, 0.0071, 0.0, 0.0314, 0.0, 0.0058, 0.0154, 0.0143], [0.0, 0.0805, 0.0102, 0.0, 0.0, 0.006, 0.0249, 0.0189, 0.0, 0.0429, 0.0, 0.0435, 0.0, 0.0058, 0.0154, 0.0122], [0.0, 0.046, 0.0051, 0.0169, 0.0152, 0.006, 0.0497, 0.0142, 0.0076, 0.0, 0.0, 0.0386, 0.0, 0.0154, 0.0204], [0.0, 0.0402, 0.0, 0.0734, 0.0076, 0.006, 0.0138, 0.0165, 0.0, 0.0214, 0.0, 0.0411, 0.0105, 0.0058, 0.0154, 0.0204], [0.0, 0.0632, 0.0102, 0.0508, 0.0076, 0.006, 0.1579, 0.0221, 0.0142, 0.0076, 0.0286, 0.0, 0.0386, 0.0, 0.0116, 0.0], [0.0, 0.1711, 0.0276, 0.0047, 0.0076, 0.0071, 0.0459, 0.0, 0.0058, 0.0269, 0.0387], [0.0, 0.0517, 0.0102, 0.0508, 0.0303, 0.0119, 0.1447, 0.0055, 0.0071, 0.0, 0.0286, 0.0, 0.0386, 0.0105, 0.0, 0.0115, 0.0183], [0.0053, 0.0517, 0.0102, 0.0282, 0.0076, 0.006, 0.1053, 0.011, 0.0, 0.0, 0.0143, 0.0154, 0.0459, 0.0105, 0.0116, 0.0346, 0.0265], [0.016, 0.0575, 0.0, 0.0282, 0.0152, 0.0, 0.1842, 0.0276, 0.0094, 0.0, 0.05, 0.0, 0.0435, 0.0211, 0.0231], [0.0, 0.0632, 0.0, 0.0056, 0.0076, 0.0, 0.1711, 0.011, 0.0142, 0.0, 0.0214, 0.0, 0.0435, 0.0, 0.0405, 0.0231, 0.0305], [0.0, 0.0747, 0.0102, 0.0169, 0.0076, 0.0, 0.1842, 0.0083, 0.0094, 0.0076, 0.0357, 0.0, 0.0507, 0.0105, 0.0116, 0.0269, 0.0204], [0.0, 0.0575, 0.0051, 0.0452, 0.0379, 0.006, 0.1974, 0.011, 0.0024, 0.0, 0.0357, 0.0154, 0.0483, 0.0, 0.0058, 0.0308, 0.0163], [0.0053, 0.0517, 0.0051, 0.0056, 0.0076, 0.0, 0.25, 0.0331, 0.0118, 0.0153, 0.0643, 0.0, 0.0314, 0.0105, 0.0636, 0.0308, 0.0102]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

