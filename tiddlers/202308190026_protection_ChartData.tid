created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Seiker Novus Terra", "Brutal Araden", "Keypek The Drunk", "J\u00e2sm\u00eene", "Miphest\u00f6", "P\u00edogre", "Wall Knot", "Vee U", "Arriasa", "Ryvalia Fazebringer", "Tribal S", "Air One Com", "Venomina The Sly", "Sub Train", "Zaedy Zae", "Drevarr Moonwillow", "Gavann", "Kisumaiassu", "Darks Na", "Yummy Kiwi", "Pr\u00e6tor Lightbringer", "Koralia Danai", "Solus Luxes", "Gestern Yesteryear"];
const professions = ["Tempest", "Tempest", "Vindicator", "Scrapper", "Tempest", "Tempest", "Scrapper", "Firebrand", "Tempest", "Druid", "Chronomancer", "Druid", "Firebrand", "Druid", "Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.9174, 9.546, 33.4153, 0.0, 10.9229, 9.6255, 23.1412, 0.0, 6.3346, 14.382, 24.0686, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 48.4834, 10.5214, 15.0158, 0.0, 14.2297, 0.0, 9.5242, 35.4389, 75.1037], [106.4473, 19.5736, 82.5987, 40.4838, 32.8941, 20.0182, 43.8867, 0.0, 32.5123, 11.9117, 38.6377, 0.0], [446.8107], [26.0442, 10.0792, 60.1312, 14.6412, 26.8677, 21.2737, 30.8731, 10.3785, 58.1558, 6.1589, 22.0013, 8.5473, 0.0, 0.0, 14.6349, 0.0, 7.7519, 0.0, 0.0, 19.3145, 19.2571, 38.4084, 22.6044, 0.0, 14.9823, 17.3374, 0.0, 24.7491, 11.6668, 44.3896], [32.3215, 9.3052, 33.9055, 16.758, 23.8964, 13.95, 44.8123, 0.0, 47.7763, 10.4904, 50.9427, 0.0, 7.3674, 9.9783, 0.0, 0.0, 73.9489, 62.1058, 23.2902, 31.4309, 0.0, 0.0, 18.4005, 23.0806], [57.0301, 14.2588, 103.6773, 14.6853, 56.7067, 0.0, 80.096, 14.6888, 53.2714, 66.4956, 52.7638, 15.3171, 0.0, 0.0, 0.0, 32.8698, 0.0, 0.0, 0.0, 67.867, 0.0, 0.0, 11.6128, 0.0], [22.5049, 22.1708, 87.0922, 13.3623, 27.5792, 60.4035, 63.7065, 2.6247, 60.9797, 17.9352, 27.6616, 11.2515, 0.0, 13.1017, 20.1701, 25.0774, 2.5687, 0.0, 30.1644, 30.4646, 2.6559, 0.8073, 0.0, 17.3988, 3.0259, 8.7586, 28.8508, 1.7105, 55.5991], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 74.4107, 0.0, 31.6665, 38.1046, 0.0, 24.3261, 79.4084, 21.2222, 84.5711, 74.2988, 286.9632], [38.2649, 0.0, 30.8009, 4.4982, 48.2949, 62.217, 31.4721, 30.5094, 63.7272, 28.3241, 17.1286, 22.8811, 29.1778, 20.8978, 0.0, 18.4957, 9.1282, 0.0, 81.4131, 34.1179, 50.1557, 47.5769, 9.072, 0.0, 24.6976, 0.0, 23.2197, 27.9827, 125.5464], [86.6137, 34.7268, 91.0955, 58.9176, 67.1274, 72.7492, 86.4121, 37.2758, 39.2285, 37.427, 29.532, 0.0, 0.0, 25.3672, 37.352, 50.3571, 0.0, 123.12, 113.9328, 136.881, 79.4383, 0.0, 0.0, 34.3476, 0.0, 19.118, 47.6758, 217.0159], [91.0879, 39.7664, 143.8737, 31.4433, 44.2773, 83.5605, 52.9798, 49.3399, 83.1125, 70.861, 74.9621, 25.5474, 23.0874, 0.0, 35.1366, 31.878, 0.0, 13.8621, 63.8685, 78.5146, 123.3972, 76.6935, 0.0, 0.0, 81.2893, 0.0, 20.5779, 32.0178, 293.2405], [173.0079, 82.584, 140.481, 0.0, 110.5877, 58.9831, 105.9707, 0.0, 0.0, 0.0, 0.0, 17.0016, 22.7093, 0.0, 0.0, 158.517, 139.0723, 165.1766, 132.0743, 0.0, 0.0, 12.3488, 45.2228, 92.106, 230.2431], [141.44, 22.446, 114.2166, 53.1846, 82.1097, 96.8828, 143.9113, 14.5443, 117.3802, 86.089, 41.8862, 0.0, 0.0, 15.0438, 11.132, 14.1434, 173.1375, 112.8802, 93.263, 168.2951, 0.0, 0.0, 57.8185, 15.0275, 7.4734, 59.2549, 263.6474], [177.7016, 23.994, 94.8537, 79.7328, 85.7925, 93.6045, 134.6549, 0.0, 128.7518, 66.0557, 102.4268, 0.0, 14.6918, 20.5114, 0.0, 45.6982, 24.1868, 16.7149, 155.7468, 96.9048, 116.6553, 106.1869, 0.0, 29.1955, 0.0, 76.1592, 83.2901, 243.6945], [277.7285, 151.1633, 119.6046, 0.0, 11.2955, 0.0, 0.0, 18.0062, 11.9011, 23.599, 23.9071, 234.6206, 265.9464, 218.1924, 242.6744, 0.0, 34.5559, 74.7469, 23.4749, 100.2478, 156.4486, 360.7217], [194.0627, 67.8196, 42.7291, 110.8233, 127.0984, 78.12, 158.6673, 46.1373, 155.3875, 65.345, 121.5242, 10.8165, 14.4578, 0.0, 11.4117, 28.2753, 18.2305, 0.0, 198.9158, 242.1072, 289.2888, 115.7668, 0.0, 19.0098, 56.2646, 0.0, 32.0835, 65.8339, 474.386], [118.9352, 13.7772, 217.4037, 41.1894, 99.2682, 132.7343, 133.2936, 70.9638, 50.3712, 23.2819, 57.8335, 27.7599, 9.4172, 79.695, 61.6989, 36.6822, 64.1406, 34.1932, 119.8111, 125.2022, 270.6975, 77.8775, 5.103, 183.5734, 92.8203, 54.8636, 69.5895, 80.8778, 400.8517], [262.6457, 20.812, 125.0827, 122.6862, 241.9767, 286.3238, 107.8655, 24.5857, 136.3075, 119.9628, 139.3418, 0.0, 20.867, 15.617, 0.0, 25.8115, 91.8086, 19.9695, 210.0735, 176.1624, 187.956, 234.9243, 76.4316, 217.9683, 50.7036, 196.1662], [170.1554, 22.1708, 167.5667, 73.2501, 155.0961, 236.3827, 256.1328, 0.0, 234.913, 117.2894, 119.2601, 11.5013, 0.0, 36.2853, 52.9368, 64.5049, 17.0201, 11.2102, 190.3743, 132.0754, 207.5688, 188.4776, 0.0, 22.9567, 68.2045, 0.0, 54.6775, 120.0887, 477.0763], [148.1848, 43.7052, 268.7113, 162.6849, 151.3715, 73.377, 218.7257, 33.9287, 147.5266, 108.4572, 126.2001, 0.0, 0.0, 0.0, 51.8029, 33.3077, 110.2473, 19.9399, 0.0, 237.3138, 207.6797, 143.3165, 209.6289, 17.8416, 112.1256, 172.1469, 420.1321], [182.6433, 37.3068, 252.0445, 168.8589, 164.596, 134.9663, 266.9683, 27.0178, 289.9397, 133.2619, 166.0683, 0.0, 39.1552, 0.0, 17.0016, 45.0542, 2.7535, 0.0, 224.617, 212.6333, 554.1638, 255.1606, 20.5632, 85.7857], [242.2778, 132.3368, 347.6335, 238.0077, 257.9216, 108.1822, 249.381, 49.1473, 224.3808, 167.1358, 213.1718, 15.752, 35.4844, 12.6836, 19.5261, 31.0279, 23.4881, 207.1494, 320.0026, 262.5255, 289.444, 0.0, 0.0, 140.9069, 0.0, 126.735], [226.7433, 292.8105, 309.5482, 36.5294, 247.6584, 152.7199, 221.1455, 32.9034, 79.212, 0.0, 91.6798, 79.1789, 23.8267, 341.8888, 346.1947, 328.7187, 278.1418, 0.0, 83.4498, 126.1048, 0.0, 124.0584, 120.2203, 737.8093], [355.0693, 110.338, 350.7381, 156.8637, 159.1556, 197.7413, 284.2835, 47.0282, 362.0621, 201.2803, 255.5502, 0.0, 34.401, 0.0, 0.0, 59.4026, 38.375, 11.3744, 82.6101, 429.8427, 283.9032, 457.4277, 384.4901, 0.0, 45.9135, 191.6923, 22.2893, 155.551, 194.3437, 723.9095], [293.8988, 125.6804, 197.0604, 48.7305, 227.8733, 206.46, 316.3545, 111.37, 304.4405, 158.4727, 253.8768, 33.3761, 52.7114, 23.9269, 58.0373, 30.5826, 9.5634, 29.1707, 309.8007, 304.5226, 416.1591, 187.9394, 58.4388, 170.6855, 170.7566, 35.1827, 235.36, 289.169, 1079.4749]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

