created: 20230701000406000
creator: Drevarr
modified: 20230705163539988
modifier: drevarr
tags: ChartData
title: 202307010004_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Broken Cheese", "Brad Bellick", "Dingle Mcbingle", "Aronorf Xideliesi", "Primal Clone", "Ima Lou", "High Sorcer Baradun", "Morton Saltbringer", "Mike The Archmagus", "Vhalloe", "Drumina", "Pale Pam", "Klengah", "Sakis Ranger", "Demon Staph", "Tegan Parker", "Drevarr Moonwillow", "Ak\u00e1nt\u00f3r", "Arriasa", "Tribal S"];
const professions = ["Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Druid", "Tempest", "Chronomancer", "Tempest", "Druid", "Druid", "Druid", "Druid", "Druid", "Druid", "Tempest", "Scrapper", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1967, 0.8361, 0.5641, 0.2708, 0.3152, 0.0, 0.099, 0.8095, 0.1, 0.6471, 0.0269, 0.0, 0.1596, 0.12, 0.02, 0.0, 0.0, 0.4066, 0.3932, 0.0], [0.3607, 0.3443, 0.1795, 0.6354, 0.2609, 0.3, 0.2178, 0.3968, 0.34, 0.8039, 0.3184, 0.3867, 0.3649, 0.2778, 0.234, 0.4697], [0.1923, 0.2604, 0.1196, 0.148, 0.5867, 0.3108, 0.4167, 0.6064, 0.23, 0.34, 0.6667, 0.1319, 0.1068, 0.2431], [0.4754, 0.3934, 0.2436, 0.2604, 0.4348, 0.04, 0.1485, 0.2857, 0.46, 0.3333, 0.2332, 0.2667, 0.3243, 0.2639, 0.2447, 0.22, 0.25, 0.5303, 0.0879, 0.1282, 0.0655], [0.6066, 0.0, 0.0, 0.4896, 0.4239, 0.38, 0.0, 0.4444, 0.68, 0.6275, 0.1883, 0.0933, 0.7432, 1.0417, 0.3617, 0.57, 0.5, 0.4848, 0.0, 0.0989, 0.3504, 0.3108], [1.4918, 1.3443, 0.8718, 1.0312, 0.913, 0.5, 0.3861, 0.3016, 2.36, 0.7451, 0.565, 0.8], [1.3279, 0.8033, 0.0897, 1.1458, 1.087, 0.64, 0.5545, 0.8889, 1.2, 0.3725, 0.9955, 1.3067], [0.5246, 0.377, 0.4615, 0.7396, 0.837, 0.04, 0.2475, 0.619, 0.82, 0.2157, 0.2735, 0.3514, 0.5139, 0.8298, 0.69, 0.56, 0.4545, 0.0, 0.3077, 0.2778, 0.2326], [0.125, 2.1868, 1.1538, 1.0761], [0.2332, 1.0133, 1.5405, 0.375, 1.5426, 0.55, 1.0, 0.5152, 0.0, 0.4725, 0.2137, 0.8351], [0.9193, 1.0533, 1.0811, 0.3333, 1.8936, 1.07, 1.15, 0.6212, 0.5604, 0.8034, 0.5455], [2.6885, 2.2787, 2.5256, 2.1875, 1.9239, 1.48, 0.8119, 1.5873, 2.4, 1.7451, 1.0942], [0.3607, 2.0492, 0.5769, 1.2188, 0.8587, 0.52, 0.198, 1.0317, 2.76, 2.1961, 0.8969, 1.92, 0.473, 0.9722, 1.617, 0.55, 1.58, 0.3788, 0.0, 1.011, 0.735, 0.1586], [2.459, 2.4098, 1.1667, 1.6146, 1.6957, 1.14, 0.5149, 0.6349, 1.14, 1.3725, 0.6816, 2.2, 1.1351, 0.7639, 1.7234, 0.0, 0.78, 1.303, 0.0, 0.8462, 0.5769, 0.6977], [1.377, 1.9836, 1.5641, 1.6771, 1.7935, 0.84, 1.099, 1.2857, 1.78, 1.6078, 1.7265, 1.92, 1.9189, 1.0, 1.8511, 2.0, 1.52, 3.3333], [2.1475, 0.2459, 1.6026, 0.9271, 1.2283, 0.5, 0.6931, 1.254, 2.08, 0.5294, 1.4081, 1.8667, 1.6622, 1.125, 0.734, 1.34, 0.56, 1.8485, 0.0, 1.5934, 0.812, 0.9366], [1.9508, 0.7377, 1.641, 1.8438, 1.1304, 1.26, 0.6535, 1.3333, 1.18, 1.1373, 1.2511, 1.56, 0.8919, 1.125, 1.617, 1.26, 1.53, 2.5152, 0.0625, 1.3516, 1.0769, 1.1311], [2.2951, 1.7377, 1.5641, 1.8333, 1.3043, 1.34, 0.6634, 1.0, 3.0, 2.3725, 1.7175, 1.4667, 1.473, 1.1667, 2.4681, 2.01, 2.24, 2.4848, 0.0, 1.0769, 0.641, 0.7632], [1.8197, 1.7213, 1.8333, 2.0625, 1.4783, 1.5, 0.505, 1.7937, 2.44, 3.1569, 1.417, 2.7467, 2.1216, 1.4167, 2.8617, 1.07, 1.47, 2.2121, 0.0625, 1.2637, 1.5171, 1.148], [1.8361, 2.8033, 1.7436, 2.4896, 1.1848, 1.3, 0.9604, 1.746, 3.36, 1.7255, 1.7848, 2.1733, 2.0811, 2.0278, 2.3085, 2.27, 2.39, 2.2273, 0.0, 2.1538, 1.2521, 1.5137]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

