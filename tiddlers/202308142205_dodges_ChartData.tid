created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Rehdav", "Kisumaiassu", "Daphne Agla\u00e9", "Tootsie Pop Rocks", "Bee Nemesis", "Mielikki Embla", "Koralia Danai", "Bella Sassy", "Morton Saltbringer", "Blancooo Padreee", "Tropcaller", "Aqua Leon", "Reddoring Frost", "Be\u00eb", "Oo Dads Mad", "Zaedy Zae", "Darkandshadow", "Cat Wigglebooty", "Rozaalyna", "Mort\u00e4rion", "Drevarr Moonwillow", "Mike The Archmagus", "Rina Of Theros", "Milvia Rosalyn", "Y U So Mean", "Legacy Of Mathus", "High Sorcer Baradun", "My Birthday Girl", "Zeke Lightbringer", "Crabbedmermaid", "Name Is What", "Revitiel", "Pr\u00e6tor Lightbringer", "Raziel Umbra", "Black Raspberry Pie", "Ryvalia Fazebringer", "Permanent Dawn", "Palm Sauce", "Crusader Siolith", "Lord Erin The Wise", "Arcanophage Farra", "Sister Elon\u00edth", "Tegan Parker", "Klengah", "Mike The Archmagus", "Eibh\u00ebar", "Jerryatric Reflexes", "Mistwalker Cael", "Newtype Khan"];
const professions = ["Berserker", "Daredevil", "Firebrand", "Scourge", "Scrapper", "Berserker", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Firebrand", "Vindicator", "Reaper", "Scourge", "Berserker", "Druid", "Mirage", "Scrapper", "Scourge", "Scrapper", "Scrapper", "Tempest", "Scourge", "Druid", "Mirage", "Berserker", "Tempest", "Scrapper", "Reaper", "Dragonhunter", "Scourge", "Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Weaver", "Vindicator", "Firebrand", "Weaver", "Spellbreaker", "Firebrand", "Tempest", "Druid", "Weaver", "Chronomancer", "Spellbreaker", "Vindicator", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 3, 8, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [2, 0, 1, 1, 0, 7, 3, 0, 3, 0], [0, 2, 11, 0, 3, 1, 0, 1, 0, 1], [0, 2, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 0, 1, 3, 0, 0], [1, 2, 9, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0], [1, 1, 7, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 2, 2, 0, 2, 0, 2, 0, 0], [3, 13, 3, 1, 0, 1, 1, 0], [1, 1, 5, 2, 0, 1, 0, 0, 1, 0, 2, 0, 1, 7, 0, 3, 0, 1, 0, 0], [2, 5, 8, 2, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0], [0, 1, 8, 3, 3, 2, 0, 0, 0, 0, 0, 1, 4, 1, 1, 0, 1, 1, 0], [1, 3, 12, 5, 0, 1, 0, 1, 0, 0, 0, 0, 3], [9, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 6, 1, 5, 1, 1, 0, 0], [9, 2, 11, 3, 1], [6, 22], [0, 3, 16, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 4, 0, 0], [0, 3, 15, 7, 0, 2, 2], [2, 5, 5, 5, 2, 0, 0, 0, 4, 0, 1, 0, 0, 2, 1, 0, 2, 0, 0], [1, 4, 11, 0, 7, 3, 4, 1, 0], [2, 3, 12, 2, 0, 0, 2, 0, 1, 0, 1, 0, 0, 3, 2, 0, 3, 1], [4, 1, 22, 0, 0, 0, 0, 3, 0, 0, 1, 2], [18, 4, 2, 4, 0, 0, 0, 1, 2, 0, 3], [0, 5, 15, 1, 1, 2, 1, 0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 1, 1, 1, 1], [11, 6, 6, 6, 6], [1, 1, 13, 7, 2, 1, 0, 0, 1, 2, 1, 2, 0, 1, 1, 0, 3, 1, 0, 0, 0], [3, 2, 6, 4, 3, 1, 3, 0, 0, 1, 6, 4, 0, 4, 0, 1], [1, 8, 12, 10, 4, 3], [0, 7, 13, 4, 3, 2, 1, 2, 0, 2, 0, 0, 1, 1, 2, 0, 1, 0, 0], [0, 6, 11, 2, 1, 6, 4, 1, 0, 1, 1, 0, 0, 1, 1, 3, 0, 1], [1, 11, 4, 0, 6, 0, 1, 0, 0, 0, 2, 2, 1, 1, 1, 3, 2, 2, 0, 2], [6, 17, 5, 4, 5, 1, 1, 2], [0, 7, 4, 1, 2, 1, 1, 2, 0, 2, 10, 2, 5, 1, 4], [2, 0, 17, 3, 1, 0, 2, 1, 0, 0, 0, 1, 1, 2, 6, 0, 4, 2, 2, 0, 1], [5, 20, 4, 1, 3, 1, 0, 0, 4, 1, 4, 4], [6, 26, 9, 1, 2, 2, 0, 1, 0, 0, 0, 0], [3, 1, 24, 5, 3, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 3, 0, 0], [3, 20, 7, 6, 2, 3, 2, 0, 0, 1, 1, 3, 4, 1, 0, 1, 2, 0, 0], [4, 10, 18, 1, 0, 4, 1, 0, 2, 1, 2, 1, 1, 1, 4, 1, 3, 0, 5, 1, 1], [9, 26, 8, 1, 3, 2, 1, 2, 0, 6, 0, 3, 0, 4, 0, 0], [2, 8, 25, 3, 4, 2, 0, 1, 0, 2, 0, 3, 2, 2, 6, 4, 2, 4, 0, 0], [5, 27, 4, 3, 3, 3, 2, 4, 1, 0, 2, 2, 4, 0, 5, 1, 4, 1, 1], [2, 10, 29, 7, 1, 1, 5, 0, 0, 0, 0, 4, 0, 2, 3, 0, 4, 1, 4, 0, 1], [2, 10, 31, 6, 0, 3, 4, 2, 2, 0, 1, 0, 2, 6, 4, 1, 3, 0, 2], [3, 27, 8, 5, 4, 2, 1, 0, 0, 0, 4, 1, 1, 7, 1, 4, 1, 7, 1, 2], [3, 1, 35, 5, 5, 5, 3, 2, 0, 2, 1, 4, 6, 1, 4, 2, 4, 0, 1], [2, 13, 30, 4, 3, 3, 3, 2, 1, 1, 1, 2, 1, 2, 7, 3, 7, 3, 5, 3, 2], [2, 10, 50, 2, 4, 5, 1, 4, 9, 4, 2, 4, 4, 3], [1, 8, 45, 9, 6, 4, 5, 2, 1, 2, 0, 1, 1, 5, 7, 3, 7, 2, 4, 0, 3], [13, 44, 9, 4, 6, 3, 2, 3, 3, 3, 2, 3, 10, 1, 6, 1, 6, 2, 3], [5, 6, 42, 10, 6, 5, 5, 3, 0, 4, 4, 2, 3, 5, 10, 0, 7, 2, 7, 3], [3, 16, 58, 11, 8, 12, 8, 4, 2, 6, 2, 5, 4, 4, 9, 3, 7, 1, 8, 1, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

