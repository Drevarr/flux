created: 20230626011254000
creator: Drevarr
modified: 20230705163537607
modifier: drevarr
tags: ChartData
title: 202306260112_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Skylar Shadowmoon", "Sakis Ranger", "Suredude", "Miphest\u00f6", "Lord Erin The Wise", "Permanent Dawn", "Freyja Asgrimrkin", "Lucky Leipreach\u00e1n", "Mistwalker Cael", "Johosh The Mighty", "Zayde Sunsabre", "Be\u00eb", "Tribal S", "Smol Daddy Tika", "Xanvias Einzbern", "Fribble Bibble", "Newtype Khan", "Demon Staph", "Blancooo Padreee", "Drevarr Moonwillow", "Arcanophage Farra"];
const professions = ["Spellbreaker", "Scrapper", "Druid", "Weaver", "Tempest", "Weaver", "Weaver", "Vindicator", "Scrapper", "Vindicator", "Berserker", "Berserker", "Reaper", "Druid", "Spellbreaker", "Berserker", "Scrapper", "Spellbreaker", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[74.6352, 0.0, 0.0, 37.136, 10.5815, 44.5061, 94.987, 0.0, 56.4094, 52.3328, 26.0766, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 44.3232, 9.0914, 38.2321, 20.2541, 63.2298], [47.5668, 9.1963, 0.0, 61.776, 148.9547, 77.4058, 0.0, 93.8624, 74.9112, 52.8938, 8.5226], [42.0046, 29.9335, 46.2769, 31.0472, 20.608, 43.3843, 27.1472, 7.7907, 57.301, 85.2739, 59.904, 44.7865, 31.5206, 28.871, 40.6824], [33.9259, 0.0, 189.2, 280.1379, 93.6547, 0.0, 149.0404, 86.7104], [15.9306, 101.376, 171.6099, 82.6286, 0.0, 56.0026, 12.1834, 135.031, 30.2602, 0.0, 0.0, 23.5467, 26.2807, 39.664, 0.0, 62.1197, 3.0183, 53.7351, 19.1198, 18.1238, 0.0, 17.8848, 65.7577, 0.0, 49.3046], [31.5652, 20.6144, 0.0, 63.888, 136.6096, 35.8459, 0.0, 129.3233, 86.436, 169.5478, 0.0, 8.2337, 41.5794, 37.6354, 56.6899, 0.0, 21.7027, 13.0589, 45.8942, 29.232, 15.4008, 35.955, 12.7776], [27.8568, 19.9769, 0.0, 148.896, 235.3701, 94.5922, 11.9734, 90.039, 46.4834, 0.0, 18.3427, 15.8269, 62.0834, 3.9799, 51.1888, 27.0144, 0.0, 17.9987, 50.5666, 44.4744, 26.4672, 71.3653, 11.4656], [30.806, 36.6694, 80.637, 159.192, 137.5592, 52.4966, 17.8832, 107.6569, 91.5398, 258.3966, 16.4707, 18.6539, 19.4171, 16.1874, 14.432, 23.3128, 20.8589, 8.1799, 20.4854, 16.0747, 12.0269, 18.1728, 19.9217], [88.2716, 27.7242, 0.2649, 177.232, 357.0571, 103.0738, 3.3961, 167.7079, 29.9096, 178.3368, 66.3138, 17.1904, 0.0, 24.624, 9.1729, 51.1594, 0.0, 0.0, 0.0, 24.8851, 44.447, 39.0456, 15.2928, 30.6029, 28.1248, 4.0339, 16.2325], [44.5592, 39.3355, 68.112, 174.68, 168.3541, 60.3979, 8.5261, 128.1987, 72.3867, 325.992, 80.9172, 15.147, 34.7479, 19.8531, 47.8957, 19.1654, 41.676, 28.6541, 22.4322, 44.2923, 33.9355, 68.6534, 16.5888, 28.8641, 56.729, 35.6294], [72.0656, 9.3509, 65.7659, 189.904, 330.6034, 32.2747, 9.7367, 102.484, 81.6614, 230.4316, 72.3467, 7.6797, 0.0, 18.2188, 47.9716, 49.3304, 33.4656, 49.9366, 17.3552, 59.4384, 89.0741, 69.7824, 37.5084, 52.734, 10.3488, 29.1254], [50.5452, 60.433, 91.9512, 190.608, 189.3814, 65.9779, 15.1027, 147.7659, 94.229, 370.2566, 38.0646, 16.9399, 51.1461, 10.2203, 34.8919, 37.4808, 46.2605, 16.3776, 27.8414, 33.2328, 135.9288, 39.7728, 77.3021, 117.5329, 9.2928, 36.5534], [78.8984, 66.6733, 77.7612, 217.712, 312.425, 110.6626, 45.7186, 175.5048, 84.6798, 428.7434, 113.4756, 12.2483, 33.0784, 36.1201, 45.2088, 50.6549, 46.2528, 36.8874, 58.0474, 0.0, 24.6928], [64.8824, 79.9075, 180.0427, 264.264, 288.9558, 129.3667, 230.4578, 210.2453, 127.5204, 12.8304, 83.6753, 7.2589, 77.2234, 53.8835, 20.2032, 50.615, 2.0182, 35.3365, 17.0702, 21.5482, 92.736, 74.8181, 46.8614, 54.2573, 49.7094], [101.0028, 61.7467, 130.6994, 299.2, 381.7472, 136.777, 29.1589, 205.1929, 144.5539, 587.1052, 185.3914, 20.3623, 0.0, 32.2677, 47.7687, 49.8263, 40.2776, 43.3574, 94.3187, 96.2363, 37.3906, 107.4067, 27.4176, 7.303, 44.2646, 24.3302, 41.8766], [148.0148, 101.43, 115.0336, 270.072, 289.7698, 97.1813, 19.4427, 130.2229, 94.5034, 496.6584, 113.4277, 53.1274, 114.7726, 63.6376, 176.0618, 53.3232, 43.9576, 62.039, 28.826, 44.8662, 136.6498, 42.5534, 120.3552, 45.7553, 140.8237, 89.0419, 43.3743], [98.696, 75.1741, 149.7329, 335.984, 598.3963, 51.827, 263.2197, 104.272, 467.8944, 90.8284, 43.8077, 39.2445, 71.6054, 41.7698, 59.7448, 93.9994, 27.8795, 39.3362, 96.7118, 152.2152, 74.2464, 32.0188, 42.5068, 65.3664, 19.228], [125.5016, 93.9532, 205.3198, 263.208, 283.2581, 182.3098, 72.5485, 239.3792, 200.2022, 485.4724, 166.766, 22.0612, 42.5834, 18.0832, 58.6555, 98.2422, 65.3936, 51.072, 98.0693, 111.4177, 39.8208, 105.9869, 81.648, 76.2836, 114.2171, 47.0554, 66.5491], [132.5096, 68.4121, 105.8763, 287.672, 670.4317, 174.3192, 269.817, 156.3531, 519.8294, 112.901, 51.3691, 77.6206, 33.6784, 74.3351, 18.1415, 58.9352, 63.1142, 42.3103, 71.8033, 91.5878, 95.8392, 100.3968, 56.7594, 99.5554, 65.2397], [72.1532, 52.9561, 118.969, 337.568, 646.5556, 203.0674, 0.0, 222.361, 237.356, 762.0862, 111.0816, 14.7361, 42.3225, 60.2743, 108.7716, 58.7144, 62.6035, 54.9016, 56.5523, 22.3406, 155.7648, 87.3216, 79.339, 89.6877, 41.9443, 40.7431], [153.8548, 92.8906, 161.1984, 388.432, 778.5527, 208.9152, 11.8195, 360.0059, 198.501, 471.8894, 58.8924, 74.4757, 83.0075, 113.886, 166.6667, 28.9027, 60.7752, 75.5597, 43.8642, 75.2291, 78.324, 206.3362, 94.8384, 81.5994, 103.9099, 88.007, 41.7551], [111.982, 58.0952, 122.5259, 382.888, 535.45, 251.0554, 63.5504, 311.2754, 187.3603, 861.1622, 260.6108, 46.7122, 45.3881, 111.834, 39.0402, 54.1733, 134.1176, 122.1427, 65.1711, 106.392, 95.9506, 158.1451, 76.6656, 74.6194, 94.6016, 76.0742, 28.9837]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

