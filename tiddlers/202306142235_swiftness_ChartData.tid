created: 20230614223544000
creator: Drevarr
modified: 20230705163535322
modifier: drevarr
tags: ChartData
title: 202306142235_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Raelyn Sunray", "Eibh\u00ebar", "Elon The Archmagus", "River No Hug", "Fribble Bibble", "Primal Clone", "Zayde Sunsabre", "Tegan Parker", "Sub Train", "Johosh The Mighty", "Sygaldry Verdandi", "Bella Sassy", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Chronomancer", "Tempest", "Scourge", "Scrapper", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.1632, 54.1247, 18.5906, 13.4833, 5.3352, 7.4035, 46.5717, 78.5196, 0.0], [16.8232, 0.6876, 8.9243, 136.0356, 27.7248, 25.2713, 17.3075, 9.9297, 18.0403], [3.9288, 0.0, 35.6763, 79.568, 14.4704, 48.6753, 36.8861, 46.6038, 59.675], [15.9015, 113.2235, 38.571, 168.2007, 5.9888], [38.9158, 25.8077, 0.0, 220.3472, 27.056, 39.327, 0.0, 6.1353], [0.0, 8.4567, 42.939, 82.4271, 41.7392, 79.7921, 34.5736, 31.5792, 46.4789], [124.2352, 132.8812, 133.3395, 98.0246], [42.5281, 55.0802, 46.6697, 159.9158, 57.1672, 12.818, 48.1894, 35.7561, 56.3342], [19.6907, 47.963, 54.2041, 132.4617, 45.8736, 132.0254, 117.6062, 0.0, 0.0], [34.6797, 88.5588, 59.4918, 368.8265, 43.016], [60.8595, 17.6367, 45.1335, 69.4961, 81.8672, 96.135, 116.8595, 86.7357, 21.6595], [76.463, 67.5108, 92.472, 132.8191, 164.3728, 54.7307, 58.1757, 73.1646, 17.7619], [31.5609, 14.3505, 86.6514, 228.4047, 184.7712, 108.5552, 92.3863, 62.0874, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

