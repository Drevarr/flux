created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Aira Draugr", "Morton Saltbringer", "Liyo Morgaine", "Eibh\u00ebar", "Lhew Silverhead", "Venomina The Sly", "Xanvias Tseli", "Lucky Leipreach\u00e1n", "Cat Wigglebooty", "Black Raspberry Pie", "Swithblight", "Astraeus Windrunner", "Belvyn Brightblade", "Glorious Gluvs", "Drell The Silent", "Tootsie Pop Rocks", "Tegan Parker", "Soft And Chewy", "Kosair", "Heres A Quarter", "Gabe Malhorn", "Klenga", "Zaedy Zae", "Tribal S", "Sub Train", "Grasszanine", "High Sorcer Baradun", "Bella Bitty", "Solus Luxes", "Mistwalker Cael", "Crusader Siolith", "Drevarr Moonwillow", "Newtype Khan"];
const professions = ["Weaver", "Herald", "Chronomancer", "Herald", "Chronomancer", "Scrapper", "Druid", "Berserker", "Scrapper", "Scrapper", "Chronomancer", "Scourge", "Berserker", "Firebrand", "Berserker", "Druid", "Scrapper", "Tempest", "Druid", "Firebrand", "Herald", "Firebrand", "Firebrand", "Druid", "Druid", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Herald", "Firebrand", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2.3904, 0.8497, 9.3118, 2.6092, 7.2104, 0.0, 8.1673, 7.5293, 0.3059, 0.5248, 0.0, 0.0, 1.6496, 0.0, 0.7722, 0.0, 0.0, 0.0, 0.0, 5.3733], [3.068, 0.9946, 0.9868, 3.987, 0.1702, 0.352, 32.7414, 2.0365, 2.5103, 0.0], [1.9773, 0.0, 3.1046, 0.0, 9.9125, 2.6729, 1.2818, 0.0, 3.6984, 5.3618, 2.2287, 6.4724, 2.1129, 3.0456, 1.9495, 0.5612, 0.1872, 0.351, 0.9234, 0.0, 0.5967, 0.5298], [24.299, 5.9432, 7.8135, 2.7597, 2.0558, 3.599, 3.76, 1.5678, 2.295], [0.0, 0.0, 3.4641, 0.0, 11.4144, 3.5638, 1.7091, 0.0, 4.0066, 8.2138, 2.0976, 5.3645, 2.5872, 4.378, 0.0, 2.1326, 1.5678, 1.674, 0.0, 0.3749, 0.0, 3.1786], [0.0, 7.7452, 40.8517, 7.3186, 3.3114, 3.5926], [18.0246, 0.437, 9.6795, 4.7432, 4.1877, 4.0489, 1.6275, 2.691, 3.672, 1.103, 2.1556, 1.6321, 10.5195], [1.5493, 0.0, 0.0, 5.7844, 0.0, 1.276, 26.1331, 0.0, 4.1126, 0.0, 4.9312, 5.8181, 2.1413, 3.0321, 2.8459, 3.8831, 1.5746, 0.0, 2.2464], [0.0, 0.0, 4.7771, 7.073, 3.059, 12.2451, 0.0, 3.807, 8.9226, 12.2903, 0.819, 1.674, 3.8475, 0.0, 4.7385, 11.352], [0.0, 3.1046, 21.6274, 3.182, 0.0, 0.506, 13.4067, 12.777, 2.4035, 7.6386, 2.6734, 6.5861, 1.7995, 2.3009, 0.7956, 0.702, 1.5133, 0.0], [0.0, 0.0, 2.1896, 1.4183, 0.0, 21.0266, 0.5728, 5.3944, 0.7084, 13.869, 7.7574, 5.0255, 9.0381, 3.0184, 0.0, 1.6496, 3.76, 0.9126, 0.0, 0.9234, 2.0931, 0.0, 4.0867], [4.9088, 0.6512, 3.3114, 4.2484, 0.0, 0.0, 20.1255, 2.8638, 0.0, 3.8962, 2.1574, 5.0195, 3.4523, 3.6152, 0.0, 2.3223, 3.599, 5.163, 0.468, 2.349, 3.4115, 3.4989, 4.1944, 5.449], [3.4362, 0.6275, 7.522, 2.7124, 0.0, 28.8365, 2.6729, 0.0, 0.0, 4.7771, 2.0534, 0.0, 8.28, 0.3018, 9.4794, 3.1492, 4.0968, 0.3978, 3.591, 3.3345, 0.0, 0.1755, 6.9626], [7.6086, 5.3398, 11.6668, 7.1242, 5.8999, 2.475, 50.1635, 0.0, 6.7831, 0.0], [1.1812, 0.0, 0.0, 2.5817, 0.0, 0.0, 10.5133, 1.4637, 4.1126, 4.5034, 0.0, 13.9178, 6.3802, 9.0381, 10.78, 4.1116, 1.4996, 12.7392, 4.4226, 4.536, 2.6419, 0.0, 6.3355, 2.6488], [0.0, 5.9804, 36.6464, 3.6275, 2.6171, 0.0, 11.4034, 14.1459, 4.2826, 6.7057, 1.4661, 0.0, 8.3978, 1.6836, 0.2574, 2.592, 2.4367, 0.0, 2.8255, 1.5136], [3.7583, 2.6877, 7.7413, 6.536, 0.0, 0.0, 37.5475, 3.5638, 1.9762, 3.3902, 7.2427, 10.1531, 6.0306, 6.1225, 2.8459, 1.4847, 0.8248, 4.0406, 2.4336, 0.27, 1.2055, 3.3427, 3.2994, 9.6114], [0.0, 24.7809, 4.085, 2.9121, 0.594, 26.1331, 6.0887, 0.0, 4.4689, 30.5734, 13.1537, 2.7406, 2.6303, 2.9695, 8.046, 0.0, 0.0, 2.9309, 0.0], [2.0128, 0.0, 0.6863, 67.8859, 15.5282, 2.083, 51.3153], [2.083, 1.9228, 4.0066, 8.2138, 10.7065, 14.9857, 11.5562, 9.5936, 27.0678, 15.433, 8.1666, 8.64, 1.3338, 8.2786, 1.053, 11.5034], [20.1922, 19.0095, 19.5922, 10.1332, 16.1417, 41.9138, 13.076, 10.8108], [0.7705, 25.4398, 14.7706, 17.0848, 10.4782, 8.147, 30.4419, 18.1268, 2.7846, 8.964, 8.6184, 9.3408, 2.3166, 14.8333], [7.3706, 1.4674, 40.3742, 30.5734, 14.7706, 17.1431, 9.6589, 0.0381, 19.8697, 13.6372, 5.265, 7.101, 13.4406, 6.0918, 2.2815], [2.976, 0.0, 0.0, 6.2092, 69.0874, 11.6461, 10.8956, 7.1346, 19.2625, 18.2528, 7.0794, 4.8397, 3.6221, 2.0558, 0.15, 3.8162, 0.4914, 3.483, 9.2084, 4.1549, 3.159, 7.4923], [3.4975, 1.0419, 10.7457, 6.2419, 0.0, 122.2547, 9.546, 16.5571, 6.7298, 49.0038, 28.2918, 2.7531, 13.6445, 7.8478, 7.1191, 6.5233, 7.5201, 2.2698, 4.563, 0.6156, 6.1543, 4.6683, 14.3792], [10.1551, 7.6723, 5.7457, 11.0458, 0.0, 96.7224, 16.3555, 5.5012, 0.0506, 50.5448, 31.7142, 13.4159, 14.1693, 12.0305, 2.8933, 35.5405, 9.821, 8.7282, 9.477, 1.2825, 0.0, 1.6497, 26.488], [127.5948, 64.6834, 26.0889, 35.919, 6.468, 18.0071, 19.2699, 18.8002, 4.7034, 11.259, 13.9792, 12.9334, 13.3731, 30.7261], [32.3367, 4.1795, 12.0176, 55.3272, 50.4638, 30.6745, 34.3426, 0.0, 79.2074, 35.707, 33.2557, 40.5838, 4.8294], [9.6489, 6.4054, 13.2457, 7.353, 6.424, 121.0531, 10.5006, 6.7297, 5.9202, 68.7286, 59.0934, 16.6934, 6.589, 10.4782, 2.2081, 26.318, 13.4127, 9.6642, 11.799, 5.9765, 7.7475, 3.2994, 27.5475], [14.9412, 5.0557, 13.6624, 5.7517, 8.3393, 131.5664, 11.2643, 28.0403, 4.6046, 64.8761, 41.411, 10.3132, 13.9944, 8.3653, 10.9642, 33.666, 13.8055, 1.4976, 9.261, 10.9269, 8.4036, 8.2134, 10.9736], [7.624, 5.4346, 12.0396, 8.4314, 11.6296, 5.357, 96.7224, 23.1013, 12.8184, 18.8232, 79.8238, 42.8941, 17.2178, 20.7584, 9.702, 10.5835, 35.4655, 13.581, 7.4646, 6.318, 10.4652, 9.9656, 4.6683, 33.829], [10.2778, 15.3091, 8.8159, 14.2812, 10.5329, 145.9847, 13.4917, 12.6048, 2.6818, 63.4892, 57.2682, 16.169, 17.6096, 11.6855, 13.8956, 18.4451, 20.4277, 5.2416, 5.778, 13.4663, 5.4045, 4.2646, 22.0986], [14.6957, 12.136, 12.4124, 15.9152, 3.1958, 4.268, 191.6424, 16.0373, 21.7379, 12.65, 91.8436, 70.6155, 15.732, 26.1229, 11.9442, 8.7561, 20.3196, 24.4122, 9.477, 7.83, 18.0063, 13.1208, 12.4956, 23.0067], [14.9412, 14.6934, 18.5966, 28.1702, 5.852, 269.4409, 21.4467, 36.4256, 33.8514, 78.8992, 88.8683, 30.3278, 35.6274, 15.9544, 16.7508, 18.1452, 21.7184, 5.4288, 11.853, 21.1612, 7.935, 10.7933, 55.095]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

