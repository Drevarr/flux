created: 20230524221126000
creator: Drevarr
modified: 20230705163531471
modifier: drevarr
tags: ChartData
title: 202305242211_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Plum Crazybringer", "Tootsie Pop Bringer", "Grilo Gringo", "Sizzln Sisigbringer", "Al Darasum", "Cinder Flamebringer", "Gordon Ramsybringer", "Mixon Cue Bringer", "Spicy Gyrosbringer", "Band Aidbringer"];
const professions = ["Druid", "Scrapper", "Scrapper", "Dragonhunter", "Weaver", "Berserker", "Weaver", "Herald", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[813.5969, 23.1129, 22.4339, 0.0, 480.1544], [219.9085, 15.965, 29.6453, 136.512, 336.9604, 113.1158, 119.8824, 3.5784, 85.9381, 83.8894, 9.6444, 357.701], [369.259, 9.694, 28.3886, 131.9616, 338.8545, 72.9026, 104.1595, 24.1668, 106.0199, 31.4063, 12.0132, 379.6393], [124.2432, 405.7162, 164.8741, 193.2814, 159.7681, 106.7398, 65.5368, 415.7572], [29.3857, 19.7559, 52.5218, 141.4656, 340.7486, 62.2656, 106.9767, 205.838, 175.0825, 76.0836, 427.7965], [350.3737, 117.1414, 37.0692, 276.0258, 230.174, 150.5316, 585.11], [360.0558, 15.8222, 130.9824, 328.8158, 214.8163, 131.4557, 16.1028, 120.6874, 97.4536, 48.1092, 340.3109], [712.2001, 66.8398, 92.6629, 217.7856, 768.6258], [820.7012, 48.7342, 0.0, 234.432, 911.8197, 174.9923, 114.6288, 61.0344, 255.6487, 269.9276, 31.584, 601.6975], [1106.1625, 51.2992, 0.0, 365.7024, 996.2966, 689.851, 168.7643, 85.68, 527.4415, 512.9354, 271.9044, 1064.5417], [1106.3239, 92.2914, 41.2978, 387.936, 1031.9057, 490.4713, 198.3447, 106.8228, 580.1069, 661.7243, 311.7792, 1219.1798]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

