created: 20230325172304000
creator: Drevarr
modified: 20230705163522979
modifier: drevarr
tags: ChartData
title: 202303251723_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Elonith Primal", "Zefirokai", "Abigail Ryn", "Venomina The Siren", "Tika Sumiko", "Mac Chiato", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[83.1613, 138.402, 34.7004, 0.0, 33.6042, 13.0209, 1009.2961, 40.059, 18.7925, 63.2923], [180.9331, 243.6885, 17.5392, 112.5893, 147.8232, 599.5116, 108.8069, 55.2269], [83.2351, 71.7255, 17.3124, 37.1362, 19.9332, 822.7957, 51.903, 6.7356, 75.7123, 20.0873, 0.0, 0.0, 11.9837, 43.848, 38.4836, 77.4988, 127.0278, 105.6675], [89.4335, 44.9213, 11.0225, 16.4722, 55.125, 15.8137, 882.8114, 13.16, 34.1812, 65.0808, 71.0297, 0.0, 0.0, 46.2528, 18.6144, 64.6438, 68.6515, 79.0051, 208.6394], [32.4676, 90.4365, 0.0, 19.9555, 0.0, 19.7672, 1579.1225, 0.0, 16.1078, 68.459, 53.2816, 20.0928, 36.0211, 4.032, 35.3487, 79.8807, 168.7573, 318.4851], [170.3073, 158.301, 16.4959, 19.8965, 19.2276, 25.0626, 1567.5066, 74.4856, 22.364, 122.2128, 87.4412, 20.1178, 16.184, 99.1632, 38.6064, 203.8766, 254.2742, 301.4975, 551.1154], [231.1841, 210.87, 37.3464, 75.3941, 53.802, 0.0, 2792.3429, 156.2355, 262.5091, 94.3845, 80.1466, 0.0, 50.7379, 37.3632, 408.7261, 349.5526, 460.6696, 566.6151], [213.2531, 330.4867, 0.0, 19.8965, 88.5528, 40.0421, 2480.6485, 101.911, 0.0, 410.1581, 105.2636, 133.0618, 186.553, 77.0112, 357.4867, 333.5595, 439.1755, 600.5797]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

