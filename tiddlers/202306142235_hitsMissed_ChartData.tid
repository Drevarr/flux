created: 20230614223544000
creator: Drevarr
modified: 20230705163535188
modifier: drevarr
tags: ChartData
title: 202306142235_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Johosh The Mighty", "River No Hug", "Be\u00eb", "Cedryn X", "River No Hug", "No Reserv\u00e9", "Rozaalyna", "Smol Gluvs", "Hyde En Sikh", "Sub Train", "Elonith Requiem", "Fribble Bibble", "Raelyn Sunray", "Jacob Pine", "Bella Sassy", "Eibh\u00ebar", "Primal Clone", "Sygaldry Verdandi", "Elon The Archmagus", "Zayde Sunsabre", "Alarics Bane", "Drevarr Moonwillow", "Tegan Parker", "Tootsy Pop Star"];
const professions = ["Weaver", "Berserker", "Reaper", "Reaper", "Berserker", "Scourge", "Vindicator", "Reaper", "Reaper", "Chronomancer", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Spellbreaker", "Reaper", "Scrapper", "Tempest", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 1, 3, 0], [0, 0, 0, 4, 1], [1, 1, 4, 0], [3, 1, 4, 0], [0, 0, 0, 8, 2], [0, 0, 0, 9, 1], [0, 0, 0, 7, 3], [0, 0, 2, 8, 1], [2, 0, 8, 1], [0, 1, 0, 9, 3], [0, 0, 1, 6, 1, 4, 1, 1, 0], [3, 2, 7, 3], [0, 0, 0, 7, 3, 4, 3, 3], [0, 0, 1, 4, 0, 7, 3, 7, 0], [0, 0, 0, 13, 2, 4, 3, 2, 0], [0, 1, 1, 9, 3, 6, 0, 4, 2], [0, 0, 4, 9, 2, 3, 1, 9, 0], [0, 1, 2, 14, 0, 6, 2, 4, 1], [1, 2, 1, 8, 2, 7, 0, 8, 2], [0, 0, 2, 14, 1, 5, 3, 1, 5], [11, 8, 12, 2], [0, 0, 0, 12, 0, 4, 4, 9, 6], [0, 0, 2, 17, 3, 4, 3, 10, 1], [0, 0, 2, 10, 1, 8, 4, 12, 5], [0, 2, 2, 20, 4, 6, 3, 6, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

