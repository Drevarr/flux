created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Unbreakable Nemesis", "Grootsmaid", "Gestern Yesteryear", "Tabitha Polaris", "Nadumi", "Nadumi", "Grae Leon", "Wren Raveness", "Ttv Rodrigoapss", "Govinda Ektar", "Aron The White", "Scythe Of Soulz", "Nose Llama", "Ains Chon", "Brutal Araden", "Aloe Pen", "Samara Evermoore", "Nadumi", "Smol Gluvs", "Jamaass", "Cura Ativos", "Red Reaper Robin", "Alarics Bane", "Liu Mira", "Xuerreux", "Xanvias Tsolice"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Deadeye", "Daredevil", "Tempest", "Chronomancer", "Berserker", "Vindicator", "Holosmith", "Reaper", "Weaver", "Reaper", "Renegade", "Vindicator", "Deadeye", "Thief", "Reaper", "Reaper", "Dragonhunter", "Reaper", "Reaper", "Berserker", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[118.2222, 409.3409, 61.8707, 232.3895, 635.3478, 296.4433, 188.2848, 358.6071, 182.7917, 185.0405, 41.988, 127.7119, 129.6719, 140.9684, 297.3421], [187.8861, 105.5893, 4.5417, 53.1351, 200.6566, 135.1582, 3.9219, 177.4304, 372.7895, 231.5212, 416.7654, 1602.0588], [350.0926, 252.9545, 57.0259, 121.5579, 228.4928, 127.9691, 231.2089, 48.875, 138.0208, 65.4459, 105.1205, 562.9153, 113.3438, 68.5696, 31.7105, 83.6485, 121.2963, 320.8824, 9.5111], [238.3333, 1285.1364, 40.7759, 167.7158, 3006.5072, 148.9897], [2888.6316], [1677.7939, 113.0494, 1118.7059, 786.5556], [304.6737, 235.8841, 81.2268, 119.1076, 303.6786, 51.5, 20.7568, 113.4277, 147.4915, 77.0469, 54.3418, 379.1316, 378.6727, 185.9383, 3203.5, 156.1556], [215.5185, 259.1818, 145.6293, 172.3474, 658.8261, 114.1443, 259.0949, 280.6964, 10.0417, 128.2568, 141.3193, 187.2881, 105.5, 274.4557, 103.5526, 324.5455, 127.1975, 1095.5882, 229.9778], [3049.3519, 1463.0227, 1714.3276], [455.1296, 389.4526, 825.4348, 453.4639, 249.5759, 69.5417, 15.4054, 320.7048, 198.9322, 181.2812, 477.3671, 402.7818, 421.8272, 0.0, 289.9111], [40.3093, 139.5316, 338.5536, 1844.2917, 188.8919, 566.0904, 631.3672, 72.8594, 840.962, 956.0088], [2650.5362, 1694.1856, 761.8354, 1439.625, 1230.1988, 74.1299], [1721.4036, 3388.4633, 724.5312], [172.963, 24.0227, 695.2586, 180.3158, 853.0, 496.6082, 142.1875, 200.2973, 520.3855, 426.3446, 226.8594, 614.7975, 457.0263, 638.9333, 708.4074, 5883.3235, 191.2222], [750.2727, 0.0, 2040.8421, 2341.4203, 800.6392, 86.8671, 946.9107, 824.9167, 224.2973, 1069.1386, 701.9548, 531.2031, 586.0127], [1306.1158, 2776.5072, 787.5567, 604.8797, 827.7321, 740.5833, 504.0676, 957.5542, 1411.2881, 654.3281, 1082.2532, 75.0702, 50.8788, 7.1605, 193.3824, 0.0], [172.4444, 1803.5909, 79.2328, 1347.2105, 3755.4058, 828.3196, 421.7152, 1242.0357, 404.3333, 656.0135, 379.4699, 164.4915, 126.2344, 684.9494, 47.4211, 1754.503], [35.963, 2843.5455, 1180.5345, 1677.5158, 2452.5652, 863.8969, 666.6709, 1648.5714, 585.2708, 46.2432, 1329.1747, 242.6045, 699.3906, 455.3101], [1055.9684, 1608.6087, 408.9691, 550.3671, 1011.2857, 872.625, 817.973, 1379.1145, 1076.1921, 1430.5625, 1180.2658, 2083.3509], [2254.4367, 435.9035, 3658.3152, 1554.6667, 7962.4706, 766.3778], [73.3789, 3716.0435, 955.2165, 7687.4177, 1404.9821, 2161.5208, 888.2027], [1461.1667, 2010.6364, 2640.681, 2184.1895, 4808.2464, 2465.7938, 2353.6076, 2279.0357, 1294.9792, 1347.6757, 2119.6807, 2360.3785, 547.6719, 1767.5063, 530.4561], [1453.9444, 2375.1136, 1919.7328, 664.1053, 7108.2029, 2165.1649, 1210.2785, 1614.6964, 2032.7917, 3161.9865, 2778.1084, 2753.3898, 706.4375, 1973.6266, 2546.9035], [2015.5741, 3161.1136, 3516.9483, 3323.6, 5449.1884, 910.9381, 1356.4177, 1627.375, 1459.25, 1930.027, 3519.2048, 423.3503, 2204.5312, 2255.3987, 2175.3421, 3175.6788, 2032.1975, 6104.2353, 2677.9778], [2222.2593, 1092.1364, 2802.6466, 2056.7263, 3126.087, 1800.6392, 4021.3734, 1682.4464, 1356.9792, 2366.4189, 1487.8253, 1782.7797, 3696.7188, 2867.4177, 2414.193, 2326.9515, 5009.4691, 2031.5882, 1953.5556], [713.6582, 2466.875, 9606.6875, 3675.1892, 2628.6928, 6858.2429, 148.6875, 6226.6519, 1660.4298, 5638.4788, 5549.6914, 2758.0588, 4506.8444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

