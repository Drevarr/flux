created: 20230314004438000
creator: Drevarr
modified: 20230705163522021
modifier: drevarr
tags: ChartData
title: 202303140044_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Ravioli Fetabringer", "Smol Gluvs", "Etchery Howls", "Mac Chiato", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Xyntharos", "Zadie Miststep", "Newtype Khan", "Hauzzy", "Johosh The Great", "Drevarr Moonwillow", "Eibh\u00ebar", "Bella Sassy"];
const professions = ["Firebrand", "Scourge", "Druid", "Tempest", "Berserker", "Vindicator", "Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[285, 387, 303, 211, 429, 305, 293, 444, 358, 292, 203, 331, 1490, 1709, 1119, 526, 4673, 792, 2386, 5829, 434, 219, 2320, 596, 291, 224], [444, 267, 306, 301, 317, 213, 250, 377, 354, 298, 135, 282, 3657, 291, 422, 986, 4821, 6461, 805, 2080, 1243, 282, 3207, 2028, 2526], [691, 293, 372, 329, 247, 564, 249, 321, 366, 287, 16118, 9748, 3896, 547, 491, 3200, 2284, 548, 1518, 463, 208, 2260, 750, 400], [230, 397, 454, 363, 1493, 647, 593, 892, 447, 324, 502, 229, 205, 453, 1925, 5195, 300, 2272, 567, 576, 141, 1956, 3211, 555, 284], [480, 334, 373, 458, 340, 255, 495, 576, 572, 178, 493, 3685, 289, 335, 1524, 922, 6299, 633, 7916, 453, 197, 311, 4070, 258, 370], [189, 310, 525, 298, 324, 315, 425, 359, 336, 244, 198, 267, 216, 272, 369, 516, 5179, 335, 578, 385, 433, 213, 1920, 792, 2548, 681], [367, 290, 345, 491, 305, 422, 334, 924, 510, 310, 200, 219, 5003, 322, 526, 270, 3765, 227, 674, 475, 396, 284, 477, 3742, 398, 197], [307, 8523, 3673, 469, 326, 469, 310, 566, 288, 350, 189, 286, 1187, 276, 743, 2128, 1726, 269, 385, 512, 1307, 182, 339, 1143, 893, 208], [274, 267, 319, 371, 264, 315, 270, 313, 366, 240, 165, 234, 1803, 3260, 415, 1157, 9624, 6214, 2517, 1615, 673, 193, 3492, 718, 395, 194], [172, 252, 273, 174, 472, 289, 233, 340, 492, 286, 161, 382, 279, 253, 286, 782, 4851, 6899, 1271, 595, 459, 220, 293, 6794, 423, 238], [331, 284, 356, 236, 342, 251, 223, 363, 367, 248, 148, 230, 187, 250, 315, 396, 3855, 817, 1260, 220, 590, 198, 283, 760, 3093, 249], [249, 236, 278, 129, 223, 332, 237, 167, 695, 212, 173, 275, 185, 238, 409, 520, 5133, 162, 1031, 413, 666, 152, 280, 1137, 419, 471], [306, 246, 248, 155, 216, 300, 309, 318, 227, 234, 153, 293, 2055, 4008, 335, 399, 4106, 2876, 1324, 6877, 347, 133, 574, 1206, 207, 209], [194, 210, 230, 113, 199, 269, 211, 462, 226, 180, 153, 272, 6239, 203, 265, 282, 4221, 170, 458, 303, 271, 148, 200, 785, 3006, 185]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

