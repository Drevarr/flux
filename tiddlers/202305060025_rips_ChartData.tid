created: 20230506002551000
creator: Drevarr
modified: 20230705163528410
modifier: drevarr
tags: ChartData
title: 202305060025_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Hyde En Sikh", "Stoic Rapidfire", "Morv\u00e4rth", "Newtype Khan", "Smol Daddy Tika", "Blancooo Padreee", "Smol Gluvs", "Rina Of Theros", "Primal Clone", "Rozaalyna", "Be\u00eb", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Chronomancer", "Druid", "Scourge", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Scourge", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0446, 0.0493, 0.0134, 0.027, 0.0435, 0.0, 0.0483, 0.0277, 0.0596, 0.0152, 0.0, 0.0, 0.0516, 0.0093, 0.0333, 0.0367], [0.0446, 0.0898, 0.0067, 0.0135, 0.0, 0.0, 0.083, 0.0381, 0.0809, 0.0758, 0.0208, 0.0441, 0.0595, 0.0935, 0.0667, 0.0293], [0.0805, 0.0, 0.1908, 0.1349, 0.0303, 0.0, 0.0, 0.0119, 0.0, 0.1217, 0.1045], [0.1683, 0.1144, 0.1074, 0.027, 0.0, 0.087, 0.2379, 0.1522, 0.1021, 0.1061, 0.0521, 0.0, 0.0754, 0.0467, 0.2317, 0.0202], [0.1535, 0.1303, 0.0537, 0.0, 0.0435, 0.0, 0.2317, 0.2076, 0.0936, 0.0758, 0.0, 0.0147, 0.0298, 0.0187, 0.1333, 0.1375], [0.0594, 0.1215, 0.0201, 0.0135, 0.0, 0.0435, 0.2627, 0.1626, 0.034, 0.0303, 0.0208, 0.0, 0.0675, 0.0, 0.1367, 0.1567], [0.104, 0.1532, 0.0336, 0.0946, 0.0435, 0.0435, 0.2714, 0.0242, 0.1319, 0.0455, 0.0312, 0.0, 0.0456, 0.0654, 0.2067, 0.121], [0.104, 0.2183, 0.0872, 0.0676, 0.0, 0.1304, 0.2094, 0.2388, 0.0979, 0.0606, 0.1562, 0.0147, 0.0933, 0.0748, 0.0683, 0.1815], [0.1584, 0.1514, 0.094, 0.0676, 0.0, 0.0, 0.1797, 0.2561, 0.1362, 0.0303, 0.1562, 0.0, 0.1369, 0.0187, 0.26, 0.1641], [0.099, 0.0493, 0.094, 0.0405, 0.087, 0.3854, 0.2699, 0.1617, 0.1212, 0.0417, 0.0294, 0.0754, 0.0467, 0.225, 0.2108], [0.2921, 0.3011, 0.1074, 0.1351, 0.2609, 0.0, 0.4089, 0.308, 0.1277, 0.0, 0.1012, 0.1121, 0.2417, 0.2906], [0.1881, 0.3028, 0.0805, 0.1757, 0.1304, 0.1087, 0.4919, 0.4048, 0.4851, 0.1818, 0.0208, 0.0735, 0.2718, 0.1589, 0.3033, 0.2942], [0.3267, 0.3891, 0.094, 0.1081, 0.2174, 0.5477, 0.3287, 0.2468, 0.3485, 0.0417, 0.0588, 0.2679, 0.0935, 0.3667, 0.3034]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

