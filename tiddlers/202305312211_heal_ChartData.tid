created: 20230531221142000
creator: Drevarr
modified: 20230705163532503
modifier: drevarr
tags: ChartData
title: 202305312211_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Etchery Of Ascalon", "Tegan Parker", "Artakama Nahid", "Johosh Of The North", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[562.175, 357.5548, 30.8667, 390.0963, 261.7982, 20.6296, 60.7174, 122.6324, 87.468, 123.1287, 76.7571, 288.3074, 373.8464, 0.0, 8.9825], [991.9744, 701.3428, 5.5111, 927.745, 677.6316, 109.2222, 286.4783, 293.0162, 474.772], [807.3499, 635.4594, 106.7444, 848.5957, 591.1382, 325.4074, 20.5435, 178.6108, 465.064, 417.5205, 117.3714, 945.8525, 901.6553, 50.9531, 0.0], [899.5023, 769.7173, 75.9889, 986.7311, 676.7039, 70.8333, 220.4022, 325.6054, 417.332, 516.1579, 381.0429, 1207.0164, 900.1638, 98.1562, 245.1316], [1198.448, 1242.4099, 77.4333, 1252.8665, 72.5987, 104.1852, 211.5978, 454.4703, 447.544, 846.4854, 379.6286, 1501.0656, 977.4334, 129.6406, 44.4386], [1389.4223, 1389.9753, 112.3667, 1341.2796, 873.0241, 127.9259, 55.7717, 348.0541, 326.092, 458.924, 418.1214, 1202.9795, 1380.4334, 70.1719], [1466.8899, 1311.2968, 189.1556, 1686.6411, 1162.6009, 168.8889, 231.1413, 354.573, 694.476, 627.1988, 374.35, 1731.3607, 1801.7474, 244.2969, 221.1228], [2248.0241, 1690.0247, 322.1, 2212.2191, 1109.6886, 155.4074, 299.913, 433.6811, 258.6, 1203.7018, 471.4643, 1691.709, 2043.8055, 29.25, 98.8421]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

