created: 20230314004438000
creator: Drevarr
modified: 20230705163522091
modifier: drevarr
tags: ChartData
title: 202303140044_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Morton Saltbringer", "Newtype Khan", "Oo Dads Mad", "Zadie Miststep", "Venomina The Siren", "Cat Wigglebooty", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer", "Mac Chiato", "Black Raspberry Pie", "Tribal S", "Ark Darkness", "Etchery Howls", "Blanco Padre Guard", "Fribble Bibble", "Whose Guardian", "Drevarr Moonwillow", "Bella Sassy", "Koralia Danai", "Ravioli Fetabringer", "Sygaldry Verdandi", "Johosh The Great"];
const professions = ["Tempest", "Chronomancer", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Druid", "Firebrand", "Druid", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.3507, 84.4543, 322.7503, 36.4879, 20.2772, 3.0488, 55.2874, 36.7515, 5.0646, 0.0, 0.0, 53.4874, 18.5808, 9.2963, 8.82, 0.0, 18.4961, 0.0, 0.0, 122.0727, 82.9315, 28.7971, 4.4928, 18.648], [12.5569, 62.6416, 488.7123, 85.4413, 11.6002, 16.2994, 12.2201, 25.1208, 4.1317, 0.0, 15.2292, 96.5996, 54.8163, 43.4713, 8.1967, 10.512, 28.4961, 0.0, 49.492, 90.2845, 6.9379, 12.168, 21.7224], [20.6615, 98.9162, 510.8127, 92.0636, 15.444, 27.0686, 42.1331, 122.3554, 15.8323, 24.4784, 20.7584, 0.0, 31.4668, 107.5011, 53.3213, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [17.3023, 44.1048, 443.6774, 99.5949, 13.6136, 41.3952, 23.3407, 92.9621, 22.4498, 6.8639, 0.0, 17.4724, 36.5403, 39.0358, 24.8131, 17.3431, 22.356, 24.1223, 11.8404, 40.3546, 0.0, 20.631, 73.7705, 45.144, 27.3936, 20.8656], [59.4251, 145.5778, 292.727, 68.3011, 14.014, 30.3673, 4.6481, 167.495, 0.0, 31.0714, 26.8559, 48.9086, 14.015, 70.7589, 45.4588, 20.4002, 33.7115, 4.716, 18.9532, 20.1646, 40.4088, 0.0, 18.2104, 78.4715, 9.4565, 4.7112, 5.8464], [7.191, 342.7658, 179.4527, 0.0, 65.2945, 62.55, 117.1066, 27.6948, 18.4603, 18.2594, 0.0, 44.9673, 135.7643, 0.0, 14.013, 18.6675, 3.132, 59.8197, 0.0, 49.3584, 0.0, 98.7977, 84.7396, 37.9685, 49.4832, 18.1188], [7.5714, 55.2109, 567.9404, 101.5427, 16.4507, 57.3388, 49.2553, 107.6587, 54.4341, 22.6909, 25.0576, 18.7072, 94.7827, 54.7056, 90.3491, 27.2391, 61.128, 21.6924, 0.0, 18.0077, 0.0, 16.9442, 23.0231, 18.8654, 0.0, 2.52], [35.8844, 104.669, 481.2065, 117.5143, 30.2056, 42.2081, 134.9525, 74.4834, 18.1594, 9.4282, 22.885, 99.9306, 64.0631, 29.4583, 20.8916, 36.648, 39.762, 4.9156, 41.1139, 19.5049, 28.2652, 115.7184, 32.5987, 13.7904, 41.9328], [23.8607, 76.5442, 463.6929, 102.3218, 23.1317, 46.6343, 41.0336, 142.884, 23.8074, 35.7034, 24.99, 35.1592, 27.7418, 101.1419, 44.8497, 44.7488, 22.0162, 14.508, 41.3525, 15.4643, 19.4722, 12.2714, 57.5358, 122.8303, 70.5197, 15.4128, 10.8612], [47.1882, 62.2421, 517.0676, 111.9307, 27.067, 67.1055, 28.6136, 144.4003, 9.2709, 44.8997, 26.6893, 35.4959, 22.247, 70.3552, 55.9791, 42.0391, 31.4624, 37.296, 43.4731, 19.3393, 48.2194, 25.8364, 47.5927, 151.1572, 52.6997, 35.256, 22.1508], [75.0212, 191.9198, 522.0715, 185.9452, 0.0, 13.9709, 33.7615, 107.3088, 0.0, 36.3796, 62.5083, 73.8205, 126.175, 44.296, 10.142, 0.0, 35.64, 32.6048, 18.6397, 27.9336, 0.0, 37.9476, 105.4725, 26.9438, 49.1088, 60.8832], [27.8597, 65.9974, 683.4466, 220.2256, 12.9615, 35.9944, 43.1827, 140.5512, 25.1739, 55.3808, 20.9583, 33.0266, 45.3789, 66.7213, 54.927, 19.5098, 24.4152, 21.9672, 20.1176, 94.3662, 132.4735, 55.5984, 29.0784, 48.9888], [39.91, 68.7939, 687.1995, 92.3234, 0.0, 26.2924, 15.4688, 261.6235, 0.0, 34.8243, 47.5143, 0.0, 31.5491, 33.9158, 83.6087, 69.4457, 41.7083, 42.516, 45.7263, 0.0, 78.4853, 0.0, 36.9421, 192.2613, 51.8918, 40.4976, 76.23], [33.3517, 16.5393, 885.6868, 118.0337, 17.9608, 90.7784, 89.0394, 64.152, 0.0, 147.2087, 59.876, 0.0, 53.117, 146.7668, 119.9868, 52.2585, 105.4328, 152.892, 111.7312, 158.869, 0.0, 60.2916, 97.8785], [58.5987, 153.3281, 917.795, 137.9007, 0.0, 72.1182, 51.7543, 216.8338, 72.2858, 14.8607, 0.0, 0.9878, 65.1063, 94.9596, 79.9361, 56.4774, 55.476, 109.5222, 58.4665, 26.9573, 0.0, 57.8337, 206.9672, 71.28, 57.5328], [35.1912, 76.0648, 969.0848, 236.4569, 25.351, 83.3725, 30.038, 289.5005, 0.0, 112.5873, 31.5207, 18.4354, 7.3676, 143.7386, 103.5973, 72.8909, 34.3113, 37.728, 93.0431, 15.1952, 93.7267, 0.0, 107.3629, 295.9257, 75.1291, 52.3536, 177.8364], [38.2838, 201.8274, 1253.0549, 214.5122, 32.2379, 89.2261, 32.3121, 221.7326, 34.0089, 41.992, 34.0197, 97.1998, 32.6399, 238.824, 204.6475, 108.2719, 48.8305, 66.636, 65.6515, 17.3839, 0.0, 0.0, 0.0, 0.0, 66.0528, 43.3056, 83.4372], [16.2093, 156.5241, 1255.9739, 307.4848, 22.9486, 67.5906, 54.8281, 174.7267, 11.7447, 93.8227, 0.0, 18.6038, 60.4023, 206.0185, 103.9849, 121.5881, 1.2495, 33.768, 95.7381, 0.0, 139.5053, 0.0, 67.7023, 377.1697, 125.2627, 86.2992], [75.2345, 272.6987, 1421.5189, 325.7936, 27.2158, 83.0168, 48.3806, 388.0613, 19.1543, 101.4638, 95.6284, 27.6391, 51.9439, 207.2298, 142.9653, 120.8139, 45.9816, 98.064, 88.7576, 56.0087, 128.4403, 56.2851, 85.9872, 282.1841, 100.3622, 36.7536, 109.8216], [86.1918, 337.8172, 1415.6811, 482.7823, 10.7765, 99.8012, 77.7439, 448.2475, 23.4775, 91.2194, 73.0374, 37.2917, 85.9627, 188.354, 99.2784, 56.5166, 107.482, 62.136, 78.6404, 0.0, 160.7131, 0.0, 108.5546, 355.593, 99.5544, 110.5104, 73.9368], [99.5751, 101.7926, 1439.4495, 423.4409, 36.219, 96.5672, 74.7951, 327.875, 106.8058, 96.1948, 0.0, 82.7728, 260.1224, 215.8323, 149.8464, 97.8858, 31.5, 172.788, 0.0, 186.9653, 137.0804, 425.8678, 165.5597, 96.1896, 108.234], [52.2536, 121.0485, 1336.8699, 328.91, 7.4246, 163.2847, 68.9974, 339.1891, 0.0, 108.3949, 75.5031, 76.5757, 92.7129, 334.0105, 150.7725, 154.2206, 103.4336, 154.98, 187.5441, 15.8769, 225.3672, 0.0, 149.3324, 386.8129, 127.5437, 162.5832, 101.8836], [75.2345, 271.5002, 1038.7221, 318.0026, 32.1235, 121.4367, 99.6851, 430.8682, 133.9552, 23.8571, 38.835, 89.6671, 490.0637, 198.2246, 218.247, 103.3336, 183.312, 181.5356, 0.0, 113.7955, 56.6936, 206.7565, 541.2246, 169.979, 110.9472, 145.53], [138.1521, 166.0322, 2607.0215, 400.5872, 12.1378, 191.3558, 158.6365, 671.0299, 41.4303, 204.7872, 210.2825, 0.0, 98.7428, 444.3379, 409.0736, 292.4928, 119.852, 150.192, 199.0751, 72.6749, 333.6845, 0.0, 237.405, 771.456, 173.6856, 133.4424, 214.1748]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

