created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Luke The Ghastly", "Darkandshadow", "Roderik Manloy", "Cedryn X", "Jamaass", "High Sorcer Baradun", "Sr Conrad", "Kurtis Ruhr", "Cuz Imasir", "Loganlek", "Rhaevynn", "Illusionist Zeroo", "Rahani Sunray", "Aira Draugr", "Sofya De Nova", "Talia The Pestilent", "Yummy Kiwi", "Melody Phoenixstorm", "Belvyn Brightblade", "Greg The Knight", "Govinda Ektar", "Lord Erin The Wise", "Forever Dreaming", "Blaize Harlot", "Belladonna Horror", "Venomina The Fierce", "Vee Usagi", "Mort\u00e4rion", "Ax Axun", "Glorious Gluvs", "Morv\u00e4rth", "Hyde En Sikh", "Darks Na", "Sygaldry Verdandi", "Xanvias Einzbern", "Oo Dads Mad", "Gabe Malhorn", "Tootsie Pop Rocks", "Bearah", "Tegan Parker", "Zaedy Zae", "Koralia Danai", "Mistwalker Cael", "Sub Train", "Rina Of Theros", "Crusader Siolith", "Newtype Khan", "Drevarr Moonwillow", "Be\u00eb", "Daphne Agla\u00e9"];
const professions = ["Scourge", "Virtuoso", "Renegade", "Berserker", "Reaper", "Tempest", "Spellbreaker", "Vindicator", "Scrapper", "Spellbreaker", "Reaper", "Chronomancer", "Chronomancer", "Herald", "Tempest", "Reaper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Vindicator", "Weaver", "Scourge", "Scourge", "Tempest", "Spellbreaker", "Reaper", "Scrapper", "Vindicator", "Berserker", "Reaper", "Chronomancer", "Dragonhunter", "Firebrand", "Berserker", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Druid", "Firebrand", "Herald", "Firebrand", "Reaper", "Firebrand", "Spellbreaker", "Scrapper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0256, 0.0145, 0.0822, 0.0, 0.0], [0.0117, 0.0, 0.01, 0.0132, 0.0095, 0.0032, 0.0127], [0.0144, 0.0, 0.1064, 0.0, 0.0175, 0.04, 0.0, 0.0192], [0.029, 0.0205, 0.0058, 0.0, 0.03, 0.0197, 0.0, 0.0032, 0.0181], [0.0, 0.0, 0.04, 0.0256, 0.0145, 0.0274, 0.0, 0.0294, 0.11, 0.0066], [0.0227, 0.0396, 0.2553, 0.0, 0.0, 0.03, 0.0, 0.0064], [0.0639], [0.0664, 0.0128], [0.07, 0.0855, 0.0071, 0.0032, 0.0163], [0.0545, 0.0064, 0.0236], [0.0371, 0.0198, 0.2128, 0.0, 0.0088, 0.02, 0.0, 0.0, 0.0145, 0.0068, 0.0351, 0.0, 0.02], [0.0268, 0.0099, 0.2553, 0.0, 0.0614, 0.05, 0.0, 0.0449], [0.0, 0.0592, 0.0664, 0.0032, 0.0127], [0.0392, 0.0495, 0.1702, 0.0, 0.0088, 0.02, 0.0, 0.0705], [0.08, 0.0658, 0.0569, 0.0, 0.0073], [0.0137, 0.0058, 0.0, 0.05, 0.0724, 0.0237, 0.0032, 0.0327], [0.0577, 0.0198, 0.2766, 0.0, 0.0175, 0.02, 0.0256], [0.0371, 0.0, 0.3191, 0.0, 0.0175, 0.09, 0.0, 0.0769], [0.0577, 0.0297, 0.3404, 0.0, 0.0263, 0.02, 0.0, 0.0321], [0.0557, 0.0, 0.3191, 0.0, 0.0351, 0.03, 0.0, 0.0513], [0.0, 0.0099, 0.0, 0.0, 0.0175, 0.03, 0.0, 0.0192, 0.0, 0.0395, 0.0853, 0.0, 0.0218], [0.0263, 0.01, 0.0, 0.1014, 0.0479, 0.0117, 0.0, 0.17, 0.0263, 0.045, 0.0, 0.0145], [0.0, 0.0548, 0.0058, 0.0294, 0.07, 0.0921, 0.09], [0.0309, 0.0099, 0.1915, 0.0, 0.0175, 0.11, 0.0, 0.0064, 0.1739, 0.0548, 0.0, 0.0, 0.11], [0.0, 0.0088, 0.01, 0.0, 0.0192, 0.058, 0.0274, 0.0058, 0.0, 0.04, 0.0855, 0.0924], [0.0145, 0.0753, 0.0, 0.0294, 0.05, 0.0526, 0.0948, 0.0064, 0.0036], [0.0515, 0.0099, 0.0426, 0.0, 0.0175, 0.06, 0.0, 0.0577, 0.029, 0.0753, 0.0058, 0.0, 0.06, 0.0263, 0.0142], [0.0227, 0.0, 0.1915, 0.0, 0.0263, 0.01, 0.0, 0.0, 0.0145, 0.0616, 0.0, 0.05, 0.0263, 0.064, 0.016, 0.0236], [0.0515, 0.0, 0.3191, 0.0, 0.0439, 0.0, 0.0513, 0.0145, 0.0548, 0.0, 0.0, 0.0, 0.0526, 0.0474, 0.0032, 0.0036], [0.0454, 0.0, 0.0, 0.01, 0.0321, 0.1159, 0.0068, 0.0058, 0.0294, 0.03, 0.0658, 0.0735, 0.016, 0.0163], [0.0598, 0.0495, 0.2128, 0.0, 0.0175, 0.03, 0.0256, 0.0, 0.0411, 0.0234, 0.0, 0.05, 0.0921, 0.019, 0.0032, 0.0109], [0.0309, 0.0099, 0.1064, 0.0, 0.0614, 0.0, 0.0513, 0.058, 0.0342, 0.0058, 0.0, 0.07, 0.0658, 0.0664, 0.0064, 0.0109], [0.0598, 0.0891, 0.2553, 0.0, 0.1667, 0.0513, 0.0435, 0.0274, 0.0058, 0.0, 0.04, 0.0066, 0.0, 0.0, 0.0163], [0.0474, 0.0, 0.234, 0.0, 0.0175, 0.01, 0.0, 0.0385, 0.058, 0.0205, 0.0, 0.0588, 0.01, 0.0724, 0.0616, 0.016, 0.0127], [0.0557, 0.0099, 0.1702, 0.0, 0.0, 0.02, 0.0192, 0.029, 0.0274, 0.0117, 0.0, 0.03, 0.0658, 0.0877, 0.0, 0.0145], [0.0639, 0.0099, 0.1915, 0.0, 0.0351, 0.01, 0.0, 0.0577, 0.087, 0.0411, 0.0, 0.0, 0.02, 0.125, 0.0498], [0.0474, 0.0099, 0.1702, 0.0, 0.0175, 0.01, 0.0, 0.0449, 0.029, 0.0137, 0.0, 0.0, 0.05, 0.0987, 0.0853, 0.0, 0.0218], [0.0515, 0.0099, 0.0, 0.0, 0.0088, 0.19, 0.0, 0.0435, 0.0137, 0.0117, 0.0, 0.04, 0.1184, 0.0687, 0.0128, 0.0109], [0.0495, 0.0198, 0.2553, 0.0, 0.0263, 0.04, 0.0705, 0.0725, 0.0753, 0.0, 0.0, 0.03, 0.0855, 0.0616, 0.0, 0.0073], [0.0619, 0.0, 0.3191, 0.0, 0.0351, 0.03, 0.0909, 0.0145, 0.0137, 0.0, 0.0, 0.01, 0.0724, 0.0948, 0.0288, 0.0109], [0.0577, 0.0, 0.3617, 0.0, 0.0, 0.02, 0.0128, 0.087, 0.0137, 0.0, 0.0, 0.11, 0.0789, 0.0972, 0.0032, 0.0091], [0.0557, 0.0297, 0.3191, 0.0, 0.0088, 0.02, 0.0128, 0.029, 0.0685, 0.0058, 0.0294, 0.04, 0.0921, 0.0924, 0.0064, 0.0109], [0.0371, 0.0099, 0.234, 0.0, 0.0175, 0.02, 0.0, 0.0897, 0.0725, 0.0479, 0.0058, 0.0, 0.05, 0.1316, 0.0592, 0.0064, 0.0327], [0.0474, 0.0099, 0.2979, 0.0, 0.0088, 0.03, 0.0, 0.0577, 0.087, 0.0274, 0.0, 0.0, 0.02, 0.1184, 0.0948, 0.0, 0.0236], [0.0309, 0.0099, 0.1702, 0.0, 0.0351, 0.06, 0.0321, 0.0145, 0.089, 0.0351, 0.0588, 0.09, 0.0921, 0.0711, 0.0128, 0.0309], [0.0454, 0.0495, 0.2128, 0.0, 0.0175, 0.01, 0.0, 0.0513, 0.0145, 0.0342, 0.0234, 0.0, 0.02, 0.1447, 0.1066, 0.0064, 0.0109], [0.0722, 0.0198, 0.1915, 0.0, 0.0351, 0.06, 0.0, 0.0513, 0.1014, 0.0479, 0.0409, 0.0294, 0.08, 0.0658, 0.0735, 0.016, 0.0036], [0.0495, 0.0198, 0.1915, 0.0, 0.0088, 0.03, 0.0909, 0.0192, 0.058, 0.0548, 0.0292, 0.0294, 0.12, 0.1184, 0.1161, 0.0128, 0.0018], [0.0639, 0.0, 0.234, 0.0, 0.0702, 0.01, 0.0, 0.0321, 0.029, 0.0548, 0.0058, 0.0, 0.06, 0.1118, 0.0972, 0.0064, 0.0327], [0.0701, 0.0099, 0.1064, 0.0, 0.1316, 0.0, 0.0, 0.0321, 0.058, 0.0479, 0.0292, 0.0, 0.17, 0.0724, 0.1161, 0.0288, 0.0145]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

