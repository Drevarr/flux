created: 20230501220820000
creator: Drevarr
modified: 20230705163527918
modifier: drevarr
tags: ChartData
title: 202305012208_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Flanneryflame", "Elonith Primal", "Tyzzki", "Black Raspberry Pie", "Zadie Miststep", "Tootsie Pop Rocks", "Morv\u00fcs", "Sub Train", "Kiloak", "Miphest\u00f6", "Koralia Danai", "Tika Sumiko", "Mac Aaroni", "Sygaldry Verdandi", "Gabe Malhorn", "Venomina The Siren", "Drevarr Moonwillow", "Whose Guardian", "Johosh The Great", "Xkaet", "Bella Sassy", "Newtype Khan", "Blancooo Padreee"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Chronomancer", "Tempest", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[92.6965, 18.1502, 18.4382, 0.4257, 0.0, 5.8866, 64.9964], [17.5728, 6.3089, 11.3564, 0.1287, 6.4607, 52.6281, 106.7491], [89.6213, 22.0326, 17.864, 0.1386, 2.227, 7.3802, 66.2878, 0.0], [79.0776, 13.8796, 0.2552, 3.3957, 5.8653, 3.2508, 23.6742, 0.0, 43.9698, 1.4058, 7.2732, 0.0, 0.3896, 25.8699], [95.3324, 18.1502, 5.2954, 0.0, 3.3957, 11.6854, 46.0571, 4.1992, 27.797, 0.0, 0.0, 0.0, 0.0, 15.2096], [104.9975, 5.5324, 5.4868, 0.6336, 3.5721, 1.4058, 53.3746, 0.0, 38.4104, 9.2466, 0.0, 0.0, 0.0, 28.9254], [100.6043, 0.0, 0.0, 0.0, 9.5256, 14.4969, 85.6576, 4.6864, 77.5789, 0.0, 2.6007, 0.0, 8.8949], [10.5795, 9.2565, 9.7902, 40.2399, 236.742], [17.859, 9.9528, 1.7226, 7.0781, 23.2829, 114.0666, 1.0672, 98.553, 5.1084, 23.9795, 9.3051, 4.4589, 15.617], [119.9344, 2.4265, 12.441, 0.0, 2.5578, 1.6693, 108.0404, 4.1296, 65.4493, 10.9296, 11.6812, 2.1389, 5.2525, 10.5924], [131.796, 48.9182, 27.434, 0.0, 9.4374, 5.3595, 135.1582, 0.464], [144.097, 45.327, 31.4534, 0.5346, 4.2557, 10.7189, 57.679, 2.5056, 66.2074, 2.0592, 12.5187, 6.6667, 20.5058], [188.4683, 21.3532, 32.2828, 1.7127, 18.522, 23.7222, 8.1784, 0.0464, 87.6869, 16.7508, 20.938, 0.0, 0.0, 27.9748], [123.0096, 104.4366, 47.531, 8.8704, 0.0, 3.163, 93.8359, 15.544, 74.0411, 0.5742, 15.0313, 0.0, 4.3001, 2.3765], [121.6916, 19.8973, 15.5034, 0.4455, 11.8188, 10.2796, 121.8145, 3.828, 103.8597, 15.1074, 18.161, 5.5787, 6.7244, 41.2153], [200.7692, 39.8917, 19.0762, 0.0, 3.6383, 30.6631, 106.7491, 2.2272, 92.9936, 3.762, 16.4418, 2.205, 6.6522, 20.6416], [73.3664, 54.6448, 40.3216, 0.0, 14.0679, 26.2701, 123.1058, 0.0, 106.8921, 10.6722, 16.2214, 0.0, 12.5685, 86.3009], [168.2596, 16.112, 16.8432, 4.7421, 9.3492, 22.6679, 152.8062, 8.3056, 114.9785, 20.7702, 22.04, 2.9547, 3.1313, 33.6784], [170.0168, 67.8449, 10.7184, 1.089, 10.2753, 10.5432, 140.3234, 0.0, 116.7474, 6.6132, 26.7125, 4.0351, 6.8975, 25.7341], [233.7182, 40.377, 17.1622, 4.653, 0.7497, 33.7382, 120.5232, 3.6888, 90.7193, 10.9692, 13.3122, 6.9678, 8.557, 33.7463], [101.4277, 96.7846, 4.5342, 30.429, 33.7382, 450.6707], [215.7061, 62.7008, 33.3674, 2.2968, 3.4178, 27.3245, 122.245, 3.596, 132.1621, 9.5832, 27.4618, 13.8915, 10.5339, 54.9311], [348.8201, 66.292, 21.5644, 0.0, 10.7604, 32.3325, 243.1986, 7.3776, 249.1622, 20.097, 36.366, 0.0], [358.4851, 132.7781, 45.9998, 18.0279, 33.5601, 120.9832, 338.3258, 18.0496, 424.7887, 20.9088, 68.2799, 29.1721, 29.5382, 97.776]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

