created: 20230527000807000
creator: Drevarr
modified: 20230705163531865
modifier: drevarr
tags: ChartData
title: 202305270008_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Sofya De Nova", "Ryvalia Fazebringer", "Newtype Khan", "Primal Clone", "Artakama Nahid", "Eibh\u00ebar", "Black Raspberry Pie", "Air One Com", "Gavann", "Venomina The Siren", "Zefirokai", "Primo Pobre", "Tegan Parker", "Miphest\u00f6", "Sub Train", "Elonith Primal", "Tika Fiery", "Blanco Padre Guard", "Koralia Danai", "Demon Sekhmet", "Solus Sanctus", "Drevarr Moonwillow", "Johosh Of The North", "Lucas Ryn", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Scourge", "Weaver", "Chronomancer", "Spellbreaker", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.04, 182.8099, 0.0, 0.0, 0.0, 179.5133, 0.0, 89.449, 109.5998, 0.0, 38.4008, 0.0, 0.0, 187.5328, 0.0, 77.629, 0.4747, 0.0, 42.73, 0.0, 120.9898, 80.5516, 0.0, 0.0, 119.6399], [62.8531, 194.9117, 72.5003, 0.0, 0.0, 36.6307, 72.5733, 105.0624, 19.8072, 58.2912, 30.2629, 50.5278, 27.3427, 77.5219, 8.99, 9.9994, 36.1381, 39.8963, 145.7733, 0.0, 0.0, 0.0, 189.6211, 0.0, 2.4139, 65.7952, 0.0], [5.161, 603.8045, 0.0, 69.4047, 0.0, 245.7216, 0.0, 23.4202, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 88.9807, 32.7106, 0.0, 0.0, 229.3626, 7.0886, 0.0, 79.6594, 0.0, 0.0], [429.6499, 80.8618, 0.0, 6.8552, 0.0, 280.9872, 0.0, 24.0038, 90.4843, 102.465, 133.2584, 0.0, 149.5277, 100.1011, 0.0, 0.0, 0.0, 0.0, 25.3552, 0.0, 0.0, 234.1978, 0.0, 72.2667, 0.0, 59.1948], [89.5795, 15.9523, 133.9274, 6.7214, 0.0, 421.5946, 0.0, 107.3971, 37.728, 0.0, 0.0, 0.5067, 68.8531, 15.8054, 0.0, 0.0, 0.0, 0.0, 24.4593, 0.0, 0.0, 632.0118, 59.0266, 0.0, 20.5183, 0.0, 318.1032], [302.8378, 310.7952, 79.2025, 0.0, 0.0, 458.6803, 35.6399, 53.2608, 0.0, 5.9202, 0.0, 93.2254, 0.0, 242.2246, 103.2077, 23.736, 6.6641, 91.3539, 11.2164, 10.7148, 62.1619, 0.0, 84.7889], [57.6922, 335.7322, 0.5245, 0.0, 0.0, 283.2624, 0.0, 58.9517, 100.5451, 0.0, 0.0, 0.0, 0.0, 0.0, 93.6547, 1.6615, 0.0, 7.5637, 0.0, 0.0, 0.0, 0.0, 8.304, 723.2708, 318.6094, 25.7904], [177.8688, 364.5197, 75.9388, 0.0, 0.0, 324.216, 68.4544, 157.3018, 178.705, 0.0, 56.7959, 40.2104, 46.8797, 98.5958, 45.9346, 46.4039, 188.6549, 20.7265, 0.0, 0.0, 117.1017, 295.4054, 28.624, 82.6768, 171.3636, 28.026], [142.295, 102.3149, 11.1315, 0.0, 0.0, 536.9472, 81.0833, 113.2339, 222.2808, 0.0, 44.6738, 105.155, 0.0, 244.9843, 147.2227, 119.8668, 0.0, 204.4166, 24.1916, 0.0, 0.0, 441.9494, 0.0, 0.0, 92.3107, 78.5376], [346.8902, 232.6838, 250.3709, 399.7526, 267.6902, 164.4941, 129.4722, 395.113, 206.9015, 325.4054], [107.0899, 276.1402, 56.1819, 0.0, 178.6032, 0.0, 168.4646, 120.6667, 0.0, 181.323, 19.161, 79.5917, 167.2115, 188.0237, 225.848, 0.0, 224.0626, 0.0, 111.7171, 429.408, 46.896, 116.5219, 175.8769, 81.9072], [705.577, 674.0314, 80.7178, 0.0, 0.0, 141.5174, 21.1048, 328.393, 149.5915, 0.0, 879.9126], [234.3993, 85.367, 753.8944, 87.673, 385.2353, 139.9469, 511.9748, 119.2128, 66.6718, 133.6362, 428.7264, 43.568, 133.9726, 76.0206, 108.8316], [437.5757, 284.7581, 79.3774, 0.0, 0.0, 639.5587, 112.7745, 141.1776, 117.3341, 74.844, 35.01, 11.0544, 193.5648, 44.2803, 0.0, 37.1405, 101.7681, 62.9883, 272.3918, 41.3747, 95.9984, 272.9126, 0.0, 185.8718, 198.7254, 50.544], [571.5763, 632.2253, 99.7754, 771.7478, 92.0442, 205.8202, 164.6827, 14.553, 147.6693, 134.9558, 205.2509, 385.1008, 16.3168, 27.0072, 141.5259, 57.4645, 14.2065, 0.0, 222.5639, 228.0634], [690.647, 511.5744, 282.1918, 62.9842, 8.8256, 676.1894, 0.0, 0.0, 300.5664, 13.365, 354.8472, 0.0, 293.28, 221.1507, 0.0, 150.169, 234.4523, 7.7047, 339.974, 48.9245], [452.6899, 480.4032, 166.098, 83.9177, 522.1584, 131.3604, 154.6752, 120.2894, 2.6136, 105.1996, 20.5428, 224.7878, 183.6442, 17.998, 101.9131, 119.9261, 17.6456, 330.4457, 86.6326, 0.0, 119.5492, 309.9917, 100.768, 208.3012, 266.8477, 164.754], [143.7696, 566.9491, 319.0247, 0.0, 0.0, 250.4995, 63.0761, 101.2685, 120.2894, 24.057, 387.9075, 0.0, 71.064, 633.5974, 37.8749, 344.7994, 131.8535, 172.3156, 421.6032, 0.0, 0.0, 14.5221, 188.8032, 78.928, 87.8566, 389.1294, 13.9644], [472.9651, 588.4022, 247.5734, 134.3954, 595.4198, 129.2839, 109.1482, 114.5674, 0.0, 209.4667, 9.212, 179.352, 308.457, 39.1874, 214.9416, 191.7869, 34.9369, 206.6759, 0.0, 102.9059, 555.6403, 0.0, 121.7018, 103.3823], [377.1187, 467.7514, 313.8378, 74.103, 17.8416, 577.6733, 119.3783, 226.9056, 115.5106, 83.8332, 165.9797, 305.6542, 80.2234, 252.5107, 167.891, 137.0161, 88.2279, 305.4953, 41.4289, 0.0, 158.3293, 323.0784, 5.952, 94.4446, 201.4756, 189.5724], [317.2147, 595.92, 113.8791, 22.0537, 69.7312, 729.2016, 118.0848, 223.2576, 199.9584, 61.8948, 253.8014, 134.311, 113.9731, 438.7891, 0.0, 70.8883, 259.9685, 47.601, 195.6742, 72.7912, 308.3913, 484.6176, 66.64, 129.6476], [585.769, 344.7168, 313.4298, 94.3342, 52.9648, 262.7856, 107.3281, 79.6723, 47.5373, 53.361, 262.6175, 152.5968, 75.576, 509.7882, 191.6842, 355.2686, 153.8509, 518.065, 60.7903, 43.2306, 101.383, 201.7536, 72.08, 102.9436, 532.4965, 93.312], [853.5859, 456.7498, 69.8777, 0.0, 46.4016, 948.0758, 105.6602, 244.0512, 114.5674, 0.0, 148.2627, 257.5215, 59.6035, 666.2118, 0.0, 27.6322, 246.261, 0.0, 328.874, 39.0341, 0.0, 196.1303, 645.4752, 2.384, 150.5683, 156.4134, 12.798], [505.4054, 734.1734, 182.2998, 0.0, 10.3264, 781.3037, 113.217, 250.9094, 174.8693, 292.626, 232.6951, 89.7437, 575.895, 84.5928, 198.967, 0.0, 277.4015, 22.2974, 48.8072, 193.0845, 602.6707, 0.0, 204.2277, 255.0708, 136.5336], [730.0915, 589.6858, 386.7461, 15.4827, 25.0096, 1057.7405, 253.4618, 334.9594, 157.4515, 205.0092, 395.6216, 281.9793, 275.0966, 654.4205, 57.3472, 111.109, 235.8172, 177.4964, 583.8791, 108.4024, 417.8784, 536.2829, 68.864, 234.1, 451.2575, 320.6952], [1441.3824, 1156.0848, 371.3019, 0.0, 1312.7904, 117.6763, 450.8198, 306.6658, 11.9592, 755.0464, 175.6728, 169.2451, 364.2778, 308.5517, 490.4451, 13.2619, 1194.7715, 0.0, 130.7536, 974.688, 260.5525, 295.4083, 276.1128], [1532.6208, 1037.2675, 390.8257, 117.4914, 56.784, 941.7053, 224.4257, 526.1146, 471.0341, 87.2586, 554.311, 118.0978, 362.7648, 971.2819, 79.9121, 231.3691, 322.3349, 217.0827, 863.6382, 108.9436, 153.3634, 236.9228, 1111.6896, 80.736, 269.1018, 577.8409, 315.3816]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

