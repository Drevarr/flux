created: 20230520000848000
creator: Drevarr
modified: 20230705163530794
modifier: drevarr
tags: ChartData
title: 202305200008_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Soxxdodendron", "Spreadflamesoflight", "Newtype Khan", "Aronorf Xideliesi", "Grasszanine"];
const professions = ["Willbender", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.1191, 12.1053, 12.0998, 0.0, 24.0768, 48.0802, 27.0701, 0.0, 14.6059, 48.263, 0.0, 0.0, 0.0, 9.196, 0.0, 48.1637, 0.0, 12.0557, 4.4075, 12.0088], [62.2485, 416.1969, 19.3423, 109.7738, 0.0, 26.5522, 0.0, 34.6438, 40.3326, 87.4553, 66.0528, 36.7781, 12.2765, 3.995, 73.6382, 108.1729, 23.9418, 1.4175, 0.0, 23.107, 33.983, 136.3174, 41.1652, 128.7485, 0.0, 5.6111], [46.0782, 490.3668, 21.8912, 85.5941, 0.0, 21.7074, 36.1152, 25.1326, 56.1458, 21.7959, 167.3905, 43.4808, 124.9714, 34.9306, 0.0, 65.9295, 64.4345, 20.9385, 0.0, 0.0, 20.7997, 23.2228, 133.5928, 21.1715, 41.7312, 66.0677, 103.2544], [36.3474, 701.7318, 10.7743, 95.3568, 0.0, 38.2554, 0.4752, 14.221, 26.752, 10.4702, 116.9784, 132.1056, 60.4013, 11.7466, 0.0, 22.7879, 122.2496, 26.5644, 10.4328, 0.0, 49.859, 24.3148, 88.7689, 14.8002, 125.2709, 19.01, 50.2375], [61.6284, 650.2356, 29.5596, 100.9193, 14.2506, 36.3048, 13.3188, 61.8478, 49.859, 47.0954, 122.0846, 139.0752, 97.272, 25.679, 14.664, 30.3614, 113.9544, 21.9537, 0.0, 0.0, 49.0565, 35.2999, 93.6029, 20.391, 113.9107, 30.9191, 33.4567]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

