created: 20230625214748000
creator: Drevarr
modified: 20230705163536321
modifier: drevarr
tags: ChartData
title: 202306252147_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Drumina", "Elonith Primal", "Palm Sauce", "Mort\u00e4rion", "Oo Dads Mad", "Ephrem Rowf", "Lord Erin The Wise", "Caelon Cai", "Aronorf Xideliesi", "Kary\u00edna", "Newtype Khan", "Xyntharos", "Duke Silvver", "Xanvias Tsolice", "Rozaalyna", "Be\u00eb", "Irish Necroman", "Blancooo Padreee", "Sakis Ranger", "Tribal S", "Arriasa", "Zayde Sunsabre", "Drevarr Moonwillow", "K\u00f4sair"];
const professions = ["Druid", "Tempest", "Vindicator", "Scrapper", "Spellbreaker", "Scrapper", "Weaver", "Reaper", "Firebrand", "Vindicator", "Spellbreaker", "Vindicator", "Vindicator", "Weaver", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Druid", "Druid", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[52.0912, 69.6456, 43.9472, 696.2345, 4.8246, 8.5408], [133.8355, 36.1661, 36.5731, 0.0, 110.0702, 83.1412, 149.991, 169.0025, 44.9971, 0.0, 0.0, 0.0, 136.422, 0.0], [47.6986, 71.7989, 120.5558, 11.5776, 340.3176, 228.2244, 273.6278], [315.0202, 4.0238, 118.9622, 0.0, 204.0326, 155.3516, 573.6097, 49.0299], [322.1837, 210.0154, 208.7616, 37.1088, 300.6797, 187.8131, 767.8496], [0.0, 273.3192, 39.0588, 1804.1465, 28.5529, 31.7491], [269.4182, 79.7981, 133.1453, 14.58, 254.567, 273.273, 487.0639, 441.5429, 146.9698, 0.0, 110.16, 19.3358, 277.3225], [153.7536, 14.7379, 24.4618, 53.5464, 251.4086, 114.609, 563.8489, 436.6125, 186.4464, 61.8785, 228.888, 57.0636, 439.582, 53.2168, 68.5604], [261.9053, 93.3725, 287.7245, 0.0, 517.6618, 255.7173, 344.5562, 245.1495, 108.8472, 49.2906, 90.9432, 10.527, 441.649, 8.1774], [285.3178, 66.3206, 99.9187, 29.4624, 246.5131, 209.0124, 513.4181, 390.3218, 188.7379, 31.7205, 94.0032, 50.5054, 491.257, 14.8247, 29.8021], [202.3258, 77.2286, 197.6064, 0.0, 325.631, 368.0076, 298.3551, 493.3119, 170.7182, 31.8679, 164.9952, 63.3314, 582.894, 26.0236, 89.536], [326.5517, 52.6008, 141.9101, 16.8912, 312.8395, 316.8311, 530.0114, 460.4427, 193.0085, 6.3677, 94.6152, 21.4412, 603.9085, 20.0586, 8.0216], [311.7005, 79.5557, 129.4003, 0.0, 255.0408, 274.1011, 554.0881, 541.794, 175.4054, 25.3233, 172.7064, 5.9532, 601.497, 13.8451, 44.4176], [416.3578, 134.629, 107.6477, 0.0, 202.4534, 328.2588, 716.1174, 364.8481, 159.8856, 34.8454, 252.6336, 39.688, 685.2105, 18.7867, 25.2331], [335.4624, 90.2213, 109.321, 38.232, 356.8992, 338.196, 724.5767, 628.6234, 242.4845, 51.3247, 185.0688, 29.8386, 621.1335, 7.31, 33.1769], [390.3245, 116.2066, 153.4637, 56.808, 382.7981, 372.4794, 762.9692, 646.1537, 223.1107, 0.0, 144.0648, 36.5178, 624.234, 22.8072, 37.8237], [422.2982, 99.1901, 143.7427, 28.5768, 387.0619, 395.6662, 691.39, 623.6931, 206.5493, 53.3293, 229.0104, 31.1938, 653.861, 33.3775, 66.7172], [515.424, 141.4646, 251.3107, 37.1304, 416.2771, 330.0807, 691.7154, 682.8576, 358.6229, 137.1115, 130.4784, 14.4232, 689.0, 66.4187, 86.0055], [356.6035, 195.035, 265.8922, 22.2696, 400.1693, 413.0563, 799.4095, 645.6059, 191.9669, 32.2216, 184.3344, 64.13, 1027.6435, 0.0, 40.5495], [577.1002, 141.6586, 338.4806, 0.0, 324.0518, 374.1356, 926.6253, 724.492, 244.6718, 84.4602, 227.1744, 36.1306, 839.5465, 0.0], [497.4278, 97.0085, 205.8134, 58.1904, 526.1894, 429.9495, 1103.2958, 1148.5046, 391.225, 56.2478, 108.5688, 41.2368, 1100.6775, 20.9066, 82.423], [527.305, 73.3987, 237.8448, 44.8848, 531.2429, 664.1362, 1108.5015, 1073.7272, 457.7832, 6.3382, 280.0512, 53.2884, 1005.94, 32.778, 56.2034], [839.879, 294.613, 236.0122, 61.9272, 728.8008, 781.3952, 1287.1242, 1073.7272, 403.9325, 128.2085, 279.9288, 100.8172, 1329.77, 87.2375, 186.3928], [888.6259, 362.485, 412.1846, 37.2168, 675.8976, 484.6041, 1737.7478, 1699.0637, 443.6174, 36.7321, 195.1056, 1393.158, 42.5588, 54.5679]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

