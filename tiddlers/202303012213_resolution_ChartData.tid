created: 20230301221309000
creator: Drevarr
modified: 20230705163520965
modifier: drevarr
tags: ChartData
title: 202303012213_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["S\u00e4int Cel\u00e9stine", "Jupi Jupi Jupi", "Whose Guardian", "Ark Darkness", "Sister Elon\u00edth", "Gavann", "Kiloak", "Blanco Padre Guard", "Kahless The Drunk", "Sygaldry Verdandi", "Ravioli Fetabringer", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Dragonhunter", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 124.7616, 0.0, 0.0, 68.5032, 0.0, 39.6317, 0.0, 81.9936, 279.4284, 80.0128, 33.7291, 60.9346, 41.2104], [15.9012, 42.8865, 9.2989, 0.0, 2.7918, 14.7798, 10.4547, 68.6886, 0.0, 19.9555, 22.0995, 50.5582, 0.0, 0.0, 0.0, 50.0774, 0.0, 26.2366, 14.1229, 0.0, 7.128, 0.0, 18.0835, 0.0, 11.6538, 144.9998, 40.1829, 50.775, 5.0126, 17.5667, 6.0192, 10.935, 11.1982, 24.795, 12.0857, 22.4294, 0.0, 28.2892, 12.4992, 6.1459, 26.2181, 4.8013, 12.2047, 39.6766], [43.974, 110.7508, 45.1191, 25.168, 41.3807, 10.0291, 12.5015, 49.271, 0.0, 42.3907, 52.7122, 70.3287, 0.0, 0.0, 0.0, 58.0262, 16.6803, 30.2524, 26.6975, 0.0, 18.4378, 42.8352, 57.5078, 0.0, 0.0, 259.0748, 0.0, 18.0781, 35.4283, 32.9376, 22.6512, 37.4544, 20.8426, 67.599, 13.2413, 24.3302, 0.0, 66.9141, 18.7489, 42.9788, 32.7802, 11.7322, 33.0176], [31.3992, 0.0, 29.9727, 91.6674, 221.2064, 0.0, 240.0173, 47.581, 121.8679, 34.7868, 0.0, 97.079, 0.0, 0.0, 34.5331, 0.0, 23.3323, 0.0, 0.0, 0.0, 438.4706, 0.0, 127.1482, 115.2058, 41.5837, 40.7088, 10.9998], [128.6086, 163.9334, 152.3676, 145.9458, 249.3561, 184.4203, 212.4662, 75.1942, 186.0778, 327.0432], [176.6122, 137.9586, 0.0, 76.9089, 31.235, 143.3425, 278.8604, 94.7021, 129.6912, 112.3634, 176.0482, 0.0, 0.0, 39.5179, 57.9917, 0.0, 0.0, 0.0, 0.0, 128.0664, 0.0, 2.3213, 0.0, 0.0, 264.4393, 0.0, 90.601, 52.5053, 35.4422, 55.2816, 41.229, 48.0345, 103.5126, 18.9711, 66.1056, 39.6627, 72.9283, 86.3483, 23.9862, 113.521, 61.4099, 100.91, 136.5355], [29.7612, 172.783, 103.7829, 82.2204, 239.8542, 60.7027, 147.167, 130.6727, 266.2229, 9.1152, 43.3044, 124.7962, 42.0307, 23.7378, 102.4967, 56.2408, 115.3786, 80.2829, 146.615, 0.0, 0.0, 603.9818, 41.0943, 71.2294, 66.0989, 68.0024, 147.3384, 84.5964, 88.0052], [27.9216, 132.0173, 84.2582, 126.111, 35.4869, 91.8689, 31.3326, 374.6652, 124.7251, 181.6858, 332.3087, 155.674, 0.0, 169.2058, 35.047, 73.4891, 106.18, 47.8192, 194.6894, 114.6394, 103.1472, 0.0, 243.6123, 28.5158, 52.4203, 44.4658, 124.9776, 30.1806, 39.4349, 197.8902, 123.8899, 143.6371, 121.2015, 102.2868, 92.1172, 69.0136, 40.3402, 42.6694, 63.9421, 333.1627], [110.502, 286.067, 151.8023, 60.9453, 55.9808, 46.6803, 69.0261, 355.5042, 126.6586, 151.8509, 220.8783, 75.0072, 23.8093, 45.3924, 40.7752, 194.5037, 93.5747, 15.617, 44.5975, 63.7525, 246.4862, 66.0854, 120.145, 0.0, 4.3639, 575.897, 24.3848, 93.4285, 86.8291, 154.7381, 100.188, 21.2544, 79.2448, 256.7196, 92.4962, 78.0384, 99.3174, 24.1461, 207.1989, 145.9229, 165.564, 94.1477, 116.7113, 273.071], [53.4744, 79.9998, 144.716, 49.5422, 58.0694, 63.319, 8.2504, 308.7139, 140.1197, 188.2589, 153.8218, 280.4094, 0.0, 161.6095, 129.289, 172.302, 23.8717, 58.1573, 39.8429, 117.4219, 52.1309, 200.8656, 658.1004, 0.0, 180.1792, 75.841, 104.0279, 131.2872, 46.1862, 96.3904, 253.692, 29.3715, 209.2147, 92.3916, 129.8187, 225.7259, 108.3218, 183.1334, 27.9946, 150.9671, 183.1342], [105.5628, 229.9257, 120.4671, 47.7998, 96.4929, 62.3781, 141.5476, 537.5334, 39.6173, 215.8502, 222.6276, 265.6192, 23.7926, 0.0, 8.0264, 193.0522, 28.4482, 0.0, 88.7492, 17.9854, 246.0586, 20.137, 186.0394, 0.0, 0.0, 918.2796, 0.0, 154.8819, 53.2133, 121.1829, 39.1248, 88.128, 65.2872, 365.3478, 73.1398, 149.065, 0.0, 130.4424, 171.1434, 260.4334, 133.9934, 110.2358, 97.1956, 247.2888], [86.4612, 295.0802, 183.885, 98.6198, 72.5248, 113.373, 169.2273, 474.4904, 129.504, 247.535, 185.834, 251.5082, 87.2115, 26.3628, 17.3978, 102.816, 75.0247, 23.6486, 178.0849, 7.2987, 109.0584, 88.3642, 168.2179, 30.5466, 0.0, 856.5876, 0.0, 99.3542, 53.5814, 105.3317, 42.3192, 84.0618, 59.072, 273.6846, 42.7572, 86.1907, 144.4422, 220.1661, 156.2775, 173.6649, 49.5331, 68.3989, 131.2155, 328.849], [182.1708, 359.2921, 157.1544, 30.9954, 118.6618, 46.2213, 170.8332, 547.456, 211.2192, 262.5312, 384.4378, 278.8247, 0.0, 77.4036, 135.0605, 58.1978, 78.3081, 108.6902, 77.7498, 241.259, 90.3734, 294.5779, 35.0451, 72.8658, 971.2937, 31.1325, 177.0509, 97.9589, 130.5152, 151.404, 31.3956, 89.5054, 278.8524, 146.9057, 176.2042, 175.8225, 134.3182, 224.9863, 161.9279, 232.5154, 39.9784, 126.9998, 333.865]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

