created: 20230311223557000
creator: Drevarr
modified: 20230705163521701
modifier: drevarr
tags: ChartData
title: 202303112235_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Mom You Never Had", "Legendary Hacker", "Kmpek", "Dark Sidiuz", "Sheep Paws", "Raimaru Hanzo", "Vopiscus Zergherdus", "Harry Callahann", "Venomina The Fierce", "Lechen", "High Sorcer Baradun", "Sofya De Nova", "Slautorn", "Seren Nightroad", "My Birthday Girl", "Lord Erin The Wise", "Panther B Me", "Tootsie Pop Rock", "Tegan Parker", "Blanco Padre Guard", "Minnie Marshmallow", "Tribal S", "Smol Gluvs", "\u00c1rkantor", "Newtype Khan", "K\u00f4sair", "Husky Guard", "Smol Daddy Tika", "Rina Of Theros", "Morton Saltbringer", "Aronorf Xideliesi", "Zaylen Harker", "Be\u00eb", "Black Raspberry Pie", "Zadie Miststep", "Xanvias Tseli", "Sp\u00edcy Cheese", "Demon Sekhmet", "Sygaldry Verdandi", "Mistwalker Caelon", "Koralia Danai", "Xyntharos", "Primal Clone", "Bella Sassy", "Mac Chiato", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Johosh The Great"];
const professions = ["Tempest", "Herald", "Vindicator", "Scourge", "Berserker", "Spellbreaker", "Scrapper", "Scrapper", "Spellbreaker", "Soulbeast", "Tempest", "Weaver", "Weaver", "Scourge", "Scrapper", "Weaver", "Scourge", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Druid", "Scourge", "Vindicator", "Spellbreaker", "Spellbreaker", "Dragonhunter", "Berserker", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Tempest", "Berserker", "Berserker", "Spellbreaker", "Firebrand", "Vindicator", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Tempest", "Chronomancer", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 0, 1, 0, 1, 1, 1, 18, 12], [1, 15, 6, 0, 0, 0, 0, 0, 1, 5, 4, 8, 3, 7], [0, 0, 1, 2, 0, 10, 1, 5, 12, 15, 0, 0, 0, 0, 0, 0, 3, 2], [53, 0, 0], [19, 1, 1, 0, 1, 3, 5, 0, 4, 9, 8, 0, 1, 0, 0, 0, 0, 7, 0], [42, 1, 1, 0, 0, 0, 1, 1, 4, 12], [50, 1, 0, 0, 1, 1, 12], [0, 0, 0, 1, 0, 3, 5, 0, 2, 12, 7, 0, 2, 1, 0, 1, 0, 0, 6, 10, 2, 14], [5, 0, 1, 0, 2, 5, 15, 1, 2, 2, 13, 2, 0, 0, 3, 6, 10], [33, 0, 0, 0, 1, 4, 5, 0, 5, 9, 10, 1, 1, 0, 0, 0, 0, 4, 0], [48, 1, 1, 0, 1, 10, 6, 1, 10, 0, 16, 0, 0, 0, 1, 0, 0, 5], [40, 0, 1, 0, 0, 1, 13, 2, 0, 17, 16, 0, 0, 0, 0, 0, 0, 3, 3, 1, 6, 3, 5], [51, 1, 0, 1, 2, 1, 3, 1, 3, 13, 20, 0, 0, 1, 0, 0, 4, 0, 8, 2, 1, 1, 2], [44, 0, 1, 0, 2, 7, 8, 3, 4, 20, 26, 0, 0, 1, 0, 3, 0, 4, 0], [61, 0, 0, 0, 2, 2, 8, 0, 3, 21, 25, 0, 0, 0, 0, 0, 3, 0], [80, 0, 0, 0, 4, 2, 10, 1, 8, 2, 23, 0, 0, 0, 0, 4, 0, 4, 0, 2, 1, 6], [41, 1, 0, 0, 5, 5, 9, 2, 10, 19, 18, 0, 1, 0, 0, 1, 1, 3, 0, 10, 7, 5, 8, 5], [62, 2, 0, 0, 2, 1, 17, 1, 5, 21, 23, 0, 0, 0, 0, 1, 5, 0, 0, 10, 1, 6, 3], [45, 0, 1, 3, 6, 0, 5, 26, 25, 0, 1, 0, 0, 0, 4, 0, 15, 6, 7, 19], [58, 1, 1, 1, 3, 8, 11, 3, 6, 19, 24, 1, 3, 2, 0, 1, 3, 2, 5, 11], [71, 3, 1, 1, 2, 3, 13, 3, 8, 19, 28, 1, 3, 0, 5, 2, 0, 5, 1], [60, 2, 1, 0, 2, 5, 8, 2, 1, 13, 20, 0, 0, 0, 0, 9, 0, 5, 18, 13, 3, 15], [53, 0, 3, 0, 2, 2, 9, 2, 5, 18, 14, 0, 0, 1, 1, 0, 3, 1, 10, 18, 12, 8, 18], [72, 0, 0, 1, 4, 7, 10, 1, 6, 28, 23, 0, 5, 0, 0, 2, 0, 2, 1, 29], [101, 1, 0, 0, 5, 7, 11, 4, 8, 26, 29, 2, 1, 0, 2, 1], [71, 1, 0, 3, 1, 16, 0, 8, 19, 18, 1, 1, 1, 0, 0, 4, 1, 4, 21, 14, 3, 12], [67, 1, 2, 0, 3, 3, 18, 3, 8, 20, 28, 2, 2, 2, 0, 8, 1, 7, 26, 6], [81, 1, 0, 0, 3, 3, 19, 2, 8, 25, 14, 0, 0, 1, 2, 0, 6, 0, 9, 18, 2, 5, 9], [96, 1, 1, 0, 3, 4, 15, 4, 8, 39, 39, 1, 2, 1, 3, 4, 0, 6, 0], [110, 1, 0, 2, 8, 27, 1, 6, 34, 29, 0, 1, 0, 6, 1, 3, 1], [60, 3, 1, 1, 3, 7, 15, 3, 7, 22, 23, 4, 2, 1, 1, 3, 0, 3, 0, 9, 23, 13, 8, 21], [115, 3, 0, 0, 2, 7, 22, 1, 6, 37, 31, 0, 5, 1, 1, 1, 4, 0], [77, 1, 0, 3, 7, 10, 1, 5, 28, 22, 1, 1, 0, 1, 0, 0, 6, 2, 10, 15, 18, 9, 20], [105, 1, 2, 0, 4, 8, 10, 0, 7, 20, 20, 2, 2, 0, 1, 2, 0, 4, 0, 25, 39], [117, 1, 0, 1, 6, 6, 17, 3, 14, 44, 37, 0, 0, 3, 2, 0, 4], [97, 3, 0, 1, 3, 10, 14, 6, 11, 34, 32, 1, 3, 0, 0, 0, 0, 2, 0, 11, 22, 13, 13, 11], [157, 2, 1, 1, 5, 9, 24, 4, 16, 1, 55, 1, 6, 0, 0, 2, 1, 5, 1], [165, 5, 0, 1, 8, 14, 20, 4, 17, 3, 46, 2, 3, 1, 3, 1, 11, 0], [97, 1, 1, 5, 5, 11, 6, 9, 32, 21, 2, 3, 2, 2, 3, 3, 1, 17, 38, 10, 5, 31], [100, 0, 0, 1, 4, 6, 13, 2, 14, 36, 28, 1, 1, 0, 3, 5, 1, 12, 23, 20, 13, 33], [93, 1, 2, 1, 2, 6, 19, 3, 12, 40, 37, 2, 3, 0, 1, 3, 0, 4, 1, 11, 23, 17, 12, 24], [129, 3, 1, 0, 3, 6, 23, 7, 12, 38, 40, 3, 2, 0, 0, 2, 0, 5, 0, 15, 27, 21, 10, 23], [88, 2, 0, 0, 6, 8, 9, 1, 4, 36, 24, 1, 2, 0, 0, 2, 4, 0, 36, 7, 10, 133], [116, 2, 0, 1, 3, 8, 25, 4, 10, 43, 31, 1, 2, 1, 2, 3, 0, 5, 1, 21, 39, 16, 7, 33], [154, 4, 0, 1, 5, 10, 20, 4, 16, 42, 43, 0, 2, 0, 0, 0, 0, 5, 0, 6, 17, 10, 18, 21], [115, 4, 2, 2, 4, 10, 25, 3, 10, 40, 42, 0, 2, 0, 2, 5, 1, 6, 2, 14, 27, 15, 18, 50], [124, 4, 2, 0, 5, 12, 28, 3, 12, 47, 40, 4, 2, 0, 1, 7, 0, 5, 0, 12, 42, 13, 18, 28], [164, 6, 2, 1, 4, 11, 32, 5, 18, 52, 50, 4, 5, 1, 4, 4, 1, 4, 1, 13, 33, 17, 19, 18]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

