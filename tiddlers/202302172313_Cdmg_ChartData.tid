created: 20230217231312000
creator: Drevarr
modified: 20230705163519419
modifier: drevarr
tags: ChartData
title: 202302172313_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Sumatra Satyricon", "Jeckyll Mbs", "Abigail Ryn", "Ravioli Fetabringer", "Whose Guardian", "Seren Nightroad", "Sp\u00edcy Cheese", "Lord Erin The Wise", "King Squid", "Nelliel T", "Sofya De Meme", "Legacy Of Mathus", "Eva Akos", "Sister Elonith", "Mike The Archmagus", "Rag Man", "Daring Deathblade", "K\u00f4sair", "Demon Sekhmet", "Xanvias Tseli", "Smol Gluvs", "Panther B Me", "Rina Of Theros", "Be\u00eb"];
const professions = ["Firebrand", "Soulbeast", "Berserker", "Tempest", "Firebrand", "Dragonhunter", "Scourge", "Berserker", "Weaver", "Scourge", "Scourge", "Weaver", "Berserker", "Scourge", "Berserker", "Weaver", "Harbinger", "Scourge", "Berserker", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 30.7368, 24.3, 20.0547, 8.4022, 1.9245, 0.0, 0.0, 0.0, 0.0, 4.4011, 7.0565, 0.0, 0.0, 10.0893, 13.2747, 62.9057, 30.8598, 0.0, 52.8125, 9.4583, 0.0, 4.6275, 127.76, 11.5, 7.2062, 29.9636], [24.6957, 81.8246, 23.775, 30.75, 10.413, 0.4906, 8.0351, 5.902, 5.8438, 14.489, 0.0, 0.0, 4.4, 0.0, 21.867, 44.4057, 111.875, 7.4579, 0.0, 34.5417, 0.0, 29.8039, 27.16, 0.0, 0.0, 14.2545], [75.4058, 61.6491, 0.0, 16.7656, 3.4457, 0.0, 11.2632, 0.0, 9.9216, 3.3438, 7.511, 0.5125, 103.2321, 23.0687, 55.8302, 0.0, 6.972, 0.0, 16.9792, 11.8333, 0.0, 4.6275, 0.08, 1.5671, 10.5258, 4.5091], [127.4783, 0.0351, 0.0, 32.6172, 4.9674, 41.3774, 6.8421, 1.7255, 0.0, 13.1868, 0.8468, 9.8, 38.875, 10.4721, 95.0472, 0.0, 10.972], [35.8986, 26.8246, 1.85, 24.2188, 19.4348, 4.0, 38.0175, 0.0, 9.5098, 0.0, 2.4341, 0.0, 10.2073, 25.45, 0.0, 31.9485, 78.7642, 0.0, 17.1776, 0.0, 0.0, 9.5833, 0.0, 31.6863, 8.88, 2.7744, 2.4948, 10.1818], [9.9275, 37.9825, 8.825, 28.4297, 74.4565, 12.0566, 10.193, 14.2353, 15.7812, 11.7857, 14.5484, 22.525, 5.125, 13.7639, 43.4623, 42.5701, 0.0, 18.375, 29.9028, 1.7468, 22.6667, 51.32, 4.4268, 7.6186, 12.4545], [166.087, 33.2281, 2.175, 93.0703, 67.8913, 10.6226, 15.2982, 45.0196, 0.0, 25.8187, 17.6613, 9.9875], [56.5263, 4.425, 55.6641, 54.0761, 0.0, 22.5263, 123.3922, 0.0, 42.3187, 0.7258, 0.0, 20.8929, 5.3734, 21.6887, 0.0, 34.271, 0.0, 31.0208, 118.4306, 0.0, 185.9412, 173.92, 0.0, 4.0], [33.5507, 49.5614, 25.075, 32.3047, 132.8261, 20.717, 7.5965, 0.0, 8.6471, 142.3438, 21.8297, 0.0, 35.7927, 63.675, 28.2321, 14.4292, 70.2925, 0.0, 10.3925, 0.0, 70.6875, 53.0139, 0.0, 66.72, 0.2561, 75.3093], [174.2464, 209.807, 34.3, 192.0547, 152.7935, 23.717, 56.807, 15.4815, 13.7451, 13.3125, 4.5549], [32.1014, 121.9123, 2.775, 122.6875, 39.7826, 49.0566, 0.5439, 16.0392, 15.5938, 25.2637, 2.9194, 0.0, 0.0, 53.9286, 9.5794, 91.4434, 378.5833, 0.6729, 0.0, 0.0, 87.1389, 0.0, 9.2549, 11.0, 0.7683, 61.2268, 0.5636], [79.2899, 23.3684, 46.55, 50.7422, 45.837, 43.7925, 43.0351, 120.6471, 52.25, 19.8791, 8.0887, 0.5244, 63.6625, 71.5179, 11.7639, 50.9717, 0.0, 41.0, 0.0, 55.7917, 36.25, 0.0, 13.8039, 60.44, 1.8902, 26.8247, 112.3273], [39.3043, 85.4211, 20.65, 17.5391, 84.6957, 12.0377, 22.8947, 0.0, 70.9412, 318.5625, 62.4396, 18.6532, 0.0, 91.65, 49.125, 49.515, 3.6415, 5.0, 106.4579], [26.4878, 2.9875, 130.8929, 4.2318, 223.9811, 0.0, 164.1682, 0.0, 34.75, 9.7778, 0.0, 185.0784, 312.64, 2.5793, 110.3505], [51.1304, 23.9825, 12.975, 45.4531, 2.8478, 22.6792, 12.807, 0.0, 61.9608, 84.9062, 43.4615, 41.9194, 153.975, 119.5179, 38.103, 40.6698, 0.0, 59.0654, 0.51, 56.6667, 100.8611, 0.0, 20.6078, 19.28, 0.0, 4.6392, 52.3455], [20.971, 41.9649, 31.925, 9.2734, 9.3587, 67.9057, 56.386, 0.0, 104.6667, 39.8438, 34.4341, 30.8629, 5.1829, 83.9375, 35.3929, 30.8412, 128.2264, 98.3551, 0.0, 77.6667, 110.1389, 4.2658, 13.8431, 57.72, 0.0, 64.5567], [36.7196, 0.0, 246.1875, 423.6944, 83.2911, 742.96, 210.4634, 156.0515], [69.8, 80.7708, 266.2361, 0.0, 324.1765, 1381.12, 41.2256, 325.4536, 435.5455], [225.1014, 24.4035, 11.525, 80.1562, 151.4783, 127.6415, 180.6667, 0.0, 75.8039, 90.5938, 51.1703, 17.4355, 0.0, 90.0, 60.0, 47.8412, 73.8208, 0.0, 122.0654, 0.0, 138.4167, 247.4583, 0.0, 0.0, 197.92, 0.0, 36.866, 78.5818], [89.7101, 29.2281, 38.725, 37.2422, 288.087, 97.4906, 141.1579, 0.0, 4.2941, 8.0625, 90.0385, 23.4758, 230.275, 116.125, 66.0215, 63.3208, 125.9813, 0.0, 68.6667, 35.6667, 0.0, 22.4314, 0.0, 4.0854, 66.9691, 174.0364], [12.942, 61.4035, 0.0, 127.9688, 158.6196, 22.8679, 175.1754, 174.0, 15.2188, 94.9066, 83.8065, 122.1875, 252.2321, 41.382, 50.4528, 0.0, 54.3738, 3.63, 106.4792, 22.4861, 0.0, 63.8039, 0.0, 2.9878, 98.0309, 238.9636], [29.3188, 42.5614, 26.225, 209.7578, 171.7609, 115.3019, 90.386, 27.2593, 29.902, 13.7188, 17.8022, 76.5645, 7.6707, 176.6125, 89.3571, 61.0215, 114.2453, 0.0, 21.1589, 0.0, 52.8333, 281.4583, 23.8861, 33.9608, 34.52, 9.6585, 98.7938, 131.3455], [178.5217, 199.0351, 28.075, 156.8359, 130.6413, 60.2264, 25.4386, 34.5185, 78.8824, 49.1875, 49.3187, 109.2742, 27.6463, 197.2, 110.4286, 40.4034, 102.2358, 0.0, 150.1495, 0.0, 35.7083, 88.9722, 1.6582, 37.1961, 0.0, 4.3232, 48.8041, 271.9818], [121.7101, 144.1053, 125.65, 297.8047, 73.6196, 192.7925, 85.4561, 0.0, 80.098, 58.9688, 56.6813, 42.2742, 3.6463, 66.5125, 259.5179, 55.2189, 88.7453, 0.0, 149.5421, 0.0, 73.3333, 146.5833, 34.4177, 170.0784, 246.28, 10.4634, 127.2371, 110.3091], [351.5797, 109.4561, 18.75, 157.8516, 262.7717, 326.283, 132.193, 0.0, 111.4118, 103.7812, 96.5714, 139.3871, 9.878, 181.45, 183.1964, 100.6824, 257.7925, 0.0, 68.7009, 0.0, 333.875, 402.25, 0.0, 217.2549, 81.56, 0.4573, 134.2062, 0.1091]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

