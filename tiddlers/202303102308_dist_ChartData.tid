created: 20230310230833000
creator: Drevarr
modified: 20230705163521583
modifier: drevarr
tags: ChartData
title: 202303102308_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rkantor", "Smol Gluvs", "Sp\u00edcy Cheese", "Nimplet", "Primal Clone", "Morton Saltbringer", "Viral Marketing", "Riann Swordbreak", "Mistwalker Caelon", "Mac Chiato", "K\u00f4sair", "Xanvias Tseli", "Be\u00eb", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Vindicator", "Scourge", "Berserker", "Scrapper", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Vindicator", "Tempest", "Spellbreaker", "Berserker", "Scourge", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[220, 258, 2256, 307, 1981, 264, 226, 292, 336, 327, 196, 342, 241, 273, 284, 352, 266, 160, 96, 213, 327, 299, 604, 247, 332, 412, 385, 281, 168, 301, 264], [16819, 6456, 783, 235, 9269, 2335, 218, 262, 187, 371, 178, 24029, 218, 169, 217, 383, 167, 172, 146, 330, 439, 269, 254, 330, 292, 400, 305, 233, 215, 321, 256], [188, 399, 1358, 334, 4617, 6965, 218, 252, 209, 371, 204, 339, 911, 147, 236, 1016, 180, 187, 157, 178, 345, 310, 241, 454, 386, 700, 259, 383, 201, 455, 333], [188, 192, 253, 298, 190, 108, 112, 226, 698, 352, 361, 308, 354, 358, 461, 357, 171, 292, 378], [233, 270, 1187, 247, 6146, 517, 217, 228, 180, 302, 164, 339, 220, 207, 362, 735, 252, 133, 105, 315, 542, 254, 256, 401, 578, 727, 417, 256, 340, 401, 392], [219, 6611, 1015, 259, 1310, 4902, 683, 267, 232, 275, 5423, 224, 171, 230, 252, 326, 172, 132, 263, 261, 259, 251, 452, 220, 541, 682, 193, 316, 315, 348], [241, 251, 2150, 235, 802, 361, 155, 239, 234, 231, 294, 229, 236, 167, 230, 281, 213, 173, 155, 197, 507, 261, 296, 370, 455, 312, 321, 275, 201, 463, 252], [362, 220, 1977, 219, 6243, 3370, 190, 231, 179, 255, 237, 278, 256, 257, 237, 539, 252, 151, 109, 246, 375, 279, 232, 301, 353, 488, 324, 394, 228, 261, 306], [213, 6371, 2993, 370, 581, 3322, 203, 205, 153, 243, 178, 288, 240, 254, 192, 304, 121, 202, 151, 232, 366, 227, 237, 411, 464, 656, 272, 281, 216, 346, 222], [20487, 2158, 313, 6331, 395, 132, 243, 195, 228, 304, 284, 187, 266, 183, 278, 242, 173, 231, 383, 335, 223, 280, 602, 836, 513, 474, 153, 479, 212], [196, 281, 172, 363, 173, 297, 198, 259, 219, 238, 210, 150, 160, 316, 290, 299, 416, 409, 625, 533, 241, 170, 530, 324], [175, 225, 2163, 261, 5161, 8493, 161, 206, 205, 212, 233, 332, 210, 282, 207, 246, 200, 163, 118, 180, 583, 259, 250, 214, 1132, 612, 390, 203, 200, 274, 215], [165, 198, 413, 376, 6278, 10131, 587, 235, 255, 302, 8730, 241, 168, 191, 239, 149, 151, 102, 198, 298, 271, 225, 386, 494, 1209, 372, 312, 191, 371, 185], [169, 194, 2081, 178, 6141, 327, 166, 212, 159, 283, 196, 260, 183, 219, 146, 188, 160, 179, 149, 155, 279, 235, 195, 363, 247, 649, 297, 199, 184, 173, 149], [157, 6701, 1268, 219, 420, 202, 149, 207, 240, 220, 144, 259, 166, 168, 198, 200, 167, 155, 171, 210, 183, 183, 200, 201, 229, 256, 232, 212, 287, 286]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

