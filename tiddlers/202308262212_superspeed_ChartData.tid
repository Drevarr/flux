created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Illusionist Zeroo", "Lord Krython", "Bee Nemesis", "High Sorcer Baradun", "Loganlek", "Newtype Khan", "Sofya De Nova", "Belladonna Horror", "Mort\u00e4rion", "Tootsie Pop Rocks", "Cuz Imasir", "Oo Dads Mad", "Tegan Parker", "Venomina The Fierce", "Mistwalker Cael", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Scrapper", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Berserker", "Tempest", "Spellbreaker", "Herald", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.069, 0.437, 0.364, 1.618, 0.263, 0.971, 0, 0.688], [0.795], [0.463, 0.566], [0.403, 0.7, 1.468, 1.295, 1.052, 1.196, 0, 0.54], [1.108, 0.444, 0.453], [0.171, 0.388, 0.917, 0, 0, 0.498, 0, 0.328, 0.851, 0.24, 0.327, 0, 0.538, 0.116, 0.508, 0.295, 0.22], [0.97, 0.712, 0.909, 0.672, 0.49], [1.3, 0.791, 0.896, 2.163, 0.618, 0.51, 0.724, 0.62, 0, 0.968, 1.437, 0.6], [0.083, 0.131, 1.221, 0, 0.819, 1.146, 0, 0.425, 0.255, 0.604, 0, 0.538, 0.222, 0.674, 0.152, 0.399], [0.395, 0.175, 0, 0, 0.342, 0.314, 0.393, 0.83, 0.361, 0.092, 0, 0.323, 1.064, 0.619, 0.151, 0.354], [1.36, 1.541, 0.181, 0.543, 1.462], [0.315, 0.584, 1.22, 0, 0.897, 0.996, 0, 0.366, 0.851, 0.962, 0.686, 0, 0.424, 1.419, 0.983], [0.604, 0.386, 0.734, 1.302, 0.575, 0.448, 1.081, 0.51, 0.482, 0.244, 0, 0.321, 0.852, 0.797, 0.391, 0.38], [0.851, 0.342, 0.393, 0, 1.204, 1.379, 1.029, 0.88, 0.907], [0.372, 0.403, 1.222, 0, 0.438, 0.997, 0, 0.328, 0.851, 0.57, 0.345, 0, 0.777, 1.061, 0.614, 0.505, 0.749], [1.246, 0.674, 1.22, 0, 1.316, 0.997, 0.315, 0.85, 0.848, 0.345, 1.688, 1.076, 1.418, 1.383, 0.87, 0.707], [2.041, 1.446, 2.774, 1.951, 2.372, 2.393, 0.643, 1.473, 2.55, 1.902, 0.618, 2.526, 1.775, 2.68, 2.482, 1.23, 1.516]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

