created: 20230204220933000
creator: Drevarr
modified: 20230705163518649
modifier: drevarr
tags: ChartData
title: 202302042209_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Blood Ravana", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Sofya De Meme", "Mike The Archmagus", "Raziel Umbra", "Tegan Parker", "Bambiae", "High Sorcer Baradun", "Arkintor", "Black Raspberry Pie", "Vinthry Stormgrave"];
const professions = ["Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[327.7453, 82.7399, 0.3514, 136.1396, 80.2179, 84.534], [161.012, 63.5853, 20.6131, 111.9591, 74.5555, 97.5615, 0.0, 37.434, 0.0, 106.9646, 243.3908], [122.598, 38.3092, 12.0048, 43.0612, 20.605, 258.234, 8.064, 96.2213, 0.0, 128.6353, 200.2547], [1845.9995], [1032.2752, 0.0, 125.6698, 382.4166, 337.0725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [315.8942, 78.7905, 32.1494, 159.1608, 133.8538, 380.1135, 22.9018, 170.9576, 0.0, 363.6795, 414.7928], [873.7151, 204.184, 0.0, 274.1011, 382.5293, 499.677, 86.4998, 40.8611, 40.4373, 704.8547, 519.3481], [1032.6838, 449.2443, 104.4125, 294.8036, 237.036, 622.7145, 128.5402, 348.7693, 30.8822, 635.1194, 743.0277], [1375.9582, 450.2316, 81.2813, 221.2683, 442.9286, 576.684, 0.0, 375.2631, 0.0, 603.1689, 690.4644], [1430.7187, 471.3609, 121.6877, 320.6403, 317.8831, 775.5705, 109.993, 275.2193, 47.4443, 1014.0795, 740.7423], [1357.1599, 716.8161, 99.552, 505.9691, 563.2555, 667.587, 104.2406, 340.8607, 30.4535, 714.3009, 833.8707], [1832.4314, 601.0987, 85.2048, 385.8946, 446.5463, 848.235, 34.8902, 445.386, 37.5463, 789.5929, 961.8509]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

