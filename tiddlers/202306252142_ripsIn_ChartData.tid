created: 20230625214256000
creator: Drevarr
modified: 20230705163536139
modifier: drevarr
tags: ChartData
title: 202306252142_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Liyo Morgaine", "Surethang", "Liyo Morgaine", "Drev Of The Dead", "Hayuf", "Arriasa", "Ateriuz", "Hayuf", "Shrimp Tempsura", "Govinda Ektar", "Wall Knot", "Blaze All Might", "Latedoctor", "No Reserv\u00e9", "Vesnan", "Melpomene Vandrish", "Elonith Requiem", "Wall Knot", "Gamora Titus", "Drac Tepes", "Booboo Hurts", "Jerryatric Reflexes", "Charr Surethang", "Elonith Requiem", "Drevarr Moonwillow", "Fluffy No Care Bear", "Koralia Danai", "Scythe User", "Aronorf Xideliesi", "Ani Deasun", "Yngvar The Burdened", "Yedrax", "Drumina", "Tacitus Kilgore I", "Gestern Yesteryear"];
const professions = ["Herald", "Guardian", "Vindicator", "Reaper", "Firebrand", "Druid", "Berserker", "Dragonhunter", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Reaper", "Vindicator", "Scourge", "Chronomancer", "Reaper", "Dragonhunter", "Dragonhunter", "Scourge", "Firebrand", "Berserker", "Spellbreaker", "Scourge", "Scrapper", "Berserker", "Firebrand", "Reaper", "Firebrand", "Vindicator", "Scourge", "Scrapper", "Druid", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0303, 0.0833, 0.0156], [0.0072, 0.0, 0.0, 0.0497, 0.0541], [0.2079], [0.0255, 0.0288, 0.022, 0.1892, 0.0276], [0.0594, 0.0637, 0.0396, 0.022, 0.027, 0.0221, 0.027], [0.0, 0.0, 0.0725, 0.0, 0.0606, 0.2024], [0.0, 0.0121, 0.0714, 0.1042, 0.0891], [0.0, 0.1443, 0.0, 0.0189, 0.0227, 0.0, 0.0847, 0.0, 0.0667, 0.0833, 0.0104], [0.0255, 0.0504, 0.0, 0.0, 0.0608, 0.0811, 0.0508, 0.0758], [0.2673, 0.0191, 0.0072, 0.0, 0.0, 0.0387, 0.1017, 0.0], [0.0, 0.0303, 0.131, 0.099, 0.1188], [0.0, 0.0, 0.0, 0.0, 0.0227, 0.1087, 0.0678, 0.0, 0.0303, 0.119, 0.0677], [0.0637, 0.0647, 0.0, 0.0541, 0.0276, 0.1081, 0.0847, 0.0], [0.0734, 0.0309, 0.0, 0.0189, 0.0, 0.0362, 0.1864, 0.0, 0.0545, 0.1429], [0.0149, 0.0227, 0.0, 0.1525, 0.0, 0.0424, 0.1786, 0.0288, 0.044, 0.0, 0.0135, 0.0, 0.0455], [0.0, 0.0722, 0.1509, 0.0227, 0.029, 0.0847, 0.0, 0.0606, 0.0595, 0.0052, 0.0891], [0.0469, 0.2277, 0.0382, 0.0216, 0.0, 0.0, 0.0442], [0.0459, 0.0206, 0.0189, 0.0, 0.0145, 0.1695, 0.0127, 0.036, 0.0, 0.1351, 0.0718, 0.0, 0.0, 0.0606], [0.0275, 0.0825, 0.0, 0.0189, 0.0, 0.0145, 0.2203, 0.0, 0.0182, 0.0595, 0.0469, 0.1089], [0.0446, 0.0647, 0.011, 0.3243, 0.0221, 0.1081, 0.0, 0.0909], [0.0, 0.0189, 0.0, 0.0145, 0.1186, 0.0, 0.0303, 0.0595, 0.0677, 0.0099, 0.1146, 0.0144, 0.0, 0.027, 0.0055, 0.0135, 0.0, 0.0], [0.0121, 0.1071, 0.1198, 0.0396, 0.0318, 0.0144, 0.0, 0.0, 0.0276, 0.0946, 0.0339, 0.0], [0.0, 0.0722, 0.0755, 0.0227, 0.0145, 0.1864, 0.0, 0.0242, 0.1429, 0.0677, 0.0693, 0.0127], [0.156, 0.1753, 0.0566, 0.0, 0.0072, 0.1017, 0.0, 0.0667, 0.119], [0.0917, 0.0722, 0.0, 0.0, 0.0227, 0.029, 0.0847, 0.0, 0.0788, 0.1071, 0.0677, 0.0693], [0.0, 0.0943, 0.0, 0.0362, 0.0847, 0.0068, 0.0848, 0.1548, 0.1042, 0.0693], [0.0275, 0.0722, 0.0, 0.0, 0.0072, 0.3559, 0.0, 0.0424, 0.1667, 0.1042, 0.0495], [0.0917, 0.0206, 0.0, 0.0566, 0.0, 0.0507, 0.1864, 0.0068, 0.097, 0.25, 0.0365], [0.0, 0.0424, 0.2738, 0.1042, 0.0891, 0.0255, 0.0288, 0.011, 0.0, 0.0331, 0.027, 0.0508, 0.0], [0.055, 0.0515, 0.0, 0.0217, 0.0678, 0.0, 0.0727, 0.119, 0.099, 0.099, 0.0191, 0.0396, 0.0, 0.2162, 0.0552], [0.0, 0.0303, 0.1786, 0.0625, 0.1089, 0.0127, 0.0432, 0.033, 0.2973, 0.0552, 0.0946, 0.1864, 0.0455], [0.0485, 0.1071, 0.0625, 0.0891, 0.0255, 0.018, 0.0549, 0.2703, 0.116, 0.0946, 0.1864, 0.0455], [0.0917, 0.1134, 0.1321, 0.0, 0.0435, 0.1186, 0.0, 0.0788, 0.1548, 0.0625, 0.0297, 0.0064, 0.0396, 0.0, 0.1622, 0.0442, 0.0135, 0.2203, 0.0], [0.0459, 0.0309, 0.0, 0.0189, 0.0, 0.0145, 0.1525, 0.0, 0.0545, 0.1667, 0.1927, 0.099, 0.0127, 0.054, 0.011, 0.2703, 0.0773], [0.0367, 0.0722, 0.3396, 0.0, 0.0217, 0.3559, 0.0, 0.0848, 0.0833, 0.0625, 0.0495, 0.0255, 0.0468, 0.0, 0.3243, 0.0331, 0.0135, 0.1356, 0.0152]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

