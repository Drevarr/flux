created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Mort\u00e4rion", "Melody Phoenixstorm", "Philip Poundhouse", "Darks Na", "Lord Erin The Wise", "Tootsie Pop Rocks", "Mistwalker Cael", "Stoic Rapidfire", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scrapper", "Scrapper", "Herald", "Firebrand", "Weaver", "Scrapper", "Herald", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[60.1657, 24.0149, 0.0, 0.0, 96.529, 30.028, 0.0, 97.713, 18.0688, 0.0, 134.6074, 39.0144, 0.0, 0.0, 17.9071, 0.0, 0.0, 0.0, 0.0, 0.0, 54.7871, 0.0, 0.0, 0.0, 28.008], [30.2308, 153.1148, 12.7629, 51.3461, 89.5954, 3.9843, 0.0, 260.4888, 67.1112, 14.442], [32.2422, 72.9947, 53.8835, 10.7294, 94.129, 0.0, 0.0, 297.7762, 157.5392, 16.1352, 39.121], [82.6189, 10.6838, 27.5087, 0.0, 525.5078, 14.2826, 0.0, 0.0, 195.9458], [61.0531, 129.4693, 21.9386, 50.116, 275.8556, 0.0, 0.0, 258.0494, 179.2213, 0.0, 409.2165, 0.0], [97.6474, 14.9892, 191.1011, 11.97, 20.1051, 428.6304, 182.921, 29.8468, 189.5355, 28.6767, 15.0498, 54.5008, 71.9734, 84.2982, 88.7808, 2.6266], [30.8026, 104.7683, 221.2358, 42.3936, 117.1042, 0.0, 20.9622, 51.9235, 257.9479, 540.8865, 37.726, 25.002, 65.6144, 98.6739, 240.2304, 41.5744, 0.0, 118.643, 157.3854, 46.5186], [114.6521, 358.904, 116.3763, 73.0555, 398.4154, 128.2842, 57.7546, 838.0944, 342.8694, 15.4454, 859.1467, 16.5904, 25.5528, 214.0656, 308.1325, 278.6586, 181.632, 13.7203], [59.7975, 325.11, 69.1362, 902.5632, 390.2774, 847.539, 60.8213, 91.6056, 124.6048, 188.6509, 222.1696, 159.9232, 29.8858, 0.0, 73.4342, 69.8616, 20.2675, 55.4938, 37.254, 21.8238, 90.7511, 123.6186, 29.4754, 125.928, 419.112], [149.7734, 485.2065, 297.6998, 106.1776, 554.708, 0.0, 35.9135, 982.1909, 538.0942, 68.3704, 1226.7832, 60.9649, 30.1752, 232.6128, 246.319, 233.6154, 172.5952, 40.176, 117.9763, 87.1224, 12.2357, 53.5651, 29.3748, 20.8457, 141.9963, 137.4848, 166.1147, 51.463, 314.82], [181.779, 610.2424, 440.6214, 209.0065, 746.0396, 40.0311, 82.6227, 1888.4131, 1046.1604, 0.0, 65.801, 2161.467, 38.2288, 37.4112, 400.016, 430.7434, 434.6778, 182.2976, 61.0243, 255.17, 152.4195, 216.6714, 59.0765, 158.0141, 113.19, 20.2019, 261.7917, 244.1754, 293.0287, 234.5648, 481.716]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

