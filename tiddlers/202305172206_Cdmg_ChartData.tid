created: 20230517220640000
creator: Drevarr
modified: 20230705163530389
modifier: drevarr
tags: ChartData
title: 202305172206_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Antherisa", "Puppy Sky", "Solus Sanctus", "Lucas Ryn", "Crusader Siolith", "Sygaldry Verdandi", "Asureon", "Demon Sekhmet", "Lord Erin The Wise", "Mike The Archmagus", "Xanvias Einzbern", "Hauzzy", "Rozaalyna", "Smol Gluvs", "Elonith Requiem", "Be\u00eb", "Lathena Haras"];
const professions = ["Reaper", "Scourge", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Weaver", "Weaver", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Catalyst"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.3206, 8.6111, 88.7597, 19.801, 23.4103, 24.5455, 7.0448, 37.3846, 9.3818, 0.0, 5.7582, 27.1333, 19.0993, 16.8974, 0.0, 14.25, 41.8223, 59.875, 23.0902], [58.6, 0.0, 25.5425, 390.04, 7.9645, 196.9744, 36.4444, 24.4125], [0.0, 13.8333, 0.0, 0.0, 0.0, 0.0, 19.3462, 0.0, 0.0, 2.9673, 0.0267, 46.8652, 4.5513, 0.0, 5.6125, 20.0102, 56.0, 28.8443, 30.7742, 0.0, 28.8596, 27.6071, 5.1389, 18.2897, 59.5132, 1.6108, 1.1918, 12.0769, 5.2059, 2.8889, 40.7667, 8.6316, 25.5556, 15.0415, 25.9886, 6.0515, 16.2812], [11.4351, 2.7963, 60.5116, 28.0647, 0.0, 0.0, 6.4478, 73.1154, 0.0, 0.0, 0.0, 39.8933, 7.4043, 107.6667, 15.5833, 0.0, 4.4619, 23.6833, 4.4631, 4.172, 7.5882, 0.0, 0.0, 0.0556, 29.5888, 5.6053, 2.7006, 0.0, 15.0296, 0.0, 0.2889, 12.119, 0.1579, 26.9206, 1.6632, 44.875, 2.3505, 94.75], [3.3359, 19.2222, 18.8605, 2.5423, 0.0, 0.0, 25.4478, 8.5769, 48.4364, 0.0, 31.1961, 8.1333, 73.773, 18.0256, 0.0, 17.4375, 11.2843, 61.7667, 4.7172, 18.3871, 0.0, 16.8571, 54.3611, 17.7991, 21.1316, 13.6647, 21.5548, 31.5858, 4.1029, 15.4222, 45.8, 1.7368, 7.1852, 12.1192, 5.3182, 0.0, 19.0417], [4.4733, 12.3333, 6.876, 0.8806, 0.0, 0.0, 3.1791, 18.8462, 59.8, 0.0, 9.4771, 0.0, 48.6099, 5.3462, 6.3333, 34.65, 6.2335, 15.9417, 15.9795, 13.0753, 0.0, 27.0877, 3.1429, 39.1667, 35.1963, 42.0526, 28.6407, 47.1986, 31.7219, 53.2059, 52.7143, 0.0, 12.2804, 37.7979, 122.4062], [0.0, 61.4729, 1.2338, 10.6923, 0.0, 10.5075, 136.6731, 0.0, 0.0, 6.3072, 3.0533, 62.5603, 38.2949, 64.375, 16.3401, 3.8583, 19.8402, 0.0, 9.7059, 0.0, 5.0357, 121.8611, 88.757, 75.4342, 3.4671, 30.5137, 38.0296, 0.0, 0.0, 51.8, 12.6579, 2.9259, 0.0777, 4.2045, 0.0, 5.9271], [2.0, 5.3333, 14.1473, 6.6866, 42.2308, 0.0, 12.1045, 225.2885, 3.8364, 0.0, 25.2092, 0.0, 97.1348, 119.7308, 3.4167, 40.0375, 4.4721, 80.1333, 95.2213, 24.2151, 0.0, 121.9722, 65.9486, 62.0395, 2.6168, 11.4589, 33.5503, 22.5588, 0.0, 27.5476], [0.0, 20.9074, 9.4884, 4.9403, 0.0, 0.0, 0.0, 0.0, 23.0915, 0.0, 48.7943, 124.8974, 0.0, 32.225, 9.7919, 82.4833, 11.377, 21.5054, 0.0, 0.0, 0.0, 257.3333, 91.3738, 59.3684, 33.1257, 51.1164, 11.0947, 0.0, 0.0, 92.3667, 0.0, 45.7831, 24.513, 50.4886, 0.0, 29.1979], [0.0, 13.2593, 78.8915, 32.0746, 24.7436, 6.4545, 66.5672, 21.3654, 124.2727, 0.0526, 19.9346, 18.2, 26.2553, 41.5641, 0.0, 5.9, 83.7766, 92.8833, 11.332, 34.6559, 4.098, 20.3158, 0.0, 56.1944, 60.3037, 43.0, 35.1617, 39.1712, 79.0178, 25.7794, 0.0, 45.2048, 0.0, 4.8889, 39.4663, 31.0455, 0.0, 28.0417], [0.0, 23.2037, 16.6589, 6.5224, 0.0, 1.6364, 81.4925, 0.0, 0.0, 0.0, 0.0, 0.0, 108.9574, 169.9359, 0.0, 16.3, 6.0609, 46.8833, 10.4344, 89.6667, 12.5882, 12.8421, 24.9643, 159.9167, 67.4346, 55.7368, 33.485, 17.8973, 54.7278, 42.0, 0.4, 43.2619, 0.0, 65.2646, 74.9948, 20.1705, 0.0, 43.6979], [136.3279, 109.1183, 10.6275, 10.5789, 0.0, 140.1944, 176.3271, 53.5395, 24.2455, 33.2808, 124.1183, 3.9412, 0.0, 57.2857, 1.7632, 216.7354, 56.2435, 1.9318, 0.0, 22.9062], [0.0, 0.0, 1.0775, 9.1045, 0.0, 0.0, 49.6269, 500.9038, 9.4364, 0.0, 1.268, 7.2267, 124.766, 121.5256, 2.2778, 15.925, 16.2944, 68.2917, 91.0984, 117.7527, 3.5965, 7.3929, 194.3056, 103.0654, 8.1316, 4.1856, 59.9521, 48.2604, 28.2647, 0.0889, 24.6857, 0.0, 91.8254, 35.6114, 62.8864], [1.4122, 5.5556, 96.7984, 23.4378, 0.0, 5.3182, 7.403, 0.0, 45.7273, 0.0, 5.0915, 27.9067, 166.6454, 179.4359, 12.6111, 89.475, 64.9086, 110.9167, 66.877, 187.3548, 1.3333, 0.614, 15.3214, 409.3611, 83.215, 110.1974, 48.6946, 39.2466, 78.1834, 7.8676, 1.6889, 85.9429, 6.2105, 93.6984, 37.8808, 34.6136, 0.134, 14.2917], [38.124, 21.0846, 114.4615, 0.0, 51.0597, 319.6923, 75.5636, 0.0, 7.281, 14.0933, 143.227, 180.9375, 83.5584, 185.8667, 169.6516, 98.9247, 6.5098, 7.9474, 57.0714, 351.1667, 94.715, 105.5789, 120.8443, 87.3219, 155.4911, 29.3824, 0.0, 48.6571, 0.0, 128.6772, 59.4041], [0.0, 113.3704, 44.9302, 16.1343, 0.0, 0.0, 21.1642, 957.2885, 1.8364, 0.0, 14.8366, 0.08, 53.9078, 199.3718, 4.5278, 135.725, 82.9442, 152.3917, 46.3074, 49.6667, 2.4706, 0.7193, 18.1071, 474.6667, 160.3785, 202.7632, 27.006, 56.9795, 145.1538, 26.0882, 0.0, 61.0762, 2.4211, 131.1376, 100.2435, 43.1364, 3.6289, 16.9896], [0.0, 244.0078, 108.5124, 20.4615, 0.0, 186.6119, 431.1538, 0.0, 0.0, 115.7843, 166.4, 420.6312, 439.9231, 93.9167, 146.1875, 88.8173, 110.825, 22.0287, 35.2903, 0.2941, 50.9298, 82.5, 129.3333, 321.8925, 92.2368, 160.982, 257.089, 375.5562, 120.8676, 4.7476]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

