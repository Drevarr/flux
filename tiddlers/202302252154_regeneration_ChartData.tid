created: 20230225215428000
creator: Drevarr
modified: 20230705163520294
modifier: drevarr
tags: ChartData
title: 202302252154_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Cat Wigglebooty", "Tegan Parker", "Bella Sassy", "Tribal S", "Mac Aaroni", "Zadie Miststep", "Sizklea", "Vopiscus Zergherdus", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper", "Tempest", "Firebrand", "Druid", "Tempest", "Tempest", "Firebrand", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0825, 7.0896, 20.0699, 131.3738, 93.898, 53.5973, 79.0608, 42.4962, 0.0, 12.846], [109.4558, 21.9968, 2.5175, 248.2288, 105.26, 27.4704, 0.0, 3.4686, 0.3248, 0.0, 82.3039], [62.3095, 0.0, 42.331, 158.0452, 110.884, 38.1568, 100.4328, 89.2483, 0.0, 0.0, 32.6799], [61.074, 10.8192, 88.4614, 127.92, 41.23, 70.9394, 92.8512, 12.8957, 48.0196, 63.4668, 68.4334], [183.587, 24.4048, 60.3263, 340.2672, 192.09, 30.9843, 27.7056, 16.3643, 0.0, 0.0, 55.3772], [134.3347, 0.0, 112.4241, 243.3038, 115.938, 120.7541, 71.5728, 78.6722, 0.0, 50.3499, 42.6887], [118.0764, 18.5584, 177.7154, 199.2994, 113.544, 90.4933, 44.4912, 24.7061, 0.0, 98.9941, 112.2254], [106.9848, 0.0448, 101.2819, 344.9363, 176.054, 72.7997, 220.6776, 11.0869], [461.9191, 238.716, 153.7848, 18.564, 117.8486, 2.5883, 12.9404, 153.8897], [379.9786, 125.552, 388.8341, 1169.9563, 441.294, 416.8519, 307.0704, 239.3787, 41.1684, 331.3919, 379.9167]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

