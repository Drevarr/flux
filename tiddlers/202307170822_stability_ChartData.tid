created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Elonith Primal", "Fluffernaut", "Legoh Brave", "Levente Tangnu", "Mmathuss", "Gamora Titus", "The C\u00fcre", "Violet Stab", "Thought Bound", "Gestern Yesteryear", "Mierin Farshaw"];
const professions = ["Tempest", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.3704, 0.0, 2.6813, 1.0248, 0.5162, 0.0, 0.2429, 0.5168, 0.4998, 0.499, 0.0, 0.4574, 0.9286, 0.0, 2.793, 1.0205, 0.2561, 0.0], [0.0, 0.572, 2.8224, 6.321, 8.6751], [6.2431, 5.2118, 1.435, 6.2137], [1.0124, 0.518, 1.6346, 0.0, 0.6403, 1.7861, 0.0088, 1.5994, 2.53, 0.7171, 1.8992, 0.8316, 1.1554, 0.3604, 0.6237, 0.0, 2.109, 1.5132, 0.7042, 0.7146], [0.4039, 7.4437, 3.3086, 0.9887, 0.0, 0.0, 1.0886, 0.0, 0.3465, 1.5662, 0.0, 6.27], [2.3225, 10.2851, 8.1398, 0.8313], [2.3188, 1.7153, 4.4933, 3.5401, 2.2848, 3.4474, 3.3748, 8.2328, 3.5482, 17.385, 12.035, 4.8228, 2.6118, 1.4744], [1.078, 1.3816, 3.3696, 28.4866, 39.69], [3.1046, 0.337, 25.023, 16.5745, 5.9112, 3.8069, 2.6448, 0.0, 2.6664, 12.9024, 4.3404, 29.6541], [2.6552, 17.4087, 10.043, 0.21, 4.891, 4.9183, 3.314, 2.7275, 3.6288, 3.3862, 1.8988, 4.3382, 1.4539, 18.354, 15.2021, 5.6764, 2.9445, 4.5904, 0.0, 1.232, 12.4704, 18.2045, 19.845], [3.3368, 2.9585, 1.848, 0.0, 0.263, 6.3525, 9.9406, 8.2553, 0.145, 4.6511, 1.4375, 12.1261, 8.6376, 1.155, 3.4075, 6.4566, 3.0943, 2.7632, 2.6006, 0.2974, 6.1677, 1.8434, 0.0, 16.872, 17.5246, 4.5454, 2.6734, 3.4428, 0.0, 5.7552, 10.1664, 17.0246, 16.3296], [11.695, 1.5436, 2.0698, 2.471, 10.6453, 17.0702, 1.3125, 6.8845, 8.1567, 3.6176, 4.7195, 7.0913, 2.1164, 4.7678, 7.5398, 1.3416, 13.566, 17.3487, 4.3107, 2.8829, 5.9964, 0.0, 3.9512, 7.4304, 23.8512, 34.02]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

