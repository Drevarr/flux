created: 20230626012458000
creator: Drevarr
modified: 20230705163538292
modifier: drevarr
tags: ChartData
title: 202306260124_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Ganbaatar Bloodwine", "Elon The Mender", "Bender Ale Devourer", "Johosh The Mighty", "Belvyn Brightblade", "Orunnii", "Raelyn Sunray", "Crusader Siolith", "Sygaldry Verdandi", "Drevarr Moonwillow", "Tegan Parker", "Blanco Padre Guard", "Smol Daddy Tika", "Koralia Danai", "Tribal S", "Solus Sanctus", "Artakama Nahid", "Venomina The Siren", "Miphest\u00f6", "Bella Sassy", "Arcanophage Farra", "Zayde Sunsabre"];
const professions = ["Berserker", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Herald", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Druid", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.9355, 2.255, 3.1752, 16.5267, 2.9865, 15.3355, 3.7498], [10.0588, 0.0, 2.0286, 15.0685, 0.0, 32.8619, 3.145, 0.0], [15.5222, 0.0, 0.0, 20.7799, 1.1427, 30.1556, 0.0, 1.5288, 3.9917, 8.426, 0.1008, 1.0152, 2.1266, 0.0, 0.0, 0.0], [23.4534, 21.5846, 19.9744, 26.1139], [16.5945, 0.5702, 3.7926, 27.8281, 2.0257, 40.3363], [28.5425, 3.1882, 12.0393, 47.3928], [20.4751, 1.7107, 7.7175, 23.9394, 3.454, 14.1757, 3.528, 1.0416, 5.6707, 6.468, 2.016, 1.7371, 1.4886, 1.6896, 0.3793, 0.5789], [17.5646, 3.1363, 0.0, 32.5674, 1.0388, 29.6401, 3.9312, 0.0, 4.1184, 5.632, 0.0, 0.7219, 0.8203, 0.0, 0.0421, 5.8531], [13.0203, 2.9808, 4.851, 32.2028, 0.9609, 33.1196, 1.4515, 1.2768, 5.7974, 0.4838, 1.3085, 1.6709, 0.2323, 0.8428, 6.3355], [3.0125, 4.8989, 5.733, 30.2585, 5.0642, 29.3824, 4.1731, 3.612, 7.7933, 1.166, 3.3062, 5.0083, 3.6152, 1.9008, 5.6468, 1.6723], [24.0493, 0.4406, 1.1025, 23.9394, 1.5322, 53.6099, 0.7862, 0.0504, 4.2768, 0.0, 0.0, 1.7371, 4.7393, 0.8026, 0.0, 0.193], [24.0493, 0.0, 0.0, 44.5978, 2.8827, 24.3564, 0.5846, 0.0, 3.2314, 6.248, 1.3709, 2.8877, 2.6431, 0.0845, 1.8963, 6.9787], [9.6307, 7.15, 4.919, 15.5438, 16.9824, 14.1926, 33.2063, 21.8688], [22.16, 1.2442, 2.6019, 32.9319, 3.2203, 43.9447, 0.5242, 7.8624, 2.9779, 0.7661, 1.1731, 3.8279, 1.0771, 2.7391, 6.6571], [5.8653, 80.6893, 3.3501, 48.0685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [24.5599, 1.7626, 4.8951, 44.3548, 5.194, 28.6091, 3.5683, 1.68, 4.8154, 6.622, 1.4515, 4.7376, 7.2912, 3.8861, 4.6775, 8.7797], [0.0, 4.6397, 0.0, 62.3398, 1.1686, 83.25, 1.7136, 0.0, 6.4944, 0.6451, 0.0, 0.881, 0.528, 0.0, 0.0], [31.6061, 0.0, 0.0, 60.3954, 0.0, 8.6343, 0.3024, 0.0168, 6.3677, 30.69, 19.9584, 7.129, 33.6914, 0.0, 0.0, 7.429], [23.6918, 1.6589, 4.2336, 16.6482, 1.9737, 93.9462, 7.8221, 0.0, 5.6074, 31.966, 8.0438, 0.0, 2.2481, 7.8778, 3.624, 0.0], [34.6697, 6.4022, 5.9976, 52.2536, 2.3113, 50.2593, 8.2253, 12.3144, 12.3552, 2.7418, 4.9181, 6.0456, 3.337, 3.3291, 5.0491], [56.166, 15.5002, 31.7961, 177.4192, 22.0745, 106.9621, 16.5917, 14.4312], [27.9809, 16.6925, 15.6996, 121.8846, 19.9709, 113.5345, 4.3949, 10.7184, 19.4832, 14.256, 7.177, 12.611, 5.195, 12.313, 32.4057, 12.4781]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

