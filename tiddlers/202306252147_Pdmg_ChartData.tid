created: 20230625214748000
creator: Drevarr
modified: 20230705163536386
modifier: drevarr
tags: ChartData
title: 202306252147_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Palm Sauce", "K\u00f4sair", "Jacob Pine", "Irish Necroman", "Rozaalyna", "Smol Gluvs", "Tootsie Pop Khorne", "Mort\u00e4rion", "Cedryn X", "Riann Swordbreak", "Ateriuz", "Sp\u00edcy Cheese", "Shaca Booey", "Lord Erin The Wise", "Legacy Of Mathus", "No Reserv\u00e9", "Duke Silvver", "Be\u00eb", "Kary\u00edna", "Xyntharos", "Caelon Cai", "Xanvias Tsolice"];
const professions = ["Vindicator", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Berserker", "Berserker", "Berserker", "Weaver", "Berserker", "Vindicator", "Vindicator", "Reaper", "Vindicator", "Vindicator", "Reaper", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[85.6209, 804.7723, 800.8253, 0.0, 318.6565, 115.6982, 187.4503], [246.8764, 405.8317, 457.3072, 0.0, 122.8267, 62.2692, 113.4849, 112.0948, 97.3364, 0.0, 0.0, 135.8041, 104.1471, 262.2373], [541.5302, 1856.0297, 228.4699, 0.0, 373.0213, 0.0, 0.0, 197.5349, 76.3963], [185.8654, 563.9208, 532.9036, 0.0, 278.924, 174.3905, 227.0346, 149.7979, 68.5392, 264.9104, 160.9843, 295.0909, 150.4296, 248.3235, 311.5085], [436.2527, 604.1584, 481.5241, 59.3333, 247.5562, 12.4053, 225.1596, 121.5599, 111.3733, 182.2836, 116.1647, 187.7455, 208.8316, 227.3235, 139.7458], [277.7995, 609.5149, 625.4578, 6.8222, 475.4498, 119.4408, 133.8931, 205.2844, 118.2212, 71.5137, 558.8545, 156.3179, 4.4118, 233.3559], [213.7527, 980.901, 858.3253, 41.1333, 279.0851, 110.5444, 285.0723, 104.4204, 136.1336, 212.7463, 15.6549, 5.3636, 140.7504, 164.9118, 501.0], [833.0549, 67.1089, 1330.3072, 0.0, 393.4863, 202.7959, 388.253, 126.8336], [577.1758, 849.505, 863.1747, 0.0, 333.8602, 225.9822, 394.9111, 248.5886, 218.9447, 0.0, 41.2824, 166.1016], [742.7775, 587.1188, 579.2711, 0.0, 239.9696, 243.2722, 561.378, 409.424, 275.7419], [533.9176, 1694.802, 180.494, 169.9778, 411.6261, 193.2219, 400.1205, 289.4991, 163.1521, 135.5224, 135.0784, 90.0727, 293.627, 198.8824, 260.1186], [498.7665, 993.6139, 708.8193, 238.8222, 226.0912, 212.713, 496.9413, 474.0823, 152.9862, 227.2239, 60.3961, 239.8545, 217.4035], [1024.772, 1429.0, 791.6024, 101.1778, 544.7751, 223.8787, 109.1566, 454.9499, 104.0046, 0.0, 29.0157, 229.4182, 297.3541, 175.2647, 230.6441], [772.0879, 844.1485, 812.7349, 77.2222, 607.3283, 447.074, 516.5738, 374.1771, 255.8479, 0.0, 56.7686, 0.0, 214.1408], [720.9478, 1496.4356, 1093.0181, 0.0, 642.5805, 185.1657, 191.9563, 391.356, 101.3456, 490.9552, 68.8431, 65.1636, 481.9869, 166.2353, 313.8814], [710.5357, 830.1188, 897.1446, 0.0, 432.2918, 101.8284, 511.2816, 400.2218, 195.576, 0.0, 121.6471, 560.8182, 422.328, 613.4706, 742.8136], [547.5797, 1388.8911, 1063.9398, 0.0, 455.7477, 261.2249, 481.9096, 299.9249, 306.7926, 966.9403, 146.702, 281.4727, 360.225, 78.6471, 570.0169], [625.4066, 851.9109, 1200.9518, 146.5556, 433.6292, 345.4379, 573.1114, 257.4633, 263.6313, 199.0149, 170.5765, 544.1091, 479.0261, 387.5, 191.1017], [911.6016, 1067.1683, 978.2892, 0.0, 415.9939, 273.2249, 752.4488, 400.8515, 285.3779, 136.0, 97.8549, 599.2545, 451.8258, 337.5588, 262.5932], [613.2225, 1022.6436, 1344.5783, 74.3778, 528.4529, 348.2899, 695.6099, 353.9088, 237.5899, 880.0448, 107.7843, 1397.9455, 496.8781, 404.6765, 355.5254], [1066.5852, 1158.505, 1299.8313, 50.8222, 549.0638, 352.574, 661.872, 424.3238, 356.3871, 188.9701, 97.8078, 178.6, 463.3149, 356.9706, 656.4237], [1720.3434, 1364.6733, 1936.8614, 0.0, 900.9149, 1181.8905, 2232.8479, 938.6941, 1037.2258, 497.9104, 200.5647, 1365.4182, 1133.4775, 230.0588, 471.4237]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

