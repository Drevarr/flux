created: 20230212214943000
creator: Drevarr
modified: 20230705163519059
modifier: drevarr
tags: ChartData
title: 202302122149_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaylen Harker", "High Sorcer Baradun", "Kosa\u00edr", "Gangsta Mech", "Lord Erin The Wise", "Sygaldry Verdandi", "Rina Of Theros", "Xanvias Tseli", "Ez Mode Mathus", "Smol Gluvs", "Morv\u00e4rth", "Be\u00eb", "Daring Deathblade"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Engineer", "Weaver", "Firebrand", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.4675, 20.3718, 87.4301, 0.0, 57.38, 0.0, 0.0, 24.6829], [81.9481, 11.7436, 86.2545, 20.69, 0.0, 0.0, 64.8618], [46.6186, 64.8961, 0.3333, 42.19, 1.1, 13.3019, 54.813], [0.0, 0.0, 193.5161, 0.0, 80.55], [117.6623, 44.4968, 77.5233, 327.7879, 48.21, 30.7, 5.7736, 94.2683], [110.9481, 28.6538, 153.5771, 6.7273, 139.87, 0.0, 21.1887, 53.5041], [171.2208, 78.8718, 190.362, 0.0, 134.95, 10.6, 50.1887, 415.9187], [60.7922, 67.9327, 310.8996, 12.4848, 187.69, 0.0, 0.9434, 218.4472], [86.6571, 299.1971, 38.6061, 146.08, 49.9667, 18.2453, 270.9512], [293.9481, 119.8429, 213.3297, 0.0, 205.29, 1.5, 14.4906, 228.1789], [287.1558, 128.4455, 231.4373, 153.1818, 99.32, 34.2, 16.3208, 367.439], [316.6234, 234.9263, 463.1362, 0.0, 690.91, 22.8333], [417.6494, 238.8686, 235.9749, 290.0303, 1029.6, 131.1, 234.6226, 712.2276]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

