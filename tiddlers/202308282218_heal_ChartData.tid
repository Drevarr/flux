created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Solus Luxes", "Tootsie Pop Rocks", "Tegan Parker", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae", "Spirita Demon"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Tempest", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[375.2292, 140.0895, 214.1399, 42.3387, 133.0368, 0.0, 106.5656, 121.5905, 245.0326, 12.2157, 39.0612, 218.2911, 257.3222, 345.1143, 168.8991, 164.7447, 178.0, 220.3699, 46.5397, 429.2737], [0.1458, 147.8, 289.6144, 14.0484, 150.1985, 26.6275, 197.373, 172.019, 170.9798, 39.1373, 56.5612, 173.2113, 284.6111, 466.3, 49.2226, 31.0638, 141.0157, 371.8356, 1.0317, 374.7569, 327.8426, 314.8462, 83.0357, 23.5593], [0.0, 149.6895, 458.8, 329.1103, 9.7647, 121.8484, 9.0286, 156.1907, 6.9902, 133.551, 467.7277, 279.2556, 2750.2714, 248.9466, 216.8527, 67.9452, 2.5556, 1123.5899, 398.4414, 34.8154, 389.5417, 6.7373], [295.3878, 528.5869, 563.9111, 2425.0571, 537.1039, 102.4255, 348.0408, 797.4521, 25.8095, 1396.9822, 888.7747, 255.5231, 22.6042, 165.2857, 72.5], [674.5101, 153.2157, 467.449, 837.2347, 825.8444, 4476.9286, 597.1543, 616.2132, 1283.4521, 0.0, 2295.3231], [81.4792, 893.4421, 1812.6771, 188.0968, 851.0368, 68.8824, 487.6025, 962.6381, 1133.8589, 94.7941, 1032.7143, 910.4131, 874.5444, 4548.0714, 978.7864, 51.3617, 737.9436, 1259.8493, 123.7302, 3071.3231, 1549.7099, 333.4923, 25.9792, 708.631, 382.0254], [154.4583, 1037.4316, 1877.7752, 505.3387, 912.0809, 105.0392, 652.2418, 563.3429, 1739.6372, 109.2353, 448.1224, 1093.6244, 789.6222, 5032.4857, 664.3175, 182.2128, 593.1442, 2116.7671, 14.5873, 2532.6166, 1857.7222, 957.3692, 0.0, 892.5, 277.3305], [144.5208, 1102.6579, 1744.115, 327.6613, 1070.7353, 111.5098, 741.6148, 739.2857, 1511.6217, 26.6078, 755.1939, 1004.939, 1153.8222, 4828.2429, 281.9941, 232.8085, 587.5204, 1778.726, 24.0794, 3220.3449, 1484.9938]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

