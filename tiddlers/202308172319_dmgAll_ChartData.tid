created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tlesia", "Bella Sassy", "Thought Bound", "Vera Khin", "Jimbo One Eye", "Jamaass", "Necrotic Windrunner", "Lord Erin The Wise", "Philip Poundhouse", "Daring Deathblade", "Maass X Menos", "Jimbo The Pleb", "Drevarr Moonwillow", "World Devourerer", "Xanvias", "Xuerreux", "Darks Na", "Caelon Cai", "Apyen"];
const professions = ["Daredevil", "Firebrand", "Firebrand", "Dragonhunter", "Scrapper", "Reaper", "Reaper", "Weaver", "Herald", "Scourge", "Berserker", "Berserker", "Scrapper", "Guardian", "Reaper", "Berserker", "Dragonhunter", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1025.375, 2391.9184, 875.2917], [77.4639, 148.8693, 259.4038, 746.0, 198.6136, 118.9811, 147.8293, 127.1622, 65.3103, 210.8302, 192.0889, 0.0, 248.5504, 297.2459, 477.8667, 33.9412, 48.5369, 194.3586], [184.0964, 305.0955, 249.1923, 245.1818, 105.5341, 97.2264, 229.3171, 68.5405, 0.0, 138.2877, 106.2667, 72.5814, 320.6434, 265.459, 232.4667, 184.7824, 182.4729, 148.1069], [1507.125, 1566.602, 3992.8333], [1196.4518, 1191.3417, 1483.8654, 731.6364], [134.4412, 1518.3251, 1519.7552], [1087.6875, 139.0385, 122.3125, 377.307, 267.9692, 752.4, 101.8163, 97.875, 675.2174, 555.1099, 441.2128, 46.6667, 689.3636, 605.8636, 1022.4694, 1037.875, 759.5181, 488.7588, 1210.5769, 375.7879], [926.9796, 2555.875, 2044.9458, 1201.0452, 2827.1923, 1122.0303], [730.1818, 953.5102, 950.6667, 912.0723, 269.397, 966.6538, 712.8939, 0.0, 174.622, 458.6486, 779.0, 62.0283, 1065.8778, 47.3256, 370.938, 771.5246, 501.0, 311.1765, 673.7537, 624.9414], [1300.7045, 1066.1509, 324.6585, 1120.2432, 2144.5345, 1022.217, 1036.5111, 1457.907, 821.0155, 2403.1967, 1186.5167, 390.4941, 1148.5813, 475.9621], [2679.0568, 4214.5472, 1783.9512, 3167.027, 3626.3966, 1416.8915, 2996.6889, 1327.9302, 618.7442, 1680.6721], [921.8, 3830.4583, 1430.141, 1199.0521, 907.4035, 612.5077, 177.92, 2340.6122, 974.125, 734.0124, 2268.9011, 831.8369, 1305.1212, 413.9545, 815.1364, 769.8061, 1733.6667, 1824.7045, 1824.2075, 1544.6585, 4063.0541, 1764.3793, 607.9434, 2071.2111], [5227.675, 7666.0833, 1867.5513, 1071.3333, 1973.7982, 1806.6923, 2368.96, 1606.8163, 607.3438, 1974.4969, 4324.6923, 1087.9504, 1259.8889, 3014.2727, 768.0984, 2401.0114, 2033.3061, 2068.2083, 110.741, 178.2111, 113.9038, 172.8333, 163.9886, 12.1698, 190.4146, 401.1081, 65.4655, 229.6698, 113.9667, 32.0233, 71.8372, 206.9344, 288.1667, 31.3176, 121.2759, 134.4483], [2551.8, 2860.4792, 1436.0513, 2928.0625, 2632.4737, 731.7385, 1013.64, 6260.7755, 5327.0312, 3141.4534, 6680.0879, 2350.5035, 2624.4949, 520.1818], [927.6084, 1275.2714, 2257.2308, 1894.0909, 2098.8182, 2051.6792, 2089.6463, 3804.7568, 1069.5862, 1770.25, 2132.2667, 3500.2093, 1541.4186, 2101.7541, 2446.6833, 386.5118, 1645.8621, 1241.3793], [646.7386, 1798.5204, 2694.0417, 1476.6747, 1369.6583, 2983.6346, 2550.1667, 2125.6364, 1693.8679, 3291.4268, 1981.3514, 128.2414, 239.2217, 3547.1778, 0.0, 2138.1318, 5508.7541, 1620.4667, 958.2, 1756.2759, 1431.4241], [0.0, 2259.8542, 2836.9872, 913.4271, 972.0789, 264.5077, 334.84, 1157.6122, 2704.1875, 1338.2484, 1648.3297, 680.9078, 913.8081, 457.0455, 854.4098, 2811.3523, 727.7755, 2000.9583, 1119.5226, 1679.5769, 253.1212, 2194.0341, 2138.1698, 1884.0122, 879.2703, 1247.3255, 1866.3556, 474.7442, 1100.5581, 437.9344, 1365.9333, 387.1706, 1437.4433, 1030.3759], [2159.4176, 992.844, 1121.1313, 2621.9091, 1994.377, 1762.1591, 3325.6429, 3908.8333, 2191.5181, 1158.4874, 2321.1154, 2328.2273, 1452.4318, 1302.6038, 1397.1585, 1501.8919, 1406.2931, 904.6321, 927.4778, 2214.814, 1034.186, 1998.5082, 1181.3667, 225.9588, 1505.0493, 1173.5034], [3228.1491, 406.989, 1205.0355, 667.4343, 2873.5, 0.0, 2864.5, 1980.7143, 3618.3333, 1539.1747, 1539.3216, 3022.3462, 2405.4394, 1962.7159, 3193.3396, 652.2683, 4164.1351, 3412.7586, 2253.3821, 2698.2222, 681.9767, 1849.2868, 4279.2459, 3625.2833, 514.4412, 1395.0591, 1756.9931]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

