created: 20230506002551000
creator: Drevarr
modified: 20230705163528324
modifier: drevarr
tags: ChartData
title: 202305060025_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Nero Arien", "Miphest\u00f6", "Sephy Xs", "Lord Erin The Wise", "Venngi", "Permanent Dawn", "Aronorf Xideliesi", "Johosh The Great", "Smol Daddy Tika", "Newtype Khan", "Stoic Rapidfire", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Tempest", "Harbinger", "Weaver", "Scrapper", "Weaver", "Firebrand", "Willbender", "Spellbreaker", "Spellbreaker", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.9962, 14.9554, 30.4643, 66.2544, 24.7078, 346.3236, 64.8281, 285.102, 739.8616], [176.7823, 377.2883, 27.2223, 0.0, 0.0, 843.0406, 134.3416, 38.7022, 0.0, 0.0, 8.9474, 166.2444], [374.7181, 1175.76, 313.1235, 124.5753, 34.44, 28.5425], [230.4658, 485.4582, 111.8394, 67.3659, 4.0593, 14.2812, 706.0604, 282.4686, 284.4557, 53.4996, 32.9002, 31.6962, 493.5168, 116.4053], [8.3076, 933.2471, 116.3948, 207.0514, 61.1503, 76.2854, 48.7431, 569.268, 72.3737, 718.254, 534.1536], [245.3088, 511.8475, 101.9831, 39.7602, 16.0073, 14.5779, 693.439, 189.6129, 222.9163, 31.7671, 98.9894, 65.2052, 557.2476, 79.9194, 536.364, 1067.8162], [100.5928, 132.4238, 41.6583, 54.8697, 1112.9176, 351.7853, 216.8533, 84.7123, 137.8752, 30.4388, 642.5244, 8.8799, 560.334, 1403.1351], [266.9955, 610.6114, 238.8321, 32.3676, 46.771, 60.4081, 925.4515, 311.99, 228.373, 76.036, 93.169, 84.796, 606.9168, 113.7367, 672.006, 1280.8885], [271.3506, 814.9323, 204.5696, 40.0932, 20.6708, 45.4742, 786.244, 351.5251, 347.612, 82.6888, 105.8832, 71.3164, 752.976, 141.4347, 857.562, 1546.4925], [409.1146, 982.6741, 253.7843, 77.8887, 0.0, 77.1816, 1093.6141, 521.5005, 372.5713, 108.995, 184.9757, 93.1879, 950.5188, 174.1018, 1055.808, 625.4703], [468.6642, 1562.977, 447.7599, 98.0019, 10.0844, 96.5066, 1885.4264, 610.1946, 273.8455, 65.9182, 51.8477, 70.5269, 1044.414, 248.6841, 1404.924, 1438.4835], [618.6048, 1282.101, 281.4759, 101.4318, 12.5352, 49.5093, 1934.4274, 489.8983, 742.9196, 228.8286, 125.5325, 127.2817, 1312.4916, 174.4239, 1390.26, 2855.8562], [533.6597, 634.3366, 1371.4587, 407.3288, 158.8077, 74.8199, 97.1, 2316.4128, 800.3277, 761.1086, 220.7344, 131.8483, 106.8722, 1573.0848, 273.9435, 1747.554, 3154.8447]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

