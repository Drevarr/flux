created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Luke The Ghastly", "Unbreakable Nemesis", "Mike The Archmagus", "Readnull", "Cerys Fireblade", "Vee Usagi", "Johosh The Mighty", "Mistwalker Cael", "Rozaalyna", "Name Is What", "Kisumaiasu", "Morton Saltbringer", "Tegan Parker", "Xanvias Einzbern", "Greyghoul", "Glorious Gluvs", "Primal Clone", "Rina Of Theros", "Venomina The Sly", "Arriasa", "Air One Com", "Tribal S", "Keypek The Drunk", "Jimbo The Pleb", "Blancoo Padre", "Klengah", "Zaedy Zae", "Gavann", "\u00c1rk\u00e1ntor", "Koralia Danai", "Wall Knot", "Mmathuss", "Aronorf Xideliesi", "Solus Sanctus", "Bella Sassy", "Sub Train", "Drevarr Moonwillow", "Newtype Khan", "Grasszanine", "Arcanophage Farra"];
const professions = ["Scourge", "Firebrand", "Weaver", "Willbender", "Berserker", "Scourge", "Berserker", "Vindicator", "Scourge", "Scourge", "Scourge", "Chronomancer", "Tempest", "Berserker", "Herald", "Berserker", "Chronomancer", "Scourge", "Druid", "Druid", "Firebrand", "Druid", "Scrapper", "Berserker", "Scrapper", "Druid", "Druid", "Firebrand", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.0858, 4.3401, 1.7255, 0.5023, 19.176, 1.613, 6.5274, 2.8637, 6.8216, 0.0, 11.7158, 22.0256, 0.8627, 4.411, 0.1035, 2.9808], [32.8063, 4.6432, 47.1882, 29.0224], [3.6432, 5.974, 7.4028, 5.5255, 25.192, 3.557, 9.791, 8.2142, 13.5877, 2.6093, 17.2109, 18.9814, 5.5593, 1.782, 2.277, 2.0493], [4.8805, 7.3433, 4.4462, 2.8253, 15.1373, 17.1907, 5.2717, 3.223, 1.5318, 2.7635, 21.1591, 6.5817, 17.8701, 27.3152], [3.5604, 6.2293, 5.1207, 6.9906, 35.908, 9.761, 11.8308, 14.3184, 10.4265, 8.8128, 34.0233], [1.6146, 1.9403, 3.6736, 0.5023, 11.844, 1.0754, 15.9104, 1.9594, 5.0469, 0.0518, 11.5085, 10.7442, 0.8627, 2.233, 0.0, 0.4036, 29.118, 1.9835, 18.4285, 29.0224], [7.9902, 14.8074, 3.4509, 5.0651, 28.012, 4.9632, 13.6958, 21.7037, 9.4837, 2.5574, 24.9869, 29.5466], [4.6782, 5.7187, 4.7868, 5.693, 11.28, 3.5156, 5.7697, 12.7358, 7.2098, 3.4042, 12.5453, 17.5489, 3.3228, 0.363, 1.4076, 2.0804, 17.4708, 4.2826, 17.5909, 43.1068], [6.1686, 5.7187, 8.0707, 2.3023, 29.14, 2.9779, 7.2267, 9.4954, 10.5929, 1.4429, 13.3747, 30.9791, 4.6008, 2.332, 2.3805, 2.3288, 24.4591, 6.2661, 38.2531], [10.5156, 8.3228, 10.965, 4.2279, 40.42, 2.6884, 8.2758, 11.304, 11.4802, 1.944, 4.1472, 30.435, 77.2508], [16.8326, 13.1634, 4.169, 2.3598, 10.3086, 44.2594, 9.9176, 72.8764, 60.1788], [4.2228, 5.923, 6.0113, 6.3209, 29.14, 3.6926, 6.9325, 1.9267, 13.3747, 27.5768, 0.0, 2.9394, 4.347, 23.2944, 7.4382, 47.1882, 60.1788], [0.0, 9.9056, 0.0, 10.465, 45.12, 29.7378, 4.0213, 13.8662, 0.3882, 4.0435, 39.3954, 11.9493, 0.0, 0.0, 12.2027, 34.7475, 0.0, 19.5454, 24.3276], [5.7132, 15.1138, 6.7349, 5.9441, 16.356, 3.6397, 6.9353, 12.4344, 10.4819, 3.2054, 11.8195, 31.1582, 3.4825, 1.364, 0.8694, 3.2913, 21.3532, 9.6471, 34.3441, 61.0324], [10.2465, 82.501, 17.1755, 50.818, 105.8464], [3.105, 3.8806, 5.9556, 7.5767, 21.996, 7.693, 7.693, 8.8925, 6.8216, 12.4416, 25.607, 5.4634, 2.013, 2.5047, 4.4712, 31.2533, 6.7169, 40.4869, 64.4468], [5.8788, 5.5145, 7.5698, 5.3999, 24.252, 4.1774, 9.3831, 12.2083, 8.1526, 1.7798, 13.3747, 25.9652, 6.0066, 2.508, 3.105, 1.5214, 32.6122, 5.5899, 38.8116, 57.1912], [9.5634, 5.2081, 7.5698, 6.1116, 22.56, 5.8731, 8.8003, 10.5504, 11.3138, 1.1405, 12.96, 25.607, 7.1568, 2.42, 1.7181, 4.2538, 25.818, 6.1309, 38.2531, 74.2632], [12.3372, 10.6205, 8.182, 2.6372, 27.448, 0.0, 2.9723, 0.7536, 5.1578, 0.0, 13.0637, 24.3535, 3.9937, 1.617, 0.0, 0.0, 33.3886, 1.6229, 82.9283, 60.1788], [10.35, 5.4124, 11.5216, 11.3441, 37.6, 0.0, 13.6375, 6.0288, 7.0989, 0.0, 15.6557, 28.2931, 3.834, 1.804, 0.0, 18.4414, 4.9588, 54.7271, 72.556], [10.8054, 9.7525, 3.7292, 3.5581, 38.728, 15.9236, 3.4385, 8.591, 8.3745, 0.1123, 19.6992, 32.9489, 8.0834, 0.0, 3.6432, 0.4968, 52.2183, 7.0325, 50.5388, 87.494], [10.7226, 5.7698, 10.7424, 1.5488, 41.172, 2.0266, 10.7235, 12.5098, 7.6535, 0.0, 30.8966, 30.9791, 5.9746, 2.717, 1.656, 0.0, 33.7769, 6.6718, 80.1361, 78.1044], [6.624, 5.6677, 10.4641, 5.0651, 44.744, 7.817, 9.15, 11.1533, 17.0817, 34.8365, 46.021, 10.8311, 2.222, 1.863, 4.0986, 26.2062, 8.1595, 44.396, 98.5908], [16.1874, 10.3652, 19.147, 7.5767, 44.556, 4.0119, 15.1528, 20.7994, 11.3693, 0.5962, 21.2544, 40.4698, 13.6746, 4.026, 1.9665, 2.0493, 53.1889, 3.2007, 62.8245, 55.0572], [12.7926, 7.9654, 12.1895, 4.3534, 57.34, 3.5156, 9.8493, 13.6402, 12.8667, 2.3933, 46.1376, 51.9303, 11.3742, 1.364, 1.9872, 3.6018, 29.5062, 7.6636, 60.5907, 59.752], [7.6176, 8.8844, 13.4697, 4.772, 35.72, 3.3502, 17.9502, 21.6283, 11.813, 0.0, 34.3181, 41.9024, 5.2398, 0.0, 5.5683, 11.5506, 39.9887, 6.6718, 52.7726, 89.628], [12.7926, 1.2254, 14.8056, 6.2371, 42.488, 0.0, 12.4719, 11.1533, 16.0279, 0.0, 49.248, 44.4094, 8.7543, 2.915, 1.8837, 1.4904, 35.1357, 13.8396, 64.779, 76.3972], [12.6684, 11.6927, 7.7367, 17.8324, 62.792, 0.0, 5.5366, 27.6571, 20.132, 42.1978, 28.6512, 8.5307, 0.847, 5.5062, 5.7132, 40.7652, 0.0, 49.4219, 83.6528], [11.6334, 10.7737, 14.1933, 7.6185, 55.272, 5.4182, 7.3433, 10.3997, 11.1475, 2.6784, 19.5955, 43.1559, 8.4029, 6.721, 1.7595, 5.2475, 38.824, 8.5201, 67.292, 114.3824], [10.764, 8.2207, 4.7311, 18.0835, 36.848, 24.6092, 9.791, 7.6114, 17.969, 29.0304, 37.2466, 2.4921, 0.671, 5.796, 10.1534, 53.9654, 9.4217, 65.8959, 112.2484], [8.8182, 16.5945, 5.0651, 23.023, 36.472, 8.4788, 16.6098, 27.9586, 14.5305, 25.7126, 45.4838, 5.3676, 0.0, 1.6353, 5.4958, 44.8417, 9.6922, 73.4349, 105.8464], [15.4008, 13.5309, 8.9056, 32.5252, 42.112, 11.5808, 31.8792, 10.3997, 10.0937, 0.648, 23.1206, 54.0791, 0.0, 2.607, 4.9887, 24.3432, 35.9122, 12.3068, 70.0842, 119.9308], [13.1238, 8.4249, 8.7386, 12.1813, 56.024, 9.6369, 21.9716, 11.0779, 14.586, 3.9139, 36.8064, 51.7512, 3.6742, 0.869, 4.0365, 6.5515, 36.3004, 9.0611, 100.7984, 132.308], [15.8148, 16.2371, 14.6386, 20.8881, 30.08, 22.4171, 13.2296, 27.9586, 12.4785, 0.7776, 31.5187, 37.4256, 8.6585, 1.309, 8.0937, 1.863, 74.9303, 19.9254, 114.4802, 145.5388], [5.076, 23.9061, 27.7413, 12.2083, 24.5688, 0.5098, 37.1174, 76.821, 20.5758, 0.0, 8.5491, 29.808, 84.2481, 16.2288, 118.3893, 197.1816], [15.8148, 4.4422, 14.3603, 17.6231, 86.668, 16.544, 27.4499, 19.2922, 24.0696, 45.4118, 44.2303, 10.0962, 0.0, 6.2307, 7.3899, 77.8421, 12.0814, 121.7399, 145.5388], [13.5378, 14.9095, 14.7499, 7.786, 90.428, 7.1139, 18.8244, 34.8163, 20.6311, 2.3501, 45.7229, 74.4931, 13.5788, 4.642, 8.1144, 4.5954, 73.7656, 15.3723, 127.8828, 166.0252], [62.6745, 22.2052, 9.306, 10.6398, 10.2775, 166.9432, 38.0024, 263.0252, 417.4104], [25.8336, 23.4876, 32.6724, 20.5951, 76.516, 20.4732, 37.2992, 47.1754, 40.264, 3.6202, 70.5024, 96.6978, 9.8726, 10.971, 12.3269, 89.6834, 36.1992, 210.8111, 300.0404], [6.4584, 19.2496, 36.8469, 18.2091, 200.408, 3.5156, 51.8109, 41.5234, 48.7493, 0.0, 94.1414, 160.9839, 23.0998, 15.543, 16.3737, 13.7241, 142.29, 43.0063, 257.1616, 416.5568]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

