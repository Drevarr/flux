created: 20230318001239000
creator: Drevarr
modified: 20230705163522397
modifier: drevarr
tags: ChartData
title: 202303180012_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "R\u00fana Bierdna", "Grasszanine", "Arcanophage Farra", "Aronorf Xideliesi"];
const professions = ["Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.92, 0.0, 13.8701, 11.6334, 0.0, 0.0, 0.0, 12.6702, 0.0, 0.0, 0.0, 0.0, 25.3261, 0.0, 0.0, 0.0, 25.2693, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 37.9877], [13.92, 7.9296, 17.9155, 52.9737, 0.0, 1.9839, 15.9896, 0.0, 0.0, 0.0, 0.0, 106.6054, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.858, 16.0425, 30.2614], [39.3936, 0.0, 6.5016, 93.8985, 13.0416, 13.1022, 0.0, 26.2715, 0.0, 0.0, 13.0152, 0.0, 70.0886, 0.0, 0.0, 0.0, 13.0536, 10.9534, 0.0, 0.0, 1.5622, 0.0, 0.0, 59.879], [13.6013, 13.7052, 13.9464, 13.86, 0.0, 368.7015, 52.7462, 0.0, 35.2094, 0.0, 14.0723, 26.3428, 0.0, 22.5002, 52.9554, 219.5563], [142.2624, 8.5848, 67.0387, 274.0091, 15.6624, 19.0369, 5.1959, 34.6914, 17.343, 10.3896, 10.3224, 374.0023, 3.4906, 0.0, 6.7032, 26.6364, 23.6518, 6.8558, 15.167, 3.3617, 11.6422, 30.526, 170.1937]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

