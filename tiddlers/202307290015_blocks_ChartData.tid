created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Mighty", "Mike The Archmagus", "Kisumaiasu", "Indigo Shadowviper", "Cat Wigglebooty", "Mort\u00e4rion", "Yafreisy", "Vee Usagi", "Unbreakable Nemesis", "Xela Demora", "Name Is What", "Cerys Fireblade", "Daphne Agla\u00e9", "Newtype Khan", "Venomina The Sly", "Lord Erin The Wise", "Asheena Feres", "Glorious Gluvs", "Readnull", "Blancoo Padre", "Rozaalyna", "Air One Com", "Grasszanine", "Tribal S", "Jimbo The Pleb", "Wall Knot", "Sub Train", "Brutal Araden", "Keypek The Drunk", "Kosa\u00edr", "Gavann", "Bella Sassy", "Klengah", "Aronorf Xideliesi", "\u00c1rk\u00e1ntor", "Be\u00eb", "Mmathuss", "Zaedy Zae", "Arcanophage Farra", "Mistwalker Cael", "Arriasa", "Rina Of Theros", "Xanvias Einzbern", "Koralia Danai", "Tegan Parker", "Solus Sanctus", "Primal Clone", "Morton Saltbringer", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Berserker", "Weaver", "Scourge", "Daredevil", "Scrapper", "Scrapper", "Weaver", "Scourge", "Firebrand", "Reaper", "Scourge", "Berserker", "Scourge", "Spellbreaker", "Druid", "Weaver", "Virtuoso", "Berserker", "Willbender", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Druid", "Berserker", "Firebrand", "Firebrand", "Renegade", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Druid", "Firebrand", "Scourge", "Scourge", "Firebrand", "Druid", "Spellbreaker", "Vindicator", "Druid", "Scourge", "Berserker", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6, 1, 3, 1, 29, 1, 2, 1, 6, 0, 14, 28], [5, 3, 4, 0, 37, 0, 4, 4, 8, 1, 18, 13, 3, 0, 0, 0], [12, 4, 1, 2, 1, 8, 5, 39, 31], [1, 0, 0, 0, 10, 2, 35, 64], [0, 1, 4, 4, 12, 19, 0, 0, 0, 18, 2, 24, 38], [7, 1, 9, 0, 23, 1, 2, 5, 10, 16, 40, 1, 0, 0, 0, 13, 2], [13, 2, 0, 0, 1, 5, 34, 75], [2, 0, 3, 1, 25, 0, 2, 0, 6, 0, 6, 10, 2, 1, 0, 1, 17, 4, 24, 30], [19, 4, 53, 58], [0, 0, 0, 0, 9, 1, 28, 102], [3, 2, 3, 1, 17, 0, 1, 1, 8, 0, 3, 33, 69], [5, 1, 9, 3, 43, 0, 5, 1, 11, 26, 41], [1, 0, 3, 1, 31, 0, 3, 2, 9, 12, 26, 4, 0, 0, 2, 23, 3, 26], [17, 1, 0, 0, 1, 19, 5, 39, 65], [3, 3, 4, 0, 17, 0, 1, 0, 5, 0, 7, 26, 2, 0, 0, 0, 11, 1, 29, 51], [5, 0, 3, 0, 29, 1, 2, 1, 5, 0, 14, 36, 4, 0, 0, 0, 15, 4, 40, 13], [1, 0, 4, 1, 23, 0, 5, 0, 6, 0, 15, 4, 4, 0, 0, 18, 5, 21, 69], [4, 0, 4, 1, 29, 0, 2, 3, 4, 12, 23, 1, 0, 0, 0, 16, 1, 29, 51], [1, 0, 1, 1, 19, 26, 5, 3, 1, 1, 13, 3, 31, 83], [3, 0, 3, 0, 20, 0, 3, 1, 10, 0, 17, 25, 4, 1, 0, 0, 19, 4, 50, 52], [7, 0, 4, 1, 45, 2, 8, 3, 5, 1, 22, 50, 4, 0, 0, 0, 23, 1, 48], [6, 3, 7, 1, 28, 1, 2, 6, 4, 0, 15, 27, 4, 0, 0, 1, 13, 4, 31, 75], [7, 4, 5, 1, 17, 1, 5, 6, 5, 0, 16, 30, 1, 0, 0, 15, 4, 33, 81], [5, 1, 3, 0, 30, 0, 5, 2, 9, 0, 13, 27, 3, 3, 0, 0, 14, 2, 40, 77], [6, 0, 7, 1, 29, 3, 7, 7, 8, 0, 23, 42, 2, 1, 0, 0, 22, 2, 35, 41], [3, 1, 5, 2, 25, 1, 3, 5, 7, 19, 31, 2, 2, 1, 2, 18, 5, 34, 78], [7, 2, 7, 2, 27, 1, 1, 4, 7, 13, 38, 5, 0, 0, 1, 19, 8, 34, 69], [2, 1, 3, 0, 17, 0, 1, 2, 2, 0, 9, 18, 5, 0, 0, 1, 22, 5, 66, 105], [6, 0, 4, 0, 29, 1, 8, 5, 9, 18, 42, 4, 2, 0, 0, 20, 8, 38, 80], [31, 47, 5, 2, 0, 0, 33, 4, 49, 103], [8, 1, 8, 1, 36, 2, 6, 2, 6, 18, 38, 5, 0, 0, 1, 19, 8, 51, 79], [3, 4, 4, 6, 5, 0, 17, 42, 4, 2, 1, 1, 27, 5, 65, 103], [5, 2, 3, 0, 22, 2, 4, 3, 5, 0, 27, 38, 4, 1, 0, 1, 19, 3, 65, 90], [5, 2, 3, 2, 43, 3, 3, 4, 9, 0, 15, 35, 1, 0, 0, 1, 20, 6, 43, 104], [4, 2, 7, 2, 49, 1, 2, 2, 11, 0, 14, 30, 4, 1, 0, 0, 20, 4, 42, 107], [6, 2, 8, 1, 12, 1, 1, 10, 5, 27, 51, 4, 0, 0, 1, 28, 6, 54, 87], [7, 1, 5, 3, 43, 3, 8, 7, 8, 0, 24, 44, 6, 1, 1, 1, 24, 7, 52, 82], [10, 1, 6, 1, 54, 2, 3, 3, 7, 0, 21, 46, 4, 0, 0, 0, 20, 7, 40, 102], [7, 2, 7, 1, 41, 0, 9, 6, 9, 0, 19, 45, 6, 2, 2, 2, 21, 5, 46, 102], [5, 2, 5, 1, 43, 1, 11, 3, 10, 0, 25, 40, 2, 2, 0, 1, 31, 5, 53, 95], [7, 0, 6, 1, 50, 1, 3, 9, 8, 0, 19, 42, 4, 1, 0, 20, 4, 49, 117], [4, 4, 6, 2, 45, 2, 5, 5, 14, 0, 26, 39, 4, 0, 1, 2, 26, 7, 50, 100], [5, 2, 6, 1, 46, 0, 9, 8, 9, 0, 25, 47, 3, 1, 0, 1, 33, 4, 52, 91], [10, 4, 4, 1, 47, 1, 7, 8, 8, 27, 38, 6, 1, 2, 1, 22, 9, 55, 102], [5, 4, 6, 1, 57, 2, 2, 5, 5, 20, 50, 3, 0, 0, 2, 21, 3, 58, 119], [7, 3, 6, 1, 50, 1, 6, 6, 5, 1, 21, 60, 12, 1, 0, 3, 30, 5, 59, 106], [8, 1, 7, 1, 52, 1, 3, 4, 8, 0, 25, 70, 5, 2, 0, 1, 31, 7, 51, 115], [14, 4, 5, 2, 65, 0, 11, 0, 22, 49, 0, 0, 0, 30, 2, 76, 126], [13, 6, 10, 1, 57, 5, 6, 7, 10, 0, 29, 50, 5, 3, 0, 2, 29, 6, 69, 120], [9, 3, 6, 2, 61, 2, 8, 11, 11, 0, 27, 68, 8, 3, 0, 0, 31, 9, 73, 115]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

