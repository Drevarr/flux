created: 20230610101822000
creator: Drevarr
modified: 20230705163534710
modifier: drevarr
tags: ChartData
title: 202306101018_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Synomi\u00f1 Spyce", "Hit The Gas", "Yngvar The Burdened", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Vesnan", "Cat Noises", "Elonith Requiem", "Alarics Bane", "Xanvias"];
const professions = ["Scourge", "Spellbreaker", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Virtuoso", "Reaper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0286, 0.1429, 0.2667, 0.5714], [0.199, 0.019, 0.0, 0.5667], [0.3444, 1.0893], [0.0741, 0.2069, 0.1064, 0.2581, 0.0375, 0.0833, 0.0548, 0.0471, 0.0893, 0.0, 0.0263, 0.012, 0.0118, 0.0685, 0.0785, 0.0571, 0.0, 0.0889, 0.0714], [0.0, 0.2667, 0.0, 0.0526, 0.0185, 0.1034, 0.0, 0.1613, 0.0875, 0.0, 0.0548, 0.1176, 0.0536, 0.0423, 0.0702, 0.0241, 0.1529, 0.0, 0.0733, 0.0571, 0.0714, 0.0333, 0.1429], [0.5479, 0.5497, 0.4381, 0.0893, 0.1667], [0.4125, 0.0208, 0.3288, 0.3647, 0.4107, 0.0282, 0.1491, 0.2892, 0.2353, 0.2329, 0.4188, 0.4286, 0.0714, 0.4111], [1.0769, 1.1, 0.0455, 0.625, 0.4035, 0.6111, 0.0172, 0.4894, 0.9355, 0.5625, 0.0417, 0.5068, 0.5765, 0.2321, 0.0141, 0.2895, 0.3133, 0.0588, 0.3562, 0.3665, 0.3429, 0.0889], [0.0, 1.0, 0.0, 0.6458, 0.4035, 0.5185, 0.4655, 0.2872, 0.9032, 0.35, 0.1875, 0.1918, 0.5059, 0.2321, 0.0141, 0.4123, 0.1566, 0.5059, 0.3151, 0.445, 0.0952, 0.0, 0.3222, 0.5536], [0.4815, 0.6724, 0.4681, 1.0645, 0.3875, 0.125, 0.6301, 0.6, 0.3036, 0.0845, 0.2982, 0.0843, 0.4588, 0.3014, 0.7068, 0.4857, 0.1786, 0.2111, 0.3214]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

