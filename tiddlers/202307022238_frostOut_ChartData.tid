created: 20230702223827000
creator: Drevarr
modified: 20230705163541040
modifier: drevarr
tags: ChartData
title: 202307022238_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Vini Boy", "Valaria Emberstorm", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[107.8156, 104.0554, 134.7686, 19.8278, 210.8561, 20.034, 19.422, 78.6303, 79.7013, 89.6906, 84.7501, 0.0, 134.568, 59.8935, 256.5927, 240.8717, 8.806], [51.9862, 19.7436, 68.8401, 52.4357, 102.1515, 112.4932, 11.8843, 117.8856, 39.8736, 268.9596, 277.1924, 20.179, 32.2304, 38.5728, 89.2989, 171.6552, 122.094, 31.9605, 0.0, 202.635, 0.0, 231.066, 39.5235, 82.1128, 0.0, 179.4078, 117.0414, 0.0, 133.3098, 0.0, 19.9567, 58.9769, 65.7997, 223.2166, 0.0, 16.1745, 105.7001, 291.3659, 40.5164, 0.0, 73.8331, 0.0, 153.1346, 79.47], [84.9017, 110.1724, 123.8803, 230.5315, 67.6237, 279.415, 98.334, 43.0521, 0.0, 63.1733, 106.7487, 128.9476, 121.8929, 55.5811, 247.5648, 96.3889, 315.7245, 245.2565, 20.111, 0.0, 67.3344, 96.1805, 218.9592, 89.3214, 0.0, 63.5477, 260.226, 262.5718, 349.6284, 55.2129, 184.3565, 347.0346, 138.915, 19.8189, 119.0311, 45.3376, 33.5179, 103.4679, 107.5779, 339.3314, 15.8285, 133.3153, 142.3586, 325.3341, 94.0453, 27.3857, 92.4566, 73.9112, 462.2205, 90.612]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

