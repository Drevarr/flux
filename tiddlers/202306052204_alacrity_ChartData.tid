created: 20230605220452000
creator: Drevarr
modified: 20230705163533664
modifier: drevarr
tags: ChartData
title: 202306052204_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Tegan Parker", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar", "Miphest\u00f6", "Venomina The Siren", "Artakama Nahid"];
const professions = ["Scrapper", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 398.8404, 7.8187, 139.2245, 0.0, 0.0, 0.0, 7.6507, 12.8874, 28.6102, 0.0, 5.52, 68.952, 30.9523, 0.0, 0.0], [0.0, 360.9115, 13.9339, 193.9283, 0.0, 0.0, 0.0, 5.4952, 43.4475, 29.0674, 0.0, 2.76, 102.18, 89.1722, 5.5737], [35.6688, 349.1809, 37.7614, 180.311, 0.0, 9.3407, 0.0, 0.0, 35.9614, 37.657, 0.0, 17.4874, 157.092, 91.5673, 70.2678, 0.0], [0.0, 512.0552, 0.0, 0.0, 0.0, 0.0, 87.4635, 88.2147, 0.0, 0.0, 368.472, 432.227, 41.7614, 0.0], [33.5664, 42.999, 35.0506, 188.7619, 104.6426, 20.1498, 70.369, 515.268, 568.1962, 101.1036, 45.7245], [0.0, 978.332, 0.0, 632.4973, 0.0, 0.0, 0.0, 0.0, 33.9715, 66.3325, 33.6587, 33.8045, 415.584, 93.0412, 90.2057, 33.453], [32.1408, 1180.4894, 41.1029, 678.0446, 0.0, 0.0, 0.0, 30.9065, 99.6401, 107.2881, 0.0, 40.9363, 514.02, 128.231, 32.8601, 0.0], [48.2256, 100.4203, 1288.7074, 0.0, 0.0, 0.0, 87.1636, 226.6185, 152.5222, 5.2976, 42.769, 908.388, 534.8487, 42.316, 50.8275], [0.0, 2033.304, 35.5118, 1222.7342, 0.0, 11.3553, 43.307, 0.0, 184.4977, 204.7129, 57.2898, 45.5952, 646.464, 450.4668, 102.5178, 78.3473], [0.0, 1947.2796, 32.6945, 1080.2228, 79.8897, 45.3379, 20.911, 25.7908, 184.6872, 143.3121, 129.7534, 128.616, 677.04, 673.3972, 102.8506, 54.8775]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

