created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Sonja Wintersong", "Rafaellagabriela", "Crusader Siolith", "Demons Vengence", "Elementsofmathus", "Tegan Parker", "Tootsie Pop Rocks", "Nose Llama", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Druid", "Tempest", "Tempest", "Scrapper", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 120.0016, 41.0467, 26.8866, 52.3215, 35.9502, 0.0, 0.0, 78.3904, 91.7637, 0.0, 1.1029, 5.418, 56.7037, 86.7636, 0.0, 0.0, 0.0, 72.4464, 45.7262], [55.564, 132.9623, 16.4349, 2.4219, 90.486, 0.0, 0.0, 24.3138, 8.6258, 54.4896, 0.0, 41.9047, 0.0, 30.8052, 137.3733, 0.0, 134.9656, 0.0, 10.962, 0.0, 47.6268, 76.8552], [88.8792, 140.0212, 110.8342, 87.048, 109.989, 3.3805, 0.0, 0.0, 54.3576, 9.856, 102.4008, 25.2503, 51.4465, 32.2371, 311.1654, 84.9114, 341.4079, 15.0814, 17.4418, 111.7093, 296.1582, 286.6681], [135.8016, 122.1333, 188.3244, 14.657, 16.0605, 39.7866, 48.7494, 826.5954, 23.8308, 8.3798, 36.6257, 842.4173], [25.0782, 33.5078, 63.5712, 67.2138, 59.7498, 56.4465, 83.7081, 206.8431, 41.7564, 602.8004, 85.708, 68.5734, 41.8233, 199.3618, 733.7296], [78.2536, 513.3339, 107.353, 100.9125, 58.9545, 36.8768, 0.0, 0.0, 48.6666, 78.3904, 0.0, 110.715, 32.6473, 102.8453, 50.9863, 490.0078, 30.7041, 34.372, 6.5527, 225.9925, 583.8884], [127.9016, 311.0554, 198.5949, 283.608, 279.576, 107.9021, 56.6623, 26.1219, 18.7827, 275.3696, 41.0836, 28.3576, 122.599, 157.3735, 283.0485, 41.6934, 450.2067, 153.809, 152.9564, 20.8547, 181.7197, 545.197], [685.2938, 309.7125, 266.5845, 411.741, 89.7468, 98.1895, 122.3922, 138.7522, 204.0896, 227.5016, 76.3897, 77.6232, 99.1881, 434.676, 114.4836, 804.1471, 115.2395, 62.9462, 127.2078, 216.7355, 1050.2956], [376.3272, 1553.4253, 565.0603, 398.4552, 599.0985, 290.0726, 261.4154, 208.299, 300.0642, 443.696, 216.8646, 217.7419, 312.0858, 223.7247, 653.0322, 280.413, 1422.0967, 180.0392, 372.3182, 30.5983, 747.07, 2102.5258], [433.1904, 1875.5898, 746.2488, 733.5198, 463.0725, 380.8834, 208.5626, 202.0074, 287.6104, 642.8928, 0.0, 197.1235, 136.9374, 329.6853, 1051.3677, 183.1788, 2105.7388, 268.2728, 320.943, 445.4112, 3056.4447]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

