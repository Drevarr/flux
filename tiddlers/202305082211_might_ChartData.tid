created: 20230508221143000
creator: Drevarr
modified: 20230705163529295
modifier: drevarr
tags: ChartData
title: 202305082211_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Tika Rucola", "Tribal S", "Corinna Barimen", "Eibh\u00ebar", "Belvyn Brightblade", "Osh Kosh Johosh", "Ark Darkness", "Elektra Gd", "Tegan Parker", "Fribble Bibble", "Sygaldry Verdandi", "Kiloak", "Koralia Danai", "Sister Elon\u00edth", "Mac Aaroni", "Red Date Sayaccho", "Zady Stardust", "Artakama Nahid", "Solus Sanctus", "Miphest\u00f6", "Drevarr Moonwillow", "Bella Fae", "High Sorcer Baradun", "Newtype Khan", "Grasszanine"];
const professions = ["Druid", "Chronomancer", "Druid", "Guardian", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 1.6606, 3.654, 13.9101, 13.4162, 15.4698, 0.0, 0.0, 47.2291, 3.5552, 3.4776, 0.0, 1.4112, 0.0, 9.324, 4.6112], [7.167, 0.0, 5.3358, 1.9691, 10.9294, 29.7332, 13.2261, 8.8452, 7.5435, 3.047, 1.923, 3.9026, 7.1711, 4.3512, 5.1308, 11.7949, 6.741, 3.9776], [0.0, 0.0, 0.0, 0.0, 5.439, 6.495, 0.0, 0.0, 89.3798, 0.0, 0.0, 4.6053, 6.4092, 0.0, 14.9827, 9.387, 3.9776], [6.259, 14.5644, 0.0, 0.0, 11.5728, 0.0, 5.6325, 110.7091, 4.226], [0.0, 4.1858, 0.0, 0.0, 0.0, 31.5462, 2.9522, 0.0, 5.0793, 55.3546, 3.2422, 5.0232, 7.6316, 9.0552, 0.0, 23.4835, 9.009, 6.8992], [9.0155, 9.1171, 0.0, 0.0, 52.2339, 74.333, 21.2562, 1.8144, 19.0096], [4.8321, 4.1285, 0.0, 0.0, 27.1105, 64.1802, 31.4119, 0.0, 3.2186, 61.9565, 1.7217, 2.5116, 6.1185, 5.2332, 0.0, 14.7701, 14.994, 2.112], [0.908, 8.6583, 0.0, 27.3944, 71.7948, 17.9497, 1.6821, 3.6712, 119.3424], [7.167, 26.147, 0.0, 51.6053, 1.7766, 26.3017, 151.3363, 10.0173, 11.167, 6.4474], [0.0, 3.7844, 46.2724, 77.2338, 0.0, 0.0, 4.6267, 91.4112, 0.0, 3.0526, 2.829, 6.9972, 0.0, 27.7339, 31.311, 2.464], [2.1728, 6.3647, 2.0391, 2.3041, 15.1876, 64.1802, 21.3743, 1.6254, 3.9729, 111.217, 5.277, 9.2736, 5.3948, 11.9952, 1.4867, 24.5461, 16.758, 10.1728], [6.713, 19.8396, 1.1876, 37.756, 90.2874, 17.2411, 0.5481, 12.6731, 77.6995, 8.2508, 5.1778, 6.3158, 4.4688, 29.5403, 12.222, 6.1952], [0.0, 13.7043, 1.0256, 30.3752, 106.6044, 32.5928, 1.0773, 12.2205, 113.7562, 6.1043, 4.9459, 6.579, 4.6452, 1.7405, 24.0148, 16.128, 2.6752], [6.8103, 9.4038, 0.0, 0.0, 48.8274, 81.9476, 35.5451, 2.4381, 8.851, 121.8816, 2.7056, 4.2504, 6.25, 4.9392, 0.0, 18.9143, 27.468, 1.408], [2.5944, 17.2593, 7.0696, 102.9784, 27.2788, 11.969, 164.5402, 7.3564, 3.4003, 12.6317, 8.4672, 4.188, 26.0337, 18.144, 7.6736], [0.0, 32.0531, 3.8828, 0.0, 70.8281, 55.4778, 0.0, 2.5893, 29.2185, 144.7344, 1.0956, 0.7728, 0.0, 5.6448, 10.5879, 60.887, 37.233, 4.4704], [277.2806, 9.0558, 7.2643, 24.1449, 15.8172, 15.5193, 62.0558, 21.357, 29.6384], [7.7832, 15.8258, 0.0, 0.0, 60.4664, 98.2646, 49.1254, 0.0, 31.9341, 150.3206, 12.4769, 1.3138, 5.6579, 5.7624, 4.2968, 27.0963, 26.586, 3.7664], [0.0, 39.3926, 0.0, 36.9044, 70.3444, 13.2261, 0.0, 0.0, 247.3181, 14.4669, 0.9274, 17.237, 10.878, 0.0, 34.1095, 18.396, 11.792], [7.0697, 20.1263, 1.2698, 8.3433, 78.7767, 126.91, 31.4119, 0.0, 20.6692, 130.5149, 4.226, 5.796, 11.2501, 11.3484, 6.2005, 31.1342, 15.246, 9.7504], [7.7183, 23.3374, 0.0, 0.0, 188.1894, 19.6029, 0.0, 12.6731, 197.0419, 1.9677, 6.0278, 13.2238, 9.2904, 13.0173, 19.4456, 34.272, 19.1136], [7.0441, 33.7817, 120.3832, 44.4018, 3.1752, 26.9554, 235.6378, 6.5962, 11.051, 22.8949, 18.9336, 0.8702, 40.4851, 15.939, 15.9808], [6.486, 28.7847, 1.8803, 1.553, 53.9372, 152.6546, 66.7208, 2.0412, 23.1837, 207.1987, 2.1018, 3.6322, 15.1317, 10.6428, 4.5506, 34.4282, 17.01, 5.3856], [0.0, 27.9819, 0.0, 113.6939, 294.7938, 45.5827, 0.567, 36.1082, 249.8573, 3.6322, 0.0, 20.4624, 19.4172, 31.5592, 44.73, 22.88], [6.032, 14.1056, 0.1343, 0.0, 53.0856, 152.6546, 74.8691, 9.7902, 25.7485, 374.7859, 13.416, 7.0325, 21.8423, 18.6396, 10.1709, 72.7881, 38.745, 32.4192], [21.5011, 45.0692, 10.696, 25.0803, 33.996, 627.6902, 26.9885, 31.8394, 26.2502, 62.328, 5.8379, 139.2006, 56.511, 42.2752]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

