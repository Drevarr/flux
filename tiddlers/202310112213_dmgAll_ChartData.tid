created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Luxes", "Jmbrage Gaurdian", "Drevarr Moonwillow", "Sygaldry Verdandi", "Victoria Raskae", "Foxgale", "\u00c1rk\u00e1ntor", "K\u00e9ld\u00e1", "Bozuko", "Aira Draugr", "Ch\u00e2rl\u00eese", "Daphne Agla\u00e9", "Newtype Khan", "Grayson Kin", "Luke The Ghastly", "Rozaalyna", "Kalisha Lafay", "Lord Erin The Wise", "Black Raspberry Pie", "Rina Of Theros", "Morv\u00e4rth", "Efreet White", "Glorious Gluvs", "Necrotic Windrunner", "Morton Saltbringer", "Adjudicatrix Farra", "Sub Train", "No Reserv\u00e9", "Be\u00eb", "Kat Bon Z", "Jimbo The Pleb", "Mike The Archmagus", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Vindicator", "Tempest", "Scourge", "Chronomancer", "Berserker", "Herald", "Soulbeast", "Reaper", "Spellbreaker", "Berserker", "Reaper", "Reaper", "Chronomancer", "Weaver", "Chronomancer", "Reaper", "Reaper", "Reaper", "Berserker", "Reaper", "Chronomancer", "Reaper", "Dragonhunter", "Vindicator", "Reaper", "Scrapper", "Berserker", "Weaver", "Herald", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[151.8918, 9.3492, 141.0855, 53.3878, 344.8421, 178.1613, 104.4032, 214.3613, 515.3774, 64.8592, 111.5205, 50.6538, 10.0312], [208.313, 18.9365, 186.6842, 20.0408, 125.1684, 35.625, 85.9051, 94.0628, 57.5283, 24.8169, 52.274, 41.1538, 29.1875], [181.7103, 145.0317, 167.8684, 90.8163, 145.9053, 91.9688, 308.0645, 204.834, 130.0733, 84.4717, 187.1549, 110.5023, 6.2308, 181.9688], [208.0524, 17.9211, 98.5, 111.2105, 40.5938, 267.3548, 155.9486, 244.7696, 156.1321, 0.0, 208.484], [953.7431, 1023.1361, 567.5634, 872.9954], [4.5653, 1496.5724, 229.3571, 1456.2737, 741.1875, 702.2258, 696.9051, 391.1518, 718.5211, 520.7443], [298.0611, 113.3333, 206.9934, 251.0918, 516.2, 271.1875, 57.0323, 350.834, 353.2932, 95.5094, 304.2676, 297.2055, 76.1154, 102.3125], [12.1111, 237.9524, 964.4934, 227.8469, 1124.3474, 811.5938, 768.5806, 870.9763, 1354.3246, 494.3208, 343.6901, 683.5434, 85.8846, 359.5625], [2473.6129, 1513.5217, 1512.4921, 793.5849, 1323.7746, 1032.8174, 511.75], [360.097, 394.7937, 1014.0987, 215.5306, 1664.3263, 972.9375], [6.9602, 1779.7303, 155.9796, 0.0, 284.6452, 846.1186, 1841.8586, 653.0755, 749.2113, 1445.411, 0.0, 231.0625], [434.8554, 768.4444, 1285.3421, 338.6327, 1322.0421, 754.1562], [390.7016, 235.9841, 537.8289, 229.0102, 812.6, 217.75, 230.3226, 518.5534, 554.5602, 670.8679, 233.6197, 509.8219, 86.6538, 481.125], [145.4571, 72.4921, 994.9803, 420.6122, 1504.2737, 505.75, 325.0968, 1011.1028, 1176.9581, 78.3208, 1971.7183, 909.1416, 62.5312], [465.2903, 1569.9407, 1895.3194, 855.7925, 2397.169, 2385.0046, 322.9231, 199.7812], [504.46, 90.2857, 1860.2434, 315.1837, 1030.3789, 1745.0645, 757.5929], [529.049, 182.619, 932.0592, 147.5816, 809.2211, 573.0625, 464.2258, 377.7905, 680.6806, 370.1132, 403.4648, 387.411, 308.9615], [275.3333, 1568.875, 943.1531, 1744.4632, 92.4688, 1890.4839, 1355.7866, 1903.911, 698.7925, 1695.7324, 1421.1689, 351.8125], [349.4726, 666.0635, 1306.6645, 309.7857, 1641.6, 385.9688, 1483.5484, 673.3439, 1204.822, 546.0, 626.3521, 811.6575, 399.4615, 271.5312], [297.064, 864.4444, 1625.4079, 453.5816, 1755.9368, 1514.7812, 1577.5484, 956.8419, 1044.5497, 1092.717, 1104.8451, 1103.7854, 58.9231, 1121.4062], [292.0631, 50.0159, 2281.8618, 715.0, 2219.6737, 251.4062, 1215.7419, 1265.8498, 919.3194, 347.5094, 968.3521, 1296.1416, 104.4231, 201.875], [1103.966], [823.2339, 767.5556, 1379.5855, 233.7143, 1877.8737, 1140.9375, 906.6452, 965.6798, 1504.356, 1115.9245, 1110.8732, 963.4795, 60.1538, 583.0], [796.0864, 423.4286, 2021.2368, 443.2959, 1972.4947, 2415.8438, 775.9032, 1287.4862, 1829.1204, 342.283, 694.9155, 980.7489, 231.1154, 92.9375], [926.5614, 2086.0197, 665.5816, 1616.5579, 742.7188, 849.5968, 1120.4293, 1365.8868, 562.8732, 1405.9406, 1761.1923], [908.4595, 214.5079, 1317.5724, 880.8878, 2922.4211, 1916.4688, 1682.4506, 1557.3874, 2789.3239, 1352.8813, 341.5, 483.7188], [2032.8836], [1373.3537, 1683.4921, 1889.6447, 316.398, 1997.3053, 564.625, 1433.871, 751.8182, 1338.445, 1456.0, 264.0563, 1526.5434, 116.8077, 302.75], [1295.4158, 18.6825, 2258.625, 1148.3265, 5100.7053, 960.8438, 3073.2581, 2469.9209, 414.3403, 380.9811, 2142.662, 1244.5297, 0.0], [1431.0878, 2020.3421, 888.2755, 3426.7789, 1755.2188, 2195.5613, 1802.1204, 242.4528, 1736.8873, 1850.863], [1583.3552, 1066.8413, 1467.4408, 778.6429, 2668.1579, 3059.875, 1790.9677, 2602.0593, 1630.5812, 1089.1509, 2552.9718, 1887.5662, 195.8462, 1935.9375], [2652.6143, 999.3333, 1179.7171, 1666.449, 3669.8632, 371.3438, 2439.4839, 3622.2609, 2224.1047, 174.9623, 952.7443, 522.9615, 622.5938], [2337.6279, 4697.8026, 901.3571, 5679.0316, 969.8438, 3778.7097, 2635.917, 4445.1152, 0.0, 4293.1972, 1746.8265, 317.3846, 3285.25], [3263.6152, 1820.5079, 1885.5724, 2063.2653, 4415.3053, 381.625, 4131.2903, 3483.7075, 1651.2356, 1124.2453, 2481.0282, 2484.7078, 0.0, 585.75]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

