created: 20230213220222000
creator: Drevarr
modified: 20230705163519284
modifier: drevarr
tags: ChartData
title: 202302132202_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Grasszanine", "Arcanophage Farra", "Uneeta Healah", "Newtype Khan", "\u00c9\u00efbhear", "Drevarr Moonwillow", "Mike The Archmagus", "Abigail Ryn", "Mac Chiato"];
const professions = ["Druid", "Spellbreaker", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[160.272, 79.6085, 0.0, 0.0, 0.0, 29.624, 76.8075, 61.3088, 275.66, 0.0, 140.8368], [81.936, 106.0565, 36.0415, 0.0, 96.3838, 69.1268, 0.0, 0.0, 460.03, 45.3456, 65.5344], [290.448, 462.5755, 0.0, 0.0, 102.7847, 48.6448, 0.0, 0.0, 727.456, 0.0, 0.0], [16.9267, 61.7968, 48.0989, 120.1359, 267.6135, 0.0, 72.8336, 958.724, 68.3568, 162.504], [298.512, 490.3459, 110.1334, 0.0, 68.1325, 94.3736, 326.3645, 68.6712, 108.0744, 715.284, 58.1484, 151.404], [285.408, 794.2334, 80.9627, 83.7425, 211.9703, 257.642, 0.0, 25.5584, 1328.538, 0.0, 232.4784], [415.008, 1086.4838, 131.3484, 0.0, 60.2097, 268.8907, 431.0652, 94.864, 1621.74, 72.6714, 289.2216], [1092.528, 1942.6056, 173.9392, 76.0554, 85.8038, 161.161, 28.8132, 87.3768, 728.172, 57.5562, 116.6832], [929.952, 2023.0075, 211.7084, 92.1367, 259.3158, 799.6065, 269.4608, 1418.038], [937.008, 1471.0378, 235.5352, 0.0, 132.5122, 300.3133, 895.279, 301.9576, 2777.006, 195.5106, 344.8104]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

