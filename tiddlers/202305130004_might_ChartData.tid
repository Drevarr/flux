created: 20230513000456000
creator: Drevarr
modified: 20230705163529798
modifier: drevarr
tags: ChartData
title: 202305130004_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Eibh\u00ebar", "Leetle Dim", "Black Raspberry Pie", "Tegan Parker", "Venomina The Techie", "Ark Darkness", "Koralia Danai", "Mac Aaroni", "Air One Com", "Aronorf Xideliesi", "Miphest\u00f6", "Solus Sanctus", "Drevarr Moonwillow", "Johosh The Great", "High Sorcer Baradun", "Grasszanine", "Bella Sassy", "Lucas Ryn", "Newtype Khan", "Artakama Nahid", "Blancooo Padreee"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.9488, 17.4182, 29.3829, 75.854, 1.9402, 18.8204, 0.0, 2.1278, 7.6032], [0.0, 0.0, 23.1451, 56.5538, 2.5465, 8.5863, 0.0, 3.4819, 8.0064, 0.0, 6.665, 0.0, 16.6643, 0.0, 0.0, 12.075, 5.161, 0.0, 7.3172, 0.0, 0.0, 6.9619, 0.0, 14.7345, 0.0, 0.0, 0.0], [8.1562, 28.7885, 26.7565, 70.9167, 0.0, 3.2957, 0.0, 0.0, 12.4416, 0.0, 0.0, 4.151, 0.0, 0.0, 11.3275, 8.7091, 0.0, 3.0208, 0.0, 0.0, 0.0, 14.159, 0.0, 13.6629, 0.0, 0.0, 4.8403], [0.0, 16.6925, 18.2206, 75.4051, 17.8859, 14.2237, 0.0, 0.0, 8.064, 0.0, 0.0, 13.7766, 0.0, 0.0, 9.8325, 9.9994, 0.0, 3.4236, 11.1725, 0.0, 7.5264, 0.0, 8.5192, 1.3311, 0.0], [6.1517, 26.1274, 19.5338, 88.4215, 29.9512, 31.1361, 0.0, 0.0, 2.592, 0.0, 14.7994, 0.0, 0.0, 2.99, 0.0, 0.0, 0.0, 0.0, 0.0, 9.455, 0.0, 2.8933, 12.5019, 0.0, 4.978], [16.2778, 9.3542, 41.6941, 65.0818, 2.0008, 11.0147, 4.7841, 3.3629, 12.1536, 3.2925, 11.1898, 1.0723, 2.2853, 9.4875, 14.5152, 7.4088, 9.5325, 0.635, 2.473, 7.3426, 8.1379, 0.0, 9.3229, 0.0, 0.7111], [4.4928, 12.096, 43.6639, 103.2332, 9.8221, 20.0346, 2.4746, 3.6456, 9.5616, 1.0483, 1.6929, 8.4224, 2.9104, 1.1426, 18.2275, 17.9827, 1.4904, 11.2778], [7.3958, 18.4666, 22.6527, 96.9494, 18.674, 22.1162, 0.0, 3.8837, 14.4, 6.1318, 2.0454, 0.868, 5.1736, 8.97, 11.2896, 0.9504, 7.3172, 0.0, 6.6682, 0.0, 9.5962, 9.9659, 0.0, 0.0], [3.8016, 34.3526, 24.2942, 114.4542, 0.0, 12.4891, 0.0, 5.58, 3.2832, 0.0, 0.0, 0.0, 15.7018, 0.1872, 13.9339, 2.53, 27.1757, 0.0, 2.0139, 0.0, 14.9702, 4.6287, 2.6813, 0.7852, 0.6965, 4.5599, 2.294], [8.0179, 12.6605, 38.2469, 111.3123, 8.852, 34.6053, 0.0, 3.1992, 5.8176, 1.4292, 9.0842, 3.6423, 0.0, 11.385, 15.8054, 0.0, 18.7964, 2.6496, 3.047, 13.2182, 4.2286, 18.8602, 3.0015, 1.8358], [9.4003, 30.4819, 49.0808, 132.4078, 1.6976, 11.1882, 1.0279, 11.2642, 13.248, 2.3327, 15.6416, 4.1579, 20.9875, 16.9344, 0.0, 14.5672, 4.2509, 0.8832, 2.2311, 17.2166, 5.9787, 12.2698, 1.566, 0.0], [12.6835, 48.1421, 32.0093, 119.3914, 10.7921, 34.9522, 0.0, 1.607, 9.3888, 4.8485, 4.4122, 17.1456, 3.6818, 19.55, 14.8378, 2.6136, 12.7547, 0.7906, 14.9702, 0.0, 7.4323, 0.0, 13.0735, 0.0, 0.0, 9.6577], [5.2877, 25.2403, 28.3979, 140.4869, 20.2504, 39.1152, 1.6243, 10.0738, 13.0176, 1.6817, 5.6519, 2.996, 6.9786, 5.2592, 27.2964, 17.4225, 26.5306, 1.1232, 11.345, 1.633, 19.7395, 6.0682, 3.5191, 6.001, 1.566, 1.974, 4.7945], [13.0637, 13.8701, 45.4696, 118.0449, 5.8205, 20.1214, 6.4465, 6.8299, 12.672, 7.513, 6.7583, 1.2139, 30.6214, 1.1233, 7.078, 14.0875, 32.0141, 6.9336, 18.1251, 1.6589, 20.2694, 4.7785, 19.5216, 4.4651, 17.4671, 4.0977, 4.7573, 3.8769], [11.1629, 26.1274, 49.4092, 193.0012, 12.3079, 40.6764, 6.4973, 4.1962, 13.9392, 0.0, 3.959, 26.8314, 3.5912, 7.9985, 20.6425, 31.5302, 3.1536, 12.1505, 1.6978, 6.7123, 6.7433, 12.5126, 4.3894, 14.5738, 0.3132, 6.1984, 1.0323], [23.328, 63.4637, 103.4145, 276.4854, 4.1835, 45.0129, 1.2944, 0.0, 9.4464], [22.0212, 59.8592, 9.2419, 35.8979, 57.845, 88.9459, 15.876, 52.5628, 37.4918, 8.1086, 53.4845, 0.0, 69.9755, 15.0858, 8.9027, 17.3197], [10.6445, 38.5459, 54.3337, 211.8525, 34.3772, 30.2688, 2.6395, 6.815, 21.1392, 2.1294, 1.9462, 0.909, 15.1603, 5.2762, 12.0612, 16.8475, 19.4342, 10.152, 27.4562, 0.0, 3.8419, 3.9627, 4.6099, 3.4813, 12.4306, 0.0, 0.0, 5.6203], [5.184, 52.6579, 22.981, 228.4596, 19.0984, 41.1968, 9.5683, 8.2286, 15.7824, 2.3994, 0.0, 14.9798, 9.3316, 20.7575, 24.192, 0.0, 24.5696, 1.3997, 15.5002, 1.7815, 12.1363, 6.6598, 23.5752, 6.3423, 2.0135], [33.2122, 55.8029, 95.0429, 187.6151, 9.8221, 61.5783, 7.7282, 14.8354, 30.0096, 8.038, 36.8179, 6.8558, 38.525, 51.287, 10.2384, 28.3289, 3.6936, 21.5501, 5.4612, 37.7731, 42.3282, 12.528, 1.3621, 0.4817], [27.337, 72.4954, 108.5032, 295.3367, 9.337, 53.1655, 8.2739, 10.3565, 18.9504, 2.872, 4.2656, 1.5189, 25.568, 0.2213, 3.7453, 29.6125, 53.0611, 5.832, 6.5787, 36.8294, 0.0, 27.3773, 0.0, 36.1129, 0.0, 2.8623, 0.0], [40.055, 97.655, 210.2761, 292.1948, 21.7662, 58.3693, 10.2662, 15.0288, 43.6032, 35.1406, 19.4085, 88.8563, 42.9125, 84.4675, 112.7347, 12.3768, 73.843, 56.7456, 15.3846, 58.753, 80.9594, 5.0895, 11.2518, 31.359]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

