created: 20230311223557000
creator: Drevarr
modified: 20230705163521812
modifier: drevarr
tags: ChartData
title: 202303112235_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Seren Nightroad", "Venomina The Fierce", "Morton Saltbringer", "Demon Sekhmet", "Rina Of Theros", "Panther B Me", "K\u00f4sair", "Primal Clone", "Black Raspberry Pie", "Smol Gluvs", "Be\u00eb"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1013, 0.0847, 0.0, 0.04, 0.0, 0.0641, 0.0757, 0.0, 0.0601, 0.0907, 0.0358, 0.0222, 0.2155, 0.0, 0.175, 0.3333], [0.0958, 0.322, 0.0336, 0.04, 0.0092, 0.1346, 0.0493, 0.0, 0.0106, 0.0955, 0.0989, 0.0, 0.0, 0.0, 0.0, 0.2037, 0.0857, 0.1935, 0.0357], [0.0108, 0.7627, 0.0252, 0.0667, 0.0, 0.141, 0.0493, 0.0, 0.0106, 0.0215, 0.0589, 0.0, 0.1034, 0.0, 0.2963, 0.1505, 0.7125], [0.142, 0.0169, 0.0, 0.1009, 0.109, 0.0691, 0.0038, 0.0247, 0.0716, 0.1032, 0.0, 0.1121, 0.0, 0.2963, 0.0, 0.2581, 0.0], [0.1483, 0.2034, 0.0, 0.0933, 0.0275, 0.2308, 0.0592, 0.0, 0.0106, 0.0, 0.1137, 0.0, 0.0603, 0.075, 0.2778, 0.0286, 0.3011, 0.1786], [0.1438, 0.1186, 0.0588, 0.08, 0.0, 0.0769, 0.0888, 0.0188, 0.0389, 0.1169, 0.0842, 0.0519, 0.0517, 0.0357, 0.125, 0.2963, 0.0, 0.4409, 0.25], [0.0805, 0.5254, 0.0, 0.0133, 0.0275, 0.0128, 0.0, 0.0, 0.0141, 0.0263, 0.0337, 0.0, 0.0517, 0.0, 0.05, 0.2963, 0.0, 0.4624, 0.0, 0.1706, 0.2174, 0.3571, 0.2273, 0.5687], [0.0958, 0.4068, 0.04, 0.0275, 0.0321, 0.0164, 0.0075, 0.0389, 0.0549, 0.0442, 0.0, 0.0517, 0.125, 0.0741, 0.0, 0.2043, 0.1071, 0.3353, 1.087, 0.5873, 0.6545, 1.325], [0.2116, 0.5932, 0.0, 0.1867, 0.0183, 0.1282, 0.0855, 0.0, 0.0919, 0.1695, 0.0758, 0.0074, 0.0862, 0.0, 0.0, 0.2407, 0.3011, 0.0471, 0.7971, 0.4286, 0.5545, 1.1875], [0.2866, 0.1017, 0.0588, 0.1467, 0.1284, 0.2115, 0.1645, 0.0113, 0.0989, 0.1504, 0.1642, 0.0, 0.0776, 0.0, 0.0, 0.2037, 0.0857, 0.2043, 0.2857, 0.9, 1.6313], [0.1772, 0.0508, 0.0588, 0.0133, 0.055, 0.0769, 0.0855, 0.0075, 0.0989, 0.1074, 0.1242, 0.0, 0.3621, 0.1, 0.3333, 0.1714, 0.3011, 0.1071, 0.6706, 0.8599, 0.8968, 0.4909, 1.1687], [0.2568, 0.8814, 0.1008, 0.0459, 0.141, 0.1217, 0.0226, 0.0565, 0.1599, 0.1389, 0.0, 0.0431, 0.0714, 0.375, 0.0741, 0.0, 0.5269, 0.3929, 0.4941, 0.7681, 1.0476, 1.0909, 1.4187]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

