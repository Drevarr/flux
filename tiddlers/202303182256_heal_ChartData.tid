created: 20230318225613000
creator: Drevarr
modified: 20230705163522512
modifier: drevarr
tags: ChartData
title: 202303182256_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Zadie Miststep", "Boysto Yardbringer", "Drevarr Moonwillow", "\u00c1rkantor"];
const professions = ["Firebrand", "Tempest", "Vindicator", "Scrapper", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.2264, 299.0, 3.6441, 374.6914, 285.0026, 220.6618, 38.4068, 36.1538, 309.7396, 271.8833, 331.3671, 906.3605, 203.7589, 366.0909, 890.6705, 139.6944, 29.3611, 827.9474, 172.7097, 345.0519, 278.3309, 547.7955, 413.0741], [34.4245, 548.7381, 0.0, 1820.5432, 956.8411, 850.1275, 0.0, 547.7604, 1073.0917, 966.8454, 2250.5465, 462.5536, 770.7045, 2944.1818, 752.0833, 314.3889, 3196.5789, 1183.6452, 937.5185, 775.8456, 1421.8182, 1398.3981], [44.6698, 1718.7798, 83.8136, 1411.8889, 1525.4609, 1590.0343, 130.9492, 761.2308, 1632.7396, 1969.0333, 1603.1014, 1065.5465, 705.0446, 1396.2045, 0.0, 442.2222, 2367.2895, 401.129, 1781.7333, 1139.2794, 1074.1705, 925.5], [104.3585, 1164.5, 26.4407, 1606.8395, 1221.8516, 1389.9853, 213.0847, 500.0385, 2386.8958, 980.1833, 913.8744, 3182.9535, 561.0357, 2719.5682, 2784.1477, 90.7222, 347.0972, 2372.3947, 1104.0484, 635.7852, 875.4118, 1907.5341, 1520.3889], [71.3962, 1908.8512, 135.1864, 3824.7901, 2415.7135, 2290.5833, 13.9153, 2729.0312, 2847.8083, 1835.9179, 2297.2558, 1229.6875, 2953.8409, 5772.6705, 1656.9444, 391.5694, 6845.2895, 3735.8226, 3285.1704, 2356.0735, 4156.0568, 2702.6852]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

