created: 20230227222028000
creator: Drevarr
modified: 20230705163520426
modifier: drevarr
tags: ChartData
title: 202302272220_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Ark Darkness", "Mac Aaroni", "Cat Wigglebooty", "Venomina The Siren", "Eibh\u00ebar", "Zadie Miststep", "Primal Clone", "Black Raspberry Pie", "Etchery Howls", "Ryvalia Fazebringer", "Grumyaar Lordsbane", "Gavann", "Blanco Padre Guard", "Tribal S", "Fribble Bibble", "Kahless The Drunk", "Zaylen Harker", "Drevarr Moonwillow", "Bella Sassy", "Ravioli Fetabringer", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Tempest", "Firebrand", "Tempest", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.0475, 0.0, 16.3934, 4.5002, 13.9642, 59.6045, 0.0, 0.0, 18.4985, 0.0, 9.2352, 195.0396, 18.4019, 18.4842, 39.7053, 18.5373, 45.6784, 510.2136, 18.5203], [139.9469, 55.4082, 60.9002, 24.1229, 19.9612, 0.0, 24.0051, 0.0, 46.7107, 0.0, 560.7913, 0.0, 34.5416, 45.004, 0.0], [31.6013, 147.3445, 31.702, 0.0, 0.0, 22.2329, 13.1328, 0.0, 18.3221, 18.6543, 0.0, 17.8438, 18.8256, 296.5441, 60.5821, 0.0, 70.3674, 0.0, 67.9056, 390.7656, 18.9197], [66.8266, 92.7244, 50.9282, 30.135, 20.7575, 20.2291, 0.7654, 0.0, 0.0, 33.321, 2.4931, 57.3293, 364.4934, 0.0, 0.0, 38.4336, 0.0, 21.793, 464.1408], [0.0, 59.6928, 38.2112, 6.9913, 45.8725, 11.0362, 0.0, 0.0, 0.2646, 0.0, 18.1418, 71.8214, 318.7744, 17.3092, 4.6494, 37.2326, 0.0, 73.1564, 658.1016, 64.0224], [59.0712, 86.354, 41.8274, 26.1572, 20.8605, 34.7674, 5.7528, 9.2728, 8.5701, 20.455, 7.4637, 38.9299, 455.9313, 40.8251, 0.0, 70.1555, 13.8352, 20.6086, 491.4432, 19.4438], [93.0643, 150.5297, 19.0453, 5.5047, 23.4337, 4.7693, 0.0, 0.0, 5.3214, 94.3897, 0.0, 31.3997, 371.2044, 14.0746, 18.8924, 55.6722, 18.9436, 35.8873, 604.0656, 18.9197], [58.9987, 98.269, 52.013, 26.8804, 39.5251, 11.2435, 3.9707, 4.9157, 19.8744, 19.625, 19.5686, 57.8976, 403.9207, 19.5384, 0.0, 69.8022, 0.0, 19.74, 652.9824, 18.8448], [42.1834, 21.312, 0.0, 15.6594, 18.7131, 34.8032, 21.0112, 42.0557, 540.6582, 20.0192, 10.4782, 77.2204, 21.1302, 31.7419, 800.8704, 0.0], [41.3136, 179.3144, 103.1822, 56.0109, 76.4084, 28.6387, 13.3832, 40.6475, 36.8088, 93.441, 38.6512, 83.8272, 680.7511, 83.4861, 41.2776, 95.0949, 41.409], [85.3814, 81.8712, 58.9441, 39.1353, 22.6446, 37.417, 14.9859, 21.953, 13.8474, 22.4709, 25.2448, 62.16, 509.6196, 28.2804, 22.4759, 58.0037, 0.0, 37.6639, 680.2848, 22.3392], [1810.4904, 58.3066], [132.421, 276.1678, 85.8245, 0.0, 36.9254, 98.8814, 120.2688, 19.5307, 23.424, 50.8473, 0.0, 20.6662, 165.168, 1049.8583, 25.92], [89.3678, 197.5998, 125.8438, 0.0, 18.1212, 51.2248, 54.4435, 5.2026, 4.0592, 0.6027, 42.7481, 13.2496, 88.1606, 499.9725, 4.8081, 0.0, 42.6019, 21.6333, 159.5782, 890.7408], [51.8957, 122.0989, 42.4301, 47.2919, 60.5228, 39.5366, 0.0, 4.8971, 22.9467, 0.0, 5.143, 80.4173, 762.1225, 48.1684, 8.6899, 18.3051, 49.0342, 1259.892, 59.1802], [107.053, 173.2979, 55.9306, 4.7779, 47.2517, 131.0642, 50.4115, 17.1865, 6.4611, 0.9702, 117.8092, 23.52, 184.2778, 1352.2746, 101.6695, 0.0, 228.0582, 34.7913, 41.8093, 1365.6888], [117.7075, 269.2075, 159.6552, 122.6695, 91.6763, 25.2749, 17.7965, 19.1786, 37.3086, 76.6027, 29.5725, 158.6323, 1127.8742, 14.9051, 0.0, 63.585, 0.0, 60.8387, 1736.5464, 0.0], [178.9416, 97.6374, 118.9185, 84.119, 10.0703, 30.4437, 10.5105, 52.946, 19.9293, 110.3251, 1438.2598, 20.194, 130.1373, 0.0, 40.0327, 1911.7368, 41.184], [126.84, 327.6027, 103.2425, 77.467, 112.5025, 15.529, 0.0, 13.5926, 18.5661, 110.1015, 13.7827, 210.9178, 1175.2709, 140.7899, 21.1831, 337.707, 61.9394, 126.3755, 1663.1712, 109.7491], [169.0234, 322.294, 161.8249, 124.6785, 85.5005, 82.5062, 16.146, 8.6769, 22.05, 198.0879, 23.1594, 192.5894, 1449.5846, 57.6972, 63.4813, 149.9193, 39.8223, 198.0712, 2173.3848, 79.5226], [134.8853, 326.305, 169.5998, 95.7891, 92.637, 80.2022, 26.7186, 43.0494, 50.7297, 59.6457, 48.9686, 268.9574, 1762.0674, 113.7771, 0.0, 178.6739, 0.0, 146.6682, 2176.2288, 88.3584], [166.9214, 283.4819, 153.809, 102.2179, 144.651, 58.6368, 13.7899, 39.7537, 37.8084, 130.5566, 42.5712, 190.7424, 1833.7917, 83.0053, 13.4266, 203.1894, 192.3466, 2493.6192, 136.1818], [250.4184, 433.1858, 140.6702, 126.567, 71.9138, 109.1174, 57.3243, 73.5862, 69.4869, 183.9176, 58.6275, 110.5382, 1542.2809, 102.4125, 0.0, 264.9375, 0.0, 139.5223, 3031.704, 134.5094]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

