created: 20230308221219000
creator: Drevarr
modified: 20230705163521508
modifier: drevarr
tags: ChartData
title: 202303082212_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Eibh\u00ebar", "Zadie Miststep", "Primal Clone", "Raziel Umbra", "Ryvalia Fazebringer", "Mike The Archmagus", "Mac Chiato", "Black Raspberry Pie", "Arriasa", "Tribal S", "\u00c1rkantor", "Blanco Padre Guard", "Fribble Bibble", "Drevarr Moonwillow", "Zaylen Harker", "Gavann", "Raelyn Sunray", "Bella Sassy", "Ravioli Fetabringer", "Koralia Danai", "Viral Marketing", "Sygaldry Verdandi"];
const professions = ["Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Druid", "Druid", "Vindicator", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.3923, 16.4923, 0.0, 29.1342, 32.6203, 55.7424, 108.877, 41.1316, 36.9651, 64.1091, 63.5648, 13.4456, 30.1183, 18.3678, 18.1913, 63.5912, 53.8032, 23.6518, 7.2906, 49.5841, 23.4342, 54.4925, 43.853, 49.1405, 45.927, 59.6736, 0.0, 43.3296, 96.8352, 35.0428, 23.1725], [23.4893, 0.0, 0.0, 31.1114, 23.4906, 53.4492, 136.5984, 9.995, 30.1874, 78.99, 47.8946, 144.036, 44.7483, 0.0, 5.0784, 20.6167, 132.0388, 0.0, 0.0, 21.2402, 56.3951, 13.2653, 70.1434, 50.4019, 29.0726, 23.5832, 68.891, 17.6256, 100.7424, 29.01, 20.0362], [14.1032, 18.7549, 0.0, 19.1505, 18.8924, 71.0892, 184.0061, 50.6199, 38.169, 66.0745, 75.0562, 62.8582, 8.6206, 13.1238, 14.076, 23.7214, 88.1481, 18.8496, 18.8992, 18.8451, 33.1015, 2.3688, 55.5206, 19.8406, 56.9232, 22.2709, 69.264, 52.056, 112.992, 23.6846, 17.8589], [4.8769, 0.0, 0.0, 23.6113, 34.1863, 77.7924, 171.1498, 59.6938, 55.5146, 78.3348, 64.5291, 99.4974, 35.9131, 0.0, 31.9194, 44.2411, 93.4626, 39.1248, 21.6839, 6.3826, 55.7821, 14.8727, 79.1112, 18.2883, 49.1405, 28.2852, 73.4198, 57.3696, 94.7232, 44.1666, 8.5536], [19.7908, 10.998, 24.7061, 35.6857, 94.1976, 142.223, 34.8674, 47.6221, 75.6207, 44.7605, 194.457, 29.3314, 0.0, 15.0972, 14.9411, 99.6018, 19.8528, 0.0, 15.1998, 89.2241, 25.1262, 90.6494, 36.6736, 31.0022, 61.1267, 67.2926, 19.2672, 105.1776, 43.4963, 35.951], [22.37, 25.1882, 0.0, 21.34, 45.2819, 80.9676, 161.5075, 77.565, 17.3901, 118.4849, 85.262, 155.1286, 14.4153, 5.6635, 26.979, 48.7525, 64.5075, 0.0, 30.7065, 13.3969, 44.3396, 38.3576, 59.976, 28.0388, 79.9498, 37.9809, 68.0386, 0.0, 75.7296, 146.1504, 34.7077, 31.415], [14.8867, 31.5126, 0.0, 17.0263, 31.7206, 94.9032, 120.9298, 48.6854, 48.7369, 58.5873, 45.4838, 172.2717, 65.6022, 15.9142, 12.9858, 50.3049, 93.7375, 41.976, 42.0683, 17.4633, 69.949, 51.0984, 37.7563, 42.7373, 69.337, 75.8524, 52.8005, 62.208, 86.592, 24.057, 69.7766], [13.2484, 0.0, 4.3791, 13.328, 73.9116, 193.5144, 93.9163, 38.169, 91.8118, 92.4944, 220.3398, 23.8586, 18.779, 0.0, 18.3853, 137.0785, 13.3297, 13.3048, 79.5525, 37.9177, 113.4403, 100.3187, 44.1878, 14.7987, 88.3915, 26.0496, 110.7744, 40.964, 66.2515], [37.3366, 20.9084, 0.0, 21.3564, 52.9455, 124.2738, 205.969, 70.9785, 55.6037, 122.0414, 92.0122, 155.1286, 47.6099, 21.2299, 35.9904, 33.1323, 138.2697, 13.1472, 24.8028, 15.7657, 43.1817, 21.2854, 63.1176, 28.9605, 99.2458, 48.2963, 76.297, 1.7712, 102.3264, 80.7363, 37.6358], [56.7325, 0.0, 0.0, 48.3806, 127.7136, 247.752, 66.004, 100.06, 176.0428, 139.8264, 83.3627, 62.3113, 0.0, 12.8616, 67.3319, 109.1313, 0.0, 30.1727, 0.0, 121.9512, 68.2051, 72.167, 60.4341, 37.1894, 49.9824, 234.1152, 54.0352, 45.9043], [13.4316, 0.0, 0.0, 46.3729, 54.145, 107.163, 274.8038, 90.8764, 82.9374, 146.3748, 55.6091, 186.7258, 39.9909, 0.0, 18.2574, 75.239, 146.7913, 0.0, 0.0, 4.4612, 72.7415, 34.4999, 110.0702, 53.7006, 82.6512, 77.7843, 63.8827, 0.0, 86.4864, 226.9344, 36.9048, 34.2922], [16.5017, 0.0, 0.0, 59.1181, 65.6404, 250.3116, 341.8978, 101.7005, 83.3387, 179.5056, 164.3362, 268.912, 37.6658, 2.0976, 70.9701, 246.7596, 57.1296, 32.0061, 7.3301, 117.8984, 6.2773, 148.3406, 86.0567, 55.3386, 102.4618], [54.1261, 22.2714, 5.6964, 28.9381, 174.2969, 105.5754, 323.6846, 123.6711, 60.687, 205.0557, 58.5021, 297.82, 118.4702, 21.459, 51.6631, 140.4688, 45.8832, 61.1902, 17.6344, 160.3991, 29.1701, 100.2456, 85.7657, 97.9594, 132.0219, 154.7784, 0.0, 149.9904, 288.816, 105.5382, 76.1789], [52.3992, 17.2283, 17.5404, 21.0949, 106.0576, 110.7792, 364.3963, 131.4552, 148.5739, 230.6058, 156.7824, 345.8881, 19.7093, 31.8283, 23.2254, 32.1621, 189.0327, 34.584, 130.0293, 43.8623, 44.8845, 67.0878, 115.4395, 79.4594, 188.9078, 123.2374, 153.18, 0.0, 75.9456, 183.216, 64.6486, 38.6208], [65.9428, 113.129, 30.738, 62.2717, 83.8998, 143.8542, 336.0053, 139.0091, 202.2157, 305.197, 177.9974, 15.1524, 84.844, 279.7464, 53.0112, 79.4582, 10.0016, 20.7736, 33.1124, 207.3456, 145.8211, 157.9056, 93.8223, 134.4787, 0.0, 125.4528, 247.4208, 104.0486, 80.1706], [39.2395, 22.8166, 0.0, 43.2683, 90.4305, 248.1066, 289.4011, 61.7204, 126.6802, 256.343, 77.1456, 289.5846, 102.9461, 131.9957, 299.8134, 28.5648, 25.6568, 25.6752, 174.2254, 72.3499, 142.4002, 55.4954, 145.2989, 150.7207, 99.2606, 8.512, 174.1824, 322.3968, 150.971, 14.6448], [0.0, 95.0829, 0.0, 21.0459, 174.1303, 222.5286, 541.7064, 110.4979, 183.4433, 237.9994, 47.6535, 506.0588, 99.1902, 0.0, 30.1668, 26.5835, 144.4089, 18.5856, 56.1034, 70.2218, 30.9901, 34.483, 218.1413, 80.1385, 172.4419, 217.57, 125.9006, 4.104, 144.4608, 123.3761, 49.5072], [15.04, 0.0, 51.7793, 347.1552, 373.7707, 109.4386, 129.7123, 247.9199, 222.8383, 293.1141, 88.2446, 0.0, 22.0938, 139.6118, 263.0697, 66.537, 30.2943, 264.6755, 80.1839, 199.463, 108.3713, 147.6787, 195.1168, 143.9093, 0.0, 167.616, 393.36, 143.0016, 81.7517], [45.4916, 61.8529, 80.558, 29.8042, 128.382, 212.562, 482.6477, 97.8314, 141.4395, 326.3483, 255.7859, 517.3195, 97.6163, 0.0, 112.3007, 245.9349, 125.2944, 140.4999, 30.8734, 216.3174, 22.3175, 117.8957, 140.1454, 170.7053, 111.6099, 194.0458, 23.5889, 120.0096, 326.832, 116.0026, 41.9904], [22.6259, 0.0, 0.0, 70.7522, 96.0282, 367.4412, 615.2285, 97.8314, 167.5246, 283.2969, 290.0192, 517.9917, 103.2322, 39.3714, 59.6673, 278.1887, 0.0, 19.8646, 79.9075, 266.4463, 34.3814, 174.5016, 162.266, 256.8298, 132.7874, 157.9219, 0.0, 119.7936, 382.272, 106.2085, 59.6938], [16.1819, 35.8469, 0.0, 12.3204, 152.2391, 355.446, 541.1707, 206.9476, 168.0597, 442.9615, 174.3812, 560.5135, 146.3708, 0.0, 17.388, 67.914, 459.3412, 86.9088, 79.3097, 41.6514, 27.3802, 66.8171, 310.3901, 99.0089, 312.8525, 200.6573, 236.0304, 194.616, 555.984, 155.8866, 69.4915], [0.0, 17.1243, 163.0681, 329.3388, 731.2032, 185.6679, 237.1296, 346.5638, 176.0688, 575.9759, 197.2, 0.0, 25.2816, 84.3104, 497.6425, 0.0, 40.0261, 36.19, 301.8635, 45.9886, 305.9347, 154.5044, 309.8294, 189.8316, 217.0094, 0.0, 194.0976, 534.0192, 209.2888, 129.8851], [18.6443, 40.2085, 0.0, 26.4054, 131.3808, 397.6056, 722.3645, 135.6467, 150.0899, 322.9791, 357.1198, 670.2632, 103.6615, 19.9962, 145.53, 461.4487, 208.6656, 167.7162, 48.8368, 328.4945, 81.6559, 255.7262, 120.0623, 186.528, 300.4459, 168.3504, 639.1968, 196.8506, 105.0538]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

