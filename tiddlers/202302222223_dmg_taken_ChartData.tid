created: 20230222222328000
creator: Drevarr
modified: 20230705163519953
modifier: drevarr
tags: ChartData
title: 202302222223_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["My Birthday Girl", "One Whole Keg", "Skye Nightroad", "Rina Of Theros", "Cat Wigglebooty", "Blanco Padre Guard", "Black Raspberry Pie", "Newtype Khan", "Mike The Archmagus", "Xanvias Tseli", "Sumatra Satyricon", "Arcanophage Farra", "Sassy Daddy Demon", "Tribal S", "Ace Hammers", "Fribble Bibble", "Tootsie Pop Bringer", "Oo Dads Mad", "Ryvalia Fazebringer", "Mustache Bloodclaw", "Mac Aaroni", "Zaylen Harker", "Xyntharos", "Mistwalker Caelon", "Primal Clone", "Sygaldry Verdandi", "Eibh\u00ebar", "Veron Blackburn", "Ravioli Fetabringer", "Drevarr Moonwillow", "Bella Sassy", "Koralia Danai", "Spreadflamesoflight", "Venomina The Siren", "Kosair", "Kiloak", "Acme Corporation", "Etchery", "Kmpek", "Forever Broke", "Zadie Miststep", "Ark Darkness", "Husky Guard", "Sofya De Meme", "Kosair", "Forever Broke", "Pixil Ranger", "Sheep Poh", "S\u00efl\u00e9nt", "K\u00e2 \u00d4tik R\u00e6j"];
const professions = ["Scrapper", "Berserker", "Scrapper", "Scourge", "Scrapper", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Berserker", "Soulbeast", "Spellbreaker", "Vindicator", "Druid", "Vindicator", "Scrapper", "Scrapper", "Spellbreaker", "Chronomancer", "Herald", "Tempest", "Firebrand", "Vindicator", "Vindicator", "Chronomancer", "Firebrand", "Chronomancer", "Herald", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Dragonhunter", "Tempest", "Dragonhunter", "Firebrand", "Scrapper", "Scrapper", "Vindicator", "Scourge", "Tempest", "Firebrand", "Dragonhunter", "Catalyst", "Firebrand", "Reaper", "Druid", "Catalyst", "Daredevil", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[375.4375, 363.7632, 565.4696, 20.0, 17.2143, 329.3816, 348.9464, 881.72, 3620.3462, 363.3352, 128.0931, 291.994, 901.5484], [699.2727, 560.2308, 723.4869, 170.5625, 406.7647, 348.5917, 675.6711, 3050.3462, 472.2845, 469.8662, 407.7713, 957.0444], [597.0667, 222.0769, 702.1435], [269.5, 471.3056, 485.8455, 45.6716, 37.5976, 336.226, 158.3362, 161.1067, 2758.0758, 568.5857, 146.8232, 268.2443, 1024.9667], [500.0, 506.8462, 516.7569, 17.7231, 0.0, 392.6, 394.3103, 359.0, 2221.5957, 378.3477, 183.1263, 178.7053, 834.9014], [264.6111, 572.6667, 556.5104, 19.0926, 11.5233, 603.16, 156.3017, 2780.186, 0.0, 238.0836, 1306.6269, 364.7637, 445.7111], [376.6889, 193.0256, 463.6567, 22.1724, 11.5595, 364.3691, 221.7611, 401.5867, 2112.0943, 492.4194, 241.5585, 165.8784, 1018.5789], [291.3659, 77.5789, 433.8441, 131.4444, 37.9765, 262.8493, 166.8696, 1158.0141, 4538.4773, 531.7914, 345.7077, 126.5247, 869.4225], [314.5476, 335.6757, 453.3463, 5.0, 20.2317, 271.7467, 274.0603, 229.7763, 2712.4444, 315.7908, 410.5208, 192.6149, 530.4624], [144.2258, 305.6923, 383.1233, 3.7969, 31.9753, 488.4236, 159.5776, 1346.1071, 2866.8936, 368.4278, 166.925, 250.3742, 733.4674], [801.122, 463.0, 519.4749, 11.4308, 22.0238, 433.4667, 300.5, 460.589, 2255.2308, 737.0603, 375.835, 401.1313], [230.0488, 220.5135, 359.6748, 102.1846, 76.9167, 290.1081, 276.6207, 913.3562, 3032.0, 462.2829, 205.685, 260.2426, 463.6849], [542.1333, 207.4444, 382.9135, 27.1692, 30.1163, 259.1579, 277.6667, 806.5, 2375.3934, 393.5167, 548.7533, 247.452, 480.8723], [598.5556, 327.359, 393.1819, 57.5672, 38.6667, 293.9037, 261.1379, 91.5205, 1808.6429, 287.9514, 163.5033, 148.6881, 656.7553], [886.7632, 260.5833, 393.3301, 22.2812, 90.0833, 400.6779, 374.431, 280.3421, 2706.7674, 265.8825, 120.1078, 129.8428, 492.011], [183.7143, 417.5135, 380.7316, 20.8088, 28.8929, 261.1597, 206.8017, 370.4933, 2952.0, 345.6972, 223.3144, 129.1634, 418.9247], [203.2273, 131.973, 331.7243, 103.7258, 15.8214, 364.8027, 200.7759, 988.4167, 2685.2364, 452.2751, 211.05, 139.9536, 920.6618], [493.9524, 311.7838, 494.5526], [114.5476, 33.0811, 290.9884, 104.3538, 69.7619, 308.5, 178.8559, 351.2763, 3336.7031, 562.5568, 461.2304, 167.5494, 936.8172], [430.3952, 15.0794, 30.381, 576.4474, 272.6638, 615.4533, 3964.2609, 369.6678], [292.7778, 247.5278, 334.804, 72.0606, 51.0714, 463.8278, 178.028, 713.2958, 2476.7097, 276.2086, 312.8168, 246.7157, 410.2258], [272.6842, 560.7297, 358.9533, 20.7308, 251.2635, 286.069, 210.3333, 2586.5652, 387.563, 171.4257, 184.6026, 556.587], [378.2286, 208.2105, 354.5548, 18.2821, 16.8837, 586.9116, 352.713, 389.973, 4771.7273, 348.95, 198.5323, 166.4507, 696.7849], [321.9756, 440.2051, 316.6522, 56.2, 36.6706, 473.8414, 186.823, 498.1316, 4024.0645, 260.8515, 200.3776, 220.875, 524.3626], [102.2857, 396.2564, 314.9111, 19.3281, 3.9643, 207.6623, 307.6549, 432.6933, 2364.1538, 355.6839, 158.4167, 180.4984, 563.4831], [221.9512, 122.6757, 345.2761, 30.8, 0.0, 241.8548, 206.8729, 177.8472, 1551.2188, 262.7083, 234.4737, 102.3742, 475.3881], [198.119, 198.0, 297.5047, 31.8226, 29.7625, 315.4626, 112.7179, 367.7763, 2156.2899, 320.6381, 183.4906, 219.4092, 363.337], [474.981], [300.7317, 171.0, 300.7094, 6.7812, 16.0814, 190.0461, 127.4224, 487.5, 1978.678, 165.6447, 119.6618, 137.2096, 397.1319], [251.6883, 42.1231, 19.8372, 237.7237, 226.0256, 420.9474, 2097.3099, 266.0276, 259.5033, 106.8506, 478.2708], [258.2381, 194.7179, 245.7632, 20.8548, 2.9048, 288.1587, 143.9231, 542.2105, 1879.3125, 346.3944, 136.1814, 113.1538, 617.883], [346.0, 134.75, 218.3733, 2.3607, 43.1566, 211.1351, 231.0776, 403.3857, 2794.12, 217.9282, 174.5115, 131.8837, 477.2308], [23.4091, 335.1666], [167.6624, 54.58, 15.4217, 341.4218, 271.4655, 133.2895, 2458.6935, 266.7571, 245.2877, 170.8121, 639.7529], [288.0616], [157.5348, 105.2154, 12.6235, 329.5635, 201.0598, 126.2394, 2626.2, 199.1834, 207.4098, 128.8974, 327.6], [4.6591, 917.0227, 370.3362, 1186.5733, 4345.6087, 747.5393, 907.4844, 751.6921, 2339.6571], [465.3488, 58.1667, 243.0033], [34.9431, 32.2615, 45.1765, 416.8954, 265.5847, 593.3289, 2693.2381, 913.6384, 288.0887, 178.679, 1283.8804], [219.7232], [325.5122, 107.4872, 74.6802, 35.803, 12.1548, 431.4651, 183.4661, 347.7105, 1680.7091, 448.8895, 156.5685, 149.4106, 344.5745], [615.2806, 71.9516, 33.0465, 772.8268, 425.7551, 410.7746, 1726.6727, 488.0108, 267.18, 231.64, 435.5556], [52.7294, 828.1477, 361.045, 368.8056, 2733.9429, 873.3333, 200.0846, 273.8072, 690.4483], [12.3676, 99.5542, 373.7867, 272.2586, 381.5067, 1556.9783, 356.5965, 127.9557, 278.4719, 805.734], [222.8387, 225.6667, 5.2615, 9.716, 238.0833, 316.1207, 411.3684, 2692.75, 225.8424, 98.1216, 122.2776, 258.3548], [23.7619, 48.1176, 636.2585, 438.0256, 886.9383, 1797.8857], [167.0402, 244.5479, 963.7791], [471.5906, 258.9669], [26.0022], [511.5729]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

