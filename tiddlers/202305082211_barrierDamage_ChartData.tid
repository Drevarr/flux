created: 20230508221143000
creator: Drevarr
modified: 20230705163529073
modifier: drevarr
tags: ChartData
title: 202305082211_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Lord Erin The Wise", "Xanvias Einzbern", "Osh Kosh Johosh", "Corinna Barimen", "Sygaldry Verdandi", "Mistwalker Caelon", "N\u00e9azoule", "Jeckyll Mbs", "Koralia Danai", "High Sorcer Baradun", "Nazhul Naxxremis", "No Reserv\u00e9", "Sister Elon\u00edth", "Sumatra Satyricon", "Tegan Parker", "Kary\u00edna", "Red Date Sayaccho", "Tika Rucola", "Miphest\u00f6", "Inedible Plant", "Primal Clone", "Panther B Me", "Solus Sanctus", "Cerys Fireblade", "Fribble Bibble", "Skylar Shadowmoon", "Arriasa", "Ryvalia Fazebringer", "Kiloak", "Eibh\u00ebar", "Bella Fae", "Artakama Nahid", "Mincemeat Pie", "Grasszanine", "Zady Stardust", "Newtype Khan", "Drevarr Moonwillow", "Tootsy Pop Tart", "Rozaalyna", "Smol Gluvs", "Be\u00eb"];
const professions = ["Dragonhunter", "Weaver", "Berserker", "Chronomancer", "Guardian", "Firebrand", "Vindicator", "Reaper", "Berserker", "Firebrand", "Tempest", "Scourge", "Herald", "Firebrand", "Soulbeast", "Tempest", "Vindicator", "Tempest", "Chronomancer", "Tempest", "Vindicator", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Scrapper", "Scrapper", "Druid", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 7075, 1428, 0, 0, 6810, 877, 0, 3251, 0, 0, 1052, 2496, 614], [0, 0, 0, 0, 2345, 0, 0, 0, 13074, 2479, 1171, 3429, 0, 0, 269, 317, 1549], [0, 0, 0, 0, 1435, 5935, 0, 0, 0, 4974, 0, 0, 1114, 0, 0, 4140, 5782, 1718], [0, 952, 0, 0, 2419, 2427, 0, 0, 0, 6273, 655, 0, 0, 2583, 0, 7744, 85, 3934], [0, 0, 0, 0, 0, 0, 2479, 14569, 10139], [1300, 0, 0, 1951, 3075, 3451, 0, 0, 10710, 0, 0, 0, 3384, 425, 0, 3170], [0, 0, 0, 3293, 4729, 0, 0, 0, 11941, 4805, 0, 1304, 696, 0, 0, 2425, 765], [0, 0, 0, 1062, 3663, 0, 0, 23804, 0, 0, 1291, 0, 0, 3416, 0, 0], [0, 0, 0, 0, 371, 8063, 3450, 0, 0, 10755, 0, 0, 1304, 2465, 0, 0, 4519, 3713], [0, 0, 0, 0, 0, 0, 0, 0, 208, 15245, 3440, 633, 0, 6894, 0, 5941, 3138, 1248], [0, 0, 0, 724, 6055, 0, 0, 0, 14469, 3391, 0, 1171, 0, 5933, 0, 5150], [0, 3376, 28772, 4972, 0], [0, 962, 0, 1248, 0, 0, 13764, 0, 4679, 2158, 1248, 0, 6480, 3442, 7870], [0, 0, 0, 3827, 0, 0, 22288, 0, 0, 1239, 1478, 0, 6462, 0, 6988], [0, 0, 0, 0, 371, 16541, 0, 0, 0, 12095, 2445, 0, 1290, 0, 0, 2793, 4745, 3407], [0, 0, 0, 4029, 1230, 0, 0, 25454, 0, 5890, 0, 0, 0, 4968, 801, 1699], [0, 0, 0, 0, 2421, 5794, 3493, 0, 0, 15030, 1344, 0, 0, 3369, 0, 5962, 3416, 3437], [28287, 3362, 2838, 4575, 3269, 0, 2896, 0, 1342], [0, 1186, 0, 0, 1623, 13096, 1247, 0, 1167, 4235, 136, 2076, 3839, 5271, 0, 2461, 3413, 8562], [0, 264, 0, 0, 1188, 0, 0, 0, 31145, 2269, 1165, 174, 2007, 0, 2303, 3917, 7517], [0, 1188, 0, 0, 0, 17318, 0, 0, 544, 35191], [0, 0, 0, 0, 0, 13133, 2994, 0, 16319, 2216, 1634, 6259, 5418, 0, 4323, 2408, 2341], [0, 2, 0, 0, 0, 13045, 6948, 0, 0, 37087], [1062, 3461, 0, 0, 1551, 11720, 2131, 0, 0, 21948, 1277, 3779, 1751, 6003, 0, 2276, 0, 2465], [0, 13, 0, 252, 16310, 7246, 0, 1376, 30098, 2637, 0, 2465, 0, 0, 0, 1248, 5879], [0, 791, 0, 0, 5489, 12400, 210, 0, 209, 22559, 2895, 12362, 204, 3346, 0, 3188, 2277, 1699], [0, 7624, 0, 16264, 46622, 10040, 0, 1053], [0, 0, 0, 0, 1188, 16414, 5375, 0, 353, 24410, 5006, 13698, 5207, 0, 6169, 282, 5796], [0, 821, 0, 428, 14180, 0, 0, 0, 37280, 1344, 10920, 5014, 7165, 0, 4330, 3062, 2550], [0, 3565, 0, 698, 21199, 1248, 0, 0, 34759, 729, 9858, 3880, 2440, 0, 201, 3484, 7329], [0, 0, 0, 0, 525, 19237, 1708, 0, 0, 36359, 0, 0, 8764, 9712, 0, 5085, 3811, 6731], [0, 101, 0, 0, 0, 10166, 2328, 0, 0, 45279, 0, 5160, 8129, 4813, 0, 4214, 11617, 2678], [0, 0, 0, 1333, 6114, 1079, 0, 0, 39453, 1872, 20957, 8115, 4690, 0, 4021, 4609, 4941], [0, 0, 0, 0, 25339, 0, 0, 0, 41763, 2768, 3442, 16706, 10446, 8534, 3448, 5075], [0, 0, 0, 377, 521, 68675, 3441, 11133, 1248, 15846, 0, 2494, 5582, 9741], [0, 0, 0, 0, 3600, 25918, 0, 0, 1558, 41320, 1290, 8690, 11873, 6692, 0, 9949, 4642, 5158], [1874, 865, 0, 0, 4773, 17197, 3086, 204, 1055, 51220, 7631, 0, 8499, 9206, 0, 11223, 2797, 9170], [0, 2122, 34074, 1895, 102, 1305, 51148, 1800, 12710, 11261, 12559, 0, 6243, 6761, 14350], [0, 2188, 0, 0, 1610, 22833, 3474, 0, 987, 70688, 5208, 5929, 11186, 11094, 10790, 8580, 7838], [0, 0, 0, 0, 1188, 47187, 7376, 0, 1531, 67758, 7911, 14715, 14149, 6536, 0, 17294, 7855, 8853], [2420, 4563, 0, 0, 1190, 53025, 10663, 486, 2783, 84590, 2701, 15166, 16373, 1793, 0, 16131, 6170, 11960], [1188, 3353, 0, 0, 4349, 41708, 11540, 0, 326, 77849, 9665, 9471, 16869, 24174, 0, 8617, 10889, 15134]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

