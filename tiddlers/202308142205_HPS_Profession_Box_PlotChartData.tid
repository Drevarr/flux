created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Chronomancer_Dps', 'Chronomancer_Support', 'Dragonhunter_Dps', 'Druid_Cele', 'Druid_Dps', 'Druid_Support', 'Firebrand_Dps', 'Firebrand_Support', 'Herald_Cele', 'Herald_Dps', 'Reaper_Cele', 'Reaper_Dps', 'Scourge_Dps', 'Scrapper_Dps', 'Scrapper_Support', 'Spellbreaker_Cele', 'Spellbreaker_Dps', 'Tempest_Dps', 'Tempest_Support', 'Untamed_Dps', 'Vindicator_Dps', 'Vindicator_Support', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[143.8598, 3.4631, 5.2056, 13.7546, 1.5037, 16.1506], [2.1379, 115.0144, 36.1261, 21.1305, 1.8099, 13.376, 4.9468, 334.8715, 13.8851, 75.2986, 11.8973, 59.3365], [12.4799, 8.0868, 8.0812, 3.1511, 2.1601, 9.8924, 122.3731, 48.2018, 3.1402, 10.4225, 40.2534], [106.8245, 113.01, 5.3337, 3.746, 1.1038, 1.8021, 36.6889, 10.7674, 6.482, 4.8585, 27.5816, 0.3649, 63.6782], [1.4511, 5.9034, 6.1067, 7.2147], [245.9303, 4.478, 33.2234, 5.1687, 22.136], [488.6285, 1669.9371, 2181.1093, 5.2486, 2285.2499, 3323.0358, 390.2883, 1564.6143, 3466.0591, 278.6109, 308.0869, 396.6511, 73.2941, 288.1181, 252.4662, 36.0865, 1.069, 129.2379, 369.9031, 28.202, 6.037, 678.6801, 19.3919, 303.504, 193.1404, 1.8466, 34.1462, 1024.2371, 1675.1684, 1508.9724, 1353.9165, 1203.1453, 1884.7833, 2003.2266, 2630.0429, 1134.4965, 1820.6123, 30.108, 470.0542, 175.8072, 1850.4366, 1513.4994, 3.779, 56.1969, 179.2661, 102.0883], [24.9987], [15.1507, 0.4377, 61.0365, 48.0256, 62.0323, 32.6823, 23.9685, 33.5453, 130.3178, 230.6395, 99.2111, 35.3586, 77.4124, 55.3368, 61.0063, 28.0062, 683.3367, 288.6083, 194.2992, 105.6456, 25.909, 28.6074, 38.7826, 60.9602, 115.0197, 622.3701, 150.7034, 251.1138, 31.7748, 11.8062, 6.1848, 2.7448, 0.7072, 138.6056, 34.0761, 36.2695, 3.8416, 3.4939, 10.7425, 3.0072, 121.4963, 18.443, 41.5012, 1.3384, 16.4828, 7.1875, 23.7019, 16.0612, 1.1277, 147.3226, 24.956, 35.9059, 5.2181, 33.5886, 3.2433, 17.7759, 67.9845, 8.9068, 5.458, 13.9665, 16.5719, 8.5085, 67.0294, 25.7235, 0.8069, 2.5759, 6.1915, 2.188, 30.4315, 40.5546, 41.2405, 149.0812, 260.8714, 57.163, 0.0341, 27.9067, 21.8341, 1.5011, 83.1059, 311.4083, 65.7751, 93.8282, 24.3109, 64.5674, 108.3673, 315.6953, 66.9631, 41.3155, 69.0729, 15.3679, 76.55, 370.5879, 732.6335, 0.9918, 0.3188, 45.2892, 47.3458, 105.7264, 5.1968, 70.7533, 485.2224, 389.4252, 34.5263, 11.6241, 25.3654, 22.4543, 72.0858, 69.3579, 57.2045, 25.2232, 31.3526, 31.1094, 18.2911, 70.7805, 207.7567, 498.5406, 19.7413, 30.1948, 8.5358, 36.3052, 16.7331, 19.8389, 30.7876, 2.8043, 10.2924], [1.9443, 2.134], [4.4659, 3.373], [6.5763], [2.1784], [27.5429, 14.0442], [83.8678, 0.5222, 21.8246, 81.676, 48.0935, 4.4326, 56.699, 8.06, 18.1373], [822.6184, 7.407, 69.2221, 2470.7231, 86.3371, 0.0044, 2806.7165, 174.8876, 1391.5996, 2305.2647, 32.9853, 1482.109, 382.1961, 9.1573, 124.3423, 431.8555, 32.1927, 462.9296, 134.9289, 41.0064, 8.5417, 2.4428, 659.873, 254.3821, 57.2347, 141.271, 1760.1854, 5.5708, 988.0269, 220.6078, 2312.193, 18.9001, 1317.8221, 108.4198, 2213.7025, 5.0777, 198.1223, 326.3621, 3041.3775, 91.0905, 409.3076, 1337.4838, 51.787, 1452.1732, 18.4208, 64.9263, 915.0164, 532.3684, 15.7974, 20.5, 277.1671, 1259.2854, 13.9737, 62.3404, 729.0638, 150.6731, 4.0047, 323.0012, 4.4749], [5.5889, 4.6639, 32.8968, 4.6481, 3.0498, 34.5734, 17.4835, 11.9941, 34.3428, 16.2205, 5.8833], [6.4612, 12.2242, 1.9465], [37.1193, 1893.6939, 527.0823, 296.0533, 338.4025, 94.0706], [124.253, 21.1269, 589.1097, 244.8542, 38.9267, 1320.1738, 100.0991, 1592.9195, 179.1281, 237.8852, 3.2961, 122.7826, 3.3027, 4.8584, 5.8122, 5.6888, 1.1793, 218.1758, 21.0568, 227.1425, 674.7521, 1058.6587, 296.0856, 4.6403, 1021.6605, 110.8015, 63.3321, 31.6559, 742.7821, 80.2666, 4.3055], [1.654], [1.6834, 4.6008, 30.9845, 16.1624, 1.8468, 4.0035, 25.131, 49.3654, 20.5849, 92.2281, 11.7203, 4.3158, 5.8011], [1098.9817, 154.7779, 1029.2365, 23.2571, 75.895], [3.2658, 45.4278, 505.4063, 0.6353, 5.8618, 32.5668, 4.4677, 14.6167, 5.069, 398.7425]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
