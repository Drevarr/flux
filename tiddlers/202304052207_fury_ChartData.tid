created: 20230405220700000
creator: Drevarr
modified: 20230705163524489
modifier: drevarr
tags: ChartData
title: 202304052207_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Marrosch", "Ak\u00e1nt\u00f3r", "Tootsie Pop Rocks", "Mike The Archmagus", "Zenek Tryst", "Lord Erin The Wise", "Arriasa", "Tribal S", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Berserker", "Druid", "Scrapper", "Weaver", "Weaver", "Weaver", "Druid", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 104.1708, 60.4307, 78.9748, 66.1618, 0.0, 83.1226, 161.9352, 63.6152, 0.0, 0.0, 103.8832, 0.0, 69.4152], [61.8961, 152.6096, 190.6337, 616.5225, 24.4644, 0.0, 40.0436, 114.3841, 122.388, 31.0464, 34.0467], [26.5302, 0.0, 0.0, 187.2367, 3.9706, 11.4655, 11.9301, 41.1516, 24.393, 47.8554, 31.8133, 0.0, 168.8326, 78.2514, 41.6187, 156.2712, 2.347, 98.4847, 104.328, 107.8553, 25.8308, 104.067, 29.9009, 29.3205, 113.1624], [28.5957, 177.3466, 162.7446, 70.3102, 227.8518, 16.0591, 83.8832, 257.3424, 318.0762, 17.7841, 20.0322, 84.2856, 17.108, 231.2352], [23.7991, 41.6874, 27.4013, 253.4954, 12.1185, 28.0016, 11.4262, 28.0526, 46.3044, 27.9418, 19.8671, 22.3363, 207.9119, 107.0247, 66.5579, 155.9216, 16.1146, 57.1896, 245.5488, 283.8467, 0.0, 79.9614, 56.0842, 25.2146], [24.9696, 11.9205, 16.0512, 214.9686, 20.9282, 28.0016, 7.3063, 48.0778, 33.6144, 27.9418, 37.8902, 24.2046, 174.1113, 128.9473, 39.7426, 126.8174, 8.0573, 54.4518, 209.412, 243.3202, 28.6483, 23.994, 84.0731, 52.8769, 195.4116], [14.9405, 80.835, 140.0622, 462.136, 39.9744, 83.1995, 60.3943, 61.9554, 20.039, 34.9297, 0.0, 410.8856, 277.0768, 83.4434, 444.6912, 177.5743, 0.0, 414.288, 733.5128, 52.8563, 145.7496, 108.2382, 82.2763, 544.7196], [77.112, 89.5752, 212.6957, 597.9105, 25.6639, 41.1888, 44.1945, 106.9062, 65.072, 37.1631, 17.7548, 444.0902, 359.7431, 80.1715, 346.978, 22.6934, 379.1093, 936.2304, 952.2911, 88.3117, 427.986, 223.6993, 34.9266, 391.158], [86.0396, 151.3512, 176.0264, 555.3821, 57.7386, 85.7644, 117.2707, 67.3495, 161.3604, 101.4496, 158.4949, 554.6871, 451.62, 216.1702, 327.313, 113.7259, 241.6108, 613.2672, 764.0287, 145.5408, 424.638, 96.1291, 125.0726, 499.41], [129.3233, 191.437, 158.464, 859.4091, 35.0112, 36.0994, 123.2579, 110.6167, 208.1442, 123.7779, 179.6085, 32.0943, 743.783, 299.3038, 189.9498, 485.1574, 141.2426, 374.4702, 921.1104, 959.5568, 175.271, 220.968, 284.4572, 45.1388, 542.5992]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

