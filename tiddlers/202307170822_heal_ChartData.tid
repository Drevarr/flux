created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Mierin Farshaw", "Sakis Ranger", "Violet Stab", "Elonith Primal", "Legoh Brave", "Tegan Parker", "Gestern Yesteryear", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Druid", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[118.3305, 4.0, 349.7143, 638.5556, 164.8506, 136.6803, 80.2286, 234.1311, 0.4659, 38.8529, 251.4412, 14.3056, 9.1923, 424.4394, 29.3968, 51.5208, 52.4386, 307.549, 50.3608, 9.6429, 48.9474, 0.0, 295.9318, 45.75, 106.6777, 58.9309], [227.3696, 705.2024, 14.974, 271.6444, 243.2993, 298.7013, 911.1015, 1048.8729], [111.5079, 40.3542, 502.75, 824.6536, 412.3402, 91.9821, 347.7368, 4.3, 200.3409, 273.2778, 68.7708, 500.6864], [111.3, 2428.5909, 1397.5486, 804.7907, 1094.3654], [603.1271, 0.0, 1693.8571, 796.4815, 459.0402, 941.2377, 1112.5429, 257.541, 244.1364, 205.1176, 404.5, 577.9583, 11.9231, 1342.0909, 480.2698, 0.0, 556.7588, 887.451, 1474.866, 155.0893], [238.027, 282.6905, 2.8889, 844.5517, 1188.8197, 1862.3143, 39.0328, 510.2841, 368.2941, 172.2353, 597.6389, 269.3077, 1879.303, 386.5079, 50.5833, 360.2281, 1392.9281, 1665.1856, 98.8036], [368.3043, 410.2857, 55.7792, 56.3556, 158.2774, 392.7792, 379.8477, 638.2712, 57.6216, 2258.1905, 1350.7407, 785.8736, 691.4508, 868.4286, 171.5738, 622.1591, 2.6176, 247.7941, 188.125, 84.8077, 1482.2273, 227.9683, 53.125, 244.6404, 723.1046, 277.1649, 76.9286, 1308.5526, 80.0, 1001.4773, 964.5556, 368.5615, 581.8469], [121.7391, 130.369, 152.2468, 3.8667, 56.8686, 136.8442, 41.2792, 95.2203, 129.1216, 3315.9048, 1858.8148, 1476.0057, 1748.3852, 2813.5714, 958.5902, 987.0682, 788.7647, 1417.2353, 1007.7778, 698.0385, 3962.1667, 875.4603, 274.9583, 1953.4781, 3465.5229, 3061.2371, 1141.0357, 1216.5, 270.45, 3657.9545, 2123.625]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

