created: 20230527000807000
creator: Drevarr
modified: 20230705163531656
modifier: drevarr
tags: ChartData
title: 202305270008_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Lucas Ryn", "Aronorf Xideliesi", "Gavann", "Air One Com", "Zefirokai", "Primal Clone", "Miphest\u00f6", "Black Raspberry Pie", "Eibh\u00ebar", "Zaedy Sagemist", "Venomina The Siren", "Arriasa", "Artakama Nahid", "Tegan Parker", "Elonith Primal", "Johosh Of The North", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Vindicator", "Tempest", "Druid", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.9818, 16.9817, 1.9919, 0.0, 0.0, 59.692, 14.0541, 28.0461, 14.0916, 0.0, 0.0, 20.6489, 0.0, 18.1094, 0.0, 21.0323, 0.9928, 1.0, 16.9761, 0.0, 7.027, 22.1373, 0.0, 7.9626, 0.0, 12.037], [48.349, 25.9791, 0.0, 0.0, 38.3565, 1.0, 59.2895, 12.0382, 0.0, 3.9884, 12.3298, 0.0, 12.0195, 23.6344, 3.9928, 0.0, 14.0096, 0.0, 4.009, 32.9542, 2.9813, 1.0, 2.0], [56.0312, 35.9869, 6.9839, 90.0591, 20.0395, 18.0687, 0.0, 0.0, 14.883, 0.0], [41.2031, 24.9817, 0.0, 0.0, 0.0, 88.4831, 5.0135, 15.0263, 12.0534, 0.0, 0.0, 17.5, 1.0, 18.0312, 21.2366, 2.9928, 1.0, 1.9952, 0.0, 0.0, 8.027, 23.9754, 0.975, 2.9813, 2.0, 5.0], [127.4219, 86.0785, 0.9919, 0.0, 0.0, 46.0591, 10.0405, 78.2303, 41.4733, 1.0, 5.9884], [85.25, 69.0419, 0.0, 0.0, 0.0, 111.3354, 2.0, 57.0526, 27.0992, 0.0, 4.9884, 15.0532, 0.0, 54.5859, 0.0, 23.0, 24.2174, 0.0, 18.177, 0.0, 0.0, 19.2973, 47.9577, 0.0, 22.1776, 18.0244, 11.0123], [129.3958, 70.0785, 0.0, 191.5717, 9.0405, 53.5132, 7.0229, 0.0, 6.9884, 28.7979, 0.0, 10.0156, 0.0, 31.3656, 7.9855, 26.3876, 0.0, 0.0, 9.036, 5.9894], [110.5078, 57.123, 3.9919, 0.0, 3.9688, 124.8924, 2.0, 72.0329, 43.2137, 0.0, 11.9884, 28.7234, 17.1562, 44.6602, 35.0108, 23.9783, 0.0, 30.9952, 0.0, 0.0, 21.0811, 52.1197, 1.975, 10.9533, 30.0732, 26.1975], [114.3646, 67.1649, 0.0, 0.0, 0.0, 174.3523, 2.0, 69.6382, 55.3511, 0.0, 5.9884, 22.5532, 2.0, 27.1445, 26.172, 1.9928, 4.1481, 21.9713, 1.0, 0.0, 21.1081, 65.1197, 2.95, 27.0374, 11.0122, 17.0123], [185.3229, 118.3089, 0.0, 2.2632, 251.4515, 33.4189, 121.5263, 74.6183, 0.0, 22.0, 45.117, 10.0312, 8.0117], [218.5, 159.6335, 0.9919, 0.0, 236.8397, 0.0, 167.2171, 85.7863, 0.0, 25.0347, 70.3404, 10.3646, 76.957, 58.4839, 25.0217, 3.0, 12.9809, 4.0, 39.3964, 123.9437, 3.95, 46.0654, 19.0244, 27.2346], [303.0391, 227.4791, 32.0, 1.9737, 324.4051, 17.0263, 141.2214, 0.0, 24.9595, 112.4043, 43.4375], [286.1719, 225.801, 13.0484, 0.0, 3.9688, 283.5464, 59.027, 162.4079, 39.1527, 0.0, 26.1734, 87.3191, 26.4792, 162.3633, 97.8602, 70.5435, 7.0, 93.9569, 7.0, 110.6667, 203.8451, 19.95, 46.1121], [279.8958, 249.8272, 4.9839, 0.0, 0.0, 343.0042, 60.7838, 216.6513, 116.6183, 0.0, 35.4162, 115.5851, 25.0833, 140.5078, 0.0, 74.6882, 31.0217, 3.0, 80.9378, 15.0, 92.5135, 215.5211, 0.0, 84.486, 60.2927, 34.3951], [316.9922, 268.6178, 23.9758, 0.0, 390.6034, 69.8784, 230.9934, 134.374, 0.0, 49.0231, 71.1915, 57.4688, 190.0938, 0.0, 88.8065, 59.087, 0.0, 131.4689, 22.3636, 7.0638, 119.955, 231.507, 8.875, 72.8972, 76.7256, 73.679], [327.9219, 256.2356, 15.1855, 0.0, 8.0938, 390.1392, 68.7297, 215.6513, 136.2214, 45.9538, 107.7447, 38.1771, 202.8398, 112.5376, 67.029, 0.0, 100.5311, 23.0909, 15.5957, 158.964, 252.5915, 19.775, 71.757, 75.8415, 61.1605], [337.1276, 285.0812, 16.0323, 0.0, 9.0, 358.9895, 84.0, 193.1184, 126.4122, 0.0, 29.9711, 122.266, 25.125, 219.3516, 1.0, 127.6022, 57.1449, 31.2963, 145.7177, 27.4242, 1.0, 138.8649, 239.6268, 24.025, 72.3084, 70.7744, 62.9383]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

