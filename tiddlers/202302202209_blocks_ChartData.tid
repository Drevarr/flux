created: 20230220220953000
creator: Drevarr
modified: 20230705163519671
modifier: drevarr
tags: ChartData
title: 202302202209_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Bringer", "Sumatra Satyricon", "Black Raspberry Pie", "Aveliad Frostmoon", "Etchery Howls", "Xyntharos", "Jeckyll Mbs", "Rozaalyna", "Legacy Of Mathus", "Skye Nightroad", "Smol Gluvs", "Lord Erin The Wise", "Veron Blackburn", "Belvyn Brightblade", "Zadie Miststep", "Venomina The Siren", "Dark Sidiuz", "My Birthday Girl", "Ace Hammers", "Sp\u00edcy Cheese", "Kira Dragonblaze", "Demon Sekhmet", "Be\u00eb", "Smol Daddy Tika", "Kahless The Drunk", "Husky Guard", "Blanco Padre Guard", "Zaylen Harker", "Jupi Jupi Jupi", "Sygaldry Verdandi", "Mistwalker Caelon", "Mac Aaroni", "Xanvias Tseli", "Koralia Danai", "Rina Of Theros", "Newtype Khan", "Eibh\u00ebar", "Primal Clone", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Bella Sassy", "Fribble Bibble", "Arka\u00f1", "Ravioli Fetabringer"];
const professions = ["Scrapper", "Soulbeast", "Chronomancer", "Scrapper", "Druid", "Vindicator", "Berserker", "Scourge", "Berserker", "Scrapper", "Scourge", "Weaver", "Herald", "Firebrand", "Tempest", "Tempest", "Scourge", "Scrapper", "Vindicator", "Berserker", "Dragonhunter", "Berserker", "Scourge", "Berserker", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Vindicator", "Tempest", "Berserker", "Firebrand", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand", "Scrapper", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 64, 0, 1, 0, 1, 1, 1, 0, 0, 3, 2, 0, 1, 0, 0, 2, 0, 0, 3, 1, 0, 1, 0, 0, 1], [0, 25, 50, 0, 1, 0, 0, 0, 2, 2, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 5, 1, 3, 2, 0, 0, 1], [62, 0, 2, 0, 0, 1, 1, 2, 1, 1, 12, 3, 0, 0, 0, 0, 1, 0, 1, 6, 1, 5, 1, 0, 0, 3], [0, 19, 103, 0, 1, 0, 2], [0, 32, 83, 1, 0, 0, 2, 3, 2, 0, 5, 1], [0, 30, 68, 0, 0, 0, 1, 0, 1, 1, 0, 0, 6, 1, 1, 1, 1, 0, 0, 4, 0, 7, 2, 0, 0, 1, 0, 7], [0, 24, 80, 1, 0, 3, 0, 0, 1, 4, 0, 5, 0, 1, 0, 0, 2, 0, 1, 4, 3, 2, 1, 0, 0, 2], [57, 70, 0, 0, 0, 0, 0, 4, 3], [0, 22, 70, 0, 1, 1, 0, 0, 1, 5, 2, 1, 6, 2, 0, 1, 0, 1, 0, 1, 10, 2, 4, 2, 1, 0, 3], [0, 35, 97, 1, 0, 1, 1, 1], [0, 20, 66, 1, 1, 1, 0, 2, 0, 4, 2, 4, 5, 4, 0, 1, 0, 0, 1, 3, 0, 7, 3, 4, 1, 3, 0, 6], [1, 33, 90, 0, 1, 0, 0, 0, 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 4, 2, 3, 2, 1, 0, 4], [0, 26, 101, 0, 2, 3, 2, 2, 3, 2, 0, 1, 0, 0, 2, 1, 0, 7], [1, 38, 108, 1, 2, 1, 2, 1, 2, 4], [0, 35, 86, 0, 1, 0, 1, 0, 2, 3, 1, 1, 8, 3, 0, 0, 1, 0, 0, 0, 0, 9, 1, 2, 2, 2, 0, 2], [0, 27, 91, 0, 1, 0, 0, 0, 4, 2, 0, 1, 8, 3, 1, 0, 0, 0, 1, 0, 0, 12, 1, 3, 1, 2, 0, 3], [0, 39, 100, 0, 0, 0, 0, 2, 2, 0, 1, 5, 1, 0, 0, 0, 0, 1, 0, 2, 3, 2, 1, 2, 0, 0], [0, 21, 97, 0, 2, 0, 0, 0, 2, 3, 2, 1, 5, 1, 0, 1, 1, 0, 0, 2, 0, 10, 1, 4, 3, 0, 1, 4], [0, 25, 89, 0, 1, 0, 0, 0, 2, 3, 2, 2, 7, 2, 0, 0, 2, 0, 1, 0, 11, 2, 6, 2, 2, 0, 4], [0, 29, 99, 0, 1, 0, 0, 1, 0, 2, 3, 1, 7, 4, 0, 0, 1, 3, 0, 0, 7, 3, 5, 0, 1, 0, 0], [2, 66, 96, 1, 2, 1, 1, 1, 2, 3], [0, 29, 100, 0, 0, 1, 0, 0, 5, 1, 0, 3, 7, 2, 0, 1, 0, 0, 4, 5, 0, 8, 3, 5, 2, 1, 0], [22, 96, 0, 0, 0, 1, 0, 5, 1, 3, 4, 10, 3, 0, 3, 1, 2, 0, 0, 1, 12, 3, 3, 4, 2, 0, 7], [0, 22, 108, 0, 2, 0, 0, 1, 4, 4, 1, 3, 8, 1, 0, 1, 2, 3, 1, 9, 4, 2, 2, 2, 6], [0, 37, 90, 2, 1, 4, 2, 0, 3, 4, 4, 1, 9, 3, 2, 3, 1, 1, 2, 0, 11, 2, 4, 3, 1, 0, 3], [0, 33, 131, 1, 2, 1, 2, 0, 2, 6, 3, 3, 5, 2, 0, 2, 1, 1, 2, 1, 1, 5, 3, 3, 1, 1, 2], [0, 50, 105, 2, 1, 1, 1, 2, 2, 4, 3, 2, 7, 6, 2, 2, 0, 1, 1, 2, 15, 3, 4, 2, 2, 2, 5], [1, 50, 134, 1, 2, 0, 1, 1, 6, 3, 2, 1, 6, 2, 2, 1, 4, 2, 0, 5, 1, 8, 5, 1, 7], [2, 48, 131, 4, 2, 0, 2, 1, 3, 5, 4, 2, 6, 5, 1, 1, 1, 4, 1, 2, 1, 8, 3, 9, 2, 3], [45, 136, 3, 1, 0, 1, 0, 3, 4, 0, 0, 15, 6, 2, 2, 2, 1, 3, 0, 15, 3, 4, 4, 3, 1, 7], [0, 62, 159, 3, 2, 1, 0, 3, 6, 7, 3, 7, 3, 0, 0, 0, 2, 0, 1, 1, 8, 3, 4, 4, 2, 1, 5], [0, 59, 168, 3, 1, 0, 1, 1, 4, 7, 1, 4, 12, 3, 0, 0, 1, 0, 0, 14, 3, 5, 4, 3, 2, 7], [0, 61, 157, 4, 2, 1, 1, 0, 3, 9, 4, 2, 8, 5, 1, 3, 1, 2, 1, 5, 1, 11, 5, 3, 3, 4, 1, 5], [0, 56, 168, 3, 2, 4, 1, 2, 8, 4, 1, 11, 4, 0, 1, 2, 1, 1, 2, 0, 12, 3, 5, 7, 3, 1, 6], [0, 55, 199, 4, 0, 1, 1, 1, 3, 4, 4, 1, 7, 1, 0, 2, 0, 0, 5, 0, 0, 8, 5, 2, 3, 3, 0, 4], [0, 62, 158, 5, 2, 3, 1, 2, 6, 8, 2, 0, 10, 2, 1, 3, 0, 3, 1, 2, 0, 19, 3, 7, 4, 4, 0, 7], [0, 66, 178, 3, 0, 1, 3, 0, 2, 7, 3, 3, 10, 3, 0, 3, 1, 1, 1, 2, 0, 15, 3, 7, 5, 3, 1, 2], [65, 190, 1, 1, 2, 2, 2, 2, 7, 1, 1, 9, 5, 0, 1, 0, 1, 1, 1, 15, 9, 5, 5, 0, 1, 4], [0, 67, 182, 4, 3, 1, 3, 1, 5, 5, 5, 4, 13, 3, 6, 3, 5, 1, 1, 0, 1, 20, 5, 9, 6, 6, 2, 4], [1, 70, 181, 6, 2, 1, 2, 2, 5, 6, 7, 3, 19, 6, 0, 3, 3, 3, 4, 2, 1, 15, 2, 6, 8, 4, 1, 11], [0, 79, 185, 1, 1, 2, 2, 2, 7, 6, 5, 5, 15, 7, 2, 2, 5, 3, 5, 1, 0, 17, 3, 11, 4, 4, 2, 3], [0, 75, 241, 0, 1, 1, 2, 1, 6, 5, 4, 3, 12, 4, 0, 3, 5, 0, 2, 0, 0, 13, 3, 5, 5, 2, 0, 2], [0, 85, 236, 0, 1, 2, 0, 0, 6, 2, 3, 4, 11, 7, 1, 0, 0, 1, 3, 0, 16, 2, 6, 6, 1, 1, 1], [1, 76, 231, 5, 2, 2, 3, 2, 7, 4, 2, 2, 22, 8, 5, 4, 8, 2, 5, 6, 8, 14, 4, 8, 5, 1, 0, 12]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

