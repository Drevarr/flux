created: 20230501220820000
creator: Drevarr
modified: 20230705163527943
modifier: drevarr
tags: ChartData
title: 202305012208_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Sub Train", "Sygaldry Verdandi", "Kiloak", "Whose Guardian", "Bella Sassy", "Koralia Danai", "Gabe Malhorn", "Johosh The Great"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1007.8001, 0.0, 0.0, 0.0, 113.8, 226.5909, 632.3164], [213.8232, 0.0, 0.0, 245.8354, 265.5129, 2045.8813, 101.1752, 1387.8284, 0.0, 94.6398, 40.0428, 0.0, 332.031], [1631.1952, 42.4152, 0.0, 8.712, 64.5183, 162.3653, 1594.3498, 117.856, 1038.8497, 0.0, 146.6982, 18.0148, 122.1067, 231.8785], [1728.2849, 69.0097, 80.1966, 23.6907, 132.4102, 200.0572, 1458.3307, 99.2264, 1435.5887, 45.5202, 207.9254, 40.0207, 0.0, 309.9635], [1754.2048, 0.0, 0.0, 38.4912, 160.4358, 123.1797, 2200.8397, 108.9936, 1385.0487, 65.6568, 278.0126, 48.0249, 35.1226, 403.326], [2070.5152, 295.2565, 64.1828, 2.1384, 88.3984, 297.4061, 1356.7469, 77.9984, 1694.6062, 140.0652, 185.3564, 103.8996, 24.6609, 410.9308], [2617.0292, 423.764, 128.3018, 31.9077, 149.4769, 352.7579, 1732.0906, 138.1096, 2306.6456, 134.1054, 216.9618, 64.1558, 585.3659], [2678.0947, 256.9178, 138.127, 55.7865, 164.6033, 303.9956, 2312.3237, 107.2536, 2091.0925, 66.4884, 271.621, 102.5545, 24.0404, 425.3256], [3029.5507, 401.5372, 0.0, 27.5319, 40.3515, 361.456, 2595.9836, 128.9224, 2071.8873, 197.7822, 392.885, 63.9009, 30.0144, 526.904]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

