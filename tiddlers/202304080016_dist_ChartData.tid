created: 20230408001602000
creator: Drevarr
modified: 20230705163524656
modifier: drevarr
tags: ChartData
title: 202304080016_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Newtype Khan", "Zenek Tryst", "Smol Daddy Tika", "Kmpek", "Zadie Miststep", "Mac Chiato", "Xanvias Einzbern", "Vocare Veilrender", "Jeckyll Mbs", "Kos\u00e4ir", "N Er Gal", "Anita Strips", "Solus Sanctus", "Viral Marketing", "S E M C H O R \u00c1", "Air One Com", "Sister Elon\u00edth", "Mike The Archmagus", "Smol Gluvs", "Bella Sassy", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Spellbreaker", "Tempest", "Berserker", "Vindicator", "Tempest", "Tempest", "Berserker", "Vindicator", "Berserker", "Vindicator", "Dragonhunter", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Scourge", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[801, 281, 591, 9825, 333, 319, 1879, 418, 557, 552, 291, 1635, 2442, 336, 379, 685, 477, 282, 351, 277, 2108, 1775, 307, 329, 1007, 667], [735, 444, 2657, 13691, 287, 200, 2323, 463, 804, 1313, 229, 3217, 1973, 236, 327, 342, 2395, 251, 660, 304, 1358, 1822, 331, 290, 501, 358], [1880, 337, 1920, 12588, 262, 285, 2738, 3631, 280, 725, 586, 2187, 573, 340, 477, 415, 350, 276, 544, 275, 2094, 3591, 306, 393, 257, 692], [1695, 349, 1615, 10698, 379, 259, 3335, 8204, 316, 1282, 378, 6465, 4674, 311, 532, 161, 355, 264, 350, 6065, 4866, 4061, 320, 529, 268, 299], [4650, 459, 2207, 12024, 472, 391, 3493, 9910, 709, 547, 200, 2139, 3453, 349, 239, 227, 359, 348, 1394, 6722, 1162, 4352, 363, 6829, 591, 268], [652, 428, 2681, 11571, 289, 219, 2249, 4177, 371, 548, 381, 3637, 2325, 398, 271, 723, 308, 216, 463, 360, 1847, 1766, 291, 249, 610, 249], [5582, 216, 1770, 9893, 290, 165, 3357, 347, 1421, 561, 410, 5907, 2552, 267, 319, 221, 336, 281, 412, 246, 2346, 2452, 409, 676, 762, 451], [4333, 323, 938, 16160, 323, 171, 1646, 608, 843, 1673, 328, 5380, 1917, 267, 293, 374, 288, 284, 342, 279, 1698, 5113, 278, 304, 397, 253], [6304, 554, 2965, 10726, 420, 341, 3473, 9625, 186, 3840, 218, 3826, 4041, 301, 273, 200, 5692, 251, 423, 779, 1617, 1202, 615, 9093, 448, 211], [613, 587, 890, 12687, 417, 233, 2368, 10480, 720, 567, 201, 3761, 2502, 274, 319, 325, 330, 214, 367, 587, 3874, 209, 346, 480, 290], [497, 443, 5650, 12623, 329, 1633, 633, 323, 6177, 339, 434, 282, 431, 394], [314, 383, 223, 235, 595, 9758, 918, 420, 1394, 9912, 784, 396, 456, 430], [683, 621, 760, 5471, 287, 443, 1106, 320, 581, 351, 250, 1797, 541, 284, 285, 180, 443, 245, 431, 257, 2132, 2713, 390, 250, 506, 335], [5977, 696, 1763, 2347, 331, 327, 2657, 312, 698, 498, 471, 7485, 8225, 326, 367, 573, 530, 324, 334, 349, 1212, 3236, 550, 616, 351, 232], [660, 357, 1846, 11126, 275, 279, 1583, 259, 323, 294, 305, 2425, 1584, 280, 238, 366, 316, 232, 308, 313, 3268, 781, 455, 289, 397, 406], [262, 737, 5206, 15707, 332, 257, 2339, 285, 246, 254, 504, 1986, 367, 329, 236, 208, 321, 344, 336, 274, 3056, 1466, 428, 858, 549, 293], [1779, 528, 5373, 15714, 393, 251, 3151, 250, 229, 1052, 201, 9788, 559, 335, 4162, 301, 239, 5608, 6010, 7639, 10527, 4792, 340, 357, 481], [1365, 594, 413, 11643, 363, 247, 272, 2529, 669, 382, 454, 3428, 626, 303, 237, 843, 434, 3855, 295, 413, 638, 904, 714, 346, 582, 433], [4109, 435, 878, 11558, 382, 223, 232, 6462, 562, 500, 468, 1219, 460, 247, 217, 553, 958, 218, 415, 294, 3250, 1634, 404, 266, 410, 260], [476, 247, 1034, 2393, 336, 217, 1087, 4523, 235, 622, 349, 1212, 469, 320, 349, 239, 222, 287, 354, 1071, 3221, 581, 322, 416, 243], [635, 287, 1560, 10278, 239, 259, 1239, 147, 193, 275, 283, 764, 4413, 227, 223, 788, 240, 5427, 304, 243, 2101, 581, 226, 192, 360, 170], [547, 271, 2145, 2565, 240, 193, 200, 338, 163, 417, 118, 3030, 296, 206, 182, 299, 237, 201, 216, 266, 1920, 1135, 377, 237, 375, 186]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

