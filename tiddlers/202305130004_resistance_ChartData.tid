created: 20230513000456000
creator: Drevarr
modified: 20230705163529820
modifier: drevarr
tags: ChartData
title: 202305130004_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Leetle Dim", "Black Raspberry Pie", "Eibh\u00ebar", "Jupiter Four", "Sub Train", "Ryvalia Fazebringer", "Miphest\u00f6", "Air One Com", "Jeckyll Mbs", "Lucas Ryn", "Grasszanine", "Tika Fiery", "Domitia Gravestorm", "Xanvias Einzbern", "Ark Darkness", "Koralia Danai", "Bella Sassy", "Aronorf Xideliesi", "Solus Sanctus", "Johosh The Great", "Blancooo Padreee", "Newtype Khan"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.679, 32.4979, 81.4184, 182.229, 16.0063, 13.7033, 0.0, 6.071, 26.3232, 0.0, 4.9395, 18.8902, 0.0, 0.0, 27.5425, 36.8525, 0.0, 11.7477, 0.0, 9.8035, 6.71, 32.1283, 8.1451, 33.9697, 0.0, 0.0987, 3.4181], [7.0157, 18.6278, 46.1262, 197.4896, 19.0984, 16.6522, 6.9161, 7.0829, 21.6, 8.7445, 5.1906, 27.6736, 1.4807, 14.0608, 26.45, 29.111, 4.6224, 25.0395, 16.5158, 0.0, 30.4349, 5.7895, 31.5586, 5.2983, 6.9738], [13.2019, 29.353, 78.792, 179.9848, 10.3677, 19.3408, 5.1014, 3.467, 29.5488, 4.2806, 9.5843, 5.071, 24.2445, 0.0, 6.8876, 26.45, 28.3046, 6.9336, 25.7779, 4.523, 18.9888, 30.9053, 6.4896, 28.8796, 5.742, 0.5725, 4.5651], [16.6234, 20.16, 67.794, 210.506, 10.4284, 13.9635, 0.0, 6.0264, 30.6432, 0.0, 28.7565, 5.0467, 26.1625, 41.2877, 5.0328, 36.0488, 17.664, 0.0, 38.3846, 5.9409, 31.7729, 0.0, 7.9552, 0.0], [15.552, 62.0122, 161.6877, 298.4786, 8.852, 10.7545, 7.246, 0.0, 89.3376], [18.2131, 32.0947, 71.0769, 219.0339, 8.6095, 24.8915, 14.8854, 6.5323, 22.0608, 15.7576, 7.4515, 26.2298, 7.4718, 7.4589, 28.6925, 35.8042, 7.5384, 32.9608, 0.0, 17.8406, 0.0, 26.4835, 8.0221, 35.3628, 0.0, 0.0, 5.0009], [17.5219, 37.2557, 90.4467, 263.4691, 9.5189, 14.0503, 6.9668, 7.2614, 24.4224, 15.8777, 5.3587, 36.5773, 6.9511, 47.725, 53.9482, 6.9984, 45.8498, 0.0, 18.1939, 6.5768, 38.5258, 7.0288, 50.7938, 1.7487, 1.7371, 0.0], [22.6022, 27.9014, 121.471, 324.0625, 17.4008, 34.692, 4.8603, 0.0, 60.3648, 2.4398, 64.7923, 16.2286, 4.9832, 57.5575, 53.0611, 0.0, 80.1532, 8.6995, 4.2624, 63.3158, 5.0516, 49.6687, 0.0, 0.0], [36.3226, 18.5472, 134.603, 504.0473, 44.319, 0.0, 0.0, 54.3168, 0.0, 7.9447, 16.0026, 26.6448, 85.6397, 0.0, 66.3916, 29.6136, 15.8093, 0.0, 79.0272, 0.0, 88.2463, 28.0836, 0.0, 0.0], [12.1651, 53.545, 67.6298, 437.619, 31.2851, 70.9451, 0.0, 19.4482, 68.3712, 0.0, 0.0, 77.3658, 17.6474, 116.3225, 86.3654, 0.0, 101.1649, 0.0, 15.721, 0.0, 42.9475, 18.797, 52.0798, 5.2461, 16.2658], [132.2603, 219.5238, 0.0, 28.3438, 158.7, 118.1376, 0.0, 191.6561, 0.0, 0.0, 94.8326, 0.0, 185.7083, 101.007, 20.0756, 103.0465], [47.0362, 26.208, 195.9951, 515.7172, 20.4323, 69.1238, 7.411, 17.5138, 81.2736, 5.045, 0.0, 0.0, 33.8701, 0.0, 40.9129, 48.0125, 71.689, 8.0352, 137.7508, 0.0, 14.7936, 15.1182, 39.5136, 6.0166, 27.0579, 9.918, 7.9355, 19.7743], [18.3168, 44.352, 118.6805, 412.9328, 35.8323, 63.7465, 0.0, 20.6981, 108.1152, 0.0, 49.8409, 55.5878, 16.0328, 0.0, 87.975, 81.0432, 42.1416, 102.1047, 0.0, 12.2765, 38.5281, 71.4538, 0.0, 88.407, 0.0, 0.0, 44.8018], [42.2669, 63.2218, 191.3989, 530.9777, 21.6449, 35.993, 0.0, 30.5189, 71.7696, 0.0, 100.3469, 13.9053, 0.0, 112.125, 103.703, 19.332, 129.9637, 0.0, 22.0358, 33.35, 84.625, 0.0, 116.1079, 0.0, 0.0, 0.0], [19.9411, 42.336, 290.3813, 615.8085, 25.404, 74.5878, 16.7381, 19.7309, 155.1168, 3.9094, 6.9316, 133.6755, 37.2993, 0.0, 126.0975, 93.2198, 0.0, 71.5606], [15.3446, 27.4982, 239.659, 590.6734, 44.5024, 51.2574, 7.2714, 7.9608, 124.3008, 16.3959, 113.7024, 9.0972, 11.7121, 123.51, 64.7539, 11.9664, 104.8571, 0.0, 20.3578, 6.0106, 73.8058, 87.389, 0.0, 0.0], [21.911, 79.9142, 154.301, 453.3284, 56.204, 75.3684, 6.6242, 18.1685, 140.6016, 8.0699, 6.2384, 0.0, 127.7197, 0.0, 7.9985, 89.2975, 134.6688, 8.0352, 135.804, 0.0, 15.9418, 0.0, 87.2592, 8.0599, 173.9207, 0.0, 7.975, 6.5838], [27.4061, 49.271, 241.6288, 589.3269, 4.9717, 85.9494, 6.8399, 38.2714, 122.2272, 10.504, 164.4774, 0.0, 107.065, 159.3446, 3.4776, 137.4822, 0.0, 15.5002, 29.5704, 116.0477, 0.0, 103.1415, 10.1007, 1.7371], [29.1686, 63.4637, 159.7179, 721.2859, 48.2615, 160.7974, 10.5708, 37.8101, 135.9936, 26.5684, 54.7596, 0.0, 105.9418, 12.8671, 16.1874, 134.6075, 194.423, 0.0, 121.9081, 0.0, 20.4019, 40.6426, 15.609, 86.4781, 13.6503, 12.9889, 4.8174], [26.6458, 44.9165, 298.5888, 743.279, 38.7426, 98.9589, 52.9554, 27.0518, 165.7152, 0.0, 16.4492, 159.2435, 7.9228, 11.9342, 115.9775, 119.6698, 20.0016, 72.9703, 0.0, 22.2125, 12.5374, 119.5286, 8.0032, 118.6261, 0.0, 23.8854, 5.9185], [42.025, 169.9085, 421.2089, 523.3474, 39.8339, 61.7518, 0.0, 47.1845, 155.7504, 81.0155, 135.8194, 290.8134, 141.5287, 120.1175, 231.5981, 0.0, 186.3529, 181.5859, 0.0, 89.6112, 133.0391, 5.6637, 39.4603, 0.0], [157.4554, 116.6861, 412.8372, 709.1672, 35.4685, 268.6895, 140.0849, 6.7704, 182.016, 34.1515, 238.5946, 25.1063, 124.2575, 335.3011, 0.0, 126.0701, 8.2037, 129.3888, 10.8558, 316.0618, 237.1451, 50.9472, 8.0539, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

