created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Jimbo The Plug", "P\u00edogre", "Vera Khin", "Elonith Requiem", "Charr Surethang", "Drevarr Moonwillow", "Xanvias"];
const professions = ["Reaper", "Scrapper", "Dragonhunter", "Reaper", "Berserker", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1789, 2044, 2606, 373, 795, 1309, 1177, 390, 786, 273, 638, 473, 462, 208, 1117, 7964, 1175, 301, 2922, 626, 2812, 457, 590, 518, 714, 468, 662, 507, 25640, 795, 547, 460, 973, 419, 683, 276, 671, 642, 588, 569, 536, 540, 1047, 836, 4957, 605, 764], [685, 880, 422, 9218, 422, 436, 696, 886, 476, 383, 1041, 1912, 1061, 757, 13805, 2574, 980, 680, 574, 357, 310, 523, 453, 370, 602, 287, 289, 233, 493, 384, 397, 974, 377, 288, 1696, 761, 256, 566, 3821, 11187, 9740, 1230, 311, 776, 1445, 3844, 416, 541, 377, 420, 474, 187, 421, 470, 509, 560, 301, 406, 415, 991, 310, 932, 814, 485, 311, 502, 686, 710, 1145, 599, 503], [778, 2281, 1319, 1121, 493, 294, 672, 445, 704, 2053, 747, 784, 392, 278, 840, 364, 381, 449, 1799, 5297, 1058, 4394, 407, 766, 255, 437, 299, 382, 489, 372, 7974, 383, 422, 287, 500, 450, 5562, 6958, 434, 390, 386, 498, 20337, 597, 659, 769, 1050, 2305, 1246, 961, 458, 408, 485, 518, 351, 323, 788, 1434, 514, 557, 12738, 13292, 379, 286, 3225, 624, 14698, 1294, 412, 513, 672, 845, 807, 1355], [310, 398, 249, 282, 260, 1361, 12912, 947, 320, 275, 874, 643, 339, 10171, 3106, 737, 656, 468, 1437, 3160, 511, 741, 418, 430, 280, 219, 347, 261, 770, 534, 731, 378, 724, 473, 181, 12781, 589, 8596, 2974, 880, 796, 805, 6998, 745, 2547], [747, 14992, 2718, 2540, 5618, 233, 431, 223, 472, 2293, 1234, 780, 4014, 12045, 408, 783, 512, 2191, 979, 2962, 502, 505, 299, 359, 299, 525, 3294, 361, 470, 555, 328, 604, 378, 340, 221, 6759, 1251, 273, 374, 418, 308, 538, 931, 7859, 602, 5795], [759, 7228, 2907, 1422, 464, 597, 574, 401, 360, 599, 1721, 2005, 924, 421, 1401, 1219, 654, 463, 392, 363, 189, 425, 340, 331, 2278, 271, 593, 218, 782, 642, 140, 406, 299, 367, 248, 254, 260, 256, 299, 193, 221, 278, 693, 292, 220, 332, 479, 290, 481, 368, 448, 361, 230, 792, 184, 240, 1304, 3235, 304, 289, 202, 338, 232, 185, 243, 272, 240, 329, 229, 459, 744, 172, 296, 423, 294, 284, 719, 335, 287, 300, 7076, 307, 299], [358, 234, 188, 396, 331, 633, 674, 194, 301, 479, 412, 298, 527, 260, 274, 343, 1962, 697, 672, 8927, 528, 182, 267, 492, 160, 142, 225, 281, 282, 245, 13143, 225, 409, 142, 223, 246, 233, 334, 316, 380, 198, 366, 277, 137, 813, 8811, 5104, 266, 231, 1239, 2876, 335, 259, 215, 272, 233, 167, 228, 282, 343, 381, 201, 195, 259, 210, 133, 222, 328, 230, 220, 272, 394, 582, 507, 7343, 464, 927]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

