created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Lord Erin The Wise", "Venomina The Fierce", "Etchery Howls", "Sygaldry Verdandi", "Morton Saltbringer", "Charr Surethang", "Melody Phoenixstorm", "Mistwalker Cael", "Cat Wigglebooty", "Victoria Raskae", "Glorious Gluvs", "Clean And Green", "Rafaellagabriela", "Jimbo The Pleb", "Tribal S", "Jmbrage Rev", "Nebula Davar", "Tootsie Pop Rocks", "Ryzen Grimsaw", "Rozaalyna", "Darks Na", "Elonith Requiem", "Xanvias Einzbern", "Oo Dads Mad", "Daphne Agla\u00e9", "Rina Of Theros", "Tegan Parker", "Ka Otik Nightm\u00e6r", "Zaedy Zae", "Primal Clone", "Bella Sassy", "Koralia Danai", "Sub Train", "Solus Luxes", "Revenant Brandorf", "Eibh\u00ebar", "Blaize Harlot", "Drevarr Moonwillow", "Arcanophage Farra", "Zanos Engine", "Mort\u00e4rion", "Morv\u00e4rth", "Lucky Luprac\u00e1n", "Keypek The Drunk"];
const professions = ["Firebrand", "Weaver", "Spellbreaker", "Druid", "Firebrand", "Chronomancer", "Berserker", "Scrapper", "Herald", "Scrapper", "Renegade", "Berserker", "Druid", "Firebrand", "Berserker", "Druid", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Reaper", "Firebrand", "Reaper", "Berserker", "Berserker", "Reaper", "Reaper", "Tempest", "Reaper", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Scourge", "Scrapper", "Spellbreaker", "Scrapper", "Scrapper", "Reaper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19154, 4341], [1182, 6647, 0, 2796, 7220, 3781, 2513, 70, 0, 2915, 0, 0], [8828, 6200, 5832, 721, 204, 0, 5431], [5920, 1265, 487, 1390, 573, 463, 629, 7350, 1293, 5632, 0, 0, 2736], [2358, 245, 0, 1818, 1251, 0, 1507, 6998, 11827, 1677, 589, 352, 0, 0], [6419, 585, 260, 1806, 801, 0, 620, 1178, 690, 13257, 2364, 0, 0, 0, 642], [18207, 9002, 0, 1300, 927, 348, 0], [31585], [9547, 5655, 0, 2419, 844, 0, 0, 3367, 0, 511, 6580, 467, 0, 0, 3328], [1785, 1164, 79, 6037, 188, 0, 4816, 1382, 7252, 814, 6461, 62, 1527, 46, 2221], [10652, 12935, 15608], [4930, 585, 1070, 2646, 2058, 0, 1583, 2508, 0, 10637, 14338, 0, 1514, 0, 5262], [2007, 2418, 15079, 2165, 4627, 22199], [3742, 2375, 0, 3023, 1264, 0, 2372, 9835, 5281, 8635, 7959, 431, 297, 0, 3405], [10523, 3752, 3921, 8096, 1681, 0, 5283, 8293, 1440, 0, 949, 1178, 640, 0, 3380], [9867, 5565, 130, 3712, 761, 3668, 8032, 4872, 5456, 2537, 0, 0, 0, 6497], [14309, 7362, 0, 5645, 540, 502, 1795, 2990, 8474, 4776, 1129, 1381, 17, 0, 2278], [7834, 15357, 15262, 5273, 5539, 0, 3434], [20189, 8523, 705, 4867, 1463, 672, 3445, 4178, 3647, 1894, 2439, 2341, 523, 0, 177], [0, 489, 1438, 559, 1878, 5358, 6180, 19384, 18838, 2472, 0, 0, 6705], [25201, 9325, 5512, 13305, 6174, 1878, 7983], [13959, 6162, 13779, 10229, 7300, 0, 4512, 15768], [4085, 16070, 3670, 735, 11721, 18936, 1947, 10653, 1274, 3167], [16804, 12464, 0, 5047, 754, 0, 3074, 11106, 3284, 8627, 9020, 2294, 672, 0, 5451], [26945, 8372, 1588, 10428, 9549, 0, 3719, 20587], [19487, 8528, 2630, 7269, 537, 502, 1752, 6427, 4719, 13614, 13976, 1775, 0, 0, 2503], [24765, 5802, 10523, 6844, 3768, 0, 6055, 7190, 655, 5578, 9007, 2968, 1893, 0, 789], [0, 14228, 503, 6400, 0, 4681, 24214, 7715, 17636, 1733, 1609, 0, 0, 7494], [10232, 3515, 4924, 5657, 0, 10047, 20993, 9604, 4911, 7845, 2114, 0, 7143], [25528, 8121, 7152, 6734, 839, 0, 5030, 9903, 7584, 2819, 6207, 2968, 1875, 0, 5622], [23207, 6894, 3500, 9489, 1782, 502, 4468, 16980, 9242, 3081, 7060, 644, 1446, 0, 4969], [25331, 6213, 144, 6073, 3528, 216, 648, 15814, 8568, 14784, 9913, 0, 0, 0, 7090], [27293, 3776, 1291, 7595, 736, 5130, 18173, 10869, 13142, 7329, 994, 469, 0, 3222], [19848, 8714, 0, 5018, 0, 5809, 15542, 4258, 14174, 14799, 2982, 193, 0, 9743], [29664, 9234, 165, 8242, 69, 145, 4008, 11473, 9258, 17522, 12603, 292, 946, 0, 5726], [9570, 8343, 6131, 0, 1091, 26059, 9421, 27865, 18764, 2973, 0, 0, 3682], [27390, 15755, 1030, 11058, 4309, 0, 3932, 12225, 14282, 15756, 6742, 776, 547, 0, 2798], [33155, 23684, 4643, 20690, 3976, 0, 12574, 2944, 12359, 10990], [23616, 10386, 1825, 11599, 4269, 0, 2037, 21581, 12352, 10470, 27251, 1659, 2385, 0, 6857], [31507, 11203, 3369, 7684, 1597, 0, 4634, 21466, 11690, 27499, 12810, 2468, 3222, 0, 2398], [51730, 30352, 2705, 23919, 7771, 0, 8538, 3181, 13065, 1581, 11921, 1134, 1599, 0, 3444], [62473, 20430, 6802, 35396, 9484, 0, 18490, 20383], [122321, 54238, 11351, 32137, 13192, 2174, 7407, 13916], [96078, 35248, 13361, 20396, 10741, 0, 18467, 45697, 35130, 31849, 33876, 3281, 9734, 0, 6981], [116061, 37132, 11105, 53563, 12135, 1226, 10341, 22326, 22282, 43269, 39010, 7663, 8834, 0, 8614]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

