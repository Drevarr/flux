created: 20230401223327000
creator: Drevarr
modified: 20230705163524229
modifier: drevarr
tags: ChartData
title: 202304012233_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Aluin Ellesmera", "Newtype Khan", "Venomina The Fierce", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89.8128, 699.9731, 180.3094, 645.7499, 66.8352, 296.0825, 32.54, 0.0, 0.0, 32.5494, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.1966, 62.6118, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [184.6522, 144.3635, 102.8089, 247.7029, 52.003, 83.4195, 71.5244, 63.1617, 68.8073, 94.3933, 1.2928, 43.3699, 264.9132, 0.0, 114.6948, 79.6921, 216.048, 0.0, 178.0805, 27.9072, 519.1469], [98.4614, 161.8662, 60.9332, 334.1204, 15.8528, 164.8332, 43.2806, 62.244, 0.0, 30.3377, 0.0, 13.9357, 109.9462, 165.4474, 29.8442, 62.342, 262.0128, 33.5988, 64.7398, 76.2022, 585.6864, 89.4475, 46.7415, 93.8101, 58.4922, 61.7386, 115.5368, 33.1772], [370.1914, 732.4006, 230.6212, 659.6294, 38.4112, 242.6982, 94.3582, 120.7773, 78.1817, 199.6363, 21.188, 55.8965, 167.8468, 232.6968, 139.4172, 73.1594, 9.5749, 207.4464, 160.2863, 90.6984, 1310.2278, 142.85, 57.9033, 104.3582, 90.5124, 24.8193, 74.713, 196.1987, 295.7626], [87.5213, 1538.4755, 467.8997, 961.6345, 86.9774, 362.5301, 180.3095, 246.5022, 130.7221, 408.2446, 92.4653, 12.2812, 329.2467, 437.4454, 385.2295, 97.9383, 116.9651, 610.3776, 49.1508, 383.5652, 160.8798, 1866.8032, 302.0982, 168.5802, 136.9187, 59.3505, 173.351, 367.0987, 194.9594]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

