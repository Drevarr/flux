created: 20230506002551000
creator: Drevarr
modified: 20230705163528257
modifier: drevarr
tags: ChartData
title: 202305060025_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupi Jupi Jupi", "Smol Gluvs", "Temperstep", "Newtype Khan", "Jackieistall", "Nero Arien", "Rojin Rumei", "Ark Darkness", "Kaotic Reaper Z", "Lucas Ryn", "Solus Sanctus", "Air One Com", "Xina Xino", "Aronorf Xideliesi", "Miphest\u00f6", "\u00c1rkantor", "High Sorcer Baradun", "Venngi", "Mrs Stealth Monkey", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar", "Mac Adaymia", "Zaidy Sagemist", "Venomina The Siren", "Tegan Parker", "Stoic Rapidfire", "Artakama Nahid", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scourge", "Tempest", "Spellbreaker", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Vindicator", "Tempest", "Scrapper", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Vindicator", "Tempest", "Tempest", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 4319219.68, 0.0, 0.0, 0.0, 0.0, 21773166.66, 637895.25, 549105.7, 0.0, 0.0, 0.0, 3108974.4, 14723.2, 3564762.0, 16073212.05], [53772.4, 6256349.6, 9923.4, 4928.4, 0.0, 0.0, 20727439.92, 0.0, 142783.65, 3659.04, 0.0, 0.0, 1942542.0, 19646.27, 3385974.0, 20910051.45], [0.0, 0.0, 0.0, 3921.6, 0.0, 8153686.8, 111068.14, 9320664.0, 42385186.35], [89591.04, 9370023.36, 0.0, 2464.2, 0.0, 0.0, 26162843.16, 1730055.15, 380352.2, 14719.32, 0.0, 0.0, 1599847.2, 19646.27, 6096276.0, 6425062.65], [83992216.95], [0.0, 261416.35, 0.0, 0.0, 0.0, 5953500.0, 24523.33, 11060604.0, 54687902.4], [23755481.46, 565847.55, 23746.75, 3659.04, 35500.8, 1988.32, 3314001.6, 14723.2, 3390486.0, 41335535.25], [53772.4, 6278819.68, 0.0, 0.0, 0.0, 0.0, 26345112.18, 1173961.35, 142581.55, 0.0, 0.0, 0.0, 2975162.4, 47206.26, 6449340.0, 29021036.4], [0.0, 106449742.8], [17864.88, 8486374.4, 0.0, 4928.4, 0.0, 0.0, 21081955.02, 836221.5, 477865.45, 1829.52, 0.0, 3976.64, 3317403.6, 63953.9, 9732666.0, 32847991.65], [233043.36, 7413558.72, 0.0, 0.0, 0.0, 0.0, 22097241.72, 1090599.3, 309415.1, 1829.52, 47430.72, 0.0, 4705192.8, 44169.6, 5969094.0, 41117062.5], [17864.88, 5410847.52, 19913.85, 0.0, 0.0, 0.0, 28280653.26, 1129224.15, 816079.8, 0.0, 0.0, 7982.52, 5433901.2, 64782.08, 7645866.0, 39213649.35], [0.0, 18167286.0, 91971136.35], [741512.64, 9923.4, 4928.4, 0.0, 43491763.98, 1092810.15, 553956.1, 7512.12, 3921.6, 0.0, 3602718.0, 69291.06, 8489328.0, 41654652.75], [215089.6, 16787240.0, 19913.85, 7425.9, 0.0, 58395133.32, 2561464.8, 2061015.8, 0.0, 0.0, 11988.4, 14430603.6], [699574.48, 27311075.84, 69866.1, 27539.1, 909.88, 82660671.06], [753791.28, 26176336.8, 170575.2, 17349.3, 4549.4, 95734668.24, 1507019.4], [0.0, 64732601.16, 1428209.1, 1504028.2, 33291.72, 40124.16, 16052.76, 9771451.2, 9800.13, 22337502.0, 36091207.35], [15085784.64, 109760.85, 32234.4, 0.0, 74522415.0, 2563415.55, 1333354.75, 9203.04, 0.0, 14035.2, 9038206.8, 118291.71, 846000.0, 108725296.05], [345476.56, 11891114.08, 69866.1, 0.0, 0.0, 0.0, 57242124.0, 2799846.45, 1192086.85, 29660.4, 7884.48, 0.0, 11180332.8, 29446.4, 20569926.0, 106664287.95], [700018.88, 13248986.24, 19913.85, 12387.6, 289.34, 0.0, 69716600.88, 2114613.0, 1679147.85, 34982.64, 32404.8, 9970.84, 12749335.2, 34921.59, 20141568.0, 94266327.6], [718950.32, 17464477.76, 39894.75, 12387.6, 909.88, 73282911.42, 1617301.8, 1104375.45, 27720.0, 0.0, 10000.08, 14039827.2, 44629.7, 25177806.0, 128860628.4], [1171260.64, 28073229.6, 79789.5, 74525.4, 0.0, 0.0, 78780308.4, 4038832.8, 1996748.0, 22092.84, 23653.44, 5994.2, 15726312.0, 139134.24, 21458790.0, 110609562.15], [987901.2, 31049731.36, 270814.95, 34698.6, 0.0, 6725.2, 79328971.56, 4002158.7, 2031711.3, 0.0, 9970.84, 17868891.6, 128735.98, 27119376.0, 157289088.15], [466086.72, 34863112.96, 69866.1, 57142.8, 909.88, 102807522.9, 2619987.3, 2156508.05, 11226.6, 55191.36, 9970.84, 20239405.2, 125193.21, 25628160.0, 146414054.7], [1367952.08, 39463731.2, 323113.95, 64468.8, 0.0, 115214066.52, 4913028.9, 4090706.1, 26056.8, 158308.8, 40292.72, 26556692.4, 304632.21, 45389028.0, 192552062.85], [2108055.84, 50514830.08, 436495.5, 147718.8, 0.0, 909.88, 120065169.48, 8701255.35, 5535822.15, 49785.12, 67451.52, 58830.88, 32151621.6, 348341.71, 51853878.0, 120146265.9], [1946294.24, 43819007.52, 240508.35, 19813.5, 0.0, 111209716.38, 7673080.05, 4058066.95, 68662.44, 124087.68, 80731.64, 27071074.8, 251674.7, 45771138.0, 203071648.5], [1966872.4, 2261284.96, 47769299.84, 588363.75, 122710.5, 0.0, 9019.68, 123540902.34, 8826883.65, 4824834.35, 51586.92, 143736.96, 64649.64, 29029039.2, 367481.87, 48795024.0, 197222961.15]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

