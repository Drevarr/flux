created: 20230524221126000
creator: Drevarr
modified: 20230705163531362
modifier: drevarr
tags: ChartData
title: 202305242211_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Soxx", "Spicy Gyrosbringer", "Band Aidbringer", "Queen Josie", "Primo Pobre", "Blanco Padre Guard", "Pieca Pizzabringer", "Ravioli Ryebringer", "Bubble Teabringer", "Bella Lunabringer", "Bura Beignetbringer", "Sister Elon\u00edth"];
const professions = ["Firebrand", "Scrapper", "Scrapper", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[237.992, 0.0, 0.0, 47.0016, 105.6908, 87.4313, 0.0, 0.0, 0.0, 0.8347, 0.0, 101.1301], [54.7349, 0.0, 0.0, 51.4944, 49.6254, 239.5928, 12.2966, 33.0372, 117.0452, 20.0333, 0.0, 197.9796], [63.1309, 0.0, 0.0, 9.2736, 85.4239, 165.7822, 6.2435, 26.6868, 221.1947, 25.2503, 0.0, 234.0975], [139.5014, 35.8717, 80.7106, 10.656, 138.6481, 168.636, 0.0, 23.5116, 0.0, 121.8691, 50.5908, 102.7354], [174.4734, 119.7682, 19.4796, 128.2673, 197.62, 42.6948, 223.6634], [103.9802, 0.0, 0.0, 63.936, 249.6424, 164.485, 84.2108, 0.0, 148.546, 36.1016, 12.408, 105.6783], [392.0249, 0.0, 116.0064, 56.1688, 11.6875, 0.0, 37.6041, 100.4794, 12.8028, 356.8984], [655.0432, 0.0, 3.6985, 160.4736, 614.6354, 201.7146, 83.7921, 36.4392, 76.6848, 321.6802, 13.7616, 209.7514], [445.6296, 0.0, 0.0, 127.3536, 555.5395, 213.2597, 42.6003, 15.6492, 333.4163, 246.9728, 17.3148, 423.2483], [589.0061, 67.7357, 25.0043, 229.0752, 608.0061, 511.8751, 200.4766, 17.3124, 273.2694, 151.1887, 90.804, 364.3895], [554.6151, 13.0794, 33.6008, 220.4928, 508.9447, 547.2887, 193.5098, 24.7464, 229.2668, 215.5664, 83.0772, 787.3702], [869.9465, 269.856, 826.5852, 340.2556, 116.0754, 0.0, 332.7272, 253.0245, 108.6828, 578.689]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

