created: 20230626011254000
creator: Drevarr
modified: 20230705163537449
modifier: drevarr
tags: ChartData
title: 202306260112_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Traidoruns Maximus", "Permanent Dawn", "Miphest\u00f6", "Suredude", "Galactic A Glory", "Lord Erin The Wise", "Zayde Sunsabre", "Good Sir Ragnarok", "Rina Of Theros", "Xanvias Einzbern", "Johosh The Mighty", "Fuuko Kazari"];
const professions = ["Firebrand", "Weaver", "Tempest", "Weaver", "Soulbeast", "Weaver", "Berserker", "Firebrand", "Scourge", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0274, 0.0, 0.0, 14.685, 40.0867, 126.2473, 0.0, 50.6013, 32.0268, 8.0588, 11.6228, 43.0556, 36.3962, 9.614, 29.3188, 6.6905, 5.275, 0.0, 0.0, 10.8108, 18.9836, 22.8391, 31.05, 9.0185], [89.1918, 0.0, 0.0, 23.3, 34.7214, 51.1505, 0.0, 34.6732, 0.0, 1.6206, 0.0, 20.3774, 42.0145, 0.0, 25.2, 0.0, 0.0, 0.0, 37.541, 1.8966, 12.9333, 92.7963, 121.3647], [0.0, 31.24, 48.743, 18.3548, 0.0, 17.0784, 2.1696, 6.6529, 14.9912, 0.6667, 0.0, 60.0, 103.8841, 0.0, 0.0, 0.0, 0.0, 0.0, 26.1967, 73.1034, 0.0, 108.1111, 17.6353, 2.9545, 63.3696], [0.0, 0.0, 18.125, 96.3003, 110.7097, 0.0, 87.4771, 16.875], [281.8065, 137.8519, 362.1699], [123.6164, 0.0, 0.0, 54.755, 9.9907, 83.6667, 0.0, 37.6536, 40.7589, 19.55, 0.5283, 112.4912, 138.3623, 0.0, 12.5714, 0.0, 49.1622, 48.8197, 87.908, 65.0, 165.5926, 209.2235, 25.5], [2.3973, 0.0, 0.0, 41.23, 30.7523, 133.8495, 0.0, 0.0, 37.4643, 17.5971, 0.0, 52.2453, 95.8246, 70.1304, 0.0, 116.8, 69.4286, 0.0, 0.0, 182.8033, 115.6207, 91.0, 280.2407, 111.1294, 111.3409, 188.1522], [334.3396, 637.4035, 1285.7246, 5.7857, 89.925, 506.5893, 24.9211, 0.0, 4.6393, 0.0, 52.85, 8.9529, 9.2273, 2.8043], [347.274, 0.0, 9.0, 115.535, 66.5294, 98.1613, 4.5185, 31.1569, 7.625, 39.6559, 1.0263, 25.9245, 9.1053, 172.6812, 3.0714, 18.8, 14.2321, 0.8421, 3.0541, 160.9016, 70.0575, 229.7167, 298.1111, 331.6706, 13.5682, 0.0], [401.8767, 2.913, 14.375, 30.015, 122.6316, 118.5484, 10.7407, 56.7843, 83.5, 12.8853, 0.0, 92.8611, 206.3962, 7.9298, 208.7536, 0.0, 185.2, 145.7679, 13.9211, 28.3243, 269.5082, 192.1839, 215.0167, 49.2593, 14.8824, 154.6364, 234.3913], [314.4247, 0.0, 0.0, 58.74, 196.0557, 112.2151, 0.0, 83.2353, 99.0625, 26.7235, 45.386, 97.6226, 11.6667, 150.2464, 0.0, 270.125, 7.2857, 0.0, 56.0541, 258.6393, 121.6322, 212.1167, 176.1481, 180.5059, 70.3182, 229.0217], [362.6164, 0.0, 0.0, 77.44, 204.6409, 259.7849, 1.8148, 115.5621, 196.7054, 55.4176, 25.2719, 207.2075, 239.8596, 624.1159, 89.5952, 678.125, 429.6071, 0.4474, 13.2432, 172.9344, 289.2184, 456.95, 289.7037, 702.5294, 410.1818]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

