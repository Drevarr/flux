created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Christie Raskae", "High Sorcer Baradun", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Tikonis", "Deffray N", "Gabe Malhorn", "Fqa Rev", "Starla Rayn", "Sygaldry Verdandi", "Govinda Ektar", "Helgariz", "Melody Phoenixstorm", "Pr\u00e6tor Lightbringer", "Philip Poundhouse", "Venomina The Fierce", "Aira Draugr", "Krytsmancer", "Fourty Eighth", "Oo Dads Mad", "Itty Bitty Mew", "Jimbo The Pleb", "Matrim The Mad", "Zatoshin", "Glorious Gluvs", "Mort\u00e4rion", "Kos\u00e1ir", "Charr Surethang", "Rina Of Theros", "Rhaevynn", "Latedoctor", "Serene Azura", "Nsidejob", "Lord Erin The Wise", "No Reserv\u00e9", "Keypek The Drunk", "Zenady", "Be\u00eb", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Willbender", "Tempest", "Scrapper", "Scrapper", "Holosmith", "Scourge", "Firebrand", "Herald", "Reaper", "Willbender", "Vindicator", "Berserker", "Scrapper", "Firebrand", "Herald", "Spellbreaker", "Herald", "Reaper", "Scourge", "Berserker", "Catalyst", "Berserker", "Catalyst", "Vindicator", "Berserker", "Scrapper", "Virtuoso", "Berserker", "Reaper", "Reaper", "Reaper", "Dragonhunter", "Catalyst", "Weaver", "Vindicator", "Scrapper", "Berserker", "Reaper", "Herald", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[338.1347, 176.7553, 0.0, 31.2338, 640.1487], [69.2569, 291.4388, 127.7447, 89.514, 279.1974, 273.539, 89.3559, 55.5424, 94.5761, 189.3909], [23.445, 171.8247, 134.0375, 167.7907, 103.7556, 155.0224, 240.7857, 90.9255, 18.9714, 38.4606, 185.7948, 66.9071, 67.6356, 38.7288, 143.337, 123.8727], [252.595, 158.0825, 110.9727, 21.0233, 141.9778, 89.3466, 189.6327, 50.8404, 1.7429, 145.4249, 211.0779, 129.1487, 32.6921], [94.9108, 631.661, 321.4407, 690.1196, 707.1091], [1171.0282, 50.3545], [98.57, 226.2474, 166.8294, 107.4884, 78.3222, 125.3192, 134.0612, 116.2447, 128.1714, 70.5115, 241.6675, 129.223, 127.178, 57.4576, 78.7935, 91.4818], [1221.2294], [203.5567, 679.4403, 461.2326, 890.2778, 0.0], [835.3093, 706.3686, 729.7674, 190.8556], [246.1443, 147.2304, 346.814, 442.5667, 271.5885, 64.0306, 96.4787, 73.4571, 135.3053, 202.6338, 226.4535, 182.4294, 309.0339, 189.9783, 190.4], [1282.1859, 427.7401, 195.7288, 284.25, 1003.2091], [244.385, 753.9588, 702.7594, 1154.5581, 765.6556], [272.2474, 78.9454, 23.7209, 42.2333, 97.7656, 67.5204, 69.5213, 25.5143, 110.5471, 272.5039, 98.0743, 922.291, 14.4576, 117.837, 99.8091], [345.4388, 253.1809, 141.8, 483.4478, 645.1792, 583.9926], [240.3174, 603.3256, 277.5222, 263.1446, 164.4388, 28.6915, 85.9186, 664.4571, 122.7732, 47.7458, 63.9831, 139.8152, 314.6273], [183.42, 590.4124, 625.8703, 870.1628, 603.2444, 459.389], [1272.9963, 284.1808, 937.2542, 1319.3587, 1290.3545], [395.9796, 812.974, 346.9182, 335.6723, 601.339, 922.8587], [168.29, 18.0515, 1259.0956, 152.2326, 1746.0, 0.0], [1404.8996, 1036.7288, 687.4915, 1051.7826, 1118.3727], [914.8247, 1430.2765, 1241.5349, 614.3556], [771.182, 877.5612, 182.6489, 608.5714, 366.6641, 771.574, 213.1412, 125.1957, 983.9273], [1136.5287, 960.0816, 212.383, 47.4857, 392.8168, 1055.6234, 791.6208, 380.8475, 281.7609, 868.1091], [592.5358, 949.2791, 482.7, 560.6833, 891.4082, 316.1809, 307.3232, 976.6597, 547.3197, 298.6977, 861.8644, 436.3804, 630.6273], [1794.3532, 788.2569, 1791.8367, 776.7872, 531.8857, 390.1349], [469.11, 1024.1443, 952.7253, 1177.1628, 453.9889, 834.7347, 481.3617, 606.4555, 940.7688, 299.0892, 184.3333, 244.8305, 252.2609, 675.2], [1455.9691, 1626.8055, 2957.5116, 1962.1111, 2117.5686], [299.15, 1425.2474, 1016.0939, 1078.7209, 1472.7444, 929.8803, 1317.0408, 440.3404, 103.9429, 509.3028, 636.9792, 547.7249, 251.7542, 53.413, 651.3636], [474.9794, 1009.215, 1470.7442, 767.9444, 642.5012, 655.9796, 563.1596, 517.6857, 474.4911, 1240.5714, 740.71, 253.5932, 131.2542, 572.7065, 976.9091], [370.24, 1380.6598, 1255.1331, 843.1163, 842.4889, 460.591, 1119.8367, 508.766, 65.6857, 921.3333, 681.839, 469.4721, 346.7599, 0.0, 231.7182], [1096.3608, 796.1365, 1086.5349, 239.0778, 1058.6035, 479.6224, 163.1064, 38.4857, 545.1985, 1449.3844, 834.3048, 245.6215, 224.7627, 495.1087, 693.9364], [1770.6804, 1108.3567, 757.907, 1298.1111, 680.0474, 531.0408, 243.0532, 237.8, 904.1679, 1634.2857, 444.3123, 539.113, 501.1356, 810.3478, 1424.8727], [995.4881, 1442.093, 1106.9222, 1077.1671, 31.8163, 1014.5851, 114.7714, 960.3486, 1119.0468, 1675.1301, 711.9435, 653.3729, 320.3152, 1307.3909], [1516.4639, 1162.8106, 1384.2558, 1552.0333, 1472.3416, 915.2755, 392.0957, 295.6857, 1034.3842, 1542.639, 1119.9888], [1895.1531, 1807.0213, 927.0571, 1883.7125, 3373.1896, 2386.777, 792.4774], [419.8557, 1187.6416, 2725.6977, 819.9, 1460.1995, 1737.898, 508.234, 623.0571, 1094.0204, 2246.9896, 785.6691, 408.2853, 336.8814, 203.9239, 1036.8455], [220.03, 724.3608, 1329.686, 2248.6512, 1503.0111, 1743.3192, 1462.7551, 239.1489, 626.0857, 1117.3384, 2607.8961, 1410.8439, 633.9124, 25.0339, 995.2283, 1696.8727], [408.005, 1760.6907, 1950.9915, 311.6047, 543.0111, 23.9676, 1936.4694, 916.2766, 445.7714, 1293.0662, 3507.4519, 1056.7509, 746.6695, 678.7797, 1464.6196, 1862.1727], [1064.435, 2473.9278, 2429.4369, 3650.8605, 1433.8556, 1404.5262, 2076.4388, 871.4787, 291.4571, 1368.7328, 4637.7455, 1686.8885, 910.9435, 259.4407, 2108.4022, 1425.3364]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

