created: 20230703220627000
creator: Drevarr
modified: 20230705163541499
modifier: drevarr
tags: ChartData
title: 202307032206_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Air One Com", "Demon Sekhmet", "Oo Dads Mad", "Il Dim Snail Il", "Ryvalia Fazebringer", "Crusader Siolith", "Drumina", "Mmathuss", "Zaylen Harker", "Ateriuz", "Sub Train", "Arriasa", "Newtype Khan", "Xanvias Einzbern", "Gabe Malhorn", "Koralia Danai", "Johosh The Mighty", "Sister Elon\u00edth", "Arcanophage Farra", "Solus Sanctus", "Grasszanine", "Smol Daddy Tika", "Zayde Sunsabre"];
const professions = ["Chronomancer", "Firebrand", "Berserker", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Druid", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.2146, 5.0422, 17.2368, 0.0, 4.9705, 118.35, 8.2835, 0.0, 7.6659, 6.2501, 8.68, 6.0732, 2.6426, 5.3328, 9.079, 12.1651, 10.7923, 11.2847, 14.1143, 9.687, 26.1031], [13.5355, 47.7171, 49.6687, 17.6472, 16.7076, 9.893, 9.599, 17.6814, 62.5838, 30.0854, 19.2095, 4.9949, 6.192, 76.3977], [0.0, 0.0, 0.0, 0.0, 0.0, 405.1515, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [41.5027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 44.4268, 4.4892, 23.4511, 27.637, 9.7272, 9.6897, 14.7985, 0.0, 52.0819, 54.4421, 25.1623, 32.5802, 23.5846, 132.2069], [42.985, 0.0, 18.1382, 14.8781, 7.4906, 0.0, 359.3895, 8.5407, 21.6936, 29.3294, 0.0, 54.2938], [47.8022, 7.5516, 7.7155, 26.5507, 7.6806, 0.0, 201.195, 17.1843, 6.3876, 6.8625, 15.5222, 13.0295, 16.97, 13.2737, 4.0042, 14.4396, 14.5345, 12.5765, 11.5117, 28.9872, 19.2562, 17.0914, 26.1853, 8.5862, 45.5886], [37.7971, 3.5931, 5.922, 34.2317, 8.0063, 0.0, 221.709, 15.9495, 0.0, 0.0, 63.0761, 31.0937, 44.9114, 34.5168, 5.2426, 11.0628, 25.7149, 37.2852, 11.4866, 56.2162, 54.7378, 27.7187, 20.5471, 25.8138, 86.8389], [21.1219, 51.7075, 26.3088, 21.1149, 0.0, 289.9575, 43.1151, 45.5566, 22.0298, 15.8825, 10.6545, 0.0, 11.7067, 19.9233, 17.2963, 13.6584, 37.539, 4.044, 21.1174, 19.8634, 17.519, 17.0548, 47.6784, 14.7507, 84.2654], [54.1944, 4.9532, 22.2329, 6.7133, 0.0, 0.0, 196.461, 13.6857, 5.0618, 0.0, 36.2526, 39.721, 7.74, 37.3847, 2.064, 15.5988, 32.5248, 40.8404, 45.4199, 48.708, 59.6904, 50.1785, 50.1002, 35.2806, 86.1772], [37.5192, 6.8357, 13.9709, 5.1023, 199.617, 6.7914, 12.7149, 6.7751, 30.0573, 44.0726, 33.669, 37.9939, 43.5504, 34.3476, 51.5315, 52.9725, 15.349, 28.0368, 46.237, 32.3932, 59.6737, 42.1606, 140.0011], [0.0, 0.0, 0.0, 0.0, 0.0, 333.3525, 0.0, 0.0, 70.985, 0.0, 72.0286, 21.9604, 18.7889, 12.7408, 29.9693, 11.4408, 27.9171, 46.7064, 41.5826, 63.7243, 88.9258, 15.8497, 59.371, 7.8157, 108.7509], [29.2742, 7.4448, 20.7446, 0.0, 0.0, 254.058, 5.711, 7.653, 11.452, 0.0, 58.2765, 35.0405, 39.8997, 47.9682, 36.2851, 37.9512, 22.1575, 42.0402, 35.6387, 60.3504, 52.9637, 48.9733, 57.2898, 4.4582, 134.0452], [60.7718, 0.0, 30.4898, 57.577, 0.0, 0.0, 468.666, 35.8606, 32.0583, 0.0, 0.0, 30.3637, 30.2841, 0.0, 0.0, 30.2789, 7.0812, 17.9903, 27.3306, 19.111, 22.9997, 22.8413, 22.6059, 40.6023, 30.1344, 82.6477], [49.1918, 44.3047, 23.6203, 29.8771, 46.4094, 22.8888, 401.2065, 24.7989, 26.4541, 0.0, 0.0, 48.4049, 28.842, 45.4918, 16.3701, 15.8515, 27.468, 25.6133, 17.6427, 20.5154, 0.0, 25.9829, 38.8938, 41.3591, 17.7504, 72.427], [70.6843, 19.5595, 9.6768, 0.0, 379.9035, 102.1282, 19.464, 0.0, 11.7029, 86.768, 33.2189, 11.9196, 25.3039, 0.0, 37.548, 40.1139, 12.1766, 27.4124, 55.7885, 104.1902, 85.9316, 56.2681], [57.8074, 7.105, 6.9372, 20.5632, 0.0, 3.8485, 406.335, 31.2301, 6.1465, 23.9531, 19.6441, 54.6002, 49.335, 17.0086, 15.6087, 16.285, 17.6652, 32.6264, 36.5741, 59.1386, 70.5197, 38.2906, 49.4116, 53.1274, 43.9494, 152.1336], [44.3746, 6.973, 0.0, 20.8656, 11.3445, 0.0, 437.895, 15.9495, 7.9543, 27.7996, 0.0, 40.9161, 42.1498, 7.3723, 41.0648, 9.3912, 30.0636, 46.1784, 43.9067, 35.8393, 75.3192, 54.9226, 82.9734, 56.3059, 32.1709, 165.0748], [174.1632, 24.228, 22.0298, 27.337, 9.7433, 508.905, 40.1825, 43.0256, 42.8795, 27.0281, 62.0549, 30.613, 3.0766, 24.4663, 0.0, 40.95, 0.0, 25.7752, 28.1899, 0.0, 50.7461, 49.3385, 90.7782, 53.2787, 162.9425], [81.1526, 24.0656, 28.5271, 37.8, 0.0, 444.6015, 14.0973, 7.0504, 0.0, 4.9381, 52.0131, 43.8955, 23.9553, 49.4149, 26.5224, 34.3728, 45.0943, 80.4808, 61.9978, 90.5256, 87.78, 65.736, 38.3319, 58.5901, 156.6189], [5.2805, 0.0, 49.0003, 0.0, 0.0, 0.0, 281.673, 84.4809, 0.0, 0.0, 0.0, 84.0448, 38.1524, 0.0, 0.0, 34.6546, 21.0672, 33.2363, 36.5297, 65.3083, 118.3248, 209.1197, 128.733, 67.8093, 78.7898, 264.1198], [63.7363, 15.9725, 7.7414, 7.762, 0.0, 480.1065, 15.5379, 22.2962, 20.5874, 0.0, 52.728, 40.5812, 16.3895, 47.4352, 35.1912, 25.9056, 16.2285, 75.9035, 64.3804, 100.3147, 138.7109, 96.3032, 104.06, 76.4781, 220.6635], [249.8501, 20.6451, 42.0631, 0.0, 0.0, 0.0, 677.751, 0.0, 0.0, 0.0, 87.653, 54.8757, 0.0, 38.8822, 50.341, 0.0, 39.0298, 36.0408, 19.136, 113.953, 100.3094, 69.7167, 116.6607, 22.7315, 258.6785], [297.745, 111.1982, 137.0477, 21.4135, 0.0, 1221.7665, 91.9411, 211.151, 88.9936, 45.635, 178.4036, 39.215, 25.5807, 37.2832, 39.6907, 24.5196], [488.0275, 60.1286, 43.6874, 238.6541, 21.7663, 1071.8565, 334.2192, 154.6272, 42.9669, 83.9086, 45.9701, 37.6358, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

