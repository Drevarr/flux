created: 20230308221219000
creator: Drevarr
modified: 20230705163521540
modifier: drevarr
tags: ChartData
title: 202303082212_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Tegan Parker", "K\u00f4sair", "Smol Daddy Tika", "Mac Chiato", "Domina Flagbringer", "Cerys Fireblade", "Zadie Miststep", "My Birthday Girl", "Mike The Archmagus", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Berserker", "Tempest", "Spellbreaker", "Berserker", "Tempest", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.382, 0, 0, 0.405, 0, 0, 0, 1.514, 0.575, 0, 0.697, 0, 0, 0.436, 0.363, 0, 0, 0.379, 0.538, 0], [0.437, 0, 0.744, 0.306, 0.51, 0.72, 0.196, 0.27, 0.511, 0.072, 0.143, 0.571, 0, 0.552, 0.514, 0.226, 0.323, 0, 0.168, 0.386, 0.534, 0.247, 0.561, 0.559, 0.451, 0.509, 0.614, 0.242, 0.461], [0, 0, 0, 0, 0, 0.825, 0.894, 0, 0.537, 1.514, 0.975, 1.193, 0.983, 0.392, 0.932, 1.102, 0.75, 0.92, 0.898, 1.075, 0.941], [0, 0.729, 0, 0, 0.887, 0.574, 0.298, 1.194, 0.619, 0.213, 0.747, 0.103, 0.454, 0, 0, 0.728, 0, 0.567, 0, 0.585, 1.492, 0.436, 0.386, 0.488, 0.413, 0.373, 1.2, 0, 0.516, 0.404, 0], [0.338, 0, 0.185, 0.36, 0.442, 0.805, 0.521, 0.531, 0.51, 0.346, 0.356, 0.665, 0, 0.87, 0.495, 0.523, 0.32, 0.902, 0.627, 0.966, 0.601, 0.528, 0.561, 0.655, 0.452, 0.549, 0.568, 0.653, 0.461], [0, 0.91, 0, 1.031, 0.599, 0.921, 0.969, 0.958, 0.427, 0.64, 0.477, 0.323, 1.113, 0, 0, 0.895, 0.926, 0, 0, 0, 0.293, 1.633, 0.436, 0, 0.965, 0.531, 0.753, 0.461, 0.668, 0, 0.769], [0, 0.937, 0, 0.748, 0.728, 0.788, 0.868, 0.411, 0.633, 0.324, 0.652, 0.555, 0, 1.091, 0.824, 0.856, 0, 0.534, 0.758, 0.626, 0, 0.722, 0.512, 0.352, 0.544, 0.843, 0, 0.461, 1.14, 0.617, 0], [0.746, 0.436, 0, 0.74, 0.719, 0.813, 0.894, 0.782, 0.811, 0.639, 0.559, 0.273, 0.584, 1.094, 0.626, 0.482, 0.758, 0, 0.241, 0.908, 0.566, 0.716, 1.024, 0.74, 0.374, 0.992, 0.677, 0.828, 0.756, 0.975, 0.408], [0.373, 0, 0, 0.372, 0.45, 0.678, 0.872, 0, 0.27, 0.51, 0.149, 0.677, 0.999, 0, 0, 0.573, 0.826, 0, 0.242, 0, 1.266, 1.432, 1.734, 0.914, 0.467, 1.646, 0.872, 0, 0.825, 0.881, 1.261, 0.231], [0.736, 0.546, 0, 0.744, 0.718, 0.804, 0.891, 0.782, 0.811, 0.648, 0.448, 0.591, 0.918, 1.096, 0.66, 0.465, 0.654, 0.19, 0.645, 0.909, 0.75, 0.841, 0.827, 0.493, 0.635, 0.983, 0.678, 0.875, 0.922, 0.992, 0.923], [1.492, 0.654, 0.639, 0.977, 1.434, 0.45, 1.506, 1.245, 1.454, 0.988, 1.186, 0.995, 1.028, 2.364, 0.879, 0.278, 1.441, 0.427, 1.371, 1.817, 0.187, 0.787, 1.153, 1.224, 1.477, 1.604, 1.205, 0, 1.164, 0.893, 1.092, 0.989], [2.606, 1.53, 0.16, 2.228, 1.494, 1.121, 2.01, 1.611, 1.25, 1.327, 0.823, 0.877, 1.03, 1.632, 0.678, 1.454, 2.276, 0.327, 1.86, 1.86, 1.369, 1.494, 1.913, 1.459, 0, 1.821, 1.684, 1.762, 2.232]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

