created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Wix Myschief", "Shaca Booey", "Zevikah", "Kahlianne", "Water M Elon", "Herm E Licious", "Ateriuz", "Fluffy No Care Bear", "Chocolate Teapot", "Audra Storm", "Legoh Brave", "Wix Myschief", "Avatar Sarvity", "Erin Celes", "Drevarr Moonwillow", "Wall Knot", "Gestern Yesteryear", "Elonith Primal"];
const professions = ["Berserker", "Mechanist", "Berserker", "Druid", "Scourge", "Firebrand", "Firebrand", "Berserker", "Berserker", "Chronomancer", "Weaver", "Tempest", "Scrapper", "Catalyst", "Herald", "Scrapper", "Firebrand", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.2446, 0.0, 10.6715, 0.0, 0.0, 0.0, 0.0, 0.0, 105.6524, 0.0, 64.167, 0.0, 0.0, 0.0, 17.3436, 0.0, 0.0, 18.9302, 0.0, 35.51, 0.0, 0.0, 0.0, 0.0335, 0.0, 8.3243], [37.3247, 61.6869, 101.4624, 79.0157], [0.0, 0.0, 0.0, 10.5907, 35.9856, 0.0, 8.9302, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.8434, 94.6607, 16.06, 121.8712, 0.0, 0.0, 0.0, 67.7914, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [84.4444, 0.0, 0.0, 0.0, 18.954, 52.3676, 0.0, 0.0, 3.7002, 0.0, 16.8187, 3.8437, 16.96, 0.0, 43.7664, 0.0, 0.0, 50.5915, 0.0, 70.1356, 1.8864, 123.4244, 4.9921, 12.5048, 0.0, 29.4872], [11.7032, 1.5498, 17.992, 66.5364, 25.116, 34.2798, 31.3051, 82.2345, 32.2575, 7.3875, 25.04, 0.0, 41.6945, 70.015, 0.0, 36.2275, 13.3232, 80.1856, 33.984, 41.5582, 86.8321, 0.0, 46.0325, 10.0753], [0.0, 40.9122, 6.838, 32.8588, 13.008, 26.5586, 79.5406, 6.8255, 48.9038, 0.0, 18.8, 0.0, 17.9722, 127.5437, 5.5845, 149.8694, 0.0, 29.2924, 6.7824, 94.7767, 115.5778, 0.0, 51.1243, 3.3448], [22.6802, 0.0, 19.78, 11.5125, 85.98, 10.4058, 27.3074, 69.2946, 0.0, 38.1931, 45.8212, 100.366, 0.0, 88.9645, 168.6388, 80.2901, 107.176], [78.5837, 146.4957, 57.4556, 44.2445, 15.9047, 24.5, 60.3568, 14.4432, 37.1008, 55.8659, 57.4937, 222.3342, 59.6752, 70.9257, 1.1058], [0.0, 0.0, 15.7472, 0.0, 86.0586, 57.6126, 8.19, 0.0, 0.0, 22.74, 162.4168, 98.281, 0.0, 77.7112, 6.2625, 0.0, 0.0, 0.0, 164.9224, 0.0, 127.9152, 0.0, 0.0, 14.832, 76.4302, 17.1581, 48.2112, 21.2472, 0.8413], [0.0, 0.0, 35.2763, 0.0, 0.0, 0.0, 78.6488, 0.0, 0.0, 0.0, 0.0, 140.3226, 0.172, 187.2336, 74.2579, 24.5442, 50.3063, 0.0, 25.506, 18.6544, 0.0, 30.5162, 75.8138, 52.8155, 30.1588, 0.0, 78.08, 0.0, 0.0, 359.2395, 149.1437, 0.0, 0.0, 13.3488, 0.0, 0.0, 76.2172, 22.8197, 0.2873], [32.1138, 15.638, 21.9475, 32.8115, 40.012, 45.2608, 25.5326, 10.8416, 74.2173, 0.0, 37.088, 85.2669, 10.488, 11.9126, 111.51, 75.27, 39.3736, 15.42, 49.2566, 40.143, 51.5745, 0.0, 92.9625, 0.0, 0.0, 18.6938, 40.2001, 55.2787, 70.6933, 107.4144, 30.0672, 76.5932, 99.18, 72.2331, 53.8949, 9.9522], [3.2069, 144.1152, 44.9722, 16.3199, 10.3455, 24.1059, 105.1536, 44.6264, 0.0, 0.1984, 22.68, 115.18, 77.0562, 138.516, 33.1352, 95.4859, 120.9245, 148.5225, 189.3375, 43.68, 76.824, 114.7774], [0.0, 28.5635, 0.0, 88.0464, 0.0, 0.0, 66.3443, 64.255, 0.0, 119.7068, 34.428, 23.8473, 18.3708, 43.602, 12.3532, 67.056, 80.5488, 134.7771, 133.006, 193.43, 37.8375, 17.12, 0.0, 0.0, 0.0, 43.4137, 204.4224, 22.6902, 123.9768, 0.0, 13.4269], [84.9139, 10.8625, 34.93, 37.3048, 27.0014, 0.0, 45.784, 12.8488, 128.0585, 17.0543, 101.5056, 0.0, 37.8366, 16.1774, 9.7272, 58.214, 82.4852, 12.696, 78.182, 45.8396, 108.332, 63.6812, 111.3937, 77.86, 44.116, 53.3578, 46.5833, 52.6167, 62.869, 81.7353, 58.8528, 37.872, 44.9014, 35.9693, 37.3804, 83.1168, 11.6759], [185.2443, 54.1669, 40.7635, 6.3427, 19.068, 89.8824, 25.8509, 55.3472, 256.768, 34.1559, 18.6595, 21.8646, 75.5136, 81.5129, 47.4582, 52.6205, 66.6414, 22.854, 199.2176, 17.028, 28.4792, 102.8863, 69.35, 58.4775, 21.4125, 73.9, 1.5662, 216.3178, 61.8909, 73.6042, 78.4404, 173.7176, 138.7584, 49.6579, 110.9328, 59.3433, 75.4603, 29.2205], [81.7958, 22.7964, 15.078, 59.9896, 191.2867, 48.1664, 241.1354, 89.619, 127.0804, 313.6672, 103.0879, 85.0668, 134.8848, 254.5578, 391.716, 131.1682, 127.872, 45.5124, 171.0069, 272.9105, 115.5463], [356.2272, 104.7612, 75.278, 18.36, 120.5395, 18.3488, 45.633, 14.8107, 239.9404, 16.2981, 84.7856, 156.0449, 64.467, 71.3545, 106.6464, 474.292, 170.8444, 47.028, 25.6274, 335.3055, 339.2675, 260.2163, 210.3562, 29.2, 132.0118, 118.7047, 0.0], [37.3162, 213.9552, 8.7991, 44.9299, 58.2303, 14.399, 110.976, 227.6395, 32.9856, 258.1651, 147.2823, 0.0, 207.9968, 83.0946, 140.7558, 62.825, 25.2882, 190.71, 194.1624, 125.484, 187.4816, 155.514, 131.035, 164.105, 54.2437, 6.08, 54.7678, 88.464, 149.3746, 16.3327, 93.5323, 60.8745, 116.6872, 83.6928, 140.6293, 49.4578, 131.9447, 69.3389, 20.6978], [267.8715, 28.6552, 126.7123, 30.282, 53.1488, 118.4587, 40.8768, 320.9978, 66.3019, 210.8977, 18.1627, 269.6784, 85.7309, 59.6676, 46.9232, 75.6126, 211.12, 151.5136, 113.088, 224.9042, 115.4776, 241.8125, 200.9338, 121.4625, 143.6, 59.3188, 190.6865, 68.054, 10.404, 294.84, 177.9069, 128.2916, 30.3984, 328.6877, 80.3689]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

