created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Vee Usagi", "Avalanche", "Birdyguard", "Glorious Gluvs", "Jimbo One Eye", "Venomina The Sly", "Hyde En Sikh", "Vee Nemesis", "Permanent Dawn", "Fee Oh Na", "Gabe Malhorn", "Mistwalker Cael", "Thetatia", "Daphne Agla\u00e9", "Be\u00eb", "Tribal S", "Isis Urd", "Aira Draugr", "Blancooo Padreee", "Belvyn Brightblade", "Tootsie Pop Rocks", "Miphest\u00f6", "Eaffi", "Rahani Sunray", "Daphne Agla\u00e9", "Aronorf Xideliesi", "Leto Warr", "K\u00e1 Otik", "Cedryn X", "Kumengo", "Koralia Danai", "Bella Sassy", "Tegan Parker", "Revitiel", "Newtype Khan", "Sub Train", "Crusader Siolith", "Kisumaiassu"];
const professions = ["Scourge", "Reaper", "Berserker", "Guardian", "Berserker", "Scrapper", "Druid", "Chronomancer", "Chronomancer", "Weaver", "Scourge", "Firebrand", "Vindicator", "Scourge", "Reaper", "Scourge", "Druid", "Untamed", "Herald", "Berserker", "Firebrand", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Vindicator", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 76.56], [0.0, 0.0, 432.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 432.0, 0.0, 0.0, 0.0], [191.7, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 576.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 51.2, 0.0, 0.0, 0.0, 0.0, 94.76], [0.0, 155.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 95.22, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 720.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 153.6, 0.0, 0.0, 0.0, 0.0], [0.0, 467.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 864.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 720.0, 146.64, 0.0, 0.0, 0.0], [362.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 144.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1008.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1008.0], [0.0, 623.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [362.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 44.52, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 189.52, 0.0, 31.74, 0.0, 432.0, 0.0, 0.0, 0.0, 0.0], [0.0, 701.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1584.0, 0.0, 0.0, 0.0, 0.0], [0.0, 856.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 623.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 142.14, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 623.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 189.52, 0.0, 0.0], [0.0, 1728.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 36.96, 0.0, 0.0, 64.8, 0.0, 0.0, 31.74, 0.0, 1584.0, 0.0, 0.0, 0.0], [0.0, 1090.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 47.38, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 701.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 129.6, 94.76, 0.0, 0.0, 0.0, 288.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 758.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [664.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 129.6, 0.0, 0.0, 0.0, 0.0, 576.0, 0.0, 0.0, 0.0, 0.0], [1087.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 356.16, 432.0, 0.0], [966.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1008.0, 0.0, 0.0, 0.0, 0.0], [483.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 73.92, 0.0, 0.0, 129.6, 0.0, 0.0, 126.96, 66.78, 720.0, 73.32, 0.0, 0.0, 0.0], [0.0, 623.2, 0.0, 0.0, 0.0, 0.0, 0.0, 36.96, 0.0, 0.0, 259.2, 0.0, 0.0, 63.48, 0.0, 720.0, 366.6, 0.0, 0.0, 54.0], [1510.0, 701.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [664.4, 1168.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 73.92, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1008.0, 0.0, 0.0, 0.0, 0.0], [1993.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 432.0, 0.0, 0.0, 0.0, 0.0], [1389.2, 1012.7, 0.0, 0.0, 0.0, 0.0, 25.6, 73.92, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 576.0, 73.32, 0.0, 0.0, 0.0], [0.0, 467.4, 0.0, 0.0, 0.0, 0.0, 0.0, 73.92, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 267.12, 3600.0, 0.0, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

