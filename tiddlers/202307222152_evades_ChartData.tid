created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Skylar Shadowmoon", "Freyviana", "Cedryn X", "Nidircc", "Tribal S", "Dr Ger\u00f4", "Edgy Nekrodancer", "Sr Conrad", "Pookha Thundernutz", "Charr Surethang", "Audra Storm", "Tootsie Pop Rocks", "Dakk Regia", "Name Is What", "Belvyn Brightblade", "Be\u00eb", "Vee U", "Sygaldry Verdandi", "Aira Draugr", "Bella Sassy", "Rahani Sunray", "Lord Erin The Wise", "Mort\u00e4rion", "Newtype Khan", "Sirius Quack", "Keypek The Drunk", "Venomina The Sly", "Xanvias Einzbern", "Sub Train", "Kary\u00edna", "Nina Chan Fanboy", "Zaedy Zae", "Daphne Agla\u00e9", "Crusader Siolith", "Yummy Kiwi", "Aronorf Xideliesi", "Hyde En Sikh", "Glorious Gluvs", "Johosh The Mighty", "Kosa\u00efr", "Drevarr Moonwillow", "Jimbo The Pleb", "Tegan Parker", "Mistwalker Cael"];
const professions = ["Scrapper", "Tempest", "Berserker", "Tempest", "Druid", "Mechanist", "Harbinger", "Bladesworn", "Firebrand", "Berserker", "Weaver", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Scourge", "Tempest", "Firebrand", "Herald", "Firebrand", "Chronomancer", "Weaver", "Scrapper", "Spellbreaker", "Reaper", "Scrapper", "Druid", "Berserker", "Firebrand", "Vindicator", "Druid", "Druid", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Berserker", "Weaver", "Scrapper", "Berserker", "Tempest", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 6, 3, 0, 0, 1, 0, 0, 6], [0, 16], [0, 0, 0, 1, 1, 0, 0, 10, 2, 0, 0, 3, 0, 0, 0, 0], [0, 9, 1, 7], [0, 0, 1, 7, 0, 2, 7, 0, 3, 1, 1], [25], [0, 2, 0, 0, 0, 0, 0, 5, 11, 5, 7, 0, 0], [21, 10, 6, 1, 0], [6, 23, 0, 12], [0, 14, 0, 2, 0, 0, 2, 1, 15, 0, 2, 15], [22, 29], [0, 5, 0, 0, 2, 1, 4, 4, 1, 0, 3, 8, 3, 0, 1, 21, 0, 1], [8, 4, 1, 0, 0, 3, 22, 0, 0, 3, 11, 1, 4, 1, 3, 2], [0, 7, 0, 0, 0, 0, 0, 5, 0, 1, 14, 1, 2, 8, 5, 18, 0, 4], [0, 46, 3, 8, 6, 3, 0, 3, 8], [0, 9, 5, 1, 1, 1, 0, 0, 6, 0, 0, 8, 15, 10, 6, 2, 13, 0, 4], [0, 14, 0, 4, 1, 0, 0, 3, 0, 0, 3, 19, 6, 19, 3, 10], [0, 4, 0, 4, 0, 0, 0, 0, 1, 0, 0, 7, 15, 3, 0, 20, 9, 0, 20], [0, 15, 0, 9, 7, 8, 0, 3, 43], [0, 8, 0, 0, 0, 0, 0, 4, 6, 4, 0, 15, 4, 0, 6, 11, 18, 0, 10], [22, 0, 11, 2, 3, 0, 2, 11, 5, 4, 8, 3, 8, 2, 10, 0, 0], [0, 3, 7, 0, 2, 20, 6, 12, 6, 2, 6, 1, 29], [0, 0, 5, 10, 1, 1, 1, 22, 0, 11, 9, 18, 9, 10], [0, 21, 0, 0, 1, 0, 5, 9, 0, 0, 6, 19, 0, 7, 8, 3, 20], [0, 30, 0, 9, 0, 0, 0, 0, 2, 0, 3, 3, 7, 0, 3, 0, 15, 2, 29], [0, 6, 0, 0, 1, 0, 0, 1, 6, 0, 0, 11, 32, 6, 2, 2, 17, 0, 22], [0, 22, 0, 5, 0, 7, 0, 1, 17, 4, 10, 0, 19, 1, 11, 1, 12], [2, 20, 0, 8, 4, 1, 0, 0, 3, 0, 0, 0, 2, 0, 2, 8, 38, 0, 31], [0, 38, 0, 3, 0, 2, 0, 0, 3, 0, 1, 0, 7, 4, 10, 3, 15, 1, 32], [0, 37, 0, 10, 4, 0, 0, 2, 32, 1, 0, 13, 11, 2, 2, 1, 5, 0, 1], [48, 0, 6, 7, 6, 0, 6, 2, 0, 0, 21, 6, 14, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 27, 10, 17, 0, 32, 0, 23], [0, 24, 0, 0, 4, 0, 0, 2, 14, 9, 17, 2, 8, 1, 34, 0, 16], [0, 18, 0, 10, 0, 3, 0, 0, 24, 0, 1, 1, 12, 0, 15, 2, 42, 0, 4], [0, 29, 1, 2, 0, 0, 0, 2, 9, 7, 6, 11, 12, 8, 28, 0, 17], [0, 14, 3, 1, 0, 0, 2, 13, 0, 5, 7, 0, 13, 26, 5, 35, 0, 13], [0, 7, 0, 0, 0, 0, 0, 0, 9, 2, 0, 6, 33, 5, 16, 15, 34, 0, 21], [0, 17, 4, 3, 0, 1, 0, 0, 18, 2, 3, 7, 4, 4, 28, 5, 39, 0, 13], [0, 71, 0, 8, 1, 1, 0, 1, 8, 0, 4, 7, 37, 4, 7], [0, 0, 3, 15, 0, 3, 5, 3, 6, 0, 8, 31, 0, 81], [0, 23, 0, 0, 0, 1, 0, 0, 16, 0, 2, 2, 8, 6, 38, 14, 31, 0, 27], [0, 33, 0, 0, 4, 1, 1, 0, 1, 5, 0, 20, 2, 22, 29, 5, 21, 0, 33], [29, 1, 4, 2, 2, 0, 2, 12, 0, 0, 6, 32, 6, 7, 13, 12, 1, 100], [1, 46, 0, 12, 3, 6, 3, 5, 28, 3, 3, 5, 37, 3, 11, 16, 78, 1, 35]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

