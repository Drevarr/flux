created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Kelthuzadchan", "Loganlek", "Agent Fearless", "N\u00eec\u00f4le", "Aronorf Xideliesi", "Whobear", "Morv\u00e4rth", "Brigitte Du Bardo", "Kisumaiasu", "Raziel Umbra", "Elvezio Figone", "Smol Gluvs", "Elonith Requiem", "Luke The Ghastly", "Salty Pam", "Drac Tepes", "Elvezio Figone", "Gwyn Ghosthouse", "Vee Nemesis", "Alarics Bane"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Firebrand", "Chronomancer", "Reaper", "Reaper", "Reaper", "Chronomancer", "Chronomancer", "Reaper", "Reaper", "Scourge", "Chronomancer", "Scourge", "Virtuoso", "Scourge", "Chronomancer", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.053, 0.1224, 0.197], [0.0, 0.2044, 0.1479, 0.4225, 0.3171, 0.0113], [0.0, 1.1026, 0.1444, 0.0, 0.1009, 0.0, 0.0625, 0.0625], [0.0, 0.1757, 0.1463, 0.1752, 0.561, 0.1017], [0.9744, 0.0903, 0.5306, 0.4312], [0.0, 0.0217, 0.0, 0.055, 0.0, 0.0, 0.0833, 0.0, 0.0824, 0.0702, 0.0217, 0.1288, 0.1224, 0.0212, 0.0778, 0.0156, 0.0141, 0.1455, 0.2674, 0.3571, 0.0376, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0149, 0.0, 0.0526, 0.0286, 0.0256, 0.093, 0.1081, 0.0488, 0.0219, 0.0, 0.0, 0.0, 0.0732, 0.0169], [0.0299, 0.0156, 0.0, 0.0562, 0.1648, 0.8, 0.1395, 1.2143, 0.1505, 0.0, 0.0314, 0.0513, 0.0506, 0.0833, 0.0448, 0.0], [0.0, 0.5641, 0.2491, 0.5714, 0.4312, 0.0, 0.2188, 0.5], [0.2391, 0.2803, 0.1224, 0.1667, 0.3234, 0.3281, 0.0, 0.1461, 0.1319], [0.0213, 0.4872, 0.1264, 0.3878, 0.2385, 0.0, 0.2, 0.4035, 0.0, 0.0, 0.1837, 0.0061, 0.1257, 0.1562, 0.0986, 0.236, 0.033], [0.0, 1.5641, 0.148, 0.6327, 0.4037, 0.037, 0.0, 0.0625, 0.6458], [0.0175, 0.807, 1.0381, 1.2308], [0.2762, 0.359, 0.5194, 0.0286, 0.4595, 0.2146, 0.219, 0.0645, 0.1197, 0.2254, 0.5854, 0.1186], [0.0, 0.4235, 0.5439, 0.2826, 0.0758, 0.6122, 0.1788, 0.521, 0.6875, 0.0704], [0.1485, 0.5569, 0.2344, 0.0704, 0.2584, 0.1648, 1.0182, 0.3488, 0.1071, 0.1195, 0.0506, 0.0, 0.0417, 0.0224, 0.0088, 0.3619], [0.2758, 0.2695, 0.4531, 0.0423, 0.4157, 0.3187, 0.8727, 0.0698, 0.8214, 0.1599, 0.0, 0.0692, 0.0, 0.1139, 0.0, 0.2083, 0.0075, 0.0], [0.5714, 0.5769, 0.6977, 0.4189, 0.4439, 0.2263, 0.0, 0.1127, 0.0282, 0.6341, 0.113], [1.4496, 0.1429, 1.0946, 0.6585, 0.2774, 0.0645, 0.4296, 0.9014, 0.1977], [0.3593, 0.625, 0.0423, 0.427, 0.3626, 1.2545, 0.0233, 1.5, 0.0721, 0.0, 0.0126, 0.0, 0.0127, 0.0385, 0.0, 0.0299, 0.0439, 0.9298, 0.5143, 1.2051, 0.8682, 0.0, 0.7838, 0.4195, 0.2993, 0.0, 0.1408, 0.5634, 0.9512, 0.1808], [0.2174, 0.3333, 0.449, 0.2212, 0.7545, 0.6719, 0.0282, 0.5618, 0.4505, 0.6364, 0.314, 1.3929, 0.1003, 0.0377, 0.0256, 0.0506, 0.0833, 0.0896, 0.0175, 0.8772, 0.619, 0.7051, 1.2403, 0.1143, 0.6892, 0.4634, 0.365, 0.1935, 0.3169, 0.6197, 0.0732, 0.1921], [0.0, 0.6667, 0.1877, 0.7143, 0.7339, 0.0, 0.0, 0.0156, 0.7708, 0.0, 0.2235, 0.6667, 0.2174, 0.2879, 0.4898, 0.3758, 0.4251, 0.8438, 0.1408, 0.5506, 0.1868, 0.7636, 0.3372, 1.25, 0.1129, 0.0, 0.044, 0.0, 0.0127, 0.0, 0.0, 0.0373, 0.0, 0.614, 0.5619, 0.9231, 0.6357, 0.0, 0.473, 0.3024, 0.0657, 0.0, 0.4789, 0.6197, 0.2683, 0.1751]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

