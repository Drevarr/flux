created: 20230422220129000
creator: Drevarr
modified: 20230705163526445
modifier: drevarr
tags: ChartData
title: 202304222201_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Hyde En Sikh", "Arriasa", "Aribel Darkbringer", "Raevarae", "Madame Charrlotte", "Blancooo Padreee", "Oo Dads Mad", "V\u00e8\u00e9la", "Smol Gluvs", "Newtype Khan", "Navia Blightfur"];
const professions = ["Spellbreaker", "Chronomancer", "Druid", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.1923, 0.3393, 0.0652, 0.0, 0.1976], [0.0, 0.0179, 0.1333, 0.0213, 0.0506, 0.0091, 0.0, 0.0285, 0.055, 0.0364, 0.032, 0.0, 0.0238, 0.0149, 0.0538, 0.0, 0.0, 0.0, 0.0089, 0.0, 0.0242, 0.0419], [0.037, 0.0357, 0.0, 0.0, 0.0359, 0.0364, 0.0, 0.0447, 0.0826, 0.0273, 0.008, 0.0, 0.0408, 0.1194, 0.0072, 0.0, 0.087, 0.0769, 0.0179, 0.0362, 0.0081, 0.012], [0.2385, 0.1636, 0.008, 0.0385, 0.0646, 0.0149, 0.0789, 0.1084, 0.0435, 1.0769, 0.2768, 0.2029, 0.0484, 0.1078], [0.0, 0.0, 0.0897, 0.1227, 0.0, 0.122, 0.0, 0.0364, 0.008, 0.0, 0.0204, 0.0448, 0.0143, 0.012, 0.2609, 0.0, 0.0, 0.0362, 0.0161, 0.018], [0.0995, 0.1667, 0.0, 0.1811, 0.0773, 0.0, 0.1463, 0.0917, 0.0636, 0.032, 0.1154, 0.1156, 0.0299, 0.0932, 0.0723, 0.0725, 0.1154, 0.0357, 0.058, 0.0403, 0.0419], [0.1658, 0.5, 0.0, 0.1566, 0.1773, 0.0285, 0.1193, 0.0364, 0.008, 0.0, 0.0918, 0.0597, 0.1577, 0.0602, 0.058, 0.6538, 0.125, 0.058, 0.0242, 0.3413], [0.6296, 0.0918, 0.0, 0.0, 0.168, 0.2682, 0.0, 0.1911, 0.1101, 0.0545, 0.04, 0.0, 0.1327, 0.0, 0.129, 0.3373, 0.3333], [0.4818, 0.0, 0.3577, 0.211, 0.2, 0.0, 0.0, 0.2109, 0.0149, 0.3082, 0.012, 0.4928, 0.1154, 0.3482, 0.1377, 0.0081, 0.503], [0.0, 0.4318, 0.0952, 0.2967, 0.2385, 0.1909, 0.008, 0.0385, 0.2211, 0.1045, 0.0502, 0.506, 0.8696, 2.6538, 0.5714, 0.2681, 0.0242, 0.3892], [0.0864, 0.0561, 0.0, 0.0, 0.1721, 0.4364, 0.0952, 0.2439, 0.1927, 0.0818, 0.024, 0.1154, 0.2313, 0.0448, 0.1756, 0.4217, 0.2754, 0.1923, 0.4286, 0.1014, 0.0726, 0.2934], [0.301, 0.1746, 0.6, 0.0, 0.4715, 0.072, 0.1282, 0.2925, 0.1791, 0.2079, 2.3846, 0.5089, 0.2101, 0.0403, 0.3473]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

