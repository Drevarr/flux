created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Aspros Gemeos", "F\u00f9gly", "Alizayd Delnbone", "Mort\u00e4rion", "Vanhelsing Wizard", "Hawaiian Supreme", "Lord Erin The Wise", "Morton Saltbringer", "Mistwalker Cael", "Lumerence", "Rina Of Theros", "Hawaiian Supreme", "Name Is What", "Super Druid", "Belvyn Brightblade", "Palm Sauce", "Be\u00eb", "Alarics Bane", "Darks Na", "X Mad X King X", "Name Is What", "Avatar Shazbott", "Mike The Archmagus", "Blancooo Padreee", "Drevarr Moonwillow", "K\u00e2 \u00d4tik R\u00e6j", "Tribal S", "Glorious Gluvs", "Bella Sassy", "Solus Sanctus", "Cat Wigglebooty", "Arriasa", "Ryvalia Fazebringer", "Xanvias Einzbern", "Crusader Siolith", "Tootsie Pop Rocks", "Rahani Sunray", "Inedible Plant", "Daphne Agla\u00e9", "Raziel Umbra", "Sygaldry Verdandi", "Xo Zen Xo", "Miphest\u00f6", "Newtype Khan", "Klengah", "Kisumaiassu", "Gavann", "Eibh\u00ebar", "Zaedy Zae", "Tegan Parker"];
const professions = ["Spellbreaker", "Tempest", "Firebrand", "Scrapper", "Virtuoso", "Spellbreaker", "Weaver", "Chronomancer", "Vindicator", "Virtuoso", "Reaper", "Berserker", "Scourge", "Druid", "Firebrand", "Vindicator", "Reaper", "Reaper", "Dragonhunter", "Firebrand", "Reaper", "Tempest", "Weaver", "Berserker", "Scrapper", "Berserker", "Druid", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Druid", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Chronomancer", "Vindicator", "Reaper", "Chronomancer", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10, 18, 23, 0, 21, 63, 0, 16, 0, 0, 0], [25, 79, 37, 0, 0, 20], [15, 0, 35, 41, 1, 0, 0, 13, 24, 0, 0, 16, 0, 20], [35, 0, 0, 0, 45, 58, 13, 27], [0, 27, 7, 56, 11, 14, 9, 0, 49, 6, 20, 8], [35, 95, 30, 31, 0, 17, 5, 0], [0, 0, 0, 0, 0, 0, 30, 7, 37, 0, 37, 39, 0, 0, 0, 4, 5, 0, 0, 0, 7, 0, 53, 0], [15, 33, 85, 56, 0, 0, 57], [19, 9, 21, 0, 25, 2, 13, 31, 1, 50, 8, 0, 27, 0, 26, 0, 3, 0, 0, 9, 3, 0, 0, 9, 0, 18], [27, 22, 0, 1, 10, 0, 15, 58, 2, 5, 0, 0, 40, 49, 14, 24, 8], [13, 47, 25, 17, 5, 0, 11, 0, 0, 17, 0, 39, 0, 26, 0, 0, 32, 18, 0, 0, 5, 27, 5], [2, 39, 36, 6, 15, 19, 21, 49, 18, 0, 0, 23, 27, 42], [2, 36, 11, 14, 78, 16, 0, 15, 126], [24, 60, 76, 9, 39, 0, 23, 22, 0, 0, 52, 10], [8, 21, 56, 0, 11, 103, 19, 12, 35, 29, 34, 0, 16], [15, 2, 5, 30, 33, 13, 33, 16, 0, 22, 4, 0, 0, 0, 0, 25, 30, 18, 0, 0, 35, 4, 6, 0, 39, 5, 17], [17, 34, 12, 67, 4, 23, 20, 0, 45, 9, 0, 0, 0, 4, 0, 0, 3, 91, 0, 0, 24, 0, 7], [0, 23, 43, 0, 16, 4, 21, 18, 39, 85, 0, 0, 34, 0, 39, 39], [0, 14, 0, 11, 0, 49, 26, 23, 29, 21, 67, 53, 12, 0, 20, 0, 0, 0, 54], [65, 174, 19, 41, 0, 0, 7, 42, 9, 0, 11, 0, 0, 19], [16, 16, 37, 70, 44, 47, 24, 0, 9, 0, 0, 35, 36, 0, 54, 18, 8], [87, 38, 161, 0, 0, 72, 15, 46], [51, 0, 0, 30, 21, 6, 18, 0, 0, 24, 0, 45, 24, 2, 39, 0, 48, 0, 0, 16, 23, 0, 0, 10, 9, 55], [36, 32, 10, 60, 17, 19, 13, 21, 81, 0, 0, 44, 0, 23, 0, 29, 0, 0, 2, 17, 0, 0, 23, 12], [40, 16, 6, 31, 5, 22, 0, 7, 9, 74, 16, 0, 0, 6, 31, 16, 0, 50, 0, 0, 22, 39, 0, 0, 39, 0, 13], [40, 18, 6, 18, 20, 15, 51, 23, 13, 29, 40, 0, 22, 10, 8, 13, 22, 13, 17, 0, 10, 52, 0, 0, 21], [4, 0, 0, 0, 40, 4, 6, 24, 0, 0, 48, 0, 0, 11, 101, 35, 6, 29, 0, 0, 31, 55, 0, 37, 3, 12, 29], [23, 24, 57, 2, 35, 8, 47, 40, 8, 41, 8, 0, 0, 9, 38, 28, 9, 9, 0, 0, 32, 1, 0, 8, 31, 22, 17], [34, 42, 25, 6, 30, 92, 23, 47, 47, 27, 27, 0, 0, 2, 0, 34, 0, 0, 0, 0, 26, 14, 0, 0, 11, 0, 20], [9, 79, 82, 30, 1, 21, 17, 31, 29, 0, 2, 0, 0, 35, 0, 0, 0, 10, 0, 0, 17, 128, 0, 0, 6, 0, 16], [9, 10, 2, 27, 48, 14, 53, 29, 39, 48, 51, 0, 0, 31, 8, 5, 0, 46, 0, 0, 10, 11, 0, 0, 25, 34, 13], [36, 103, 17, 25, 16, 11, 25, 41, 26, 18, 52, 0, 41, 0, 9, 0, 8, 0, 0, 51, 0, 0, 27, 16, 19], [71, 55, 47, 16, 10, 15, 0, 18, 14, 41, 24, 0, 63, 0, 54, 0, 45, 0, 0, 0, 12, 0, 0, 0, 0, 68], [14, 39, 9, 19, 19, 53, 13, 25, 33, 74, 35, 0, 0, 86, 0, 52, 0, 6, 0, 0, 0, 21, 0, 15, 15, 37], [18, 32, 79, 13, 10, 36, 8, 59, 40, 40, 28, 0, 0, 32, 0, 21, 0, 46, 0, 0, 0, 107, 0, 0, 19, 21, 6], [9, 32, 57, 41, 2, 22, 89, 2, 42, 29, 3, 2, 22, 0, 42, 41, 21, 0, 57, 59, 0, 0, 16, 49], [21, 65, 17, 80, 7, 20, 56, 21, 41, 62, 41, 0, 3, 22, 60, 27, 2, 7, 1, 0, 0, 27, 0, 0, 20, 2, 37], [29, 26, 15, 0, 69, 11, 46, 32, 47, 65, 84, 68, 31, 0, 44, 0, 26, 0, 0, 0, 4, 0, 0, 11, 7, 35], [0, 89, 14, 29, 38, 19, 19, 0, 103, 80, 0, 48, 0, 25, 0, 0, 41, 30, 0, 0, 54, 62], [13, 18, 34, 7, 34, 30, 9, 24, 55, 137, 67, 0, 0, 26, 0, 87, 0, 23, 0, 0, 29, 12, 0, 0, 32, 13, 5], [74, 55, 3, 39, 29, 18, 30, 87, 4, 46, 55, 0, 0, 38, 0, 38, 0, 4, 0, 0, 21, 20, 0, 0, 21, 25, 50], [89, 55, 202, 74, 0, 51, 65, 0, 44, 0, 32, 0, 0, 46], [30, 39, 50, 0, 53, 79, 14, 42, 123, 31, 0, 0, 78, 44, 0, 17, 64], [15, 59, 20, 28, 28, 28, 29, 85, 84, 21, 41, 0, 73, 0, 10, 0, 38, 0, 0, 39, 20, 0, 0, 19, 17, 24], [12, 13, 42, 26, 0, 0, 90, 43, 109, 31, 13, 0, 55, 101, 0, 38, 0, 36, 0, 0, 0, 52, 0, 11, 13, 16, 9], [4, 23, 41, 14, 19, 8, 20, 24, 34, 35, 26, 0, 47, 17, 60, 23, 104, 25, 0, 0, 131, 26, 0, 0, 41, 13, 33], [38, 6, 40, 14, 43, 18, 20, 58, 31, 113, 115, 0, 0, 21, 18, 36, 20, 21, 0, 0, 19, 0, 0, 104, 67, 32], [25, 45, 28, 25, 17, 51, 28, 47, 40, 20, 52, 0, 27, 28, 99, 39, 21, 20, 5, 0, 46, 29, 0, 20, 73, 17, 65], [52, 39, 28, 0, 9, 92, 44, 54, 83, 76, 16, 0, 72, 64, 0, 38, 41, 17, 0, 0, 28, 11, 0, 0, 80, 21, 37], [66, 29, 137, 17, 65, 11, 34, 40, 106, 27, 54, 0, 34, 52, 154, 58, 0, 35, 0, 0, 96, 21, 0, 0, 39, 3, 40]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

