created: 20230415000841000
creator: Drevarr
modified: 20230705163525570
modifier: drevarr
tags: ChartData
title: 202304150008_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Fruji", "Paul Bjart Mist Cop", "Kosa\u00edr", "Lord Erin The Wise", "The Fancy Cheese", "Aronorf Xideliesi", "Smol Daddy Tika", "Corlyss Velaryonn", "Newtype Khan", "Cat Wigglebooty", "Blancooo Padreee", "Stoic Rapidfire", "Drevarr Moonwillow", "Arcanophage Farra"];
const professions = ["Berserker", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Scrapper", "Firebrand", "Spellbreaker", "Vindicator", "Spellbreaker", "Scrapper", "Spellbreaker", "Druid", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[100.9152, 74.3233, 65.0754, 0.0, 51.5844, 0.0, 0.0, 66.861, 47.6424, 19.6659, 0.0, 55.2598, 0.0, 65.9171, 70.7778, 46.633, 90.1595, 41.2237, 150.8446, 68.4732, 0.0, 37.9025], [94.3056, 52.605, 66.1878, 46.62, 164.0448, 0.0, 138.138, 129.789, 46.6596, 65.3738, 0.0, 75.8811, 63.4, 53.024, 19.228, 68.7916, 153.6214, 137.6837, 21.7752, 5.9674, 20.5682], [44.3232, 110.5457, 79.6757, 66.492, 139.4541, 28.08, 171.9287, 168.5946, 124.7557, 0.0, 195.7006, 0.0, 46.5667, 43.6249, 28.7813, 75.6599, 127.8776, 144.2642, 53.148, 31.8881, 88.0942], [112.1472, 68.2362, 80.1855, 70.812, 151.7094, 27.945, 119.33, 63.5835, 96.1272, 58.9209, 0.0, 191.9267, 0.0, 70.322, 83.4048, 46.4306, 73.6975, 120.9789, 160.631, 58.308, 41.3053, 79.2977], [115.0416, 129.1829, 33.0012, 28.08, 132.165, 141.2775, 100.947, 171.2166, 111.4776, 60.0732, 49.749, 196.1049, 0.0, 114.9485, 0.0, 47.6854, 110.8733, 191.4799, 57.3682], [113.2704, 71.7682, 67.5783, 63.648, 125.1963, 52.65, 155.6709, 126.7737, 100.386, 112.6949, 11.96, 177.3705, 0.0, 38.7532, 78.7527, 44.7709, 89.2874, 136.6271, 140.0459, 52.0644, 32.0746, 53.8138], [97.0704, 31.2624, 75.2261, 112.176, 280.1898, 0.0, 0.0, 144.7344, 0.0, 16.5931, 0.0, 184.379, 88.5187, 54.4481, 21.8997, 100.2984, 242.7992, 233.5223, 51.4452, 16.69, 97.0847], [95.2568, 40.066, 223.4652, 80.1283, 166.0501, 122.6139, 168.872, 428.39, 253.9386, 130.032, 40.2797, 106.8514], [75.4272, 180.9612, 22.0162, 75.636, 111.8196, 179.3475, 210.6073, 255.9072, 80.4024, 96.87, 79.856, 164.9707, 44.4691, 153.7553, 64.2822, 146.6319, 431.2504, 154.5567, 91.6416], [34.6896, 8.6423, 53.3488, 0.0, 92.2752, 36.45, 72.5756, 32.6439, 0.0, 17.9759, 0.0, 124.4019, 175.4642, 176.351, 160.6246, 309.8348, 584.5352, 590.555, 188.4432, 0.0, 36.3502], [270.4317, 395.5287, 71.3232, 122.7584, 38.111, 300.9637, 192.6121, 89.386, 65.8205, 228.5059, 682.9673, 182.3971, 101.2392, 136.3169, 152.4508], [215.784, 206.888, 148.32, 183.204, 203.9346, 338.175, 366.597, 470.1246, 165.3912, 202.4975, 75.555, 431.8351, 249.3522, 183.6614, 153.0144, 143.0342, 666.6461, 587.0117, 72.4464, 75.2447], [188.6544, 351.1008, 120.7881, 161.316, 314.793, 374.76, 650.0987, 565.3032, 131.2272, 188.4395, 52.877, 747.3551, 332.1025, 188.4084, 175.3594, 471.1844, 1172.4357, 1015.2484, 149.124, 136.0838, 238.6045], [248.6592, 344.1118, 215.8056, 170.928, 490.2921, 388.8, 660.7247, 755.7915, 221.598, 324.0268, 108.675, 1033.8974, 7.0863, 372.1667, 213.5201, 93.9946, 339.9244, 766.4243, 1078.8596, 190.7652, 182.7038, 223.5988], [235.1376, 401.301, 129.9654, 203.076, 488.9304, 360.5175, 577.3106, 644.6187, 155.6568, 292.5306, 161.552, 813.3973, 347.1004, 246.037, 97.152, 374.0476, 1059.5332, 987.9142, 247.2156, 292.354, 489.0455]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

