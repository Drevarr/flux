created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Lillith Bella", "Nadumi", "Milvia Rosalyn", "Hypotenusa", "Vini Boy", "Klengah", "Tootsie Pop Rocks", "Minnie Darley", "Grand Magus Karen", "Crusader Siolith", "Bee Nemesis", "Blancooo Padreee", "Newtype Khan", "Tegan Parker", "Drevarr Moonwillow", "High Sorcer Baradun"];
const professions = ["Dragonhunter", "Daredevil", "Druid", "Tempest", "Tempest", "Druid", "Scrapper", "Dragonhunter", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[72.8512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.4495, 57.1322, 0.0, 0.0, 0.0], [68.147, 44.5088, 39.8853, 0.0, 29.9825, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 14.9912, 67.5351, 69.5019, 0.0, 0.0, 53.1417, 0.0], [243.9817, 17.8682], [120.2149, 0.0, 0.0, 56.5721, 0.0, 148.8665, 0.0], [0.0, 0.0, 79.4625, 0.0, 46.1916, 0.0, 72.5712, 78.2739, 0.0, 0.0, 0.0, 0.0, 109.0682, 22.5589], [88.2045, 0.0, 58.4844, 0.0, 5.1597, 0.0, 146.2782, 46.9524, 0.0, 81.0763, 61.104, 0.0, 35.2731, 6.993], [113.0275, 0.0, 184.5207, 0.0, 165.9258, 0.0, 0.0, 0.0, 71.3389, 0.0, 79.4805, 0.0], [0.0, 0.0, 0.0, 212.7166, 106.7914, 0.0, 135.9025, 98.683, 0.0, 162.558], [30.7275, 80.33, 176.4703, 49.9145, 104.0949, 0.0, 20.7833, 136.2634, 62.9445, 60.1981, 0.0, 0.0, 93.7522, 31.3908], [0.0, 98.6076, 49.9333, 193.4097, 180.5312, 0.0, 146.8124, 86.2585, 265.2446], [110.6445, 39.875, 0.0, 0.0, 209.2545, 0.0, 392.3843, 196.1024, 23.8134, 236.2179, 0.0, 0.0, 0.0], [179.724, 0.0, 328.4026, 0.0, 237.5919, 488.2374, 76.2455, 0.0, 139.1699, 188.9641, 53.8143, 469.8055, 89.8212], [271.8253, 276.5763, 0.0, 290.0578, 382.5399, 9.6483, 281.5519, 276.8011, 478.7398, 184.926], [75.9135, 40.136, 545.812, 0.0, 262.3257, 58.4204, 470.5205, 620.822, 10.3443, 219.6925, 133.2576, 0.0, 320.7069, 48.7179], [212.568, 673.7149, 50.1088, 0.0, 50.9441, 311.8632, 46.2962, 46.8147, 573.6814, 476.0511, 18.515, 560.3089, 60.8391]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

