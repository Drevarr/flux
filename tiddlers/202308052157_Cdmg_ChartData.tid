created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Hellyrian", "Eaffi", "Crusader Siolith", "Revitiel", "Tootsie Pop Rocks", "Crabbedmermaid", "Frozen Impaler", "Veio De Fralda", "Vee Usagi", "Rina Of Theros", "Frozen Chaos", "Koralia Danai", "Kisumaiassu", "Frozen Impaler", "One Bad King", "Be\u00eb", "Permanent Dawn", "Avalanche", "Tegan Parker", "Gabe Malhorn", "Jimbo One Eye", "Vee Usagi", "Bella Sassy", "Sub Train", "Drevarr Moonwillow", "Lord Erin The Wise", "Lucas Might", "K\u00e1 Otik", "Mistwalker Cael", "Crabbedmermaid", "Daphne Agla\u00e9", "Kumengo", "Miphest\u00f6", "Thetatia", "Ryntha Bloodfang", "Galrath Doomdragon", "Blancooo Padreee", "Glorious Gluvs", "Aronorf Xideliesi", "Civil Rules", "Kosair", "K H I T H", "Keypek The Drunk", "Minnie Darley", "Rina Of Theros", "Legacy Of Mathus", "Leto Warr", "Xanvias Einzbern", "Cedryn X", "Be\u00eb"];
const professions = ["Tempest", "Tempest", "Firebrand", "Vindicator", "Scrapper", "Dragonhunter", "Reaper", "Necromancer", "Scourge", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Dragonhunter", "Reaper", "Weaver", "Berserker", "Tempest", "Firebrand", "Scrapper", "Reaper", "Firebrand", "Firebrand", "Scrapper", "Weaver", "Tempest", "Vindicator", "Vindicator", "Firebrand", "Scourge", "Firebrand", "Tempest", "Scourge", "Berserker", "Berserker", "Berserker", "Berserker", "Firebrand", "Berserker", "Dragonhunter", "Dragonhunter", "Scrapper", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Berserker", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.2517, 6.6158], [20.8868, 10.0281, 21.5, 0.0, 0.0, 0.3167], [2.3179, 0.0, 0.0, 1.1048, 0.0, 0.0, 0.0, 10.5455, 8.6809, 0.0, 4.637, 4.7184, 4.569, 8.1594, 22.5283, 8.1188, 3.0385, 7.5789, 0.0, 0.0], [0.9205, 0.0, 0.0, 4.1333, 0.0, 0.2828, 0.0, 2.7532, 14.9362, 0.0, 0.0, 3.5243, 62.7241, 4.1449, 2.1509, 2.6313, 10.0385, 0.0, 0.0, 0.0], [0.2119, 1.2421, 0.9184, 1.8857, 0.4595, 3.1212, 5.2857, 36.1915, 7.1471, 0.1037, 0.7476, 4.5517, 2.8696, 11.3585, 4.0125, 2.8974, 33.3158, 3.3944, 4.6], [39.9592, 5.381, 0.2647, 42.2148, 4.0377], [0.0, 5.2525, 0.0, 20.974, 15.4255, 0.0, 8.763, 66.2029], [28.2987, 75.8511, 5.4706, 27.0074], [19.699, 163.6207], [15.913, 9.9245, 14.6031, 20.859, 1.5263, 8.5282, 7.125], [2.0438, 50.2179, 113.9474, 0.0, 2.8917], [12.5497, 2.9421, 5.3265, 0.2762, 0.0, 0.0, 0.0, 49.5584, 1.1489, 11.3235, 18.1185, 9.0194, 11.569, 0.5507, 0.0, 3.3875, 1.891, 0.0, 0.0, 6.6333], [32.3377, 3.5632, 13.7143, 2.4, 0.0, 0.0, 0.0, 2.7403, 13.3617, 0.0, 0.0, 10.4466, 10.6379, 3.0435, 13.6038, 8.9156, 0.0, 0.0, 0.0, 4.8], [107.8641, 53.8103], [23.569, 10.058, 19.9811, 19.1938, 0.0, 4.6579, 0.662, 48.6167], [49.3478, 0.0, 10.8187, 20.1603, 0.0, 32.3662, 7.6417], [5.245, 1.6684, 18.449, 0.6, 0.0, 1.8586, 124.8442, 0.0, 2.5882, 8.3407, 6.4854, 34.6552, 0.0], [0.0, 0.5283, 40.9, 16.1538, 0.8169, 1.2917], [16.5629, 0.2526, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6593, 1.2913, 48.7931, 0.0, 111.0943, 9.0344, 6.7949, 0.0, 0.0, 1.7667], [24.1457, 3.1632, 11.7551, 0.5143, 4.1351, 1.6263, 0.0, 21.7922, 29.9574, 0.0, 0.9704, 9.5049, 29.0172, 21.0725, 11.2453, 6.2219, 4.0321, 0.0, 0.0, 1.675], [0.0, 23.7959, 11.3333, 0.5946, 0.0, 6.7071, 0.0, 87.8571, 16.8085, 8.8824, 28.9259, 31.3981], [72.6087, 7.8679, 28.375, 7.7692, 13.2895, 0.0, 20.0333], [6.7815, 11.2474, 37.1837, 4.4571, 0.0, 0.0202, 0.0, 22.7143, 93.4043, 4.7353, 11.8, 0.0, 17.1724, 13.3188, 0.0, 4.1781, 4.6538, 0.0, 0.0, 15.275], [4.4238, 3.5211, 43.8571, 10.1238, 0.0, 0.0, 3.4646, 0.0, 37.6494, 21.5745, 10.8824, 0.9111, 5.9709, 40.4138, 7.1304, 14.3208, 12.7562, 11.4487, 15.1053, 0.7535, 4.1667], [13.9868, 11.5737, 1.102, 7.0762, 0.1757, 0.0, 11.0808, 0.0, 22.1039, 7.5319, 2.3529, 4.1778, 9.6796, 24.7414, 42.6087, 23.6792, 6.0594, 20.0577, 24.9474, 0.0, 10.5417], [50.1192, 53.5579, 20.7143, 19.381, 3.5135, 0.0, 0.0, 0.0, 28.4545], [28.029, 0.0, 48.9625, 15.9808, 83.9211, 0.0, 3.1333], [0.5695, 32.3789, 0.0, 28.781, 0.0, 0.0, 7.6465, 0.0, 27.1948, 0.0, 12.8529, 21.1778, 0.3204, 15.2586, 19.1739, 17.3962, 13.6687, 9.4103, 0.0, 3.9366, 3.5917], [17.8411, 30.1579, 74.1633, 1.7905, 0.0, 0.0, 0.0, 0.0, 7.2208, 145.4043, 0.0, 1.3407, 20.1553, 2.6724, 11.8261, 3.8679, 10.1469, 3.3654, 0.0141, 2.3], [3.3108, 0.0, 0.0, 0.0, 159.8701, 138.2766, 9.9903, 16.5517, 4.942, 1.2031, 4.4808, 61.6053, 0.0, 21.8583], [35.6424, 21.2316, 24.5714, 2.3333, 0.1351, 0.0, 2.798, 0.0, 2.2987, 44.1277, 3.2941, 21.2, 19.1748, 118.931, 38.7564, 1.7368, 0.0, 11.125], [2.0811, 0.0, 0.0, 104.9091, 78.0638, 0.0, 14.5481, 20.7476, 121.7759, 34.8696, 0.0, 19.5688, 14.609], [17.8675, 8.0316, 28.2653, 3.181, 0.0, 25.6869, 103.0519, 43.7872, 15.6148, 9.0485, 154.2241, 67.913], [72.3404, 4.3824, 64.1185, 13.165, 73.8448, 12.7101, 1.2453, 41.5719, 8.5577, 0.0, 0.0, 22.3167], [35.6893, 182.1552, 97.2319, 19.5283, 45.0469, 0.0], [22.1722, 42.4263, 92.2041, 28.419, 12.9324, 0.0, 143.1688, 71.9574, 0.0, 0.0, 28.6505, 21.6218, 0.0, 0.0, 5.1583], [21.4901, 12.9684, 52.6735, 12.2571, 0.0, 0.0, 23.1212, 0.0, 48.987, 19.8936, 0.0, 0.363, 49.3107, 11.4138, 12.7246, 0.1509, 25.3719, 71.2628, 0.0, 1.5493, 1.2417], [1.4901, 18.6316, 0.0816, 4.5143, 0.0, 5.6, 0.2222, 0.0, 8.4675, 9.5957, 0.0, 15.6963, 11.3495, 3.6034, 145.6087, 0.0, 59.8219, 58.5833, 8.0789, 0.0986, 2.1333], [57.3444, 39.3684, 64.2857, 57.8, 2.2297, 0.0, 0.0, 3.4844, 66.7662, 19.4468, 0.0, 7.0444, 18.767, 5.7931, 7.2174, 30.7547, 26.6125, 17.5, 72.8421, 0.0, 8.2667], [80.8936, 0.0, 71.5333, 61.2718, 36.3621, 8.7536, 5.1509, 73.0031, 46.2115, 32.9211, 0.0, 1.825], [0.0, 106.0519, 112.4468, 0.0, 32.4222, 57.5243, 32.3966, 60.7246, 9.3774, 46.4438, 53.1474, 0.0, 0.0, 12.1917], [61.3444, 34.1947, 110.102, 42.9333, 35.6081, 20.625, 4.6061, 0.0, 231.013, 119.5319, 4.1765, 15.0296], [30.8146, 47.3474, 30.6327, 22.8952, 19.3108, 0.0, 20.7677, 2.0781, 51.5584, 23.8936, 3.3529, 17.6444, 39.8932, 3.7931, 58.7681, 28.0377, 36.75, 22.1667, 7.0789, 2.1831, 9.725], [2.0842, 10.551, 13.3714, 0.0, 27.3838, 90.1299, 51.9362, 8.3235, 7.3407, 21.932, 145.8793, 87.2464, 0.0377, 59.05, 61.1474], [135.3245, 38.1842, 75.8367, 11.4857, 0.2703, 0.0, 6.5253, 0.0, 165.8182, 168.6596, 5.1471, 39.6296, 42.4466, 64.7931], [17.298, 66.7789, 113.3673, 49.8, 5.0676, 54.475, 40.5354, 0.0, 47.4416, 26.6383, 0.0, 0.0, 14.165, 57.9828, 58.0145, 11.6813, 50.8269, 42.7632, 36.9648, 28.5583], [18.1474, 280.2449, 26.1333, 23.7838, 0.0, 15.5556, 0.0, 21.5584, 0.0, 0.0, 16.4815, 4.3495, 87.2069, 251.3623, 10.9811, 137.2625, 0.0, 57.7632, 0.0, 27.4083], [147.6159, 64.9842, 231.8776, 0.0, 0.0, 0.0, 26.7778, 366.1688, 36.7021, 0.0, 50.8074, 195.8835], [29.8079, 87.4789, 74.2449, 24.9905, 0.0, 4.675, 26.5051, 0.0, 80.3506, 94.0426, 1.3824, 49.3926, 189.0, 145.0862, 161.7536, 0.1132, 114.2656, 94.1667, 0.6579, 1.3239, 7.5583], [169.5298, 110.9789, 100.3469, 122.3619, 0.0, 0.0, 28.3838, 0.0, 297.7792, 135.4681, 0.0, 93.8296, 157.7379, 237.5345]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

