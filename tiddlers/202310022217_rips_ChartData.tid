created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Zaedy Zae", "Tribal S", "Ryvalia Fazebringer", "Daphne Agla\u00e9", "Rozaalyna", "\u00c7onstant\u00edne", "Grasszanine", "Nickhia", "Be\u00eb", "Adjudicatrix Farra", "Elonith Requiem", "Swithblight", "Rina Of Theros", "Newtype Khan", "Black Raspberry Pie", "Morton Saltbringer", "Eibh\u00ebar"];
const professions = ["Firebrand", "Druid", "Druid", "Chronomancer", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Scourge", "Reaper", "Reaper", "Reaper", "Scourge", "Reaper", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0339, 0.0, 0.0, 0.0132, 0.0, 0.0, 0.0015, 0.7703, 0.0, 0.0], [0.0339, 0.0, 0.0, 0.0526, 0.0597, 0.0203, 0.0092, 0.0, 0.0179, 0.0202, 0.0632, 0.0504, 0.0341, 0.0617, 0.0, 0.0738, 0.0769, 0.0833, 0.1404, 0.0141, 0.0769, 0.0511], [0.0, 0.0, 0.0, 0.0526, 0.0164, 0.072, 0.0405, 0.0183, 0.0, 0.0149, 0.0645, 0.0421, 0.1008, 0.1818, 0.0247, 0.0184, 0.0656, 0.1154, 0.1167, 0.1053, 0.0282, 0.0513, 0.0284], [0.2034, 0.1622, 0.0392, 0.1579, 0.0227, 0.049, 0.0946, 0.0642, 0.0, 0.0239, 0.0685, 0.0, 0.1261, 0.1932, 0.0741, 0.0552, 0.1148, 0.25, 0.05, 0.1228, 0.0986, 0.1282, 0.0682], [0.3051, 0.1622, 0.0, 0.1316, 0.0, 0.0444, 0.0676, 0.055, 0.0, 0.003, 0.0685, 0.4, 0.2017, 0.2159, 0.1728, 0.0307, 0.1148, 0.3462], [0.2432, 0.0, 0.2895, 0.0, 0.072, 0.0811, 0.0275, 0.0, 0.0, 0.2857, 0.1477, 0.5062, 0.1534, 0.2541, 0.2692, 0.05, 0.4211, 0.0986], [0.0, 0.2368, 0.0, 0.0227, 0.0092, 0.1284, 0.0917, 0.0091, 0.0328, 0.2298, 0.1474, 0.395, 0.1364, 0.2963, 0.2331, 0.0328, 0.4038, 0.7, 0.3333, 0.0, 0.2564, 0.142], [0.0119, 0.2782, 0.1368, 0.3866, 0.1136, 0.4568, 0.1166, 0.5902, 0.3846, 0.9, 0.1053, 0.1127, 0.8974, 0.0739], [0.4874, 0.3523, 0.6914, 0.2638, 0.3115, 0.9808, 0.5833, 0.6491, 0.1268, 0.9231, 0.2045], [0.0, 0.0789, 0.0, 0.0, 0.1103, 0.1486, 0.0917, 0.0091, 0.0179, 0.1613, 0.1263, 0.2773, 0.5, 0.3333, 0.1595, 0.4426, 0.4423, 0.5167, 0.3333, 0.0282, 0.4359, 0.0852], [0.3729, 0.2973, 0.0196, 0.1974, 0.0, 0.17, 0.2027, 0.0642, 0.0, 0.0209, 0.1169, 0.2105, 0.3697, 0.2841, 0.1605, 0.2577, 0.1885, 0.5962, 0.5333, 0.0141, 0.4872, 0.2102], [0.1409, 0.0203, 0.211, 0.1273, 0.0269, 0.2339, 0.4947, 0.4202, 0.3864, 0.3704, 0.0613, 0.1885, 0.2308, 0.65, 0.4035, 0.0845, 0.641, 0.1477], [0.4746, 0.7568, 0.0196, 0.3816, 0.0, 0.0, 0.1853, 0.1959, 0.0367, 0.0, 0.003, 0.2016, 0.0737, 0.3866, 0.1477, 0.3333, 0.2331, 0.123, 0.3462, 0.6167, 0.2807, 0.2394, 0.5385, 0.142], [0.322, 0.4595, 0.0196, 0.1974, 0.0, 0.0, 0.1654, 0.2635, 0.1743, 0.0455, 0.0209, 0.2258, 0.6737, 0.3109, 0.4773, 0.716, 0.1963, 0.3115, 0.4231, 0.7167, 0.4737, 0.2394, 0.5385, 0.1477], [0.7288, 0.7838, 0.0, 0.6053, 0.0, 0.1776, 0.4054, 0.3119, 0.0, 0.0269, 0.2661, 0.4842, 0.5294, 0.5682, 0.7654, 0.2699, 0.2541, 0.6538, 0.8333, 0.6842, 0.1972, 0.5128, 0.2386], [0.7027, 0.0, 0.5526, 0.0, 0.0227, 0.2573, 0.2162, 0.1376, 0.0091, 0.0746, 0.4194, 0.1368, 0.8571, 0.4205, 1.2716, 0.3742, 0.5164, 0.4808, 0.3667, 0.5965, 0.1408, 0.6154, 0.2614], [0.2703, 0.0196, 0.75, 0.0, 0.2343, 0.4324, 0.2844, 0.0091, 0.006, 0.4798, 0.6737, 0.5882, 1.0909, 0.9877, 0.2638, 0.3361, 0.3846, 0.6, 0.5263, 0.1549, 0.3077, 0.3239], [1.1622, 0.0392, 1.0395, 0.0227, 0.4885, 0.5135, 0.5688, 0.0, 0.1403, 0.6411, 0.7263, 1.0588, 1.125, 0.8148, 0.816, 0.7377, 1.5385, 1.5, 0.9649, 0.338, 1.4872, 0.5966]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

