created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Porlen", "Willow Starrdust", "Daphne Agla\u00e9", "Ax Axun", "Sygaldry Verdandi", "Grasszanine", "Artakama Nahid", "Satori Krull", "Daring Deathblade", "Permanent Dawn", "Tribal S", "Lucky Luprac\u00e1n", "Gamora Titus", "Xanvias Einzbern", "My Birthday Girl", "Vee Usagii", "Arriasa", "Dark Sidiuz", "Gamora Titus", "Lord Of Bones", "Tika Fiery", "Tootsy Pop Star", "Bella Sassy", "Be\u00eb", "Gokai Ramasheta", "Rina Of Theros", "Blancooo Padreee", "Lost In Sauce", "Shaca Booey", "Ateriuz", "Primal Clone", "Belvyn Brightblade", "Koralia Danai", "Lord Erin The Wise", "High Sorcer Baradun", "Duke Silvver", "Legacy Of Mathus", "Sub Train", "Vivian Vivisection", "Necrotic Windrunner", "Brygdyla", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Aronorf Xideliesi", "Crusader Siolith", "Gestalia Yesteryear", "Jmbrage Rev", "Glorious Gluvs", "Newtype Khan", "Mistwalker Cael"];
const professions = ["Ranger", "Herald", "Scourge", "Vindicator", "Firebrand", "Spellbreaker", "Tempest", "Scrapper", "Reaper", "Weaver", "Druid", "Scrapper", "Dragonhunter", "Berserker", "Scrapper", "Dragonhunter", "Druid", "Scourge", "Firebrand", "Scourge", "Firebrand", "Scourge", "Firebrand", "Scourge", "Vindicator", "Scourge", "Spellbreaker", "Vindicator", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Weaver", "Tempest", "Vindicator", "Berserker", "Firebrand", "Reaper", "Reaper", "Tempest", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Druid", "Vindicator", "Berserker", "Spellbreaker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25, 10], [7, 13, 12, 2, 1, 1], [6, 7, 4, 2, 0, 1, 0, 1, 2, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0, 3, 0, 0, 4, 0, 1], [3, 7, 7, 0, 2, 0, 2, 0, 2, 2, 0, 1, 0, 3, 1, 0, 0, 0, 0, 2, 0, 2, 3, 0, 2], [7, 7, 3, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 2, 1, 0, 0, 2, 0, 5, 8, 0, 1], [1, 9, 4, 4, 2, 0, 0, 2, 0, 11, 7, 1, 2], [4, 11, 6, 0, 0, 0, 0, 0, 0, 2, 0, 4, 0, 0, 1, 0, 1, 2, 2, 5, 3, 0, 3], [7, 18, 8, 0, 2, 1, 4, 4], [4, 5, 4, 0, 1, 1, 1, 0, 2, 1, 2, 5, 6, 0, 0, 0, 0, 0, 8, 5, 1, 3], [1, 0, 4, 5, 9, 1, 2, 1, 0, 0, 2, 2, 9, 9, 0, 7], [5, 8, 7, 1, 0, 0, 0, 0, 0, 1, 2, 5, 0, 6, 0, 0, 1, 0, 2, 3, 0, 1, 10, 1, 2], [7, 15, 13, 2, 1, 5, 0, 0, 4, 2, 0, 1, 0, 4, 2, 0, 1, 0, 0, 0, 3, 2, 1, 1], [26, 41], [4, 8, 16, 1, 1, 0, 1, 2, 5, 1, 0, 4, 1, 7, 0, 0, 0, 0, 0, 3, 0, 2, 8, 2, 3], [11, 16, 8, 1, 0, 2, 3, 2, 2, 1, 0, 2, 0, 3, 1, 0, 1, 0, 7, 8, 0, 1], [23, 4, 1, 2, 1, 7, 0, 1, 1, 0, 2, 3, 0, 2, 0, 0, 0, 2, 7, 8, 1, 4], [4, 14, 7, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 5, 4, 0, 0, 0, 3, 1, 8, 14, 0, 5], [8, 19, 5, 2, 2, 0, 2, 1, 8, 1, 3, 3, 0, 4, 2, 1, 1, 0, 0, 4, 5], [39, 4, 5, 2, 8, 8, 13], [8, 7, 15, 1, 0, 0, 1, 0, 3, 2, 1, 5, 7, 1, 0, 0, 0, 0, 7, 0, 5, 14, 2, 2], [6, 14, 9, 0, 2, 2, 1, 0, 2, 0, 1, 5, 0, 9, 4, 1, 1, 1, 1, 3, 0, 7, 12, 0, 2], [6, 18, 21, 5, 2, 0, 0, 0, 4, 1, 1, 0, 0, 3, 1, 0, 1, 0, 2, 0, 6, 8, 0, 4], [7, 22, 11, 2, 2, 1, 0, 0, 1, 0, 2, 4, 1, 4, 3, 0, 0, 0, 4, 0, 6, 11, 2, 2], [12, 11, 14, 0, 2, 0, 1, 0, 5, 1, 3, 2, 0, 5, 2, 0, 0, 0, 0, 2, 0, 5, 16, 0, 5], [12, 12, 5, 1, 20, 2, 9, 2, 3, 13, 5, 1, 2], [8, 18, 16, 1, 1, 0, 4, 1, 9, 1, 2, 0, 0, 7, 3, 1, 1, 0, 0, 1, 0, 7, 10, 0, 1], [8, 28, 10, 2, 0, 0, 1, 0, 5, 1, 1, 2, 0, 8, 1, 1, 1, 0, 4, 0, 6, 11, 0, 4], [7, 25, 25, 13, 3, 1, 5, 1, 12, 7], [7, 59, 19, 2, 6, 1, 3, 3, 1], [20, 24, 3, 3, 2, 0, 0, 0, 4, 2, 2, 2, 0, 6, 5, 0, 0, 0, 3, 1, 2, 14, 4, 5], [6, 22, 19, 0, 1, 2, 2, 0, 6, 0, 4, 7, 6, 3, 0, 1, 0, 3, 0, 5, 14, 0, 3], [20, 46, 19, 4, 6, 0, 0, 10], [7, 23, 17, 1, 1, 0, 5, 0, 5, 4, 0, 7, 2, 1, 0, 0, 0, 7, 1, 8, 17, 0, 3], [8, 25, 21, 4, 3, 0, 5, 2, 7, 4, 5, 2, 2, 5, 4, 0, 2, 1, 3, 1, 10, 6], [16, 33, 16, 5, 1, 3, 3, 0, 3, 0, 2, 6, 0, 5, 5, 1, 2, 0, 5, 0, 3, 10, 1, 1], [0, 24, 7, 3, 9, 4, 0, 8, 5, 5, 7, 2, 7, 4, 0, 0, 1, 4, 0, 6, 9, 5, 11], [11, 18, 18, 5, 4, 4, 4, 2, 6, 0, 3, 4, 3, 10, 4, 0, 1, 1, 1, 3, 1, 3, 8, 6, 3], [12, 20, 24, 5, 2, 1, 3, 1, 7, 1, 1, 2, 0, 7, 2, 1, 2, 0, 1, 7, 0, 8, 11, 7, 5], [18, 31, 4, 9, 6, 5, 6, 3, 12, 5, 3, 1, 0, 6, 5, 4, 0, 0, 5, 1, 6], [8, 31, 22, 2, 1, 0, 1, 3, 11, 2, 2, 3, 1, 7, 5, 1, 1, 0, 8, 2, 0, 9, 3, 8], [5, 33, 25, 8, 3, 1, 3, 3, 7, 0, 7, 0, 1, 7, 4, 2, 1, 2, 1, 2, 1, 6, 10], [9, 26, 21, 3, 3, 4, 4, 2, 4, 3, 2, 8, 10, 4, 1, 0, 0, 4, 0, 6, 15, 0, 5], [10, 28, 21, 3, 1, 1, 2, 4, 6, 1, 6, 6, 8, 5, 4, 1, 6, 0, 8, 17, 2, 3], [16, 30, 20, 0, 2, 6, 4, 1, 8, 3, 3, 2, 0, 10, 5, 1, 1, 1, 0, 6, 0, 8, 16, 2, 5], [13, 30, 26, 5, 5, 0, 2, 3, 9, 3, 1, 6, 1, 7, 4, 1, 3, 1, 5, 2, 10, 12, 2, 5], [18, 33, 24, 7, 3, 0, 5, 4, 11, 2, 1, 4, 7, 4, 1, 2, 1, 2, 5, 0, 12, 16, 0, 7], [9, 1, 27, 12, 10, 15, 3, 19, 4, 1, 0, 1, 7, 1, 16, 21, 6, 20], [20, 59, 30, 11, 8, 3, 4, 4, 10, 4, 7, 7, 15, 5, 2, 2, 0, 3, 4, 3, 20, 8, 9], [21, 55, 42, 8, 3, 6, 4, 6, 5, 3, 5, 3, 2, 14, 8, 5, 2, 2, 2, 0, 4, 13, 13, 10, 5], [26, 73, 43, 14, 8, 11, 6, 3, 12, 5, 9, 8, 0, 14, 5, 0, 1, 0, 0, 7, 1, 7, 22, 5, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

