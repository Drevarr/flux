created: 20230304223548000
creator: Drevarr
modified: 20230705163521168
modifier: drevarr
tags: ChartData
title: 202303042235_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Blanco Padre Guard", "Venomina The Fierce", "Nimplet", "Tootsie Pop Bringer", "Ace Hammers", "Drevarr Moonwillow", "Cat Wigglebooty", "Sp\u00edcy Cheese", "Newtype Khan", "Oo Dads Mad", "Mac Aaroni", "Primal Clone", "Koralia Danai", "Be\u00eb", "Madrigal Moonshade", "Bella Sassy", "Xanvias Tseli"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Scrapper", "Vindicator", "Scrapper", "Scrapper", "Berserker", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Reaper", "Vindicator", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[490, 386, 11579, 390, 147, 2407, 2667, 521, 1679, 9504, 192, 347, 266, 360, 420, 409, 376, 827, 514, 1600], [1386, 317, 1831, 534, 210, 425, 3100, 550, 6485, 9894, 391, 290, 312, 601, 325, 343, 798, 419, 13784], [2285, 7720, 11449, 113, 521, 1765, 634, 6769, 9802, 398, 370, 312, 343, 952, 373, 882, 764, 15755], [12657, 199, 330, 234, 357, 402, 327, 334, 645, 463, 1226], [502, 3962, 6523, 420, 189, 390, 1642, 420, 1647, 335, 258, 439, 270, 333, 607, 393, 350, 539, 577, 382], [303, 877, 724, 366, 312, 2971, 2827, 543, 1878, 9789, 313, 304, 304, 358, 410, 375, 450, 570, 1418, 693], [394, 621, 678, 408, 244, 839, 4835, 367, 1657, 287, 267, 258, 230, 274, 699, 697, 361, 532, 505, 1103], [4728, 2205, 253, 594, 314, 440, 765, 476, 1791, 7256, 410, 561, 250, 360, 447, 414, 383, 465, 790, 25488], [485, 280, 1788, 158, 350, 5496, 414, 1650, 8905, 228, 408, 207, 334, 634, 357, 290, 813, 16001], [1706, 666, 347, 243, 144, 269, 3883, 524, 677, 5292, 312, 518, 327, 350, 625], [537, 548, 274, 583, 329, 1491, 559, 1565, 8753], [510, 1000, 513, 205, 165, 408, 4909, 314, 1725, 8045, 280, 240, 305, 396, 704, 318, 371, 323, 567, 1133], [309, 5454, 310, 334, 169, 436, 4712, 353, 1743, 8208, 284, 295, 244, 355, 572, 471, 568, 697, 436, 518], [294, 294, 9313, 196, 395, 5177, 446, 417, 13683, 208, 541, 238, 301, 497, 561, 337, 600, 441, 500], [9973, 236, 394, 208, 269, 943, 282, 497, 692, 440, 18048], [284, 257, 11061, 454, 299, 405, 3816, 254, 1356, 15422, 295, 311, 213, 304, 372, 281, 283, 30697], [240, 850, 8152, 302, 167, 1924, 4707, 382, 357, 907, 193, 321, 167, 172, 349, 296, 184, 305, 441, 1018], [813, 734, 5094, 516, 166, 212, 3098, 368, 969, 3056, 119, 385, 170, 236, 346, 209, 260, 384, 230, 15123]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

