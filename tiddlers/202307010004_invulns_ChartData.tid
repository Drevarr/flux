created: 20230701000406000
creator: Drevarr
modified: 20230705163540129
modifier: drevarr
tags: ChartData
title: 202307010004_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Audra Storm", "Ima Lou", "Aronorf Xideliesi", "Sakis Ranger", "Sumatra Satyricon", "Xanvias Einzbern", "Solus Sanctus", "Brad Bellick", "K\u00f4sair", "Fluffy No Care Bear", "Xyntharos", "Gamora Titus", "Vhalloe", "Be\u00eb", "Gestern Yesteryear", "Johosh The Mighty", "Ak\u00e1nt\u00f3r", "Kary\u00edna", "Air One Com", "Mike The Archmagus", "Latedoctor", "Drumina", "Mmathuss", "Broken Cheese", "Gavann", "Bella Sassy", "Koralia Danai", "Demon Staph", "Drevarr Moonwillow", "Oo Dads Mad", "Dingle Mcbingle", "High Sorcer Baradun", "Tribal S", "Ryvalia Fazebringer", "Morv\u00e4rth", "Smol Daddy Tika", "Smol Gluvs", "Klengah", "Blancooo Padreee", "Duke Silvver", "Arriasa", "Newtype Khan", "Lord Erin The Wise", "Tegan Parker", "Morton Saltbringer", "Primal Clone", "Lucky Leipreach\u00e1n", "Melli Dragonswrath", "Arcanophage Farra", "Zayde Sunsabre"];
const professions = ["Weaver", "Druid", "Firebrand", "Druid", "Soulbeast", "Berserker", "Firebrand", "Scrapper", "Berserker", "Berserker", "Vindicator", "Firebrand", "Druid", "Scourge", "Firebrand", "Berserker", "Druid", "Vindicator", "Firebrand", "Weaver", "Reaper", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Druid", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Druid", "Chronomancer", "Reaper", "Berserker", "Reaper", "Druid", "Berserker", "Vindicator", "Druid", "Spellbreaker", "Weaver", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Berserker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 111, 17], [5, 0, 0, 6, 25, 0, 0, 0, 57, 14, 0, 25], [11, 0, 0, 9, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 59, 16, 0, 10, 0], [13, 0, 16, 0, 4, 0, 0, 19, 25, 0, 0, 5, 0, 0, 21, 16, 23, 27, 0, 0, 0, 0], [21, 22, 0, 22, 6, 0, 0, 1, 0, 46, 6, 16, 0, 0, 3, 0, 23, 1, 0, 0, 11], [0, 35, 39, 4, 8, 0, 0, 0, 0, 26, 0, 13, 0, 0, 14, 0, 20, 28, 0, 0, 3, 0], [11, 2, 39, 35, 20, 0, 0, 0, 0, 21, 0, 14, 0, 0, 15, 0, 3, 27, 0, 0, 13, 0], [5, 0, 31, 14, 3, 0, 0, 0, 22, 43, 13, 16, 9, 0, 16, 36], [13, 72, 5, 35, 0, 0, 21, 0, 16, 21, 0, 0, 19, 12], [0, 0, 70, 0, 37, 31, 0, 0, 78, 0], [6, 9, 27, 5, 6, 0, 0, 0, 80, 8, 13, 13, 18, 0, 23, 0, 4, 29], [12, 12, 19, 0, 0, 0, 8, 6, 0, 50, 0, 0, 83, 0, 27, 20, 0, 0, 14, 0], [35, 37, 0, 0, 21, 0, 3, 75, 0, 0, 91, 0], [25, 24, 7, 32, 0, 0, 0, 11, 56, 0, 5, 0, 0, 15, 0, 23, 21, 0, 21, 24, 0], [0, 5, 47, 18, 49, 0, 0, 0, 6, 16, 19, 33, 24, 0, 15, 0, 25, 17, 0, 0, 4, 0], [10, 4, 39, 38, 35, 0, 0, 0, 13, 20, 0, 16, 0, 0, 58, 0, 39, 8, 0, 0, 0, 0], [0, 19, 41, 4, 24, 0, 0, 0, 12, 24, 0, 40, 0, 0, 49, 0, 22, 26, 0, 0, 22, 0], [7, 0, 40, 0, 6, 0, 4, 0, 7, 0, 0, 3, 43, 1, 65, 22, 9, 62, 0, 0, 10, 8], [7, 5, 4, 49, 9, 0, 0, 0, 4, 35, 0, 21, 0, 0, 33, 18, 16, 1, 0, 0, 85, 0], [0, 33, 25, 7, 24, 0, 0, 0, 17, 22, 13, 5, 12, 24, 35, 0, 79, 10], [23, 52, 0, 19, 24, 7, 44, 0, 0, 93, 56], [11, 15, 17, 39, 65, 39, 24, 14, 0, 51, 48], [34, 13, 12, 81, 10, 0, 0, 0, 22, 16, 0, 27, 0, 0, 22, 0, 36, 14, 0, 0, 43, 0], [7, 32, 5, 8, 31, 0, 0, 0, 13, 20, 49, 0, 29, 44, 41, 5, 0, 0, 38, 23], [0, 0, 1, 58, 49, 11, 15, 114, 0, 25, 0, 45, 7, 0, 23, 1], [16, 3, 28, 15, 29, 0, 0, 0, 37, 16, 0, 20, 11, 0, 89, 0, 47, 35, 0, 0, 6, 0], [23, 18, 40, 65, 3, 0, 0, 0, 0, 15, 0, 24, 0, 0, 64, 0, 35, 34, 0, 0, 44, 0], [33, 76, 32, 23, 18, 0, 0, 0, 31, 26, 0, 30, 8, 0, 29, 0, 31, 30], [26, 2, 85, 15, 19, 0, 0, 0, 75, 5, 0, 15, 0, 0, 56, 0, 23, 37, 0, 0, 16, 0], [14, 22, 24, 34, 45, 18, 0, 3, 43, 73, 65, 33, 8], [68, 34, 32, 53, 30, 29, 0, 15, 0, 21, 20, 0, 15, 73], [41, 64, 23, 18, 25, 0, 0, 0, 54, 32, 37, 102], [17, 23, 65, 28, 25, 0, 0, 0, 0, 89, 0, 35, 10, 0, 9, 0, 28, 27, 0, 0, 41, 0], [13, 33, 48, 36, 8, 0, 0, 0, 95, 31, 0, 20, 2, 0, 25, 1, 8, 65, 0, 0, 15, 0], [21, 34, 40, 0, 7, 0, 0, 0, 71, 11, 0, 44, 0, 0, 50, 0, 18, 56, 0, 0, 42, 15], [19, 15, 31, 19, 0, 0, 0, 24, 56, 0, 42, 0, 0, 18, 0, 69, 48, 0, 0, 41, 48], [69, 35, 32, 35, 29, 0, 0, 10, 8, 4, 25, 18, 0, 0, 41, 16, 12, 36, 0, 0, 35, 28], [52, 56, 44, 45, 9, 0, 0, 0, 5, 78, 10, 39, 0, 0, 16, 0, 0, 19, 0, 0, 9, 59], [4, 30, 8, 44, 25, 0, 9, 16, 4, 34, 52, 43, 2, 34, 66, 0, 25, 27, 0, 0, 6, 14], [15, 19, 4, 14, 21, 0, 12, 0, 7, 56, 39, 9, 38, 0, 59, 19, 45, 12, 0, 5, 81], [22, 25, 23, 8, 23, 0, 0, 38, 67, 135, 0, 16, 65, 0, 30, 0, 9, 12, 0, 0, 9, 0], [9, 110, 13, 37, 2, 0, 0, 19, 112, 53, 36, 3, 0, 0, 48, 0, 20, 11, 0, 0, 16, 0], [16, 16, 85, 56, 42, 0, 0, 0, 3, 5, 50, 25, 38, 0, 39, 0, 22, 10, 0, 64, 23], [29, 42, 31, 11, 59, 0, 0, 10, 0, 63, 0, 41, 0, 0, 66, 0, 53, 81, 0, 0, 28, 0], [11, 26, 70, 43, 36, 0, 0, 6, 27, 67, 31, 22, 8, 56, 24, 48, 18, 0, 1, 9, 21], [46, 21, 26, 106, 32, 0, 3, 0, 62, 11, 31, 53, 3, 0, 43, 3, 22, 41, 0, 15, 22, 18], [54, 39, 43, 7, 9, 0, 0, 30, 38, 25, 9, 21, 59, 0, 2, 0, 49, 28, 0, 152, 41], [15, 26, 32, 74, 23, 0, 0, 1, 13, 4, 33, 30, 105, 0, 39, 47, 103, 30, 0, 1, 52, 68], [46, 137, 32, 35, 55, 0, 0, 0, 45, 56, 27, 30, 20, 19, 91, 9, 48, 137, 9, 24, 9], [35, 30, 24, 65, 88, 5, 1, 27, 131, 80, 71, 23, 71, 0, 36, 1, 73, 42, 0, 3, 120, 46]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

