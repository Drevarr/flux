created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Phives", "Cupi Cupita", "Arcanophage Farra", "High Sorcer Baradun", "Tegan Parker", "Newtype Khan", "Drevarr Moonwillow", "J\u00e2sm\u00eene", "Elizabeth Conbolt"];
const professions = ["Firebrand", "Specter", "Vindicator", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.2938, 27.522, 99.8899, 0.0, 0.0, 29.4831, 0.0, 0.0, 0.0, 0.0, 27.2412, 0.0, 103.0484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [164.5488, 0.0, 221.328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [73.4362, 31.122, 0.0, 22.9869, 88.3021, 85.0212, 271.1054], [0.0, 62.172, 373.6685, 0.0, 0.0, 0.0, 0.0, 0.0, 80.1562, 0.0, 144.4363, 237.1644, 449.382, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [724.2394, 399.3293, 65.8829, 36.9954, 196.1568, 94.864], [359.9856, 20.0723, 616.2106, 138.647, 0.0, 14.9175, 0.0, 51.6796, 74.0096, 68.8717, 0.0, 108.0085, 218.655, 553.8499, 146.0684, 0.0, 0.0, 26.2119, 152.544, 0.0], [440.7437, 0.0, 690.2093, 205.847, 0.0, 66.3714, 102.5892, 74.3859, 40.7431, 18.6857, 135.2497, 267.1659, 502.0418, 245.1009, 0.0, 39.0734, 0.0, 0.0], [602.0352, 80.9572, 617.0458, 150.6893, 46.9728, 64.2447, 95.4828, 60.3391, 101.9827, 45.54, 52.5141, 97.8944, 225.0621, 760.0887, 126.9794, 81.7887, 61.3782, 99.8985, 360.9312, 98.3934], [620.6803, 42.075, 704.0736, 317.3453, 46.9728, 177.8364, 48.3759, 286.0973, 128.863, 79.7835, 155.5067, 356.7636, 862.9952, 325.7087, 0.0, 86.7926, 303.3408, 120.2216], [930.3466, 48.312, 1118.6669, 392.0717, 65.5402, 76.1481, 260.2152, 262.0128, 150.5249, 120.5083, 152.6956, 395.1554, 1109.9708, 352.5041, 50.9802, 215.072, 417.1776, 132.277]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

