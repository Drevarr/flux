created: 20230208220141000
creator: Drevarr
modified: 20230705163518840
modifier: drevarr
tags: ChartData
title: 202302082201_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Raziel Umbra", "Tacoplasm", "Black Raspberry Pie", "Arka\u00f1", "Tegan Parker", "Mac Aaroni", "Etchery Howls", "Tribal S", "Zadie Miststep", "Elonith Primal", "Stoic Rapidfire", "\u00c9\u00efbhear", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Tempest", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2242, 0.0, 0.0132, 0.0, 0.0, 0.0426, 0.0, 0.2154, 0.234, 0.3944, 0.0466], [0.2864, 0.0, 0.1233, 0.0, 0.0, 0.0638, 0.0, 0.0993, 0.4113, 0.0282, 0.0632], [0.3251, 0.0, 0.2159, 0.0, 0.0, 0.1915, 0.0053, 0.3007, 0.3121, 0.3099, 0.0917], [0.3498, 0.0, 0.1542, 0.0, 0.08, 0.234, 0.0, 0.4378, 0.3191, 0.7465, 0.0436], [0.0, 0.4894, 0.0, 0.7357, 1.3546, 0.9437, 0.2211], [1.2512, 0.0619, 0.5242, 0.1935, 0.0, 0.7021, 0.0, 0.8867, 1.3404, 1.3099, 0.2361], [1.507, 0.0928, 0.5022, 0.0484, 0.0, 0.5957, 0.0053, 0.8252, 1.3901, 1.2958, 0.2917], [1.6138, 0.0412, 0.4978, 0.0, 0.04, 1.1277, 0.0053, 1.0909, 1.5745, 0.831, 0.3579], [1.3345, 0.2474, 0.7974, 0.371, 0.0, 0.9787, 0.0265, 1.1622, 1.5532, 1.3662, 0.4767], [1.4977, 0.1649, 0.7533, 0.4516, 0.12, 0.6809, 0.0423, 1.2364, 1.7589, 1.3803, 0.5113], [1.885, 0.4227, 0.9736, 0.2258, 0.0, 1.1489, 0.0423, 1.1483, 1.2199, 1.6479, 0.4045], [1.804, 0.3402, 0.674, 0.1452, 0.12, 1.2553, 0.1217, 1.4545, 1.5957, 0.831, 0.4947], [1.9495, 0.5052, 0.815, 0.3871, 0.06, 1.2553, 0.1799, 1.3315, 1.6525, 0.831, 0.4902]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

