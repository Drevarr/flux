created: 20230422220129000
creator: Drevarr
modified: 20230705163526434
modifier: drevarr
tags: ChartData
title: 202304222201_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Oo Dads Mad", "Ark Darkness", "Hauzzy", "Zaylen Harker", "Miphest\u00f6", "Hyde En Sikh", "Jupi Jupi Jupi", "Yummy Kiwi", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy", "Blancooo Padreee", "Newtype Khan"];
const professions = ["Spellbreaker", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 28.523, 92.0819, 97.1989, 118.1038, 53.5703], [8.1162, 54.1117, 3.4155, 14.147, 185.8616, 17.2304, 4.5599, 25.3208, 18.5899, 4.9005, 13.7813, 4.6925, 37.1704, 13.7183, 36.5769, 7.6227, 9.2156], [362.4056, 44.528, 77.8123], [96.1184, 29.9112, 0.0, 32.0267, 7.9461, 36.828, 25.97, 0.0, 155.867, 0.0, 22.3312, 0.0, 53.8738, 1.638, 29.9074, 0.0, 0.0, 23.6973], [27.0266, 6.534, 0.0, 8.1019, 156.0052, 18.4216, 131.4202, 14.4627, 48.0488, 33.6336, 20.3717, 71.3267, 33.9648, 55.3655], [81.0342, 6.8904, 17.3712, 359.9536, 0.0, 42.2013, 25.0646, 0.0, 15.4963, 15.5072, 49.4109, 22.4595], [14.7906, 66.64, 3.3957, 10.3306, 316.7984, 39.3976, 5.1074, 39.0796, 13.2926, 14.157, 15.8638, 11.7312, 63.8392, 20.3814, 38.502, 15.9601, 19.6484, 7.7095, 22.2018, 14.657, 21.2747, 21.2558], [139.944, 4.95, 18.095, 518.8432, 128.4536, 0.0, 65.9034], [25.8228, 105.9576, 6.9795, 16.0552, 549.7384, 93.896, 62.8973, 28.0075, 7.029, 19.4775, 4.5825, 88.0207, 19.296, 69.0469, 24.0252, 20.8366, 6.6503, 42.7661, 59.8147, 48.6812, 38.7056], [180.4611, 20.0277, 7.3038, 1072.9952, 63.2104, 0.0, 121.5166, 22.6611, 26.532, 22.1725, 5.8289, 148.958, 31.4465, 67.5068, 20.1458, 54.8302, 9.8062, 67.1832, 61.951, 20.7415, 44.5222], [44.6634, 182.4603, 13.3056, 7.7315, 988.156, 160.0104, 0.0, 106.6016, 33.0597, 38.016, 10.6575, 5.0224, 147.9908, 33.8283, 155.8048, 22.2896, 23.3579, 29.1346, 85.773, 58.8653, 64.5705, 88.0391], [45.9756, 260.2958, 21.9879, 7.8302, 1206.384, 129.6152, 0.0, 61.8567, 33.9916, 31.0365, 9.0038, 5.3157, 202.5719, 71.4254, 144.8959, 27.3261, 27.6469, 7.4147, 101.3768, 71.9794, 82.2728, 111.2337], [131.5474, 59.1525, 12.502, 1205.4032, 158.1712, 117.2387, 124.3418, 34.4025, 55.2475, 0.0, 347.5227, 0.0, 12.5773, 43.5584, 55.4387, 0.0, 0.0, 418.9404, 149.5626, 22.4765], [100.5534, 235.1059, 28.9773, 36.4532, 1191.672, 172.5944, 0.0, 237.3679, 20.7972, 55.2915, 42.9363, 33.0673, 191.6557, 62.8025, 182.3711, 94.3992, 87.0559, 21.8182, 42.0437, 66.9355, 92.7768, 58.1661]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

