created: 20230911002610000
creator: Drevarr
tags: ChartData
title: 202309110026_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Trodek", "Aloe Pen", "Reina Armitage", "Darks Na", "Gestern Yesteryear", "Necrotic Windrunner", "Drevarr Moonwillow", "Ax Axun", "Gamora Titus", "Flick Embermage", "Glizzy Gobbl\u00e9r", "Be\u00eb"];
const professions = ["Vindicator", "Scrapper", "Vindicator", "Druid", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Vindicator", "Dragonhunter", "Weaver", "Scourge", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[85.9492, 226.1774, 25.4545, 37.716, 258.5634, 66.2927, 29.2647, 38.3034, 0.0, 0.0, 195.75, 0.0], [311.7595, 235.4412, 341.191, 63.0625, 0.0], [1831.6061, 140.2656, 0.0, 111.9268], [0.0, 45.4059, 59.6452, 170.5, 119.7966, 16.2581, 172.1818, 8.4815, 272.3803, 56.7317, 79.5823, 64.0882, 3.5506, 18.825, 45.1717, 207.4242, 101.875, 0.0], [30.3837, 269.6612, 21.0087, 64.6931, 337.6237, 106.1053, 67.8814, 143.371], [22.4651, 14.438, 0.0, 329.9307, 222.6559, 17.2034, 75.6774, 23.2045, 255.8889, 13.2254, 37.0244, 7.9241, 52.2941, 18.5169, 0.0, 10.4545, 167.0606, 21.4375, 102.4878, 0.0366], [167.8989, 474.3125, 288.8081, 1368.3939, 225.5, 296.4634, 0.6585], [1366.7209, 55.0992, 56.6174, 0.9802, 102.172, 276.8947, 0.1864, 136.4194, 147.8864, 187.321, 81.9577, 35.8608, 0.0882, 0.0, 0.0, 47.0808, 241.0, 67.6562, 68.8537, 44.3659], [18.0465, 198.7273, 40.7739, 29.0594, 1437.4731, 654.9211, 201.7797, 100.8387, 407.9318, 160.9877, 0.0, 2.6329, 0.0, 0.0, 0.0, 0.0, 490.9091], [126.3256, 309.3719, 323.0087, 452.0495, 1839.9247, 592.3947, 192.1864, 897.9032, 416.4773], [1209.2673, 925.2473, 368.8158, 319.6441, 269.2742, 824.6591, 552.642, 658.6479, 261.6098, 665.9747, 73.5618, 38.6, 244.0707, 437.1818, 225.8438, 55.7561], [38.3605, 693.4132, 123.8435, 1549.8812, 1830.5806, 784.4746, 779.4194, 738.0, 924.8395, 1223.2254, 602.9756, 593.2658, 165.0588, 272.2584, 935.725, 531.9495, 40.6364], [72.2907, 473.6612, 747.3267, 3282.129, 1356.7632, 953.8983, 1458.7742, 2387.5227, 882.679, 683.5915, 793.4878, 556.9114, 1441.3529, 296.8539, 745.8625, 93.8687, 909.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

