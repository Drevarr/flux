created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Vee U", "Nose Llama", "Tabitha Polaris", "Grae Leon", "Nose Llama", "Grootsmaid", "Nadumi", "Samara Evermoore", "Govinda Ektar", "Brutal Araden", "Liu Mira", "Xanvias Tsolice", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Firebrand", "Tempest", "Weaver", "Firebrand", "Thief", "Deadeye", "Vindicator", "Renegade", "Berserker", "Weaver", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.5978, 0.0, 0.0, 0.0, 29.5265, 14.8759, 36.261, 0.0, 0.0, 19.647, 52.4145, 13.7175, 15.8093, 23.0032, 0.0], [24.9934, 30.2808, 15.0568, 30.1644, 24.2604, 30.1243, 35.966, 0.0, 23.4765], [17.8151, 44.1408, 48.6736, 0.0, 61.3217, 58.2698], [0.0, 0.0, 33.1507, 41.317, 0.0, 0.0, 15.503, 46.314, 39.7365, 0.0, 33.1057, 0.0, 21.3345, 15.8436, 0.0, 1.782], [130.6835, 151.2022, 16.1184], [12.2055, 9.086, 0.0, 0.0, 89.2665, 0.0, 0.0, 207.4651, 67.2144, 141.2977, 18.8689, 47.5456], [16.1141, 45.6984, 20.0448, 84.1548, 33.0703, 47.3515, 118.5, 55.244, 13.128, 11.951, 85.6975, 72.8798, 32.1779, 84.4542], [16.5337, 43.8504, 13.4328, 93.5484, 118.1059, 54.4519, 56.0505, 34.496, 19.86, 51.652, 115.536, 73.4108, 0.4269, 110.4009, 0.0, 102.2422], [50.8145, 63.612, 90.6494, 72.4008, 96.459, 0.0, 0.0, 132.4265, 95.049, 13.4099, 129.9882, 165.8002, 71.4056, 12.4141, 28.0057], [38.6408, 0.0, 117.9444, 94.3423, 82.1551, 50.086, 75.166, 46.128, 15.7435, 184.924, 151.9988, 5.6083, 170.3983], [89.9262, 49.5528, 82.1048, 210.0336, 156.1939, 230.2625, 202.714, 49.952, 32.352, 16.095, 251.1995, 80.181, 40.6714, 174.5047, 121.4123, 94.0995, 100.2983, 15.5149, 74.412], [52.535, 146.888, 125.964, 76.4975, 344.035, 368.5583, 86.0531, 267.9348, 174.005, 396.9652, 158.3145, 115.0832, 88.938], [51.1774, 126.7728, 230.7008, 254.0376, 239.5404, 148.247, 369.0485, 135.688, 171.096, 190.5685, 497.2945, 519.7163, 91.7203, 440.6225, 216.3902]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

