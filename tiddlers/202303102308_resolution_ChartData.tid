created: 20230310230833000
creator: Drevarr
modified: 20230705163521660
modifier: drevarr
tags: ChartData
title: 202303102308_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Ark Darkness", "Sub Train", "Raelyn Sunray", "Kiloak", "Zaylen Harker", "Blanco Padre Guard", "Viral Marketing", "Aronorf Xideliesi", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[61.1325, 387.3177, 358.4504, 155.043, 66.9461, 1252.7875], [479.6125, 0.0, 154.8152, 135.6448, 21.3067, 137.5501, 111.9087, 40.8336, 0.0, 173.7331, 0.0, 0.0, 23.5338, 167.7793, 0.0, 224.4151, 186.9305, 222.1965, 88.803, 198.7254, 25.542, 129.789, 41.2763, 11.8173, 272.6338], [30.681, 160.7696, 233.0949, 64.2132, 121.5559, 73.6467, 189.2333, 45.5825, 122.2963, 0.0, 0.0, 53.768, 0.0, 207.4005, 41.3115, 251.9328, 235.5628, 196.995, 77.1557, 175.5486, 40.068, 191.2266, 67.6658, 120.2074, 216.6898], [189.7335, 449.9145, 258.3636, 107.4675, 138.3174, 1828.475, 0.0, 377.7432, 79.9144, 184.9375, 44.1283, 105.9418, 39.7197, 225.4379, 45.1994, 13.2894, 148.958, 61.2317, 98.4514, 249.1585, 94.156, 214.3258, 151.3512, 172.6254, 17.334, 111.2418, 181.1275, 204.1021, 257.4667], [123.7005, 413.5446, 292.8728, 226.366, 88.504, 1715.625, 46.053, 472.7236, 187.1363, 140.524, 69.2732, 100.851, 186.0749, 89.4391, 148.6845, 82.5396, 39.9717, 125.1967, 0.0, 139.2026, 25.2802, 235.6621, 238.326, 153.4034, 194.337, 85.2165, 172.584, 174.4182, 74.4131, 123.6508, 251.9966], [196.1685, 496.2825, 232.8612, 234.9795, 179.6093, 2529.975, 18.207, 506.7075, 78.442, 158.5657, 78.2667, 64.0395, 202.4986, 79.8962, 164.6245, 121.4585, 45.0328, 56.0842, 188.9568, 226.2896, 302.3632, 158.4739, 198.2623, 52.3044, 98.118, 103.3344, 37.7206, 119.0726, 214.3898], [125.73, 418.4712, 275.4664, 294.7105, 0.0, 1953.525, 69.489, 582.3723, 194.0524, 145.5472, 117.99, 123.9414, 214.7261, 104.0072, 214.3647, 56.8682, 51.543, 52.8374, 39.3346, 126.117, 11.6064, 376.0997, 425.6019, 142.4298, 309.974, 182.5434, 269.19, 246.7854, 135.5029, 231.18, 318.8808], [221.067, 559.1691, 373.1244, 229.425, 106.3842, 2808.2875, 63.819, 401.561, 176.0705, 128.0916, 125.6987, 195.3527, 154.4458, 84.2616, 230.3047, 72.93, 26.8789, 68.7403, 29.5762, 131.0013, 0.0, 337.7849, 217.9474, 254.9659, 161.8403, 152.424, 156.33, 193.7934, 107.3785, 83.5817, 220.5437], [236.5605, 540.0423, 358.6528, 157.2165, 116.3409, 2895.975, 98.3115, 685.7761, 212.302, 108.5011, 151.7614, 79.3776, 319.991, 59.2877, 218.2939, 115.2466, 80.9163, 208.3303, 2.4715, 212.2848, 8.4267, 199.5968, 238.5332, 227.0778, 88.6099, 161.037, 104.544, 148.8744, 58.3052, 108.5466, 380.2949], [328.8285, 310.086, 341.2464, 301.392, 78.3978, 3390.075, 111.1635, 453.1176, 178.6585, 84.5991, 97.1189, 84.0385, 277.127, 60.1252, 185.4761, 80.8922, 39.8889, 45.5787, 243.8869, 51.9386, 316.1907, 391.5454, 251.5225, 393.3072, 102.834, 220.428, 241.983, 48.195, 351.1917, 373.0222], [339.4215, 414.7038, 525.0256, 333.914, 145.5831, 4490.3625, 113.4315, 787.1466, 210.3833, 357.9867, 204.3849, 194.4253, 245.904, 129.3111, 268.5251, 301.2266, 49.9181, 247.3328, 294.9169, 15.4994, 532.0581, 580.6865, 261.323, 366.3445, 178.4718, 325.566, 326.1078, 125.9068, 292.4185, 395.089]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

