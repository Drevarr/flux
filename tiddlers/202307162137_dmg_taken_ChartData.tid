created: 20230716213730000
creator: Drevarr
tags: ChartData
title: 202307162137_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Alarics Clone", "Vesnan", "Johoshua", "Tribal S", "Scarlet Merc\u00fcry", "Sureting", "Muireann Mackay", "Koralia Danai", "Grootsmaid", "Surethang Smarts", "Tirluka", "Brutal Araden", "Urilstormwalker", "Johosh The Mighty", "Anti Jimbo", "Luke The Ghastly", "Daphne Agla\u00e9", "Cestaphine", "Roj\u00efn", "Ez Mode Mathus", "Smol Gluvs", "Sakis Ranger", "Desu Ripa", "Cestaphine", "Necrotic Windrunner", "Zogratis Lucius", "Caelon Cai", "Sagaz Homem Fuma\u00e7a", "Holten Mcgroins", "Latedoctor", "Ravenaz", "Koda Kirigaya", "Vampguard", "Gun Breaker", "Lookatyou Lookatme", "Koda Rv"];
const professions = ["Scrapper", "Chronomancer", "Reaper", "Holosmith", "Druid", "Firebrand", "Reaper", "Druid", "Firebrand", "Firebrand", "Holosmith", "Tempest", "Renegade", "Firebrand", "Berserker", "Weaver", "Scourge", "Reaper", "Weaver", "Catalyst", "Scourge", "Reaper", "Druid", "Reaper", "Tempest", "Reaper", "Virtuoso", "Harbinger", "Tempest", "Thief", "Reaper", "Scrapper", "Soulbeast", "Firebrand", "Berserker", "Catalyst", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[343.1667, 1304.4957, 280.5054, 2283.3548, 499.1791, 598.3198, 86.069, 762.4545, 428.9115, 589.0359, 650.9007, 415.5694, 611.1707, 1220.3148, 597.8942, 1271.0072, 1351.0741, 1707.5229, 725.64, 485.8621, 460.8082, 304.0769, 1009.037, 1476.661, 723.5957], [115.2, 415.88, 21.3871, 1178.55, 465.5294, 440.3871, 231.9655, 474.0513, 268.5575, 633.7917, 571.3877, 351.0822, 636.6889, 933.8108, 298.7041, 935.4091, 0.0, 1052.7982, 926.4867, 425.3448, 223.9865, 127.0714, 545.1707, 769.6981, 264.9574], [269.9273, 394.082, 51.2688, 2447.7115, 348.7576, 539.6548, 104.75, 453.6818, 504.4419, 480.8133, 656.8081, 469.2778, 548.7273, 542.2593, 1427.7638, 0.0, 1095.1776, 412.527, 15.9231, 84.1781, 45.6901, 412.6709, 732.3962, 587.7021], [85.8909, 1081.5422, 14.8511, 2049.8247, 346.1642, 1017.4423, 68.0, 815.4634, 575.7257, 1110.9716, 728.3524, 715.6575, 585.4, 2366.6538], [52.4082, 323.3984, 6.7912, 1752.375, 192.7313, 604.4651, 31.8621, 214.3953, 569.896, 818.0933, 403.3292, 519.0137, 709.878, 366.9182, 396.7812, 469.7863, 543.5385, 615.7798, 336.9273, 42.4783, 14.3333, 129.8551, 838.4815, 1283.9623, 357.3111], [96.5, 560.1774, 2.4842, 394.8, 287.08, 35.7714, 990.2558, 334.6508, 489.3988, 438.9293, 274.3235, 834.4048, 806.8624, 350.1031, 856.0229, 0.0, 681.7129, 601.4564, 32.25, 148.9726, 76.625, 627.3625, 872.0189, 62.119], [715.5322, 386.2055, 525.8837, 836.9029, 587.4495, 612.4828, 1417.1948, 1231.3179, 270.2466, 80.465, 780.1235, 1116.717, 650.8511], [67.6545, 1252.5063, 133.1333, 1607.4255, 363.2462, 2693.9143, 15.1154, 545.7045, 4719.4375, 677.3806, 808.157, 180.8333, 314.4091, 10277.9286], [20.0196, 198.1429, 5.0108, 2083.16, 165.5075, 555.8721, 241.375, 95.6452, 330.5682, 1009.0, 338.2888, 162.4507, 617.5238, 550.1776, 211.625, 329.6541, 701.0096, 377.8284, 21.4, 12.3288, 96.8454, 155.3125, 591.5094, 149.0833], [539.3598, 289.4932, 490.3571, 908.8182, 66.1957, 1104.7385, 63.8095, 985.5185, 445.6528, 30.32, 151.9589, 58.0, 844.1111, 574.6038, 518.2273], [3636.25, 1115.0957, 244.4348, 1874.4348, 822.6866, 914.2035, 244.4138, 3705.3333, 471.0076, 642.6061], [30.1296, 433.4463, 1511.18, 1539.5814, 190.1667, 684.7151, 31.3704, 610.1111, 2062.4375, 200.1373, 489.9959, 149.9861, 518.9189, 36.2841, 22.9, 375.6829, 289.375, 189.9861, 44.1125, 749.2125, 1626.8485, 0.0], [403.3299, 262.1818, 1198.3805, 157.4706, 505.2173, 148.9718, 451.8333, 848.6604, 316.5534, 470.5267, 459.2286, 583.4897, 114.75, 162.2195, 529.7586, 163.0952], [121.4656, 177.6905, 671.6162, 1460.7143, 151.1154, 506.4048, 4230.3333, 679.4799, 507.4028, 574.04, 932.9182, 1151.7424], [576.1287, 2172.9231, 641.1786, 1587.0642, 1348.9533, 392.2667, 6.6957, 72.9184, 433.9259, 1026.0, 231.7917], [188.3158, 515.5664, 180.8333, 689.6744, 488.0734, 319.5607, 328.1216, 99.069, 858.1743, 729.8742, 66.4194, 102.1507, 13.2171, 219.6977, 616.2881, 659.8372], [339.3333, 240.561, 11.0108, 364.4444, 206.6364, 668.1512, 135.1034, 478.925, 216.5841, 300.2874, 767.0793, 281.5972, 353.5455, 2559.56], [94.0909, 160.9769, 11.3548, 601.8125, 259.1311, 617.0511, 190.1739, 666.2727, 739.8217, 636.0724, 81.6667], [167.1832, 411.4192, 534.5025, 115.9437, 483.5814, 312.9266, 97.0417, 301.015, 345.2857, 558.2936], [21.359, 584.4118, 179.4182, 988.7857, 328.8195, 199.8621, 1026.2752, 500.8255, 220.1667, 28.9324, 166.3511, 284.3974, 626.0645, 272.9574], [116.9406, 928.2519, 0.0, 1019.4907, 891.4901, 278.75, 18.6164, 111.2784], [509.8933, 371.25, 10139.8889, 224.0309, 801.625, 983.4717, 992.5208], [65.4417, 90.125, 483.0976, 518.4182, 77.8679, 143.8931, 155.6538, 360.1759, 356.34, 0.0, 90.9315, 19.9592, 310.675, 795.7925, 199.9787], [18.4706, 369.8065, 37.5474, 40.268, 1081.3846, 583.345, 4.7097, 826.5684], [308.2984, 3.2553, 939.0204, 509.3906, 577.6628, 79.4828, 225.4], [300.6571, 677.925, 459.1538, 10.5612, 209.9123, 21.9643, 565.8208, 38.3924, 475.4151, 726.7391], [246.1194, 488.1977, 281.7407, 777.4773, 180.626, 4390.0], [19.9714, 196.5876, 1213.3875, 1032.873, 822.5], [434.1667, 239.1071, 100.8767, 54.9592, 563.1728, 817.0755, 102.5625], [397.2671, 240.6061, 695.9231, 180.4227, 471.0741, 145.5111, 517.2791], [70.7945, 252.7113, 893.8889, 808.5397, 236.3696], [40.1071, 795.3457, 744.5645, 433.5556], [351.9526], [290.1133, 21.3462, 46.6164, 37.102, 212.9383, 716.7736, 174.186], [187.9615, 1103.3019, 828.4419], [329.2282, 134.0303, 16.7808, 121.3636, 203.3846, 157.5111], [121.6571, 384.0909]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

