created: 20230314004438000
creator: Drevarr
modified: 20230705163522096
modifier: drevarr
tags: ChartData
title: 202303140044_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Ravioli Fetabringer", "Whose Guardian", "Mac Chiato", "Tegan Parker", "Zadie Miststep", "Cat Wigglebooty", "Tribal S", "Etchery Howls", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[46.3084, 46.1023, 675.5238, 118.9426, 1.0182, 45.179, 91.8133, 351.203, 17.9409, 27.1494, 78.1354, 0.0, 22.7203, 72.5759, 45.6803, 45.6004, 69.2973, 10.908, 59.5988, 0.0, 48.0566, 0.0, 93.1, 222.7579, 29.1298, 33.7272, 38.3544], [53.4533, 60.5642, 785.1922, 137.9007, 0.5949, 77.1956, 43.8325, 112.3243, 0.0, 32.7281, 129.5815, 21.8307, 54.5782, 180.9854, 49.0025, 60.4263, 28.1887, 57.852, 50.2768, 14.2444, 46.7549, 0.0, 31.7657, 232.2806, 67.0507, 84.9888, 84.6468], [18.822, 110.4218, 668.435, 180.6214, 18.8074, 42.139, 50.3049, 253.3421, 11.7447, 16.364, 0.0, 23.2617, 45.3583, 105.2804, 52.0478, 124.2978, 68.6475, 31.176, 79.9216, 25.3313, 84.2347, 0.0, 118.5722, 268.322, 58.8773, 64.3656], [93.9498, 24.3695, 1262.2287, 304.3684, 18.7387, 80.0738, 97.2861, 247.1602, 0.0, 89.0893, 100.2599, 86.0038, 239.9344, 228.4013, 109.9751, 31.2375, 39.456, 61.5427, 0.0, 51.8534, 22.6536, 232.0052, 324.0115, 117.8021, 45.8328, 75.8268], [101.6279, 167.0709, 1748.4391, 384.0963, 10.1358, 78.0364, 40.1089, 385.8451, 117.625, 63.1414, 0.0, 68.6755, 297.3692, 193.7396, 0.0, 44.7321, 69.012, 107.9759, 0.0, 195.481, 28.5766, 193.648, 213.7174, 37.8734, 53.8512, 60.3792], [127.2215, 288.1993, 1417.766, 324.625, 11.4972, 213.2823, 104.1583, 121.189, 0.0, 246.4411, 75.1699, 0.0, 60.8551, 206.3214, 202.2112, 134.1689, 56.0776, 61.92, 92.9547, 81.1606, 211.4818, 0.0, 133.0585, 391.5139, 145.5062, 48.0792, 171.9144], [196.0843, 524.4636, 2442.7274, 61.8086, 12.298, 295.3612, 59.0514, 603.8453, 202.1838, 108.5566, 0.0, 29.5117, 191.0794, 190.0852, 229.5116, 44.8571, 97.956, 106.9598, 0.0, 118.4602, 1.9913, 4.9902, 2.893, 1.9958, 0.0, 159.0876], [155.0812, 346.8459, 2005.3049, 903.756, 37.0084, 355.8694, 46.2065, 450.2304, 0.0, 160.5637, 326.2361, 6.9589, 81.8055, 101.1419, 330.6143, 97.975, 40.6337, 27.252, 319.7307, 0.0, 362.6486, 0.0, 263.324, 707.4493, 120.5107, 35.3808, 82.026], [70.4357, 749.6218, 4147.7995, 796.37, 316.133, 94.4975, 85.1159, 1115.8949, 293.5384, 82.5336, 298.1936, 0.0, 122.4402, 573.4671, 77.0716, 26.6393, 172.728, 79.4356, 0.0, 89.3333, 65.1015, 456.8231, 569.431, 305.4586, 79.1856], [194.3247, 516.7133, 3981.0035, 777.2821, 81.6358, 265.5114, 215.9136, 1063.8734, 52.315, 365.8242, 30.2212, 49.8907, 264.1031, 1057.1446, 523.6895, 286.454, 349.5101, 346.14, 373.7628, 0.0, 3.2544, 0.0, 0.0, 0.0, 245.2032, 315.1512, 297.1836], [488.1446, 954.8849, 6879.084, 1548.3314, 130.1071, 465.89, 306.0525, 1407.8448, 39.1803, 556.5464, 322.4043, 167.8549, 222.3052, 1265.081, 561.4518, 543.9916, 174.3802, 329.796, 538.6426, 98.5982, 786.0461, 209.7375, 505.3468, 1707.8107, 564.2525, 481.9776, 396.5976]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

