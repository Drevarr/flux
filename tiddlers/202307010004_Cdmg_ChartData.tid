created: 20230701000406000
creator: Drevarr
modified: 20230705163539975
modifier: drevarr
tags: ChartData
title: 202307010004_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zefirokai", "Aronorf Xideliesi", "Gamora Titus", "Erin Celes", "Lord Erin The Wise", "Mike The Archmagus", "Blancooo Padreee", "Sister Elonith", "Smol Daddy Tika", "Morton Saltbringer", "Be\u00eb", "Gavann", "K\u00f4sair", "Fluffy No Care Bear", "Melli Dragonswrath", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Catalyst", "Firebrand", "Firebrand", "Herald", "Weaver", "Weaver", "Berserker", "Berserker", "Berserker", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Berserker", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.541, 50.4918, 1.4103, 66.0521, 23.2826, 0.14, 2.099, 20.4444, 8.76, 84.2941, 24.6906, 123.8267, 38.7568, 37.1111, 8.617, 26.68, 36.34, 17.5152, 0.0, 3.6374, 1.4017], [38.1148, 18.3607, 9.6923, 10.0, 41.413, 16.32, 3.1089, 57.6825, 13.12, 5.9412, 17.9193, 10.7067, 67.1622, 1.4306, 34.8404, 20.89, 5.26, 24.0606, 38.6154, 24.4701, 18.1501], [4.0128, 53.0521, 3.7283, 42.0, 6.6733, 11.9524, 50.06, 1.9216, 25.9327, 85.6, 53.3108, 103.9306, 13.0851, 4.45, 0.85, 0.7576, 0.0, 6.5604, 14.641, 26.1987], [0.0, 201.7692, 57.9231, 130.8689], [42.2459, 106.1639, 8.5128, 81.7812, 53.2283, 53.78, 4.0693, 44.8571, 108.5, 34.3922, 26.7758, 97.2667, 114.6757, 29.4722, 88.0319, 65.46, 23.3, 177.7424, 27.8438, 47.1758, 28.7863], [79.7705, 56.0492, 18.7949, 78.0938, 59.5326, 117.9, 39.0, 73.746, 100.66, 7.8039, 70.6143, 57.0267, 109.7568, 36.0417, 122.8617, 146.87, 47.56, 22.6212], [1.3279, 49.9672, 59.9231, 86.6979, 153.3152, 2.68, 5.9901, 1.5873, 0.0, 215.8235, 1.1345, 3.0133, 10.1622, 35.5694, 332.734, 23.67, 57.35, 0.0, 0.0, 64.3846, 7.2991, 46.9894], [72.9028, 244.0, 161.2, 197.31, 175.3333, 1.0, 67.6703, 18.8803, 78.093], [57.8033, 0.1026, 36.5938, 116.0, 88.9, 4.4356, 30.4603, 74.72, 120.7059, 92.574, 33.4667, 63.8919, 32.3333, 141.9681, 65.07, 37.99, 5.4394, 2.8438, 38.7802, 28.6752, 77.8605], [97.3279, 85.541, 27.5513, 225.4479, 128.8478, 0.0, 28.5644, 23.7619, 265.12, 166.8627, 35.9193, 218.8243, 78.5278, 162.7447, 96.97, 58.85, 136.8788, 46.875, 161.2637, 61.2692, 63.2939], [32.4918, 50.5897, 167.3229, 150.7065, 71.48, 72.4554, 146.254, 93.6, 128.6078, 177.435, 160.08, 135.8919, 221.3056, 220.4149, 193.68, 122.21, 76.0909, 0.0, 43.5495, 29.8718, 70.5751], [294.9, 55.5446, 138.9048, 194.48, 191.6667, 217.8161, 109.2933, 196.6757, 202.1389, 264.5957, 2.78, 157.24, 36.4394, 101.5275, 54.0128, 161.4503], [56.14, 92.2353, 118.7399, 275.6133, 252.5405, 185.0694, 644.3404, 114.16, 222.44, 95.3636, 0.0, 367.978, 25.765, 123.5856], [280.6892, 231.8333, 189.7128, 369.79, 99.47, 181.3333, 1.5938, 288.5275, 97.4573, 257.9154], [114.0, 229.8197, 5.2821, 226.7188, 57.8696, 251.72, 3.3663, 97.9683, 85.58, 447.9804, 216.87, 225.96, 207.3243, 347.25, 813.4255, 68.78, 157.52, 448.6212, 0.3125, 194.0879, 42.906, 39.1226], [188.9672, 134.2295, 66.2436, 125.8958, 146.337, 127.44, 51.7228, 48.9206, 289.02, 76.3137, 33.4574, 225.7333, 242.3243, 200.6111, 353.4681, 188.27, 240.07, 169.197, 5.75, 412.8571, 115.0128, 346.2622], [175.9836, 357.0328, 100.8205, 195.875, 271.5109, 112.1, 41.198, 171.5238, 346.32, 568.549, 137.6143, 157.2, 346.6757, 113.1806, 510.3298, 138.62, 273.57, 304.8636, 0.0, 221.9121, 69.4487, 178.8203]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

