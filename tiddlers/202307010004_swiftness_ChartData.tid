created: 20230701000406000
creator: Drevarr
modified: 20230705163540257
modifier: drevarr
tags: ChartData
title: 202307010004_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Traidoruns Maximus", "High Sorcer Baradun", "Oo Dads Mad", "Mike The Archmagus", "Tribal S", "Erin Celes", "Smol Daddy Tika", "Be\u00eb", "Ryvalia Fazebringer", "Morton Saltbringer", "Seiker Soulkeeper", "Gamora Titus", "Mike The Archmagus", "Tegan Parker", "Blancooo Padreee", "Melli Dragonswrath", "Broken Cheese", "Gavann", "K\u00f4sair", "Air One Com", "Zefirokai", "Johosh The Mighty", "Primal Clone", "Newtype Khan", "Gestern Yesteryear", "Dingle Mcbingle", "Xanvias Einzbern", "Mmathuss", "Koralia Danai", "Zayde Sunsabre", "Arcanophage Farra", "Drevarr Moonwillow", "Solus Sanctus", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Berserker", "Firebrand", "Tempest", "Spellbreaker", "Tempest", "Druid", "Herald", "Berserker", "Scourge", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Weaver", "Tempest", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Catalyst", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 45.4612, 25.991, 45.449, 37.4411, 12.7142, 30.495, 34.8192, 271.3223], [42.3169, 26.6058, 53.1648, 0.0, 147.6214, 73.008, 161.9232, 53.7667, 29.155], [28.67, 47.1048, 0.0, 8.4787, 75.0214, 30.768, 27.876, 23.7082, 51.891, 107.5162, 190.3483, 16.077], [67.3172, 13.2455, 8.8733, 44.2368, 95.8198, 97.44, 124.3997, 43.0013, 52.0135, 21.1018, 49.39, 18.906, 22.9089], [0.0, 110.9882, 172.1866, 386.6397], [3.7844, 4.3005, 0.0, 0.0, 61.7035, 0.0, 1.8907, 0.0, 0.0, 6.781, 76.3797, 9.246, 41.2565, 0.0, 0.0, 0.0, 42.394, 30.3686, 0.0, 0.0, 275.7456, 165.3608], [0.0, 17.3219, 180.9475, 527.4139], [0.0, 29.1658, 19.2614, 0.0, 0.0, 176.5157, 14.999, 0.0, 31.9954, 134.5114, 0.0, 5.3783, 0.0, 11.6992, 11.844, 38.728, 0.0, 0.0, 0.0, 35.2685, 308.9636], [0.0, 5.953, 59.2589, 98.371, 0.0, 236.0491, 19.0814, 24.6225, 28.2499, 88.3994, 47.1615, 0.0, 0.0, 0.0, 129.955, 62.886, 53.1373, 0.0, 0.0, 0.0, 0.0], [118.2638, 96.6752, 2.6957, 285.7421, 171.0574, 0.0, 37.8144, 36.8928, 0.1225, 0.0, 0.0, 0.0, 81.2535, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.9747, 63.5334], [5.8487, 5.8773, 7.0762, 0.3226, 8.3453, 0.0, 39.0749, 74.9347, 71.6625, 114.2971, 172.5373, 76.7942, 0.0, 17.9634, 84.365, 0.235, 0.0, 0.0, 0.0, 161.9654, 77.6761], [46.8755, 25.4303, 96.7075, 192.2458, 175.122, 197.28, 229.9406, 131.423], [21.5654, 71.5622, 0.2594, 91.44, 114.6067, 16.3901, 65.3415, 3.7699, 182.918, 0.1725, 7.2505, 0.0, 74.3869, 48.786, 44.039, 2.1404, 0.0, 64.8393, 167.3568, 213.2284], [31.3363, 34.3467, 33.9581, 60.5952, 55.3904, 48.048, 98.8507, 49.2005, 56.7175, 72.9994, 128.1737, 76.5555, 41.4607, 115.542, 72.913, 91.791, 108.57, 83.0716], [61.7838, 1.0035, 14.1523, 47.4624, 61.0549, 42.456, 54.3946, 0.0, 79.625, 2.9621, 194.5006, 0.0, 62.94, 29.5999, 47.4879, 90.663, 31.913, 5.1803, 0.0, 56.8413, 110.2982, 286.5529], [29.014, 0.0, 34.4448, 65.065, 97.9386, 46.368, 43.535, 43.969, 5.733, 16.524, 71.6811, 5.4165, 56.7106, 68.3726, 63.1022, 99.123, 77.644, 32.8192, 11.8272, 19.5031, 122.4288, 288.2935], [7.2248, 47.1621, 8.1245, 16.5427, 47.3046, 68.88, 179.0851, 16.2994, 46.599, 27.7114, 247.9336, 9.2805, 56.132, 41.1365, 100.2726, 21.573, 1.081, 23.0479, 31.4227, 0.0, 91.2038, 305.4823], [54.1863, 48.2229, 54.4378, 127.3651, 46.7424, 33.0, 28.6517, 45.6926, 27.489, 11.5546, 144.0179, 43.5355, 93.1333, 131.365, 41.313, 38.9611, 0.0, 146.1451, 275.0717, 5.6571], [91.776, 70.9747, 77.2027, 73.99, 33.097, 364.4154, 149.5575, 0.0, 120.5165, 130.488, 0.0, 0.0, 150.7572, 27.4156, 88.2835, 74.6299], [22.54, 37.6747, 195.5933, 89.01, 122.8504, 94.9385, 79.039, 66.082, 160.411, 70.1983, 15.8592, 46.1061, 182.0707, 319.625], [51.7207, 14.9944, 9.4349, 40.6886, 31.9976, 0.0, 38.784, 108.3499, 41.552, 29.1802, 135.167, 26.91, 97.899, 7.5146, 107.4119, 33.981, 137.851, 31.7955, 29.9578, 33.66, 200.1542, 335.5084], [110.6949, 25.1149, 74.88, 0.0, 57.12, 49.728, 119.6002, 87.1517, 35.819, 30.2818, 259.407, 40.5375, 75.3305, 48.5453, 66.9252, 78.819, 63.356, 39.8607, 32.1485, 74.933, 199.9296], [33.1138, 91.7727, 68.2531, 48.8448, 129.2444, 69.528, 80.2344, 32.508, 133.182, 38.9477, 317.7572, 45.0225, 127.9904, 20.2507, 90.7382, 56.588, 10.199, 47.9879, 22.0685, 47.603, 120.407, 308.0933], [67.4892, 19.9543, 14.1149, 32.0717, 150.2158, 73.824, 59.485, 125.7379, 38.563, 33.5376, 163.4679, 63.9975, 70.7011, 16.8991, 65.3131, 85.681, 72.662, 16.6267, 41.0189, 32.9757, 214.3066, 563.5322], [18.4922, 54.8744, 87.2352, 1.751, 60.0604, 71.136, 119.4547, 29.4538, 38.22, 28.2744, 188.0537, 85.422, 91.4655, 139.356, 59.5095, 170.234, 87.138, 43.5521, 11.2762, 36.4828, 274.9594, 484.5507], [44.3525, 72.9938, 54.0259, 136.9498, 97.1603, 69.312, 8.0962, 114.0048, 72.8385, 31.4568, 130.2498, 97.773, 59.8083, 34.151, 117.3609, 14.476, 128.263, 12.0358, 82.9786, 39.2201, 320.112, 444.7335], [102.9974, 118.1952, 31.0463, 160.9547, 165.2895, 94.9376, 78.745, 90.2776, 150.306, 84.741, 104.4754, 141.3548, 478.4832, 629.6765], [38.0738, 52.3227, 47.6237, 157.6858, 114.3266, 46.272, 52.7462, 19.3234, 22.2215, 45.949, 364.0876, 110.883, 99.7032, 45.0173, 123.8093, 67.445, 84.647, 71.1289, 16.007, 120.0982, 192.2918, 583.7671], [56.8526, 37.615, 94.7232, 47.2781, 47.6937, 38.928, 133.6109, 136.7453, 9.2365, 68.7154, 292.7343, 20.0445, 89.6614, 100.5833, 27.1754, 8.507, 113.411, 0.0, 104.3482, 211.9681, 266.5354, 712.5745], [22.0472, 12.2421, 128.1946, 136.3968, 37.2729, 21.168, 60.8909, 108.3197, 62.0585, 51.4325, 170.4612, 89.562, 57.2212, 0.0, 93.5018, 0.0, 107.019, 34.4012, 31.1405, 17.664, 622.2528, 882.0693], [30.8776, 11.5827, 49.1962, 12.2573, 100.7924, 57.36, 110.0496, 70.1568, 59.437, 91.237, 474.8874, 75.3135, 100.8265, 89.5759, 90.554, 97.29, 11.421, 65.6383, 21.9206, 269.9642, 254.0678, 643.6016], [114.9094, 45.9867, 128.9808, 138.1478, 164.8309, 79.488, 147.5246, 92.5949, 72.324, 75.227, 75.1778, 88.0785, 119.106, 206.4938, 73.5578, 99.452, 89.676, 128.5159, 260.9825, 172.5235, 452.3488], [73.4812, 36.6116, 90.455, 119.5315, 64.2114, 27.912, 125.6117, 89.7826, 58.212, 62.8402, 486.2515, 111.366, 60.1146, 171.5314, 52.232, 135.219, 73.649, 67.9958, 9.193, 109.9189, 271.2528, 739.1193], [22.506, 61.2391, 174.0211, 27.0029, 84.5342, 49.8, 157.5115, 161.6026, 22.5645, 34.321, 501.8771, 197.892, 81.9002, 135.581, 88.251, 139.919, 82.579, 46.4369, 115.2211, 137.7194, 443.327, 503.045], [90.3392, 72.3631, 122.0918, 46.1722, 186.1914, 78.168, 292.5768, 183.1939, 45.8885, 50.2819, 321.9094, 78.6945, 142.151, 165.4985, 223.9898, 80.605, 180.198, 166.4533, 76.5542, 248.1088, 657.072, 849.2147], [78.3838, 208.0869, 155.3386, 273.4848, 198.2122, 98.256, 235.2734, 120.8693, 165.473, 105.7046, 438.3912, 142.968, 159.3753, 223.6046, 238.775, 338.635, 169.623, 119.7992, 187.3754, 696.047, 365.5344]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

