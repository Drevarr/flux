created: 20230429215910000
creator: Drevarr
modified: 20230705163527491
modifier: drevarr
tags: ChartData
title: 202304292159_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Ria Zerria", "Stark Gandalf", "Wanguazen", "Belvyn Brightblade", "Hyde En Sikh", "Fallendruid", "Fribble Bibble", "Magister Boombottom", "Tika Fiery", "Miphest\u00f6", "Zady Stardust", "Drevarr Moonwillow", "Gabe Malhorn", "Johosh The Great", "Jupi Jupi Jupi", "Kaotic Reaper Z"];
const professions = ["Spellbreaker", "Scourge", "Tempest", "Guardian", "Firebrand", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.4619, 19.0656, 8.6657, 11.0842, 10.4038, 0.0, 19.607, 22.1536, 236.6185, 102.359, 17.059, 100.8468], [4.4698, 24.8497, 6.9552, 24.5754, 19.9824, 26.8548, 231.4677, 77.112, 10.0943, 70.5465, 13.7145, 0.0, 22.9973, 8.7914, 6.9223, 18.1955, 0.0, 50.1602], [222.8822, 52.4772, 231.8783, 52.0598, 30.7496, 67.7564, 67.0761, 0.0, 26.864, 137.0795], [52.8299, 123.2829, 66.912, 3.4686, 247.3631, 49.25, 102.1752, 268.508], [6.8736, 0.0, 20.8039, 6.9262, 0.0, 21.1306, 26.2108, 470.3397, 199.6915, 3.6366, 225.8645], [20.0256, 1.8333, 47.497, 11.4761, 43.0069, 30.0288, 38.962, 347.0405, 144.5136, 18.734, 135.7731, 2.952, 64.5254, 14.2974, 0.0, 21.7067, 18.768, 59.7402], [18.3047, 70.3836, 0.0, 18.5472, 89.194, 847.9636, 296.2243, 19.4062, 86.3906, 19.8645, 0.0, 0.0], [63.0315, 171.7418, 24.5971, 69.4876, 788.7285, 309.1334, 28.09, 366.4948], [68.3141, 167.5082, 38.2826, 99.8731, 33.5395, 85.8452, 924.9049, 407.4941, 0.0, 102.1208, 34.729, 74.3135, 38.8159, 89.0561, 16.1891, 21.62, 175.1303], [26.6773, 53.2665, 0.0, 32.8624, 61.7578, 69.874, 827.0382, 560.6899, 31.1425, 395.176, 23.5238, 67.0912, 3.4375, 0.0, 30.9738, 134.964, 83.9054], [10.31, 75.8659, 0.0, 21.5749, 27.5338, 237.1208, 998.6269, 352.8874, 36.0134, 227.3679, 20.8178, 172.9546, 21.7199, 39.0166, 25.0173, 29.4952, 173.4619], [64.6097, 101.9844, 16.7504, 91.4432, 51.888, 143.934, 950.9812, 395.7274, 45.4795, 246.1032, 135.6075, 152.8082, 42.953, 0.0, 61.1074, 82.616, 213.3963], [0.0, 23.1648, 43.385, 143.6639, 97.2859, 131.8782, 55.2221, 191.6544, 1233.9577, 378.8198, 354.6986, 115.5277, 206.5952, 85.8757, 66.8885, 33.231, 32.844, 112.2147], [69.2685, 146.3931, 21.793, 137.8792, 86.2666, 73.9956, 979.633, 645.1133, 25.7537, 452.6541, 58.548, 269.0299, 53.6, 42.3864, 31.0867, 93.7112, 269.5306], [21.3665, 235.3541, 0.0, 0.0, 102.0317, 149.0216, 1629.9316, 555.7776, 65.4147, 563.4468, 87.7298, 0.0, 64.0502, 118.1513, 32.4284, 76.3784, 155.8627], [0.0, 20.7331, 46.8832, 1397.4981, 619.752, 67.773, 734.1462, 169.863, 0.0, 248.7885, 46.6339, 75.4145, 135.1561, 119.6184, 494.9825], [50.6294, 427.616, 1729.408, 638.0304, 52.7527, 615.0267, 116.2965, 0.0, 311.6034, 93.9978, 75.8002, 75.3779, 38.5664, 292.5655]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

