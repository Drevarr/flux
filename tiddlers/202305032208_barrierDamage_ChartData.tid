created: 20230503220838000
creator: Drevarr
modified: 20230705163528007
modifier: drevarr
tags: ChartData
title: 202305032208_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Zaylen Harker", "Gavann", "Sub Train", "Oops All Beans", "Allie Mistwalker", "Tegan Parker", "Rozaalyna", "Mistwalker Caelon", "Lord Erin The Wise", "Xanvias Einzbern", "Koralia Danai", "Miphest\u00f6", "Aira Draugr", "Sygaldry Verdandi", "Kary\u00edna", "Primal Clone", "Demon Dalham", "Arriasa", "Cedryn X", "Slautorn", "Zadie Miststep", "Ryvalia Fazebringer", "Black Raspberry Pie", "Hauzzy", "Farra The Bloodless", "Inedible Plant", "Smol Daddy Tika", "Lucas Ryn", "Husky Guard", "Eibh\u00ebar", "Artakama Nahid", "Blancooo Padreee", "Skye Nightroad", "Maaaathexxs", "Bella Sassy", "Venomina The Fierce", "Newtype Khan", "Drevarr Moonwillow", "Skylar Shadowmoon", "Be\u00eb", "Mannse Lee", "Kosa\u00efr", "Binkety Bonk", "\u00c1rkantor", "Smol Gluvs", "Elonith Requiem", "Mac Adaymia", "Solus Nex", "Tootsie Pop Rocks"];
const professions = ["Willbender", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator", "Tempest", "Scourge", "Vindicator", "Weaver", "Berserker", "Firebrand", "Tempest", "Herald", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Druid", "Berserker", "Weaver", "Tempest", "Chronomancer", "Chronomancer", "Berserker", "Vindicator", "Vindicator", "Spellbreaker", "Firebrand", "Dragonhunter", "Chronomancer", "Tempest", "Spellbreaker", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Scourge", "Scrapper", "Catalyst", "Scrapper", "Vindicator", "Scourge", "Scourge", "Vindicator", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26873, 14439, 261, 0, 0, 26, 0, 0, 3635, 481, 14195, 14471], [22810, 16643, 261, 0, 2420, 0, 0, 14158, 0, 14483, 6142], [43646, 23782, 1099, 0, 0, 2258, 0, 0, 6731], [27271, 11692, 0, 0, 0, 1574, 679, 0, 3842, 0, 0, 20367, 14787], [42066, 20934, 0, 261, 1102, 0, 0, 15858, 0], [25924, 10041, 2267, 0, 0, 0, 0, 0, 0, 0, 32506, 10384], [0, 32223, 0, 0, 34959, 14831], [49533, 18262, 0, 0, 1099, 0, 0, 14128], [29349, 11096, 0, 0, 1097, 0, 0, 9666, 0, 0, 25990, 6413], [35217, 8859, 0, 0, 0, 527, 0, 0, 16201, 0, 0, 18571, 7249], [23358, 7195, 0, 0, 2489, 0, 0, 28689, 0, 1188, 15425, 11164], [31932, 8384, 0, 0, 0, 0, 14075, 0, 0, 22071, 17890], [44118, 24386, 0, 0, 1188, 6963, 0, 955, 17219, 0, 0, 0], [48551, 27636, 0, 0, 5, 1099, 0, 0, 18740], [22458, 20110, 985, 0, 0, 0, 0, 0, 17275, 0, 32167, 7454], [36284, 17406, 0, 0, 0, 2, 0, 0, 11224, 0, 0, 23644, 15427], [36216, 4329, 0, 0, 0, 1129, 0, 0, 6794, 0, 0, 47084, 8998], [29718, 22926, 0, 0, 1034, 150, 1037, 5642, 0, 34645, 12617], [34744, 16442, 0, 0, 0, 10, 0, 0, 17415, 0, 28431, 11309], [44030, 20112, 3261, 0, 0, 0, 0, 12742, 0, 0, 15254, 16537], [45084, 17972, 0, 0, 0, 522, 1454, 261, 10417, 0, 0, 19286, 17616], [37411, 8727, 261, 0, 0, 0, 0, 0, 14908, 156, 37221, 15854], [30612, 16529, 0, 0, 0, 0, 0, 0, 12010, 0, 0, 35551, 21281], [47018, 10993, 0, 0, 0, 0, 0, 0, 19656, 0, 29716, 9182], [36273, 26001, 0, 0, 0, 0, 0, 0, 15131, 0, 1229, 25977, 22606], [41751, 14127, 0, 0, 261, 0, 0, 32517, 0, 0, 37475, 21145], [45902, 25931, 0, 0, 0, 1903, 1129, 0, 43335, 0, 0, 28427, 4704], [51591, 22157, 0, 0, 0, 678, 845, 375, 29517, 0, 596, 35858, 18409], [44278, 20262, 0, 0, 0, 1438, 0, 0, 22863, 0, 0, 41340, 30080], [41748, 41080, 1099, 0, 0, 1332, 0, 0, 25208, 0, 0, 44762, 16053], [51694, 26998, 0, 0, 0, 2931, 0, 0, 13944, 0, 0, 56532, 27635], [65161, 24165, 0, 0, 0, 0, 261, 28379, 0, 0, 43244, 24392], [70795, 56197, 2506, 511, 2978, 0, 0, 5415, 0, 0, 35869, 14013], [47172, 40234, 0, 0, 0, 1790, 0, 0, 62715, 0, 26309, 20630], [110742, 76134, 0, 0, 0, 12216], [57220, 23106, 0, 149, 1594, 0, 18151, 0, 66974, 33171], [35890, 23840, 0, 0, 7808, 0, 0, 59555, 0, 52023, 22058], [53658, 29322, 1907, 599, 0, 1394, 0, 0, 40843, 0, 0, 49966, 30733], [55069, 19745, 401, 0, 68, 2228, 0, 123, 31102, 0, 148, 72263, 35536], [144367, 52749, 824, 6, 1640, 0, 0, 37343], [86553, 2097, 0, 0, 0, 521, 0, 0, 34221, 0, 0, 77057, 40268], [143104, 47455, 667, 314, 6769, 0, 5880, 49289], [81949, 43151, 0, 1216, 0, 0, 0, 39313, 0, 0, 59904, 37082], [0, 150259, 120953], [94138, 45563, 1099, 0, 0, 3026, 0, 0, 25578, 0, 318, 75523, 33664], [81884, 31122, 3376, 798, 4820, 1004, 0, 37051, 0, 461, 76470, 50133], [67476, 2188, 0, 6231, 0, 261, 55628, 0, 2191, 98242, 57955], [105487, 49455, 514, 0, 0, 7427, 898, 0, 46590, 0, 1342, 70081, 22818], [136375, 59692, 0, 740, 1450, 10129, 0, 1770, 75463, 0, 0, 72683, 80201], [112408, 67302, 238, 0, 1716, 4723, 0, 84435, 0, 0, 84774, 102413]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

