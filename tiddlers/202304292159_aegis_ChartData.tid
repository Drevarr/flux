created: 20230429215910000
creator: Drevarr
modified: 20230705163527342
modifier: drevarr
tags: ChartData
title: 202304292159_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Drevarr Moonwillow", "Tika Fiery", "Marmacyta", "Wanguazen", "Gabe Malhorn", "Johosh The Great", "Zady Stardust", "Jupi Jupi Jupi"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Guardian", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.968, 0.0, 0.0, 0.0, 0.0, 0.3974, 0.0, 188.9729, 47.9808, 0.0, 73.7847], [0.0, 0.0, 10.6596, 15.6328, 5.5642, 0.0, 5.2109, 19.8352, 129.0939, 22.7338, 49.2669, 5.5042, 23.8525, 19.2863, 38.1031, 27.6883, 0.2392, 28.094], [0.0, 3.2798, 0.0, 0.0, 8.8541, 0.5152, 130.7036, 138.5731, 0.0, 115.4187, 0.0, 8.5527, 0.0, 0.0, 0.0, 26.7352, 0.5382], [97.5361, 115.6992, 234.8167], [14.9762, 107.3232, 55.1655, 0.0, 215.433, 16.2747, 88.6512, 58.9867], [44.6702, 84.5082, 0.0, 136.7362, 28.704, 46.3036, 153.5606, 142.4573, 3.5925, 129.528, 41.3895, 165.2572, 15.4229, 29.7395, 0.0, 11.5, 175.6685], [0.0, 61.3582, 0.0, 0.0, 20.0045, 64.9796, 750.4188, 288.7987, 23.5057, 238.4703, 84.2858, 0.0, 18.911, 49.1891, 0.0, 73.232, 103.442], [106.7283, 119.9155, 14.9537, 363.5582, 157.2317, 104.4568, 870.4987, 441.5376, 28.7512, 126.7524, 100.6448, 189.0147, 36.1085, 0.0, 31.5632, 37.1312, 198.8649], [0.0, 2.2963, 56.1568, 919.754, 472.3824, 44.3665, 513.6016, 183.762, 0.0, 255.9158, 30.8763, 64.3713, 101.0473, 138.644, 404.6188]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

