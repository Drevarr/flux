created: 20230401000636000
creator: Drevarr
modified: 20230705163523628
modifier: drevarr
tags: ChartData
title: 202304010006_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Ateriuz", "Arkintor", "Zadie Miststep", "Mike The Archmagus", "Zenek Tryst", "Mac Chiato", "Newtype Khan", "Arriasa", "Cat Wigglebooty", "Xyntharos", "Lord Erin The Wise", "Aronorf Xideliesi", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Berserker", "Tempest", "Tempest", "Tempest", "Weaver", "Tempest", "Spellbreaker", "Druid", "Scrapper", "Vindicator", "Weaver", "Firebrand", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 17.246, 0.0, 21.5433, 76.8928, 83.7194, 0.0, 57.552, 0.0, 86.5507, 0.0, 0.0, 105.5754, 0.0, 0.0, 0.0, 50.2757, 0.0, 0.0, 103.6886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 47.0448], [35.3165, 33.9217, 0.0, 8.4779, 20.6711, 33.8159, 6.5856, 25.6555, 17.0016, 0.0, 42.0365, 0.0, 30.371, 37.8731, 33.912, 67.936, 34.0704, 26.6636, 34.0718, 20.7774, 0.0, 34.0686, 30.2063, 0.0, 23.5488, 6.271, 13.6282, 57.9348], [33.4234, 35.3506, 35.233, 18.9457, 31.0939, 52.6025, 28.7708, 27.2654, 46.4112, 30.8405, 24.7776, 0.0, 23.6477, 63.7642, 23.5224, 0.0, 38.83, 29.0035, 0.0, 0.0, 26.231, 0.0, 0.0, 53.703, 25.1437, 24.8371, 32.7692, 0.0, 13.4552], [29.3107, 18.8395, 29.3471, 29.1682, 22.8953, 46.6225, 28.4416, 40.4131, 24.2352, 21.9067, 62.2003, 0.0, 29.3664, 48.263, 36.504, 0.0, 44.519, 29.3093, 27.8494, 0.0, 26.9438, 21.3282, 29.3058, 28.485, 29.1878, 0.0, 0.0, 29.2336], [9.504, 121.1285, 31.9158, 31.824, 81.162, 100.0012, 0.0, 63.5501, 145.9764, 22.0089, 126.7112], [50.2656, 0.0, 45.3583, 7.3875, 29.7856, 51.2795, 28.1946, 35.315, 28.7232, 7.3656, 53.7418, 1.5708, 0.0, 58.4854, 29.592, 0.0, 31.9505, 35.905, 28.3576, 0.0, 28.0368, 26.775, 0.0, 29.5002, 23.9625, 0.0, 30.983, 0.0, 45.3562, 31.218], [221.8214, 0.0, 25.2311, 14.5568, 35.5421, 25.9837, 0.0, 0.0, 30.9936, 34.7846, 25.2048, 0.0, 33.2562, 64.9373, 26.5248, 97.3728, 29.0909, 51.9719, 34.8797, 0.0, 0.0, 0.0, 0.0, 0.0, 34.2144, 69.2634, 0.0, 23.3772], [31.9464, 0.0, 194.481, 79.1482, 120.7483, 27.5962, 150.0206, 42.0444, 105.5592, 85.2525, 20.1398, 69.4848, 321.5159, 33.2795, 82.1832], [185.6563, 135.1048, 86.0244, 94.5649, 159.1329, 96.2086, 58.6118, 24.4378, 219.4368, 135.1469, 209.328, 0.0, 140.8557, 94.2637], [80.0986, 56.9948, 37.5379, 39.1181, 39.6415, 69.9602, 50.668, 24.8299, 82.9488, 90.1454, 38.2771, 0.0, 42.607, 108.8432, 32.5728, 17.9739, 119.5992, 39.6178, 64.1348, 2.8685, 89.1475, 66.6774, 37.404, 68.3802, 78.7725, 20.5394, 53.1802, 118.4408, 26.9217, 120.032], [69.3274, 56.7302, 16.0112, 42.7709, 77.1025, 109.5973, 32.7634, 34.9848, 103.1712, 78.8832, 83.0477, 34.0217, 75.3995, 173.1101, 43.9128, 24.0732, 140.3703, 6.3773, 76.8398, 27.4493, 104.9242, 11.9952, 15.828, 41.31, 85.4887, 4.9018, 41.4586, 105.2388, 78.2144], [187.7453, 105.4696, 68.3256, 55.4468, 65.1533, 158.0191, 104.6287, 68.3184, 140.2896, 77.0774, 207.7046, 0.0, 115.7912, 243.7451, 88.8192, 145.2654, 39.3557, 85.0049, 0.0, 33.7392, 39.015, 0.0, 61.236, 111.4425, 0.0, 169.3157, 31.2566, 63.4524], [280.3123, 277.0891, 161.3884, 98.6812, 132.0947, 279.6293, 201.2312, 102.3331, 192.3504, 195.0221, 431.0448, 68.3852, 85.0595, 253.0458], [256.4198, 312.1751, 203.495, 122.3156, 248.7951, 356.6808, 216.5016, 153.4171, 254.6016, 215.3606, 342.3581, 59.4779, 223.7256, 523.101, 137.484, 29.6136, 459.8748, 204.2914, 319.1157, 257.2733, 164.6892, 101.256, 259.524, 229.8038, 21.7382, 167.5872, 154.7934, 120.5849, 288.0768]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

