created: 20230329220116000
creator: Drevarr
modified: 20230705163523265
modifier: drevarr
tags: ChartData
title: 202303292201_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Jr Baldassari", "Mesmer Kamoidra", "Lil Red Robin", "K\u00f4sair", "Kiloak", "Bura Beignetbringer", "Tootsie Pop Bringer", "Zaylen Harker", "Bella Lunabringer", "Avian Nefaris", "Jorja Peachbringer", "Ark Darkness", "Charred Fishbringer", "Spicy Gyrosbringer", "Pieca Pizzabringer", "Grasszanine", "Gavann", "Ryvalia Fazebringer", "Arkintor", "Big Macbringer", "Johosh The Great", "Bubble Teabringer", "Bork Borkbringer", "Band Aidbringer", "Abigail Ryn", "Boysto Yardbringer", "Leana Deeb", "Ravioli Fetabringer", "Oo Dads Mad", "Verin Lan", "Redoxone", "Morv\u00e4rth", "Morton Saltbringer", "Brioche Bunbringer", "Newtype Khan", "Lord Mac\u00fcmbeiro", "Domina Flagbringer", "Nazhul Naxxremis", "Sumatra Satyricon", "Smol Gluvs", "Sp\u00edcy Cheese", "Mort\u00e4rion", "Seren Nightroad", "Blancooo Padreee", "Baidu Sugiyama", "Iced Coffeebringer", "Panther B Me", "Rina Of Theros", "Plum Crazybringer", "My Birthday Girl", "K\u00f4sair", "Legacy Of Mathus", "\u00c4lplrmagron\u00e4bringer", "Bee Honeybringer", "Sister Elon\u00edth", "Cinder Flamebringer", "Cael Saladbringer", "Sizzln Sisigbringer", "Xanvias Tlesel"];
const professions = ["Herald", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Tempest", "Vindicator", "Weaver", "Firebrand", "Spellbreaker", "Renegade", "Soulbeast", "Scourge", "Chronomancer", "Chronomancer", "Spellbreaker", "Berserker", "Spellbreaker", "Scourge", "Soulbeast", "Scourge", "Berserker", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper", "Berserker", "Berserker", "Vindicator", "Scourge", "Dragonhunter", "Weaver", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[202.4], [3.2695, 24.2078], [46.2895, 54.0494, 34.1143], [264.0741], [8.2489, 10.8426, 13.1733, 54.5526, 60.358, 64.1714], [39.5873, 30.95, 4.8405, 7.1753, 24.9411, 2.0511, 9.5333, 0.0, 66.0988, 16.0857], [9.0476, 48.775, 15.9514, 2.5195, 17.6165, 13.0255, 47.96, 146.1579, 48.7037, 0.0], [32.9206, 46.5, 11.4407, 7.8247, 27.3003, 18.1149, 9.3467, 21.6842, 13.963, 183.3143], [43.746, 59.025, 17.0749, 12.9545, 23.1371, 30.4, 3.1867, 0.0, 11.679, 121.7143], [0.0, 0.0, 35.5997, 84.5872, 29.12, 18.3947, 34.358, 34.3143], [185.0476, 73.425, 21.537, 17.6039, 28.0841], [121.9365, 0.15, 20.7315, 40.3768], [13.3333, 5.05, 25.1975, 1.9545, 23.5812, 55.2851, 57.2, 9.3947, 29.7407, 330.4286], [225.4444, 46.825, 15.9981, 27.2338, 31.9411, 42.9787, 1.4, 0.0, 41.642, 94.8], [7.8006, 6.026, 64.3482, 14.3787, 3.0667, 24.9211, 42.9259, 1.4], [4.487, 167.5319, 114.24, 0.0, 278.6667, 673.3429], [93.7778, 2.9, 18.8658, 3.6234, 46.3045, 52.834, 30.4, 51.6316, 36.7407, 125.2286], [20.746, 82.6, 23.5467, 8.8312, 59.2675, 11.3021, 20.4667, 6.9737, 15.2469, 81.9714], [125.9524, 14.95, 28.0817, 33.3247, 34.2397, 7.6667, 106.9474, 26.2469, 561.0857], [5.254, 19.425, 30.3064, 65.3442, 24.5938, 57.0511, 38.4667, 257.7632, 138.5309, 115.0], [134.8254, 21.9, 24.7461, 20.0519, 48.4323, 32.5234, 59.44, 0.0, 39.963, 252.3714], [298.0952, 44.525, 37.9825, 11.3831, 30.4912, 17.9787, 26.9474, 174.4321, 262.4857], [189.1905, 52.875, 34.9961, 0.0, 51.5904, 64.566, 19.1733, 21.7105, 108.2], [235.7778, 102.7, 26.5272, 18.7143, 41.7216, 57.7191, 35.1333, 3.7368, 110.4444, 451.6286], [56.0952, 65.25, 54.0593, 47.513, 61.8823], [0.0, 447.325, 118.75, 0.0, 1.0421, 1.4681, 5.2, 0.0, 0.0, 59.0857], [71.2313, 84.8128, 199.24, 320.4474, 416.1143], [142.0, 292.75, 22.6702, 19.3571, 69.5063, 25.983, 0.0, 193.4074, 553.2286], [679.0952, 278.525, 159.1623, 83.0538], [345.4085, 391.8533, 537.3684, 387.1481, 1177.0857], [194.4202, 193.2013], [355.3234, 589.2933, 526.6316, 989.5802, 257.8857], [166.0476, 77.1, 67.1041, 0.0, 91.9647, 69.5489, 107.1579, 171.7901, 394.8571], [279.5873, 49.775, 67.0632, 81.4026, 100.6215, 145.2894, 114.6933, 170.5789, 75.5802, 193.8857], [437.9206, 63.3, 69.071, 57.5065, 119.021, 80.9702, 127.52, 124.9211, 227.4568, 690.3714], [526.75, 81.2947, 29.1753, 147.1455, 397.6383, 53.8667, 410.5789], [149.127, 261.0, 79.7695, 77.0974, 192.677, 197.5574, 78.2933, 123.5263, 60.5143], [1627.4444, 197.9, 156.8103, 108.5455, 102.0404], [643.7619, 179.525, 124.0652, 109.6623, 158.3776, 101.8936, 162.84, 76.2632, 58.2469, 114.4571], [862.2381, 140.75, 127.6479, 12.1299, 165.5282, 29.0936, 36.12, 594.1316, 105.4198, 1106.9143], [336.688, 268.0851, 257.2533], [423.2222, 113.325, 141.1663, 26.1688, 204.9689, 256.8936, 127.7467, 0.0], [125.9786, 45.8117, 291.3331, 118.0128, 0.0, 451.1579], [211.0159, 231.025, 194.2519, 44.6299, 238.8907, 65.1064, 82.2933, 459.0, 165.4321, 1121.2857], [159.8571, 208.475, 78.0788, 49.8442, 295.6955, 274.766, 234.2933, 189.9737, 242.8025, 1830.4857], [1003.8889, 56.625, 134.5788, 0.0, 283.91, 457.0511], [1360.2698, 166.125, 245.2977, 94.1429, 247.8478, 362.8638, 164.6133, 487.8421, 228.3086, 1650.5143], [1081.6349, 154.65, 218.9942, 144.8377, 278.2918, 299.5149, 207.8, 255.5789, 1098.321, 1903.3714], [1589.1429, 476.525, 348.4134, 178.961, 293.2876, 442.1489, 152.8933, 517.0, 288.5062, 1850.2], [1011.4444, 427.4368, 74.4935, 283.6821, 489.5872, 160.5867, 337.7632, 766.5802, 655.5714], [2129.254, 457.475, 298.0671, 15.2987, 381.8856, 513.0936, 39.7733, 1756.2632], [1257.8413, 27.35, 254.6644, 159.7078, 537.635, 635.566, 113.6667, 707.0263, 129.5309, 1776.3143], [1296.6508, 158.275, 252.4018, 165.5065, 535.4415, 844.1872, 194.4933, 1418.4737, 318.2222, 1392.1143], [1980.8254, 153.95, 386.3405, 179.5974, 497.894, 363.1489, 216.0133, 673.6842, 2207.358, 1667.7714], [609.1948, 1180.7157, 764.5447, 372.5333, 360.5526, 440.3827], [1945.7302, 88.8, 687.1907, 123.8117, 678.4113, 310.4809, 0.0, 114.8684, 546.8642], [719.4762, 791.525, 601.0107, 478.3636, 788.5315, 926.8468, 293.64, 329.6842, 277.9429], [2650.9206, 808.3, 1128.0409, 349.2792, 566.1304, 658.2383, 173.0667, 899.2368, 235.7407, 2283.9143], [5230.1905, 422.1, 828.4066, 341.3442, 1369.185, 742.1574, 492.0533, 1024.5526, 2133.5185, 3557.2286]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

