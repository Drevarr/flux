created: 20230625212343000
creator: Drevarr
modified: 20230705163535743
modifier: drevarr
tags: ChartData
title: 202306252123_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["M\u00eecrowave Oven", "K\u00f4sair", "Shaca Booey", "Audra Storm", "Palm Sauce", "Ateriuz", "Duke Silvver", "Newtype Khan", "K\u00f4sair", "Lord Erin The Wise", "Permanent Dawn", "Miphest\u00f6", "Irish Necroman", "Be\u00eb", "Caelon Cai", "Fribble Bibble", "Johosh The Mighty", "Xanvias Einzbern", "Sakis Ranger", "Zayde Sunsabre", "Blancooo Padreee", "Mike The Archmagus", "Drevarr Moonwillow"];
const professions = ["Tempest", "Spellbreaker", "Berserker", "Weaver", "Vindicator", "Berserker", "Vindicator", "Spellbreaker", "Berserker", "Weaver", "Weaver", "Tempest", "Reaper", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Druid", "Spellbreaker", "Spellbreaker", "Weaver", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.1877, 23.0908, 92.2522, 60.8122, 61.2133, 0.0, 97.9622, 0.0, 82.668, 42.0368, 30.0192, 61.8355], [250.4395, 213.474, 97.5408, 214.1338], [0.0, 82.273, 33.2568, 0.0, 44.6052, 180.621, 0.0, 105.6614, 60.0096, 104.2166, 84.5348, 0.0, 101.0096, 95.2854, 0.0, 0.0, 0.0, 30.9523], [35.3769, 282.9427, 12.0119, 19.916, 96.7378, 37.2292, 0.0, 60.7017, 32.3172, 23.3926, 85.4323, 78.432, 111.1555, 42.5467, 8.1098, 62.437, 41.6304, 72.6283, 76.3518], [35.9268, 297.5172, 57.0953, 24.017, 26.0064, 11.9614, 13.9331, 93.9859, 64.3468, 9.0741, 45.6425, 16.92, 45.5401, 43.5456, 64.679, 104.3501, 82.5797, 27.3728, 93.2131, 69.1488, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 88.6072, 38.352, 53.3232, 49.5615, 30.8308, 93.0686, 41.2673, 0.0, 98.0813, 0.0, 0.0, 54.8813, 48.6278, 77.3952, 79.8333, 0.0, 33.2904, 65.809, 121.0471, 120.1358, 36.0552, 54.144, 66.3221, 93.0642], [68.084, 19.1345, 100.1246, 58.8642, 12.0234, 71.1465, 62.7309, 70.2533, 63.0835, 79.9277, 94.7424, 97.9877, 20.8092, 65.7427, 61.3402, 87.1666, 72.8532, 70.5566, 122.0496, 32.8939, 145.089], [0.0, 164.8046, 127.009, 52.217, 18.2448, 22.2573, 35.547, 226.0037, 0.0, 6.0291, 42.1013, 14.6781, 103.2293, 38.4768, 3.4291, 43.7016, 64.8441, 24.9217, 94.3306, 41.6304, 117.4442, 66.9364, 20.0395, 75.5008, 34.2677, 50.8502], [53.4982, 60.0446, 108.733, 84.4059, 76.977, 20.0079, 63.8014, 107.0688, 165.599, 111.1148, 28.3269, 105.8774, 89.8934, 88.6836, 91.9926, 82.7477, 52.1136, 9.6672, 144.0526], [229.4916, 305.0848, 55.0657, 47.1408, 51.6813, 33.9031, 112.896, 50.0329, 0.0, 62.4902, 31.9365, 39.4656, 32.0717, 71.3914, 143.0477, 68.1026, 14.5583, 83.2027, 35.28, 45.5744, 62.769, 11.1154, 42.5632], [194.298, 355.9556, 84.6014, 87.608, 37.2624, 63.4913, 30.5343, 79.4506, 52.2325, 0.0, 60.7375, 10.3635, 0.0, 20.016, 78.9022, 10.0345, 84.0408, 12.0422, 75.7888, 71.8242, 50.4374, 27.2224, 24.4987, 150.5471], [139.3996, 152.0519, 169.737, 0.0, 20.6976, 53.8373, 113.4276, 52.8323, 0.0, 63.9146, 105.1085, 145.1174, 236.856, 113.2096, 56.588, 115.3291, 136.2749, 143.2971, 165.3603], [200.5302, 325.9656, 125.9408, 20.304, 52.9536, 71.6169, 50.3695, 123.4094, 53.3488, 1.2789, 84.5245, 6.7537, 94.1414, 77.0822, 124.3661, 54.6497, 45.7803, 103.9219, 64.1155, 116.6225, 119.2097, 67.728, 124.1552, 0.0, 96.1042], [30.8861, 286.5863, 85.2958, 103.306, 43.2432, 72.9292, 61.7155, 145.283, 75.8045, 49.0764, 78.2127, 85.7603, 100.3622, 48.7373, 124.4328, 81.7418, 45.4513, 78.407, 88.2, 118.4555, 108.5595, 89.5205, 101.7456, 45.5122, 108.8858], [218.5852, 205.3051, 187.0952, 107.63, 9.1392, 50.2681, 70.9324, 137.8037, 70.9785, 15.3096, 73.602, 45.5778, 92.759, 67.1962, 129.8371, 83.3245, 47.1621, 100.7558, 76.487, 146.8368, 115.5567, 19.8005, 144.9104, 79.1947, 147.4381], [206.4874, 419.1587, 70.1807, 61.1, 92.8032, 132.4837, 76.9692, 0.0, 113.6575, 20.9496, 85.8838, 9.8136, 32.0328, 94.2797, 84.2688, 151.6546, 156.827, 35.7952, 143.7773, 104.8522, 181.9816, 132.8439, 115.297, 46.9248, 40.8312, 269.1746], [194.3897, 263.7435, 114.4042, 51.7, 38.1024, 132.2819, 40.0747, 176.4706, 128.234, 33.2514, 111.9959, 38.5353, 102.0974, 94.5101, 4.7424, 265.212, 152.2185, 47.853, 169.1059, 104.1936, 113.6516, 119.5698, 39.3619, 223.6448, 97.6642, 219.0153], [252.2208, 196.8967, 63.3977, 98.277, 133.0224, 71.5665, 86.8599, 165.4632, 113.559, 169.4783, 51.0138, 160.9562, 93.3581, 105.9014, 191.0861, 124.7074, 0.0, 78.5467, 92.2454, 204.0419, 188.873, 127.6075, 72.8688, 115.2941, 207.6154], [245.3471, 506.6061, 123.4839, 89.3, 70.6272, 178.361, 4.6354, 100.8302, 139.4618, 10.8315, 121.1888, 0.0, 68.9327, 158.423, 119.3626, 184.3474, 129.0366, 14.6898, 102.9442, 176.6352, 75.0303, 34.8317, 208.3632, 170.704, 12.0077, 240.1568], [397.3028, 697.3366, 197.1897, 229.642, 99.12, 56.274, 61.2034, 111.4848, 92.6791, 43.8132, 129.8809, 13.6629, 75.7996, 234.2246, 232.487, 291.9, 136.5311, 102.5986, 141.0768, 113.6016, 160.8695, 100.4304, 53.6645, 197.2496, 71.8171, 194.0738], [280.9989, 544.4439, 189.3919, 28.999, 9.1392, 89.3824, 93.8938, 280.6877, 148.4573, 110.7082, 3.6378, 119.7173, 194.135, 170.2886, 420.6029, 189.8774, 93.6005, 211.0099, 151.2806, 162.4497, 162.2219, 131.6314, 319.4496, 77.2867, 265.9274], [343.5958, 649.9693, 157.1856, 201.583, 64.0752, 34.1177, 79.0443, 290.0016, 149.2452, 2.0097, 131.7767, 29.1024, 141.6007, 204.7334, 173.7542, 290.1653, 183.5932, 18.3253, 212.4998, 189.0538, 178.7579, 125.0235, 209.5982, 231.9168, 71.2066, 349.8718], [308.5856, 610.4498, 178.6565, 237.773, 89.376, 163.6237, 52.7681, 271.3032, 177.3805, 0.0, 183.9651, 23.6457, 29.2407, 138.3782, 235.223, 312.9168, 255.9785, 20.9573, 239.0856, 153.4915, 228.1881, 159.2378, 115.8547, 314.2608, 57.3926, 274.9782]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

