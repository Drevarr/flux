created: 20230424220408000
creator: Drevarr
modified: 20230705163526537
modifier: drevarr
tags: ChartData
title: 202304242204_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Johosh The Great", "Zadie Miststep", "Black Raspberry Pie", "Leana Deeb", "Panther B Me", "Mac Aaroni", "Sub Train", "Rudjulin", "Tika Rucola", "Xanvias Tsoli", "Grasszanine", "Sygaldry Verdandi", "Daddys Lil Orchid", "Sassy Daddy Demon", "Smol Gluvs", "Koralia Danai", "Newtype Khan", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Druid", "Firebrand", "Tempest", "Chronomancer", "Weaver", "Scourge", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Holosmith", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[324, 325, 384, 526, 211, 1216, 759, 444, 622, 462, 617, 427], [361, 2279, 433, 741, 198, 484, 620, 343, 497, 410, 413, 385], [400, 1696, 396, 1798, 195, 595, 458, 779, 883, 590, 650, 661], [623, 265, 560, 707, 255, 721, 1512, 480, 1499, 534, 413, 655], [570, 460, 548, 432, 346, 354, 1554, 1543, 1469, 483, 517, 502], [624, 490, 558, 1263, 220, 565, 1001, 541, 403, 1365, 500, 1675], [682, 6363, 430, 4030, 243, 269, 1008, 470, 1234, 1212, 1105, 1599], [951, 729, 384, 2298, 186, 409, 719, 463, 1379, 706], [270, 613, 838, 432, 811, 430, 339, 563], [305, 416, 469, 1613, 281, 428, 381, 444, 656, 644, 704, 510], [562, 678, 564, 1033, 265, 475, 839, 425, 669, 527, 325, 349], [611, 315, 364, 959, 252, 477, 549, 458, 684, 406, 416, 1499], [290, 474, 833, 2042, 322, 828, 1438, 717, 1663, 391, 667, 626], [706, 6303, 2386, 327, 234, 302, 382, 830, 577, 675, 676], [508, 329, 350, 968, 196, 314, 1050, 215, 737, 439, 386], [434, 1703, 318, 455, 283, 373, 574, 327, 807, 437, 264, 498], [581, 701, 325, 1373, 219, 620, 784, 324, 393, 705, 344, 380], [389, 523, 551, 440, 277, 338, 404, 292, 511, 535, 336, 455], [464, 1732, 286, 607, 172, 299, 449, 236, 435, 469, 339, 257], [156, 221, 268, 369, 153, 329, 370, 210, 384, 282, 385, 492]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

