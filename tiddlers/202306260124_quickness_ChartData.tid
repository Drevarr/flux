created: 20230626012458000
creator: Drevarr
modified: 20230705163538306
modifier: drevarr
tags: ChartData
title: 202306260124_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Zorryeh", "Drevarr Moonwillow", "Johosh The Mighty", "Smol Daddy Tika", "Newtype Khan", "Smol Daddy Tika", "Zayde Sunsabre", "Arcanophage Farra", "Proteccdebussy", "Bender Ale Devourer"];
const professions = ["Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[76.3146], [0.0, 5.6246, 9.7902, 10.8153, 7.8689, 15.7221, 2.4797, 2.7048, 3.1363, 0.0, 0.3226, 8.1893, 3.281, 0.0, 16.266, 5.3386], [34.1167, 41.0362, 34.4284, 3.409], [34.7846, 6.952, 14.5958, 0.0, 10.8457, 23.4221, 36.9568, 13.9574], [0.0, 16.5888, 0.0, 0.0, 30.281, 11.5983, 23.4259, 0.0, 25.2806, 0.0, 19.9987, 18.8376, 0.0, 0.0, 0.0, 0.0], [0.0, 14.904, 13.7151, 58.5726, 15.3483, 40.0786, 8.8502, 12.6336], [34.6697, 9.5126, 0.0, 52.8612, 0.0, 62.2442, 16.9949, 0.0, 5.3222, 0.0, 14.2128, 0.0, 11.4533, 14.9741, 20.2272, 0.0], [14.0926, 45.6451, 37.3968, 63.6765, 41.578, 48.3262, 0.0, 1.5288], [38.098, 119.4625, 25.5226, 22.7304, 18.0576, 8.536, 43.223], [31.7083, 62.519, 37.8819, 78.8665, 44.0451, 65.3371, 38.0822, 15.5232, 53.9827, 9.548, 53.1216, 17.5066, 62.9777, 54.7853, 52.0008, 47.7576]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

