created: 20230215221053000
creator: Drevarr
modified: 20230705163519374
modifier: drevarr
tags: ChartData
title: 202302152210_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Grasszanine", "Kosair", "Domina Flagbringer", "Blanco Padre Guard", "Ark Darkness"];
const professions = ["Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24.112, 53.044, 13.8384, 13.8154, 0.0, 13.7886, 8.2344, 0.0, 13.8138, 0.0, 0.0, 13.8365, 0.0, 0.0, 22.319, 0.0, 13.4622, 0.0, 0.0, 22.743, 0.0, 0.0, 0.0, 0.0], [58.1702, 81.652, 0.0, 12.7526, 13.1516, 26.2395, 0.0, 13.0331, 0.0, 13.0364, 12.6782, 0.0, 26.1053, 13.0464, 32.4173, 0.0, 0.0, 12.9938, 0.0, 22.9824, 0.0, 0.0, 0.0, 12.6617], [115.8924, 57.5059, 0.0, 135.7747, 103.3565, 0.765, 155.2685, 30.15, 24.5916, 60.5682, 22.528, 165.0663, 12.4114, 81.5628, 0.0, 73.8083], [324.005, 348.064, 0.0, 44.7523, 72.4416, 45.7905, 29.5536, 52.9643, 25.1843, 73.7932, 25.1515, 0.0, 91.8797, 123.361, 95.6438, 34.56, 34.8462, 89.8128, 19.701, 99.5305, 13.8169, 49.133, 10.4013], [275.1782, 680.632, 17.0971, 123.984, 45.9228, 93.2274, 24.5227, 75.5365, 13.284, 19.6144, 63.0106, 0.0, 35.4432, 91.6147, 1.734, 31.5168, 15.5025, 14.0292, 42.4462, 13.761, 88.3984, 20.9508, 63.2478, 31.5315], [273.3698, 521.5, 0.0, 70.4938, 17.248, 38.6904, 39.2544, 51.1896, 0.0, 134.55, 76.7722, 0.0, 100.7405, 104.8786, 1.547, 156.0403, 28.26, 11.3886, 53.257, 54.164, 184.6971, 55.6776, 0.0, 27.3382]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

