created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Hyde En Sikh", "Zaedy Zae", "One Bad King", "Tribal S", "Frozen Chaos", "Aira Draugr", "Govinda Ektar", "Newtype Khan", "Xanvias Einzbern", "Revitiel", "Blancooo Padreee", "K\u00e1 Otik", "Kumengo", "Mistwalker Cael", "Crabbedmermaid", "Aronorf Xideliesi", "Kisumaiassu", "Sub Train", "Crusader Siolith", "Gabe Malhorn", "Koralia Danai", "Bella Sassy"];
const professions = ["Berserker", "Chronomancer", "Druid", "Guardian", "Druid", "Firebrand", "Herald", "Vindicator", "Spellbreaker", "Berserker", "Vindicator", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.2684, 0.0, 1.2569, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1708, 0.0, 1.2312, 2.4164, 0.0, 0.9522, 0.0, 1.728, 0.0, 0.0, 0.0, 1.242], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.776, 0.2369, 0.0, 0.0, 0.0, 2.304, 0.0, 0.0, 1.0224, 0.108], [0.604, 1.2464, 0.0, 0.7087, 0.9946, 1.5355, 0.4435, 0.0, 0.0, 0.0, 0.9002, 0.0, 0.5396, 0.0, 2.16, 0.6599, 0.7668, 1.026], [1.0143, 1.6065, 2.0602, 2.8849, 0.0, 3.1786, 0.0, 0.0, 1.7496, 1.4688], [0.6644, 0.9348, 0.7497, 0.756, 0.8525, 1.1633, 0.0, 0.5544, 0.7511, 0.0, 0.1944, 1.2793, 0.5104, 0.6031, 0.0, 0.864, 1.613, 0.0, 1.6614, 1.242], [0.0, 9.8982, 0.0, 0.0639, 5.4], [0.7248, 4.2845, 1.6537, 7.371, 0.0, 0.0, 2.1869, 0.7022], [0.0, 9.3525, 0.0, 0.0635, 0.0, 3.6, 4.6192, 0.0, 0.0, 0.0], [0.0, 3.9729, 1.8522, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4414, 0.0, 0.0, 0.9072, 2.5111, 2.2202, 2.0948, 0.0, 2.88, 1.9063, 0.0, 0.0, 1.836], [4.1072, 2.4149, 1.2127, 0.8977, 1.8115, 0.0, 3.3502, 2.2176, 1.2149, 0.0, 2.268, 2.3216], [2.2952, 4.5182, 1.1245, 3.2603, 0.0, 3.955, 0.0, 0.5544, 0.0, 0.0, 0.0, 0.0, 0.1531, 1.2061, 0.0, 4.32, 2.7862, 0.0, 0.0, 1.08], [1.9932, 3.4276, 0.0, 0.8977, 0.0, 0.5724, 2.3265, 0.0, 2.809, 0.0, 0.0, 2.7216, 1.2319, 0.0, 1.9044, 0.0, 2.88, 3.666, 0.0, 0.0, 1.134], [6.8252, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5126, 0.0, 2.3654, 0.0, 0.0, 1.1664, 2.6533, 0.587, 2.444, 0.0, 6.048, 5.2057, 0.5776, 0.0, 0.81], [0.3197, 6.9795, 0.0768, 5.544, 2.0102, 2.346, 3.8232, 3.1271, 2.3223, 4.2214, 0.0, 6.048, 3.2261], [1.9328, 3.5055, 3.9249, 2.7877, 1.2787, 0.0, 3.5828, 0.0, 3.5112, 0.8836, 0.0, 5.184, 4.6432, 1.3526, 4.1897, 0.0, 8.928, 2.3462, 2.4282, 1.404], [0.0, 0.3672, 3.6759, 0.0, 6.3202, 1.8556, 10.4236, 2.3734, 5.0784, 2.592, 11.0713, 0.0, 0.0, 9.558], [6.946, 10.5944, 3.1752, 3.6382, 0.0, 0.1512, 5.2579, 0.2048, 5.4331, 3.3577, 0.0, 10.4976, 7.5808, 4.1598, 5.5545, 0.0, 10.08, 8.4318, 0.0, 0.1917, 4.428], [3.926, 11.2176, 3.3736, 1.8428, 5.328, 9.4921, 0.0, 7.9094, 1.7451, 3.9882, 4.0176, 8.7653, 2.0416, 5.2371, 0.0, 8.928, 11.7312, 0.0, 1.4697, 2.484], [5.9192, 9.0364, 3.1311, 1.701, 0.0, 0.0, 6.2816, 0.0, 4.3243, 3.8657, 0.0, 6.8688, 9.9498, 4.9764, 6.475, 2.1147, 13.104, 9.0184, 0.0, 3.3867, 9.666], [6.7648, 16.359, 5.4022, 9.7807, 1.4918, 8.0497, 0.128, 5.544, 3.3798, 0.0, 4.0824, 11.7976, 3.5473, 5.618, 0.0, 13.392, 5.8656, 3.2057, 8.5626, 5.832], [11.778, 17.917, 4.1454, 10.0642, 5.9318, 14.0055, 0.0, 6.0984, 3.4019, 1.5484, 6.7392, 10.85, 4.5426, 6.3797, 0.1113, 19.44, 13.7842, 0.0, 3.5784, 11.124], [12.382, 17.6054, 5.6007, 8.505, 5.2214, 12.6562, 0.1792, 10.7554, 7.1793, 4.3323, 6.7392, 11.6081, 1.965, 5.9354, 0.4675, 22.464, 19.8697, 0.0, 14.8248, 11.556], [17.1536, 20.9551, 6.1961, 9.45, 9.9811, 11.6325, 0.0, 7.9834, 7.2897, 6.3186, 19.5696, 9.8077, 5.8696, 7.3954, 2.4709, 26.64, 15.9104, 0.3032, 13.4829, 12.366]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

