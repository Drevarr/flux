created: 20230217231312000
creator: Drevarr
modified: 20230705163519500
modifier: drevarr
tags: ChartData
title: 202302172313_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Venomina The Siren", "Bella Sassy", "Cat Wigglebooty", "Tegan Parker", "Abigail Ryn", "Mac Aaroni", "Zadie Miststep", "Tribal S", "\u00c9\u00efbhear", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.5227, 22.873, 5.488, 121.6768, 61.6244, 6.8301, 10.6157, 0.0, 50.5512, 13.5322, 135.1459, 16.7846, 67.8912, 12.768, 154.1155, 33.9772, 81.9192, 40.224, 21.0864, 38.2205, 22.5387, 65.588, 18.722, 0.0, 28.4482, 21.78], [48.1234, 24.4051, 2.0776, 118.039, 63.7431, 26.5154, 20.6568, 82.4976, 3.7786, 136.2816, 49.0135, 0.0, 66.3168, 41.449, 105.3533, 89.5265, 61.0157, 0.0, 16.0742, 64.8821, 0.0, 59.3334, 0.0, 0.0, 22.9774, 71.632], [71.3074, 0.684, 2.7244, 93.7664, 10.5487, 8.4143, 26.6486, 10.2352, 11.6525, 10.967, 38.7005, 3.7882, 77.8738, 18.8544, 13.7626, 136.5566, 50.1687, 20.2061, 31.6891, 180.432, 25.105, 55.0454, 74.7972, 39.5199, 8.0845, 166.2616, 38.2956, 23.804], [17.6861, 135.1037, 3.724, 375.5046, 74.5623, 9.505, 41.7514, 49.8658, 5.7293, 63.2486, 0.0, 47.2025, 178.8672, 0.0, 252.1992, 156.7835, 4.9536, 55.6229, 0.0, 7.4851, 53.1245, 7.4655, 154.4596, 9.8555, 32.3736, 55.6654, 0.0], [47.2954, 93.3797, 75.1268, 188.0346, 105.352, 18.8283, 0.0, 69.0739, 342.4512, 27.4499, 18.9814, 130.2912, 26.6112, 267.0739, 253.0856, 14.0467, 22.7011, 24.72, 5.6966, 96.2467, 44.402, 45.3676, 0.0, 85.3276, 7.2488, 68.662], [132.6125, 101.1499, 62.6024, 190.5434, 69.6486, 20.7241, 53.1878, 88.789, 71.5008, 438.8093, 43.5934, 59.136, 18.3053, 508.9838, 259.5622, 38.0928, 65.1245], [20.3357, 102.6821, 128.3016, 370.6752, 185.2788, 73.2354, 111.3826, 119.4379, 126.1824, 686.1254, 103.2139, 12.5755, 29.6355, 87.1775, 110.2366, 73.15], [50.5411, 50.0141, 50.4112, 316.7987, 42.5555, 11.7904, 0.0, 0.0, 67.32, 27.6326, 223.729, 81.6503, 0.0, 106.0992, 39.8093, 592.8638, 253.8329, 82.6382, 175.824, 81.4531, 97.3397, 48.8102, 83.2167, 12.2015, 147.9165, 70.938, 8.624], [35.8027, 159.8098, 354.7208, 289.8291, 42.5104, 20.0748, 0.0, 0.0, 0.0, 314.5574, 456.1066, 0.0, 0.0, 95.232, 13.44, 549.3581, 543.3369, 123.6019, 24.396, 205.44, 97.2182], [367.069, 191.821, 218.2656, 910.2554, 678.995, 208.5131, 152.4226, 220.369, 152.6323, 477.1603, 265.9899, 0.0, 400.7808, 280.1971, 724.0522, 569.4426, 0.0, 501.8899, 177.6, 185.6045, 306.095, 148.4212, 368.0813, 46.276, 65.9805, 230.0927, 166.936], [320.7341, 279.6192, 217.4228, 945.6922, 530.0506, 222.7187, 224.0237, 261.2995, 169.4362, 1067.976, 387.3872, 410.6496, 232.1894, 1296.1138, 616.672, 12.8563, 612.9302, 326.256, 194.3923, 322.3238, 310.2804, 325.6268, 90.965, 341.7727, 299.6175, 288.552]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

