created: 20230812001414000
creator: Drevarr
tags: ChartData
title: 202308120014_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Fel Kb", "Eloraaaaaaaaa", "Me Money Spongebob", "Urilstormwalker", "Tootsie Pop Rocks", "Oo Dads Mad", "\u00c1rk\u00e1ntor", "Jedd Eye", "K\u00e2 \u00d4tik R\u00e6j", "Zefirokai", "Rockdevil", "Lord Erin The Wise", "Revitiel", "Rozaalyna", "Legacy Of Mathus", "Mistwalker Cael", "Eibh\u00ebar", "Cerys Fireblade", "Rina Of Theros", "Xanvias Einzbern", "Arcanophage Farra", "Name Is What", "Zaedy Zae", "Venomina The Sly", "Blancooo Padreee", "Tribal S", "Black Raspberry Pie", "Morton Saltbringer", "Emily Melia", "Newtype Khan", "Keypek The Drunk", "Jimbo One Eye", "Mike The Archmagus", "Drevarr Moonwillow"];
const professions = ["Catalyst", "Firebrand", "Deadeye", "Firebrand", "Scrapper", "Berserker", "Scourge", "Berserker", "Berserker", "Catalyst", "Weaver", "Weaver", "Vindicator", "Scourge", "Berserker", "Vindicator", "Chronomancer", "Berserker", "Scourge", "Berserker", "Spellbreaker", "Scourge", "Druid", "Druid", "Spellbreaker", "Druid", "Chronomancer", "Chronomancer", "Druid", "Spellbreaker", "Scrapper", "Scrapper", "Weaver", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[168.777, 99.8659, 23.9996, 36.0566, 57.3521, 49.4045], [149.3059, 29.7197, 0.0, 230.2505, 45.3427, 0.0, 0.0, 0.0, 0.0, 0.0, 99.5463, 136.6997], [361.0579, 0.0, 37.8144, 120.8134, 146.6035, 203.742], [107.1216, 0.0, 340.3285, 38.4998, 123.5115, 25.8289, 0.0, 55.2883, 35.0217, 60.6758, 93.6624], [43.7673, 0.0, 69.2346, 0.0, 0.0, 0.0, 0.0, 45.0285, 0.0, 0.0, 40.1212, 0.0, 0.0, 354.9181, 46.8346, 59.7264, 0.0, 142.2842, 0.0, 87.5059, 40.7295, 0.0, 0.0, 0.0, 0.0, 0.0, 214.1194], [14.6208, 55.2907, 61.364, 18.1958, 9.7848, 105.7476, 93.6758, 167.5283, 20.5569, 34.6214, 70.3469, 79.38, 451.7789], [45.1914, 41.3213, 20.1167, 65.1037, 51.2784, 96.8787, 66.033, 76.7722, 31.2694, 44.7789, 63.7882, 69.207, 25.6608, 506.4641], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.4851, 0.0, 0.0, 20.0155, 83.9169, 24.1704, 414.6072, 171.7267, 24.2218, 0.0, 98.8619, 0.0, 50.112, 101.2095, 39.9722, 45.0046, 31.9718, 9.4554, 49.9312, 100.776], [98.7376, 21.7339, 58.696, 35.8323, 19.7856, 46.6616, 165.5834, 173.6114, 13.4152, 26.3267, 87.7165, 20.0232, 641.2115], [286.3865, 93.4424, 2.1878, 60.9435, 115.3008, 127.041, 146.4111, 202.0688, 58.1654, 0.0, 153.7679, 224.285, 113.1084], [73.8158, 7.9993, 2.4279, 9.9026, 18.3816, 0.0, 71.2701, 72.9266, 0.0, 8.0352, 39.0844, 107.9086, 0.0, 503.6048, 225.3706, 10.1789, 23.134, 0.0, 7.9861, 16.0358, 67.1895, 69.0782, 16.6272, 7.9046, 28.2515, 127.8828, 125.4365], [100.9212, 32.1313, 24.4389, 12.3442, 20.3256, 60.0848, 88.5298, 99.7758, 28.6814, 0.0, 42.1949, 73.6037, 27.6372, 196.2236, 298.4458, 24.2218, 36.36, 205.7353, 10.4044, 126.4205, 116.613, 43.5081, 3.9643, 29.1898], [41.3464, 17.6253, 2.9882, 37.584, 25.3682, 50.8226, 107.2573, 0.0, 4.7219, 0.0, 36.0962, 4.4712, 604.0398, 227.8618, 14.7715, 15.2712, 290.8174, 70.9862, 113.778, 11.9874, 4.9625, 18.481, 13.9536, 102.6012, 148.3186], [108.7538, 33.4562, 48.691, 45.4212, 11.7072, 55.0112, 59.3386, 49.9229, 0.0, 90.4848, 53.6868, 527.1945, 202.9498, 0.0, 105.2622, 252.0418, 66.7006, 115.2922, 156.87, 76.2793], [79.5123, 11.303, 83.4017, 0.0, 16.3944, 84.0948, 11.977, 124.4576, 12.7109, 35.8112, 92.7296, 70.2383, 49.248, 491.0951, 250.9469, 18.5693, 59.4032, 225.6038, 35.2062, 127.2499, 179.55], [76.8065, 36.6257, 30.5486, 28.494, 27.2808, 97.4381, 94.7232, 140.0498, 48.8452, 118.335, 8.4677, 10.6596, 118.6634, 157.2778, 9.8256, 40.2233, 207.6581, 9.1952, 124.416, 115.0065, 79.5995, 65.5532, 36.4982, 55.1947, 243.1247, 187.0877], [54.4956, 52.5739, 53.2266, 16.8318, 15.552, 50.1772, 129.5613, 102.4328, 50.6797, 76.1261, 29.7077, 50.0462, 30.3588, 477.1557, 200.2925, 37.5139, 0.0, 239.2234, 98.4762, 99.049, 207.8055, 19.8352, 33.4682, 59.2406, 38.2347, 190.5601, 138.9523], [80.2718, 15.7973, 60.5636, 5.8925, 36.0072, 93.4031, 96.3171, 119.1437, 12.5962, 9.8406, 32.4576, 96.9984, 62.0784, 678.0257, 299.4422, 29.4768, 97.4903, 222.8799, 21.6524, 102.1594, 140.049, 106.0752, 35.0939, 39.1037, 59.4175, 192.3508, 136.9368], [57.9134, 28.6096, 36.7117, 53.1142, 56.3328, 59.5655, 106.427, 130.3309, 26.8141, 9.2058, 75.7344, 80.7686, 57.4128, 538.2745, 329.8349, 52.9699, 118.0336, 161.9925, 44.6827, 139.415, 172.4625, 90.9401, 48.4412, 72.0691, 65.2468, 162.0129, 165.6283], [17.8487, 56.146, 20.5703, 5.9607, 0.108, 112.8188, 79.2851, 73.2762, 26.6994, 21.3082, 34.1706, 117.2991, 20.412, 653.0063, 283.3325, 22.4995, 77.4013, 289.5356, 21.315, 152.8934, 187.0155, 74.2095, 9.6398, 115.7654, 22.491, 228.1664, 270.6725], [109.7506, 12.8961, 101.2506, 96.2438, 40.8888, 68.3544, 122.958, 216.1227, 75.823, 15.6934, 51.7068, 124.2469, 61.9488, 569.3701, 356.5738, 81.7622, 72.0382, 242.428, 42.6299, 190.08, 237.6675, 84.6877, 43.5643, 120.1594, 75.8957, 0.0, 0.0], [118.9598, 46.2517, 71.3423, 0.9002, 8.0784, 103.031, 115.0796, 178.1562, 0.0, 9.2058, 9.3316, 128.2094, 30.5856, 819.9215, 306.9158, 24.6854, 55.4036, 315.1724, 21.2868, 152.2714, 170.856, 107.1963, 53.1898, 70.656, 40.3461, 154.5338, 150.097], [103.722, 19.2352, 9.3843, 40.2408, 46.342, 78.9664, 154.9427, 12.7928, 22.697, 83.398, 111.5997, 0.0, 1062.6097, 272.3712, 31.5082, 19.0435, 353.7878, 22.0742, 85.5706, 184.1805, 45.3622, 14.0604, 41.0688, 19.2091, 115.242, 362.3194], [115.3521, 32.8021, 71.6358, 17.6502, 39.3336, 5.593, 63.9382, 174.0309, 0.0, 15.2768, 124.7364, 103.7834, 985.0495, 302.0995, 20.3136, 10.2263, 362.7607, 0.0, 104.0256, 75.8835, 40.1878, 28.9478, 77.567, 16.3175, 244.7048, 289.2864], [171.3192, 46.9835, 69.7277, 115.02, 122.0073, 161.8036, 212.7666, 63.2432, 92.7296, 60.1965, 48.5676, 586.5262, 220.8864, 11.5699, 68.4477, 118.7304, 27.2483, 97.5974, 261.4815, 84.4721, 26.9229, 93.4205, 46.5655, 377.6439, 214.1194], [133.8179, 29.935, 23.6927, 28.1016, 69.1535, 81.2434, 187.3157, 6.9943, 36.0189, 99.8209, 98.1396, 1252.3997, 236.3318, 28.0858, 13.7259, 281.2037, 106.0301, 140.3325, 40.3603, 0.0, 48.1565, 4.6818, 174.5484, 384.1344], [141.6979, 8.0664, 31.6425, 9.398, 5.7888, 128.9985, 149.0524, 152.8451, 27.3382, 28.6093, 90.3403, 145.579, 44.1936, 796.6892, 312.5626, 57.5846, 44.5864, 369.3302, 20.3589, 172.247, 176.715, 92.6218, 24.2705, 54.096, 46.359, 288.7369, 280.7501], [109.2285, 84.3866, 68.114, 16.1361, 41.1912, 102.0323, 64.3025, 195.776, 56.6748, 55.3734, 36.6951, 116.5934, 34.7328, 769.5253, 383.6448, 65.5114, 60.2212, 403.6194, 57.168, 190.1491, 262.521, 42.6457, 27.9353, 59.9472, 17.9928, 251.1306, 309.6787], [136.9509, 63.3571, 97.1152, 48.8721, 50.2632, 49.1785, 181.2037, 271.4294, 23.2596, 186.541, 155.8922, 64.7676, 429.4829, 70.2365, 131.0778, 454.0918, 22.496, 189.5962, 217.0665, 9.7882, 33.0119, 67.1011, 30.4776, 337.1933, 602.759], [215.6087, 72.0942, 91.1922, 40.5244, 21.9672, 83.4955, 174.5548, 221.996, 0.0, 80.2528, 45.621, 124.8983, 83.4624, 719.129, 572.4778, 109.3402, 54.9036, 476.0433, 64.5916, 245.7907, 216.8775, 166.7019, 70.5157, 107.8387, 15.1241, 483.7213, 375.8352], [155.8915, 54.0162, 92.1527, 31.0583, 23.7816, 77.8625, 121.3186, 220.5277, 75.1351, 27.2006, 122.1668, 226.8904, 81.1944, 1214.5132, 500.0669, 107.5958, 121.6697, 535.008, 317.7446, 278.3025, 187.3995, 96.911, 102.8486, 54.8046, 278.835, 258.3422], [168.9932, 68.5222, 33.8836, 8.2522, 59.1624, 129.7576, 127.4209, 204.7957, 46.2571, 66.2854, 145.5182, 167.7252, 100.602, 1498.3046, 531.1238, 90.1747, 163.12, 548.1468, 100.5009, 260.7898, 362.313, 188.4344, 57.7815, 108.9427, 91.823, 327.7127, 339.793], [206.7793, 55.7938, 151.9159, 69.7413, 43.5024, 94.7214, 145.8646, 207.8722, 3.407, 38.8467, 171.89, 167.0196, 115.8948, 1511.5292, 519.6643, 90.8371, 106.2621, 790.4146, 81.8573, 223.5341, 182.952, 211.2018, 60.7904, 105.9619, 66.3484, 383.9643, 514.669], [260.4204, 34.9487, 115.2576, 51.6138, 149.3856, 179.2956, 233.4836, 275.7645, 37.1171, 10.2771, 129.2444, 217.9885, 152.1828, 1708.825, 959.6102, 41.0909, 80.5828, 866.3636, 97.942, 259.9603, 312.7005, 217.756, 11.3937, 31.3315, 37.7069, 521.2223, 734.5978]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

