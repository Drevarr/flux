created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Crystal Shadowmist", "Cedryn X", "Belvyn Brightblade", "Soft And Chewy", "Revenant Brandorf", "Klenga", "Divine Mimine", "Venomina The Sly", "Lord Erin The Wise", "Tegan Parker", "High Sorcer Baradun", "Aira Draugr", "Lady Sherena", "Kosair", "Heres A Quarter", "Astraeus Windrunner", "Bryxzi", "No Reserv\u00e9", "Lucky Leipreach\u00e1n", "Xanvias Tseli", "Bella Bitty", "Solus Luxes", "Tribal S", "Rozaalyna", "Gabe Malhorn", "Grasszanine", "Daphne Agla\u00e9", "Morton Saltbringer", "Drevarr Moonwillow", "Drell The Silent", "Glorious Gluvs", "Jmbrage Rev", "Black Raspberry Pie", "Elonith Requiem", "Eibh\u00ebar", "Be\u00eb", "Newtype Khan", "Mike The Archmagus", "Sub Train", "Swithblight", "Crusader Siolith", "Halfpint The Drunk", "Cat Wigglebooty", "Mistwalker Cael", "Rina Of Theros", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Adjudicatrix Farra", "Zaedy Zae", "\u00c7onstant\u00edne", "Jimbo The Pleb"];
const professions = ["Herald", "Berserker", "Firebrand", "Druid", "Vindicator", "Firebrand", "Renegade", "Druid", "Weaver", "Tempest", "Tempest", "Herald", "Willbender", "Firebrand", "Herald", "Berserker", "Herald", "Vindicator", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Druid", "Reaper", "Firebrand", "Spellbreaker", "Reaper", "Chronomancer", "Scrapper", "Druid", "Berserker", "Vindicator", "Chronomancer", "Reaper", "Chronomancer", "Reaper", "Spellbreaker", "Weaver", "Firebrand", "Scourge", "Firebrand", "Berserker", "Scrapper", "Herald", "Reaper", "Scrapper", "Chronomancer", "Reaper", "Druid", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 1, 0, 4, 0, 3, 0, 0], [0, 1, 2, 0, 4, 3, 0, 0, 1], [3, 1, 0, 1, 0, 0, 7, 0, 0, 0], [2, 0, 3, 7, 0, 0, 0], [0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 2, 4, 0, 0, 0, 0, 1, 0, 1, 0], [1, 0, 1, 3, 0, 2, 0, 0, 0, 1, 0, 4, 0, 0, 0], [0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 0, 4, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0], [3, 0, 1, 2, 0, 0, 0, 4, 2, 0, 0, 1, 0], [0, 0, 0, 4, 2, 0, 0, 0, 4, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 1, 4, 2, 1, 1, 0, 0, 1, 0], [1, 1, 0, 4, 0, 0, 1, 0, 1, 2, 0, 3, 2], [1, 1, 0, 4, 0, 0, 6, 2, 1, 0], [10, 0, 5], [0, 0, 0, 2, 0, 6, 1, 2, 0, 3, 0, 2, 0, 0, 0, 0], [4, 0, 3, 1, 3, 1, 1, 3], [0, 1, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 1, 2, 3, 0, 1, 1, 0, 1, 0, 0, 2], [0, 1, 0, 0, 5, 0, 0, 0, 1, 3, 2, 2, 3, 0, 0, 0], [2, 0, 0, 0, 8, 0, 0, 0, 0, 3, 1, 3, 1], [0, 0, 0, 3, 2, 1, 0, 1, 2, 2, 2, 2, 1, 1, 0, 1], [1, 1, 0, 1, 0, 0, 5, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0, 5, 0], [1, 1, 0, 1, 0, 2, 0, 0, 0, 2, 1, 2, 1, 3, 2, 0, 1, 1, 2, 0, 0, 0, 1], [1, 1, 0, 1, 0, 5, 1, 0, 0, 1, 2, 1, 1, 3, 0, 0, 1, 0, 1, 0, 0, 2, 0], [1, 1, 0, 1, 0, 5, 3, 1, 0, 0, 0, 0, 2, 4, 2, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 2, 0, 6, 1, 0, 0, 0, 4, 1, 0, 1, 1, 1, 1, 1, 1], [0, 4, 1, 3, 5, 0, 0, 1, 1, 5, 0, 0, 1, 0], [1, 2, 1, 3, 3, 1, 0, 2, 3, 3, 1, 0, 1, 2], [1, 1, 0, 0, 0, 2, 0, 2, 0, 0, 1, 4, 3, 5, 2, 3, 0, 0], [1, 1, 2, 0, 8, 0, 0, 0, 0, 1, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0, 3], [2, 1, 0, 1, 0, 0, 5, 1, 0, 2, 1, 2, 0, 2, 1, 0, 1, 3, 0, 2, 0, 1, 0, 1], [0, 1, 8, 1, 1, 0, 1, 2, 0, 1, 2, 5, 0, 0, 0, 2, 0, 0, 1, 1], [3, 2, 1, 1, 0, 0, 7, 1, 0, 0, 0, 5, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 2], [0, 0, 5, 0, 1, 0, 1, 1, 4, 3, 4, 2, 0, 1, 1, 3, 1, 0, 0], [1, 0, 3, 0, 0, 0, 0, 4, 0, 0, 3, 0, 5, 1, 0, 1, 1, 3, 4, 0, 0, 0, 2], [5, 2, 1, 0, 0, 2, 0, 2, 4, 1, 1, 2, 1, 0, 3, 0, 2, 3], [2, 0, 0, 0, 6, 0, 1, 1, 0, 1, 0, 2, 4, 3, 1, 2, 2, 2, 1, 0, 1, 1], [0, 3, 0, 0, 4, 2, 2, 1, 2, 4, 0, 3, 4, 0, 0, 0, 1, 2, 0, 0, 2, 0], [3, 1, 0, 0, 0, 4, 0, 3, 0, 0, 2, 2, 4, 4, 1, 0, 2, 0, 1, 1, 0, 1, 2], [3, 1, 0, 4, 0, 3, 1, 0, 0, 0, 3, 2, 1, 4, 0, 1, 3, 0, 2, 1, 0, 1, 1], [3, 1, 0, 1, 0, 5, 1, 1, 0, 0, 4, 1, 5, 1, 1, 0, 0, 1, 2, 2, 1, 0, 1], [0, 1, 0, 2, 0, 0, 5, 0, 1, 0, 0, 2, 1, 9, 2, 1, 0, 0, 1, 3, 2, 0, 0, 1], [1, 2, 0, 4, 0, 5, 1, 1, 0, 0, 3, 2, 1, 5, 3, 1, 0, 0, 3, 0, 0, 0, 0], [2, 2, 0, 1, 0, 0, 4, 1, 2, 0, 0, 2, 3, 5, 4, 1, 0, 2, 2, 0, 1, 0, 0, 1], [1, 6, 6, 1, 0, 0, 0, 2, 0, 6, 2, 4, 1, 1, 2, 1, 0, 0], [1, 1, 0, 1, 0, 0, 7, 2, 2, 0, 0, 1, 3, 1, 2, 2, 2, 0, 4, 3, 0, 0, 0, 3], [2, 1, 0, 0, 0, 0, 5, 2, 1, 0, 0, 5, 2, 4, 5, 1, 0, 1, 0, 3, 2, 0, 1, 0], [2, 2, 0, 3, 0, 0, 9, 0, 0, 0, 0, 5, 1, 4, 3, 2, 1, 0, 1, 2, 0, 0, 0, 0], [2, 1, 0, 2, 0, 8, 0, 2, 0, 0, 1, 0, 6, 1, 2, 1, 2, 1, 3, 2, 2, 0, 1], [2, 1, 0, 2, 0, 7, 1, 1, 2, 0, 1, 0, 5, 4, 3, 0, 2, 2, 1, 0, 2, 1], [5, 0, 0, 3, 4, 1, 0, 0, 1, 2, 2, 5, 4, 2, 0, 2, 0, 4, 0, 1, 0, 1], [0, 9, 0, 0, 4, 1, 4, 0, 0, 4, 1, 6, 0, 0, 0, 0, 2, 2, 2, 0, 0, 3], [2, 1, 0, 6, 0, 0, 12, 3, 2, 1, 2, 5, 1, 2, 2, 0, 2, 1, 1, 3]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

