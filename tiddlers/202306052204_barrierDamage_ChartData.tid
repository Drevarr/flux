created: 20230605220452000
creator: Drevarr
modified: 20230705163533672
modifier: drevarr
tags: ChartData
title: 202306052204_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Nurse Pam", "Ryvalia Fazebringer", "Tegan Parker", "Zayde Sunsabre", "Johosh Of The North", "Melody Phoenixstorm", "Primal Clone", "Cat Wigglebooty", "Eibh\u00ebar", "Rozaalyna", "Gabe Malhorn", "Lord Erin The Wise", "Drevarr Moonwillow", "Newtype Khan", "Skye Nightroad", "Be\u00eb", "Ak\u00e1nt\u00f3r", "Smol Gluvs", "Tootsie Pop Rocks", "Mildly Ecstatic", "My Birthday Girl", "Cyclotechnist Farra"];
const professions = ["Firebrand", "Vindicator", "Chronomancer", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Chronomancer", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Weaver", "Scrapper", "Spellbreaker", "Scrapper", "Scourge", "Druid", "Scourge", "Scrapper", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 17007, 2061, 17918, 0, 0, 0, 0, 1666, 1403, 0, 1248, 16205, 3838, 0, 0], [0, 2935, 7429, 2858, 2249, 4083, 42958], [0, 28089, 0, 19232, 0, 0, 0, 1133, 0, 707, 0, 1108, 9245, 3401, 0, 0], [0, 28298, 104, 0, 0, 3312, 490, 399, 2159, 3439, 22315, 3519, 0, 0], [0, 26596, 2930, 18812, 0, 0, 0, 0, 716, 0, 0, 2963, 15597, 3734, 1188, 0], [0, 19399, 745, 27484, 0, 0, 0, 1246, 0, 918, 0, 0, 20496, 2654, 0, 0], [0, 28714, 13056, 35438, 0, 0], [0, 26946, 0, 29699, 0, 0, 0, 0, 3002, 0, 0, 0, 13504, 2927, 1188, 0], [0, 56277, 571, 7376, 0, 0, 0, 0, 142, 2792, 206, 93, 7964, 2271, 29, 0], [0, 32083, 873, 35210, 0, 0, 0, 0, 1084, 0, 0, 488, 6436, 1594, 0, 0], [0, 44343, 2004, 43715], [0, 36781, 0, 21215, 145, 0, 0, 0, 2266, 0, 802, 3439, 21070, 5100, 0, 0], [0, 43525, 0, 26819, 269, 0, 0, 0, 0, 6038, 0, 3439, 8668, 3047, 0, 0], [24, 47924, 611, 22455, 4, 0, 0, 137, 740, 1228, 0, 445, 18941, 299, 437], [0, 41478, 0, 21645, 0, 0, 93, 0, 0, 580, 694, 2048, 25179, 6026, 424, 0], [2828, 796, 4154, 690, 578, 69976, 18141, 1892, 318], [0, 66171, 1926, 54333], [0, 58127, 0, 30497, 0, 0, 0, 1300, 6637, 1130, 0, 0, 20206, 4798, 0, 0], [0, 67178, 1305, 45983, 0, 0, 0, 1248, 3511, 1789, 6725, 1133, 35629, 8997, 1539, 2000], [0, 71706, 5720, 75739, 470, 0, 0, 794, 3493, 6528, 1834, 75403, 6423, 2999, 3149], [0, 88888, 1477, 67399, 245, 0, 0, 4350, 13015, 7521, 2466, 3180, 46831, 16340, 3390, 0], [315, 166945, 11891, 196915, 0, 0, 164, 3174, 12520, 4942, 653, 382, 114608, 12729, 2391, 0], [197642, 11273, 152538, 0, 683, 0, 790, 10302, 10059, 1034, 8682, 130884, 31294, 6299, 2600]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

