created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Igh Homura", "Sakis Ranger", "Elvezio Figone", "Fyshaye", "Whip \u00d1 Sl\u00e0pper", "Tridozaul", "Charr Surethang", "St\u00e1rless", "Mother Ship", "Smythe The Noble", "K\u00e2 \u00d4tik R\u00e6j", "Jimbo The Pleb", "Grasszanine", "Drevarr Moonwillow", "The Bussiest Cat"];
const professions = ["Tempest", "Druid", "Virtuoso", "Druid", "Tempest", "Holosmith", "Berserker", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Berserker", "Spellbreaker", "Scrapper", "Holosmith"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.377, 2.226, 4.46], [0, 1.616, 0.856, 2.353, 0.539, 1.125, 0.626], [0.034, 1.28, 0.563, 0.621, 0, 2.563, 0], [0.551, 0.809, 0.75, 0.848, 0, 0.568, 1.51, 0.979, 2.372, 1.113, 0], [1.154, 1.066, 0, 0.68, 0, 0.952, 0.552, 0, 1.26, 0, 0, 0.552, 0.427, 0.047, 0, 0.853, 1.136, 0, 1.958, 2.366, 0.554, 0], [2.714, 0, 2.983, 0.307, 2.697, 1.505, 3.424], [5.695, 0.605, 0, 0, 0, 0, 0, 0.804, 0, 0, 0, 0, 0, 0.941, 0, 0, 0, 2.74, 0.46, 1.065, 0.994, 0, 0, 1.08, 0, 1.182, 0], [0, 0, 0, 1.132, 0.941, 1.19, 2.574, 0, 0, 0, 0, 0.459, 1.421, 0, 1.55, 0, 1.419, 0, 0.473, 2.52, 3.246, 0, 0.465, 0], [1.729, 2.131, 1.361, 0.564, 0, 1.123, 0.642, 2.139, 0, 1.418, 0.733, 0.834, 0.719, 1.239, 0.746, 0, 0, 1.512, 0.978], [5.719, 3.745, 9.134, 8.536, 2.113, 1.932, 3.945, 0.183], [5.708, 0.908, 0, 3.365, 4.451, 1.237, 1.965, 1.27, 1.252, 1.202, 0.961, 3.546, 0, 2.321, 0.942, 0.517, 2.225, 0, 0, 0, 0, 1.353, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1.967, 2.227, 1.252, 2.09, 0.961, 1.774, 3.733, 2.549, 1.647, 0, 2.063, 0, 2.67, 0, 2.376, 0.46, 1.329, 0.233], [0, 1.374, 1.879, 1.045, 0.814, 3.522, 0, 2.069, 1.882, 0, 0.917, 1.069, 2.386, 0, 2.401, 0.956, 1.461, 0.94, 2.371, 2.842, 0, 0.237, 3.144, 1.624], [4.63, 0, 4.893, 3.339, 8.136, 4.471, 1.435, 2.365, 2.641, 2.543, 4.168, 0, 2.377, 2.212, 3.12, 2.02, 0.321, 2.176, 0.734, 1.971], [4.126, 2.333, 3.474, 2.817, 1.611, 2.202, 0.702, 4.51, 7.841, 0.161, 4.196, 6.131, 1.78, 3.393, 1.705, 2.246, 3.243, 2.64, 0.611, 2.838, 6.734, 6.84]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

