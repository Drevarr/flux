created: 20230625215204000
creator: Drevarr
modified: 20230705163536702
modifier: drevarr
tags: ChartData
title: 202306252152_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Primal Clone", "Imalou", "Gavann", "Eibh\u00ebar", "Miphest\u00f6", "Ryvalia Fazebringer", "Gestern Yesteryear", "Traidoruns Maximus", "Crusader Siolith", "Oo Dads Mad", "Cersei Crownguard", "Gabe Malhorn", "Sygaldry Verdandi", "Tika Fiery", "Johosh The Mighty", "Arcanophage Farra", "Grasszanine", "Koralia Danai", "Solus Sanctus", "Bella Sassy", "Blancooo Padreee", "Newtype Khan"];
const professions = ["Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 17.6088, 14.147, 33.2732, 18.2582, 0.0, 14.7016, 0.0, 14.1693, 38.976, 5.2557, 7.068, 1.8968, 0.0, 7.0781, 12.4548, 14.1926, 0.0], [4.8263, 22.1904, 13.7193, 41.5753, 13.5845, 3.4983, 13.4044, 0.0, 13.7063, 16.8, 7.8684, 13.6344, 11.4582, 0.0, 8.5461, 19.1345, 11.975, 0.0], [0.0, 11.9232, 6.3497, 60.1252, 30.8818, 0.0, 12.1636, 19.6024, 75.36, 7.1697], [0.0, 13.524, 8.5211, 31.0679, 29.8334, 13.2164, 6.6682, 7.0692, 15.168, 31.9901, 6.7032, 19.9744, 0.0, 6.6586, 13.5681, 10.2749, 11.8901], [5.1428, 13.0272, 11.186, 35.8027, 13.8029, 6.9966, 13.7052, 8.0702, 17.102, 19.392, 17.9242, 6.612, 5.071, 0.0, 8.4412, 28.7365, 25.0589, 3.4114], [0.0, 24.0672, 13.5548, 43.0022, 27.1253, 14.0248, 0.0, 18.5837, 36.768, 9.6305, 9.9408, 13.5872, 6.8357, 10.119, 33.1897], [9.3757, 12.696, 16.2526, 34.4407, 20.2675, 7.8218, 8.4224, 10.477, 14.2619, 29.952, 7.6558, 17.328, 15.7163, 7.7324, 15.3096, 13.7768, 10.6445, 11.2277], [0.0, 16.3944, 12.8639, 41.4455, 38.6131, 0.0, 16.9388, 0.0, 15.4659, 12.48, 5.3773, 17.6928, 15.755, 15.8033, 0.0, 12.6636, 21.0672, 20.965], [57.1417, 47.9606, 0.0, 29.7416, 6.4032, 32.3209, 85.536, 11.2102, 24.2136, 6.4259, 0.0, 6.4489, 57.0556, 12.7882, 6.4584], [7.8329, 51.5568, 25.9252, 47.6721, 19.3066, 0.0, 16.0364, 8.1365, 71.4332, 72.096, 13.1242, 5.6544, 7.3549, 0.0, 14.7853, 34.9987, 12.5664, 7.9819], [0.0, 57.132, 23.5564, 51.3043, 50.1446, 0.0, 26.3764, 0.0, 49.7316, 145.248, 28.7699], [6.7488, 129.6011, 0.0, 19.2942, 81.8261, 100.2355, 104.7254], [0.0, 68.8896, 18.5227, 104.8138, 52.8091, 0.0, 46.3608, 7.7611, 39.3901, 97.632, 46.7548, 18.696, 38.5939, 7.1829, 68.4667, 19.8106, 11.7245], [7.912, 100.9056, 79.1574, 96.5117, 44.9467, 40.9464, 8.0261, 22.5968, 86.112, 13.428, 45.6, 7.1226, 11.8778, 15.8339, 60.2563, 47.087, 0.0], [0.0, 24.288, 39.8748, 133.7413, 59.6669, 7.5258, 18.7812, 23.4158, 39.2049, 108.96, 22.1774, 3.2376, 11.6517, 0.0, 32.7688, 69.58, 125.9597, 19.9051], [41.3402, 83.7384, 38.8878, 161.6311, 34.5946, 0.0, 26.602, 0.0, 38.9271, 134.304, 56.841, 20.5656, 20.9421, 22.842, 45.8238, 85.5138, 20.6237, 9.7373], [0.0, 102.7824, 86.856, 38.1377, 108.5448, 0.0, 79.6556, 0.0, 38.0627, 253.152, 23.8179, 0.0, 0.0, 32.9094, 50.5425, 96.0204, 63.8669], [0.0, 117.1344, 32.8342, 96.2522, 97.7122, 56.3047, 43.0708, 0.0, 48.435, 114.816, 0.0, 119.3352, 0.0, 47.376, 0.0, 58.2385, 43.8346, 101.5128], [0.0, 105.3768, 70.0441, 111.6889, 88.0152, 7.8398, 49.9892, 0.0, 89.2452, 153.888, 56.6891, 45.5544, 63.8328, 22.2498, 18.4554, 80.2953, 25.7981, 0.0], [23.2217, 72.8088, 52.311, 123.8826, 79.9781, 11.9122, 89.77, 7.8936, 36.7662, 156.672, 56.8714, 54.2184, 25.0841, 5.2452, 7.7072, 148.4837, 52.4093, 9.1742], [23.9338, 92.3496, 47.7379, 139.3193, 100.6824, 29.7266, 24.7408, 41.1902, 63.2526, 55.584, 61.7625, 36.252, 55.665, 32.1649, 11.1676, 79.7387, 97.057, 40.1083], [0.0, 128.34, 24.1157, 85.8746, 199.4429, 0.0, 32.3209, 292.32, 55.0486, 85.728, 0.0, 0.0, 0.0, 140.6908, 33.3379, 0.0], [59.5378, 111.8352, 106.0367, 298.9397, 122.6534, 0.0, 107.5736, 0.0, 99.4014, 86.4, 65.3474, 28.956, 151.8593, 24.5678, 0.0, 101.7955, 158.3366, 21.7267]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

