created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Surethang Smarts", "Tirluka", "Flick Embermage", "Sakis Ranger", "Wreakit Herm", "Tridogen", "Charr Surethang", "Xanvias Tsolice", "Big Boy Belkins", "Elonith Primal", "Mechcem", "Levente Tangnu", "Dizzy Bunnyhopper", "Tegan Parker", "Big Boy Belkins", "Drevarr Moonwillow"];
const professions = ["Holosmith", "Tempest", "Weaver", "Druid", "Scrapper", "Scrapper", "Berserker", "Weaver", "Scrapper", "Tempest", "Scrapper", "Spellbreaker", "Holosmith", "Tempest", "Holosmith", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1.192, 0, 0, 0.731, 0.651, 3.045, 1.383, 0, 0], [0, 0, 1.665, 0, 0.861, 0, 0.84, 0.766], [0, 0.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.943, 0.935], [2.174, 1.787, 1.303, 0, 0.73, 0, 4.06, 2.76], [0.562, 0.486, 0.593, 0, 0, 0.417, 1.776, 1.271], [0.144, 1.46, 0, 0.988, 0.937, 1.71, 1.591, 1.631, 0, 0, 0.048, 0.529, 2.291, 0, 0, 0.123], [0, 0, 0.973, 2.301, 0, 0.988, 0, 0, 1.332, 0, 0, 1.005, 1.421, 0.466, 0, 4.028, 0, 0], [0, 0, 0, 0, 0, 1.945, 0.762, 1.843, 0, 0, 0, 0.3, 0, 0.689, 0, 0.593, 0, 0, 0, 0, 0.861, 0, 0, 0.577, 0.85, 0, 0.971, 0, 0, 0, 0.272, 1.102, 0.423], [1.128, 6.326], [2.19, 2.88, 1.273, 2.414, 1.692], [3.535, 2.248], [1.042, 1.986, 1.637, 2.301, 0, 0, 1.331, 0, 0.716, 1.442, 0, 1.399], [2.051, 0.69, 0, 0.59, 0, 6.214, 0.399, 0, 2.154, 0, 0, 1.932, 0, 0, 2.761, 1.018, 0.313, 0.355, 0.581], [0, 1.549, 3.841, 0.946, 2.158, 0.345, 0.645, 0.592, 1.686, 3.318, 1.401, 1.058, 2.645, 0.864, 1.447, 0.897, 1.621, 2.256, 1.7], [1.611, 0.283, 0, 2.917, 1.822, 3.644, 0, 5.206, 6.918, 0, 0.793, 0.731, 1.881, 0, 0, 1.185, 0, 0, 2.19], [8.142, 4.773, 2.416, 0.559, 0, 9.554, 4.171, 2.114, 1.729, 4.111, 1.434, 2.102, 2.45, 1.456, 3.739, 2.008, 0, 1.658, 1.199, 0.927, 2.681, 1.403, 0.485, 2.025, 3.664, 3.469, 1.453, 0.417, 1.636, 3.864, 2.631]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

