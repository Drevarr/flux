created: 20230401000636000
creator: Drevarr
modified: 20230705163523708
modifier: drevarr
tags: ChartData
title: 202304010006_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tlesel", "High Sorcer Baradun", "Arcanophage Farra", "Jeckyll Mbs", "Blancooo Padreee", "Sp\u00edcy Cheese", "Grasszanine", "Ateriuz", "Cat Wigglebooty", "Tegan Parker", "Smol Daddy Tika", "Mac Chiato", "Zadie Miststep", "Mike The Archmagus", "Drevarr Moonwillow"];
const professions = ["Berserker", "Tempest", "Spellbreaker", "Berserker", "Berserker", "Berserker", "Spellbreaker", "Berserker", "Scrapper", "Tempest", "Berserker", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.811, 0.568, 0, 0.786, 1.308, 0, 0.858, 1.263, 0, 0, 0, 0, 0], [0.267, 0.227, 0.401, 0.439, 0.231, 0.505, 0.077, 0.811, 0.677, 0.223, 0.28, 0, 0.468, 0.308], [0.612, 0, 0.495, 0, 0.46, 0.822, 0.885, 0.967, 0.502, 0, 0.828, 0, 0.78, 0.299], [0.947, 0.369, 0.488, 0.195, 0.492, 0.367, 0.486, 0, 0.319, 0, 0.25, 0.239, 0, 0, 0.831, 0.459, 0.519, 0.229, 0.422], [0.307, 0.37, 0.489, 0, 0.46, 0.377, 0.486, 1.219, 0.311, 0, 0.234, 0, 0.879, 0.478, 0, 0, 0.302, 0, 0, 0, 0, 0.404, 0.594, 0, 0.944, 0, 0, 0.414], [0.307, 0, 0.488, 0, 0, 0, 0.608, 0, 0.379, 0, 0.76, 0, 0.449, 0, 0.867, 0, 0, 0, 0.496, 0.653, 0, 0.407, 0, 0, 0.791, 0, 0.414], [0.828, 0, 0.763, 0.684, 0.351, 0.7, 0.365, 0.975, 0.757, 0, 0.497, 0, 0.634, 0, 0, 0.297, 0.459, 0.534, 0, 0.654, 0, 0.413, 0, 0, 0.942, 0, 0, 0], [0, 0.488, 0, 1.377, 1.096, 0.483, 1.219, 0.852, 0, 0.651, 0, 0.484, 0.7, 0, 0, 0.831, 0, 0, 0, 0.518, 0, 0, 0, 0, 0, 0, 0, 0, 0.646], [0.849, 0.779, 0.724, 0.825, 1.024, 0.48, 0.398, 0.416, 1.294, 0.885, 0.743, 0, 1.676, 0.43], [0.368, 0.17, 0.292, 0.345, 0.72, 0.598, 0.474, 0, 0.647, 0, 0.539, 1.503, 0.351, 0.611, 0.551, 0, 0.355, 0.55, 0.333, 0, 0.452, 0.398, 0, 0.518, 0.574, 0, 0.564, 0.254, 0, 0.744], [0.219, 0.871, 0.976, 0, 0.292, 0, 0.362, 1.031, 0.396, 0, 0.146, 0, 1.166, 0.716, 0.923, 2.473, 0.151, 0, 1.383, 0.279, 0.422, 0.492, 0, 0.677, 0.594, 0, 0.944, 0, 0, 0.517], [0.527, 0.226, 0.43, 0.178, 0.552, 0.618, 0.553, 0.585, 0.608, 0.063, 0.508, 0, 0.492, 0.431, 0.552, 0, 0.741, 0.404, 0.353, 0, 0.257, 0.392, 0.996, 0.495, 0.656, 0, 0.683, 0.444, 0.716, 0.732], [0.611, 0.704, 0.296, 0.366, 0.604, 0.869, 0.582, 1.17, 0.878, 0.506, 0.276, 1.307, 0.848, 0.714, 1.105, 0, 0.718, 0.549, 0, 0, 0.76, 0.358, 0, 0.469, 0.9, 1.134, 0.762, 0, 0.729], [0.46, 0.856, 0.581, 0.861, 0.751, 0.925, 0.868, 1.029, 0.227, 0.252, 0.663, 1.114, 0.467, 0.674, 0.554, 0.37, 0.72, 0.551, 0.706, 0, 0.824, 0.392, 0.673, 1.123, 1.129, 0.635, 0.585, 0.971], [1.191, 1.465, 1.737, 1.201, 1.629, 2.002, 2.076, 1.724, 1.326, 1.348, 1.185, 1.303, 2.617, 1.859, 2.212, 1.115, 2.278, 1.369, 3.116, 1.364, 1.481, 1.163, 1.233, 1.684, 0.169, 2.286, 0.921, 1.923, 1.846]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

