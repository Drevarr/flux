created: 20230614223544000
creator: Drevarr
modified: 20230705163535236
modifier: drevarr
tags: ChartData
title: 202306142235_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "River No Hug", "Tootsy Pop Star", "Eibh\u00ebar", "Be\u00eb", "Smol Gluvs", "Rozaalyna", "River No Hug", "No Reserv\u00e9", "Elonith Requiem", "Jacob Pine", "Lord Erin The Wise", "Johosh The Mighty", "Alarics Bane"];
const professions = ["Chronomancer", "Scourge", "Reaper", "Chronomancer", "Reaper", "Reaper", "Reaper", "Reaper", "Vindicator", "Reaper", "Reaper", "Weaver", "Berserker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[72.9184, 39.1277, 258.9818, 317.2281, 75.7, 463.2769, 159.3607, 157.3111, 35.5977], [291.6735, 312.3404, 420.8182, 664.538, 676.2125], [237.3878, 55.9787, 545.7636, 583.4912, 252.925, 718.1077, 714.6557, 69.3, 1.4598], [356.102, 52.3191, 478.4364, 570.0175, 256.9125, 799.0154, 428.5246, 619.6444, 90.3563], [2055.7538, 2253.7869, 666.2222, 0.0], [2484.6462, 796.1311, 880.1889, 1362.092], [138.2653, 805.6809, 2515.2909, 1473.924, 501.7875], [3795.7077, 1194.9672, 2001.7111, 398.5402], [1260.0612, 354.9149, 1642.9091, 1528.1345, 1500.8], [2423.6154, 2185.4098, 2244.0222, 1117.8851], [83.551, 156.1064, 858.7455, 1487.3567, 1033.3125, 686.6462, 1580.9508, 814.2, 276.2299], [2343.449, 744.1064, 1660.3273, 2366.9357, 1034.525], [404.102, 2281.8723, 2857.1273, 3415.8947, 637.225], [1137.4694, 318.7447, 1050.7636, 2225.7544, 1907.5, 3554.7846, 2146.9344, 3223.7667, 619.046]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

