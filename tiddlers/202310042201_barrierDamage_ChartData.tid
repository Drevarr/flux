created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Shadbaese", "Garphon", "Oo Dads Mad", "Baal Acurio", "Crusader Siolith", "Cedryn X", "Jimbo The Pleb", "No Reserv\u00e9", "Jmbrage Gaurdian", "Atria Ruinheart", "K\u00e2 \u00d4tik R\u00e6j", "Tootsie Pop Rocks", "Bella Bitty", "Venom The Ferocious", "Xanvias Tseli", "Astraeus Windrunner", "Morton Saltbringer", "Mistwalker Cael", "Lord Erin The Wise", "Jimbo The Pleb", "Cutie Piebringer", "Kosair", "Visterik", "Etchery Howls", "Glorious Gluvs", "Solus Luxes", "Zaedy Zae", "Amiti\u00e9l", "Grasszanine", "Black Raspberry Pie", "Rina Of Theros", "Newtype Khan", "Sister Elonith", "Eibh\u00ebar", "Adjudicatrix Farra", "Latedoctor", "Sub Train", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Cat Wigglebooty", "Zanos Engine", "Mort\u00e4rion", "Irin The Undeath"];
const professions = ["Weaver", "Herald", "Berserker", "Weaver", "Firebrand", "Berserker", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Berserker", "Chronomancer", "Herald", "Weaver", "Spellbreaker", "Firebrand", "Willbender", "Firebrand", "Druid", "Berserker", "Firebrand", "Druid", "Willbender", "Spellbreaker", "Chronomancer", "Reaper", "Spellbreaker", "Berserker", "Chronomancer", "Reaper", "Reaper", "Firebrand", "Chronomancer", "Scrapper", "Scrapper", "Scrapper", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3509, 4649, 0, 0], [444, 592, 3365, 4484, 0, 0, 0, 0], [3067, 2838, 3081, 0, 28], [1451, 1979, 3472, 2156, 0, 0, 0], [168, 0, 2122, 0, 643, 0, 0, 155, 17, 0, 5190, 2775, 0, 0, 0], [2857, 1470, 2864, 0, 0, 538, 0, 269, 1482, 194, 0, 0, 2484], [0, 1152, 585, 0, 2945, 0, 7653], [0, 0, 0, 0, 0, 2802, 1452, 0, 3024, 3438, 2098, 0, 0], [0, 1589, 5692, 0, 0, 0, 430, 0, 0, 1213, 4467, 0, 0], [585, 854, 0, 0, 0, 0, 2912, 5727, 0, 3856, 266, 13, 0, 0], [0, 0, 1787, 0, 2478, 0, 0, 4797, 0, 1148, 2027, 2603, 0, 0, 140], [1991, 2696, 3145, 0, 0, 1145, 2498, 16, 2143, 1540, 291, 0, 258], [2292, 0, 9128, 0, 1028, 0, 3585], [3402, 0, 269, 0, 920, 5470, 11, 3593, 3888, 0, 159, 0], [3173, 0, 104, 0, 2151, 0, 0, 7459, 0, 45, 4066, 1184, 0, 0, 4], [2452, 1119, 0, 0, 0, 0, 1826, 5993, 0, 2803, 1217, 2783, 0, 0, 0], [2825, 44, 1732, 0, 293, 6107, 0, 3424, 308, 3076, 0, 0, 2209], [0, 187, 0, 0, 2267, 0, 0, 5075, 0, 0, 7294, 5620, 0, 0, 0], [1860, 140, 2953, 0, 0, 3102, 1508, 0, 4571, 4732, 2279, 0, 0, 0], [7142, 0, 5614, 8337, 585, 0, 0, 140], [273, 694, 5544, 0, 71, 0, 2828, 7414, 0, 2857, 1487, 951, 0, 0, 0], [1415, 0, 0, 0, 0, 7131, 48, 3042, 3673, 5758, 0, 1136], [1633, 269, 4545, 0, 0, 0, 4699, 1670, 15, 3120, 2268, 4811, 0, 0, 0], [507, 1670, 3115, 0, 0, 435, 4853, 0, 4061, 1156, 7248, 0, 0, 0], [0, 3547, 1790, 0, 0, 0, 3492, 5113, 0, 2620, 3978, 1165, 0, 2542], [2642, 0, 3966, 0, 1387, 0, 552, 2895, 2712, 3260, 2949, 3229, 0, 1752], [0, 771, 2812, 0, 1091, 0, 123, 3069, 0, 6413, 9443, 2746, 0, 0, 0], [2267, 11705, 7, 1153, 6451, 7037, 0, 0], [0, 3653, 4144, 2737, 0, 844, 8891, 174, 3488, 3112, 2175, 0, 0], [1493, 564, 3525, 4905, 0, 168, 6460, 941, 3722, 5580, 864, 0, 0, 2435], [3753, 1547, 7462, 0, 1385, 286, 360, 5710, 0, 5594, 1521, 2956, 0, 288, 0], [449, 2175, 5085, 0, 146, 0, 1444, 6004, 0, 4979, 7744, 3011, 0, 0, 0], [6476, 0, 0, 5738, 6650, 0, 596, 2928, 10771, 0, 0, 0], [9500, 1363, 6822, 482, 5, 1126, 7447, 269, 3049, 3339, 155, 0, 0, 0], [0, 4708, 7107, 0, 0, 1338, 9936, 1479, 4374, 1301, 6832, 0, 0, 0], [6406, 2143, 3043, 3121, 279, 2640, 6885, 0, 4999, 2695, 4972, 0, 0, 0], [0, 122, 2953, 0, 3996, 0, 591, 5618, 0, 3463, 7063, 13422, 0, 0, 0], [1930, 936, 8243, 0, 941, 0, 640, 7512, 0, 4751, 9164, 4768, 0, 0, 0], [7885, 2258, 5235, 0, 1851, 865, 2713, 9437, 325, 3756, 5355, 5534, 0, 0, 183], [4552, 1850, 10020, 0, 3008, 288, 31, 6436, 4188, 15711, 0, 0], [7011, 11868, 20160, 0, 0, 1940, 6567, 14625, 499, 7499, 18179, 2671, 1195, 0, 0], [19199, 10741, 13466, 0, 2628, 0, 6385, 4162, 0, 11795, 18930, 9076], [9150, 12089, 37855, 0, 5100, 0, 16562, 29227, 0, 14478, 17749, 11222, 0, 1052]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

