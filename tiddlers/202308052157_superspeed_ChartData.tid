created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Lucas Might", "Legacy Of Mathus", "Permanent Dawn", "Cedryn X", "Glorious Gluvs", "Eaffi", "Miphest\u00f6", "Newtype Khan", "Konoko K", "Tegan Parker", "Xanvias Einzbern", "Blancooo Padreee", "Tootsie Pop Rocks", "Jimbo One Eye", "Keypek The Drunk", "Drevarr Moonwillow"];
const professions = ["Tempest", "Berserker", "Weaver", "Berserker", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.379, 0, 0.167, 0.143, 0, 0.187, 0.222], [0, 0.256, 0, 0, 0, 0, 0, 0, 0.544, 0, 0, 0, 0, 0, 0.477, 0, 0.268, 0, 0, 0], [0.198, 0.308, 0.549, 0.254, 1.014, 0, 0, 0.538, 0, 0, 0, 0.212, 0], [0, 0, 0, 0, 0, 0, 0.43, 0, 0, 0, 0, 0, 0, 1.277, 0, 0, 0.183, 0.34, 0, 0, 0.463], [0.332, 0, 0.915, 0, 0, 0, 0, 0, 0, 0.896, 0, 0.31, 0.848, 0, 0.611, 0, 0.259, 0, 0, 0, 0.369], [0.268, 0.518, 0.939, 0.206, 0.187, 0.625], [0.348, 0.462, 0.547, 0.253, 0, 0.516, 0.559, 0.537, 0.186, 0.418, 0.748, 0.422], [0, 0.513, 0.913, 0, 0, 0, 0, 0, 0.407, 0, 0, 0.184, 0.635, 0.976, 0.496, 0, 0.232, 0.271, 0, 0, 0.371], [0, 0.652, 0, 0, 0.231, 0.543, 0.428, 0.541, 0.535, 0.416, 0.466, 0.827, 0.187, 0.599], [0.597, 0.308, 0.684, 0, 0, 0.259, 0.118, 0, 0.666, 0, 0.465, 0.393, 0.296, 0.657, 0, 0.332, 0.567, 0, 0.342, 0.853], [1.02, 0.513, 0.914, 0.422, 0.565, 0, 1.276, 1.087, 0.897, 0, 0.618, 0.944], [0.446, 0.797, 0, 0.394, 0, 0.923, 0.862, 0, 1.129, 0, 0, 0.659, 0.774, 0, 0.897, 0, 0.416, 0.883, 0, 0, 0.371], [0.721, 0.617, 0.549, 0.633, 0, 0, 1.2, 0, 0, 0.486, 0.726, 1.401, 1.413, 0, 0.391, 0.466, 0, 0.188, 0.697], [0, 0.547, 0.96, 2.903, 0.694, 1.694, 0.823, 2.133, 1.884, 1.395, 0.811, 1.428], [0.65, 1.47, 0.888, 1.003, 0.697, 0.277, 1.36, 0.451, 0.964, 0.734, 0.373, 0.582, 1.614, 1.451, 0.569, 0.536, 0.832, 0.934, 0.413, 0.187, 1.177], [1.442, 1.714, 1.574, 1.045, 0.532, 1.935, 1.295, 0.414, 1.427, 1.226, 1.219, 2.131, 1.611, 2.022, 1.844, 0.671, 1.147, 1.117, 0.826, 1.126, 1.155]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

