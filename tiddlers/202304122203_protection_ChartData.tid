created: 20230412220340000
creator: Drevarr
modified: 20230705163525425
modifier: drevarr
tags: ChartData
title: 202304122203_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Primal Clone", "Eibh\u00ebar", "Venomina The Siren", "Mac Chiato", "Black Raspberry Pie", "Demon Staph", "Ryvalia Fazebringer", "Zadie Miststep", "Ark Darkness", "Lucas Ryn", "Sub Train", "Sister Elon\u00edth", "Arriasa", "Gavann", "Fribble Bibble", "Solus Sanctus", "Drevarr Moonwillow", "Johoshua", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Druid", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[245.2916, 29.3324, 0.0, 0.0, 14.407, 142.3313, 511.5247, 13.7052, 226.49], [178.8549, 2.6034, 7.7302, 84.0693, 73.9243, 48.2121, 223.8516, 0.0, 244.18, 22.902, 43.8682, 0.0, 38.1542, 31.392, 0.0, 63.8421, 16.8538, 37.6618, 35.1691, 358.6896], [163.8094, 21.0695, 0.0, 88.5969, 120.0975, 38.1279, 265.5261, 12.9908, 210.54, 23.001, 82.1222, 20.9075, 50.0774, 51.7445, 0.0, 67.4054, 15.6643, 31.0262, 30.4819, 371.0016], [81.9893, 53.4257, 0.0, 163.4052, 77.7032, 52.5339, 163.8403, 13.8556, 435.58, 4.62, 60.7757, 0.0, 7.5686, 95.7456, 0.0, 29.595, 1.7942, 10.5754, 15.0898, 438.7176], [96.3585, 18.1751, 0.0, 177.8112, 186.9365, 68.9567, 218.8507, 0.0, 263.9, 127.1654, 5.9972, 50.7514, 61.476, 0.0, 60.3778, 0.0, 53.136, 18.9, 409.9896], [153.8355, 2.8621, 28.3632, 95.0796, 106.9895, 61.7537, 244.0935, 9.4564, 389.47, 15.939, 57.0547, 21.4245, 43.1827, 15.3298, 0.0, 57.1115, 10.4026, 15.0336, 21.1982, 516.6936], [156.8784, 9.136, 0.0, 76.7634, 65.658, 83.0746, 317.9169, 0.0, 197.2, 17.259, 118.0915, 0.0, 16.848, 67.3358, 0.0, 18.1133, 26.591, 46.2931, 50.9544, 726.408], [170.0643, 28.3298, 22.1392, 127.6989, 113.2483, 89.0291, 237.9019, 0.0, 312.33, 20.79, 80.8166, 0.0, 46.1894, 67.8067, 18.1157, 128.9709, 45.9245, 38.543, 33.8688, 516.2832], [335.7333, 11.6424, 18.2172, 66.7821, 103.683, 65.3072, 300.0564, 18.1608, 322.19, 16.368, 92.3712, 14.3597, 54.779, 18.7361, 155.2996, 14.233, 26.5162, 33.2942, 443.232], [308.1782, 48.2998, 6.1671, 194.3781, 59.6354, 160.5789, 260.5252, 497.06, 38.346, 79.511, 60.0754, 55.728, 116.255, 0.0, 23.3593, 4.7981, 58.6829, 59.5123, 217.9224], [336.4095, 26.3086, 0.0, 216.7074, 136.9844, 157.1214, 412.9348, 405.42, 74.415, 132.9101, 24.1542, 129.4445, 124.3646, 33.8118, 109.8678, 40.3603, 98.1072, 130.788, 121.8888], [404.1986, 25.1605, 21.8266, 235.8468, 106.5172, 223.293, 563.2011, 0.0, 486.04, 89.76, 238.5984, 0.0, 121.7203, 133.1544, 21.9001, 128.1791, 25.7242, 50.1552, 57.9701, 329.5512], [144.639, 271.4342, 77.0847, 204.2496, 270.4421, 65.2661, 271.1062, 95.1955, 113.4778, 151.4722, 1796.7312], [390.6745, 32.34, 36.5765, 252.2079, 200.6349, 53.3022, 526.2894, 9.9828, 391.21, 21.021, 25.1328, 0.0, 80.041, 90.9845, 60.7682, 222.606, 41.0458, 75.8678, 65.5603, 927.9144], [24.158, 70.3679, 122.5539, 108.4066, 165.669, 760.6192, 35.9268, 350.9, 30.162, 156.8026, 31.7645, 121.7203, 70.3181, 48.7945, 255.1704, 28.4458, 34.4477, 37.6488, 1155.6864], [399.6342, 0.0, 57.8915, 336.2772, 281.2904, 145.0204, 662.0292, 774.59, 76.494, 173.1226, 6.4935, 66.5107, 134.5147, 51.7103, 195.4855, 30.9859, 54.1987, 43.0315, 910.6776], [436.149, 70.954, 68.8048, 258.279, 158.0044, 217.2425, 622.7361, 0.0, 485.17, 64.383, 210.1363, 57.3043, 138.983, 274.1045, 25.0331, 206.1753, 83.2608, 79.1078, 98.5522, 1005.0696], [368.3599, 61.6077, 49.2519, 280.917, 258.0267, 157.8898, 701.5604, 10.5468, 1066.62, 95.337, 203.3472, 22.0345, 124.5197, 165.4358, 153.6731, 254.3786, 39.2918, 101.8656, 111.767, 1361.2968], [457.7874, 47.2002, 75.2846, 376.5111, 322.3857, 110.542, 744.1875, 51.2112, 830.85, 43.296, 254.592, 13.504, 97.8739, 161.5642, 108.2598, 247.648, 44.0698, 114.6701, 92.1413, 1649.3976], [621.0897, 47.0385, 123.7407, 338.6439, 354.8605, 228.2871, 741.0917, 10.6596, 742.4, 65.571, 180.9562, 18.2915, 106.272, 150.2107, 96.3481, 317.0329, 40.1184, 83.4883, 125.7077, 1646.1144], [672.1428, 86.0406, 52.6907, 407.2782, 260.8608, 195.7295, 943.0344, 1209.3, 77.682, 219.7325, 69.216, 129.6, 235.8586, 86.4838, 219.3397, 74.3501, 97.9776, 172.7309, 1003.0176], [764.6132, 89.0805, 118.6535, 511.6188, 240.9036, 331.434, 1052.3407, 38.2392, 1383.3, 168.267, 353.9482, 46.6231, 200.7763, 293.9861, 131.7109, 113.728, 112.752, 106.2331, 1789.7544]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

