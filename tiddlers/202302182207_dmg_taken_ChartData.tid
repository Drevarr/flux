created: 20230218220736000
creator: Drevarr
modified: 20230705163519570
modifier: drevarr
tags: ChartData
title: 202302182207_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Morv\u00e4rth", "Newtype Khan", "Hyde En Sikh", "Venomina The Fierce", "El Mas Prron Aki", "Jessica Jung", "Ace Hammers", "Kia Forte", "Drevarr Moonwillow", "Blanco Padre Guard", "Zadie Miststep", "Gretrek", "Aronorf Xideliesi", "Be\u00eb", "Kahless The Drunk", "Nelliel T", "Irish Mini Rev", "Primal Clone", "Th\u00fbnad", "Mini Mei Rev", "Flanneryflame", "Sailor Soup", "Leilani Ellesmera", "Sygaldry Verdandi", "Johosh The Great", "Sheep Poh", "Ark Est Destroyer", "Minka Bringer", "Anita Strips", "Kira Dragonblaze", "Tegan Parker", "Bri The Warrior", "Koisx", "Koralia Danai", "Adalvarn", "Savage Pixie", "Krahli\u00e1", "Belvyn Brightblade", "Flanneryflame", "Morv\u00e4rth", "Liyo Morgaine", "Sygaldry Verdandi", "Smoothsword", "Ark Darkness", "Tranquil Twig", "Irish Mini Rev", "Rashim Maschensy", "Be\u00eb", "Sir Smashee", "Tasty Bacon"];
const professions = ["Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Firebrand", "Catalyst", "Vindicator", "Scrapper", "Scrapper", "Firebrand", "Tempest", "Herald", "Firebrand", "Scourge", "Firebrand", "Scourge", "Vindicator", "Chronomancer", "Soulbeast", "Renegade", "Tempest", "Reaper", "Soulbeast", "Firebrand", "Firebrand", "Catalyst", "Spellbreaker", "Scrapper", "Chronomancer", "Dragonhunter", "Tempest", "Spellbreaker", "Dragonhunter", "Firebrand", "Mirage", "Virtuoso", "Untamed", "Firebrand", "Weaver", "Reaper", "Herald", "Dragonhunter", "Berserker", "Firebrand", "Soulbeast", "Herald", "Soulbeast", "Reaper", "Dragonhunter", "Ranger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[435.6854, 273.4471, 101.2551, 0.0, 129.8, 31.0833, 5.3158, 35.6061, 45.6029, 492.4017], [223.8222, 459.4487, 326.3273, 329.6593, 0.0, 34.5072, 104.1268, 56.6757, 7.9403, 134.971, 185.3534], [267.2368, 91.0659, 295.52, 219.8182, 0.0, 41.1727, 63.9296, 27.4211, 0.8393, 191.8676, 277.9744], [424.8132, 49.2105, 202.8592, 23.9865, 0.0, 98.3774, 195.6129, 447.3451], [486.2059, 154.3889, 0.0, 574.1636], [174.1585, 359.4302, 442.4796, 48.1739, 192.6276, 116.0185, 34.4595, 182.0], [195.5676, 317.8659, 322.5, 244.3474, 0.0, 83.531, 35.2254, 148.1892, 84.6429, 117.7227], [271.3056, 0.0, 144.6096, 321.2794, 47.9189, 13.0149, 23.1591, 484.819], [262.0088, 117.1951, 177.8415, 135.1413, 0.0, 86.4058, 108.4533, 58.9487, 17.2273, 144.9697, 279.6348], [322.2232, 192.8276, 179.08, 150.3656, 0.0, 74.3333, 91.6429, 0.0, 10.2667, 287.7586], [303.7565, 69.8481, 213.9467, 82.044, 83.9155, 120.8382, 16.4444, 0.0, 384.2241], [11.3167, 3588.7647, 736.6484, 0.0], [345.5614, 153.5926, 166.1446, 34.6067, 32.2083, 220.5, 0.0312, 110.3571, 281.9237], [344.614, 133.4545, 303.6585, 74.0165, 0.0, 79.4844, 57.0769, 7.8906, 14.16, 275.3276], [230.8, 130.0449, 140.1186, 441.1667, 0.0, 79.5379, 53.5417, 27.5946, 15.1385, 3.1321, 194.9052], [284.623, 366.1538, 411.9895, 12.7216, 157.8944, 147.3276, 202.8125], [438.481, 300.4474, 31.9667, 389.7966], [249.7565, 84.8395, 136.7468, 165.6044, 0.0, 108.9149, 200.9265, 114.9167, 0.1077, 173.9027], [1734.0, 160.3333, 0.6452, 0.0, 0.1607, 388.3661], [98.7841, 415.5667, 400.75, 227.8732, 102.0], [453.2208, 323.4457, 188.2258, 71.6241, 123.9077, 124.4722, 7.2097, 243.6719], [394.5593, 249.2018, 160.7914, 246.7246, 6.2222, 12.7377, 43.7826, 113.0796], [231.9259, 0.0, 158.3643, 381.9545, 71.1389, 14.2281, 0.0, 325.3017], [113.2581, 319.8171, 190.5824, 0.0, 131.6186, 14.8169, 14.9385, 272.3419], [267.5526, 59.8846, 110.3247, 189.0435, 0.0, 47.3265, 8.9014, 0.0, 6.5672, 177.1176, 188.3826], [232.5176, 145.7097, 6.5405, 240.2308, 61.3478, 0.0, 4.9692, 61.2453, 215.8034], [360.1852, 312.9492, 515.2556, 18.2766], [170.7073, 62.3375, 210.5294, 147.9744, 0.0, 70.6759, 42.4789, 53.3784, 80.42, 26.6364, 157.7583], [177.5909, 52.6951, 143.0, 81.2, 0.0, 74.8621, 51.2931, 37.3429, 7.6327, 232.0462, 170.094], [407.5478, 229.375, 172.9221, 138.2842, 0.0], [20.5546, 35.7531, 211.561, 194.8532, 83.4552, 82.9692, 25.7222, 24.1132, 247.9035], [301.7253, 0.0, 197.338, 336.0377, 182.3514], [40.035, 291.6538, 42.8947, 2.3387, 55.5769, 1385.4118], [140.8673, 19.7, 310.9483, 80.5955, 0.0, 80.6739, 9.4853, 21.8919, 1.0667, 0.0, 129.9741], [80.2361, 363.2241, 14.2632, 21.5938, 0.0, 288.6387], [327.675, 365.5273, 0.0], [50.125, 555.2087], [400.8416, 126.3444, 132.0253, 31.4615, 0.0], [475.5983], [469.4196], [41.32, 346.0588], [366.8596], [93.5455, 323.3636, 22.2222, 0.0], [803.4865], [42.02, 221.1933], [58.156, 99.7042, 0.0, 15.6613, 25.2059], [130.1204, 174.2143], [86.669], [72.4583], [0.0, 8.7313]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

