created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Birdyguard", "Frozen Chaos", "Crabbedmermaid", "Kumengo", "Drevarr Moonwillow", "Belvyn Brightblade", "Aronorf Xideliesi", "Sub Train", "Kisumaiassu", "Gabe Malhorn", "Crusader Siolith", "Bella Sassy", "Koralia Danai"];
const professions = ["Guardian", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[51.6312, 81.756], [27.216, 168.856, 6.6713, 0.0, 51.354], [18.2218, 36.9684, 17.5418, 0.0, 24.8741, 0.0, 62.3047, 15.6948, 9.522, 24.48, 28.3015, 0.0, 6.7095, 27.486], [0.0, 17.8675, 0.0, 10.5336, 10.3381, 0.0, 6.0264, 31.9815, 25.6731, 5.7449, 0.0, 125.136, 63.2018], [21.3816, 9.4259, 1.6096, 34.776, 0.7814, 0.0, 23.963, 0.0, 17.1125, 9.8963, 0.0, 19.2456, 65.1949, 13.5001, 5.3958, 0.0, 32.688, 36.2934, 14.9021, 0.0, 12.42], [105.1564, 87.4038, 43.9236, 64.3545, 31.968, 86.034, 0.0, 35.8142], [101.17, 105.8661, 7.2765, 77.868, 38.1485, 0.0, 39.2248, 29.0816, 32.8205, 37.31, 0.0, 65.5128, 67.6113, 25.0351, 34.3744, 9.0376, 139.248, 46.6315, 0.0, 11.5659, 63.504], [94.1032, 120.5113, 3.9028, 51.3607, 39.96, 25.38, 68.2595, 0.0, 74.9918, 25.1826, 0.0, 35.2512, 58.7038, 19.089, 16.6318, 35.2153, 146.88, 88.3506, 0.0, 13.1634, 87.858], [19.026, 148.2437, 28.4004, 9.7807, 181.1875, 112.37, 20.3008, 58.9142, 58.4722, 0.0, 33.5664, 110.1585, 27.1533, 52.7519, 34.8369, 253.584, 82.9249, 39.0602, 73.6767, 58.914], [89.8752, 182.4418, 20.1978, 143.3565, 49.1597, 73.4709, 0.0, 45.9413, 22.7527, 38.5213, 31.8168, 103.3358, 48.5901, 35.1362, 0.0, 180.144, 141.5809, 38.136, 85.7538, 135.648], [10.7512, 146.9973, 51.2001, 201.7103, 207.7565, 139.3108, 32.1024, 40.3234, 74.4433, 26.2126, 4.0176, 117.4076, 20.9774, 29.5182, 38.9995, 80.64, 134.6888, 42.1215, 100.8342, 116.262], [269.7464, 276.6229, 85.0909, 138.915, 102.191, 113.3936, 25.0112, 46.0152, 37.4867, 64.0458, 102.9672, 70.1698, 40.9086, 26.979, 51.2425, 363.888, 275.0966, 15.884, 189.6552, 143.1], [173.8312, 316.8972, 35.4564, 316.8112, 90.9312, 253.2163, 28.9024, 96.3178, 100.7746, 78.4972, 39.7872, 103.241, 21.6154, 37.6119, 82.4733, 397.152, 266.2249, 0.0, 106.5213, 96.066]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

