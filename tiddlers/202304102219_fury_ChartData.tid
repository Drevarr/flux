created: 20230410221909000
creator: Drevarr
modified: 20230705163525195
modifier: drevarr
tags: ChartData
title: 202304102219_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Skye Nightroad", "Lord Erin The Wise", "Sofya De Nova", "Mike The Archmagus", "Xyntharos", "Newtype Khan", "Arriasa", "Fribble Bibble", "Ak\u00e1nt\u00f3r", "Tribal S", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Weaver", "Weaver", "Weaver", "Vindicator", "Spellbreaker", "Druid", "Scrapper", "Druid", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[28.7438, 31.248, 62.6588, 208.8909, 536.7648, 21.6364, 16.632, 31.2998, 22.2667, 26.0915, 27.93, 23.6023, 30.5015, 30.9518, 24.277, 23.5813, 0.0, 31.3838, 25.5545, 30.552, 45.6557], [43.8365, 221.3942, 117.4349, 915.8784, 72.7043, 116.9683, 66.7814, 41.6232], [57.6888, 128.4739, 200.3733, 485.6449, 1312.2586, 16.027, 63.625, 130.4794, 74.5495, 16.4692, 79.4976, 26.8324, 50.6621, 54.1068, 106.0889, 41.6304, 41.7671, 42.2532, 46.4637, 89.0252], [467.0886, 1708.6387, 53.4719, 79.5917, 66.4435, 43.4506, 32.6654, 31.9088, 64.3154, 22.542, 112.9548, 45.004, 43.314, 68.1713, 64.3411, 80.0915, 45.4742, 116.6435], [29.5487, 68.567, 233.5218, 420.4327, 1367.8118, 55.2203, 117.936, 66.9926, 73.9742, 35.3962, 72.7709, 51.0384, 65.2327, 37.1547, 148.5023, 50.4063, 45.3892, 59.4453, 62.0245, 88.3499, 3.9878, 109.564], [52.3895, 86.2445, 195.657, 482.994, 1559.9962, 43.71, 66.1046, 64.9651, 59.7276, 25.4813, 66.0951, 38.2788, 32.8457, 48.5472, 93.9629, 32.2371, 27.5052, 29.7356, 72.4275, 77.027, 55.2509, 103.9774], [120.2074, 193.0234, 524.5818, 1007.8722, 1810.7366, 185.4032, 187.367, 170.3962, 100.1326, 111.188, 141.6178, 37.6712, 67.1026, 112.5579, 112.8994, 55.0588, 102.4369, 0.0, 23.2974, 0.0, 0.0, 25.2358], [58.3261, 75.0845, 593.978, 1002.3053, 2657.5488, 131.9314, 187.609, 189.1507, 110.3522, 27.8054, 144.1658, 68.0904, 70.56, 92.5982, 97.5066, 36.2281, 105.9458, 35.9425, 105.8656, 129.6942, 91.1736, 168.6563], [261.6455, 170.4355, 643.4312, 1164.8055, 3520.1261, 130.2558, 160.9978, 184.4198, 154.4458, 6.8886, 184.4752, 107.8588, 148.9522, 145.3683, 113.3424, 124.9794, 90.3256, 180.5694, 128.1577, 244.949, 185.1451, 188.8835], [163.2392, 135.0806, 653.1333, 963.072, 3968.3059, 266.121, 262.9066, 234.6432, 157.2883, 230.645, 72.9904, 151.2806, 139.5657, 164.3935, 78.079, 105.8327, 162.0788, 174.4903, 147.0421, 117.5448, 284.5293], [394.2605, 588.9923, 1535.6664, 4124.4557, 154.0426, 167.4816, 157.5929, 21.8029, 242.009, 85.4756, 223.3224, 162.3811, 153.7625, 98.3871, 132.47, 101.5427, 193.679, 213.1098, 33.4786, 92.0338], [14.0533, 220.8787, 828.982, 598.5732, 4100.4326, 225.1793, 275.4259, 189.5309, 172.9224, 69.7726, 295.4661, 112.0924, 151.5982, 188.5079, 444.455, 36.0517, 203.5533, 184.8285, 224.4509, 249.2601, 152.6957, 170.1493], [94.7505, 241.5024, 826.5565, 1690.744, 4807.6109, 235.0141, 333.1238, 261.2122, 242.2606, 142.3875, 345.9674, 105.35, 175.1652, 176.9939, 195.1792, 130.1832, 92.0989, 151.6908, 271.0457, 243.1311, 126.6139, 346.3186]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

