created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Tequilasaurous", "Nebula Davar", "Cura Ativos", "Melody Phoenixstorm", "Lord Erin The Wise", "Itacolomi", "Venomina The Fierce", "Zanos Engine", "Clean And Green", "Morv\u00e4rth", "Blaize Harlot", "Belvyn Brightblade", "Cat Wigglebooty", "Charr Surethang", "Ryzen Grimsaw", "Mort\u00e4rion", "Jimbo The Pleb", "Rahani Sunray", "Elonith Requiem", "Oo Dads Mad", "Darks Na", "Rozaalyna", "Daphne Agla\u00e9", "Revenant Brandorf", "Ka Otik Nightm\u00e6r", "Glorious Gluvs", "Rina Of Theros", "Tegan Parker", "Tootsie Pop Rocks", "Etchery Howls", "Keypek The Drunk", "Xanvias Einzbern", "Tribal S", "Rafaellagabriela", "Sub Train", "Jmbrage Rev", "Koralia Danai", "Bella Sassy", "Lucky Luprac\u00e1n", "Arcanophage Farra", "Zaedy Zae", "Drevarr Moonwillow", "Sygaldry Verdandi", "Morton Saltbringer", "Mistwalker Cael", "Primal Clone", "Eibh\u00ebar", "Solus Luxes"];
const professions = ["Dragonhunter", "Scourge", "Dragonhunter", "Scrapper", "Weaver", "Firebrand", "Spellbreaker", "Scrapper", "Druid", "Reaper", "Scourge", "Firebrand", "Scrapper", "Berserker", "Vindicator", "Scrapper", "Berserker", "Chronomancer", "Reaper", "Berserker", "Firebrand", "Reaper", "Reaper", "Vindicator", "Reaper", "Berserker", "Reaper", "Tempest", "Scrapper", "Druid", "Scrapper", "Berserker", "Druid", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Druid", "Scrapper", "Firebrand", "Chronomancer", "Herald", "Chronomancer", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 2, 4, 2, 2, 2], [3, 3, 4, 2, 1, 0, 4], [1, 8, 2, 7, 1, 2], [25], [2, 6, 0, 2, 0, 5, 0, 4, 0, 3, 2, 3], [10, 5, 3, 2, 3, 1, 5], [9, 7, 4, 2, 2, 0, 5], [18, 2, 0, 3, 1, 1, 1, 1, 1, 1, 2, 0, 1, 0, 0], [2, 4, 5, 7, 4, 14], [20, 8, 3, 7, 2, 0, 4, 0], [16, 6, 4, 5, 6, 0, 2, 4, 2, 4], [35, 16], [9, 6, 4, 4, 5, 0, 0, 10, 5, 3, 2, 0, 0, 0, 4], [38, 9, 0, 2, 1, 3, 0], [1, 0, 8, 3, 8, 5, 2, 8, 10, 2, 1, 0, 7], [28, 5, 2, 7, 6, 0, 8, 14], [8, 3, 8, 11, 5, 0, 3, 6, 9, 1, 5, 3, 4, 0, 4], [13, 19, 9, 24, 0, 1, 0, 7], [6, 13, 4, 7, 16, 12, 3, 15, 3, 3], [27, 10, 8, 10, 6, 0, 2, 20], [23, 15, 10, 11, 7, 1, 5, 19], [42, 15, 8, 14, 4, 4, 6], [36, 4, 3, 8, 4, 1, 7, 7, 3, 5, 10, 1, 1, 0, 3], [9, 11, 7, 0, 5, 19, 12, 12, 19, 2, 1, 1, 1], [11, 7, 10, 5, 0, 3, 24, 15, 4, 13, 4, 0, 8], [24, 12, 2, 10, 2, 0, 3, 12, 11, 6, 15, 2, 3, 2, 4], [44, 13, 7, 10, 5, 0, 6, 13, 3, 1, 8, 0, 3, 0, 4], [0, 20, 4, 12, 0, 3, 24, 17, 16, 14, 3, 3, 0, 5], [47, 7, 2, 8, 3, 1, 6, 5, 13, 13, 6, 1, 4, 0, 5], [43, 6, 3, 5, 2, 1, 19, 14, 6, 15, 0, 2, 5], [35, 10, 7, 12, 5, 0, 6, 13, 12, 15, 8, 2, 1, 0, 6], [38, 8, 4, 11, 6, 1, 7, 5, 14, 13, 16, 3, 2, 1, 10], [39, 8, 6, 13, 4, 7, 15, 14, 13, 17, 3, 3, 0, 10], [37, 10, 4, 8, 4, 2, 6, 23, 13, 12, 20, 1, 2, 2, 8], [45, 11, 7, 9, 5, 6, 17, 6, 10, 21, 2, 1, 1, 12], [44, 15, 3, 4, 1, 0, 2, 26, 18, 18, 12, 4, 3, 0, 8], [48, 8, 7, 9, 5, 7, 23, 13, 17, 12, 1, 5, 1, 6], [53, 12, 7, 9, 2, 0, 6, 21, 14, 15, 17, 2, 2, 2, 6], [39, 17, 5, 11, 11, 0, 4, 20, 22, 13, 20, 2, 4, 1, 2], [31, 26, 6, 16, 4, 1, 11, 14, 12, 16, 20, 3, 4, 1, 10], [59, 19, 5, 14, 7, 0, 8, 18, 22, 5, 13, 4, 2, 1, 12], [46, 21, 7, 10, 6, 0, 7, 27, 14, 16, 16, 4, 4, 1, 12], [47, 12, 8, 11, 4, 6, 20, 21, 19, 21, 3, 5, 0, 16], [45, 13, 11, 11, 9, 0, 9, 20, 18, 17, 19, 5, 3, 0, 14], [55, 11, 8, 12, 5, 0, 6, 40, 11, 6, 33, 0, 3, 1, 9], [47, 15, 7, 10, 2, 1, 6, 29, 40, 7, 12, 2, 2, 0, 28], [35, 11, 9, 24, 4, 1, 8, 20, 32, 26, 25, 0, 5, 1, 10], [70, 19, 8, 18, 4, 1, 12, 19, 22, 14, 20, 3, 1, 1, 7]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

