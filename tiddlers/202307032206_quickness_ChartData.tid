created: 20230703220627000
creator: Drevarr
modified: 20230705163541479
modifier: drevarr
tags: ChartData
title: 202307032206_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Seiker Soulkeeper", "Erma Starr", "Gavann", "Smol Daddy Tika", "Zayde Sunsabre", "Newtype Khan", "Arcanophage Farra", "Grasszanine", "Morton Saltbringer"];
const professions = ["Firebrand", "Guardian", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 3.2783, 27.3222, 34.925, 80.1757, 29.7603, 12.0047], [21.0293, 11.8654, 24.1279, 11.975, 0.0, 8.875, 227.6265, 11.9878, 23.8027, 12.7633, 21.7516], [325.068, 21.4032, 11.6302, 0.0, 40.3034], [90.5093, 28.5948, 32.3568, 21.4406, 0.0, 276.5445, 32.6707, 50.0761, 29.8539, 0.0, 25.2917, 0.0, 0.0, 0.0, 0.0, 0.0], [88.1933, 7.1659, 29.1362, 28.9094, 14.5199, 259.1865, 45.4818, 44.0501, 28.5426, 10.2801, 12.1187, 8.3786, 18.1975], [0.0, 0.0, 0.0, 15.3619, 16.474, 0.0, 293.1135, 0.0, 0.0, 0.0, 0.0, 30.7722, 20.5436, 16.4862, 9.6952, 0.0, 0.0, 7.2164, 0.0, 0.0, 45.8093, 79.3162, 0.0, 14.9846, 9.7971, 115.9568], [67.164, 10.4647, 14.179, 43.727, 14.8727, 0.0, 542.832, 29.7381, 30.0697, 15.0362, 22.3996, 15.1138, 34.2056, 0.0, 13.8829, 0.0, 0.0, 20.6668, 30.7969, 53.4204, 40.8672, 51.3744, 62.924, 17.2929, 20.7501, 82.6477], [54.565, 13.7532, 13.9421, 27.6998, 5.5094, 7.0237, 473.7945, 17.3387, 0.0, 0.0, 59.7062, 28.842, 19.5048, 35.1259, 10.8979, 18.4968, 16.5673, 1.822, 32.1024, 56.1686, 52.5571, 88.8897, 33.6398, 32.8038, 145.3688], [0.0, 15.1603, 15.0595, 0.0, 7.4837, 341.637, 15.7951, 0.0, 57.7093, 41.7186, 37.9431, 24.948, 58.0364, 26.9751, 44.8681, 97.7011, 120.8222, 70.0088, 74.4691, 30.1619, 179.7073]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

