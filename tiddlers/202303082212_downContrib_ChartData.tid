created: 20230308221219000
creator: Drevarr
modified: 20230705163521452
modifier: drevarr
tags: ChartData
title: 202303082212_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Tootsie Poppa", "K\u00f4sair", "Kmpek", "Seren Nightroad", "Domina Flagbringer", "Dark Sidiuz", "K\u00f4sair", "Smol Gluvs", "Rozaalyna", "Nelliel T", "Ace Hammers", "Panther B Me", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Brother Titus", "Cerys Fireblade", "Smol Daddy Tika", "My Birthday Girl", "Be\u00eb", "Jupi Jupi Jupi", "Xyntharos", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Vindicator", "Scourge", "Spellbreaker", "Scourge", "Berserker", "Scourge", "Scourge", "Reaper", "Vindicator", "Scourge", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Berserker", "Scrapper", "Scourge", "Dragonhunter", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7891.0, 3618.0, 0.0, 10193.0, 9228.0, 7002.0, 37641.0, 0.0, 14670.0, 19062.0, 0.0, 14987.0, 0.0, 0.0, 16988.0, 0.0, 0.0, 2050.0, 0.0, 32519.0, 9229.0, 11845.0, 9999.0, 7698.0, 12209.0, 24008.0, 35355.0, 16493.0], [15195.0, 4023.0, 0.0, 2645.0, 9882.0, 12329.0, 39034.0, 0.0, 2800.0, 7992.0, 0.0, 28132.0, 8204.0, 0.0, 0.0, 9146.0, 15761.0, 0.0, 722.0, 2419.0, 2281.0, 0.0, 17854.0, 11601.0, 16522.0, 16864.0, 20004.0, 0.0, 19063.0, 39769.0, 5136.0, 3320.0], [0.0, 10479.0, 40686.0, 52069.0, 0.0, 8832.0, 19605.0, 0.0, 7054.0, 0.0, 2097.0, 0.0, 29675.0, 20363.0, 12130.0, 20089.0, 7069.0, 22185.0, 31632.0, 39119.0, 17668.0], [5459.0, 43237.0, 75490.0, 27767.0, 0.0, 38456.0, 79292.0, 58064.0, 14932.0], [13421.0, 0.0, 0.0, 1513.0, 9006.0, 21444.0, 54098.0, 6664.0, 24660.0, 28124.0, 7176.0, 23246.0, 35082.0, 1400.0, 0.0, 32410.0, 40389.0, 0.0, 13375.0, 0.0, 2404.0, 1858.0, 36114.0], [14098.0, 2134.0, 0.0, 11168.0, 20490.0, 13880.0, 32803.0, 1781.0, 24192.0, 35320.0, 2861.0, 10615.0, 7581.0, 0.0, 0.0, 6870.0, 31596.0, 0.0, 11206.0, 0.0, 7033.0, 0.0, 3467.0, 17547.0, 13924.0, 33806.0, 5129.0, 14677.0, 36699.0, 0.0, 14406.0], [8829.0, 35519.0, 23981.0, 1500.0, 10513.0, 10971.0, 0.0, 0.0, 18156.0, 31117.0, 214.0, 6631.0, 1767.0, 36464.0, 28980.0, 21936.0, 18763.0, 0.0, 19756.0, 70708.0, 21626.0, 22635.0], [208440.0, 3877.0, 47227.0, 118022.0, 2246.0, 91188.0, 13392.0], [7530.0, 21136.0, 8479.0, 50876.0, 8045.0, 33581.0, 19105.0, 176.0, 15579.0, 10495.0, 0.0, 0.0, 17919.0, 56117.0, 0.0, 306.0, 45.0, 12529.0, 0.0, 46087.0, 19833.0, 20973.0, 29075.0, 10163.0, 0.0, 16846.0, 47589.0, 23245.0, 27007.0], [11358.0, 1476.0, 0.0, 13476.0, 20269.0, 64520.0, 2508.0, 34966.0, 43324.0, 5985.0, 15553.0, 29747.0, 0.0, 32156.0, 0.0, 3919.0, 0.0, 5092.0, 616.0, 76744.0, 35068.0, 29094.0, 27448.0, 45186.0, 21072.0, 20132.0, 33935.0, 19266.0], [8900.0, 331.0, 0.0, 0.0, 35930.0, 36253.0, 32610.0, 551.0, 37256.0, 16612.0, 590.0, 24519.0, 7339.0, 1543.0, 0.0, 27238.0, 71455.0, 1811.0, 27384.0, 1188.0, 34934.0, 48209.0, 38880.0, 42806.0, 33918.0, 9985.0, 80531.0, 25458.0, 38458.0], [18094.0, 7444.0, 0.0, 7753.0, 34148.0, 37713.0, 64454.0, 8840.0, 37890.0, 36415.0, 0.0, 48815.0, 32039.0, 0.0, 0.0, 45953.0, 10782.0, 0.0, 0.0, 0.0, 2074.0, 0.0, 50384.0, 3633.0, 20044.0, 48398.0, 56123.0, 47003.0, 87570.0, 7077.0, 8007.0], [23902.0, 4393.0, 0.0, 10963.0, 35844.0, 26530.0, 111117.0, 16137.0, 60211.0, 44167.0, 2251.0, 25131.0, 9247.0, 0.0, 30447.0, 46232.0, 0.0, 27331.0, 2310.0, 5878.0, 5247.0, 41869.0, 30258.0, 48054.0, 20943.0, 42528.0, 0.0, 6.0, 68894.0, 11836.0, 30678.0], [6343.0, 2152.0, 29352.0, 28080.0, 58493.0, 107325.0, 2922.0, 24462.0, 35342.0, 6250.0, 30637.0, 1108.0, 0.0, 0.0, 36786.0, 34913.0, 0.0, 12366.0, 0.0, 26342.0, 0.0, 10418.0, 51045.0, 46351.0, 0.0, 27559.0, 102613.0, 61893.0, 61614.0], [27596.0, 0.0, 0.0, 4248.0, 2899.0, 0.0, 15408.0, 0.0, 22378.0, 0.0, 103966.0, 124311.0, 73688.0, 97436.0, 83497.0, 0.0, 3189.0, 94306.0, 69823.0, 82992.0], [7683.0, 6451.0, 0.0, 20832.0, 11561.0, 44284.0, 95813.0, 6604.0, 36167.0, 61151.0, 4102.0, 86212.0, 29087.0, 0.0, 0.0, 28611.0, 85817.0, 0.0, 6255.0, 0.0, 37897.0, 3104.0, 43890.0, 16679.0, 19429.0, 0.0, 17497.0, 0.0, 0.0, 121343.0, 68600.0, 13194.0], [24405.0, 20116.0, 0.0, 0.0, 50433.0, 73129.0, 3431.0, 13352.0, 0.0, 34430.0, 0.0, 77221.0, 104263.0, 20962.0, 54442.0, 59391.0, 0.0, 106015.0, 107607.0, 56573.0, 84556.0], [30422.0, 2786.0, 3596.0, 57684.0, 10186.0, 103708.0, 0.0, 63051.0, 12275.0, 0.0, 43008.0, 6047.0, 0.0, 0.0, 29443.0, 43895.0, 1989.0, 5130.0, 0.0, 56875.0, 6506.0, 103632.0, 51765.0, 12845.0, 64541.0, 49961.0, 0.0, 52946.0, 81823.0, 27612.0, 57182.0], [0.0, 31791.0, 0.0, 22629.0, 59481.0, 96161.0, 70200.0, 816.0, 29734.0, 28337.0, 1679.0, 11088.0, 24721.0, 0.0, 2183.0, 67655.0, 0.0, 9173.0, 3781.0, 27339.0, 1297.0, 103596.0, 52859.0, 13995.0, 111025.0, 51117.0, 0.0, 62892.0, 102043.0, 40721.0, 44856.0], [27609.0, 19613.0, 3706.0, 12484.0, 38593.0, 48851.0, 103164.0, 15833.0, 48210.0, 48917.0, 0.0, 46086.0, 24840.0, 1931.0, 0.0, 32330.0, 90751.0, 3789.0, 20560.0, 8282.0, 44622.0, 13880.0, 79980.0, 69940.0, 28083.0, 26692.0, 46521.0, 0.0, 47631.0, 67394.0, 46568.0, 41077.0], [34271.0, 8332.0, 32658.0, 60600.0, 94729.0, 21985.0, 62191.0, 49685.0, 7522.0, 66531.0, 16946.0, 0.0, 0.0, 47956.0, 86695.0, 0.0, 27778.0, 5439.0, 973.0, 1388.0, 96365.0, 55353.0, 68004.0, 45489.0, 1136.0, 0.0, 35715.0, 110635.0, 49336.0, 41968.0], [1154.0, 10254.0, 0.0, 22084.0, 55686.0, 113627.0, 165310.0, 22184.0, 73699.0, 49955.0, 0.0, 69651.0, 5768.0, 0.0, 0.0, 58876.0, 15524.0, 2924.0, 29017.0, 0.0, 21514.0, 7846.0, 141456.0, 102016.0, 40593.0, 63954.0, 1720.0, 0.0, 39233.0, 113577.0, 82060.0, 44664.0], [3804.0, 2370.0, 0.0, 8044.0, 46601.0, 43216.0, 140585.0, 27355.0, 70405.0, 90026.0, 1407.0, 91095.0, 29819.0, 0.0, 0.0, 77491.0, 82274.0, 0.0, 4163.0, 0.0, 30480.0, 0.0, 97918.0, 87288.0, 66174.0, 95443.0, 65706.0, 0.0, 76353.0, 195794.0, 62958.0, 44407.0], [34833.0, 13448.0, 0.0, 29090.0, 65094.0, 35430.0, 152554.0, 12121.0, 84359.0, 63178.0, 122.0, 127672.0, 24231.0, 6724.0, 7416.0, 64935.0, 159305.0, 0.0, 15919.0, 0.0, 69786.0, 0.0, 141467.0, 140058.0, 71579.0, 176809.0, 84146.0, 0.0, 47984.0, 233041.0, 60518.0, 76390.0], [28942.0, 4678.0, 0.0, 67534.0, 90709.0, 182305.0, 308050.0, 25404.0, 69511.0, 143483.0, 10030.0, 157337.0, 77491.0, 3880.0, 0.0, 84693.0, 182791.0, 5299.0, 3070.0, 0.0, 88907.0, 366.0, 199172.0, 167124.0, 102125.0, 181669.0, 151123.0, 0.0, 66640.0, 299056.0, 101834.0, 104325.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

