created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Necrotic Windrunner", "N\u00f6sh\u00e0k", "Eibh\u00ebar", "Rafaellagabriela", "Mike The Archmagus", "Mistwalker Cael", "Crusader Siolith", "Scion K\u00e1i", "Drevarr Moonwillow", "Belvyn Brightblade", "Insanityburn", "High Sorcer Baradun", "Leafzel", "Oo Dads Mad", "Lucky Luprac\u00e1n", "Solus Luxes", "Darks Na", "Be\u00eb", "Mister Jekyll", "Kittendoodlez", "Sub Train", "Rina Of Theros", "Dark Sidiuz", "Kurn The Drunk", "Lord Erin The Wise", "Acinonyx Fauxhawk", "Elonith Requiem", "Ggclaudx", "Etch\u00e9ry", "Jimbo The Pleb", "Glorious Gluvs", "Xanvias Einzbern"];
const professions = ["Firebrand", "Reaper", "Mesmer", "Chronomancer", "Firebrand", "Tempest", "Vindicator", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Berserker", "Tempest", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Reaper", "Berserker", "Firebrand", "Reaper", "Reaper", "Reaper", "Weaver", "Berserker", "Reaper", "Holosmith", "Berserker", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4878, 0.3246, 1.1617, 8.6136, 0.0, 6.561, 0.0357, 41.4091, 0.0, 9.7561, 8.3182, 0.0, 5.463, 4.7622, 0.0, 2.2982, 5.6596, 5.878, 0.3692, 0.0, 69.2667, 0.0, 59.4103, 4.8228, 22.6757, 0.0, 6.0], [0.0, 0.0, 0.3817, 0.0, 0.0, 2.1364, 5.8421, 12.8659, 23.0, 0.0, 7.1574, 12.4085, 10.2449, 12.5263, 6.1702, 5.7561, 8.1231, 14.375, 3.3667, 0.0632, 20.6154, 0.0, 9.9324, 68.439], [0.0, 0.0, 11.1679, 0.0976, 0.0, 0.0, 0.0, 1.0758, 0.0, 31.3241, 7.7744, 0.0816, 1.3333, 15.8723, 0.0, 0.0, 22.6786, 0.0, 0.0, 94.7692, 0.0, 27.8108, 17.2683, 0.0], [0.7101, 0.0, 0.0909, 0.0, 28.3902, 2.5714, 9.5682, 13.8421, 4.2073, 7.1212, 0.0, 12.3981, 12.0976, 0.1429, 5.5965, 13.0426, 0.0976, 1.6154, 23.375, 0.0, 0.6842, 34.5385, 12.6709, 18.6892, 2.7805, 40.7714], [0.0, 33.939, 4.9821, 28.5227, 81.1316, 9.7927, 28.8788, 0.0, 9.1204, 13.7927, 0.0408, 19.1579, 0.0, 6.9024, 0.0, 6.8214, 2.4, 0.2, 3.5385, 0.0, 2.3108, 26.6829, 6.0571], [0.0, 0.8638, 0.0, 0.0, 0.0, 12.8393, 21.6818, 0.0, 21.0854, 0.0, 0.0, 17.3519, 30.3537, 0.0, 49.0702, 0.0, 6.4878, 12.4154, 0.0, 0.0, 0.0513, 0.0, 11.2297, 10.5366, 52.6], [4.0, 0.0, 1.1191, 38.9091, 0.7023, 36.122, 8.8393, 2.8182, 14.4737, 17.8415, 41.2273, 0.0, 18.2315, 7.7317, 4.898, 29.0877, 0.8085, 0.0488, 0.0308, 22.375, 3.1, 0.0, 0.0, 0.0, 7.2432, 0.0], [108.5854, 2.229, 0.3447, 0.0, 0.0, 11.378, 14.7143, 5.8864, 3.0789, 4.4512, 4.3636, 0.0, 1.3889, 10.8963, 1.0, 33.1404, 0.0, 0.0, 0.0, 0.0, 3.0333, 0.0, 13.5385, 4.8354, 5.3514, 6.5854, 0.0], [138.7143, 244.9298], [13.8902, 2.9478, 0.0298, 8.8636, 0.0, 33.3537, 14.8393, 28.6136, 4.6579, 20.878, 5.8333, 0.0, 13.2963, 24.561, 0.0, 12.1754, 31.4681, 12.9756, 0.0, 4.8393, 0.0, 0.0, 1.9487, 0.0, 6.3108, 57.878, 24.9429], [38.6585, 4.9014, 2.6553, 9.2273, 1.7557, 36.7317, 8.7143, 13.6591, 5.9737, 21.4146, 73.197, 58.4444], [40.7231, 0.0, 33.5333, 3.9579, 164.9231, 0.0, 58.2162, 156.0488, 76.2857], [2.8986, 0.0, 0.0, 0.0, 46.5732, 26.8036, 149.5455, 36.7105, 3.8902, 152.5758, 0.0, 1.0926, 4.2927], [3.1246, 3.8723, 0.0, 32.4756, 13.3214, 77.0227, 0.3684, 5.3049, 57.803, 0.0, 8.5648, 39.1585, 0.0, 0.0, 0.0, 29.5122, 0.0, 0.0, 0.0, 1.3368, 0.1795, 4.9873, 17.5405, 72.2195, 0.1143], [0.0, 0.3739, 0.8511, 0.0, 0.0, 130.8537, 50.1607, 18.3409, 1.5, 63.2805, 125.3182, 0.0, 32.787], [35.2195, 16.058, 1.7745, 0.0, 3.313, 8.6341, 7.7679, 38.75, 18.7632, 13.9878, 77.0758, 0.2143, 25.7593, 33.9817, 16.1429, 60.1404, 0.0, 19.0, 1.2154, 0.0536, 2.4667, 0.0, 36.7436, 3.3165, 18.5811, 12.0732, 9.0571], [37.2317, 8.5507, 1.5064, 7.4091, 7.2061, 19.4512, 48.1607, 19.9091, 165.2632, 9.3171, 6.6364, 15.1667, 4.1019, 42.122, 6.551, 26.1404, 6.8298, 0.0, 14.6308, 2.5536, 6.2333, 13.8842, 21.1538, 13.8101, 0.0, 23.878, 41.4857], [0.0, 1.1136, 0.0153, 170.3659, 13.0893, 76.6364, 2.1842, 40.1585, 19.2424, 0.0, 41.1204, 92.1585, 0.0, 13.9825, 0.4255, 0.0488, 5.4462, 6.1607, 6.1333], [13.0609, 7.1319, 22.4318, 1.9389, 26.0244, 46.1607, 89.8864, 4.9474, 28.7927, 47.4242, 0.0, 71.2407, 34.9817, 32.8163, 55.8947, 6.2766, 19.122, 1.9846, 3.9464, 3.4667, 16.7158, 50.5128, 2.3671, 8.3649, 43.3902], [0.0, 16.0696, 21.6, 0.0, 4.2137, 36.2273, 0.4474, 62.2195, 34.2424, 7.6667, 40.287, 70.8841, 29.6122, 64.5614, 7.7872, 6.561, 15.3538, 6.8393, 10.6333, 5.4947, 3.8718, 19.1351, 82.5122], [101.5102, 155.0877, 113.7872, 283.9512, 62.0769, 0.1071, 0.0, 31.4105, 341.0769], [6.6098, 14.5507, 0.0, 9.9545, 0.0153, 120.1098, 21.5536, 101.0682, 109.3684, 18.9512, 72.5909, 0.0, 52.1667, 58.9695, 0.0, 15.7719, 7.0638, 14.6098, 0.0, 1.2143, 49.0667, 0.0, 18.3846, 1.2152, 0.0, 7.7073, 0.0], [15.1098, 19.3565, 26.1191, 0.0, 4.7099, 49.061, 22.9464, 48.7045, 8.2105, 31.3171, 44.2424, 1.4286, 27.5185, 53.7866, 10.9796, 29.1404, 31.6383, 57.4146, 10.6923, 23.1429, 4.4667, 12.6421, 41.359, 7.6456, 26.7162, 54.7805], [16.1739, 12.6596, 0.0, 0.6183, 101.4634, 17.1786, 71.2955, 0.0526, 15.0732, 55.5758, 0.0, 49.1852, 58.5, 21.0612, 42.0702, 49.617, 18.8537, 3.6923, 16.2679, 27.4333, 3.5053, 129.8205, 13.3291, 32.6757, 61.6585], [0.0, 17.3478, 1.3745, 0.0, 0.7481, 64.5366, 26.0179, 47.5909, 13.7368, 45.5732, 47.2121, 2.0714, 93.5, 95.1768, 16.5918, 30.1404, 32.6809, 31.4878, 19.6923, 24.7679, 15.7, 6.0947, 33.5385, 2.0253, 10.2432, 48.6098, 8.5143], [0.0, 2.9545, 1.2061, 27.1829, 89.0, 21.8864, 47.7105, 65.4268, 57.3636, 0.0, 86.6111, 44.6585, 52.4694, 21.4211, 95.4681, 86.8537, 7.9077, 35.0893, 70.6333, 7.9158, 207.4103, 21.5696, 8.8108, 23.878, 23.2857], [5.8377, 1.3021, 0.0455, 0.0, 142.061, 103.2143, 361.8636, 0.0, 34.9512, 212.7879, 0.0, 4.463, 205.5244, 70.7143, 14.2632, 106.8511, 205.878, 0.0, 0.75, 0.3, 6.4737, 109.2821, 33.3924, 0.0, 53.0244, 0.0], [59.8841, 36.434, 19.4773, 12.4351, 40.2927, 92.8571, 150.7273, 0.0, 111.5488, 63.0303, 0.4286, 178.1852, 44.7134, 68.7551, 93.0877, 34.8085, 47.5366, 4.1385, 59.0179, 38.4667, 22.8316, 41.7692, 4.4304, 35.0811, 104.9512, 28.7714], [227.0976, 225.5357, 446.3864, 23.5, 78.6951, 143.0455, 485.9524, 105.037, 244.4573, 0.0, 39.8772, 122.6596, 30.2683, 43.3846, 19.0357, 273.8667, 29.1053, 327.3077], [4.6341, 39.5855, 15.1021, 0.0, 0.0, 126.7439, 172.7321, 168.4091, 13.1053, 52.7683, 230.6667, 233.6852, 230.9756, 131.8367, 178.3333, 254.1064, 117.7073, 47.2462, 23.2679, 31.0667, 1.4842, 155.7692, 0.0, 62.8108, 115.9756, 172.2], [33.4348, 55.017, 0.0455, 11.0534, 238.3171, 72.7143, 207.1818, 11.7895, 62.2317, 196.5606, 0.0, 483.0463, 108.0244, 224.0204, 30.6316, 79.3191, 131.4146, 12.9846, 57.9286, 76.4667, 112.0737, 89.1282, 0.0, 243.8784, 107.4634, 4.5429], [0.6522, 18.2936, 1.1364, 0.0, 149.2317, 7.8214, 141.2045, 2.6842, 5.6585, 350.9394, 0.0, 216.1111, 226.5427, 1.9388, 2.9123, 354.5532, 124.8293, 126.1846, 102.4107, 0.8, 10.2211, 800.6923, 0.0, 279.6081, 350.561, 205.8], [9.8415, 4.7362, 34.6638, 50.4545, 0.0, 234.5366, 166.2679, 388.7727, 3.9211, 91.5, 327.5758, 0.0, 137.3981, 447.0488, 142.6735, 44.6316, 178.4468, 85.6829, 41.3385, 54.2857, 222.2667, 126.9684, 468.4103, 177.4304, 137.1892]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

