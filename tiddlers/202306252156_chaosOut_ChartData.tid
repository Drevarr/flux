created: 20230625215649000
creator: Drevarr
modified: 20230705163536803
modifier: drevarr
tags: ChartData
title: 202306252156_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Hraka Thera", "Arcanophage Farra", "Cedryn X", "Irish Mini Rev", "Koralia Danai", "Sygaldry Verdandi", "High Sorcer Baradun", "Etchery Howls", "Lord Erin The Wise", "Bella Sassy", "Shaca Booey", "Cerys Fireblade", "Elon The Mender", "Drevarr Moonwillow", "Aira Draugr", "Inedible Plant", "Solus Sanctus", "Johosh The Mighty", "Newtype Khan", "Xanvias Einzbern", "Artakama Nahid", "Demon Staph", "Crusader Siolith", "Miphest\u00f6", "Zayde Sunsabre", "Tegan Parker"];
const professions = ["Harbinger", "Spellbreaker", "Berserker", "Herald", "Firebrand", "Firebrand", "Tempest", "Druid", "Weaver", "Firebrand", "Berserker", "Berserker", "Druid", "Scrapper", "Herald", "Vindicator", "Firebrand", "Berserker", "Spellbreaker", "Berserker", "Tempest", "Druid", "Firebrand", "Tempest", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.7641], [0.0, 0.0, 0.0, 0.0, 0.0, 11.9687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.2563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [11.9091, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.4022, 0.0, 0.0, 0.0], [0.0, 0.0, 11.96, 0.0, 1.5096, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.905], [11.9091, 0.0, 0.0, 12.0593, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 1.8115, 29.888, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 16.0069, 0.0, 0.0, 0.0, 0.0, 0.0, 12.9139, 0.0, 15.9289, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 11.8992, 11.929, 0.0, 0.0, 12.0501, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.69], [0.0, 0.0, 9.4723, 0.0, 0.0, 0.0, 11.8992, 0.0, 0.0, 0.0, 0.0, 27.7316, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 11.7686, 12.0254, 3.0192, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0501, 0.0, 0.0, 0.0, 9.0758, 0.0, 0.0, 0.0, 0.0, 3.0067, 0.0, 0.0], [0.0, 0.0, 14.9261, 29.5882, 0.0, 7.7802], [0.0, 0.0, 0.0, 0.0, 23.8517, 0.0, 19.6794, 0.0, 11.9808, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 30.7958, 0.0, 11.8992, 0.0, 0.0, 10.1557, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.885], [0.0, 0.0, 0.0, 0.0, 0.0, 7.0325, 11.8992, 0.0, 0.0, 0.0, 23.9443, 0.0, 0.0, 0.0, 9.0758, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.985], [0.0, 0.0, 8.7069, 45.5899, 11.9687, 0.0], [0.0, 0.0, 22.4848, 0.0, 25.6632, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7584, 0.0, 15.045], [0.0, 0.0, 0.0, 0.0, 38.9477, 14.944, 0.0, 14.8838, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.12], [0.0, 12.024, 0.0, 0.0, 1.5096, 26.1689, 0.0, 0.0, 14.9376, 0.0, 0.0, 0.0515, 0.0, 0.0, 0.0, 9.0625, 0.0, 0.0, 0.0, 0.0, 0.0, 11.73], [0.0, 0.0, 0.0, 0.0, 23.8517, 9.3992, 0.0, 9.0288, 0.0, 11.9256, 0.0, 11.9364, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.985], [0.0, 0.0, 5.1667, 0.0, 26.569, 0.0, 11.8992, 0.0, 0.0, 0.0, 0.0, 11.9878, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0134, 0.0, 20.91], [0.0, 0.0, 14.2563, 0.0, 64.6109, 0.0, 16.0181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 48.0053, 0.0, 0.0, 0.0, 0.0, 5.2675, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.952, 11.6928, 0.0, 21.675], [0.0, 0.0, 0.0, 0.0, 36.2304, 0.0, 11.4415, 9.2477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.6851, 0.0, 0.0, 39.015], [0.0, 0.0, 0.0, 0.0, 16.0018, 15.9583, 16.0181, 0.0, 0.0, 0.0, 15.8417, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 17.9089, 30.855], [0.0, 0.0, 11.96, 0.0, 83.6318, 0.0, 0.0, 11.4912, 0.0, 0.0, 6.8561, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 25.9293, 0.0, 15.096, 37.191, 0.0, 24.8429, 0.0, 0.0, 0.0, 15.9495, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.2587, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

