created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Luxes", "Pr\u00e6tor Lightbringer", "Darks Na", "Gestern Yesteryear", "J\u00e2sm\u00eene", "Tegan Parker", "Tribal S", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[127.8176, 130.5581, 175.9421, 155.0571, 237.5484, 130.6903, 390.4628, 29.875, 203.5157, 188.1667, 95.9252, 11.6721, 75.7831, 138.4143, 0.0, 254.0357, 44.7273, 175.4286, 48.4184, 66.7836, 245.9167, 245.5859, 105.4444, 38.7738, 12.2123, 209.8276, 14.9487, 396.481, 298.8529, 125.9748], [248.4025, 405.3721, 94.3158, 547.3333, 309.4516, 296.8323, 409.5124, 399.0503, 225.25, 295.5701, 22.5082, 150.2571, 0.3267, 8.5893, 109.8409, 0.0, 262.731, 148.1042, 77.9604, 361.3932, 5.095, 184.1437, 0.0, 755.519], [307.717, 539.8837, 194.3474, 835.2476, 539.172, 630.2194, 380.9174, 19.125, 96.2138, 282.9583, 739.9439, 51.0656, 18.6143, 17.4257, 83.4464, 125.3182, 0.0, 45.7449, 409.2924, 287.7083, 167.7004, 415.359, 0.1071, 130.6313, 272.9253, 269.0419], [680.1006, 545.7907, 336.4684, 319.5333, 988.1828, 134.3742, 944.8926, 36.2857, 757.7736, 646.75, 1003.1776, 38.8197, 174.2143, 10.8218, 381.8393, 279.9318, 10.8571, 542.7661, 778.0069, 496.467, 1016.6923, 48.5357, 21.7709, 682.6667, 1961.9114, 949.8333, 602.9581], [1004.7547, 1694.6744, 942.6526, 1580.0571, 1654.1183, 1012.3097, 1600.0579, 58.8036, 1215.7987, 1203.4028, 1903.0093, 37.4554, 588.4643, 535.25, 4.4643, 0.0, 882.2632, 830.1042, 435.8326, 1685.6752, 3.25, 11.1564, 646.8793, 1963.519], [741.9497, 1197.9302, 707.1789, 79.381, 1451.3011, 999.4194, 1300.1405, 232.0536, 1374.2013, 1141.7361, 1274.6262, 8.9398, 33.1, 168.6429, 486.4318, 41.7347, 468.152, 1047.5833, 875.696, 1164.4188, 6.2011, 1038.7874, 198.5641, 1726.4304, 1756.2549, 1212.1132], [2357.8925, 699.0968, 1579.3884, 111.3214, 1369.283, 1311.6528, 1802.6355, 27.623, 48.5542, 6.7857, 516.2321, 912.7273, 418.2143, 8.0714, 1574.5556, 1558.6736, 2042.3436, 2721.9487, 16.0119, 23.3128, 134.1839, 3044.2405, 1828.451, 1205.9979], [1181.5283, 2522.2326, 1397.3947, 3602.9429, 2270.5806, 1652.5161, 2347.3554, 319.2143, 1559.6164, 2006.0, 1693.2336, 38.5783, 178.3429, 42.8515, 525.4643, 523.1364, 4.9796, 1099.2456, 1715.8542, 1195.4581, 2001.3932, 20.6071, 55.5363, 1054.2816, 26.7436, 2014.2785, 1976.4118, 1254.1782], [1605.0692, 2151.9302, 1234.4789, 2622.5429, 1926.5914, 2242.1097, 1809.1736, 114.8214, 1623.566, 1855.9167, 2504.6542, 176.5902, 729.2651, 409.5286, 0.0, 948.1964, 320.2045, 23.1327, 1181.7544, 2039.2917, 1891.9251, 2100.5043, 29.1071, 38.4469, 770.523, 376.3846, 3698.0633, 1798.8627, 1709.6939], [2321.4654, 1731.6279, 742.5158, 2226.9619, 2743.7204, 2577.0516, 2143.1901, 151.1429, 2802.434, 1655.625, 2700.2243, 85.0984, 364.4143, 30.0099, 1178.3036, 563.4545, 351.5357, 44.2347, 1688.2573, 1559.1389, 1504.6167, 2717.2564, 28.0476, 84.6257, 1308.5632, 48.7949, 1994.6076, 1840.3039, 2039.4403]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

