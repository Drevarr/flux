created: 20230318225613000
creator: Drevarr
modified: 20230705163522452
modifier: drevarr
tags: ChartData
title: 202303182256_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Phiicatasm", "Sp\u00edcy Cheese", "Jupi Jupi Jupi", "High Sorcer Baradun", "Aronorf Xideliesi", "Lord Erin The Wise", "Dark Sidiuz", "Legacy Of Mathus", "Nazhul Naxxremis", "Cerys Fireblade", "Rina Of Theros", "Morv\u00e4rth", "Xanvias Tseli", "Smol Gluvs", "Be\u00eb"];
const professions = ["Firebrand", "Mirage", "Berserker", "Dragonhunter", "Tempest", "Firebrand", "Weaver", "Scourge", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.1369, 0.0, 43.6049, 12.4089, 14.0931, 0.0, 0.0, 10.5625, 41.4417, 19.5652, 50.9884, 0.0, 23.7273, 107.1705, 0.0, 0.0, 7.9737, 4.4032, 47.2741, 13.2353, 98.7159, 24.713], [0.0, 14.0847, 64.0988, 59.2161, 76.5735, 0.0, 13.8958, 126.3417], [10.1887, 26.0238, 123.1728, 66.4714, 14.7843, 0.0, 0.0, 75.2604, 38.4917, 11.1208, 69.6047, 4.2946, 36.1613, 29.9185, 38.4412, 0.0], [15.566, 37.7976, 11.4915, 49.284, 31.526, 23.7549, 0.5254, 2.0385, 23.6562, 86.3917, 35.5507, 36.2907, 17.8839, 61.1136, 120.8182, 0.0, 11.9306, 0.0, 47.9194, 43.6222], [47.7642, 44.869, 11.2469, 30.6042, 29.2647, 6.5763, 0.0, 78.0917, 66.8357, 21.314, 13.9643, 0.0, 0.0, 0.0, 0.0, 0.0, 29.5, 7.9407, 41.1912, 146.5682, 0.0], [6.0943, 22.3929, 10.3559, 26.037, 64.5938, 32.9069, 9.3051, 0.0, 16.625, 53.7417, 32.9855, 39.8721, 8.0268, 27.0682, 89.5114, 2.1389, 3.6528, 0.6579, 31.2903, 24.5259, 44.4559, 137.8409, 1.5], [15.3208, 45.75, 3.7627, 90.9877, 48.2214, 88.5098, 0.0, 6.6154, 25.5104, 83.75, 96.3527, 68.1628, 40.8214, 0.0, 0.0], [67.4811, 284.037, 76.724, 160.8186, 47.2034, 37.7692, 135.4062, 134.4667, 0.0, 0.0, 34.4911, 75.1136, 55.2386, 7.6667, 8.2639, 38.2632], [24.8585, 0.0, 1.7288, 273.8025, 32.9714, 47.6225, 5.6949, 0.0, 11.9375, 59.2, 35.9662, 32.9302, 25.2143, 44.5682, 478.5227, 0.0, 6.0556, 53.5, 20.2258, 125.5111, 67.2206, 167.0909, 63.7593], [23.5, 103.2024, 1.6441, 297.0864, 41.599, 88.1912, 19.0847, 0.0, 95.4062, 138.0333, 70.2126, 91.5698, 32.5625, 143.9318, 517.2841, 18.8333], [22.5283, 53.3452, 2.9831, 153.2963, 119.5755, 42.1275, 20.5763, 0.0, 72.6458, 101.9, 6.5556, 120.9186, 4.0804, 181.3636, 191.2159, 0.0, 0.0, 35.9737, 29.2097, 128.9111, 53.5147, 198.4205, 32.3056], [18.717, 45.25, 20.5424, 232.284, 66.8802, 141.0441, 144.2712, 3.5, 44.3021, 142.7333, 78.058, 158.2442, 56.6696, 104.9773, 0.0, 8.5, 3.1389, 52.0526, 42.4355, 48.3704, 143.3824, 2.3295, 133.0185], [211.2099, 41.1432, 58.8775, 2.4407, 4.8462, 91.2292, 172.8917, 83.8261, 81.1744, 54.0, 448.6818, 205.9659, 1.8333, 6.5694, 57.9737, 84.2903, 172.8741, 122.6103, 227.9205], [9.1792, 73.744, 1.4576, 20.9383, 133.9271, 64.8922, 44.5593, 0.0, 26.8229, 71.6833, 29.4783, 72.093, 101.75, 166.8409, 241.7045, 7.4167, 0.0, 173.8947, 169.7419, 210.8667, 60.8309, 349.1705, 185.6389], [1.5849, 55.9524, 16.6949, 151.1235, 71.1823, 77.8775, 1.0169, 11.4231, 153.6042, 241.8167, 55.4396, 223.2907, 74.8214, 241.3636, 251.8295, 0.0, 3.125, 236.0263, 198.2258, 96.9333, 62.9191, 269.3295, 98.1481], [13.5755, 128.0476, 71.0847, 430.7531, 116.3698, 45.9265, 2.7288, 8.0769, 150.4062, 161.5583, 0.8647, 288.0233, 35.9821, 566.75, 793.9318, 1.3611, 5.2083, 317.8947, 269.2419, 155.5852, 154.3088, 339.2273, 88.287]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

