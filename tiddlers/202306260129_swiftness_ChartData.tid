created: 20230626012920000
creator: Drevarr
modified: 20230705163538693
modifier: drevarr
tags: ChartData
title: 202306260129_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Alarics Clone", "N\u00e8yp\u00e4", "Tribal S", "Imalou", "Kosair", "Ygyn", "Drevarr Moonwillow", "Traidoruns Maximus", "Astraea Lumena"];
const professions = ["Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.9722, 10.372, 6.3736, 34.2832, 16.4052, 0.0, 19.703, 22.7126, 0.0, 31.9248, 0.0, 24.738, 21.3646, 24.6922, 0.0], [14.382, 12.8423, 20.4455, 10.5995, 98.8232, 118.2614], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 154.9139, 0.0, 36.174, 0.0, 0.0, 0.0, 0.0, 0.0, 88.8111, 72.1701, 8.8941, 7.0656, 25.5516, 0.0, 0.0], [61.6712, 0.0, 69.5722, 19.7568, 139.1386, 28.1268, 175.3653, 65.0034, 12.6108, 25.5717, 70.2168, 5.6875], [62.5534, 60.3821, 14.1797, 156.8694, 14.8477, 70.7862, 0.0, 117.753, 31.9059, 52.644, 68.4632, 129.723], [85.1603, 184.6969, 39.4308, 33.1923, 75.6151, 0.0, 0.0, 129.159, 195.8859, 182.4326, 133.7942], [10.1653, 18.3751, 35.6281, 33.1888, 89.7876, 113.8262, 35.5042, 115.3553, 0.0, 21.5271, 15.4476, 71.1283, 24.88, 50.5675, 18.0826, 310.0273, 20.6856, 23.8368, 90.4948, 73.6053, 74.3366, 18.435], [118.9667, 16.277, 8.2863, 84.658, 81.4478, 120.0672, 74.0122, 305.8555, 130.0618, 50.6379, 19.674, 57.4746, 135.0594, 47.8584, 43.8151, 151.9276, 95.3802, 137.4131, 7.4658, 149.0831, 8.06, 24.972], [1.7075, 87.0703, 86.9022, 311.083, 200.2532, 50.197, 138.4184, 190.5817, 204.5342, 183.9653, 93.3408, 84.3522, 215.1198, 85.321, 94.7825, 265.5189, 155.3103]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

