created: 20230513000456000
creator: Drevarr
modified: 20230705163529823
modifier: drevarr
tags: ChartData
title: 202305130004_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Dalham", "Husky Guard", "Sub Train", "Aronorf Xideliesi", "Air One Com", "Ark Darkness", "Lucas Ryn", "Tika Fiery", "Bella Sassy", "Johosh The Great", "Solus Sanctus", "Koralia Danai"];
const professions = ["Dragonhunter", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 22.9824, 103.2504, 386.0024, 13.5811, 13.5299, 0.0, 0.0, 31.7376, 0.0, 0.0, 42.9542, 0.0, 0.0, 37.8925, 45.8842, 0.0, 26.315, 0.0, 0.0, 0.0, 30.3408, 0.0, 37.1309, 0.0, 0.0, 27.7115], [16.5197, 86.1235, 80.926, 459.1633, 4.6079, 55.6807, 0.0, 0.0, 38.016, 0.0, 114.0032, 0.0, 0.0, 46.1725, 80.5594, 0.0, 77.7365, 0.0, 88.6291, 0.0, 66.4205, 0.0, 96.7655, 0.0, 0.0, 29.5697], [238.9133, 71.5277, 386.4091, 907.5545, 58.3867, 0.0, 0.0, 0.0, 114.8544], [75.8246, 125.4758, 439.4296, 1090.6812, 28.7993, 84.2148, 30.1387, 0.0, 165.4272, 74.2348, 172.7795, 0.0, 180.0325, 236.1139, 31.9032, 172.994, 0.0, 53.3011, 76.8398, 179.4106, 0.0, 194.7097, 35.8875, 9.9095], [67.5302, 183.9398, 500.6575, 1406.6646, 20.1292, 98.0916, 0.0, 2.8272, 144.0, 8.5574, 154.2502, 55.8937, 0.0, 170.3725, 158.6995, 0.0, 135.9382, 69.8611, 19.314, 150.3869, 49.3717, 135.9325, 0.0, 0.0], [123.6211, 167.7312, 598.9833, 1775.1622, 40.6221, 180.6586, 17.7914, 41.0837, 286.3296, 0.0, 37.0041, 291.8963, 45.503, 0.0, 272.205, 260.064, 0.0, 293.6937], [172.5235, 274.9824, 322.5548, 1650.8335, 76.7576, 282.9133, 24.7709, 79.6973, 133.4016, 53.9865, 15.8709, 394.2285, 154.3516, 185.2075, 457.0675, 0.0, 231.1286, 0.0, 93.0893, 0.0, 265.2115, 24.0757, 271.0076, 24.0903, 45.5007], [127.4918, 232.4045, 740.6448, 1798.9507, 44.2599, 200.433, 0.0, 29.9237, 159.0336, 32.8474, 178.0888, 2.8226, 231.3152, 10.0333, 41.7064, 271.745, 451.1808, 37.9296, 259.4575, 0.0, 108.8986, 184.3155, 316.0618, 14.4927, 236.9843, 0.0, 0.0, 0.0], [186.7968, 417.7152, 906.6004, 2308.833, 86.1552, 156.5477, 77.5105, 64.0882, 209.2608, 57.9961, 53.8265, 32.3279, 325.9469, 24.1088, 139.7512, 250.24, 369.4118, 109.7064, 292.7539, 0.0, 129.8746, 68.5481, 308.3002, 29.6382, 246.4144, 18.7659, 37.8218, 31.2672], [166.5792, 355.2998, 933.5211, 2660.7235, 111.1954, 184.0411, 59.6049, 70.6651, 187.2576, 0.0, 55.946, 363.968, 59.0849, 114.994, 256.335, 280.8691, 71.9496, 204.8808, 0.0, 205.344, 54.3123, 291.5539, 67.5444, 286.9745, 0.0, 43.1714, 47.7611], [152.9626, 278.4499, 648.8849, 2438.0989, 74.5749, 209.1928, 23.7176, 144.1723, 304.8768, 125.4271, 36.3909, 11.7806, 445.4246, 39.6736, 68.0823, 412.6775, 418.7635, 37.1088, 332.7634, 0.0, 142.5926, 347.0141, 78.7829, 454.6263, 6.0291, 0.0, 101.0507], [231.8976, 323.689, 1023.1469, 2479.841, 97.4324, 341.3693, 21.7507, 71.796, 358.5024, 159.88, 368.6605, 52.7535, 23.932, 312.8, 607.7837, 154.44, 373.0414, 0.0, 139.9872, 40.5594, 382.5763, 342.3762, 28.0836, 45.0269]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

