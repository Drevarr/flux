created: 20230220220953000
creator: Drevarr
modified: 20230705163519673
modifier: drevarr
tags: ChartData
title: 202302202209_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Howls", "Skye Nightroad", "Drevarr Moonwillow", "Eibh\u00ebar", "Xyntharos", "Husky Guard", "Sumatra Satyricon", "Mac Aaroni", "Rozaalyna", "Venomina The Siren", "Blanco Padre Guard", "Zaylen Harker", "My Birthday Girl", "Bella Sassy", "Mistwalker Caelon", "Ryvalia Fazebringer", "Koralia Danai", "Jeckyll Mbs", "Sygaldry Verdandi", "Smol Daddy Tika", "Jupi Jupi Jupi", "Nemesis Savir", "Smol Gluvs", "Legacy Of Mathus", "Ravioli Fetabringer", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Daring Deathblade", "Demon Sekhmet", "Xanvias Tseli", "Dark Sidiuz", "Be\u00eb", "Rina Of Theros"];
const professions = ["Druid", "Scrapper", "Scrapper", "Chronomancer", "Vindicator", "Dragonhunter", "Soulbeast", "Tempest", "Scourge", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Berserker", "Dragonhunter", "Necromancer", "Scourge", "Berserker", "Firebrand", "Weaver", "Berserker", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.7538, 6.7997, 5.3341, 3.7222, 8.6604, 18.4138, 14.0309, 29.3448, 0.1078, 26.1477, 18.0455, 0.0], [0.0, 0.7515, 17.1203, 14.1296, 28.3276, 0.3208, 8.6207, 0.0], [0.3692, 3.5526, 6.2903, 23.4074, 4.2759, 5.3396, 1.931, 12.4286, 9.268, 2.5241, 8.2157, 0.5682, 3.6761, 0.7556, 0.0, 18.2529, 39.7179, 13.1111, 0.1795, 6.8333, 4.519, 5.2036, 13.5333, 1.843, 0.0, 13.1321, 34.9355, 15.5856], [1.0462, 2.5307, 6.2027, 0.1296, 1.5, 14.1321, 5.5862, 0.8571, 22.2474, 3.3862, 3.1961, 8.5682, 17.875, 0.0, 4.66, 3.023, 38.5385, 5.1111, 16.7949, 0.5729, 0.0, 5.1312, 2.9778, 10.2066, 0.0, 8.1887, 42.3226, 12.4414], [0.0, 2.9605, 14.8003, 0.0, 0.0, 0.0, 2.1034, 0.0, 0.2474, 0.1103, 0.0, 0.0, 14.6818, 0.0, 0.0, 0.0, 0.0, 9.2222, 18.7949, 0.1354, 0.4937, 10.6878, 0.0, 0.0, 0.2201, 7.9811, 0.6774, 1.0541], [3.4923, 5.8538, 12.4224, 3.5741, 13.6379, 12.4528, 4.4598, 0.0, 2.9794, 1.3586, 1.6569, 8.7386, 5.2727, 7.8444, 3.76, 13.0575, 0.0, 5.3148, 23.6154, 0.0, 0.557, 1.5566, 6.4, 7.9174, 0.0, 12.6981, 2.7097], [0.0, 4.7047, 6.0943, 7.537, 0.0, 0.0, 0.0, 0.0, 6.4433, 1.9103, 5.8627, 0.0, 3.1705, 0.0, 29.069, 0.0, 0.0, 83.6154, 4.2292, 30.2658, 14.1719, 30.9333, 5.595, 0.0, 23.1887, 3.0968, 10.5405], [1.6308, 1.2149, 6.5122, 0.2222, 65.4655, 0.0, 0.046, 0.0571, 23.7629, 0.6966, 18.6765, 90.0455, 10.2784, 0.0, 10.2529, 2.7436, 20.5926, 0.0, 13.625, 2.0588, 0.0, 6.0579, 0.0, 47.5283, 38.0, 2.045], [10.0863, 16.6978, 0.9815, 48.2069, 0.0, 0.0, 1.9278, 0.2345, 44.5196], [0.0, 4.2822, 18.905, 0.0, 0.0, 0.0, 3.4713, 0.0, 12.2784, 16.269, 6.3529, 10.3523, 0.875, 0.0, 0.0, 0.0, 0.0, 4.5185, 25.6154, 0.0, 0.0, 0.0, 11.4222, 2.2314, 0.0, 0.0, 2.6774, 4.6306], [0.0, 20.6725, 14.6756, 0.0, 0.0, 13.1321, 0.0, 0.0, 4.0, 0.0, 0.0, 0.0, 1.0568, 0.0889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0769, 0.0, 0.0, 0.0, 3.1132, 10.3548, 18.8108], [4.4769, 3.4605, 22.1299, 0.0, 0.0, 0.0, 3.3563, 19.4286, 7.9072, 0.0, 4.4902, 2.4545, 17.858, 0.0, 5.069, 0.0, 0.0513, 1.0729, 0.0, 3.9095, 0.0, 33.2479, 0.0, 4.6226, 7.982], [6.9385, 0.6389, 13.3794, 0.7778, 57.0862, 30.7925, 0.3333, 0.0, 27.1959, 4.1241, 28.2941, 1.8523, 4.2102, 3.5111, 1.2, 5.1724, 102.5128, 2.8704, 27.8205, 2.9479, 0.0, 11.5566, 1.2778, 4.7769, 0.4591, 2.0, 16.5806, 53.7117], [0.0, 0.6082, 28.2138, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1856, 0.0, 23.3725, 7.6477, 2.1136, 0.0, 0.0, 0.4483, 37.8205, 0.0, 0.0, 0.0, 0.0, 6.4661, 0.0, 18.1736, 0.0, 0.0, 16.4839, 3.045], [3.1231, 14.5731, 14.801, 0.0, 46.1207, 11.3678, 0.0, 3.6598, 13.8414, 2.1765, 10.0795, 0.0, 0.0444, 0.0, 0.0, 0.0, 9.6852, 0.0, 13.25, 0.0253, 37.6923, 0.0, 8.6529, 0.0, 22.7736, 6.5161, 0.0811], [0.0, 6.3509, 29.2584, 5.537, 0.0, 1.7736, 1.4598, 128.2, 2.8144, 1.1862, 3.9118, 2.875, 6.5, 0.0, 3.52, 3.9655, 0.0, 0.0, 0.7692, 3.1146, 2.1139, 2.3756, 1.8444, 0.0, 0.0, 5.6226, 0.0, 15.1171], [0.9692, 3.9839, 36.582, 1.5, 0.0, 5.1698, 0.0, 0.0, 2.0828, 0.0, 5.3295, 2.8466, 0.1778, 0.0, 0.4598, 7.9487, 9.8704, 7.9231, 0.0, 0.0, 19.0905, 0.0, 0.0, 0.0, 3.7925, 11.5484, 0.0], [0.0, 0.7237, 40.4543, 25.0185, 45.2586, 5.6981, 4.5977, 0.0, 5.6828, 37.3529, 0.0, 13.4602, 0.0, 0.0, 7.3908, 6.2821, 7.6111, 4.7917, 0.0, 2.6018, 2.1667, 4.5372, 0.0, 0.8113, 0.0, 0.0], [6.4488, 25.5486, 0.0, 0.0, 0.0, 22.2184, 2.3714, 6.2784, 0.0, 0.0, 44.7955, 17.4943, 6.4, 34.0575, 85.5897, 0.0, 38.3846, 63.6667, 27.1772, 7.4796, 2.5667, 0.0, 0.0, 50.5283, 181.3871, 1.2883], [35.2462, 6.2617, 40.2717, 1.2963, 7.3276, 1.4151, 2.2989, 18.1143, 34.6289, 0.5448, 74.9608, 51.5227, 0.0, 0.0, 2.94, 10.1034, 37.9744, 26.5938, 7.7975, 5.181, 10.2556, 7.5537, 0.0, 1.6415, 7.8649], [19.3846, 17.5205, 33.9065, 5.7593, 7.6379, 0.0, 12.1839, 0.0, 45.5258, 17.6897, 17.0, 45.3182, 31.9602, 15.8667, 6.88, 9.1609, 19.7436, 0.0, 15.0513, 11.6667, 4.2152, 7.4344, 2.2444, 14.4298, 0.0, 33.1321], [294.6552, 0.0, 0.0, 4.9375, 0.0, 112.7783, 286.2444, 76.9091, 28.3711, 111.7925], [17.2615, 10.3085, 33.6622, 18.1667, 88.3448, 16.3019, 3.2529, 0.0, 25.0309, 34.2966, 22.6863, 39.8068, 11.0398, 9.6667, 3.98, 11.4598, 42.0, 29.2963, 122.8718, 7.1562, 0.8101, 30.5882, 65.0889, 40.0909, 5.8176, 18.0566, 3.3871, 84.7477], [0.0, 10.864, 62.7944, 31.037, 45.2241, 72.283, 0.0, 0.0, 24.8454, 1.7931, 12.8529, 12.0114, 10.5682, 0.9333, 7.4, 12.8966, 10.4074, 0.0, 0.0, 0.0, 32.9005, 5.7111, 27.6777, 0.3208, 6.7547, 86.871, 6.6937], [71.7846, 13.8494, 28.8805, 81.0926, 20.8793, 70.5472, 16.5057, 3.8571, 47.6082, 15.5172, 22.2941, 34.625, 6.983, 65.2889, 14.56, 74.0575, 75.8205, 75.7593, 3.7179, 48.1146, 30.3671, 29.2443, 83.3667, 69.2893, 1.9371, 1.4717, 135.2258, 50.964], [13.1692, 19.405, 51.6214, 8.3519, 15.3276, 3.2075, 2.2989, 0.0, 79.1959, 7.1172, 9.7059, 31.0341, 0.0, 10.4667, 0.0, 88.4023, 7.1667, 145.9487, 39.3854, 32.9367, 15.8643, 31.0556, 32.9504, 1.8428, 69.7925, 102.5484, 51.1532], [0.0, 21.8626, 79.2932, 2.8333, 14.3103, 3.1321, 0.0, 39.3714, 45.4433, 0.9103, 2.2745, 18.5227, 16.267, 20.0889, 2.9655, 0.0, 1.0741, 3.5128, 4.8333, 6.0886, 17.4977, 10.7222, 49.3223, 0.0, 3.4717, 0.0, 0.0], [0.0, 36.92, 62.4253, 158.0, 138.9815, 246.1795, 56.6458, 15.6203, 56.095, 31.0778, 370.8595, 25.4528, 17.6604, 331.5161, 408.6036], [0.0, 33.4649, 77.1017, 17.9815, 20.0172, 0.0, 0.0, 0.0, 45.5155, 13.1448, 5.8922, 48.1818, 32.4943, 0.0, 0.0, 32.1724, 7.5897, 0.0, 32.7692, 26.1146, 1.3797, 40.6561, 22.7778, 35.1157, 6.761, 32.3396, 0.0], [0.0, 25.5117, 84.4952, 22.3519, 0.0, 0.0, 16.1034, 0.0, 39.4536, 8.1586, 0.0, 42.375, 1.2045, 0.0, 3.76, 22.092, 0.1795, 41.1667, 58.7692, 11.5208, 6.0506, 49.1538, 0.0, 88.0909, 9.4654, 21.7736, 1.9355, 23.5225], [4.5538, 40.8026, 82.1633, 36.2759, 0.0, 0.0, 11.2857, 87.3814, 16.8483, 0.951, 56.1932, 21.5057, 12.0889, 5.94, 0.0, 7.4359, 57.9259, 75.0769, 12.4167, 27.0253, 24.0317, 17.7222, 26.0744, 13.4465, 0.0, 0.0], [21.7851, 84.0186, 5.2593, 44.7586, 9.0943, 7.4253, 0.0, 35.0619, 16.931, 18.5686, 13.3295, 57.1818, 275.6667, 9.46, 28.7011, 34.8205, 4.2963, 32.359, 7.8125, 6.3797, 27.0045, 2.2556, 34.1983, 0.6289, 14.1698, 93.2581, 97.7748], [4.7077, 27.4868, 75.2376, 142.8704, 97.1897, 31.6415, 35.5632, 72.2286, 110.701, 21.731, 58.2941, 75.6591, 49.0227, 7.7111, 62.2, 22.4368, 79.8205, 55.7037, 327.359, 61.2917, 4.5823, 60.1041, 8.1111, 16.8264, 15.7044, 26.2264, 88.4194, 217.973]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

