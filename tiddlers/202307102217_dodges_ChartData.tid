created: 20230710221759000
creator: Drevarr
tags: ChartData
title: 202307102217_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Zaedy Zae", "Rosreipp", "Daphne Agla\u00e9", "Philip Poundhouse", "Cat Wigglebooty", "Legacy Of Mathus", "Gabe Malhorn", "Artakama Nahid", "Venomina The Siren", "Bella Sassy", "Tootsie Pop Rocks", "Konztantin\u00eb", "K\u00e2 \u00d4tik R\u00e6j", "Primal Clone", "Nidircc", "Il Kurai Il", "Tika Fiery", "Jrluvschu", "Arriasa", "Be\u00eb", "Xanvias Einzbern", "No Reserv\u00e9", "Fribble Bibble", "Ryvalia Fazebringer", "Black Raspberry Pie", "Drevarr Moonwillow", "Koralia Danai", "Sub Train", "Ateriuz", "Tegan Parker", "Lord Erin The Wise", "Crusader Siolith", "Rangu Elfdrake", "Kary\u00edna", "Mister Jekyll", "Melli Dragonswrath", "Cyclotechnist Farra", "Johosh The Mighty", "Belvyn Brightblade", "Sister Elonith", "Rozaalyna", "Newtype Khan", "Irin The Undeath", "Eibh\u00ebar", "Glorious Gluvs", "Solus Sanctus", "Inedible Plant", "Mistwalker Cael", "Etcheryy"];
const professions = ["Firebrand", "Druid", "Weaver", "Reaper", "Herald", "Scrapper", "Berserker", "Firebrand", "Tempest", "Tempest", "Firebrand", "Scrapper", "Herald", "Berserker", "Chronomancer", "Tempest", "Scourge", "Firebrand", "Virtuoso", "Druid", "Scourge", "Berserker", "Vindicator", "Scrapper", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Tempest", "Weaver", "Firebrand", "Firebrand", "Vindicator", "Reaper", "Berserker", "Scrapper", "Berserker", "Firebrand", "Berserker", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Vindicator", "Virtuoso"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 0, 1, 0, 0, 4, 0, 2, 1, 1, 0, 7, 6, 2, 3, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 5, 4, 0, 4, 4, 1, 4, 1, 1, 0, 2], [23, 1, 2, 1, 1, 0, 7], [7, 0, 0, 0, 0, 1, 1, 1, 1, 2, 0, 1, 5, 2, 1, 2, 4, 2, 3, 1, 2], [4, 8, 7, 2, 4, 2, 6, 1, 2], [2, 1, 1, 3, 14, 1, 1, 2, 5, 2, 1, 3, 4, 1], [18, 0, 1, 3, 3, 2, 0, 9, 1, 3, 0, 0, 3, 3], [18, 3, 4, 5, 2, 2, 3, 3, 1, 5], [3, 0, 0, 0, 1, 0, 1, 4, 0, 3, 2, 1, 1, 10, 0, 3, 0, 6, 2, 2, 3, 3, 2], [8, 1, 0, 5, 0, 0, 4, 1, 0, 1, 2, 6, 2, 2, 1, 4, 1, 2, 1, 4, 2], [3, 0, 0, 0, 4, 0, 1, 6, 0, 4, 1, 0, 1, 6, 5, 2, 3, 4, 2, 1, 1, 3, 2, 1], [9, 0, 0, 1, 3, 0, 6, 0, 0, 2, 0, 0, 14, 0, 0, 4, 4, 1, 1, 1, 1, 3], [12, 0, 0, 0, 0, 1, 0, 0, 3, 1, 1, 2, 11, 2, 4, 4, 3, 1, 2, 3, 3], [26, 1, 1, 8, 17], [6, 1, 0, 0, 3, 0, 2, 7, 0, 4, 0, 0, 0, 5, 6, 4, 3, 3, 1, 1, 3, 3, 4], [1, 2, 4, 1, 3, 11, 6, 4, 4, 5, 1, 0, 3, 7, 1, 4], [9, 0, 0, 0, 3, 1, 0, 6, 1, 2, 3, 2, 1, 10, 3, 6, 0, 2, 2, 4, 1, 4], [7, 0, 0, 0, 5, 0, 2, 3, 0, 3, 1, 0, 3, 10, 2, 2, 3, 8, 1, 2, 3, 3, 0, 3], [0, 5, 4, 1, 4, 27, 4, 4, 7, 3, 2], [6, 1, 0, 0, 3, 1, 2, 8, 0, 1, 3, 3, 1, 11, 5, 2, 1, 2, 2, 1, 3, 4, 1, 2], [3, 0, 0, 0, 3, 0, 1, 8, 0, 2, 1, 0, 1, 11, 3, 6, 2, 6, 2, 2, 2, 5, 7], [12, 1, 0, 0, 5, 0, 1, 6, 0, 1, 0, 0, 2, 8, 4, 6, 2, 5, 2, 3, 1, 6, 2], [14, 0, 0, 0, 2, 0, 2, 8, 0, 2, 2, 1, 2, 8, 4, 5, 3, 6, 0, 2, 3, 4], [14, 0, 0, 1, 7, 1, 3, 7, 0, 3, 0, 1, 2, 6, 4, 2, 0, 2, 0, 2, 4, 6, 5], [2, 1, 0, 0, 3, 0, 2, 7, 0, 4, 2, 0, 1, 14, 1, 2, 6, 6, 1, 3, 3, 6, 0, 7], [10, 0, 0, 0, 7, 1, 1, 11, 0, 2, 2, 1, 1, 13, 3, 1, 4, 3, 0, 1, 2, 3, 1, 4], [13, 1, 0, 1, 5, 0, 1, 6, 1, 3, 1, 2, 1, 9, 3, 2, 3, 5, 2, 0, 3, 6, 1, 6], [10, 1, 0, 5, 0, 0, 9, 1, 3, 1, 1, 0, 13, 7, 3, 2, 5, 1, 0, 2, 3, 8], [13, 0, 1, 5, 0, 0, 11, 1, 1, 0, 2, 0, 17, 4, 0, 5, 4, 1, 2, 3, 3, 6], [0, 5, 1, 2, 10, 0, 4, 3, 1, 2, 21, 3, 5, 2, 2, 1, 2, 4, 6, 1, 5], [14, 1, 0, 5, 1, 3, 12, 2, 3, 1, 3, 2, 18, 4, 1, 4, 1, 0, 0, 2, 5, 0], [21, 0, 0, 0, 8, 1, 0, 6, 2, 2, 3, 2, 2, 13, 1, 3, 6, 5, 1, 1, 2, 4], [10, 1, 0, 3, 7, 1, 1, 7, 0, 4, 5, 2, 4, 16, 4, 3, 6, 3, 0, 2, 2, 2, 4], [15, 4, 8, 2, 5, 15, 2, 4, 2, 2, 2, 16, 3, 2, 4, 1, 0, 0, 0], [31, 0, 1, 1, 8, 1, 3, 2, 0, 1, 0, 0, 1, 9, 5, 4, 5, 4, 2, 1, 3, 3, 2, 1], [24, 0, 1, 0, 15, 0, 2, 10, 0, 3, 2, 0, 3, 15, 6, 4, 0, 1, 1, 2, 2, 4, 2], [10, 0, 1, 0, 1, 2, 12, 3, 3, 3, 1, 3, 20, 6, 5, 4, 4, 3, 2, 4, 4, 2, 4], [12, 0, 1, 6, 3, 3, 12, 2, 3, 4, 2, 3, 18, 4, 4, 3, 4, 3, 3, 2, 6, 2], [22, 0, 0, 0, 12, 0, 3, 14, 0, 3, 2, 1, 2, 19, 6, 2, 5, 4, 0, 0, 5, 7, 0, 6], [30, 3, 0, 0, 13, 0, 2, 13, 2, 4, 3, 3, 3, 23, 4, 5, 4, 3], [21, 0, 0, 1, 9, 1, 1, 12, 1, 4, 4, 2, 3, 19, 4, 4, 5, 3, 2, 2, 4, 8, 1, 5], [15, 2, 0, 0, 9, 0, 2, 12, 2, 3, 0, 3, 2, 20, 5, 7, 8, 9, 2, 4, 4, 6, 2, 3], [25, 1, 1, 0, 13, 2, 4, 15, 2, 2, 5, 3, 3, 20, 2, 6, 3, 9, 0, 0, 3, 4, 3], [30, 1, 1, 2, 12, 3, 3, 13, 2, 3, 5, 3, 3, 16, 2, 6, 6, 3, 2, 2, 5, 1, 3], [28, 1, 0, 3, 9, 1, 2, 14, 1, 5, 3, 3, 2, 16, 3, 3, 3, 6, 3, 2, 4, 8, 1, 7], [31, 1, 0, 3, 9, 0, 5, 15, 3, 4, 1, 2, 4, 18, 2, 5, 4, 8, 1, 2, 2, 3, 1, 5], [28, 1, 0, 4, 13, 4, 3, 3, 0, 4, 4, 4, 1, 18, 8, 6, 7, 6, 3, 4, 2, 8, 1, 7], [25, 2, 0, 5, 8, 1, 4, 24, 0, 4, 2, 0, 1, 20, 6, 3, 6, 7, 2, 2, 3, 12, 9], [44, 1, 1, 5, 16, 2, 5, 2, 2, 5, 4, 2, 2, 21, 2, 3, 10, 9, 2, 1, 3, 4, 2, 8], [41, 1, 1, 1, 23, 3, 7, 17, 1, 6, 4, 3, 4, 30, 5, 7, 6, 7, 1, 3, 6, 7, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

