created: 20230325172304000
creator: Drevarr
modified: 20230705163523016
modifier: drevarr
tags: ChartData
title: 202303251723_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Sumatra Satyricon", "Newtype Khan", "Oo Dads Mad", "Smol Gluvs", "Rozaalyna", "Sassy Daddy Demon", "Panther B Me", "What Charr U Saying", "Cerys Fireblade", "Kalenthian", "Kmpek", "Sp\u00edcy Cheese", "K\u00f4sair", "Be\u00eb", "Xyntharos", "Lord Erin The Wise", "Legacy Of Mathus", "Fruji", "Mike The Archmagus", "Xanvias Einzbern", "Sofya De Nova"];
const professions = ["Spellbreaker", "Soulbeast", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Scourge", "Berserker", "Berserker", "Mechanist", "Vindicator", "Berserker", "Berserker", "Scourge", "Vindicator", "Weaver", "Berserker", "Scrapper", "Weaver", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[286.0382, 181.2364, 163.6944, 0.0, 0.0, 0.0, 140.3956, 119.1429, 136.6078, 103.058, 156.2911, 193.2115, 186.6176, 74.1096, 126.2, 40.0, 51.6077, 31.5194, 186.5495], [0.0, 0.0, 12.1056, 94.957, 166.9522, 276.6875, 0.0, 110.5845, 105.8481, 106.4615, 83.1471, 407.2329, 257.3857, 41.6435, 106.3481, 167.1456, 107.8055], [166.0255, 86.2182, 284.6667, 0.0, 11.7111, 6.7742, 179.7532, 223.1875, 134.5686, 171.0918, 229.2911, 277.0192, 119.3235, 119.8493, 214.9857, 32.7913, 34.0829, 31.3786, 103.0956], [259.4777, 100.0788, 234.3611, 0.0, 0.0, 19.6022, 166.1321, 382.75, 143.6863, 290.7488, 467.3924, 784.3077, 78.9412, 438.1438, 231.7286], [335.051, 138.5455, 91.6667, 17.8537, 20.2778, 62.7634, 101.634, 488.25, 72.7451, 173.0242, 482.2278, 88.7308, 14.5294, 279.9795, 899.4857, 13.6391, 46.7514, 45.8252, 243.5119], [248.5478, 88.9515, 0.0, 116.5111, 78.1613, 480.489, 408.6696, 80.3922, 280.343, 80.3291, 0.0, 250.4795, 1321.6429, 0.0, 26.9834, 42.9709, 238.1399], [809.5541, 224.0303, 208.4722, 0.0, 203.9667, 0.0, 107.3402, 1067.4018, 302.902, 640.0048, 1000.2785, 56.0577, 224.8824, 630.137, 960.6429, 3.0783, 61.895, 200.2913, 687.3959], [432.5924, 132.1697, 357.0556, 0.0, 123.2889, 17.7849, 476.4153, 453.2589, 457.3922, 378.8454, 419.2911, 20.3846, 0.0, 19.5068, 551.0429, 89.4304, 93.5193, 245.2961, 336.7577], [200.5605, 295.1818, 83.4959, 104.5333, 54.957, 538.3349, 458.7411, 169.4902, 463.8986, 307.9747, 587.4808, 0.0, 620.1164, 1483.4286], [517.8344, 338.1212, 169.0, 0.0, 37.0389, 127.7527, 497.0137, 138.9286, 553.5294, 545.4928, 241.1013, 657.75, 21.0588, 135.9247, 1020.3429, 58.0174, 207.5249, 365.0243, 435.9215], [197.6889, 0.0, 447.4351, 582.9911, 851.8235, 352.8357, 608.3165, 852.9615, 175.6176, 763.9041, 880.0857, 133.4348, 422.0884, 345.0194, 443.2901], [825.7134, 298.903, 276.6111, 27.3415, 160.3667, 0.0, 379.3349, 544.4643, 512.3529, 484.7295, 835.2532, 0.0, 900.5294, 532.0411, 1701.2714, 181.5826, 170.663, 282.5874, 473.7406], [752.8089, 772.1818, 70.5778, 497.4039, 232.4375, 322.2941, 775.5797, 1538.8101, 58.0769, 330.8235, 1190.5, 1708.3, 70.9304, 20.2983, 186.2136, 379.0887], [772.4713, 250.4121, 225.5833, 0.0, 105.9889, 396.4516, 1105.003, 1001.8036], [620.5987, 322.6242, 417.9722, 69.1707, 42.7667, 637.6344, 742.3303, 648.1518, 464.7647, 588.3671, 811.1519, 152.2115, 89.0882, 727.1096, 543.6857, 174.0304, 169.0442, 135.5388, 526.2901], [752.6369, 355.4485, 106.6944, 85.2114, 75.4556, 603.8064, 651.75, 340.0, 907.7053, 920.5316, 251.75, 37.2059, 878.7329, 1678.0714, 143.3565, 186.7127, 483.8883, 661.7509], [789.9236, 711.7697, 271.2222, 18.9431, 135.2389, 473.7957, 584.0539, 577.4643, 666.7059, 740.4493, 295.6962, 74.4231, 210.2059, 808.3904, 1833.5571, 139.3783, 454.9558, 508.4029, 1019.4744], [750.9936, 348.0909, 342.3889, 46.9675, 291.5889, 0.0, 904.0888, 663.9821, 372.9216, 1013.8019, 663.3165, 384.1154, 0.0, 290.3973, 1252.3714, 107.3435, 329.2155, 258.1117, 752.9659], [1302.3057, 594.7515, 616.0833, 205.3333, 192.0611, 0.0, 1149.5968, 350.0179, 225.3137, 907.3913, 958.7975, 1051.3269, 0.0, 745.5205, 599.9, 160.3261, 131.1823, 139.9903, 467.2184], [685.9427, 641.2848, 129.4167, 107.3171, 110.9056, 0.0, 1123.3189, 1663.9554, 164.5882, 1473.0676, 946.2405, 560.6731, 271.4118, 267.4795, 1780.8714, 391.8391, 202.5801, 517.1311, 1101.7713], [842.9236, 683.5273, 986.4444, 38.3496, 67.2111, 430.043, 907.6135, 1998.4911, 293.3137, 1867.7343, 2304.0, 580.2115, 98.8824, 1311.3973, 169.6429, 222.1652, 299.232, 584.9757, 1696.5734], [1055.0764, 668.0545, 495.3889, 146.7073, 115.8, 779.1828, 1943.5049, 1615.9554, 760.8824, 1114.2802, 536.6709, 211.5385, 612.8082, 532.0, 237.6087, 484.4365, 812.5583, 793.7304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

