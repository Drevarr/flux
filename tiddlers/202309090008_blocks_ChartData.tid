created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Amiti\u00e9l", "Cupi Cupita", "High Sorcer Baradun", "Adrinz", "Th\u00f6rfinn Stormcloak", "Graumas", "Gamora Titus", "Mew Mew", "Wren Raveness", "Seiker Novus Terra", "Loganlek", "Lucky Luprac\u00e1n", "Heals For Daddy", "Trooobi", "Permanent Dawn", "Sofya De Nova", "Philip Poundhouse", "Brutal Araden", "Snugglies Wugglies", "Mort\u00e4rion", "Legoh Brave", "K\u00e2 \u00d4tik R\u00e6j", "Kahlyanne", "Regis Hawkesburne", "Daphne Agla\u00e9", "J\u00e2sm\u00eene", "Jimbo The Pleb", "Oo Dads Mad", "Lord Erin The Wise", "Air One Com", "Rina Of Theros", "No Reserv\u00e9", "Raziel Umbra", "Glorious Gluvs", "Gestern Yesteryear", "Be\u00eb", "Sub Train", "K\u00f4sair", "Xanvias Einzbern", "Black Raspberry Pie", "Tegan Parker", "Mister Jekyll", "Koralia Danai", "Elon Illusionblade", "Solus Luxes", "Firebrand pl1-2628", "Tribal S", "Mistwalker Cael", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Firebrand", "Herald", "Tempest", "Firebrand", "Berserker", "Thief", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Berserker", "Scrapper", "Druid", "Herald", "Weaver", "Tempest", "Herald", "Renegade", "Virtuoso", "Scrapper", "Tempest", "Berserker", "Tempest", "Berserker", "Reaper", "Tempest", "Berserker", "Berserker", "Weaver", "Firebrand", "Reaper", "Vindicator", "Chronomancer", "Berserker", "Firebrand", "Reaper", "Firebrand", "Spellbreaker", "Berserker", "Chronomancer", "Tempest", "Reaper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Herald", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 28], [0, 0, 21, 4, 5, 0], [0, 0, 16, 1, 0, 5, 6, 3], [31], [0, 1, 17, 1, 7, 4, 4], [3, 0, 4, 1, 6, 0, 2, 0, 1, 23], [1, 6, 5, 0, 28], [1, 1, 3, 9, 1, 3, 3, 0, 22], [0, 0, 8, 0, 0, 3, 2, 4, 0, 5, 5, 0, 17], [3, 10, 3, 0, 4, 8, 12, 0, 5, 0], [0, 2, 14, 2, 0, 4, 5, 4, 0, 1, 4, 0, 10], [0, 2, 4, 3, 0, 0, 5, 6, 1, 5, 3, 0, 20], [0, 5, 27, 2, 0, 9, 3, 5], [0, 1, 29, 0, 5, 9, 9], [0, 0, 2, 0, 0, 5, 3, 7, 1, 4, 5, 0, 28], [0, 2, 21, 1, 0, 2, 1, 6, 0, 4, 1, 2, 16], [0, 2, 17, 1, 4, 1, 8, 0, 0, 24], [0, 2, 18, 1, 0, 3, 4, 5, 0, 1, 2, 1, 20], [0, 0, 19, 1, 0, 3, 4, 4, 0, 4, 4, 0, 20], [0, 0, 27, 0, 0, 3, 0, 4, 1, 4, 4, 0, 17], [0, 1, 19, 3, 0, 0, 1, 8, 0, 7, 6, 0, 17], [1, 4, 30, 1, 5, 4, 6, 0, 4, 1, 0, 13], [1, 2, 23, 0, 2, 2, 5, 1, 4, 5, 0, 25], [0, 2, 34, 1, 0, 5, 6, 7, 0, 3, 2, 0, 13], [0, 4, 28, 1, 6, 6, 12, 1, 2, 1, 1, 13], [1, 6, 51, 8, 7, 12], [1, 4, 45, 2, 0, 9, 9, 11, 1, 4, 3, 2], [1, 6, 53, 3, 8, 8, 19], [1, 3, 40, 1, 11, 7, 14, 1, 1, 2, 1, 24], [1, 4, 38, 2, 13, 8, 15, 1, 4, 2, 0, 18], [0, 4, 52, 2, 0, 7, 10, 13, 0, 5, 3, 1, 13], [0, 3, 44, 2, 0, 9, 3, 10, 0, 7, 5, 2, 29], [0, 1, 28, 2, 0, 13, 6, 21, 0, 6, 9, 1, 29], [6, 56, 4, 0, 6, 5, 17, 0, 5, 4, 0, 14], [1, 8, 61, 5, 11, 10, 16, 2, 7, 5, 35], [1, 5, 74, 3, 0, 13, 9, 20, 5, 6, 5, 1, 26], [2, 9, 70, 5, 0, 12, 7, 26, 4, 6, 4, 0, 29], [0, 6, 75, 3, 0, 13, 9, 25, 5, 8, 0, 36], [0, 5, 87, 3, 15, 6, 35, 0, 10, 7, 0, 13], [1, 8, 66, 6, 11, 17, 22, 1, 3, 7, 0, 40], [1, 4, 85, 4, 10, 11, 21, 2, 5, 11, 0, 36], [1, 6, 75, 4, 0, 10, 12, 29, 9, 7, 4, 0, 36], [4, 80, 3, 13, 9, 30, 1, 11, 9, 0, 36], [0, 5, 101, 3, 0, 15, 10, 19, 1, 5, 8, 0, 30], [1, 6, 86, 7, 0, 10, 9, 31, 1, 8, 6, 1, 32], [1, 8, 86, 4, 14, 13, 26, 3, 10, 4, 0, 33], [1, 6, 88, 5, 0, 10, 10, 33, 0, 8, 10, 1, 40], [0, 6, 90, 4, 0, 11, 9, 36, 0, 11, 7, 0, 45], [1, 5, 99, 3, 15, 16, 24, 1, 5, 7, 0, 47], [1, 12, 100, 5, 0, 20, 17, 35, 1, 4, 3, 0, 53]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

