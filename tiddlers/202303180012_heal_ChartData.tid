created: 20230318001239000
creator: Drevarr
modified: 20230705163522360
modifier: drevarr
tags: ChartData
title: 202303180012_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Zadie Miststep", "Drevarr Moonwillow", "Solus Dominus", "\u00c1rkantor"];
const professions = ["Tempest", "Tempest", "Scrapper", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[258.7621, 283.8, 172.7708, 38.0317, 80.4262, 114.9701, 183.75, 93.8936, 110.3692, 53.5636, 850.8902, 18.1188, 93.4558, 66.2333, 402.9114, 251.2222, 163.7869, 200.0, 263.6449, 371.2968], [448.5828, 33.975, 206.2857, 702.862, 662.5385, 47.2623, 0.0, 161.3636, 82.8298, 70.0, 270.6364, 8.4118, 1288.4559, 536.8515, 3.2877, 123.517, 230.1444, 157.962, 192.8395, 44.8689, 0.0, 69.8421, 93.9626, 318.1301], [664.4241, 79.1, 381.3289, 1951.0385, 750.6923, 227.7869, 36.6866, 692.4545, 993.7766, 923.4154, 301.5636, 236.3922, 1721.5025, 346.4158, 130.8219, 74.2109, 319.9778, 381.1519, 300.9012, 554.0164, 25.2083, 72.7193, 80.7103, 874.4612], [277.2966, 17.825, 235.4884, 2573.9796, 472.7692, 189.4262, 8.597, 312.5227, 339.3085, 244.8923, 546.0364, 110.9804, 2005.8785, 275.7822, 8.0274, 58.415, 175.3778, 667.6709, 2.3457, 387.8525, 219.3333, 589.3271, 934.6461], [1066.1586, 146.775, 786.9302, 4123.448, 2226.2308, 724.7705, 176.791, 789.3182, 1199.8085, 836.6615, 1148.6, 141.3333, 3685.7288, 126.297, 101.9452, 164.1224, 939.7444, 1055.4177, 720.1475, 139.3178, 1931.8447]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

