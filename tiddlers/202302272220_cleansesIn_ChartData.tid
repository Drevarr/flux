created: 20230227222028000
creator: Drevarr
modified: 20230705163520351
modifier: drevarr
tags: ChartData
title: 202302272220_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Echo Monchichi", "Oo Dads Mad", "Rozaalyna", "Legacy Of Mathus", "Dark Sidiuz", "Newtype Khan", "M A C U M B E I R O", "Iris S K", "Etchery Howls", "Sofya De Nova", "Ark Darkness", "Blanco Padre Guard", "Gavann", "\u00c1rk\u00e1ntor", "Rina Of Theros", "Jupi Jupi Jupi", "What Charr U Saying", "Mike The Archmagus", "Lord Erin The Wise", "Black Raspberry Pie", "Nelliel T", "Husky Guard", "Primal Clone", "Smol Gluvs", "Cat Wigglebooty", "Zaylen Harker", "Mistwalker Caelon", "Koralia Danai", "Be\u00eb", "Mac Aaroni", "Kahless The Drunk", "Tegan Parker", "Ravioli Fetabringer", "Fribble Bibble", "Sygaldry Verdandi", "Eibh\u00ebar", "My Birthday Girl", "Bella Sassy", "Jeckyll Mbs", "Xanvias Tseli", "Venomina The Siren", "High Sorcer Baradun", "Zadie Miststep", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Tootsie Pop Bringer", "Arcanophage Farra", "Tribal S", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Renegade", "Spellbreaker", "Scourge", "Berserker", "Scourge", "Spellbreaker", "Weaver", "Spellbreaker", "Druid", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Scourge", "Dragonhunter", "Berserker", "Weaver", "Weaver", "Chronomancer", "Scourge", "Dragonhunter", "Chronomancer", "Scourge", "Scrapper", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Berserker", "Tempest", "Tempest", "Tempest", "Berserker", "Berserker", "Scrapper", "Spellbreaker", "Druid", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3139, 0.0781], [0.0199, 0.4781, 0.8374, 0.5244, 0.3425, 0.8125, 0.1923, 0.3421, 1.0667, 0.0496, 1.125], [0.1192, 0.1713, 0.5285, 0.4268, 0.3699, 0.9167, 0.4231, 0.3947, 0.027, 0.2079, 0.2366, 0.0], [0.0132, 0.1076, 0.3659, 0.561, 0.5205, 0.4792, 0.6154, 0.2895, 0.3333, 0.0496, 0.5312, 0.0946, 0.2488, 0.1398], [0.0861, 0.1633, 0.3415, 0.0, 0.2439, 0.3425, 1.0625, 0.4231, 0.4737, 0.1081, 0.2944, 0.129, 0.0], [0.1075, 0.0185, 0.1783, 0.0222, 0.234, 0.3764, 0.0625], [0.0878, 0.1624, 0.0215, 0.0, 0.1083, 0.0444, 0.0957, 0.2759, 0.0625], [0.0946, 0.2313, 0.3011, 0.1529, 0.0444, 0.1702, 0.2549, 0.1094], [0.0265, 0.3586, 0.6829, 0.3415, 0.3836, 0.6042, 0.6538, 0.8947, 0.9, 0.0083, 0.7188, 0.0676, 0.229, 0.1398, 0.0926, 0.1019, 0.1556], [0.0, 0.061, 0.3125, 0.0769, 0.0526, 0.2333, 0.0, 0.1875, 0.0068, 0.2897, 0.2151, 0.0185, 0.0764, 0.0, 0.1064, 0.243, 0.0781], [0.6992, 0.4268, 0.3562, 0.4583, 0.3462, 0.2368, 0.9667, 0.0, 0.5312, 0.0608, 0.4369, 0.2258, 0.0185, 0.0955, 0.0444], [0.053, 0.3227, 0.561, 0.0, 0.2927, 0.3699, 0.1875, 0.1154, 0.5, 0.7, 0.0, 0.5, 0.0608, 0.2033, 0.1183, 0.0185, 0.0764, 0.0222, 0.1277, 0.1806], [0.0464, 0.4183, 0.5203, 0.0, 0.4146, 0.5205, 0.8125, 1.0, 0.3684, 0.7667, 0.0, 0.625, 0.027, 0.3879, 0.1613], [0.3037, 0.0, 0.2166, 0.1111, 0.2553, 0.3553, 0.0156], [0.0397, 0.1514, 0.3171, 0.0, 0.3537, 0.5616, 0.625, 0.4615, 0.3421, 0.4, 0.0, 0.6875, 0.027, 0.2477, 0.1613, 0.0, 0.2102, 0.1111, 0.117, 0.1932, 0.0469], [0.0993, 0.4303, 0.3577, 0.2317, 0.3562, 0.3958, 0.0068, 0.3563, 0.1828, 0.0, 0.2102, 0.0, 0.2021, 0.162], [0.0405, 0.3949, 0.172, 0.0185, 0.1911, 0.0222, 0.1596, 0.3502, 0.0], [0.0199, 0.1992, 0.3171, 0.0, 0.2439, 0.411, 0.5833, 0.1923, 0.7105, 0.9, 0.0, 0.3125, 0.0676, 0.2523, 0.0968, 0.0, 0.2484, 0.0, 0.0851, 0.2624], [0.0662, 0.1554, 0.2033, 0.0, 0.1829, 0.4521, 0.1667, 0.2692, 0.4474, 0.1333, 0.0083, 0.0938, 0.0743, 0.2488, 0.2688, 0.1465, 0.0, 0.1596, 0.346], [0.0265, 0.8333, 0.8462, 0.5526, 0.6, 0.0, 0.625, 0.0068, 0.3061, 0.086, 0.0, 0.1465, 0.0222, 0.0638, 0.362, 0.1562], [0.0397, 0.012, 0.561, 0.0, 0.6585, 0.3151, 0.3125, 0.3462, 0.3947, 0.0811, 0.2839, 0.0, 0.1783, 0.0444, 0.1596, 0.319, 0.0156], [0.0331, 0.255, 0.1789, 0.0, 0.061, 0.3288, 0.1458, 0.2308, 0.0526, 0.8333, 0.0331, 0.5312, 0.027, 0.2862, 0.1398, 0.0573, 0.0444, 0.1064, 0.3443, 0.0938], [0.0265, 0.3267, 0.561, 0.3171, 0.2466, 0.4583, 0.3846, 0.1842, 0.9, 0.0, 0.6875, 0.0743, 0.3026, 0.0753, 0.0, 0.0764, 0.0, 0.0957, 0.2506, 0.0156], [0.0397, 0.1036, 0.3846, 0.5526, 0.0338, 0.3692, 0.172, 0.0185, 0.1847, 0.0222, 0.2128, 0.3705, 0.1094], [0.0464, 0.3386, 0.8618, 0.5244, 0.4384, 0.2708, 0.6923, 1.0789, 1.0667, 0.0413, 0.875, 0.0541, 0.264, 0.0, 0.0, 0.121, 0.0667, 0.1064, 0.2143], [0.5366, 0.439, 0.2466, 0.5417, 0.8846, 0.5, 0.5333, 0.0, 0.7188, 0.0203, 0.3598, 0.129, 0.0892, 0.0222, 0.1064, 0.303, 0.0], [0.0662, 0.4143, 0.5772, 0.0, 0.3293, 0.5342, 0.5833, 0.8077, 0.1579, 0.3333, 0.0, 0.7188, 0.0743, 0.2033, 0.2796, 0.0185, 0.1401, 0.0, 0.1596, 0.2928, 0.0469], [0.0464, 0.3426, 0.6667, 0.4634, 0.4384, 0.7708, 0.6538, 0.6842, 1.1, 0.0, 1.1562, 0.0135, 0.2395, 0.0645, 0.0, 0.1019, 0.0, 0.0426, 0.2692, 0.0625], [0.0728, 0.3904, 0.5854, 0.0, 0.4268, 0.2329, 0.4474, 0.0608, 0.2897, 0.1398, 0.037, 0.2102, 0.0667, 0.2021, 0.3392, 0.0156], [0.0795, 0.3825, 0.6829, 0.0, 0.2317, 0.4795, 0.4792, 0.4231, 0.4474, 0.3333, 0.0165, 0.875, 0.0, 0.25, 0.1613, 0.0741, 0.1529, 0.0222, 0.234, 0.3215, 0.0156], [0.0927, 0.5857, 0.4309, 0.4512, 0.3014, 0.4167, 0.8846, 0.6842, 0.8333, 0.0496, 0.8125, 0.1014, 0.3505, 0.129, 0.0, 0.1401, 0.0, 0.0745, 0.2481, 0.0312], [0.3333, 0.7692, 0.9474, 0.8667, 0.0496, 1.0625, 0.0203, 0.4871, 0.0, 0.0, 0.2357, 0.0, 0.117, 0.3781, 0.0469], [0.0927, 0.3944, 0.6504, 0.5732, 0.3425, 0.5, 0.9615, 0.5263, 1.1667, 0.0, 0.875, 0.0946, 0.3236, 0.086, 0.037, 0.1019, 0.0, 0.1383, 0.297, 0.0469], [0.053, 0.4422, 0.3821, 0.0, 0.4512, 0.3699, 0.6458, 0.6538, 0.4211, 0.6, 0.0, 1.0312, 0.1216, 0.4755, 0.1613, 0.0, 0.2038, 0.0222, 0.0106, 0.2321], [0.1126, 0.4303, 0.5854, 0.3171, 0.5753, 0.5625, 0.8462, 0.7895, 1.6667, 0.0083, 1.1875, 0.0338, 0.3388, 0.0645, 0.0185, 0.1656, 0.1809, 0.2785, 0.0938], [0.0662, 0.3386, 0.748, 0.378, 0.274, 0.75, 0.9615, 0.6842, 1.3333, 0.0, 1.4062, 0.0405, 0.3598, 0.1613, 0.0, 0.2866, 0.0444, 0.0957, 0.2717, 0.0156], [0.0464, 0.4861, 0.2439, 0.0, 0.3171, 0.5753, 0.3542, 0.1538, 0.1842, 0.3667, 0.0165, 0.5312, 0.0608, 0.4054, 0.2043, 0.037, 0.242, 0.1778, 0.117, 0.3367, 0.1875], [0.0795, 0.4104, 0.7886, 0.5, 0.4658, 1.0833, 0.5, 0.8421, 0.5667, 0.0, 1.1875, 0.0473, 0.3657, 0.1398, 0.0185, 0.0828, 0.0222, 0.1064, 0.2819, 0.0156], [0.0861, 0.4462, 0.4309, 0.0, 0.2805, 0.274, 0.6042, 0.5526, 0.8, 0.0165, 1.4688, 0.0405, 0.2593, 0.3656, 0.0, 0.242, 0.0, 0.2766, 0.3848, 0.1562], [0.053, 0.4741, 0.5203, 0.0, 0.4878, 0.2603, 0.6875, 0.6923, 0.7105, 1.7, 0.0, 1.5, 0.0608, 0.3738, 0.1505, 0.0, 0.121, 0.0444, 0.0532, 0.2928, 0.0312], [0.0066, 0.5657, 0.7724, 0.3171, 0.5068, 0.4583, 1.2692, 0.1579, 1.3, 0.0083, 0.8438, 0.0811, 0.2874, 0.0753, 0.037, 0.2229, 0.0, 0.1064, 0.3401, 0.0938], [0.2583, 0.004, 1.0488, 0.4634, 0.6575, 0.8542, 0.7632, 0.3667, 0.0579, 1.125, 0.0068, 0.2348, 0.2581, 0.0185, 0.172, 0.1556, 0.2979, 0.4051, 0.0312], [0.0464, 0.3825, 0.5447, 0.5976, 0.4521, 0.8958, 0.9615, 0.8684, 1.0667, 0.0, 0.75, 0.0405, 0.4182, 0.0645, 0.037, 0.1146, 0.1333, 0.2553, 0.2776, 0.0156], [0.053, 0.4462, 0.3252, 0.4146, 0.589, 0.5625, 0.5769, 0.4474, 0.7, 0.0, 1.1875, 0.0203, 0.3586, 0.0, 0.0, 0.1146, 0.0889, 0.2447, 0.3873, 0.0156], [0.0397, 0.4701, 0.3902, 0.0, 0.5122, 0.3425, 0.7917, 0.4615, 0.2632, 0.9, 0.0, 1.1562, 0.0338, 0.3843, 0.2258, 0.0185, 0.3439, 0.0889, 0.1489, 0.3511, 0.0156], [0.053, 0.3984, 0.8374, 0.0, 0.5244, 0.589, 0.8958, 1.0, 0.6053, 1.0667, 0.0, 0.875, 0.0405, 0.2687, 0.3226, 0.0, 0.1338, 0.0222, 0.1702, 0.3932, 0.1094], [0.0662, 0.4143, 0.7561, 0.5244, 0.3699, 0.7292, 0.7308, 0.8947, 1.1333, 0.0, 0.9688, 0.0405, 0.3388, 0.2581, 0.0185, 0.1465, 0.0, 0.1383, 0.3857, 0.0], [0.0199, 0.5657, 0.3496, 0.5366, 0.7945, 0.625, 0.4615, 0.7632, 0.5, 0.0083, 1.0625, 0.0338, 0.4054, 0.2043, 0.1529, 0.0889, 0.0745, 0.3671, 0.1094], [0.0728, 0.4542, 0.6667, 0.5, 0.8493, 0.6875, 0.5769, 1.4211, 1.1667, 0.0165, 0.9688, 0.0135, 0.4182, 0.172, 0.0556, 0.2484, 0.0, 0.1702, 0.3224, 0.125], [0.106, 0.4701, 0.9919, 0.5244, 0.6438, 1.1042, 1.0769, 0.7895, 1.1333, 0.0165, 1.1875, 0.0405, 0.3925, 0.043, 0.037, 0.1656, 0.0, 0.1064, 0.3646, 0.0156]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

