created: 20230703220627000
creator: Drevarr
modified: 20230705163541452
modifier: drevarr
tags: ChartData
title: 202307032206_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Vopiscus Zergherdus", "Miphest\u00f6", "Gavann", "Oo Dads Mad", "Xanvias Einzbern", "Erma Starr", "Tegan Parker", "Primal Clone", "Zaylen Harker", "Ateriuz", "Eibh\u00ebar", "Johosh The Mighty", "Black Raspberry Pie", "Koralia Danai", "Arriasa", "Mmathuss", "Gabe Malhorn", "Il Dim Snail Il", "Sister Elon\u00edth", "Sub Train", "Crusader Siolith", "Solus Sanctus", "Drevarr Moonwillow", "Grasszanine", "Newtype Khan", "Smol Daddy Tika", "Zayde Sunsabre", "Arcanophage Farra"];
const professions = ["Scrapper", "Scrapper", "Tempest", "Firebrand", "Berserker", "Berserker", "Guardian", "Tempest", "Chronomancer", "Firebrand", "Berserker", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.4138, 2.4055, 2.3688, 9.7373, 1.9269, 0.0, 67.4595, 3.4471, 3.254, 1.4861, 0.0, 2.9274, 1.6698, 2.1092, 1.1929], [0.9237, 3.2825, 6.2899, 4.3967, 91.9185, 1.8522, 3.7191, 2.7477, 0.7106], [7.2503, 8.6214, 5.8938, 32.3136, 23.7653, 8.3996, 5.4868, 13.072, 33.162], [93.102, 24.9533, 17.7164, 7.0373, 6.3995], [8.9861, 3.6886, 12.7008, 2.0084, 2.4011, 43.395, 6.74, 3.3396, 1.2384, 2.1573, 5.0362, 2.9484, 2.7443, 7.5104, 4.2887, 8.1259, 8.8334, 4.8206, 3.4434, 3.1923, 13.0148], [9.3566, 2.5718, 11.1283, 1.7641, 42.606, 4.2189, 17.4754, 3.2345, 0.9907, 7.8973, 5.2371, 4.4311, 0.3046, 3.4262, 2.6712, 5.0481, 2.7553, 3.5614, 5.5123, 6.6158, 8.3266, 6.0544], [12.3211, 1.6443, 7.4786, 15.9667, 5.9979, 2.6255, 90.3405, 8.0777, 10.2442, 7.4307, 1.668], [0.0, 0.0, 14.6189, 5.8061, 5.808, 33.5325, 44.6072, 0.0, 3.016, 16.0992, 0.0, 1.3409, 0.0, 2.4872, 0.8256, 2.646, 3.4896, 2.0887, 3.436, 4.657, 1.811, 3.579, 5.449, 4.6509, 4.4118], [10.1904, 4.3992, 7.439, 2.1983, 51.285, 6.0197, 7.8941, 4.4147, 1.966, 6.5697, 3.1625, 3.7733, 1.1929, 1.548, 2.5956, 3.2864, 4.2218, 4.8404, 8.221, 7.0224, 5.1858, 5.2976, 7.1002, 16.4707], [13.9886, 5.6174, 4.7779, 6.3508, 49.3125, 16.7213, 15.7881, 12.7633, 4.3231, 2.4794, 0.6966, 0.7106, 1.032, 0.6048, 7.7246, 5.2439, 3.8623, 1.5206, 2.8459, 3.3964, 4.957, 4.3482, 10.8824], [7.5965, 4.1285, 4.2336, 2.1983, 0.0, 44.973, 8.3864, 3.4348, 7.6055, 1.4706, 8.3738, 1.6951, 0.832, 3.8324, 3.6533, 5.5944, 2.541, 9.599, 7.4989, 10.787, 10.6814, 9.3856, 11.2006, 5.504, 10.6618], [10.9315, 2.3548, 3.2825, 7.0762, 2.2255, 1.3576, 49.707, 6.2254, 8.1351, 2.6226, 1.4242, 5.4464, 5.313, 4.3731, 4.6445, 3.0134, 2.1924, 5.1498, 7.1993, 3.2353, 9.8842, 13.86, 9.6413, 11.9574, 7.4029, 17.9413], [9.264, 2.3447, 4.0946, 7.7414, 2.5783, 62.331, 2.521, 8.3159, 4.7207, 1.3313, 5.4124, 6.5021, 2.0124, 3.071, 5.6347, 4.7628, 7.9618, 6.1772, 2.1569, 8.5061, 10.7923, 8.9474, 10.7844, 6.247, 14.7795], [10.8389, 4.1623, 7.0157, 2.524, 1.8737, 82.4505, 8.4893, 16.9331, 4.6333, 5.2081, 4.4528, 5.9404, 3.1217, 2.9309, 2.6208, 4.0656, 2.3553, 2.0064, 4.5619, 6.2093, 6.1719, 6.6598, 3.9904, 19.1913], [8.9861, 0.0, 4.7038, 11.975, 6.5136, 5.5539, 133.341, 10.5987, 5.8452, 9.2665, 0.0, 0.7829, 0.6578, 1.2771, 0.3046, 0.0, 0.504, 9.2831, 0.8444, 0.4514, 1.5206, 3.7699, 3.6885, 1.7785, 2.0365, 3.8236], [10.8389, 1.4819, 4.6699, 9.9792, 1.2213, 0.0, 95.0745, 4.3733, 3.3143, 7.7804, 2.1517, 3.1998, 3.2637, 2.4768, 4.2892, 2.353, 2.4444, 3.1847, 0.6222, 5.7182, 10.6445, 2.2915, 4.492, 12.0331, 10.4026, 22.5737], [30.9418, 6.0798, 12.047, 13.8499, 7.5992, 2.9509, 82.845, 8.798, 14.5227, 13.2441, 4.221, 1.7963, 0.0968, 2.2588, 0.0206, 0.6804, 4.4722, 2.0887, 1.6804, 2.6136, 3.1416, 2.8486, 5.6003, 0.8806, 10.4413], [11.3021, 2.568, 8.663, 23.3453, 8.8476, 0.9425, 109.671, 13.7886, 21.9949, 10.3156, 0.0, 1.5658, 1.1132, 2.5542, 0.4822, 0.4954, 0.6804, 6.7082, 0.711, 1.7305, 3.7541, 0.7762, 1.0226, 5.4111, 2.6144, 5.6618], [15.1003, 0.0, 10.2535, 21.4704, 8.0063, 3.5455, 133.341, 13.5828, 5.2426, 28.5426, 4.8917, 6.0251], [22.6968, 6.902, 8.5277, 13.6685, 7.5178, 99.0195, 23.3583, 15.6073, 11.8454, 4.3189, 7.2165, 2.0999, 0.9868, 2.9187, 0.8462, 1.1088, 8.0973, 1.9109, 1.4045, 4.657, 7.0594, 5.5876, 1.4758, 1.4586, 14.5589], [8.4302, 11.1334, 19.0512, 5.2652, 0.0, 146.754, 13.5828, 12.052, 10.7527, 0.9752, 8.3738, 2.1505, 1.3932, 2.335, 0.9701, 0.6048, 7.4875, 1.7776, 3.9626, 0.8554, 5.0266, 1.2417, 3.3299, 1.7613, 9.3383], [21.6778, 5.5622, 12.7915, 19.4746, 2.3883, 5.8007, 146.754, 31.7447, 16.3907, 4.1524, 4.5614, 3.2131, 1.3352, 2.2842, 0.2064, 1.638, 8.3684, 1.9998, 1.6553, 6.9379, 3.9178, 2.1547, 8.3248, 1.0458, 18.9707], [26.3098, 16.9538, 27.095, 2.1441, 3.9607, 141.231, 12.8111, 24.5258, 11.9765, 7.7555, 1.4637, 0.8602, 2.6897, 4.01, 1.1352, 0.6048, 4.9804, 5.955, 1.6804, 3.8491, 5.9506, 3.0312, 11.8061, 4.0454, 15.4413], [31.405, 3.2582, 25.2785, 32.7802, 4.5324, 3.1977, 175.947, 16.9785, 19.1627, 4.3273, 2.8483, 10.8928, 4.1998, 2.4381, 5.7613, 3.2405, 3.0996, 4.3705, 4.1329, 5.5427, 3.6115, 11.8272, 9.97, 9.46, 7.8982, 24.0443], [42.3365, 2.6796, 12.8592, 36.288, 6.3236, 0.3703, 306.5265, 5.145, 30.5518, 20.194, 16.7136, 10.0441, 6.6371, 7.2333, 6.5222, 8.19, 3.8284, 5.0217, 14.12, 21.8117, 19.6258, 19.3921, 12.6007, 12.2464, 40.5886], [58.0853, 6.902, 21.0823, 55.6416, 9.9332, 4.9705, 341.2425, 15.3321, 48.5696, 32.2143, 7.3066, 18.6199, 7.8683, 9.1138, 10.9642, 6.3158, 14.0616, 5.5902, 9.1102, 5.1916, 10.9771, 9.0182, 3.4329, 8.7789, 4.3206, 15.1472], [74.6678, 23.0112, 60.601, 21.1963, 7.2593, 414.225, 48.2601, 42.7243, 27.1876, 15.3716, 24.4067, 15.939, 8.4366, 15.2026, 14.1178, 6.5268], [96.8088, 4.9938, 23.5865, 83.7043, 22.3091, 539.676, 55.7203, 85.0871, 36.8475, 27.9128, 20.8219, 20.7238, 8.9845], [69.6653, 3.0551, 34.043, 53.2829, 20.0022, 4.9592, 465.1155, 42.1375, 60.1997, 32.8699, 15.6348, 24.5428, 9.4875, 6.7725, 11.6748, 11.9093, 16.0524, 36.5565, 15.4207, 19.6376, 22.0018, 30.9725, 20.999, 23.2338, 17.8605, 40.0739]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

