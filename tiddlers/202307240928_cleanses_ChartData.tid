created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Alfir Strom", "Free H\u00e4nd", "Luke The Ghastly", "Jerryatric Reflexes", "Danaeryn", "Trodek", "Reina Armitage", "Flick Embermage", "Drevarr Moonwillow", "Lady Fluffs", "Sakis Ranger", "Whip \u00d1 Sl\u00e0pper", "Legoh Brave"];
const professions = ["Druid", "Renegade", "Scourge", "Spellbreaker", "Tempest", "Scrapper", "Druid", "Tempest", "Scrapper", "Druid", "Druid", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0392, 0.0429, 0.2143, 0.7073, 0.0, 0.0, 0.0, 0.0, 0.0], [0.123, 0.0845, 0.069, 0.0678, 0.0127, 0.1463, 0.2609, 0.049, 0.0, 0.2286, 0.0714, 0.0732, 0.0, 0.0, 0.0, 0.0], [0.1071, 0.2358, 0.0328, 0.1761, 0.0, 0.0339, 0.1139, 0.0122, 0.0435, 0.0357, 0.2754, 0.0294, 0.0, 0.0], [0.0526, 0.0435, 0.0944, 0.007, 0.125, 0.0, 0.0984, 0.0704, 0.1954, 0.0, 0.0506, 0.1585, 0.2391, 0.0238, 0.029, 0.0196, 0.0, 0.1], [0.2976, 0.5652, 0.2647, 0.0238, 0.4143, 0.2857, 0.6951], [0.3722, 0.0, 0.0804, 0.4811, 0.0164, 0.3944, 0.3103, 0.0, 0.1899, 0.2073, 0.4565], [0.014, 0.5268, 0.2453, 0.377, 0.7535, 0.9885, 0.0, 0.0, 0.1585, 0.587, 0.1429, 0.3333, 0.2745, 0.0, 0.0], [0.1888, 1.2143, 0.0472, 0.5492, 0.9225, 0.5402, 0.1356, 0.6829, 0.3478, 0.1429, 0.4783, 0.0588, 0.0, 0.7143], [0.0964, 0.082, 0.5, 0.0642, 0.1552, 0.1333, 0.2406, 0.0, 0.3778, 0.0559, 0.5714, 0.3019, 0.3033, 0.4577, 0.3793, 0.0, 0.2785, 0.439, 0.0, 0.25, 0.5942, 0.3235, 0.0, 0.0], [0.0, 0.5333, 0.6767, 0.3913, 0.9, 0.0, 0.7946, 0.9811], [0.0, 0.1897, 0.0, 0.0, 1.0111, 0.3147, 0.9643, 0.783, 0.5246, 0.3169, 2.069, 0.1864, 0.061, 0.4524, 0.9565, 0.598, 0.0], [0.1724, 0.3053, 0.3835, 0.4348, 0.8111, 0.2028, 0.6696, 0.6321, 0.5, 0.3803, 0.9885, 0.6441, 1.1646, 0.5488, 0.8913, 0.3214, 0.7536, 0.9412, 0.0238, 0.8286, 0.8571, 0.9146, 0.3462, 0.0, 0.0], [0.6415, 1.5902, 1.7887, 1.6897, 0.3559, 1.6456, 0.8293, 2.3261, 0.5238, 1.3478, 0.6176, 0.7286, 0.9643, 1.061, 0.0417, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

