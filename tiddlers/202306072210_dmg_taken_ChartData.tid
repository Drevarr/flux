created: 20230607221050000
creator: Drevarr
modified: 20230705163534009
modifier: drevarr
tags: ChartData
title: 202306072210_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Tegan Parker", "Uneeta Healah", "Tootsie Pop Rocks", "Venomina The Siren", "Ryvalia Fazebringer", "Crusader Siolith", "Duke Silvver", "Permanent Dawn", "Gabe Malhorn", "Skye Nightroad", "Oo Dads Mad", "Artakama Nahid", "Drevarr Moonwillow", "Rafaellagabriela", "Johosh The Great", "Lord Erin The Wise", "Chrozz", "Sygaldry Verdandi", "Koralia Danai", "Sumatra Satyricon", "Solus Sanctus", "Inedible Plant", "Blanco Padre Guard", "Husky Guard", "Etcherii", "Belvyn Brightblade", "Slingsshot", "Demon Sekhmet", "Kira Dragonblaze", "Melody Phoenixstorm", "Ria Zerria", "Kaehln Lao", "Mister Jekyll", "Nilann Thunderfury", "Marco D Roronoa", "Blanco Padre Guard", "Ria Zerria", "Manuel Radiador", "Joxrox", "Xkaet", "Rosie Sunray", "Wh\u00f4o", "Tuandha Lan", "Proteccdebussy", "Tuandha Lan", "Zefirokai", "Manuel Radiador", "Proteccdebussy", "Slash Tar"];
const professions = ["Berserker", "Tempest", "Scrapper", "Scrapper", "Tempest", "Chronomancer", "Firebrand", "Vindicator", "Weaver", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Weaver", "Willbender", "Firebrand", "Firebrand", "Soulbeast", "Firebrand", "Vindicator", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Untamed", "Berserker", "Dragonhunter", "Scrapper", "Scourge", "Firebrand", "Reaper", "Dragonhunter", "Renegade", "Dragonhunter", "Reaper", "Scrapper", "Daredevil", "Tempest", "Vindicator", "Scourge", "Herald", "Dragonhunter", "Renegade", "Tempest", "Holosmith", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.2178, 116.58, 457.6418, 99.1905, 958.2168, 2672.1228, 0.0, 344.5435, 122.0, 583.954, 1111.575, 1733.2955, 1708.8923], [24.9453, 75.7158, 454.1415, 132.3129, 1165.4121, 1193.1961, 0.0, 272.4, 355.56, 703.6813, 3554.6061, 680.4259, 1261.0973], [15.1378, 96.6327, 443.5544, 55.446, 670.3081, 3250.8261, 1.6875, 271.6727, 1540.3929, 2030.2708, 1603.0851, 1978.5957, 1268.4023], [210.33, 145.697, 392.7246, 108.6861, 688.0133, 2619.3273, 0.0, 780.0364, 67.7778, 494.978, 4500.1, 9063.3333, 1971.0761], [107.9474, 482.5707, 373.2464, 729.3939, 2173.6786, 0.0, 595.7636, 311.8889, 509.0581, 2598.9375, 2057.5333, 1148.9649], [28.5543, 31.8068, 359.7771, 78.4797, 891.44, 3145.3667, 0.0, 621.7143, 528.55, 1101.0333, 2650.8125, 870.0833, 1563.9909], [16.7714, 62.102, 395.0823, 35.6944, 945.4823, 3383.7619, 20.2667, 505.5818, 178.6364, 860.8953, 2607.5854, 1887.3778, 1314.3974], [71.8663, 74.4848, 480.0658, 90.4211, 2160.5, 2616.7407, 56.9412, 510.8, 279.5357, 599.1648, 2419.3448, 11795.4, 1749.0396], [21.7327, 128.18, 588.2063, 250.9784, 196.026, 921.8088, 0.1429, 193.5, 389.125, 406.4471, 143.3571, 1581.4483, 366.9469], [480.5779, 38.705, 847.8382, 1194.1646, 0.0, 477.6909, 802.2143, 727.2, 3133.6452, 480.0189, 1195.1964], [22.925, 194.5816, 641.3077, 1355.122], [27.1095, 103.7071, 701.368], [25.4158, 89.6667, 361.2101, 64.6259, 606.2565, 1829.4821, 102.5625, 270.7857, 127.2727, 771.6292, 2662.7632, 1744.9444, 1640.8148], [1.7586, 54.5979, 298.5695, 74.8261, 691.2203, 1782.7273, 0.1053, 204.7636, 355.45, 851.6, 2700.0, 1741.8936, 2066.3196], [376.9487, 133.4101, 768.0938, 1892.7812, 0.0, 134.6909, 227.8333, 695.0879, 642.9167, 1757.5217, 1169.2], [12.67, 19.21, 348.9781, 107.9111, 678.5796, 1534.2, 0.0, 549.0714, 307.0, 755.4889, 3214.5833, 1568.25, 875.7913], [34.2704, 306.2473, 615.4997, 623.3744, 1520.6863, 63.6111, 53.1132, 494.7407, 239.3864], [20.7143, 79.0202, 437.0767, 38.8973, 1073.7947, 546.0241, 0.0, 362.6226, 242.25, 710.011, 785.8125, 421.3962, 709.8947], [16.5505, 100.4124, 310.9727, 66.7047, 497.0573, 1426.6932, 0.0, 425.3636, 262.8571, 995.3, 2681.1111, 716.2115, 1632.4082], [6.5758, 43.7979, 321.2683, 81.6449, 702.5689, 3305.6667, 89.8235, 245.5273, 173.7857, 1715.3421, 1809.0488, 293.2642, 1165.6036], [55.1313, 101.0532, 666.1343, 95.6875, 719.9853, 3343.3333], [4.6, 15.4688, 391.486, 31.2945, 266.6637, 577.7595, 27.4667, 202.963, 145.9545, 280.1236, 1180.2093, 372.9375, 1085.9592], [28.099, 93.9697, 347.6276, 34.443, 347.8312, 751.6447, 0.0, 512.3585, 262.2632, 506.1905, 931.9412, 113.4792, 1565.6735], [14.4175, 69.9293, 469.2113, 59.8235, 1297.9167], [305.3176, 112.1377, 2410.4685, 2594.925, 3.5625, 608.4727, 492.4706, 1171.8298, 2368.6207, 0.0, 1106.907], [25.3286, 50.5567, 320.4694, 25.0357, 403.067, 1093.9028, 0.0, 212.8, 172.8182, 511.3956, 3308.1481, 3616.5], [14.2769, 182.54, 535.8189], [48.549, 71.4556, 516.5861], [20.7376, 114.1649, 528.8245], [53.01, 269.5051, 649.2232], [22.9172, 147.1939, 479.9856], [44.8168, 389.7526, 290.184, 92.3768, 1820.9709], [31.0805, 1212.4204, 1350.3671, 0.0, 1185.5818, 387.2, 942.3605, 3930.1034, 2681.75, 1305.4536], [31.3085, 190.101, 449.0713], [120.7073, 249.2929, 568.414, 103.9493], [34.2667, 2145.5595, 2874.5366, 19.9375, 16911.0, 145.68, 830.6897, 5577.5185], [2233.0444, 0.0, 1416.7273, 1335.4545, 1126.5632, 4692.9231, 1840.1333, 1442.9697], [3642.8704, 0.0, 1516.1636, 198.4286, 1082.6629, 1866.7609, 1767.2037], [0.0, 844.9273, 630.8333, 1543.6292, 2646.8222, 2163.0444, 1710.2738], [1039.3829, 7545.8182, 431.7037, 10.5417, 360.0225, 4415.6875, 308.0, 627.2389], [3798.5789, 1992.2075, 1649.9717], [304.4806, 116.5035, 3122.6667, 3949.8947, 0.0, 584.2, 125.4091, 768.1685], [479.0435, 2965.871, 5547.2941, 327.6909, 1007.3246], [2133.7857, 18.4444, 541.8545, 1668.0417, 279.1932, 207.0769, 4248.0], [2024.439, 18.375, 240.1091, 353.9048, 545.0, 400.7826, 460.9811, 833.3976], [0.0, 1300.9459], [1780.7556, 559.8455], [82.4069, 7893.9231], [779.5248], [49.2167, 359.949]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

