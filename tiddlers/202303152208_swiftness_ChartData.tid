created: 20230315220824000
creator: Drevarr
modified: 20230705163522284
modifier: drevarr
tags: ChartData
title: 202303152208_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Belvyn Brightblade", "Xanvias Tseli", "Etcheriii", "K\u00f4sair", "Black Raspberry Pie", "Tegan Parker", "Zadie Miststep", "Elonith Requiem", "Smol Daddy Tika", "Smol Gluvs", "Be\u00eb", "Dark Sidiuz", "Sofya De Nova", "Mac Chiato", "Seren Nightroad", "Ark Darkness", "Ryvalia Fazebringer", "\u00c1rkantor", "Primal Clone", "Nazhul Naxxremis", "Fribble Bibble", "Arcanophage Farra", "Drevarr Moonwillow", "Mike The Archmagus", "Ravioli Fetabringer", "Blanco Padre Guard", "Koralia Danai", "Sygaldry Verdandi", "Johosh The Great", "Zaylen Harker", "Whose Guardian", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Berserker", "Herald", "Berserker", "Chronomancer", "Tempest", "Tempest", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Weaver", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Vindicator", "Chronomancer", "Scourge", "Scrapper", "Spellbreaker", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7464, 34.6646, 116.2388, 0.0, 89.9554, 0.0, 0.0, 84.3163, 0.0, 33.5664, 67.0712, 0.0, 15.1714, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6483, 69.8501, 0.0, 0.0, 0.0], [60.686, 150.479, 76.9516, 0.0, 48.3278, 10.7686, 0.0, 131.5523, 0.0, 43.6104], [154.0766, 92.8981, 41.8568, 0.0, 0.0, 0.0, 0.0, 12.7537, 0.0, 78.084, 104.076, 0.0, 51.1531, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.8774, 0.0, 0.0, 0.0], [10.8354, 88.5822, 15.5484, 102.8808, 10.2573, 12.4193, 133.796, 58.4901, 107.244, 19.8034], [24.8856, 48.7334, 60.0466, 0.0, 113.8104, 0.0, 0.0, 2.3618, 0.0, 72.4464, 117.9528, 0.0, 21.3473, 0.0, 0.0, 26.556, 0.0, 0.0, 0.0, 0.0, 77.8421, 0.0], [35.0463, 99.0623, 23.126, 0.0, 0.0, 0.0, 0.0, 36.6079, 0.4131, 49.1184, 238.2184, 0.0, 9.2639, 0.0, 6.2717, 19.2923, 0.0, 0.0, 24.6763, 67.8787, 0.0, 5.6268, 0.0], [52.9427, 69.7481, 0.0, 12.1523, 55.911, 0.0, 64.2355, 6.6647, 126.6782, 135.7042, 90.0294, 114.9293], [29.3309, 58.9588, 62.8866, 74.5114, 3.76, 29.1588, 85.9695, 0.0, 38.3616, 158.7159, 0.0, 23.764, 0.0, 12.423, 35.1526, 0.0, 0.0, 3.1305, 56.4307, 38.6813, 39.7733, 30.2486], [0.0, 0.0, 4.4629, 75.6994, 0.0, 0.0, 114.3111, 0.0, 100.6992, 271.0312, 0.0, 0.0, 101.2493, 79.0017, 0.0, 15.0062, 2.7807, 0.0, 33.8861, 0.0, 67.9622], [34.3715, 158.3837, 55.516, 0.0, 18.3427, 0.0, 0.0, 69.4369, 0.0, 101.1528, 127.9267, 0.0, 90.7598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 110.9707, 40.9723, 0.0, 73.6387], [61.0829, 159.0364, 58.2884, 0.0, 32.7888, 0.0, 0.0, 149.7381, 0.0, 94.8024, 150.332, 0.0, 119.827, 0.0, 0.0, 36.4521, 0.3917, 0.0, 0.0, 46.993, 0.0, 0.0, 8.3203], [92.1205, 164.3303, 37.6643, 0.0, 24.2352, 0.0, 0.0, 282.3532, 0.0, 43.2864, 169.7017, 0.0, 87.3361, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 54.7718, 0.0, 0.0, 37.0915], [137.5655, 166.7235, 138.4181, 0.0, 121.7462, 0.0, 0.0, 267.8281, 0.0, 70.3728, 217.9814, 0.0, 0.0], [0.0, 104.1387, 71.9477, 17.5392, 26.7062, 17.7472, 12.1486, 62.8239, 0.9599, 46.5912, 56.8082, 70.4549, 79.7504, 9.3465, 1.88, 26.8226, 18.6852, 0.0, 20.6938, 95.3117, 78.961, 16.921, 187.4586, 107.7754], [53.6212, 105.8792, 88.9203, 0.0, 66.1954, 0.0, 23.2819, 183.5119, 0.0, 47.6928, 224.6307, 95.4626, 40.3451, 1.4534, 29.689, 27.8222, 0.0, 4.1861, 7.4002, 94.1482, 67.7189, 8.9914, 82.0131, 133.4362], [73.4662, 129.8108, 30.0909, 0.0, 139.6138, 0.0, 0.0, 351.0816, 0.0, 115.2792, 52.7608, 1.6751, 69.6138, 0.0, 0.0, 22.5576, 0.0, 41.4691, 9.1584, 147.5246, 48.0053, 0.0, 121.1698, 48.7555], [75.8524, 103.1788, 43.725, 83.0358, 188.0248, 58.3556, 116.5982, 50.537, 64.2845, 101.6582, 281.0337, 281.1802], [43.024, 147.5782, 249.1797, 0.0, 84.1579, 0.0, 0.0, 439.531, 0.0, 13.9968, 38.5949, 0.0, 211.2581, 0.0, 0.0, 0.0, 0.0, 26.1475, 81.9312, 58.608, 0.0, 13.2578, 54.8986], [37.1102, 86.1538, 80.603, 28.4004, 106.2547, 14.7655, 188.7078, 13.7903, 110.484, 172.4481, 16.6831, 60.3499, 20.5377, 6.4672, 28.1554, 0.0, 21.2242, 27.4931, 133.5624, 28.5048, 72.791, 108.0662, 156.7642], [41.7142, 193.991, 56.1246, 38.1402, 103.7837, 71.6205, 0.0, 105.8086, 0.0, 45.7488, 162.4742, 0.0, 23.0927, 0.0, 0.0, 0.0, 409.492, 365.3395, 1.202, 21.2342, 26.7998, 0.0, 0.0, 8.1648], [58.9793, 151.1317, 115.8331, 0.0, 54.4579, 0.0, 0.0, 413.6693, 0.0, 100.6992, 209.3084, 0.0, 119.7599, 0.0, 55.4074, 71.538, 0.0, 0.0, 0.0, 124.9949, 0.0, 204.431], [112.9974, 157.6585, 209.0134, 1.701, 57.8318, 77.3056, 39.6154, 142.5346, 0.0, 108.9288, 228.2444, 15.6848, 224.0128, 0.0, 63.2883, 143.6758, 27.2707, 129.3446, 77.7888, 64.516, 162.6739], [105.6151, 190.5826, 223.3489, 101.8829, 0.0, 10.7724, 291.8004, 47.7616, 185.7816, 297.4839, 45.5994, 63.1022, 38.5822, 48.7747, 124.8167, 19.5684, 43.0848, 109.3224, 180.1397, 168.1886, 172.3162], [117.0061, 287.5418, 177.7054, 0.0, 68.0486, 6.3469, 8.4374, 312.7023, 0.0, 187.0776, 358.6285, 32.3003, 74.4472, 15.898, 47.1955, 78.6352, 7.544, 47.6626, 0.1615, 98.2205, 131.9746, 46.4218, 208.0389, 159.0192], [61.7576, 157.3684, 226.1213, 13.734, 149.8306, 64.6118, 59.8066, 330.652, 0.0, 111.0024, 249.2042, 73.1113, 164.5356, 5.7465, 31.2381, 204.7514, 97.5038, 134.629, 131.6016, 110.9181, 293.855], [106.6073, 149.3187, 293.4708, 122.9634, 175.3013, 8.9939, 89.2586, 260.3884, 111.0267, 128.7576, 271.754, 27.275, 223.8114, 24.9761, 24.9965, 271.0249, 20.0652, 184.2854, 18.2091, 51.9706, 60.6859, 76.0838, 48.6375, 60.4195], [105.3769, 46.4128, 428.7784, 92.5848, 85.3934, 29.2979, 32.3059, 363.481, 8.4807, 39.5928, 93.3793, 64.2283, 74.9842, 44.5936, 25.1899, 34.0272, 22.0124, 254.9563, 205.1813, 164.2368, 496.164, 217.4947], [73.9822, 281.5952, 143.8954, 29.2068, 51.7968, 82.735, 80.449, 246.8081, 40.666, 60.3288, 266.6947, 1.7597, 244.0175, 40.6952, 41.7811, 95.5951, 168.6917, 117.9034, 184.4554, 44.6342, 504.7969, 351.864], [89.8978, 178.0366, 214.0849, 59.5728, 219.1147, 0.0, 2.3575, 505.5433, 39.366, 175.284, 99.7395, 109.5232, 52.8984, 83.9984, 88.7978, 18.5472, 113.22, 119.6002, 54.1858, 49.1635, 396.8078, 556.1395], [148.0437, 227.1326, 302.87, 234.4162, 65.3037, 52.8919, 388.1618, 83.5798, 131.544, 306.446, 95.2427, 181.251, 25.4457, 36.2013, 120.8183, 39.8728, 166.2682, 53.1293, 264.8947, 226.7064, 427.9482, 470.8368], [101.527, 516.4149, 238.4281, 79.1683, 103.791, 37.5286, 236.5343, 81.4657, 158.2416, 351.9792, 127.2384, 210.4525, 68.2204, 86.2093, 52.1458, 22.402, 76.6224, 398.0693, 209.7101, 68.4902, 424.7108, 458.0842], [92.1602, 192.6131, 481.2515, 56.5488, 155.6755, 83.7126, 66.4054, 574.1536, 84.3089, 210.3408, 289.8227, 121.0457, 146.5448, 12.8592, 166.9332, 23.322, 172.1678, 69.2574, 245.3573, 186.107, 7.8086, 733.1079, 505.2845], [102.4399, 251.7169, 228.5556, 90.6948, 291.7728, 124.8019, 71.3347, 568.7214, 121.3299, 206.712, 345.3299, 1.472, 345.5181, 78.3494, 112.5744, 253.7651, 12.1164, 166.9781, 38.1135, 303.2424, 319.5734, 83.3683, 494.0057, 411.817]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

