created: 20230325172304000
creator: Drevarr
modified: 20230705163523050
modifier: drevarr
tags: ChartData
title: 202303251723_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Xanvias Einzbern", "Sassy Daddy Demon", "Gavann", "Ju\u00e7", "Kmpek", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Xyntharos", "Blanco Padre Guard", "Sygaldry Verdandi", "Zaylen Harker", "Gabe Malhorn", "Whose Guardian", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.4528, 7.7962, 2.4646, 0.0, 1.5876, 0.0, 8.3893, 4.0533, 2.6846, 0.0, 2.4135, 3.5942, 0.0, 0.0, 1.4112, 0.0, 2.467, 2.8078, 1.8869], [3.173, 4.158, 0.0, 0.0, 3.7044, 0.0, 23.8772, 2.6846, 0.0, 3.2789, 1.0768, 1.1482, 0.0, 0.9811, 1.0752, 4.2159, 5.9549, 6.3901, 6.8738], [6.3459, 8.019, 1.2096, 3.1291, 4.851, 0.0, 10.3253, 0.1053, 0.0, 7.6507, 3.0075, 1.0733, 0.0, 1.5418, 1.0416, 0.0, 4.849, 9.5852, 9.5694], [11.2277, 7.129, 0.0, 3.7142, 2.4528, 8.5399, 7.1459, 15.1039, 19.5431], [17.8572, 15.444, 2.9484, 2.8339, 6.9678, 54.8531], [7.9693, 9.504, 0.0, 0.0, 5.5566, 0.0, 63.2423, 0.0, 0.0, 6.359, 0.7797, 0.0, 0.0, 0.4205, 0.0, 5.5131, 0.9358, 6.1965, 12.3998], [1.8448, 6.7568, 0.0, 0.0, 0.0, 0.0, 68.405, 4.3165, 1.8936, 7.5514, 1.3738, 4.2182, 0.0, 5.0458, 1.8816, 3.7835, 1.4462, 0.0, 16.3084], [8.1907, 10.0237, 0.0, 1.4994, 0.0, 80.6663, 3.4742, 0.0, 7.9488, 3.8615, 2.7955, 0.0, 2.8032, 0.1008, 7.6751, 1.6163, 9.0043, 17.6562], [12.8395, 12.9937, 0.0, 2.2435, 9.702, 80.6663, 4.1586, 4.8419, 13.3142, 3.0818, 0.9235, 0.0, 1.6118, 2.9568, 8.5399, 4.7639, 14.7166, 15.0954], [14.9794, 13.2907, 4.3394, 0.7675, 0.2646, 2.0674, 78.0849, 4.9482, 0.0, 5.6635, 3.6016, 2.1715, 0.0, 2.1725, 3.024, 12.1072, 16.9289, 25.6573, 28.169], [10.7733, 14.1075, 0.0, 3.3062, 2.1168, 0.0, 114.2234, 6.7379, 3.212, 10.0354, 2.4877, 3.5194, 0.0, 1.1914, 0.0, 9.2966, 4.7639, 16.1689, 17.2518], [12.1753, 15.0728, 0.0, 3.2472, 10.0548, 89.7009, 2.3162, 0.4075, 18.2822, 5.1982, 5.0419, 0.0, 1.6118, 3.4272, 11.7829, 15.738, 16.0721, 23.3169], [18.2999, 13.1422, 3.0391, 4.369, 1.0584, 0.0, 113.5781, 7.896, 4.1947, 11.6251, 5.0126, 3.3197, 6.9379, 5.1744, 0.6486, 16.4185, 12.9739, 23.1822], [14.1677, 13.2165, 0.0, 8.3246, 10.4958, 4.1711, 116.8047, 0.0, 3.6434, 14.6059, 6.4235, 2.496, 0.0, 5.8166, 3.696, 11.0262, 6.2952, 20.5258, 15.2301], [18.0048, 20.196, 3.523, 6.0221, 15.3468, 151.6525, 8.5803, 1.6779, 21.5611, 6.869, 3.2947, 0.0, 6.5875, 6.1488, 23.0253, 25.7762, 31.2729, 36.2558], [20.5136, 16.8547, 2.6006, 8.2066, 11.2014, 3.0104, 169.0765, 10.2648, 7.1191, 21.0643, 7.0176, 3.4445, 2.5976, 6.5174, 7.4256, 17.0798, 21.7779, 33.1124, 38.008], [17.0455, 18.2655, 3.4776, 4.6642, 14.7294, 4.0622, 155.5245, 15.055, 5.8487, 26.7278, 8.9483, 7.9622, 2.3936, 12.4742, 10.1472, 22.0524, 16.3334, 24.5923, 38.1427]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

