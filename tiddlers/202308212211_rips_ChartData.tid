created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Latedoctor", "Rod Reaper", "Hijama", "Mister Jekyll", "Zaedy Zae", "Tribal S", "Daphne Agla\u00e9", "Arriasa", "Be\u00eb", "Ryvalia Fazebringer", "Jamaass", "Rozaalyna", "Daphne Agla\u00e9", "Necrotic Windrunner", "Rina Of Theros", "Latedoctor", "Rozaalyna", "Mister Jekyll", "Rina Of Theros", "The Arch\u00eetect", "Be\u00eb", "Blancooo Padreee", "Arcanophage Farra", "Newtype Khan", "Raziel Umbra", "Elon Illusionblade", "Rahani Sunray", "Eibh\u00ebar"];
const professions = ["Scourge", "Scourge", "Reaper", "Reaper", "Scourge", "Druid", "Druid", "Scourge", "Druid", "Scourge", "Chronomancer", "Reaper", "Scourge", "Reaper", "Reaper", "Scourge", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5932, 0.0673, 0.0, 0.0263, 0.3421, 0.2245, 0.0, 0.2456, 0.2041], [0.1154, 0.0921, 0.386, 0.1224, 0.037, 0.3509, 0.3878], [0.1399, 0.0385, 0.1091, 0.1042, 0.0, 0.2879, 0.0, 0.0595, 0.0, 0.0, 0.6667, 0.3333], [0.0094, 0.0, 0.0, 0.1646, 0.0, 0.0, 0.0759, 0.0561, 0.1818, 0.0, 0.3818, 0.4167, 0.0, 0.1364, 0.0, 0.0, 0.5417, 0.0], [0.1058, 0.2917, 0.1316, 0.3596, 0.2449, 0.037, 0.3158, 0.4898], [0.0847, 0.1058, 0.0833, 0.0395, 0.0789, 0.0612, 0.0526, 0.0408, 0.0388, 0.0542, 0.0849, 0.0, 0.1212, 0.0247, 0.0549, 0.0423, 0.0427, 0.0294, 0.0, 0.0841, 0.042, 0.0, 0.0909, 0.0625, 0.0, 0.197, 0.0, 0.0357, 0.0833, 0.05, 0.1111, 0.0762], [0.0702, 0.0, 0.0175, 0.0918, 0.0465, 0.0783, 0.1792, 0.0909, 0.0247, 0.0732, 0.0, 0.094, 0.0147, 0.0127, 0.0841, 0.0699, 0.0, 0.0909, 0.0625, 0.0, 0.1061, 0.0, 0.1548, 0.0833, 0.025, 0.0635, 0.0762], [0.4576, 0.1442, 1.2083, 0.2632, 0.3421, 0.3061, 0.1579, 0.2551], [0.1695, 0.0385, 0.25, 0.0132, 0.114, 0.0204, 0.1053, 0.1122, 0.0775, 0.0783, 0.1509, 0.0, 0.0303, 0.0412, 0.0488, 0.0141, 0.0769, 0.0735, 0.0253, 0.0841, 0.0909, 0.1091, 0.0625, 0.0, 0.0909, 0.0, 0.0952, 0.0417, 0.1, 0.1429, 0.0667], [0.2895, 0.5526, 0.1837, 0.0, 0.4737, 0.8878], [0.1864, 0.0577, 0.0417, 0.0395, 0.0702, 0.0816, 0.0, 0.0526, 0.0918, 0.0543, 0.1205, 0.1698, 0.0, 0.0758, 0.037, 0.128, 0.0986, 0.0513, 0.0294, 0.0, 0.028, 0.1049, 0.0385, 0.2182, 0.125, 0.0192, 0.1212, 0.0, 0.1429, 0.0417, 0.05, 0.0159, 0.0667], [0.4151, 0.0, 0.0206, 0.2561, 0.1268, 0.4103, 0.0, 0.0, 0.4112, 0.1469], [0.7458, 0.1442, 0.7917, 0.0526, 0.4035, 0.4082, 0.2632, 0.5408], [0.2403, 0.0482, 0.1792, 0.0, 0.4545, 0.0617, 0.0427, 0.0, 0.1282, 0.0, 0.0, 0.1402, 0.0979, 0.0, 0.1273, 0.0208, 0.0, 0.197, 0.0, 0.0476, 0.0833, 0.525, 0.3175, 0.0], [0.1008, 0.0964, 0.2925, 0.0, 0.2121, 0.0123, 0.0549, 0.0, 0.2735, 0.0, 0.0, 0.1215, 0.035, 0.0, 0.0, 0.3542, 0.0, 0.1667, 0.0303, 0.2262, 0.25, 0.55, 0.0159, 0.1143], [1.0339, 0.3269, 0.4167, 0.1842, 0.3772, 0.5918, 0.037, 0.6316, 0.7245], [0.322, 0.186, 0.1325, 0.1981, 0.0, 0.5, 0.0535, 0.0793, 0.2308, 0.0, 0.0, 0.243, 0.1678, 0.0, 0.1091, 0.5417, 0.0, 0.3182, 0.0, 0.3571, 0.1875, 0.575, 0.1111, 0.3048], [0.155, 0.1807, 0.5, 0.0, 0.0758, 0.0329, 0.0423, 0.2308, 0.0, 0.0, 0.3925, 0.4476, 0.0, 0.6909, 0.4583, 0.0, 0.303, 0.0606, 0.131, 0.2292, 0.5, 0.5238], [0.3976, 0.5094, 0.0, 0.2121, 0.0535, 0.0915, 0.0704, 0.3162, 0.0, 0.0, 0.2523, 0.1608, 0.0385, 0.4182, 0.3333, 0.0, 0.303, 0.0303, 0.5952, 0.3333, 0.55, 0.6032, 0.3048], [0.3256, 0.1928, 0.6887, 0.0, 0.3939, 0.0864, 0.1646, 0.2535, 0.2564, 0.0, 0.0127, 0.2617, 0.3287, 0.1538, 0.3636, 0.4167, 0.0, 0.1667, 0.0, 0.6071, 0.2708, 0.675, 0.6508, 0.2476], [0.066, 0.303, 0.1893, 0.3841, 0.0563, 0.453, 0.0, 0.0, 0.215, 0.2098, 0.0, 0.8727, 0.75, 0.0385, 0.2121, 0.0909, 0.8929, 0.5, 0.85, 0.8413, 0.4476], [0.2558, 0.2289, 0.3491, 0.0, 0.303, 0.07, 0.2561, 0.0423, 0.3846, 0.0, 0.0, 0.7009, 0.5035, 0.0, 0.3091, 0.7292, 0.0, 0.303, 0.0, 0.7381, 0.625, 0.425, 0.5079, 0.219], [0.4237, 0.125, 0.2917, 0.0658, 0.2632, 0.1837, 0.0526, 0.4898, 0.2016, 0.3133, 0.5849, 0.0, 0.3485, 0.1646, 0.2195, 0.0684, 0.0, 0.0, 0.271, 0.2308, 0.0, 0.5818, 0.2917, 0.0, 0.4394, 0.0, 0.1786, 0.125, 1.15, 0.2222, 0.3048], [0.0658, 0.5702, 0.2449, 0.0741, 0.386, 0.4898, 0.3488, 0.1205, 0.6415, 0.0, 0.6515, 0.1728, 0.2073, 0.3846, 0.0, 0.0, 0.4299, 0.3217, 0.0, 0.2545, 0.625, 0.0, 0.5909, 0.0303, 0.5952, 0.2292, 0.15, 0.0794, 0.3619], [0.8305, 0.1827, 0.2917, 0.0526, 0.2982, 0.3061, 0.0, 0.5614, 0.5102, 0.3643, 0.4639, 0.5849, 0.0, 0.7121, 0.1152, 0.3598, 0.0845, 0.3932, 0.0, 0.0, 0.2617, 0.5455, 0.5, 0.7636, 0.5208, 0.0962, 0.7727, 0.0606, 0.5476, 0.3125, 0.225, 0.4444, 0.3048], [0.5351, 0.1633, 0.0556, 0.8246, 0.8673, 0.6202, 0.7229, 0.9906, 0.0, 1.0, 0.1399, 0.3354, 0.0, 0.5897, 0.0, 0.0127, 0.4673, 0.5175, 0.1538, 0.6545, 0.3958, 0.0, 0.6515, 0.0303, 1.2143, 0.7708, 1.15, 0.7937, 0.9524], [0.4079, 1.0526, 0.2449, 0.2593, 0.8246, 0.7449, 0.876, 0.8133, 1.3113, 0.0, 0.9545, 0.1893, 0.4878, 0.1972, 0.6496, 0.0441, 0.0127, 0.8785, 0.5245, 0.1538, 0.2182, 1.1818, 0.0, 0.5952, 0.3333, 0.475, 0.7143, 0.7143], [0.4211, 0.5965, 0.3673, 0.0185, 0.9474, 0.398, 0.845, 0.6566, 0.217, 0.0, 1.0909, 0.2675, 0.7805, 0.1972, 0.7179, 0.0, 0.0, 0.785, 0.8951, 1.2545, 1.0417, 0.0, 1.1212, 0.0303, 1.369, 0.9583, 2.175, 1.0159, 1.1333], [1.5932, 0.4038, 1.4167, 0.5395, 1.1491, 1.0408, 1.2807, 1.0408, 0.969, 1.0602, 1.8868, 0.0408, 1.6667, 0.2716, 0.878, 0.338, 1.188, 0.0441, 0.038, 0.8879, 0.9021, 0.2692, 0.7636, 1.75, 0.1538, 1.2121, 0.1212, 0.8452, 0.5, 2.075, 1.1905, 1.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

