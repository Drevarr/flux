created: 20230201220146000
creator: Drevarr
modified: 20230705163518481
modifier: drevarr
tags: ChartData
title: 202302012201_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Tegan Parker", "Raziel Umbra", "Drevarr In A Teacup", "Mac Aaroni", "Black Raspberry Pie"];
const professions = ["Scrapper", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 51.8102, 16.2864, 50.8992, 20.4859, 21.853, 5.9081, 75.7397, 0.0, 2.6754, 10.8401, 24.7211, 35.2408, 15.2586, 8.085, 26.903, 16.1073, 46.2093, 2.2236, 21.6384, 28.5713, 2.5264, 0.0], [331.1939, 42.3168, 111.5136, 50.7052, 29.578, 0.0, 271.9906, 0.0, 42.3732, 0.0, 42.8211, 21.8834, 0.0, 32.338, 0.0, 42.5961, 5.1005, 0.0, 35.4019, 146.6809], [60.1495, 196.6831, 98.4144, 126.6778, 81.7398, 19.0714, 229.9368, 0.0, 0.0, 84.7683, 74.2915, 27.9496, 90.3609, 6.2955, 53.3894, 26.6031, 67.0418, 66.4392, 58.1725, 78.6269, 11.5448, 271.9334], [156.3002, 552.1202, 177.7584, 86.4653, 79.1918, 75.3081, 0.0, 228.9355, 91.1995, 0.0, 29.2857, 65.7803, 152.0823, 95.256, 42.7319, 68.3587, 0.0, 155.0182, 39.0062, 56.3178, 8.2517, 42.7892, 107.6478], [19.206, 643.6189, 186.0408, 168.96, 76.3381, 76.5474, 31.117, 200.9712, 127.224, 85.1796, 40.8251, 140.8416, 125.1656, 75.0141, 60.2818, 18.1834, 40.8033, 94.2057, 98.614, 53.2073, 3.4196, 67.8935, 200.3606], [81.1234, 634.821, 149.0832, 210.2285, 141.8726, 38.5844, 398.2949, 199.8533, 0.0, 81.5337, 93.1531, 117.8136, 89.0379, 26.4541, 54.5203, 26.0131, 139.547, 13.904, 0.0, 2.1311, 48.4497, 381.5292]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

