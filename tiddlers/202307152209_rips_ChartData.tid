created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Gestalia Yesteryear", "Yobam N", "Vivian Vivisection", "Ryvalia Fazebringer", "Arriasa", "Grasszanine", "Necrotic Windrunner", "Daring Deathblade", "Daphne Agla\u00e9", "Dark Sidiuz", "Blancooo Padreee", "Tootsy Pop Star", "Newtype Khan", "Rina Of Theros", "Be\u00eb", "Lord Of Bones", "Primal Clone"];
const professions = ["Druid", "Druid", "Reaper", "Reaper", "Chronomancer", "Druid", "Spellbreaker", "Reaper", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0315, 0.0563, 0.0348, 0.0745, 0.0909, 0.0063, 0.125, 0.0172, 0.0482, 0.0682, 0.1084, 0.1359, 0.0, 0.0443, 0.1321, 0.06, 0.025, 0.0, 0.0, 0.0337, 0.012, 0.0268, 0.0652, 0.0043, 0.1064], [0.0631, 0.0359, 0.0739, 0.0745, 0.0779, 0.0, 0.1429, 0.069, 0.0281, 0.0909, 0.0964, 0.0971, 0.0296, 0.0189, 0.04, 0.025, 0.0, 0.0, 0.0787, 0.0, 0.094, 0.038, 0.0043, 0.0851], [0.0, 0.2679, 0.0, 0.1365, 0.0909, 0.0361, 0.0, 0.2167, 0.0566, 0.0, 0.0, 0.0, 0.5056, 0.0, 0.0, 0.2391, 0.0, 0.1277], [0.0032, 0.0154, 0.0, 0.1988, 0.0779, 0.0, 0.5714, 0.0, 0.2209, 0.3636, 0.241, 0.0971, 0.0, 0.0837, 0.1887, 0.06, 0.0, 0.0, 0.5281, 0.012, 0.0805], [0.041, 0.0871, 0.1043, 0.0683, 0.0779, 0.0127, 0.0893, 0.0172, 0.0683, 0.0227, 0.241, 0.0874, 0.0936, 0.0755, 0.12, 0.0, 0.0, 0.191, 0.0, 0.0604, 0.1576, 0.0087, 0.1277], [0.0599, 0.0755, 0.1152, 0.1242, 0.1948, 0.0127, 0.0714, 0.1034, 0.1044, 0.1364, 0.0723, 0.1262, 0.0149, 0.0542, 0.1132, 0.08, 0.0, 0.0345, 0.0112, 0.0241, 0.1275, 0.1304, 0.0, 0.0532], [0.5663, 0.8835, 0.2315, 0.2642, 0.0, 0.0, 0.0, 0.1461, 0.0, 0.3758, 0.4076, 0.0, 0.8936], [0.0915, 0.2125, 0.2304, 0.1491, 0.2597, 0.0127, 0.0893, 0.0, 0.1004, 0.1136, 0.2289, 0.2427, 0.0, 0.1675, 0.0, 0.0, 0.0, 0.0, 0.1236, 0.0, 0.1745, 0.1196, 0.0, 0.0851], [0.0152, 0.2671, 0.3506, 0.0127, 0.3571, 0.0, 0.2169, 0.5682, 0.4217, 0.2136, 0.0, 0.3054, 0.8302, 0.14, 0.05, 0.0, 0.3708, 0.0, 0.2752, 0.5272, 0.013, 0.5], [0.1703, 0.0819, 0.2413, 0.1801, 0.3766, 0.0063, 0.8571, 0.0, 0.1446, 0.5455, 0.3494, 0.1942, 0.0, 0.2512, 0.5094, 0.0, 0.0, 0.0, 0.0, 0.236, 0.0, 0.0537, 0.5, 0.0, 0.1702], [0.3438, 0.2305, 0.0, 0.3975, 0.5584, 0.0063, 0.7679, 0.0, 0.3293, 0.9545, 0.7349, 0.6408, 0.0, 0.4039, 0.6038, 0.0, 0.0, 0.0, 0.0, 0.2826, 0.0], [0.2618, 0.2753, 0.3587, 0.1242, 0.4286, 0.0, 0.4821, 0.0, 0.1526, 0.3636, 0.5181, 0.932, 0.0, 0.2069, 0.0, 0.0, 0.0, 0.0, 0.5169, 0.0, 0.2349, 0.4348, 0.0, 0.6277], [0.2587, 0.1293, 0.5652, 0.1677, 0.6753, 0.0, 0.7857, 0.0, 0.253, 0.8182, 0.5663, 0.4078, 0.0, 0.2167, 0.6226, 0.0, 0.0, 0.0, 0.4382, 0.0, 0.3826, 0.5326, 0.0043, 1.1383], [0.3249, 0.3521, 0.587, 0.5776, 0.8182, 0.0633, 0.2321, 0.0172, 0.2972, 1.0909, 0.7831, 0.7573, 0.0, 0.2611, 0.1509, 0.08, 0.0, 0.0, 0.0, 0.3933, 0.0, 0.4765, 0.9022, 0.0, 0.8723], [0.3375, 0.3931, 0.7891, 0.4161, 0.7792, 0.019, 1.0714, 0.0345, 0.3133, 0.9318, 0.7831, 0.1068, 0.0, 0.6305, 0.5094, 0.02, 0.025, 0.0, 0.0, 0.6966, 0.012, 0.5168, 0.9946, 0.013, 0.4681], [0.3533, 0.5365, 0.7022, 0.528, 0.6883, 0.0506, 0.7679, 0.1034, 0.3333, 1.4091, 0.7349, 1.0291, 0.0, 0.7783, 0.717, 0.06, 0.0, 0.0, 0.0, 0.5955, 0.0602, 0.6644, 1.3533, 0.0173, 1.1915], [0.4101, 0.411, 0.8696, 0.4224, 0.7532, 0.0063, 1.3393, 0.0, 0.4217, 1.2045, 1.1807, 1.3301, 0.6847, 0.434, 0.12, 0.025, 0.0, 0.0, 0.8539, 0.012, 0.4832, 1.25, 0.0, 1.4255], [0.6688, 0.7772, 1.0413, 0.7019, 1.2987, 0.0, 0.8393, 0.0, 0.5462, 1.4545, 0.9398, 1.4078, 0.798, 0.283, 0.4, 0.025, 0.0, 1.0899, 0.0, 0.5168, 1.5761, 0.0, 0.5106]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

