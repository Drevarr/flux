created: 20230408223537000
creator: Drevarr
modified: 20230705163524877
modifier: drevarr
tags: ChartData
title: 202304082235_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuuka Chou", "Ryvalia Fazebringer", "Drevarr Moonwillow", "High Sorcer Baradun", "Anita Strips", "Zadie Miststep"];
const professions = ["Tempest", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 11.8919, 0.0, 31.2246, 84.4032, 49.7527, 15.8722, 3.0233, 43.3532, 0.0, 0.0, 0.0, 98.1502, 132.5389], [68.3399, 35.7126, 45.3096, 28.0224, 58.7983, 84.499, 73.5315, 27.9124, 0.0, 37.4072, 0.0, 50.2866, 0.0, 33.924, 0.0, 34.3974, 0.0, 0.0, 0.0, 0.0, 49.9072, 0.0, 1.1491, 0.0, 36.1553, 0.0, 0.0, 0.0, 0.0, 0.0, 30.9379, 18.0243], [28.7799, 0.0, 2.7405, 30.296, 31.2674, 23.9148, 184.8792, 2.6846, 5.4146, 21.1154, 0.0, 5.4522, 10.8623, 0.0, 2.7307, 19.8866, 12.8419, 4.9896, 10.2616, 20.2802, 15.3664, 23.5006, 32.6302, 20.4653, 48.5609, 11.0412, 0.0, 0.0, 23.648, 6.8796, 52.6215, 94.1338], [0.0, 42.7766, 49.0459, 0.0, 88.6584, 57.7512, 41.8, 113.9872, 35.4888, 43.5926, 0.0, 11.906, 61.0299, 43.1424, 23.6301, 43.1638, 6.1758, 102.9265, 0.0, 43.6458, 0.0, 0.0, 74.3726, 79.1667], [226.8766, 0.0, 269.4825, 0.0, 28.6281, 282.5626, 362.1952, 0.0, 100.3104, 0.0, 113.3262, 30.2874, 0.0, 156.5081, 122.028, 131.2147, 54.8948, 8.0693, 87.9651, 165.088, 36.74, 80.2948, 59.2253, 61.5303, 0.0, 54.565, 18.0444, 0.0, 32.3001, 213.0527, 218.0109], [352.8752, 112.4508, 378.7371, 29.8256, 19.4684, 401.0328, 670.3972, 0.0, 43.6128, 18.7036, 9.4552, 84.8718, 44.2213, 87.516, 186.9359, 123.3618, 117.7613, 5.898, 116.8384, 73.4152, 49.1488, 83.5666, 135.4663, 0.0, 0.0, 0.0, 37.0818, 187.5188, 231.3858]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

