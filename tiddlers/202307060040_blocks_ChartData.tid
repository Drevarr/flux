created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Elonith Requiem", "Elonith Requiem", "Body Ody Ody", "Miphest\u00f6", "Hyde En Sikh", "Daphne Agla\u00e9", "Ateriuz", "Glorious Gluvs", "Fribble Bibble", "Gavann", "Tootsie Pop Rocks", "Xanvias Einzbern", "Drevarr Moonwillow", "Rahani Sunray", "Koralia Danai", "Black Raspberry Pie", "Bella Sassy"];
const professions = ["Druid", "Reaper", "Scourge", "Berserker", "Tempest", "Chronomancer", "Reaper", "Berserker", "Berserker", "Scrapper", "Firebrand", "Scrapper", "Berserker", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 1, 2, 1, 4, 1, 2, 3, 1], [3, 3, 7, 5], [2, 7, 4, 2, 3, 9, 7, 0], [6, 4, 3, 1, 0, 4, 4, 4, 4, 4, 2, 0], [3, 3, 3, 0, 1, 4, 5, 8, 4, 8, 3, 1], [5, 3, 6, 4, 5, 5, 0, 4, 5, 11, 2, 1], [0, 1, 3, 5, 3, 9, 7, 8, 6, 4, 11, 0], [7, 3, 4, 1, 5, 3, 5, 7, 5, 5, 13, 0], [4, 2, 2, 5, 7, 12, 6, 14, 3, 7, 9, 0], [6, 7, 2, 7, 7, 6, 4, 14, 6, 7, 10, 1], [6, 9, 5, 2, 6, 8, 6, 15, 6, 8, 12, 1], [4, 5, 3, 1, 13, 3, 18, 16, 16, 3, 7, 0], [7, 7, 5, 4, 9, 13, 2, 13, 5, 12, 12, 1], [3, 7, 7, 4, 12, 14, 7, 9, 7, 10, 11, 0], [5, 5, 4, 1, 9, 14, 6, 15, 4, 15, 12, 1], [7, 7, 8, 5, 8, 15, 9, 13, 6, 10, 12, 1], [6, 8, 12, 5, 9, 14, 7, 14, 7, 21, 11, 0], [9, 11, 9, 6, 12, 17, 9, 20, 10, 18, 15, 2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

