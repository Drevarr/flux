created: 20230529221000000
creator: Drevarr
modified: 20230705163532294
modifier: drevarr
tags: ChartData
title: 202305292210_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Artakama Nahid", "Riann Swordbreak", "Pamtastic", "Pu Ella", "Primal Clone", "Ryvalia Fazebringer", "Cat Wigglebooty", "Black Raspberry Pie", "Crusader Siolith", "Blanco Padre Guard", "Tribal S", "Miphest\u00f6", "Zadey Starbolt", "Fribble Bibble", "Lucas Ryn", "Gabe Malhorn", "Johosh Of The North", "Drevarr Moonwillow", "Solus Sanctus", "Tika Fiery", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi"];
const professions = ["Tempest", "Tempest", "Spellbreaker", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Tempest", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[28.6812, 75.7536, 32.4162, 115.0578, 46.7702, 52.0634, 47.4444, 77.6748, 147.43], [19.4355, 152.3676, 0.0, 8.6774, 38.9075, 0.0, 23.9811, 28.8912, 50.3469, 76.4478, 21.2282, 0.0, 92.9979, 19.4628, 138.92], [33.516, 313.5317, 23.9982, 0.0, 63.653, 0.0, 29.4823, 51.48, 30.8502, 155.83], [26.0737, 0.0, 72.0284, 0.0, 78.2457, 69.5136, 111.2643, 244.7874, 0.0, 131.241, 165.8835], [951.74], [24.822, 267.3502, 27.4358, 0.0, 86.2666, 0.0, 43.6894, 59.7792, 84.8772, 128.6485, 15.0792, 85.672, 164.6802, 15.435, 215.74], [19.1835, 293.4254, 40.4726, 35.7696, 79.414, 0.0, 35.304, 61.152, 109.0719, 157.6832, 21.2472, 64.4569, 217.7973, 36.3384, 248.86], [32.4135, 255.0979, 29.4248, 36.0677, 57.638, 0.0, 44.4905, 81.8688, 19.1835, 159.3821, 3.9354, 87.2956, 353.4264, 31.7226, 264.96], [0.0, 435.1116, 45.2723, 12.4034, 82.5358, 42.5952, 44.9178, 62.8992, 104.8437, 132.664, 20.2066, 55.8518, 203.1858, 21.1386, 314.87], [125.6715, 356.4475, 0.0, 79.7729, 594.9459, 85.407, 684.94], [27.3105, 613.5545, 0.0, 0.0, 169.5638, 0.0, 86.5242, 27.768, 86.5215, 275.8298, 0.0, 52.6588, 99.702, 27.9006, 592.25], [0.0, 644.9705, 61.2927, 0.0, 145.5035, 0.0, 62.2227, 158.0592, 139.2957, 426.2544, 0.9838, 38.1546, 238.0815, 54.0078, 690.92], [41.139, 691.4662, 53.4663, 0.0, 101.7992, 48.6086, 111.1462, 154.0032, 193.401, 369.5749, 0.0, 44.8114, 336.924, 31.9872, 510.37], [41.643, 607.8996, 0.0, 2.5834, 108.6518, 0.0, 72.3171, 110.5104, 153.9378, 182.5481, 0.0, 157.3268, 513.2934, 36.3972, 796.03], [46.5255, 834.409, 29.2735, 38.4854, 147.94, 8.7139, 88.1799, 113.8176, 138.5127, 340.0769, 12.3548, 48.9245, 422.1864, 74.4702, 748.42], [0.0, 822.785, 27.479, 0.0, 131.4938, 17.3165, 96.2448, 264.7008, 184.5531, 610.9646, 22.231, 98.5525, 374.5701, 96.138, 629.51], [1004.6837, 57.5308, 46.517, 166.8989, 17.1494, 91.2777, 242.7984, 103.0428, 730.6556, 0.0, 130.2668, 851.4207, 46.3638, 0.0], [40.95, 905.7233, 49.3585, 0.0, 211.5169, 29.399, 119.4248, 227.0112, 165.5262, 552.123, 0.0, 136.0036, 660.096, 35.7798, 855.14], [70.3395, 902.2675, 40.6456, 18.1498, 327.0974, 60.552, 200.9284, 191.3808, 270.135, 514.4396, 63.3631, 160.5199, 453.6441, 109.662, 761.3], [13.4505, 1193.4938, 79.4103, 23.1343, 257.7339, 33.241, 91.4913, 168.9792, 165.0564, 690.3468, 17.3686, 153.809, 532.89, 88.9938, 824.32], [27.783, 1083.5378, 84.6639, 55.2276, 208.1668, 23.9424, 137.691, 229.7568, 250.8732, 590.5786, 29.6855, 180.2196, 613.8549, 111.1026, 940.7], [69.678, 1000.9138, 43.4346, 18.5472, 300.6769, 7.9901, 194.6795, 225.888, 391.2651, 446.9494, 66.1065, 212.3669, 706.1652, 40.7778, 850.31], [65.2995, 1204.4894, 84.4477, 134.8439, 0.0, 158.7345, 212.5968, 257.1372, 702.3931, 0.0, 49.0868, 597.1806, 91.8162, 1054.32], [0.0, 1501.999, 102.1977, 26.8438, 343.3153, 0.0, 115.8463, 306.1344, 320.7951, 955.8292, 45.4458, 274.7131, 684.5058, 156.996, 1270.52]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

