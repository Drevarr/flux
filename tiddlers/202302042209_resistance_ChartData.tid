created: 20230204220933000
creator: Drevarr
modified: 20230705163518709
modifier: drevarr
tags: ChartData
title: 202302042209_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Raziel Umbra", "Black Raspberry Pie", "Bambiae", "Koralia Danai", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Ace Rages", "Sygaldry Verdandi", "Zaylen Harker", "Mac Arons", "Ravioli Fetabringer", "Demon Sekhmet", "Blanco Padre Guard", "Grasszanine", "Etch\u00e9ry", "Johosh The Great", "Newtype Khan", "Xanvias Einzbern", "Domina Flagbringer"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[144.6656, 0.0, 0.0, 0.0, 108.5301, 24.318, 0.0, 52.065, 0.0, 0.0, 63.7044], [201.878, 63.7828, 11.5363, 65.2543, 63.3879, 113.484, 20.2138, 57.8646, 6.3945, 108.6315, 130.2655], [220.6764, 69.5094, 12.1805, 60.6169, 84.1502, 115.5105, 27.9014, 51.8013, 6.7253, 138.3593, 149.4054], [221.0851, 61.0182, 13.2346, 66.4136, 75.0273, 111.4575, 32.6323, 63.137, 6.517, 146.9721, 142.2637], [212.5032, 84.5172, 15.6355, 60.4513, 1.8875, 120.1425, 38.8685, 91.8716, 7.203, 219.7635, 141.6923], [229.2583, 63.7828, 21.4915, 78.007, 91.8574, 145.908, 26.3962, 50.2196, 7.2275, 159.4744, 145.9774], [238.6574, 86.2944, 13.5859, 85.9568, 86.0376, 125.064, 36.3418, 7.5132, 6.6395, 200.3154, 157.4042], [388.6357, 68.1272, 8.4912, 55.3171, 102.2385, 122.4585, 51.0182, 37.5658, 0.0, 120.0226, 149.6911], [253.7779, 54.6992, 14.7571, 78.6695, 162.166, 125.9325, 16.343, 66.6959, 7.3133, 171.4211, 160.5465], [295.4612, 74.0512, 18.6221, 83.3069, 125.2028, 225.5205, 41.1802, 0.0, 6.468, 271.4399, 214.8238], [404.9821, 98.5375, 43.6858, 97.8814, 149.8974, 121.8795, 34.0838, 71.1774, 7.1907, 215.5961, 207.1107], [299.1391, 126.7757, 36.0144, 110.7998, 133.6965, 253.3125, 41.6102, 96.2213, 7.4725, 227.5428, 255.389], [560.6815, 97.3527, 46.6723, 215.4716, 224.9247, 192.228, 0.0, 0.0, 0.0, 186.7018, 265.1018], [515.7289, 114.7301, 36.5414, 135.974, 235.935, 181.227, 28.2778, 124.9559, 7.301, 258.9376, 202.2544], [554.9603, 147.5101, 96.6826, 83.6381, 95.475, 259.392, 48.8141, 141.4321, 0.0, 299.7786, 299.9535], [438.0835, 217.8094, 52.4698, 193.1129, 153.8296, 306.5805, 54.6202, 119.6835, 0.0, 368.6804, 285.9557], [604.4081, 186.6091, 31.7395, 213.6498, 239.5527, 312.3705, 64.4582, 197.056, 7.6685, 396.1856, 430.5047], [675.9236, 270.3364, 114.8947, 287.0195, 269.1232, 460.0155, 78.9734, 93.8487, 17.8483, 217.2631, 223.1083], [854.9167, 307.4608, 57.1546, 227.2306, 203.8478, 404.4315, 81.3389, 109.1387, 43.1568, 316.4484, 440.7888], [1078.8624, 229.8551, 22.0186, 425.809, 371.6763, 626.1885, 0.0, 0.0, 0.0, 501.2053, 647.8996]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

