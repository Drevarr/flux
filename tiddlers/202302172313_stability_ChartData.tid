created: 20230217231312000
creator: Drevarr
modified: 20230705163519523
modifier: drevarr
tags: ChartData
title: 202302172313_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Arka\u00f1", "Demon Sekhmet", "Sumatra Satyricon", "Husky Guard", "Arcanophage Farra", "Bambiae", "K\u00f4sair", "Tyrisai", "Xanvias Tseli", "Whose Guardian", "Ark Darkness", "Mistwalker Caelon", "Veron Blackburn", "Air One Com", "Ryvalia Fazebringer", "Ace Hammers", "Zaylen Harker", "Aronorf Xideliesi", "Blanco Padre Guard", "Bella Sassy", "Ravioli Fetabringer", "Johosh The Great", "Koralia Danai"];
const professions = ["Berserker", "Chronomancer", "Berserker", "Soulbeast", "Dragonhunter", "Spellbreaker", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Dragonhunter", "Firebrand", "Vindicator", "Herald", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5962, 0.985, 0.0, 2.5088, 1.4876, 0.3895, 0.4104, 0.0, 1.0037, 0.9984, 2.7955, 0.9216, 0.672, 1.9013, 1.7935, 0.7219, 0.0, 1.008, 0.552, 0.9605, 0.7466, 0.0, 0.0, 0.0, 1.3221, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2314, 3.9168, 11.7936, 3.1471, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.5299, 0.7934, 0.0, 1.568, 2.1188, 0.9869, 0.9302, 0.0, 1.0771, 0.2611, 3.8438, 1.049, 0.8064, 1.2096, 3.2434, 2.1423, 1.1299, 1.056, 0.0, 1.0598, 0.0, 0.6212, 0.0, 0.0, 1.3221, 0.462], [1.2254, 0.0, 0.0, 2.5088, 1.5327, 0.0, 0.6566, 0.8078, 0.7373, 2.2714, 1.457, 0.0, 1.2672, 1.4246, 2.796, 1.0462, 0.1766, 2.4653, 0.0, 2.0866, 0.0, 1.4351, 1.127, 0.0, 1.3221, 0.0], [1.4573, 1.0397, 1.176, 2.7597, 0.8114, 1.0128, 1.3954, 0.0, 0.0, 2.9702, 0.9908, 0.0, 1.152, 0.8333, 3.2434, 1.943, 0.0, 0.6163, 0.0, 0.0, 1.6891, 0.0, 1.1995, 0.3795, 0.0, 1.003, 1.166], [1.1923, 1.7237, 1.7052, 2.7597, 0.4959, 1.1946, 0.0, 1.6157, 1.6896, 3.9312, 1.865, 2.0352, 1.8816, 3.3552, 0.8469, 0.0, 1.6435, 0.0, 1.104, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.3293, 3.2256, 10.5706, 3.4968, 1.3579, 7.0656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.9605, 0.9576, 0.98, 2.007, 2.6146, 0.9609, 0.7387, 0.0, 1.1506, 0.7526, 3.7565, 0.7576, 0.0, 2.0736, 0.9408, 2.125, 1.943, 0.0, 2.7734, 0.0, 0.9053, 1.5566, 0.0, 1.0282, 1.058, 0.0, 1.0486, 0.462], [2.9146, 0.8482, 0.0, 3.136, 1.5327, 0.0, 0.2189, 2.448, 0.2458, 5.9405, 1.9232, 0.0, 2.1504, 1.2902, 6.5986, 2.7401, 2.568], [0.9605, 0.9576, 0.98, 3.1987, 1.8934, 0.4675, 0.4925, 0.8078, 0.6451, 4.8048, 0.9908, 2.6496, 0.9677, 3.3552, 2.6405, 0.0, 0.565, 1.056, 0.817, 2.1197, 0.0, 1.0282, 0.667, 0.0, 1.0486, 1.518], [1.4573, 1.2038, 0.0, 4.1395, 2.1638, 1.5842, 0.0, 0.9058, 1.1981, 1.9219, 1.6318, 1.8816, 0.2957, 2.125, 2.3415, 3.1843, 0.0, 1.3027, 1.7554, 0.0, 1.1995, 1.1845, 1.6958, 1.5045, 2.266], [4.0075, 0.0, 2.1325, 3.0204, 0.4675, 2.1341, 1.4443, 1.9814, 4.1059, 0.0, 0.0, 3.7632, 3.145, 7.3814, 5.6297, 0.7704], [1.6891, 0.0, 0.4704, 5.2058, 3.0204, 0.6233, 1.067, 0.0, 1.4198, 0.768, 7.3382, 0.2914, 0.0, 2.2272, 2.016, 3.2434, 1.0462, 0.0, 1.7462, 0.0, 1.8106, 0.7286, 0.0, 0.2999, 0.529, 2.929, 0.8662, 0.726], [1.1592, 5.2258, 3.1164, 12.6067, 0.8114, 1.0907, 1.5869, 0.0, 3.0306, 0.0, 6.2208, 0.9139, 10.1774, 4.7329, 0.0, 3.0816, 0.0, 0.1104], [2.7821, 1.751, 3.038, 3.136, 1.3975, 0.7272, 1.2038, 0.0, 2.497, 1.6128, 7.0762, 1.3987, 0.0, 3.1104, 1.2902, 6.5986, 0.0, 0.1459, 2.8762, 1.488, 1.2365, 2.7821, 0.0, 3.2344, 0.621, 1.4645, 1.8692, 2.112], [0.9605, 0.0, 3.0968, 8.2163, 6.5366, 0.0, 0.0, 0.0, 4.0637, 2.7341, 12.3178, 3.0306, 0.0, 7.296, 4.5696, 2.3486, 4.6831, 10.272, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0832, 3.6472, 2.376], [3.4114, 4.3776, 4.5472, 5.7075, 1.2172, 0.9869, 3.119, 4.5533, 1.5821, 8.6486, 0.1166, 0.2304, 0.9677, 19.1246, 1.0462, 0.8731, 6.24, 1.5898, 2.5834, 4.1593, 1.8421, 0.0, 8.3246, 2.8266, 1.606], [3.2126, 3.1738, 2.5676, 8.7181, 5.094, 1.74, 1.4501, 0.5897, 3.623, 2.5651, 4.8048, 2.6809, 0.6199, 5.3376, 3.2794, 12.3024, 5.7791, 0.0, 6.2146, 1.92, 3.2678, 2.8152, 2.0619, 3.1487, 0.253, 6.3206, 2.6898], [5.2661, 2.5445, 3.0576, 9.5962, 6.7169, 2.597, 1.3954, 0.0, 2.399, 2.0275, 3.2323, 3.9048, 0.3247, 3.5328, 4.9459, 9.9538, 5.5798, 8.5258, 0.192, 2.2522, 5.9285, 0.1778, 2.0992, 1.955, 2.0812, 2.3707, 4.378], [2.2853, 3.4474, 5.0176, 11.4778, 5.6801, 0.857, 1.7237, 0.0, 3.9413, 2.7341, 11.3568, 1.7484, 6.9888, 1.344, 12.6379, 8.3199, 6.3173, 2.928, 1.6781, 3.6763, 0.0, 3.4915, 1.495, 2.3124, 2.5074, 3.476], [6.5246, 3.5294, 5.9388, 14.9274, 8.7906, 3.506, 2.5718, 0.0, 5.7283, 2.4883, 8.3866, 6.0611, 0.8856, 2.0352, 3.9245, 15.0984, 11.1099, 0.1766, 9.0907, 2.304, 2.0755, 5.1667, 0.2133, 6.6616, 1.978, 7.7851, 3.6928, 4.444], [8.1475, 4.1861, 3.5476, 10.8506, 7.3931, 4.8824, 2.9002, 0.4142, 4.7002, 1.9661, 15.5501, 6.877, 0.6494, 7.8336, 2.9837, 16.8878, 9.3662, 0.0, 11.0938, 3.792, 3.6211, 5.0674, 0.0, 6.9401, 2.99, 0.0, 5.9267, 5.39], [5.9616, 2.5445, 5.2724, 15.3037, 9.5119, 4.1552, 1.7784, 0.0, 3.5006, 2.9491, 16.5984, 4.2544, 0.2952, 6.5664, 4.704, 15.4339, 11.1099, 14.124, 4.368, 4.129, 5.0342, 0.4622, 6.683, 1.9895, 3.9311, 4.787, 5.764], [5.6304, 4.6786, 6.1936, 15.4918, 7.303, 3.48, 2.3803, 5.7528, 3.8707, 15.8122, 4.779, 7.3344, 2.4192, 19.4602, 13.85, 13.7645, 7.44, 1.8547, 8.1475, 0.2133, 5.6977, 1.035, 4.3936, 5.9267, 6.16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

