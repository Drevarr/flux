created: 20230401000636000
creator: Drevarr
modified: 20230705163523688
modifier: drevarr
tags: ChartData
title: 202304010006_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Long Poke", "Nelliel T", "Il Kurai Il", "Fungus", "Dark Sidiuz", "Panther B Me", "Oo Dads Mad", "Arcanophage Farra", "Grasszanine", "Rozaalyna", "Newtype Khan", "Primal Clone", "Rina Of Theros", "Smol Gluvs", "Raziel Umbra", "Nazhul Naxxremis", "Be\u00eb", "Brioche Bunbringer"];
const professions = ["Scourge", "Reaper", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Chronomancer", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1111, 0.6364, 1.4118, 0.3981], [0.4559, 0.0556, 0.0, 0.1552, 0.0787, 0.0926, 0.0, 0.093, 0.0, 0.0, 0.0674, 0.0, 0.0, 0.0292, 0.1333, 0.0815, 0.0, 0.0606, 0.0, 0.0, 0.1759, 0.56, 0.2917, 0.0087, 0.0, 0.2975], [0.1397, 0.1019, 0.7857, 0.3621, 0.7528, 0.5648, 0.7976, 0.5116, 0.4636, 0.0202], [1.2, 0.037, 0.763, 0.6593, 0.3117, 0.5455, 0.0294, 0.0333, 0.3241, 1.0267, 0.0, 0.4375], [0.1544, 0.1019, 0.0714, 0.2697, 0.5278, 0.4524, 0.6744, 0.5364, 0.0, 0.2079, 0.0, 0.1071, 0.3567, 0.0963, 0.033, 0.2727, 0.037, 0.1111, 0.3529, 0.0, 0.2315, 0.68, 0.0, 0.0417], [0.2647, 0.1204, 0.4881, 0.431, 0.6067, 0.75, 0.2024, 0.4651, 0.5273, 0.0101, 0.2247, 0.0, 0.3036, 0.3158, 0.5333, 0.0, 0.6, 0.033, 0.013, 0.0, 0.2828, 0.0147, 0.0, 0.3426, 0.88, 0.0, 0.0, 0.0, 0.0, 0.2975], [0.4485, 0.0, 0.2738, 0.5345, 0.5169, 0.787, 0.619, 0.5349, 1.1182, 0.0, 0.7584, 0.0, 0.25, 0.3041, 0.1556, 0.4, 0.1319, 0.3117, 0.0, 0.2828], [0.7206, 0.0741, 1.0238, 0.4828, 0.5506, 1.1204, 0.6071, 1.0465, 1.0182, 0.0, 0.9888, 0.0, 0.3393, 0.1111], [0.5368, 0.25, 0.6548, 0.7069, 1.0112, 0.8056, 0.2857, 0.7209, 0.8727, 0.0, 0.6685, 0.25, 0.6257, 0.5333, 0.0, 0.3333, 0.0549, 0.5974, 0.3434, 0.5294, 0.1, 0.2685, 0.7867, 0.0, 0.1667, 0.0174, 0.0513, 0.3306], [0.6838, 0.037, 0.7976, 1.0, 0.3371, 1.1111, 1.0952, 0.5116, 0.3545, 0.1236, 0.0, 0.3036, 0.4795, 0.3333, 0.7333, 0.5824, 0.0, 0.2222, 0.7206, 0.0333, 0.7407, 1.0133, 0.0417, 0.0087, 0.1282, 0.4298], [0.5221, 0.2778, 0.881, 0.8966, 0.3258, 0.9537, 0.7143, 1.4186, 0.8909, 0.0, 0.7753, 0.1364, 0.6429, 0.462, 0.1556, 0.963, 0.3516, 0.2597, 0.2525, 0.5294, 0.1333, 0.1667, 0.2667, 0.0, 0.2083, 0.0, 0.0, 0.8017], [0.6691, 0.0556, 0.5357, 0.6034, 0.8764, 1.2315, 0.5833, 1.0233, 1.0455, 0.0, 1.0787, 0.5179, 0.5497, 0.8667, 0.0, 0.4148, 0.3516, 0.2338, 0.0, 0.4343, 0.0, 0.0333, 0.3981, 0.6133, 0.0556, 0.2083, 0.0087, 0.0, 0.3636], [0.875, 0.25, 1.4405, 0.6897, 0.3708, 1.3333, 0.381, 1.3953, 0.3091, 0.0, 1.0112, 0.0455, 0.5893, 0.4678, 0.2889, 0.6815, 0.1978, 0.4286, 0.037, 0.404, 0.2206, 0.0333, 0.5463, 0.96, 0.0139, 0.3958, 0.0348, 0.0769, 0.5372], [0.5662, 0.1852, 0.6905, 0.0517, 0.382, 1.1204, 1.1667, 1.4419, 0.9545, 0.0202, 0.1517, 0.0, 0.4821, 0.5789, 0.5333, 0.0741, 0.8741, 0.5714, 0.8182, 0.0, 0.3131, 0.4412, 0.0, 0.6944, 1.1467, 0.0694, 0.3542, 0.0174, 0.1282, 1.0331], [0.4632, 0.2963, 0.7976, 0.0, 1.0, 0.713, 0.869, 1.4651, 0.9545, 0.0404, 0.9663, 0.0, 0.5714, 0.4854, 0.3556, 0.2963, 0.7852, 0.4176, 0.8312, 0.0, 0.7576, 0.0441, 0.0333, 0.3611, 1.2133, 0.0, 0.3542, 0.0348, 0.1282, 0.9339], [0.7206, 0.3241, 0.6548, 0.8793, 1.8315, 0.463, 1.25, 1.3023, 0.9091, 0.0, 0.2921, 0.0455, 0.75, 0.6023, 0.4667, 0.1111, 1.237, 0.4176, 0.7532, 0.0, 0.7172, 0.4118, 0.0333, 0.7222, 1.2933, 0.4792, 0.0, 0.0], [1.2647, 0.2593, 0.619, 1.2931, 1.5843, 1.2593, 1.1429, 0.8372, 1.1182, 0.0202, 0.6629, 0.0909, 0.7143, 0.9006, 0.6, 1.0963, 0.7363, 0.974, 0.037, 0.7677, 0.5, 0.1, 1.0, 1.2133, 0.0417, 0.6458, 0.0, 0.1026, 1.4298], [0.9706, 0.2315, 0.1429, 1.1897, 0.7079, 1.5833, 1.4881, 1.1628, 1.1273, 0.0, 1.3708, 0.1818, 1.375, 1.0117, 1.0, 1.0519, 0.4835, 0.7273, 0.1481, 0.7374, 1.0, 0.0667, 0.8056, 1.1733, 0.0417, 0.3333, 0.0261, 0.4872, 0.9339]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

