created: 20230208220141000
creator: Drevarr
modified: 20230705163518879
modifier: drevarr
tags: ChartData
title: 202302082201_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Arka\u00f1", "Stabby Beech", "Etchery Howls", "Mac Aaroni", "Stoic Rapidfire", "Zadie Miststep", "Elonith Primal", "\u00c9\u00efbhear", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Firebrand", "Druid", "Tempest", "Druid", "Tempest", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[261.4824, 0.0, 96.8282, 0.0, 97.2979, 0.0, 249.8769, 343.234, 58.169, 21.2286], [279.946, 20.7216, 207.3392, 21.6774, 46.1702, 86.5185, 225.8322, 247.3688, 55.831, 217.0301], [1341.2664, 209.4948, 440.0088, 55.2419, 0.0, 196.6596, 14.6772, 690.4685, 692.227, 692.1408, 275.2316], [1532.8228, 94.8454, 548.9251, 205.7903, 260.5319, 37.619, 875.0587, 970.8723, 372.8873, 266.0857], [1652.3204, 665.9897, 784.7489, 111.8387, 4.32, 597.5745, 25.3862, 759.3986, 518.7589, 508.338, 424.1293], [1605.9988, 290.4742, 810.6388, 160.5484, 0.0, 825.1277, 118.0899, 1096.2783, 1034.1844, 486.7183, 481.2241], [1513.2805, 304.5464, 493.6432, 179.8387, 0.0, 435.3191, 26.6508, 1306.0671, 1134.7447, 794.4648, 502.9729], [2215.8803, 219.6082, 786.8282, 253.4032, 40.02, 440.5106, 59.6085, 1402.1538, 1387.0496, 596.4789, 529.9263], [2424.7723, 383.3402, 1133.1894, 91.4194, 24.94, 698.4681, 133.3968, 1400.5902, 1172.773, 543.4085, 635.3053]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

