created: 20230722000818000
creator: Drevarr
tags: ChartData
title: 202307220008_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Gestern Yesteryear", "Gavann", "Arcanophage Farra", "Raelyn Sunray", "Drevarr Moonwillow", "Samo Sa", "Bella Sassy", "Zefirokai", "Koralia Danai", "Yummy Kiwi", "Permanent Dawn", "Mistwalker Cael", "Sirplay", "Daphne Agla\u00e9", "Sub Train", "Keypek The Drunk", "Lord Erin The Wise", "Aronorf Xideliesi", "Sofya De Nova", "Rina Of Theros", "Luke The Ghastly", "Rozaalyna", "Mike The Archmagus", "Oo Dads Mad", "Lord Of Bones", "Cedryn X", "Regis Hawkesburne", "Name Is What", "Xanvias Einzbern", "Mister Jekyll", "Kahlianne", "Johosh The Mighty", "Be\u00eb"];
const professions = ["Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Necromancer", "Firebrand", "Catalyst", "Firebrand", "Firebrand", "Weaver", "Vindicator", "Berserker", "Scourge", "Firebrand", "Scrapper", "Weaver", "Firebrand", "Weaver", "Scourge", "Scourge", "Scourge", "Weaver", "Berserker", "Scourge", "Berserker", "Berserker", "Reaper", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.7928, 1.284, 4.36, 6.9685, 0.2027, 1.6184, 4.2273, 0.2667, 0.0, 14.0066, 2.0918, 7.8797, 6.5029, 1.4671, 0.0, 0.0, 9.8519], [7.9112, 8.1358, 0.0, 0.1102, 0.5901, 3.4868, 0.3864, 5.2909, 1.6923, 8.1495, 1.5153, 14.4519, 6.6763, 5.1138, 0.0, 0.0, 8.7407], [5.4507, 1.7531, 5.79, 2.0236, 0.0, 0.0, 1.3712, 2.497, 0.2168, 9.1978, 4.9337, 16.5987, 9.0116, 13.8623, 0.0, 0.0], [4.5461, 3.4568, 51.54, 7.4331, 0.0, 7.5921, 0.2652, 20.1273, 6.6503, 2.8989, 0.4847, 16.1367, 0.0, 0.0, 0.0, 0.0, 0.0], [13.1447, 0.0, 5.94, 6.9606, 3.1982, 0.0, 0.947, 0.4788, 3.6853, 21.444, 0.0, 15.3595, 2.6705, 2.3413, 0.0, 5.0988], [8.227, 4.037, 15.34, 22.5118, 0.9595, 3.8421, 5.9205, 6.0485, 0.3427, 9.4154, 4.3801, 7.781, 10.8844, 11.7844, 0.0, 0.0, 80.716], [110.0099], [9.5, 0.0, 15.68, 2.252, 0.0, 1.5395, 5.4015, 0.9636, 7.3776, 7.2176, 0.5408, 26.5608, 15.1387, 16.8982, 0.0, 0.0, 2.2222], [16.4112, 1.3704, 106.12, 3.2598, 31.8288, 12.7763, 44.3258, 10.8121], [6.2105, 1.9383, 2.64, 0.0, 0.0, 0.0, 0.8371, 17.9333, 10.9441, 4.9011, 1.8061, 23.1532, 5.3642, 32.7784, 0.0, 0.0, 37.3951], [20.625, 3.6296, 7.89, 10.189, 2.6126, 11.2368, 7.0947, 15.4909, 1.6923, 29.0396, 15.8622, 16.5304, 3.4971, 8.9461, 0.0, 0.0, 5.6914], [33.5822, 0.0, 50.86, 10.4409, 0.0, 15.8158, 2.9242, 26.9576, 1.5594, 7.8901, 2.5434, 11.8886, 15.2197, 66.9042, 14.3333], [13.2763, 0.1235, 18.2, 18.5591, 7.6757, 16.4474, 8.2992, 1.8545, 22.9021, 15.8462, 27.5255, 17.3646, 5.9306, 5.0479, 4.0377, 0.0, 19.0494], [75.9704, 0.0, 62.95, 0.0236, 12.8063, 68.25, 9.1856, 27.2121, 4.979, 0.0, 10.1913, 4.4329], [34.9375, 5.0617, 57.75, 14.8425, 25.1216, 8.3553, 2.5492, 25.2061, 2.1538, 4.6967, 0.6199, 0.0, 26.7168, 38.5569, 0.0, 0.0, 199.4444], [10.2862, 16.9753, 17.99, 10.8898, 0.8153, 5.3816, 9.053, 16.4242, 16.4755, 37.6396, 8.8291, 23.2835, 39.3179, 21.8802, 0.0, 11.0816, 16.3951], [40.9704, 12.9136, 52.91, 19.937, 9.2748, 26.8289, 12.9432, 13.9212, 15.2168, 19.6484, 26.6403, 29.1519, 49.0347, 9.5689, 1.9057, 5.3367, 16.8889], [30.4934, 11.7037, 112.78, 45.9528, 13.1441, 53.5789, 26.2348, 14.0121, 2.014, 25.0857, 12.4031, 40.6835, 56.237, 0.5868], [49.1086, 52.7407, 78.7, 22.7244, 4.2432, 0.0, 41.6894, 45.3576, 12.7483, 42.5011, 5.3418, 33.9582, 22.7168, 26.3413, 0.0, 0.0, 2.963], [8.4938, 31.88, 27.4488, 27.5045, 57.2632, 8.8977, 18.1394, 1.5315, 52.9187, 24.3342, 51.538, 25.3121, 56.9341, 3.3396, 0.0, 142.679], [96.2829, 22.2963, 100.78, 25.1417, 21.5405, 22.1974, 25.8106, 44.2061, 5.1119, 33.1868, 11.1352, 54.1532, 29.185, 18.6168, 0.0, 0.0, 198.5062], [64.0691, 22.3333, 81.95, 55.5433, 50.3423, 139.6184, 19.6174, 113.9879, 15.2587, 72.1341, 20.852, 0.0, 60.3699, 60.2874, 0.0, 9.8265, 120.1358], [95.2763, 223.52, 84.8898, 5.009, 23.9737, 10.428, 68.6424, 4.028, 28.833, 5.0281, 71.2025, 65.9075, 65.7545, 0.0, 0.0], [103.5099, 1.6173, 73.47, 20.6378, 39.8514, 52.1316, 14.7803, 49.8182, 22.7902, 78.3099, 69.4133, 44.1722, 47.4566, 0.0, 8.3962, 0.0, 225.679], [105.1053, 44.8889, 313.43, 69.2441, 12.9414, 36.3684, 33.5189, 17.6727, 41.3916, 38.2132, 11.0, 62.3633, 40.1734, 47.3234, 0.0, 308.7531], [163.3816, 37.8395, 299.59, 112.4488, 22.5135, 49.9079, 31.0644, 74.0061, 35.042, 93.6989, 35.0051, 33.2329], [114.1941, 13.9877, 483.98, 0.0, 35.7928, 77.1184, 1.7386, 65.6121, 44.951, 35.844, 20.1276, 69.5468, 23.7514, 56.4012, 0.0, 0.0, 199.0741], [89.8158, 20.7407, 291.6, 61.3622, 51.3243, 140.7632, 12.1212, 91.6606, 26.3566, 61.956, 24.25, 77.8316, 67.9306, 6.3174, 0.0, 0.0, 130.1235], [48.2072, 15.1975, 247.05, 79.8504, 37.0315, 48.5789, 5.9205, 47.7818, 16.9091, 97.1538, 20.3801, 141.3316, 0.0, 7.0719, 0.0, 0.0, 132.5062], [126.3224, 7.9012, 167.95, 40.6063, 23.036, 70.5395, 32.3144, 35.7273, 41.049, 83.3692, 67.0077, 74.1468, 14.3584, 143.5449, 26.1509, 0.0, 101.5432], [180.7237, 42.3951, 159.4, 99.6142, 72.3288, 60.7895, 56.9886, 43.9455, 89.9301, 8.2154, 74.8546, 107.2722, 80.1445, 83.4551, 0.0, 0.0, 191.8519], [162.8125, 124.7037, 328.69, 84.126, 34.1847, 151.1974, 24.0568, 107.5758, 42.4126, 64.2022, 43.602, 101.3608, 16.3584, 128.4072, 5.0566, 0.0, 175.8025], [123.1217, 65.5679, 297.69, 36.6299, 26.018, 120.8158, 10.6061, 79.4667, 50.3287, 152.6923, 74.0332, 81.919, 59.0116, 120.0419, 6.5849, 0.4388, 222.8519], [166.8553, 34.1852, 441.61, 61.8346, 52.509, 75.1974, 39.2273, 14.3394, 22.3566, 88.844, 45.1811, 161.3101, 147.4855, 84.994, 0.0, 0.0, 372.358]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

