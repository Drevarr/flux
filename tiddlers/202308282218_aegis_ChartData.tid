created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Belvyn Brightblade", "Sub Train", "Darks Na", "Crusader Siolith", "Koralia Danai", "Bella Sassy", "Solus Luxes"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.916, 5.2022, 328.3916, 14.069, 41.2066, 1.81, 14.2057, 20.0466, 286.6122, 31.7628, 15.8868, 29.198, 8.1648, 0.1806, 17.5341, 0.0, 17.9661, 0.0, 2.578, 221.7798, 85.6786, 25.298, 0.0, 23.8963, 12.5741], [0.0, 110.7928, 385.7895, 21.1036, 117.9324, 14.4401, 276.6106, 72.8721, 386.8968, 20.9304, 57.7318, 114.4406, 59.724], [0.0, 81.8292, 177.8395, 7.0537, 62.3954, 0.0, 206.1824, 72.6463, 515.0712, 35.343, 73.155, 136.5841, 62.4834, 34.9461, 82.3089, 49.6658, 160.7122, 16.387, 22.3146, 551.4894, 220.968, 10.0328, 11.6275], [6.1666, 151.5668, 555.1605, 34.1155, 149.9386, 27.7863, 342.0368, 98.111, 758.6619, 82.5282, 91.9495, 288.845, 97.1082, 31.9963, 247.2165, 38.0667, 343.4609, 49.7656, 22.1206, 571.527], [17.2747, 228.5453, 859.0873, 95.5726, 69.6946, 368.8475, 181.7739, 688.9374, 115.3008, 86.5134, 441.008, 79.2666, 56.287, 478.4928, 20.7289, 174.4675, 179.7537, 90.3672, 561.5082, 379.4947, 4.5728, 0.0, 23.2781, 126.0806], [46.6181, 417.9335, 1394.8016, 45.8013, 158.3584, 56.9849, 511.8046, 126.0588, 1190.0637, 221.2839, 176.9459, 297.9572, 190.4742, 67.8755, 652.3848, 383.8846, 134.8909, 94.9133, 1283.3172, 474.1546, 56.6247, 0.0, 88.1395, 200.2507], [53.0213, 401.0615, 1140.745, 185.7229, 187.4651, 28.4825, 351.4405, 134.5019, 1044.0873, 297.7074, 119.0876, 400.9342, 177.849, 39.13, 550.5131, 77.7681, 821.5271, 266.2222, 93.8045, 1219.5612, 433.0973, 158.2262, 19.9987, 93.7306, 215.3311], [38.1686, 217.7191, 1441.8491, 119.5868, 240.2141, 70.5896, 446.8787, 213.9207, 1042.0104, 204.1632, 111.6289, 455.2151, 223.8516, 43.0129, 401.9803, 79.9244, 643.4102, 163.2995, 164.5182, 1339.3314, 661.621, 188.188, 0.0, 125.5565, 107.3894]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

