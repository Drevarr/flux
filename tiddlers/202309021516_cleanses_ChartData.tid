created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Cupi Cupita", "High Sorcer Baradun", "Eibh\u00ebar", "Rahani Sunray", "Primal Clone", "Cat Wigglebooty", "Elizabeth Conbolt", "Venomina The Sly", "Tegan Parker", "J\u00e2sm\u00eene", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Vindicator", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Druid", "Tempest", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1197, 0.0, 0.1063, 0.0, 0.0, 0.0, 0.2143, 0.0, 0.0, 0.0, 0.1587, 0.0885, 0.0596, 0.0097, 0.0, 0.0154, 0.0357, 0.0702], [0.0536, 0.2679, 0.0, 0.4219, 0.6508, 0.354, 0.2086], [0.4786, 0.5625, 0.0, 0.1765, 0.3036, 0.2656], [0.188, 0.0, 0.1293, 0.0, 0.0, 0.1964, 0.1111, 0.0, 0.1212, 0.0, 0.1905, 0.3982, 0.0762, 0.1165, 0.0, 0.0, 0.0, 0.1571, 0.2281], [0.3419, 0.0, 0.0833, 0.0446, 0.0, 0.1176, 0.0357, 0.0, 0.0, 0.0, 0.3492, 0.2212, 0.1258, 0.0, 0.0, 0.3231, 0.0857, 0.0526], [0.2991, 0.0, 0.1667, 0.0, 0.0, 0.0, 0.4815, 0.0312, 0.3939, 0.0, 0.3968, 0.354, 0.0828, 0.1165, 0.0, 0.0, 0.0, 0.1071, 0.0702], [0.2991, 0.0, 0.25, 0.3125, 0.0, 0.0, 0.0714, 0.0, 0.1515, 0.0635, 0.0973, 0.2119, 0.0485, 0.0345, 0.0, 0.0, 0.1714, 0.0175], [0.5598, 0.1818, 0.5517, 0.4821, 0.0, 0.0588, 0.3036, 0.375, 0.1515, 0.0702, 0.5556, 0.3982, 0.2947, 0.1456, 0.0, 0.1231, 0.1429, 0.0], [0.8504, 0.6897, 0.4732, 0.0833, 0.0, 0.0893, 0.0, 0.3281, 0.9091, 0.619, 1.2124, 0.2219, 0.0, 0.0154, 0.4143, 0.0877], [0.6923, 0.0364, 0.8621, 0.3661, 0.0, 0.2941, 0.0, 0.0, 0.5312, 0.5152, 0.0, 0.6508, 0.8584, 0.3742, 0.1068, 0.0, 0.0, 0.0615, 0.2071, 0.0175], [0.8504, 0.0364, 0.8448, 0.375, 0.0, 0.2143, 0.0, 0.6562, 1.2121, 0.2632, 0.8413, 0.9027, 0.543, 0.2913, 0.0, 0.2615, 0.4, 0.0175], [1.094, 0.5455, 1.296, 0.5446, 0.0, 0.0294, 0.4107, 0.0741, 0.0, 1.0606, 0.0, 1.4921, 1.2743, 0.553, 0.4563, 0.0, 0.0, 0.0, 0.4643, 0.0877], [0.7051, 0.1455, 0.9741, 0.9018, 0.0208, 0.7941, 0.8393, 0.4444, 1.2031, 1.4545, 0.8772, 1.1905, 1.0354, 0.7152, 0.3592, 0.1264, 0.1607, 0.7385, 0.6714, 0.1754]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

