created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Gwydianna", "Chainer Valentine", "Brutal Araden", "Porlen", "Amiti\u00e9l", "Executorj", "Luke The Knight", "Ggclaudx", "Hayuf", "Prolly Getn Carried", "K\u00e2 Otik", "Naithan Stone", "Dalveirric", "Lost Uber Driver", "Jello Jawn", "Valaria Emberstorm", "Miphest\u00f6", "Sonia Truestrike", "Audra Storm", "Greg The Knight", "Hayuf", "Jmbrage Rev", "Kittendo", "Jerryatric Reflexes", "Zaedy Zae", "Lucky Leipreach\u00e1n", "S\u00e2ucy K\u00e2t", "Aisling Vexwind", "Perpetual Hope", "Blaze All Might", "Danaeryn", "K\u00e2 \u00d4tik R\u00e6j", "Zayde Sunsabre", "Artakama Nahid", "Boof Floof", "Jerryatric Reflexes", "Free H\u00e4nd", "Tika Fiery", "Glorious Gluvs", "Scythe User", "Newtype Khan", "Whip \u00d1 Sl\u00e0pper", "Enter Effore", "Erin Celes", "Koranthin", "Red Reaper Robin", "Drevarr Moonwillow", "Tantai Jin", "Sarette Fay"];
const professions = ["Virtuoso", "Soulbeast", "Renegade", "Ranger", "Firebrand", "Reaper", "Berserker", "Holosmith", "Dragonhunter", "Specter", "Firebrand", "Tempest", "Soulbeast", "Herald", "Virtuoso", "Tempest", "Tempest", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Vindicator", "Soulbeast", "Berserker", "Druid", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Berserker", "Reaper", "Spellbreaker", "Tempest", "Firebrand", "Herald", "Firebrand", "Reaper", "Scrapper", "Reaper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0884, 0.0], [0.0, 0.0345, 0.0702, 0.0046, 0.0159, 0.0431, 0.0], [0.0837, 0.0, 0.0339], [0.0229, 0.0476, 0.0, 0.0, 0.0, 0.0169], [0.008, 0.0, 0.0, 0.193, 0.0069], [0.0, 0.0339, 0.4615], [0.0238, 0.0, 0.0345, 0.0233, 0.0, 0.0508, 0.0395, 0.1538], [0.0278, 0.0, 0.0517, 0.0279, 0.0, 0.0169, 0.2115], [0.131], [0.0, 0.0784, 0.1034, 0.2456], [0.064, 0.0088, 0.0709], [0.016, 0.0196, 0.0345, 0.114, 0.0526], [0.048, 0.0784, 0.1754, 0.0069, 0.0, 0.0086, 0.0372, 0.0303], [0.0714, 0.0, 0.0517, 0.0186, 0.0, 0.0, 0.3077], [0.016, 0.0196, 0.1379, 0.1316, 0.0549], [0.016, 0.1176, 0.2018, 0.0481], [0.0892, 0.0516], [0.0794, 0.0517, 0.0698, 0.0, 0.0169, 0.0, 0.2308], [0.0, 0.0, 0.0, 0.0614, 0.016, 0.0635, 0.0, 0.1207, 0.0186, 0.0, 0.0678, 0.0395, 0.0], [0.0794, 0.0, 0.1034, 0.0837, 0.0, 0.1186], [0.064, 0.0392, 0.1379, 0.2368, 0.0481], [0.024, 0.0588, 0.0345, 0.1228, 0.0458, 0.0357, 0.0, 0.1466], [0.131, 0.0, 0.0431, 0.0558, 0.0, 0.0678, 0.3269], [0.1111, 0.0, 0.0776, 0.0279, 0.0, 0.0508, 0.1842, 0.25], [0.048, 0.0196, 0.1724, 0.2982, 0.0732], [0.032, 0.0392, 0.3103, 0.2895, 0.0732], [0.032, 0.0392, 0.0, 0.1316, 0.0503, 0.0754, 0.0, 0.0517, 0.0512, 0.0, 0.0339], [0.0, 0.1379, 0.114, 0.032, 0.0317, 0.0, 0.1293, 0.0605, 0.0847, 0.2368, 0.0], [0.024, 0.0, 0.1034, 0.0789, 0.0481, 0.0794, 0.0278, 0.0603, 0.0372, 0.0, 0.0678, 0.0395, 0.2308], [0.0664, 0.1389, 0.0, 0.0431, 0.0233, 0.0, 0.0508, 0.0, 0.2885], [0.016, 0.0196, 0.069, 0.1579, 0.0366, 0.0675, 0.0, 0.0776, 0.0093, 0.0, 0.0339, 0.1974, 0.1731], [0.0913, 0.0, 0.1207, 0.0698, 0.0508, 0.2105, 0.4615], [0.1111, 0.0, 0.1207, 0.1023, 0.0, 0.1017, 0.1842, 0.2115], [0.0, 0.0, 0.1316, 0.0595, 0.0913, 0.0, 0.0862, 0.0419, 0.0, 0.1525, 0.0526], [0.032, 0.0, 0.0, 0.0439, 0.0275, 0.1071, 0.0, 0.1121, 0.107, 0.0339, 0.0921, 0.1538], [0.024, 0.0784, 0.1379, 0.4035, 0.1007], [0.032, 0.0196, 0.0, 0.1053, 0.0343, 0.0952, 0.0, 0.0948, 0.0279, 0.0, 0.0339, 0.2368, 0.1731], [0.048, 0.0196, 0.0345, 0.2807, 0.0549, 0.0238, 0.0, 0.0431, 0.0186, 0.0, 0.0508, 0.0921, 0.3077], [0.048, 0.0392, 0.0345, 0.114, 0.0481, 0.0873, 0.0, 0.0862, 0.0465, 0.0, 0.1186, 0.0263, 0.2308], [0.112, 0.1176, 0.5517, 0.5088, 0.0503], [0.008, 0.0196, 0.1754, 0.087, 0.131, 0.0, 0.0603, 0.0651, 0.0, 0.0508], [0.008, 0.0784, 0.069, 0.0789, 0.0595, 0.127, 0.0278, 0.1207, 0.0558, 0.0, 0.1017, 0.25], [0.0, 0.0, 0.0345, 0.1404, 0.0366, 0.119, 0.0, 0.1207, 0.0419, 0.0508, 0.1974, 0.3269], [0.008, 0.098, 0.069, 0.2018, 0.0641, 0.0675, 0.0, 0.069, 0.0651, 0.0, 0.0339, 0.0658, 0.4038], [0.008, 0.1765, 0.0, 0.2281, 0.0664, 0.0794, 0.0, 0.069, 0.0605, 0.0, 0.0508, 0.0921, 0.3654], [0.064, 0.0196, 0.069, 0.2018, 0.0526, 0.123, 0.0, 0.1293, 0.0465, 0.0, 0.0339, 0.0, 0.4615], [0.064, 0.0, 0.069, 0.1842, 0.0778, 0.123, 0.0, 0.1121, 0.0558, 0.0, 0.0339, 0.0789, 0.2308], [0.04, 0.0392, 0.0, 0.2368, 0.0801, 0.0635, 0.0278, 0.0776, 0.0465, 0.0, 0.0508, 0.3553, 0.1731], [0.032, 0.0392, 0.069, 0.3684, 0.0549, 0.1111, 0.0, 0.0776, 0.1023, 0.0, 0.1186, 0.0132, 0.7115]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

