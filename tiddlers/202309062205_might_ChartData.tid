created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Aira Draugr", "Eibh\u00ebar", "Rahani Sunray", "Black Raspberry Pie", "Philip Poundhouse", "Tootsie Pop Rocks", "Tegan Parker", "Belvyn Brightblade", "Darks Na", "Jmbrage Gaurdian", "Tribal S", "Rafaellagabriela", "Sygaldry Verdandi", "Stoic Rapidfire", "Koralia Danai", "Bella Sassy", "Mistwalker Cael", "Solus Luxes", "Crusader Siolith", "Drevarr Moonwillow", "Venomina The Fierce"];
const professions = ["Berserker", "Herald", "Chronomancer", "Chronomancer", "Chronomancer", "Herald", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Herald", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.3721, 1.1612, 0.0, 0.0, 11.4998, 1.2046, 0.0, 15.246, 1.2144, 0.0, 5.5706, 1.3312, 0.0, 0.0, 0.953, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4035, 0.0, 0.0, 0.0, 3.888], [1.0057, 9.606, 2.681, 1.3212, 12.8323, 0.7695, 0.4774, 18.121, 10.4108, 1.1051, 1.189, 4.6777], [3.6679, 12.6672, 3.0208, 2.2552, 6.6082, 0.0, 4.7045, 2.237, 0.5633, 0.9396, 11.088, 0.0, 0.0, 0.0, 2.2352, 0.6528, 3.6864, 0.0, 1.19, 3.4443, 4.2408, 0.9326, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5525, 0.0, 0.684], [6.457, 7.4946, 11.065, 0.0, 0.0, 4.7045, 1.0325, 0.0, 4.3964, 8.316, 1.7134, 0.0, 3.8272, 7.4778, 1.4797, 3.6096, 0.0, 2.567, 1.254, 2.7528, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2798, 0.0, 1.116], [0.0, 3.114, 1.4349, 3.0981, 11.6028, 0.0, 1.3345, 13.9392, 6.0228, 4.7058, 0.0, 25.1212, 0.0, 3.128, 5.08, 5.8752, 6.6304, 0.0, 2.363, 1.1202, 1.9344, 0.0, 3.9984, 0.0, 0.0, 0.0, 1.2954, 0.1711, 3.1137, 0.648], [9.0624, 1.9363, 8.6829, 0.1085, 43.56, 12.82, 0.1782, 1.5486, 34.8233], [1.834, 4.0641, 10.2707, 6.4012, 5.302, 0.0, 1.2803, 2.4394, 12.3898, 30.6653, 2.9857, 1.836, 3.9744, 4.0234, 11.0106, 2.2528, 0.0, 4.488, 6.989, 1.6554], [2.7608, 22.8537, 8.2694, 4.4877, 21.8226, 1.0602, 0.0, 22.9997, 4.216, 0.0, 29.4525, 0.0, 2.944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [9.012, 2.2695, 15.4061, 2.5741, 29.276, 5.9166, 4.4811, 32.4086, 21.7681, 0.0, 0.0, 35.1698], [7.0006, 18.2091, 7.7786, 0.6834, 28.2003, 2.052, 4.9042, 58.8931, 23.747, 2.7144, 47.4705, 0.0], [0.3417, 24.973, 0.0, 1.8445, 53.1432, 25.898, 0.0, 66.1815, 1.1286, 10.4144, 8.8189, 8.9651, 0.0, 0.0], [7.0006, 17.1007, 10.9126, 10.3193, 20.5931, 0.0, 1.7034, 40.5979, 24.5214, 1.7516, 55.7865, 2.4521, 0.0, 5.8144, 11.1354, 9.3568, 5.7856, 0.0, 6.3202, 4.1292, 0.0, 0.0, 1.4448, 0.0, 5.3383, 3.0912, 4.4206, 1.3912, 7.416], [13.1027, 7.1985, 35.2696, 6.0109, 69.696, 42.8479, 3.8359, 2.2794, 66.528, 2.9138, 0.0, 1.8032, 20.6858, 20.1062, 15.7184, 0.0173], [10.1755, 21.4815, 12.8762, 10.4788, 29.9676, 2.7018, 47.5675, 43.9664, 57.3457, 0.6534, 11.8496, 9.713, 7.616, 1.92, 0.0, 1.1971, 0.0, 2.2596, 1.9103, 10.0694, 8.9939, 3.6078, 13.8065, 16.128], [9.5904, 29.1992, 11.1864, 73.355, 41.9015, 72.5918, 4.6375, 5.886, 9.5312, 11.3792, 12.3162, 15.1552, 1.2874, 0.0, 4.9826, 5.0406, 0.529, 0.0, 0.0, 0.0, 4.7691, 1.84, 0.1854, 8.162, 14.652], [10.1164, 19.9508, 10.7616, 3.7359, 23.7436, 2.6334, 8.3979, 70.393, 26.6724, 0.0, 0.0, 69.6465, 0.0, 3.7536, 15.9309, 16.6246, 2.1248, 2.0477, 12.937, 1.8225, 1.5438, 2.3525, 0.0, 2.8644, 5.6419, 0.9568, 1.2691, 9.5267, 26.46], [32.9314, 33.3835, 0.0, 103.6035, 0.6566, 0.0, 36.7632, 19.2227, 21.9776, 2.8672, 4.5187, 18.768, 8.9954, 8.0538, 1.6147, 0.0, 3.402, 0.0, 16.5968, 11.4816, 0.0143, 7.5393, 20.592], [10.4122, 28.1317, 14.009, 8.5197, 30.1213, 8.0028, 5.4792, 52.0978, 37.9436, 0.7366, 84.0263, 2.6984, 3.3264, 16.008, 25.847, 28.4621, 11.5968, 0.5962], [9.3867, 22.6426, 9.2512, 7.039, 43.4914, 2.4282, 68.1278, 24.7795, 1.5258, 73.6313, 1.1902, 2.6244, 11.5552, 13.4518, 12.8819, 10.4448, 1.1578, 11.798, 5.4006, 2.976, 2.4221, 3.7632, 2.3856, 0.0627, 17.2799, 10.7603, 4.1924, 13.6608, 38.7], [3.2735, 36.2071, 26.5075, 8.4969, 58.7826, 0.0, 6.7921, 79.9762, 38.632, 6.9589, 0.7076, 93.7283, 2.1546, 11.1872, 24.831, 24.7194, 5.8112, 1.2701, 10.302, 8.3433, 5.9148, 2.3664, 5.8934, 0.0, 4.1354, 14.204, 22.284], [12.6011, 47.6076, 23.5245, 9.4765, 67.9266, 1.7784, 3.9928, 112.2106, 62.465, 0.0, 5.1272, 136.1745, 1.58, 1.7496, 19.504, 21.4986, 22.3693, 8.4224, 2.9808, 12.631, 14.3959, 9.9138, 1.4059, 8.4672, 5.712, 0.9739, 15.3192, 12.6445, 16.5131, 12.7995, 27.792], [17.8072, 50.4577, 32.7757, 16.6066, 78.2231, 0.0, 10.5679, 110.9909, 75.9733, 4.2495, 6.1248, 117.9832, 3.834, 17.9584, 33.4061, 31.3779, 14.2848, 2.5747, 13.4429, 13.7268, 4.6075, 6.6461, 3.2256, 2.7839, 14.7626, 12.2176, 19.5362, 12.3358, 33.696]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

