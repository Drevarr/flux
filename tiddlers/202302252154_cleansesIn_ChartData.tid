created: 20230225215428000
creator: Drevarr
modified: 20230705163520213
modifier: drevarr
tags: ChartData
title: 202302252154_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Viral Marketing", "Nekroomori", "Nekroomori", "Roided Barack", "Harry Callahann", "Blanco Padre Guard", "Blackchars", "Sumatra Satyricon", "Venomina The Fierce", "Madrigal Moonshade", "Husky Guard", "Primal Clone", "Viral Marketing", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Mistwalker Caelon", "Morv\u00e4rth", "Cat Wigglebooty", "Sizklea", "Sparks Malefacio", "Xyntharos", "Smol Gluvs", "Sygaldry Verdandi", "Ace Hammers", "Be\u00eb", "Koralia Danai", "Vopiscus Zergherdus", "Sassy Daddy Demon", "Aronorf Xideliesi", "Tribal S", "Tootsie Pop Tart", "Grasszanine", "Tegan Parker", "Gabe Malhorn", "Xanvias Tseli", "Smol Daddy Tika", "Daring Deathblade", "Newtype Khan", "Bella Sassy", "Mac Aaroni", "Hyde En Sikh", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Firebrand", "Scourge", "Reaper", "Tempest", "Scrapper", "Firebrand", "Renegade", "Soulbeast", "Spellbreaker", "Vindicator", "Dragonhunter", "Chronomancer", "Willbender", "Berserker", "Weaver", "Vindicator", "Scourge", "Scrapper", "Firebrand", "Scourge", "Vindicator", "Scourge", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Scrapper", "Vindicator", "Firebrand", "Druid", "Scrapper", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Berserker", "Scourge", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1143, 0.0289, 0.3944], [0.2436, 0.06, 0.1509, 0.1625], [0.0, 0.1429, 0.1159, 0.1786, 0.2286, 0.0, 0.0141], [0.0116, 0.6479], [0.1402, 0.08, 0.1132, 0.1, 0.1429, 0.0, 0.0058, 0.2676], [0.1026, 0.0, 0.1905, 0.1341, 0.05, 0.3774, 0.1625, 0.125, 0.0, 0.0704], [0.4103, 0.0571, 0.3492, 0.0549, 0.3585, 0.075, 0.0536], [0.1026, 0.2571, 0.0317, 0.2378, 0.12, 0.3396, 0.075, 0.0536, 0.0571, 0.0, 0.2676], [0.0793, 0.09, 0.5094, 0.25, 0.3036, 0.0286, 0.0173, 0.3944], [0.0513, 0.2286, 0.0635, 0.2073, 0.11, 0.0943, 0.1375, 0.2143, 0.0058, 0.4225], [0.0769, 0.2286, 0.0635, 0.1951, 0.07, 0.1887, 0.35, 0.1607, 0.0116, 0.3099], [0.0897, 0.1111, 0.25, 0.08, 0.3019, 0.15, 0.2857, 0.0857, 0.0116, 0.2535], [0.1282, 0.1746, 0.2134, 0.21, 0.3774, 0.2375, 0.3214], [0.1923, 0.0, 0.0159, 0.2744, 0.27, 0.2075, 0.2375, 0.1143, 0.0116, 0.2113], [0.1154, 0.1714, 0.3175, 0.2805, 0.08, 0.3019, 0.1625, 0.3929], [0.0385, 0.0571, 0.1746, 0.3537, 0.09, 0.283, 0.15, 0.3036, 0.0, 0.1831], [0.3718, 0.1143, 0.1746, 0.2073, 0.1, 0.2453, 0.2375, 0.4286, 0.0], [0.0897, 0.2, 0.0794, 0.1341, 0.08, 0.2453, 0.1125, 0.4821, 0.0571, 0.0, 0.662], [0.141, 0.0571, 0.3175, 0.2073, 0.15, 0.566, 0.175, 0.4107], [0.0857, 0.2063, 0.2378, 0.13, 0.2453, 0.25, 0.375, 0.2286, 0.0058, 0.2958], [0.1154, 0.0, 0.3492, 0.1646, 0.09, 0.434, 0.0625, 0.4821, 0.3714, 0.0058, 0.2817], [0.1538, 0.1429, 0.2622, 0.07, 0.434, 0.15, 0.2321, 0.0857, 0.493], [0.0897, 0.2571, 0.254, 0.2012, 0.19, 0.2264, 0.15, 0.3214, 0.0, 0.5634], [0.141, 0.4286, 0.1429, 0.2561, 0.25, 0.1887, 0.1625, 0.3929, 0.0, 0.2817], [0.1538, 0.2698, 0.2317, 0.1, 0.1698, 0.25, 0.2321, 0.0, 0.0, 0.7887], [0.1282, 0.1429, 0.2222, 0.1402, 0.08, 0.1321, 0.2375, 0.4643, 0.2571, 0.0116, 0.8028], [0.1585, 0.11, 0.3396, 0.2875, 0.7679, 0.0, 0.0116, 0.831], [0.1923, 0.0286, 0.1746, 0.2378, 0.24, 0.3208, 0.2875, 0.3929, 0.2571, 0.0058, 0.4225], [0.0897, 0.0, 0.3492, 0.2317, 0.08, 0.2453, 0.2, 0.5893, 0.0, 0.8169], [0.2179, 0.1429, 0.1746, 0.2988, 0.12, 0.283, 0.15, 0.5536, 0.0857, 0.0, 0.6761], [0.2692, 0.2222, 0.3049, 0.16, 0.2264, 0.25, 0.4821, 0.2286, 0.0231, 0.5211], [0.359, 0.0571, 0.0635, 0.3476, 0.22, 0.3396, 0.125, 1.1607, 0.0289], [0.141, 0.1714, 0.4762, 0.3049, 0.17, 0.1509, 0.2875, 0.4643, 0.2286, 0.0231, 0.4507], [0.0385, 1.0, 0.4762, 0.2012, 0.09, 0.2642, 0.1125, 0.3214, 0.2857, 0.0058, 0.7887], [0.1026, 0.1714, 0.0952, 0.311, 0.15, 0.3396, 0.325, 0.5536, 0.0, 0.0058, 0.9437], [0.0897, 0.0, 0.3651, 0.2317, 0.31, 0.3774, 0.45, 0.2143, 0.1429, 0.831], [0.2051, 0.0, 0.4762, 0.25, 0.2, 0.2642, 0.5625, 1.1607], [0.1923, 0.1143, 0.1429, 0.2561, 0.23, 0.3396, 0.2625, 0.75, 0.3429, 0.0116, 0.9014], [0.2436, 0.6, 0.3651, 0.2195, 0.19, 0.3019, 0.1625, 0.7857, 0.0571, 0.0173, 0.831], [0.1282, 0.2, 0.254, 0.3841, 0.16, 0.3019, 0.275, 1.0, 0.2857, 0.0116, 0.5634], [0.2308, 0.6286, 0.1587, 0.3902, 0.16, 0.5283, 0.2125, 0.7857, 0.0, 0.0116, 0.6901], [0.3846, 0.9714, 0.5079, 0.2988, 0.22, 0.3774, 0.1625, 0.5714, 0.4571, 0.0058, 0.7324], [0.359, 1.0571, 0.746, 0.3354, 0.13, 0.2642, 0.225, 0.6607, 0.4286, 0.0058, 1.1972]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

