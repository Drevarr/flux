created: 20230208220141000
creator: Drevarr
modified: 20230705163518826
modifier: drevarr
tags: ChartData
title: 202302082201_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "\u00c9\u00efbhear", "Drevarr Moonwillow", "Whose Guardian", "Kahless The Drunk", "Gabe Malhorn", "Stabby Beech", "Zaylen Harker", "Jupi Jupi Jupi", "Koralia Danai", "Bella Sassy", "Johosh The Great"];
const professions = ["Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[126.3686, 0.0, 3.8931, 0.0, 0.0, 0.0, 63.5342, 277.992, 0.0, 16.4266, 328.1775], [384.0134, 0.0, 34.7038, 5.833, 10.856, 13.081, 7.817, 290.6904, 54.7884, 22.152, 150.955], [401.1898, 5.3544, 13.2364, 21.6002, 5.382, 2.7866, 38.0873, 330.8448, 54.0284, 48.564, 196.84], [405.2794, 0.0, 75.7476, 31.3522, 0.0, 16.2131, 6.6528, 334.9632, 94.446, 46.0762, 166.25], [704.9328, 87.8134, 56.4024, 381.71], [130.3616, 116.5073, 0.0, 32.1729, 107.1932, 626.6832, 76.6208, 22.4928, 206.4825], [677.6467, 0.0, 14.6824, 13.033, 0.0, 233.0143, 365.8512, 28.6033, 10.7352, 65.17], [403.2346, 10.9882, 147.9359, 13.4887, 0.0, 0.0, 177.214, 421.1064, 76.5517, 12.1325, 409.64], [118.004, 1091.0328, 193.7284, 142.8634, 1291.0975], [744.3072, 215.6659, 304.9927, 61.4587, 52.578, 56.4465, 270.1037, 941.7408, 178.8049, 73.1357, 912.7125], [963.1008, 93.5856, 379.9617, 102.654, 73.071, 105.6156, 280.3324, 1302.444, 230.9679, 83.8709, 996.5025], [1505.7907, 136.607, 418.2248, 232.5893, 129.03, 161.0258, 164.5736, 2091.804, 415.8527, 218.521, 1590.3475]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

