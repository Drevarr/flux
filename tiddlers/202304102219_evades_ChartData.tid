created: 20230410221909000
creator: Drevarr
modified: 20230705163525185
modifier: drevarr
tags: ChartData
title: 202304102219_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Aira Draugr", "Oo Dads Mad", "Smol Gluvs", "Legacy Of Mathus", "Black Raspberry Pie", "Aisling Sidra", "Zaylen Harker", "Be\u00eb", "Bella Sassy", "Tribal S", "Smol Daddy Tika", "Sumatra Satyricon", "Jeckyll Mbs", "Drevarr Moonwillow", "Tegan Parker", "Smol Gluvs", "Elonith Requiem", "Tootsie Pop Rocks", "Fribble Bibble", "Rozaalyna", "Ak\u00e1nt\u00f3r", "Sp\u00edcy Cheese", "Ark Darkness", "Sygaldry Verdandi", "Sofya De Nova", "Sub Train", "Venomina The Siren", "Gavann", "Koralia Danai", "Arriasa", "Solus Sanctus", "Xanvias Einzbern", "Blancooo Padreee", "High Sorcer Baradun", "Arcanophage Farra", "Lord Erin The Wise", "Asorlia", "Eibh\u00ebar", "Johosh The Great", "Newtype Khan", "Kmpek", "Sassy Daddy Demon", "Inedible Plant", "Grasszanine", "Ryvalia Fazebringer", "Mac Chiato", "Mistwalker Caelon", "Mike The Archmagus", "Xyntharos"];
const professions = ["Firebrand", "Herald", "Spellbreaker", "Reaper", "Berserker", "Chronomancer", "Reaper", "Firebrand", "Scourge", "Firebrand", "Druid", "Berserker", "Soulbeast", "Berserker", "Scrapper", "Tempest", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scourge", "Druid", "Berserker", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Druid", "Firebrand", "Berserker", "Berserker", "Tempest", "Spellbreaker", "Weaver", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator", "Spellbreaker", "Chronomancer", "Tempest", "Vindicator", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 0, 3, 20, 70], [11, 0, 9, 52, 28], [1, 12, 22, 74], [46, 46, 18], [0, 5, 28, 65, 8, 8, 0], [0, 0, 5, 4, 15, 0, 3, 0, 4, 0, 15, 1, 0, 0, 19, 0, 5, 4, 11, 2, 21, 7], [38, 8, 1, 0, 6, 0, 7, 4, 0, 4, 12, 0, 0, 13, 0, 3, 7, 14], [36, 0, 2, 3, 26, 2, 0, 3, 7, 0, 0, 0, 2, 1, 0, 0, 0, 5, 2, 26, 8, 8], [2, 1, 2, 7, 50, 0, 0, 3, 8, 0, 1, 4, 4, 0, 0, 2, 1, 6, 41], [12, 0, 0, 8, 19, 5, 0, 0, 7, 0, 0, 13, 0, 1, 15, 0, 10, 0, 11, 23, 8, 2], [0, 1, 11, 19, 0, 1, 7, 0, 1, 0, 5, 12, 24, 0, 17, 4, 5, 32, 0, 6], [1, 4, 0, 3, 28, 0, 2, 3, 18, 2, 3, 5, 2, 10, 0, 12, 0, 18, 19, 7, 16], [2, 16, 16, 43, 4, 1, 1, 3, 0, 17, 2, 21, 1, 0, 0, 6, 0, 13, 3, 6, 6], [20, 2, 6, 2, 30, 8, 6, 2, 2, 0, 5, 0, 2, 4, 5, 2, 12, 0, 20, 22, 14], [28, 0, 8, 7, 30, 0, 0, 4, 0, 0, 1, 1, 2, 3, 7, 1, 21, 1, 6, 20, 18, 8], [0, 3, 9, 61, 1, 0, 0, 3, 0, 1, 0, 11, 1, 7, 1, 14, 1, 5, 34, 12, 6], [1, 0, 3, 15, 60, 9, 10, 0, 4, 0, 4, 8, 3, 5, 13, 4, 20, 0, 18], [3, 28, 88, 1, 2, 1, 13, 0, 1, 0, 1, 8, 2, 0, 16, 1, 14], [23, 0, 11, 17, 53, 1, 0, 0, 1, 2, 5, 2, 3, 13, 0, 15, 0, 6, 8, 20], [15, 0, 1, 4, 81, 0, 17, 0, 1, 0, 12, 0, 0, 3, 0, 0, 2, 0, 2, 45, 1, 13], [1, 1, 16, 103, 3, 0, 0, 7, 0, 6, 2, 1, 30, 1, 1, 0, 25], [25, 0, 2, 4, 51, 0, 0, 1, 0, 1, 0, 2, 1, 27, 0, 14, 6, 16, 31, 23, 11], [7, 0, 1, 24, 53, 0, 4, 1, 2, 0, 0, 3, 4, 0, 4, 3, 0, 1, 23, 38, 20, 36], [0, 8, 8, 68, 2, 1, 1, 3, 0, 2, 2, 0, 2, 39, 0, 16, 0, 24, 45, 4], [1, 0, 23, 40, 3, 3, 2, 3, 3, 3, 5, 8, 9, 35, 0, 34, 2, 54, 1], [7, 76, 4, 0, 6, 1, 0, 0, 7, 0, 13, 0, 4, 0, 15, 53, 26, 23], [0, 7, 10, 18, 0, 4, 1, 1, 2, 33, 0, 48, 0, 39, 51, 2, 24], [45, 1, 2, 2, 6, 0, 13, 10, 0, 4, 1, 8, 68, 2, 11, 27, 11, 30], [0, 1, 14, 72, 4, 6, 1, 7, 1, 9, 17, 4, 1, 10, 2, 12, 1, 36, 21, 9, 21], [24, 1, 0, 12, 41, 1, 0, 1, 7, 0, 0, 8, 0, 6, 22, 5, 37, 1, 11, 44, 8, 33], [46, 0, 3, 9, 33, 4, 0, 0, 3, 0, 1, 1, 5, 7, 11, 2, 26, 6, 25, 18, 55, 9], [0, 14, 27, 90, 1, 1, 0, 11, 5, 3, 1, 5, 38, 0, 16, 0, 12, 34, 6, 11], [21, 0, 3, 4, 71, 3, 0, 0, 2, 0, 4, 6, 6, 1, 17, 0, 20, 0, 4, 63, 31, 21], [7, 0, 13, 61, 7, 0, 14, 25, 0, 7, 3, 3, 26, 26, 8, 13, 0, 14, 26, 11, 15], [0, 5, 22, 139, 9, 15, 3, 21, 5, 1, 2, 0, 1, 3, 7, 6, 30, 6, 15], [5, 2, 4, 13, 94, 17, 0, 4, 8, 0, 6, 14, 33, 9, 12, 0, 7, 3, 7, 34, 16, 16], [24, 2, 10, 20, 133, 6, 0, 0, 3, 4, 12, 1, 10, 0, 5, 1, 9, 1, 46, 28], [0, 11, 1, 83, 12, 0, 5, 25, 12, 0, 8, 9, 50, 0, 26, 0, 30, 53, 29, 27], [3, 4, 20, 151, 3, 1, 6, 4, 0, 4, 2, 9, 7, 0, 7, 7, 0, 28, 52, 59, 25], [15, 0, 9, 36, 139, 4, 0, 1, 1, 0, 1, 5, 4, 2, 20, 2, 44, 0, 35, 33, 23, 20], [25, 0, 6, 35, 43, 4, 5, 3, 6, 0, 22, 1, 15, 7, 15, 2, 21, 0, 47, 67, 23, 51], [11, 3, 6, 22, 0, 12, 21, 20, 34, 32, 11, 21, 4, 64, 103, 27, 38], [3, 16, 38, 142, 10, 4, 28, 12, 12, 5, 11, 11, 6, 55, 4, 20, 50, 4], [3, 16, 28, 80, 1, 4, 33, 10, 4, 2, 21, 10, 11, 30, 5, 34, 5, 63, 32, 0, 50], [5, 151, 8, 0, 9, 11, 2, 11, 3, 21, 25, 19, 0, 27, 0, 25, 68, 81, 19], [0, 9, 12, 63, 9, 3, 11, 25, 0, 27, 19, 15, 19, 59, 2, 62, 1, 18, 60, 34, 58], [1, 7, 28, 208, 14, 0, 3, 10, 0, 6, 13, 20, 4, 45, 7, 37, 0, 66, 55, 2, 36], [18, 2, 16, 46, 184, 2, 4, 34, 13, 0, 20, 8, 10, 29, 24, 6, 12, 6, 28, 73, 13, 41], [13, 3, 9, 30, 232, 20, 1, 3, 16, 0, 16, 10, 15, 10, 22, 3, 47, 0, 40, 70, 1, 34], [23, 0, 10, 45, 266, 10, 5, 33, 22, 1, 7, 13, 11, 12, 23, 1, 25, 3, 71, 18, 51, 29]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

