created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Unbreakable Nemesis", "Readnull", "Luke The Ghastly", "Xela Demora", "Mike The Archmagus", "Johosh The Mighty", "Kisumaiasu", "Cerys Fireblade", "Mort\u00e4rion", "Name Is What", "Cat Wigglebooty", "Yafreisy", "Newtype Khan", "Rozaalyna", "Daphne Agla\u00e9", "Asheena Feres", "Bella Sassy", "Kosa\u00edr", "Koralia Danai", "Gavann", "Xanvias Einzbern", "Mmathuss", "Glorious Gluvs", "Air One Com", "Mistwalker Cael", "Solus Sanctus", "Klengah", "Arriasa", "Vee Usagi", "Tribal S", "Wall Knot", "Lord Erin The Wise", "Rina Of Theros", "Blancoo Padre", "Drevarr Moonwillow", "Be\u00eb", "Tegan Parker", "Venomina The Sly", "Brutal Araden", "Primal Clone", "Morton Saltbringer", "Zaedy Zae", "Ryvalia Fazebringer", "Arcanophage Farra", "Keypek The Drunk", "Aronorf Xideliesi", "Grasszanine", "Sub Train", "\u00c1rk\u00e1ntor", "Jimbo The Pleb"];
const professions = ["Firebrand", "Willbender", "Scourge", "Reaper", "Weaver", "Berserker", "Scourge", "Berserker", "Scrapper", "Scourge", "Scrapper", "Weaver", "Spellbreaker", "Scourge", "Scourge", "Virtuoso", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Druid", "Druid", "Scourge", "Druid", "Firebrand", "Weaver", "Scourge", "Scrapper", "Scrapper", "Scourge", "Tempest", "Druid", "Renegade", "Chronomancer", "Chronomancer", "Druid", "Chronomancer", "Spellbreaker", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2749, 0.0408, 0.2982, 0.2175], [0.0, 0.0645, 0.0191, 0.0741, 0.2824, 0.3202, 0.1831, 0.0, 0.0667, 0.029, 0.2227, 0.1224, 0.089, 0.1753], [0.4333, 0.0901, 0.2066, 0.011, 0.375, 0.0, 0.1613, 0.0637, 0.3136, 0.037, 0.3889, 0.4304, 0.169, 0.12, 0.1111, 0.0], [0.0423, 0.08, 0.0667, 0.0145, 0.1588, 0.0816, 0.2471, 0.3443], [0.4778, 0.0811, 0.2562, 0.022, 0.4825, 0.0227, 0.1129, 0.2739, 0.3814, 0.037, 0.3611, 0.2205, 0.1831, 0.12, 0.1333, 0.087], [0.3778, 0.0541, 0.1736, 0.0769, 0.4175, 0.0, 0.1371, 0.0701, 0.4746, 0.0, 0.3843, 0.4698], [0.2415, 0.2113, 0.16, 0.2, 0.0145, 0.2227, 0.1429, 0.313, 0.1763], [0.3889, 0.0541, 0.157, 0.0879, 0.46, 0.0455, 0.0968, 0.0573, 0.3983, 0.4722, 0.5617], [0.3333, 0.0811, 0.1901, 0.0769, 0.3975, 0.0, 0.1935, 0.121, 0.3644, 0.4398, 0.3045, 0.1408, 0.08, 0.0444, 0.058, 0.2156, 0.1122], [0.4889, 0.018, 0.2645, 0.022, 0.365, 0.0341, 0.0806, 0.1911, 0.2881, 0.037, 0.1157, 0.1318, 0.3041], [0.0227, 0.0161, 0.1019, 0.161, 0.2593, 0.4226, 0.0, 0.0889, 0.0725, 0.391, 0.0408, 0.1598, 0.1928], [0.3543, 0.169, 0.08, 0.1556, 0.0145, 0.1735, 0.2603, 0.4052], [0.2362, 0.2254, 0.04, 0.1111, 0.0725, 0.2915, 0.1633, 0.2306, 0.3443], [0.2111, 0.018, 0.1405, 0.022, 0.5025, 0.0227, 0.1452, 0.0446, 0.3136, 0.2222, 0.3333, 0.4357, 0.169, 0.0, 0.2, 0.0145, 0.2251, 0.1531, 0.1911], [0.3889, 0.009, 0.0992, 0.044, 0.54, 0.0, 0.1532, 0.0764, 0.3305, 0.2917, 0.5564, 0.0986, 0.0, 0.1333, 0.0145, 0.2227, 0.1429, 0.1285], [0.2444, 0.018, 0.1322, 0.033, 0.365, 0.0, 0.0645, 0.0191, 0.2881, 0.0, 0.3611, 0.0814, 0.1268, 0.0, 0.0444, 0.1682, 0.1633, 0.1285, 0.3175], [0.03, 0.1818, 0.0403, 0.1019, 0.322, 0.0, 0.3472, 0.4252, 0.3099, 0.28, 0.2222, 0.0, 0.1848, 0.1122, 0.1351, 0.3227], [0.338, 0.3963, 0.0423, 0.2, 0.1111, 0.058, 0.2654, 0.1122, 0.196, 0.3753], [0.2667, 0.045, 0.0909, 0.022, 0.35, 0.0114, 0.0323, 0.0191, 0.1102, 0.3194, 0.3045, 0.1549, 0.08, 0.2444, 0.0145, 0.1825, 0.0816, 0.1483, 0.2763], [0.2444, 0.0541, 0.0496, 0.022, 0.3725, 0.0, 0.0887, 0.0382, 0.1102, 0.3056, 0.2441, 0.3239, 0.0, 0.2222, 0.0, 0.1777, 0.0714, 0.1647, 0.2814], [0.3889, 0.1261, 0.1736, 0.011, 0.3075, 0.0114, 0.1129, 0.1083, 0.2034, 0.0, 0.2778, 0.3727, 0.0845, 0.08, 0.1111, 0.0145, 0.1848, 0.0612, 0.1532, 0.2464], [0.2222, 0.045, 0.0909, 0.044, 0.295, 0.0227, 0.0806, 0.0573, 0.1271, 0.0, 0.2407, 0.4488, 0.0141, 0.0, 0.1333, 0.029, 0.2062, 0.102, 0.1367, 0.2918], [0.5, 0.027, 0.1322, 0.044, 0.33, 0.0341, 0.0484, 0.0637, 0.161, 0.3287, 0.3491, 0.1268, 0.0, 0.1111, 0.0, 0.2062, 0.0714, 0.1664, 0.2526], [0.1889, 0.1171, 0.157, 0.022, 0.295, 0.125, 0.0161, 0.051, 0.2119, 0.0, 0.2824, 0.3596, 0.0704, 0.0, 0.2, 0.0, 0.1327, 0.1429, 0.1483, 0.3454], [0.3222, 0.0811, 0.0992, 0.022, 0.315, 0.0114, 0.1532, 0.0892, 0.3475, 0.0, 0.2083, 0.336, 0.1549, 0.04, 0.2222, 0.0145, 0.2251, 0.102, 0.1746, 0.2711], [0.5, 0.1261, 0.1983, 0.0, 0.315, 0.0114, 0.1048, 0.0828, 0.1695, 0.0, 0.1852, 0.3281, 0.2958, 0.0, 0.0667, 0.0435, 0.1943, 0.1224, 0.1318, 0.3175], [0.2222, 0.0541, 0.0744, 0.022, 0.3725, 0.0227, 0.1048, 0.0955, 0.1017, 0.0, 0.2454, 0.4777, 0.0704, 0.16, 0.2, 0.0435, 0.1919, 0.0816, 0.168, 0.2629], [0.2889, 0.009, 0.1322, 0.011, 0.3975, 0.0, 0.0161, 0.1274, 0.1017, 0.0, 0.287, 0.4304, 0.0845, 0.16, 0.2444, 0.1422, 0.1122, 0.145, 0.301], [0.3111, 0.0541, 0.1818, 0.022, 0.3375, 0.0114, 0.1048, 0.0828, 0.2966, 0.0741, 0.3565, 0.2415, 0.1408, 0.0, 0.0667, 0.029, 0.2536, 0.0816, 0.2932, 0.2392], [0.2889, 0.045, 0.0909, 0.0879, 0.325, 0.1023, 0.0887, 0.1083, 0.1695, 0.0741, 0.338, 0.2782, 0.1549, 0.12, 0.2, 0.029, 0.1943, 0.0816, 0.1928, 0.3536], [0.2111, 0.0721, 0.1736, 0.0, 0.3625, 0.0114, 0.0887, 0.1146, 0.2797, 0.3056, 0.3648, 0.1127, 0.0, 0.2, 0.029, 0.1967, 0.1122, 0.2109, 0.3216], [0.5, 0.1441, 0.157, 0.1429, 0.505, 0.0455, 0.0403, 0.0127, 0.5, 0.1111, 0.4074, 0.4908, 0.1972, 0.0, 0.1778, 0.0725, 0.2085, 0.0408, 0.2982, 0.0804], [0.5444, 0.0631, 0.2314, 0.0549, 0.33, 0.0, 0.1048, 0.0637, 0.339, 0.0, 0.3287, 0.3255, 0.2254, 0.0, 0.0667, 0.0, 0.2204, 0.102, 0.2026, 0.3268], [0.4, 0.036, 0.0992, 0.033, 0.445, 0.0, 0.0806, 0.1083, 0.2966, 0.0, 0.3657, 0.4488, 0.1549, 0.0, 0.1333, 0.0, 0.2156, 0.1633, 0.2422, 0.232], [0.2556, 0.1622, 0.124, 0.033, 0.29, 0.1591, 0.1371, 0.2229, 0.339, 0.0741, 0.4259, 0.3858, 0.1549, 0.2, 0.1333, 0.1014, 0.173, 0.102, 0.1845, 0.3247], [0.6444, 0.0721, 0.157, 0.0879, 0.1, 0.0114, 0.0887, 0.1274, 0.4407, 0.412, 0.4436, 0.2535, 0.08, 0.1111, 0.029, 0.2322, 0.1224, 0.2471, 0.3454], [0.2111, 0.1622, 0.1074, 0.0, 0.565, 0.0, 0.0242, 0.1401, 0.2627, 0.3611, 0.3491, 0.0704, 0.0, 0.1333, 0.0145, 0.173, 0.0612, 0.1598, 0.3814], [0.3, 0.0541, 0.1322, 0.0879, 0.395, 0.0, 0.1532, 0.0892, 0.2712, 0.0, 0.3889, 0.4593, 0.169, 0.16, 0.1333, 0.029, 0.2156, 0.0612, 0.2356, 0.3289], [0.4, 0.036, 0.0909, 0.0769, 0.3675, 0.0, 0.1129, 0.1274, 0.1525, 0.0, 0.3565, 0.4068, 0.0845, 0.0, 0.2667, 0.0145, 0.218, 0.0204, 0.2372, 0.401], [0.2889, 0.0901, 0.1322, 0.044, 0.335, 0.0, 0.0403, 0.0382, 0.4153, 0.037, 0.2639, 0.4331, 0.1549, 0.08, 0.0889, 0.0435, 0.1896, 0.1122, 0.2735, 0.4103], [0.3778, 0.0721, 0.1818, 0.1429, 0.405, 0.0, 0.4237, 0.0, 0.4444, 0.4331, 0.0, 0.0889, 0.0, 0.1943, 0.0714, 0.2965, 0.3794], [0.3111, 0.0631, 0.1488, 0.0659, 0.485, 0.0455, 0.0242, 0.0955, 0.2542, 0.2222, 0.3796, 0.4042, 0.1127, 0.04, 0.2444, 0.0145, 0.1777, 0.0306, 0.201, 0.4402], [0.3889, 0.0901, 0.1901, 0.0549, 0.43, 0.0341, 0.0726, 0.121, 0.3983, 0.0, 0.6019, 0.4068, 0.2958, 0.28, 0.1111, 0.0, 0.1825, 0.3163, 0.2158, 0.3351], [0.7444, 0.0811, 0.1322, 0.033, 0.41, 0.0227, 0.1855, 0.2166, 0.2881, 0.037, 0.3611, 0.4462, 0.169, 0.2, 0.2222, 0.0145, 0.2607, 0.1327, 0.1977, 0.3526], [0.4889, 0.0721, 0.2231, 0.1099, 0.455, 0.0114, 0.129, 0.0764, 0.2797, 0.4167, 0.4724, 0.2394, 0.56, 0.2, 0.0, 0.2251, 0.1429, 0.2537, 0.3196], [0.4111, 0.0721, 0.1322, 0.0769, 0.4175, 0.0114, 0.1048, 0.051, 0.3983, 0.0, 0.2731, 0.3491, 0.2113, 0.0, 0.1556, 0.0145, 0.2867, 0.1735, 0.2372, 0.4546], [0.4222, 0.1351, 0.2149, 0.0879, 0.22, 0.0, 0.0968, 0.0764, 0.2627, 0.037, 0.4583, 0.5039, 0.3803, 0.2222, 0.058, 0.2654, 0.2143, 0.201, 0.4433], [0.4, 0.0631, 0.157, 0.0, 0.415, 0.0114, 0.0726, 0.0892, 0.2542, 0.3889, 0.4593, 0.4789, 0.0, 0.0444, 0.0, 0.2654, 0.0816, 0.2768, 0.4402], [0.3556, 0.1351, 0.1901, 0.0549, 0.4575, 0.1136, 0.0806, 0.1529, 0.4068, 0.037, 0.2269, 0.4541, 0.1549, 0.0, 0.0889, 0.029, 0.3578, 0.0306, 0.2323, 0.4216], [0.6111, 0.0991, 0.1405, 0.0659, 0.415, 0.0114, 0.129, 0.1975, 0.4746, 0.037, 0.4028, 0.4462, 0.1831, 0.44, 0.2, 0.058, 0.2796, 0.1122, 0.3558, 0.334]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

