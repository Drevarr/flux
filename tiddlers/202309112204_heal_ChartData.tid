created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Solus Luxes", "Tootsie Pop Rocks", "Etchery Howls", "Tegan Parker", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Druid", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[576.8456, 118.3385, 13.8984, 26.413, 305.4388, 761.7054], [0.0, 404.4631, 27.6, 25.1953, 124.5217, 266.0324, 300.6589, 109.4167, 247.1695, 127.7708, 695.7143, 0.0, 357.6892, 162.1366, 319.8773, 172.0982, 37.8, 517.3636, 347.7143, 201.5333, 382.6757, 8.6525, 231.438, 604.2, 32.5854, 170.3077, 413.2796, 941.1923, 436.0794], [3.0, 1772.953, 21.0923, 201.3047, 9.8696, 464.9568, 2377.2016, 226.55, 1601.1017, 295.0417, 589.2381, 0.0, 767.1081, 1672.6894, 1294.5399, 865.3926, 49.64, 1333.0606, 2145.5714, 758.9067, 1341.0, 2.3644, 365.2701, 470.6364, 3.7317, 1878.7846, 626.2043, 4453.3846, 2122.9206], [114.7448, 2180.6667, 26.7922, 1658.7162, 2635.1553, 2061.3926, 1267.7178, 202.92, 1146.1212, 2697.4286, 2327.2533, 1647.8108, 1635.9708, 3217.0, 2532.7846, 3005.0753, 5590.5, 2847.4603], [2462.7584, 328.2923, 66.4922, 758.4565, 1179.5144, 2269.9845, 1238.1167, 2191.5085, 692.0625, 1747.4286, 16.2208, 1994.2432, 2564.4348, 1713.0982, 1107.6012, 43.2, 1793.6667, 1733.1429, 1744.5867, 21.9153, 629.3431, 3045.5091, 9.2195, 1571.7231, 1938.4946, 3221.0, 2371.0635], [0.7778, 2893.3893, 226.2308, 218.8906, 1595.5504, 4467.9922, 1203.4667, 3126.7627, 1061.7708, 2207.0714, 0.0, 2422.3784, 2589.3602, 2325.2393, 1772.4663, 348.64, 1358.1515, 4706.9429, 2251.9733, 1860.9279, 891.3796, 4352.6364, 0.0, 1731.8615, 2185.828, 4899.2308, 11.0635], [107.5556, 2824.4899, 547.1385, 243.6953, 532.8696, 1784.9209, 3991.7054, 1246.45, 4346.1186, 901.3594, 2319.9762, 9.8052, 2603.3784, 3273.7453, 2327.0491, 1868.7975, 452.44, 1770.0303, 1413.6571, 1955.84, 2491.6306, 86.0508, 1841.3504, 4365.2545, 3097.9077, 2306.6882, 1723.1154, 3906.3175]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

