created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Legoh Brave", "Gestern Yesteryear", "Drevarr Moonwillow", "Elonith Primal", "Zevikah"];
const professions = ["Tempest", "Firebrand", "Scrapper", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[45.0, 125.075, 269.9068, 6.5102, 186.2273, 1221.6667, 435.0437, 527.6577, 551.1579, 688.9655, 754.9841, 258.9154, 700.5955, 675.7833, 438.0619, 609.0165, 829.7329, 686.4435, 1366.0933, 1089.275, 1199.9072, 151.3103], [94.3571, 149.2924, 625.1818, 171.5, 594.122, 659.48, 230.4235, 185.2292, 67.15, 439.7203, 266.0, 677.9524, 337.375, 735.3604, 513.0877, 570.3103, 449.8413, 355.8462, 262.8652, 873.95, 792.7938, 700.7107, 609.3904, 1431.7739, 808.4933, 1114.0, 50.5366, 656.4536, 229.2184, 0.0, 1008.5556, 397.0, 1312.9701, 800.0972, 867.5298, 916.2414, 1658.914, 1604.7885, 381.4474], [978.7143, 2060.4634, 1533.44, 964.9059, 1184.6042, 51.825, 943.0339, 118.551, 437.9949, 1353.775, 1258.3784, 1821.0, 1983.5862, 1402.7143, 795.2308, 1373.7865, 973.15, 1397.6804, 1136.4793, 2459.411, 2966.6174], [350.152, 1032.0152, 61.6548, 1012.32, 574.8353, 694.125, 0.0, 100.2966, 15.4286, 97.1162, 1531.4762, 1199.5438, 1117.5225, 545.5439, 807.8448, 792.254, 214.6692, 881.9551, 906.5667, 966.6082, 744.1074, 679.589, 2025.9304, 1726.5867, 662.125, 0.0, 1368.866, 206.5977, 319.6275, 1487.5764, 302.7586, 2015.7761, 1265.1667, 2069.3709, 1158.9655], [1410.6667, 1121.3158, 1300.6379, 1174.6032, 549.9154, 1471.764, 676.95, 1283.6289, 1129.0826, 1254.4041, 2398.0087, 3185.6533, 1864.85, 39.9024, 1348.8557, 614.6207, 307.9412, 2252.2708, 731.4483, 3222.306, 1485.5139, 2675.4437, 2743.8736, 2313.914, 2284.6058, 2365.6053]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

