created: 20230330095927000
creator: Drevarr
modified: 20230705163523393
modifier: drevarr
tags: ChartData
title: 202303300959_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Emerald Vermilion", "Aira Draugr", "Al Darasuun", "Dark Sidiuz", "Sofya De Nova", "Einar Xxl", "Jack And Coke Zero", "Flanneryflame", "Dynacaster Amazoni", "Lord Erin The Wise", "Ti\u00f1g", "Sumatra Satyricon", "Jeckyll Mbs", "Mistwalker Caelon", "Mac Chiato", "Johosh The Great", "Koralia Danai", "Black Raspberry Pie", "Oo Dads Mad", "Xyntharos", "Primal Clone", "Ark Darkness", "Zaylen Harker", "Legacy Of Mathus", "Xanvias Einzbern", "Smol Daddy Tika", "Bella Sassy", "Zadie Miststep", "Belvyn Brightblade", "Ryvalia Fazebringer", "Fribble Bibble", "Sister Elon\u00edth", "Khailerian", "Rina Of Theros", "Venomina The Siren", "Eibh\u00ebar", "Be\u00eb", "Drevarr Moonwillow", "Newtype Khan", "Fungus", "Seren Nightroad", "Sygaldry Verdandi", "Rozaalyna", "Arcanophage Farra", "Smol Gluvs", "\u00c1rkantor", "Grasszanine", "Sassy Daddy Demon", "River No Hug", "Tootsie Pop Rocks"];
const professions = ["Scourge", "Herald", "Scourge", "Scourge", "Weaver", "Firebrand", "Berserker", "Weaver", "Chronomancer", "Weaver", "Scrapper", "Soulbeast", "Berserker", "Vindicator", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Berserker", "Berserker", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Herald", "Scourge", "Tempest", "Chronomancer", "Scourge", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Firebrand", "Scourge", "Spellbreaker", "Scourge", "Vindicator", "Spellbreaker", "Vindicator", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15647, 9845, 0, 15921, 388, 21345], [0, 2116, 0, 1048, 62547], [8322, 8515, 0, 17685, 10053, 0, 0, 8088, 0, 18215], [62560, 4739, 7693, 8441, 4921, 0], [0, 522, 84493, 1640, 5470, 0, 164, 2454, 0, 0, 454, 360, 2747], [82275, 212, 2022, 0, 10145, 4516, 803], [979, 5726, 96759], [85555, 4050, 0, 5640, 6456, 0, 0, 5081, 0, 6593], [0, 0, 0, 4205, 125413], [0, 2953, 0, 7704, 109556, 4355, 1754, 0, 4435, 418, 523, 0, 350], [142789], [5747, 0, 261, 119991, 2103, 4757, 0, 9692, 966, 0, 0], [355, 6571, 0, 2557, 96852, 0, 3198, 0, 8357, 5242, 0, 0, 14515, 0, 7818], [0, 0, 0, 3409, 119019, 4677, 1958, 0, 7449, 1965, 0, 4112, 0, 4343], [0, 0, 0, 425, 132435, 660, 1109, 359, 1547, 507, 0, 3741, 0, 6535], [0, 52, 10, 4440, 129138, 0, 1748, 0, 6621, 249, 0, 1081, 0, 4258], [0, 0, 0, 2068, 128562, 1614, 4513, 0, 2646, 1248, 0, 4378, 0, 7041], [0, 3071, 0, 2962, 113983, 2286, 4123, 0, 10233, 1617, 0, 0, 8059, 501, 5569], [0, 883, 0, 0, 154249], [0, 21, 0, 3310, 122956, 14, 5400, 0, 5160, 235, 0, 0, 4973, 0, 18931], [0, 3566, 0, 2682, 123192, 1785, 3109, 0, 7462, 827, 0, 0, 12094, 0, 9151], [0, 1631, 164093], [0, 1491, 0, 1099, 146135, 1055, 589, 0, 10799, 2047, 6329, 440, 394], [5141, 0, 0, 168713], [0, 26, 0, 5537, 149301, 2216, 0, 0, 4691, 367, 0, 0, 5522, 0, 6660], [0, 992, 0, 1099, 149492, 953, 2442, 0, 14358, 1308, 0, 0, 7747, 301, 2985], [78, 3153, 0, 4130, 149452, 1526, 2067, 0, 7101, 878, 0, 11617, 0, 9326], [0, 3589, 4147, 534, 166149, 1948, 7044, 103, 2422, 999, 0, 2243, 3034], [0, 1934, 116, 8550, 186586], [0, 0, 981, 3043, 167205, 1919, 2961, 0, 5983, 3600, 0, 0, 7721, 0, 4434], [1772, 315, 2378, 170728, 673, 3730, 1105, 5763, 336, 6546, 0, 7984], [0, 4618, 163510, 0, 3089, 0, 11007, 1867, 0, 9155, 0, 9116], [0, 4251, 170607, 352, 6624, 0, 7537, 1434, 0, 0, 0, 0, 14593], [439, 4860, 0, 6873, 217915], [5221, 201262, 2377, 2649, 0, 5701, 2961, 0, 9053, 9336], [0, 1375, 0, 1704, 204439, 0, 4702, 0, 4463, 1452, 0, 0, 13517, 0, 7825], [0, 5902, 0, 5686, 181170, 8632, 6813, 3123, 23508, 8601, 0, 0, 17397, 0, 9321], [96, 3791, 18, 8173, 229235, 1571, 2498, 0, 5516, 4883, 6572, 0, 12495], [0, 3634, 119, 1757, 223001, 1294, 4132, 0, 15929, 2285, 0, 13574, 425, 14886], [0, 3437, 1533, 0, 227575, 4562, 1949, 0, 8723, 5966, 0, 0, 17976, 0, 11254], [0, 2695, 52, 1188, 279716], [2558, 0, 2081, 270795, 0, 0, 0, 6027, 1965, 0, 0, 7608, 0, 6882], [0, 395, 0, 2462, 280908, 3560, 3825, 144, 17291, 1531, 0], [0, 787, 0, 5101, 334701, 76, 9906, 0, 5194, 2198, 0, 7666, 0, 7546], [410, 1800, 127, 8898, 320118, 4793, 1635, 0, 12418, 9266, 0, 0, 20300, 0, 11385], [153, 1762, 869, 9345, 360299, 3555, 3911, 0, 8391, 3120, 0, 8908, 0, 5608], [0, 3569, 0, 3652, 352209, 2586, 7927, 510, 14832, 3752, 12661, 0, 8826], [3184, 4719, 6852, 373284, 1415, 5039, 0, 14480, 785, 0, 5958, 0, 3177], [1938, 8990, 0, 3670, 362333, 1241, 12977, 1176, 14994, 6852, 0, 9064, 0, 6796], [0, 8463, 1677, 1842, 422923, 13503, 25351, 2738, 42334, 9440, 0, 34631, 0, 9607]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

