created: 20230222220539000
creator: Drevarr
modified: 20230705163519878
modifier: drevarr
tags: ChartData
title: 202302222205_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Acme Corporation", "Forever Broke", "Smol Gluvs", "Arcanophage Farra", "Sheep Poh", "Husky Guard", "Ace Hammers", "Kmpek", "Rina Of Theros", "Panther B Me", "\u00c1rk\u00e1ntor", "Elonith Tenebris", "Smol Daddy Tika", "Legacy Of Mathus", "Jeckyll Mbs", "Lord Erin The Wise", "My Birthday Girl", "Xyntharos", "Sofya De Meme", "Sassy Daddy Demon", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Xanvias Tseli", "One Whole Keg"];
const professions = ["Scourge", "Scrapper", "Reaper", "Scourge", "Spellbreaker", "Catalyst", "Dragonhunter", "Vindicator", "Vindicator", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Berserker", "Berserker", "Weaver", "Scrapper", "Vindicator", "Catalyst", "Vindicator", "Berserker", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.1628, 0.0, 636.2125, 161.9921, 368.0833, 175.5646, 778.1383], [0.0, 205.4079, 626.9068, 333.4625, 4.3875, 322.8995, 59.2892, 212.3514, 0.0], [571.9242, 530.5698, 246.8026, 568.7203, 883.6375, 1290.0], [41.4419, 0.0, 354.0698, 29.3947, 45.3475, 182.5, 715.4625, 309.6058, 258.4412, 175.997, 541.1064], [54.6977, 38.027, 501.8636, 344.4186, 0.0, 228.8051, 407.95, 585.8875, 308.6772, 107.1029, 123.997, 536.117], [1275.6324, 1066.4474], [243.7791, 128.9868, 244.7712, 626.5875, 363.625, 485.5503, 363.0392, 339.8258, 1023.4468], [67.2326, 112.9459, 404.7121, 307.0349, 23.2895, 199.2797, 346.5625, 1075.3, 645.1164, 261.4951, 344.7628, 1096.5426], [407.3485, 470.1512, 33.875, 81.2458, 722.9625, 1248.7375, 622.7249, 744.1569, 233.6907, 616.0532], [79.2326, 245.973, 696.8333, 498.9419, 86.2303, 393.9237, 815.3875, 1095.575, 648.119, 375.451, 274.3213, 1255.3191], [89.7209, 245.3784, 651.2273, 577.1744, 213.4276, 271.5678, 892.45, 1299.2375, 643.5079, 481.2353, 395.2462, 1353.0532], [76.6977, 370.8649, 518.3939, 384.9419, 394.7566, 357.8983, 1010.5625, 1544.0875, 918.2196, 742.2745, 421.5345, 1401.6064], [232.0, 945.5405, 1622.2879, 294.1628, 95.5197, 635.9492, 1014.975, 730.725, 985.537, 687.3186, 505.0541, 1183.766], [53.0698, 596.973, 1274.6364, 485.7326, 155.9737, 223.7712, 807.175, 464.8, 1011.1878, 529.549, 996.4474, 1226.7128], [314.3953, 558.5946, 315.8636, 564.3837, 312.8618, 501.0847, 780.4, 1031.95, 1417.3307, 614.9853, 602.7417, 1365.2234], [875.7442, 465.8378, 522.9186, 361.3355, 301.2627, 1081.5625, 1813.2875, 922.5238, 514.6275, 769.5465, 2297.1489], [0.0, 803.9189, 818.7273, 670.4884, 657.5066, 396.2881, 1444.7875, 1456.55, 848.8571, 1064.1667, 705.2312, 797.6702], [0.0, 410.4865, 730.4545, 384.8488, 477.6908, 820.0424, 1894.7125, 1535.3875, 1052.2434, 950.6422, 656.4715, 932.8404], [166.9302, 880.2703, 74.8636, 987.6744, 127.1513, 471.9661, 1135.375, 217.3, 1475.0238, 631.1961, 779.1231, 2029.5638], [1072.1667, 952.1047, 303.6908, 430.822, 1487.5625, 948.0875, 1430.9312, 1480.201, 725.3994, 1178.9043], [617.3023, 404.0, 1449.2121, 1025.6395, 216.5592, 695.1271, 1334.6, 1729.0125, 1269.3386, 614.5441, 918.0601, 1920.6915], [233.6512, 243.7027, 682.8788, 1109.3721, 9.6645, 274.6102, 2114.1, 2929.1375, 1924.1508, 938.1225, 975.7658], [872.6977, 1422.2432, 963.3636, 1080.4535, 397.6974, 1021.6525, 2095.4625, 1231.1625, 1663.8386, 1020.3922, 841.1291, 3659.2766], [376.0698, 1226.6757, 1091.4545, 1223.8721, 499.1645, 826.7373, 562.025, 2549.4125, 1667.7725, 1634.8039, 859.8889, 4111.9255], [197.1628, 1120.0, 2120.9091, 223.1184, 653.7373, 2656.7375, 2704.5375, 2311.291, 1629.8235, 1161.7297, 1989.7021]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

