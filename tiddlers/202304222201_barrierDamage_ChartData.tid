created: 20230422220129000
creator: Drevarr
modified: 20230705163526290
modifier: drevarr
tags: ChartData
title: 202304222201_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Hauzzy", "Smol Gluvs", "Stark Gandalf", "Blancooo Padreee", "Drevarr Moonwillow", "V\u00e8\u00e9la", "Arriasa", "Newtype Khan", "Whir The Hammer", "Navia Blightfur", "Madame Charrlotte", "Clem Storage Xviii", "Tootsie Pop Rocks", "Arka\u00f1tor"];
const professions = ["Berserker", "Scourge", "Weaver", "Spellbreaker", "Scrapper", "Scourge", "Druid", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11609, 2466, 0, 4777, 3383, 1107, 0, 253, 5429, 269, 2851, 1279, 4083, 0, 8298, 0, 13435, 8806], [2142, 9304, 0, 9611, 1485, 3448, 516, 1517, 9339, 316, 8188, 3474, 6028, 979, 9811, 4180, 5204, 11081], [383, 0, 14231, 1356, 810, 14538, 1965, 9653, 5467, 5928, 577, 2705, 0, 2725, 1339, 8457, 20965], [1851, 0, 0, 49756, 5478, 6511, 5364, 2043, 0, 0, 1593, 3790, 4876, 0, 6055, 1284, 0, 3994, 5846, 32], [1149, 6582, 620, 71, 41184, 4228, 0, 5466, 3862, 529, 230, 269, 5399, 2315, 4039, 418, 8802, 98, 5182, 879, 696, 7215], [4675, 0, 7555, 2537, 1232, 3452, 0, 25700, 10869, 18856, 4688, 10631, 724, 3770, 879, 5811, 12093], [3209, 2699, 2214, 0, 51008, 384, 0, 5962, 0, 192, 0, 0, 9770, 3498, 8890, 0, 5509, 0, 7695, 3920, 4178, 11962], [1421, 3429, 0, 0, 60279, 6146, 0, 2346, 0, 2693, 429, 0, 8806, 9155, 10115, 0, 7313, 0, 3314, 2992, 2677, 5546], [32867, 7164, 11505, 3477, 2373, 11415, 5498, 8904, 3691, 2596, 14148, 12880, 6249, 3517, 18308], [7144, 59913, 8242, 0, 8249, 0, 0, 26604, 12002, 17785, 5929, 2772, 5687, 3003, 8695], [13591, 66, 0, 161166, 23, 0, 16235, 9308, 158, 269, 452, 29476, 12127, 10650, 0, 10220, 0, 0, 8582, 9239, 14132], [225682, 34844, 39248, 245, 1962, 602, 5136], [5149, 25723, 583, 0, 172814, 24055, 19761, 5756, 13887, 8416, 3112, 35435, 11172, 25323, 6937, 13609, 0, 3221, 5971, 2205, 30197], [18263, 60908, 417, 2836, 232859, 28556, 0, 35152, 8031, 18684, 4837, 7121, 55113, 37039, 46812, 8603, 5644, 584, 26698, 14473, 8621, 40344]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

