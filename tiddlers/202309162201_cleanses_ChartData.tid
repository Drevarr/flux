created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Arlyss Phury", "Venomina The Fierce", "Crusader Siolith", "Arcanophage Farra", "Zori Fizbow", "Revenant Brandorf", "Anja Starkin", "Tootsie Pop Rocks", "Leafzely", "Tegan Parker", "Xeltrom", "High Sorcer Baradun", "Etchery Howls", "Drevarr Moonwillow", "Zaedy Zae", "Tribal S"];
const professions = ["Vindicator", "Spellbreaker", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator", "Druid", "Scrapper", "Scrapper", "Tempest", "Druid", "Tempest", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2407, 0.4037, 0.2927, 0.3953, 0.2807, 0.5116, 0.4568, 0.5128, 0.4194, 0.5208, 1.1667, 0.1576, 0.06], [0.0713, 0.1471, 0.0458, 0.0, 0.3929, 0.1111, 0.18, 0.2315, 0.2936, 0.0, 0.3372, 0.386, 0.0, 0.5185, 0.3846, 1.0645, 0.2083], [0.1547, 0.1083, 0.0, 0.0261, 0.0893, 0.0536, 0.1508, 0.08, 0.1296, 0.2018, 0.0244, 0.1279, 0.0526, 0.0698, 0.3086, 0.4872, 0.0323, 0.2083, 0.0, 0.0, 0.1], [0.1298, 0.1493, 0.0, 0.0196, 0.0, 0.0714, 0.2619, 0.08, 0.1296, 0.2477, 0.0, 0.3256, 0.0, 0.3488, 0.3951, 0.3846, 0.1613, 0.0208, 0.125, 0.0, 0.01], [0.2942, 0.1982, 0.1634, 0.0, 0.25], [0.3702, 0.3065, 0.1471, 0.0523, 0.1964, 0.2302, 0.37, 0.2222, 0.2294, 0.2439, 0.2558, 0.3158, 0.6512, 1.0988, 0.129, 0.8125, 0.2917, 0.2303, 0.15], [0.6588, 0.4742, 0.3824, 0.1569, 0.3929, 0.5873, 0.33], [0.4586, 0.6631, 0.2059, 0.085, 0.0, 0.9107, 0.6429, 0.73, 0.0, 0.5321, 0.3902, 0.0465], [0.6298, 0.1057, 0.0882, 0.2745, 0.0, 0.0179, 0.4762, 0.43, 0.4907, 0.3394, 0.5122, 0.4767, 0.8421, 0.8837, 0.4938, 0.1026, 0.0, 1.0, 3.0417, 0.4303, 0.41], [0.0013, 0.1176, 0.3137, 0.8214, 1.3095, 1.12, 1.1296, 0.9908, 0.7561, 1.0349, 1.4035, 1.5581, 2.3827, 1.2308, 1.0968, 1.7708, 2.1667, 0.6303, 0.62], [1.0539, 1.1281, 0.1471, 0.3529, 0.1071, 0.8214, 0.4365], [0.7293, 0.7318, 0.0294, 0.2745, 0.0357, 0.2679, 0.0714, 1.01, 0.8148, 0.844, 0.6585, 0.093, 0.3333, 1.2791, 1.1111, 0.0256, 0.6452, 0.0417, 1.0833, 0.4667, 0.44], [1.7279, 1.6077, 0.5588], [1.6851, 1.7596, 0.6765, 0.6471, 0.1964, 1.1964, 1.7698, 1.32, 1.5556, 1.3486, 1.9512, 1.5233, 1.1404, 1.4186, 2.5556, 1.6667, 3.5161, 1.2917, 1.0417, 0.9455, 0.67], [1.9862, 1.8983, 0.2059, 0.5817, 0.0357, 1.2857, 0.7857, 1.54, 1.6389, 1.0734, 1.0488, 1.7907, 1.4211, 3.4419, 2.7901, 1.7179, 3.5161, 2.1667, 2.75, 0.9273, 0.64], [1.7831, 1.9075, 0.9706, 0.4183, 0.1429, 1.8571, 2.0159, 1.38, 1.6019, 1.3761, 1.439, 1.2326, 1.5789, 2.4186, 4.4444, 3.3077, 4.0323, 2.3125, 2.9583, 1.0303, 0.51]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

