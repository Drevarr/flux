created: 20230626012458000
creator: Drevarr
modified: 20230705163538181
modifier: drevarr
tags: ChartData
title: 202306260124_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Elonith Requiem", "Smol Gluvs", "Liyo Morgaine", "Versimon", "No Reserv\u00e9", "Brad Bellick", "Xanvias Einzbern", "Momomeko", "Cyclotechnist Farra", "Elon The Archmagus", "Tegan Parker", "Tootsy Pop Star", "Venomina The Siren", "Primal Clone", "Tribal S", "Johosh The Mighty", "Belvyn Brightblade", "Charr Surethang", "Zayde Sunsabre", "Miphest\u00f6", "Shaca Booey", "Bella Sassy", "Sygaldry Verdandi", "Artakama Nahid", "Kary\u00edna", "Night Of The Wabbit", "Arcanophage Farra", "Elonith Requiem", "Necrotic Windrunner", "Crusader Siolith", "Raelyn Sunray", "Permanent Dawn", "Blanco Padre Guard", "Arriasa", "Morton Saltbringer", "Elon The Mender", "Drevarr Moonwillow", "Koralia Danai", "Smol Gluvs", "Lord Erin The Wise", "Rozaalyna", "Mistwalker Cael", "Ryvalia Fazebringer", "Regis Hawkesburne", "My Birthday Girl", "Bender Ale Devourer", "Eibh\u00ebar", "Newtype Khan", "Mememonoko", "Solus Sanctus"];
const professions = ["Scourge", "Scourge", "Reaper", "Herald", "Chronomancer", "Vindicator", "Scrapper", "Berserker", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Scourge", "Tempest", "Chronomancer", "Druid", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Firebrand", "Firebrand", "Tempest", "Vindicator", "Vindicator", "Spellbreaker", "Reaper", "Scourge", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Druid", "Chronomancer", "Druid", "Scrapper", "Firebrand", "Scourge", "Weaver", "Scourge", "Vindicator", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Chronomancer", "Spellbreaker", "Vindicator", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 2, 0, 2, 1, 0, 2, 1, 3, 1, 0, 3], [3, 11, 1, 5], [5, 5, 4, 8], [2, 7, 2, 1, 2, 4, 1, 0, 3], [3, 1, 4, 3, 2, 5, 6], [0, 6, 9, 3, 5, 3], [0, 4, 2, 3, 3, 1, 3, 3, 3, 4], [1, 2, 1, 4, 0, 1, 2, 3, 4, 0, 2, 1, 3, 1, 3], [1, 1, 5, 0, 2, 3, 4, 2, 5, 5], [5, 1, 1, 3, 5, 3, 7, 3], [5, 3, 2, 2, 4, 2, 6, 4], [1, 0, 3, 5, 1, 4, 1, 1, 1, 1, 2, 2, 1, 1, 4, 1], [2, 4, 4, 4, 1, 2, 1, 3, 0, 2, 4, 2], [0, 1, 4, 4, 1, 3, 1, 1, 1, 1, 2, 4, 3, 1, 1, 2], [0, 3, 2, 1, 3, 2, 0, 3, 4, 2, 5, 2, 0, 3, 2], [3, 3, 2, 3, 0, 1, 2, 1, 3, 3, 4, 6, 0, 4], [0, 3, 4, 1, 4, 8, 0, 3, 7, 2, 2, 2], [2, 5, 6, 10, 3, 11], [0, 3, 2, 3, 2, 3, 0, 3, 3, 1, 3, 3, 3, 1, 4, 3], [2, 4, 4, 2, 2, 6, 0, 3, 2, 1, 3, 1, 0, 2, 4, 2], [1, 2, 2, 5, 2, 3, 1, 0, 3, 2, 1, 3, 2, 3, 4, 4], [1, 2, 2, 9, 5, 3, 3, 4, 4, 3, 3, 1], [2, 2, 9, 4, 3, 6, 2, 2, 2, 1, 0, 2, 4, 1, 1], [1, 3, 1, 4, 4, 7, 2, 1, 3, 6, 1, 1, 4, 1, 2], [1, 5, 5, 5, 3, 7, 1, 0, 0, 2, 5, 2, 2, 3, 1], [2, 3, 1, 9, 3, 5, 3, 1, 1, 0, 4, 3, 1, 3, 1, 2], [4, 5, 5, 0, 3, 9, 5, 6, 5, 0], [1, 2, 3, 7, 6, 17, 3, 4], [4, 4, 5, 6, 6, 0, 2, 2, 2, 4, 5, 6], [4, 7, 0, 4, 6, 2, 5, 5, 3, 3, 2, 5], [2, 2, 2, 10, 2, 6, 1, 2, 4, 2, 3, 2, 0, 3, 2, 5], [2, 4, 6, 9, 1, 3, 1, 3, 3, 1, 3, 4, 2, 1, 4, 3], [5, 2, 14, 3, 14, 2, 1, 3, 3, 3], [1, 2, 5, 7, 1, 2, 0, 4, 5, 1, 3, 4, 3, 3, 7, 3], [3, 4, 4, 4, 5, 9, 3, 3, 2, 2, 0, 4, 0, 5, 6], [1, 2, 4, 3, 6, 7, 2, 5, 6, 0, 3, 4, 1, 5, 4, 4], [10, 3, 5, 11, 2, 21, 2, 3], [5, 5, 5, 4, 4, 9, 3, 3, 2, 0, 4, 4, 1, 1, 3, 6], [0, 6, 8, 3, 3, 5, 2, 3, 5, 3, 4, 4, 6, 5, 3], [4, 18, 2, 4, 3, 2, 3, 4, 6, 6, 7, 4], [3, 5, 5, 3, 2, 10, 2, 4, 4, 3, 2, 6, 5, 3, 4, 5], [3, 17, 5, 5, 8, 2, 3, 0, 7, 6, 7, 4], [1, 6, 4, 8, 3, 15, 1, 4, 5, 0, 3, 3, 3, 3, 6, 3], [1, 5, 6, 12, 4, 11, 5, 3, 4, 0, 3, 3, 3, 2, 5, 3], [0, 1, 4, 6, 3, 8, 3, 5, 8, 4, 3, 2, 7, 1, 8, 7], [2, 4, 4, 12, 4, 8, 3, 4, 7, 3, 2, 2, 5, 3, 3, 5], [2, 6, 2, 13, 4, 9, 3, 3, 7, 1, 3, 1, 3, 5, 5, 4], [2, 5, 7, 11, 3, 11, 2, 5, 5, 5, 3, 3, 4, 2, 4], [2, 2, 3, 12, 5, 18, 1, 4, 4, 2, 3, 5, 4, 4, 3, 2], [9, 12, 6, 25, 7, 29], [0, 7, 6, 10, 6, 14, 6, 5, 9, 3, 5, 3, 6, 5, 6, 5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

