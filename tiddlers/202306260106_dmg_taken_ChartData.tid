created: 20230626010646000
creator: Drevarr
modified: 20230705163537157
modifier: drevarr
tags: ChartData
title: 202306260106_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias", "Gestern Yesteryear", "Elonith Requiem", "Yngvar The Burdened", "Rednuii", "Drevarr Moonwillow", "Gamora Titus", "Microsakis", "Iskalla", "Necrotic Windrunner", "Pixzil", "Lady The Mirage", "Phageir", "Charr Surethang", "Aribel Darkbringer", "Liyo Morgaine", "Pale Pam", "Pixzil", "Grimdox", "Grimdox"];
const professions = ["Reaper", "Firebrand", "Scourge", "Scourge", "Tempest", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Scourge", "Dragonhunter", "Virtuoso", "Catalyst", "Berserker", "Reaper", "Vindicator", "Druid", "Guardian", "Firebrand", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[526.8676, 0.0, 1216.4314, 220.3571, 473.0458, 3425.6875, 487.0879, 3084.0417, 13889.3333, 169.4444, 177.0, 214.629, 113.386, 1169.4, 16.1515, 204.0167, 319.9608, 115.3514, 352.725, 557.6207, 1848.2, 692.0455, 0.0, 195.8545, 290.8375, 218.78, 54.9429, 690.0814, 58.2308, 457.3333, 362.5263, 858.4028, 147.0513, 0.0, 906.9706, 9922.125, 17584.8571, 894.4462], [80.6957, 201.129, 651.0, 45.2857, 939.6176, 95.1786, 262.6897, 159.3647, 562.25, 3650.24, 276.1566, 2793.7436, 293.9524, 204.3261, 26.2308, 449.6613, 74.2308, 563.3114, 7.2286, 196.4237, 397.6122, 294.9474, 359.525, 671.7857, 719.05, 3356.8462, 1293.9298, 2469.1053, 221.6901, 97.6857, 1466.8784, 129.7308, 188.1892, 238.2545, 864.1806, 63.15, 0.0, 773.7761, 16440.2, 4585.2105, 1005.0], [130.3421, 807.9841, 161.5806, 510.05, 535.8, 3.7368, 4037.7, 63.5, 210.7597, 2255.641, 231.8165, 3347.5312, 937.413, 276.5778, 28.25, 395.7049, 538.3684, 552.5187, 20.4737, 448.7167, 372.098, 267.7073, 571.2821, 386.2857, 310.0513, 2004.2105, 0.0, 231.7091, 1550.7872, 296.8193, 150.2286, 1610.2899, 48.8493, 130.0421, 132.1159, 760.6571, 256.5, 336.8667, 885.6622, 402.4483, 3080.2069, 822.0122], [1164.9423, 259.1951, 29.5556, 33.375, 377.6562, 36.7018, 477.9692, 29.5294, 314.7193, 433.92, 414.2432, 10939.875, 3007.2593, 0.0, 860.0364, 3513.1538, 345.1333, 411.1765, 1911.8732, 251.6875, 573.7534, 180.0893, 1695.0286, 36.5789, 139.9333, 461.3919, 4993.7647, 2010.8448, 934.6463], [707.6406, 44.4783, 564.3636, 117.6, 1388.7368, 359.9489, 2793.561, 763.5814, 273.9091, 55.6923, 426.2969, 109.2281, 499.875, 29.5128, 445.9828, 195.1176, 188.3421, 577.4878, 436.6207, 1074.6923, 441.9545, 3441.6667, 555.9875, 358.701, 343.3333, 1441.9583, 41.8933, 245.274, 274.5088, 834.4571, 116.2432, 0.0, 674.2133, 151.6552, 972.614, 966.1481], [0.0, 478.0, 57.1591, 1555.2727, 608.2206, 102.6429, 608.0179, 218.914, 260.0154, 3719.1481, 525.1812, 1346.2292, 33.6154, 242.8864, 70.3333, 172.7258, 55.9783, 547.8182, 9.5882, 224.5932, 273.6667, 236.1, 310.0238, 196.8065, 602.0769, 497.087, 0.0, 652.8148, 136.1481, 309.3131, 188.4286, 1221.7215, 62.2105, 93.6593, 104.6087, 479.0, 98.2051, 0.0, 847.2297, 1285.6923, 6447.0], [550.866, 71.3636, 3370.32, 0.0, 434.8438, 3273.8571, 282.4899, 1115.2766, 367.5, 137.0, 19.5714, 193.1935, 130.3043, 658.6384, 16.2857, 271.9286, 115.16, 393.3158, 465.9111, 377.84, 10059.125, 6699.6667, 34.8511, 2455.5682, 81.3462, 126.75, 1090.5833, 220.5059, 2812.3939, 78.5581, 762.8696], [0.0, 15.0909, 143.122, 925.0, 115.5667, 4381.1923, 96.625, 1438.2209, 2299.3864, 786.5412, 1197.2766, 701.9524, 189.1136, 7.3333, 61.4483, 170.2264, 342.8491, 3.5294, 169.8772, 110.0, 212.475, 153.3111, 199.2069, 298.4737, 122.6429, 48.3091, 163.6667, 81.3542, 408.5818, 139.2742, 120.7634, 214.037, 1010.5806, 335.6216, 2221.6552, 1713.4615, 1066.2381, 1618.9273], [430.2125, 0.0, 553.1702, 77.0215, 90.1085, 3514.6957, 154.5542, 2510.1463, 113.6279, 152.3409, 23.2917, 177.4677, 50.551, 394.8341, 0.0, 165.0806, 18.2041, 128.0244, 204.8, 267.44, 12806.0, 397.0909, 16.1176, 3428.6818, 131.0779, 65.7677, 68.2812, 1326.9178, 147.6164, 286.6944, 226.6481, 596.8116, 55.925, 0.0, 792.527, 18012.0, 1514.3462, 586.3], [416.0515, 32.5238, 2949.1786, 29.5, 217.0435, 3018.2963, 134.7229, 2143.95, 3159.0357, 181.4222, 179.8636, 143.5873, 143.5741, 206.037, 6.1795, 238.7931, 88.3469, 150.3514, 239.7949, 0.0, 5.2353, 316.2222, 8.3846, 112.5, 1351.7966, 116.6322, 115.6341, 83.0235, 182.3538, 127.9898, 39.6984, 401.2059, 137.3684, 831.3913, 915.7857, 8849.25, 410.8642], [11.6471, 2544.2903, 32.7385, 1185.8298, 1881.7143, 189.6426, 2845.7647, 9.7143, 66.5, 53.5, 502.1111, 47.5185, 747.0822, 0.0, 226.2414, 103.9, 75.1364, 282.3721, 20.625, 8778.75, 781.8929, 0.0, 0.0, 1048.2727, 110.4118, 441.4444, 164.3077, 1882.0426], [570.1492, 2125.1053, 480.6429, 25.6591, 54.4615, 29.1525, 86.3684, 682.6599, 0.0, 429.2143, 124.4634, 116.1176, 19.3333, 223.0833, 770.6923, 13229.8, 342.8727, 1986.72, 118.3418, 77.0667, 290.3902, 0.0, 289.6712, 74.7547, 193.0286, 92.9444, 39.85, 295.3378, 58.2, 1403.6667, 912.025], [105.7273, 35.0769, 186.3175, 69.8723, 382.8696, 16.0294, 32.0556, 176.0816, 51.2308, 177.1429, 293.027, 11081.5714, 685.4107, 897.7692, 192.0204, 87.5, 1609.8136, 0.0, 329.6133, 17.6591, 528.8143, 187.1538, 283.5294, 754.0137, 9431.5556, 1518.9, 621.9077], [55.5263, 1347.9153, 184.303, 204.506, 927.9403, 167.0909, 2009.0, 0.0, 377.507, 1163.7209, 730.7876, 2137.1961, 295.5952, 362.1739, 73.44, 473.1475], [204.2308, 1508.25, 31.2778, 521.1395, 694.8507, 53.4583, 862.8868, 411.5591, 878.0652, 4025.8148, 524.2188], [231.7857, 1638.5, 0.0, 2817.7333, 3504.8077, 504.757, 2427.6875], [203.9362, 0.0, 866.1509, 12.3765, 259.7023, 358.5682, 192.757, 2681.1892, 41.9524], [227.4419, 95.4865, 3871.7407, 3071.45, 989.3235, 875.9796], [281.7571, 906.9286, 1243.68, 1058.9405], [0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

