created: 20230412220340000
creator: Drevarr
modified: 20230705163525352
modifier: drevarr
tags: ChartData
title: 202304122203_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Oo Dads Mad", "Eibh\u00ebar", "Nazhul Naxxremis", "Nazhul Naxxremis", "Tribal Z", "Smol Gluvs", "Arcanophage Farra", "Panther B Me", "Rozaalyna", "Rozaalyna", "Grasszanine", "Panther B Me", "Mike The Archmagus", "Minka Bringer", "Konztantin\u00eb", "Be\u00eb", "Sofya De Nova", "Blancooo Padreee", "Rina Of Theros", "Allie Mistwalker", "Skye Nightroad", "Be\u00eb", "Lord Erin The Wise", "Smol Daddy Tika", "Jeckyll Mbs", "Estryl", "K\u00f4sair", "Inedible Plant", "Sp\u00edcy Cheese", "Xyntharos", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Scourge", "Spellbreaker", "Chronomancer", "Reaper", "Scourge", "Weaver", "Reaper", "Spellbreaker", "Scourge", "Scourge", "Reaper", "Spellbreaker", "Reaper", "Weaver", "Scrapper", "Vindicator", "Scourge", "Weaver", "Berserker", "Scourge", "Vindicator", "Scrapper", "Reaper", "Weaver", "Berserker", "Berserker", "Berserker", "Berserker", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16689.0, 5071.0, 2105.0, 19523.0, 27258.0, 28900.0, 55637.0, 0.0, 19284.0, 7681.0], [31991.0, 2532.0, 0.0, 35385.0, 6220.0, 37688.0, 73042.0], [8570.0, 1641.0, 253.0, 9354.0, 3143.0, 12841.0, 27252.0, 0.0, 7539.0, 1723.0, 14316.0, 362.0, 8451.0, 3433.0, 3981.0, 14280.0, 12387.0, 14296.0, 18541.0, 30159.0], [33674.0, 2285.0, 5450.0, 17305.0, 2610.0, 53355.0, 13890.0, 64873.0], [38273.0, 440.0, 2183.0, 21857.0, 22013.0, 4364.0, 73847.0, 0.0, 31842.0, 7893.0], [14971.0, 10150.0, 0.0, 24237.0, 79504.0, 12578.0, 18282.0, 39475.0, 1684.0, 4456.0], [48045.0, 4613.0, 16104.0, 14397.0, 246.0, 38775.0, 26784.0, 23522.0, 13865.0, 19945.0], [19331.0, 148.0, 0.0, 10490.0, 15761.0, 9784.0, 50735.0, 0.0, 11392.0, 5857.0, 19037.0, 0.0, 8083.0, 74.0, 0.0, 11218.0, 865.0, 24576.0, 5175.0, 28540.0], [17286.0, 433.0, 0.0, 32768.0, 14637.0, 20168.0, 100468.0, 0.0, 40657.0, 15442.0], [25106.0, 427.0, 238.0, 34149.0, 14265.0, 27872.0, 102644.0, 0.0, 23959.0, 15281.0], [73770.0, 27429.0, 31133.0, 1324.0, 37843.0, 117.0, 45231.0, 19522.0, 17413.0], [10840.0, 0.0, 0.0, 20027.0, 7804.0, 14575.0, 47610.0, 0.0, 6172.0, 10938.0, 22062.0, 0.0, 13018.0, 11201.0, 1278.0, 15945.0, 9089.0, 18138.0, 10278.0, 34976.0], [48679.0, 5405.0, 13952.0, 18232.0, 0.0, 24765.0, 29092.0, 33596.0, 8200.0, 89935.0], [52237.0, 101055.0, 53584.0, 60118.0, 21046.0], [0.0, 23395.0, 63064.0, 1972.0, 25598.0, 5211.0, 2079.0, 22155.0, 19973.0, 15050.0, 29002.0, 87858.0], [25927.0, 1502.0, 0.0, 66920.0, 30481.0, 16408.0, 108775.0, 0.0, 29590.0, 4520.0, 58.0, 2371.0, 9963.0], [37187.0, 286.0, 5001.0, 39251.0, 31260.0, 37540.0, 117000.0, 0.0, 21369.0, 12843.0], [33033.0, 47747.0, 73955.0, 72523.0, 108045.0], [16804.0, 750.0, 5158.0, 43515.0, 29444.0, 27643.0, 45619.0, 0.0, 18145.0, 1318.0, 29053.0, 0.0, 27126.0, 3475.0, 3834.0, 40417.0, 5795.0, 24519.0, 22215.0, 64177.0], [26803.0, 0.0, 915.0, 42990.0, 8741.0, 21718.0, 55364.0, 0.0, 32082.0, 16693.0, 49051.0, 59022.0, 10959.0, 28068.0, 65200.0], [36063.0, 0.0, 0.0, 1501.0, 36977.0, 35296.0, 152663.0, 54276.0, 5727.0, 52118.0, 2077.0, 46936.0, 24109.0], [2844.0, 3435.0, 486.0, 44747.0, 38275.0, 18874.0, 84504.0, 0.0, 22131.0, 0.0, 33944.0, 10308.0, 5902.0, 24107.0, 11468.0, 16245.0, 28010.0, 108698.0], [68764.0, 633.0, 57793.0, 20093.0, 15151.0, 46063.0, 12467.0, 62231.0, 92531.0, 180321.0], [32946.0, 0.0, 1438.0, 92385.0, 51839.0, 18841.0, 80666.0, 0.0, 23547.0, 3061.0, 42847.0, 11151.0, 23001.0, 45451.0, 2209.0, 35753.0, 37306.0, 17844.0, 18766.0, 58792.0], [37491.0, 994.0, 4098.0, 53432.0, 37775.0, 60690.0, 123900.0, 0.0, 44655.0, 64519.0, 8412.0, 30557.0, 38571.0, 726.0, 62606.0, 15380.0, 18645.0, 24480.0, 47528.0], [22997.0, 0.0, 2188.0, 53387.0, 35033.0, 54051.0, 129649.0, 66894.0, 4434.0, 0.0, 50212.0, 81902.0, 15763.0, 61147.0, 21472.0, 23396.0, 32329.0, 81504.0], [159475.0, 0.0, 36164.0, 27037.0, 24573.0, 4396.0, 35816.0, 46199.0, 7375.0, 95807.0, 150449.0, 34126.0, 60847.0, 66236.0], [74987.0, 0.0, 1283.0, 161433.0, 14782.0, 74899.0, 58348.0, 28729.0, 55000.0, 37726.0, 65201.0, 71376.0, 139366.0], [32404.0, 3845.0, 2343.0, 45133.0, 25870.0, 45759.0, 140006.0, 0.0, 64273.0, 10261.0, 75025.0, 11403.0, 43779.0, 70799.0, 1208.0, 75271.0, 55534.0, 41252.0, 12231.0, 66508.0], [43840.0, 1911.0, 4296.0, 89298.0, 44412.0, 81163.0, 166525.0, 0.0, 67654.0, 0.0, 81551.0, 0.0, 30417.0, 0.0, 21090.0, 37587.0, 75164.0, 117980.0], [40469.0, 8211.0, 3015.0, 79316.0, 40923.0, 107641.0, 153016.0, 0.0, 39817.0, 14497.0, 121392.0, 0.0, 11258.0, 59963.0, 20675.0, 83559.0, 17956.0, 79649.0, 81539.0, 97120.0], [89419.0, 1785.0, 8542.0, 105511.0, 91986.0, 38030.0, 234270.0, 52215.0, 7717.0, 216824.0, 10534.0, 26209.0, 45717.0, 5296.0, 138799.0, 88360.0, 128723.0, 88575.0, 152239.0], [78475.0, 11370.0, 3957.0, 156737.0, 13591.0, 94749.0, 275984.0, 0.0, 106719.0, 20077.0, 163142.0, 0.0, 107861.0, 96346.0, 4989.0, 82178.0, 109604.0, 152167.0, 97996.0, 147222.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

