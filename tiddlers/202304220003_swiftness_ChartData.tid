created: 20230422000344000
creator: Drevarr
modified: 20230705163526275
modifier: drevarr
tags: ChartData
title: 202304220003_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rkantor", "Nazhul Naxxremis", "Ryvalia Fazebringer", "Newtype Khan", "Smol Gluvs", "Laddy Lux", "Konztantin\u00eb", "Tegan Parker", "Skye Nightroad", "Stoic Rapidfire", "Sub Train", "Venomina The Siren", "Mac Saharlot", "Zadie Miststep", "Air One Com", "Solo Bloodborn", "Blancooo Padreee", "Drevarr Moonwillow", "Ark Darkness", "Elonith Primal", "Soxx", "Domina Flagbringer", "Lucas Ryn", "Koralia Danai", "Johosh The Great", "Zaylen Harker", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Herald", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Firebrand", "Herald", "Tempest", "Scrapper", "Druid", "Firebrand", "Tempest", "Druid", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[439.344, 52.3008, 74.816], [19.1268, 54.7552, 67.5918, 52.079, 0.0, 91.2529, 18.4254, 42.1848, 144.6057, 49.14, 0.0, 0.0, 41.0688, 36.1961, 54.8352], [0.0, 0.0, 0.0, 157.6827, 0.0, 40.8663, 0.0, 50.0108, 0.0, 267.3, 0.0, 0.0, 46.8372, 25.121, 13.8298, 31.2964, 0.0, 11.1023, 106.1378, 0.0, 0.0, 0.0, 0.0, 0.0], [83.5507, 107.2632, 100.632, 57.2414, 27.7466, 37.4454, 186.3, 4.599, 27.8415, 0.0, 0.0, 11.6928, 12.1077, 19.0714, 62.7676, 0.0, 0.5184, 8.8704, 0.0, 16.3282, 0.0], [32.4852, 65.0928, 0.0, 48.2357, 0.0, 95.6251, 86.4873, 125.5082, 144.7335, 20.16, 0.0, 0.0, 18.3816, 9.3572, 17.6198, 0.0, 53.4573, 0.0, 29.376, 0.0, 31.4247, 0.0, 14.5899], [4.2489, 135.4136, 87.6315, 301.7952, 42.0192, 107.6676, 152.9592], [47.4144, 374.8032, 85.5936, 67.9733, 209.0755, 60.9912], [41.5932, 67.1431, 100.1052, 94.8276, 101.7, 96.201, 0.0, 15.0696, 27.2966, 15.3422, 14.4038, 44.9776, 30.6322, 139.968, 0.0, 4.3781, 0.0, 63.2745], [0.0, 54.1872, 16.8535, 140.088, 45.0384, 78.7708, 14.4188, 147.3538, 19.6812, 344.34, 63.378, 0.0, 24.4536, 0.0, 33.6672, 68.7121, 17.8886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 68.302, 93.0372, 33.7791, 19.4832, 59.2368, 0.0, 39.8831, 23.0998, 515.34, 0.0, 26.3718, 31.1604, 4.81, 106.2029, 40.4755, 0.0, 31.8646, 10.152, 0.0, 3.4848, 6.8427, 22.9908, 0.0], [180.0955, 82.1612, 76.4084, 61.5992, 0.0, 128.4709, 131.4, 81.081, 87.2919, 50.0664, 102.7881, 120.8794, 55.6723], [51.0348, 91.2832, 30.6762, 0.0, 116.3933, 91.0043, 61.938, 74.8269, 149.94, 122.157, 0.0, 12.3648, 0.0, 48.0614, 10.8838, 46.2106, 13.8561, 31.3725, 45.8784, 85.8816, 77.5401, 0.0, 77.6709], [137.5915, 73.6128, 57.4492, 0.0, 66.9504, 22.6017, 0.0, 38.1672, 64.6668, 187.74, 183.204, 49.266, 5.5752, 0.0, 81.0835, 27.3625, 0.0, 49.4825, 54.9872, 80.9693, 157.0752, 0.0, 0.0, 0.0, 0.0], [0.0, 47.1074, 98.1552, 24.7173, 24.5758, 93.9114, 48.9794, 243.36, 146.79, 20.4516, 8.0868, 16.0063, 15.6442, 25.5266, 0.0, 42.5298, 100.0395, 266.544, 8.6688, 28.9276, 3.1906, 81.5409], [11.719, 23.6856, 40.9008, 95.4136, 12.408, 45.2033, 39.7857, 85.0811, 65.5614, 184.5, 199.836, 18.3816, 25.8612, 10.206, 62.0122, 76.1865, 10.6656, 25.4454, 0.0, 79.242, 179.0208, 0.0, 52.7312, 54.8495, 0.0], [53.8586, 12.0984, 75.1415, 68.1576, 27.4824, 31.9103, 99.2218, 51.4337, 43.2603, 229.32, 179.676, 72.9882, 67.8408, 31.7499, 96.9696, 3.8902, 18.6067, 67.4445, 67.1513, 16.2432, 107.3952, 25.5224, 107.3999, 8.2044], [40.6217, 0.0, 70.6422, 48.3062, 58.9248, 17.489, 59.7168, 41.4734, 74.763, 290.16, 270.774, 57.1527, 6.762, 16.9966, 94.631, 129.6001, 27.4982, 31.3838, 52.9807, 433.3824, 22.2048, 35.5757, 70.6615, 15.9057], [127.937, 82.4168, 28.0637, 66.7119, 192.72, 60.5414, 36.6467, 122.9134, 91.4409, 329.4, 214.263, 20.2239, 9.9912, 6.5683, 25.1194, 72.9957, 38.0371, 18.4893, 30.9495, 116.9856, 51.9552, 14.9827, 153.3815, 82.7793], [3.9468, 52.682, 18.9887, 53.3836, 82.8432, 68.1576, 133.6482, 77.7155, 0.0, 653.58, 166.32, 42.2901, 40.9308, 57.8006, 13.991, 75.6183, 24.5414, 211.1193, 63.2032, 249.3504, 69.0912, 29.2843], [255.9955, 68.8416, 104.3491, 94.9199, 0.0, 85.0471, 56.0674, 111.6976, 96.8724, 320.58, 41.958, 39.7233, 25.3644, 37.9544, 52.0934, 76.1428, 34.0877, 34.7786, 43.1855, 51.1477, 330.7392, 172.944, 8.9507, 94.9192, 211.0311], [0.0, 48.0812, 117.415, 141.1458, 32.7096, 74.9275, 62.524, 90.0193, 96.2334, 311.58, 306.243, 127.1808, 14.7108, 57.7602, 35.0381, 211.3379, 76.7712, 69.1037, 127.5458, 46.8825, 312.8544, 215.28, 22.928, 59.4476, 70.434], [142.2062, 72.1644, 48.3488, 194.882, 151.9848, 58.6726, 177.8744, 85.2903, 169.4628, 504.0, 79.317, 69.6555, 32.2644, 37.7119, 86.567, 164.743, 68.5766, 66.2644, 48.9622, 351.3024, 142.3584, 125.5041, 0.0, 15.2091], [0.0, 140.3692, 101.302, 220.572, 93.0864, 26.9491, 215.6112, 152.0181, 709.02, 255.276, 140.4495, 23.4048, 22.716, 93.7843, 92.8838, 41.3741, 38.0965, 128.9008, 176.2148, 348.9696, 249.552, 85.5179, 129.03, 0.0], [0.0, 56.9988, 59.8641, 47.3189, 57.0768, 54.4767, 0.0, 100.147, 191.9556, 854.64, 514.71, 117.2034, 56.58, 117.218, 0.0, 113.1652, 47.8579, 177.1566, 53.3332, 562.5504, 138.0096, 63.8222, 308.9213, 0.0], [74.807, 183.4924, 109.5094, 96.5419, 151.8264, 145.4122, 58.3642, 100.6492, 85.4024, 978.84, 512.001, 113.2704, 35.0244, 52.8492, 80.7206, 171.7803, 19.9795, 166.2728, 58.2682, 120.3552, 107.8848, 98.3926, 143.6221, 55.8828], [11.5975, 109.4536, 64.1347, 157.3654, 35.8512, 162.196, 40.3982, 68.8432, 91.8882, 822.96, 478.296, 77.8527, 0.0, 52.6066, 185.0285, 226.243, 57.6998, 217.1076, 64.1197, 420.9408, 75.8304, 175.1869, 259.796, 42.7248], [87.1939, 169.8604, 288.9746, 268.1523, 198.528, 215.9675, 187.1637, 313.4565, 240.0723, 638.46, 134.568, 0.0, 182.7948, 71.3211, 114.025, 196.9136, 80.2349, 363.9459, 234.5042, 384.366, 560.1312, 7.056, 135.071, 0.0, 80.0703], [117.9182, 190.99, 149.4188, 194.7057, 85.3776, 168.7896, 128.0338, 267.0867, 137.2891, 1041.48, 526.239, 183.5262, 95.8824, 131.1427, 241.5974, 258.8506, 76.9824, 60.4388, 298.3208, 116.1487, 559.5264, 47.0016, 229.4098, 221.9316, 109.908]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

