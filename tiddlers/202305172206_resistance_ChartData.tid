created: 20230517220640000
creator: Drevarr
modified: 20230705163530553
modifier: drevarr
tags: ChartData
title: 202305172206_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Eibh\u00ebar", "Raelyn Sunray", "Jupiter Four", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Miphest\u00f6", "Blancooo Padreee", "Xanvias Einzbern", "Itsy Bitsy Tika", "Lucas Ryn", "Koralia Danai", "Bella Sassy", "Gabe Malhorn", "Johosh The Great", "Solus Sanctus", "Grasszanine", "Newtype Khan"];
const professions = ["Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.839, 6.7338, 26.525, 16.7875, 6.4022, 8.4271, 20.4685, 12.8554, 6.7468, 13.5341, 11.8238, 10.764, 18.6797, 28.1182, 8.019, 26.88, 40.4618, 25.3236, 22.8384, 17.7667, 0.0, 6.7591, 0.0, 6.5092, 51.9057, 14.3374, 28.3132, 31.9068, 32.0475, 13.0948, 37.296, 4.5752, 42.6932, 15.193, 6.7716, 5.528, 6.7392], [4.4383, 13.514, 23.8547, 18.6206, 4.6238, 5.108, 15.4616, 4.6192, 0.0, 8.9741, 28.201, 13.896, 41.4202, 16.7903, 9.8172, 25.728, 38.7952, 24.9852, 40.055, 19.2398, 0.0, 8.6583, 0.0, 9.8431, 49.3891, 10.3527, 26.0219, 26.5413, 32.1303, 5.1313, 0.0, 44.6544, 0.0, 29.2648, 15.6562, 9.0288, 0.0, 16.1136], [0.0, 13.1271, 0.0, 38.4023, 106.0135, 34.3725, 17.6753, 68.8215, 91.6707, 7.7969, 110.0736, 6.9608, 145.2125, 13.896, 27.2448, 3.7781, 11.5776], [18.8483, 7.918, 25.9316, 17.2699, 22.127, 0.0, 26.0422, 0.0, 0.0, 20.8118, 26.1446, 9.684, 28.2902, 22.0693, 8.0838, 19.584, 31.7584, 27.8616, 54.695, 20.4898, 0.0, 7.9321, 7.5978, 9.949, 53.898, 15.5663, 18.3299, 19.6735, 38.9207, 17.5596, 0.0, 53.7264, 0.0, 32.3209, 23.7158, 0.0, 0.0, 14.688], [5.2452, 5.9211, 19.9382, 18.0418, 7.488, 7.4965, 37.5361, 12.4888, 0.0, 6.9312, 20.5632, 7.272, 46.6315, 14.8473, 4.7304, 15.4752, 54.2577, 36.7728, 70.0378, 28.5696, 7.1971, 7.4014, 0.0, 8.9435, 75.4992, 5.8467, 21.9304, 20.0312, 37.0989, 6.764, 39.4128, 0.0, 28.9869, 6.1142, 17.8416], [16.7156, 7.4536, 14.9537, 21.4186, 7.5254, 0.0, 11.3364, 17.0102, 7.4448, 8.9558, 6.2424, 7.56, 33.0955, 24.8921, 5.103, 23.3088, 39.2582, 30.0048, 46.6138, 29.9088, 5.3336, 13.7695, 0.0, 2.9988, 57.9876, 8.9376, 17.2661, 33.3376, 38.2582, 8.1967, 7.542, 44.9568, 8.9543, 44.175, 27.5141, 18.1764, 0.0, 14.904], [4.323, 0.0, 14.0042, 37.0483, 20.0678, 8.7476, 19.2404, 7.0143, 13.9073, 6.9494, 26.5118, 14.688, 26.9366, 20.2363, 7.1928, 20.2368, 56.2947, 35.814, 61.1366, 33.7032, 7.1543, 13.6578, 0.0, 9.8078, 46.5578, 11.8423, 28.8042, 34.6969, 39.2519, 13.2947, 44.4528, 0.0, 25.6613, 5.4648], [0.0, 0.0, 11.9867, 57.3091, 6.2525, 0.0, 8.9432, 46.4604, 11.3998, 0.0, 0.0, 19.728, 18.0029, 18.3667, 0.0, 54.8736, 49.9986, 36.096, 63.5962, 0.0, 0.0, 37.1748, 3.9312, 23.8493, 66.7958, 13.5181, 32.5683, 19.602, 81.1538, 16.6267, 0.0, 17.136, 7.9576, 0.0, 74.0194, 0.0, 46.0139, 19.224], [0.0, 8.4985, 102.7175, 95.1293, 18.2146, 0.0, 60.0514, 0.0, 22.7738, 0.0, 50.233, 22.86, 40.5403, 62.7253, 47.2068, 50.9568, 119.3485, 81.4416, 58.7942, 39.4618, 0.0, 31.8681, 0.0, 39.249, 94.8983, 0.0, 27.413, 87.8511, 90.1801, 8.4966, 0.0, 70.4592, 0.0, 104.8345, 35.6664, 22.2552, 0.0, 36.1152], [27.6096, 14.35, 33.9425, 54.8971, 18.0274, 0.0, 28.1836, 40.0327, 0.0, 15.1392, 46.1203, 0.0, 98.7451, 24.3422, 19.7964, 80.9088, 75.646, 152.28, 134.8051, 18.5702, 7.4327, 14.3281, 0.0, 18.8572, 117.8626, 31.0582, 39.3602, 43.854, 110.3029, 7.9635, 0.0, 106.1424, 0.0, 53.3434, 58.919, 29.8584, 11.931, 17.2368], [8.0696, 17.9955, 127.9964, 109.6978, 19.3752, 0.0, 23.7435, 16.1793, 10.2883, 6.9494, 36.6466, 7.092, 28.561, 31.4909, 7.5816, 40.2048, 136.4777, 121.3164, 98.9664, 41.7384, 6.8544, 27.7345, 11.0376, 18.0986, 100.351, 7.4852, 20.4575, 53.7265, 106.1624, 26.1895, 19.386, 100.1952, 10.621, 65.29, 73.093, 32.274, 8.4312, 22.9392], [3.6313, 7.2214, 29.1359, 84.0341, 18.3456, 0.0, 15.808, 55.0878, 30.7356, 18.0576, 34.5168, 9.288, 122.6362, 61.6255, 7.6626, 37.1328, 121.0151, 156.0024, 141.1296, 84.1018, 14.5515, 1.9026, 23.0908, 136.318, 49.1568, 73.7288, 57.5897, 113.2013, 11.5954, 97.272, 99.8336, 84.8582, 19.5624, 11.8117, 24.0192], [11.0669, 3.8313, 52.1005, 104.6808, 7.9373, 14.9723, 14.1075, 32.603, 25.1004, 12.1478, 19.6819, 20.016, 244.1894, 116.7988, 21.87, 63.0912, 136.3851, 100.5048, 206.3654, 57.7195, 10.3673, 17.9311, 0.0, 7.2853, 158.9678, 32.0264, 82.0755, 78.8371, 84.549, 7.8968, 0.0, 95.8608, 5.3595, 154.4735, 128.2138, 52.3908, 0.0, 15.9408], [7.2626, 7.2911, 119.3327, 40.1357, 30.1766, 16.2545, 66.8848, 31.6742, 10.5468, 7.1683, 51.2611, 7.164, 157.4237, 84.2813, 20.8332, 55.7952, 140.1813, 197.118, 183.4099, 62.3174, 17.2431, 13.8253, 7.6986, 80.95, 225.6587, 38.8413, 7.8557, 46.7156, 96.8049, 13.428, 0.0, 166.5216, 0.0, 182.8121, 69.2021, 23.4036, 0.0, 15.3792], [7.3779, 7.918, 139.0336, 131.9846, 25.8149, 7.9721, 72.1121, 28.5215, 33.0104, 7.3325, 14.8349, 14.148, 139.3531, 61.1122, 7.7922, 83.8272, 155.0883, 159.33, 173.4547, 81.468, 10.9028, 7.2618, 44.5939, 144.9165, 69.7133, 61.8635, 108.8123, 161.4795, 36.552, 11.952, 141.5232, 0.0, 157.7148, 94.4928, 48.5496], [7.205, 10.7509, 125.7134, 41.6707, 0.0, 53.3441, 40.8637, 15.4066, 14.2454, 21.9586, 27.036, 151.3325, 60.0857, 19.3752, 80.5248, 136.3851, 193.3956, 174.9773, 127.6258, 0.0, 25.8353, 7.3332, 53.608, 181.8272, 35.3408, 54.5806, 73.5431, 158.0015, 17.6263, 16.776, 210.3696, 7.7125, 148.5464, 89.7682, 29.304, 11.6526, 42.984], [20.174, 0.0, 179.8002, 253.9354, 20.2363, 0.0, 171.1796, 107.8537, 0.0, 0.0, 335.4005, 0.0, 115.3267, 123.2876, 0.0, 115.6608, 266.474, 174.3888, 73.6685, 0.0, 0.0, 0.0, 0.0, 0.0, 131.9139, 86.434, 87.0671, 20.1743, 115.3543, 39.251, 0.0, 20.16, 0.0, 203.2789, 100.7923, 0.0, 95.6866, 47.4768], [22.422, 5.3174, 208.4021, 82.4904, 38.2637, 7.2587, 89.5891, 21.4339, 23.7045, 7.1136, 38.2622, 34.884, 236.2032, 185.0597, 17.3016, 130.5984, 221.1975, 260.1732, 220.8883, 122.8939, 18.6354, 26.5056, 91.7104, 447.6473, 106.4319, 208.0119, 197.9512, 182.4304, 63.4413, 0.0, 212.7888, 4.5425, 294.1294, 145.0742, 82.6452, 21.7542, 130.464]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

