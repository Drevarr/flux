created: 20230508221143000
creator: Drevarr
modified: 20230705163529108
modifier: drevarr
tags: ChartData
title: 202305082211_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Fae", "Gavann", "Sumatra Satyricon", "Kiloak", "Smol Gluvs", "Tika Rucola", "Elektra Gd", "Newtype Khan", "Sister Elon\u00edth", "Ark Darkness", "Sygaldry Verdandi", "Solus Sanctus", "Grasszanine", "F\u00f9gly", "Miphest\u00f6", "Osh Kosh Johosh", "Red Date Sayaccho", "Primal Clone", "Eibh\u00ebar", "High Sorcer Baradun", "Fribble Bibble", "Artakama Nahid", "Tegan Parker", "Mac Aaroni", "Arriasa", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Soulbeast", "Firebrand", "Scourge", "Chronomancer", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 21043.78, 0.0, 284.2, 85731.76, 12662354.6, 295933.54, 0.0, 0.0, 24876542.4, 0.0, 78323.28, 103619.25, 74323.2, 0.0, 187867.68, 67410.0, 0.0], [0.0, 33140114.88, 10065.87, 387786.0, 1806632.52, 294777.0, 59276.8], [0.0, 28039.26, 0.0, 0.0, 386218.74, 11538294.6, 170876.23, 0.0, 0.0, 23570377.92, 5768.88, 94938.48, 70658.46, 225439.2, 0.0, 349807.92, 9450.0, 68956.8], [0.0, 21043.78, 0.0, 390476.94, 10141922.0, 86087.61, 0.0, 0.0, 29514645.12, 16121.56, 91615.44, 231778.17, 214972.8, 0.0, 295190.28, 227115.0, 31222.4], [0.0, 6995.48, 0.0, 0.0, 85731.76, 11549897.8, 113956.85, 0.0, 5381.03, 32025913.92, 9212.32, 90378.96, 110724.57, 32928.0, 0.0, 591443.16, 124992.0, 36713.6], [0.0, 0.0, 0.0, 0.0, 516377.72, 7781396.0, 0.0, 0.0, 5381.03, 27482777.28, 10442.12, 217427.28, 384739.92, 314227.2, 0.0, 940401.0, 306747.0, 105142.4], [0.0, 91285.28, 0.0, 951096.86, 0.0, 5381.03, 55167674.88, 20727.72, 215727.12, 20131.74], [0.0, 0.0, 0.0, 0.0, 128739.58, 6715714.6, 28459.69, 0.0, 27005.73, 43227340.8, 15227.16, 35587.44, 313423.56, 242020.8, 0.0, 864637.62, 199836.0, 70576.0], [0.0, 119897.94, 0.0, 12429928.0, 362300.12, 21574.41, 37469958.72, 2303.08, 103709.76, 232370.28, 90787.2, 0.0, 483057.96, 208530.0, 62444.8], [0.0, 49140.38, 0.0, 171605.46, 10277171.8, 455945.49, 0.0, 0.0, 53254641.6], [0.0, 13990.96, 0.0, 386218.74, 14310009.0, 171348.59, 0.0, 48630.43, 38257618.56, 16121.56, 140301.84, 120790.44, 181927.2, 966222.18, 122976.0, 19747.2], [2237.67, 13990.96, 0.0, 0.0, 128739.58, 15893845.8, 352616.74, 774.9, 0.0, 40117328.64, 3443.44, 101275.44, 347831.73, 390196.8, 0.0, 926055.9, 151893.0, 75926.4], [0.0, 0.0, 0.0, 0.0, 0.0, 70361739.84, 12253.28, 161167.44, 100658.7, 298586.4, 0.0, 509941.74, 217602.0, 93315.2], [88825.77, 637964.84, 0.0, 514958.32, 89749301.6, 3931098.01, 0.0, 289167.5], [8983.11, 6995.48, 0.0, 0.0, 29866999.4, 1417080.0, 0.0, 5381.03, 111461231.04, 29984.76, 99266.16, 272567.97, 290178.0, 0.0, 979717.2, 123102.0, 22563.2], [11253.21, 119553.9, 0.0, 0.0, 1419541.94, 33599603.8, 946491.35, 774.9, 32386.76, 90236058.24, 17239.56, 180139.68, 800532.72, 314932.8, 0.0, 2299360.14, 593334.0, 103558.4], [128178816.0, 54692.56, 465959.76, 1464288.03, 736646.4, 0.0, 2674245.42, 964530.0, 269702.4], [4475.34, 140884.38, 0.0, 0.0, 605657.98, 28926777.6, 857687.67, 27156.6, 101494871.04, 23299.12, 156723.84, 848296.26, 713773.2, 0.0, 2543545.62, 596673.0, 134041.6], [2237.67, 21043.78, 0.0, 0.0, 905009.44, 47348670.6, 256373.39, 0.0, 98266.66, 122040553.92, 46978.36, 100966.32, 692439.75, 651210.0, 0.0, 2322737.34, 673407.0, 160899.2], [29219.43, 77236.98, 0.0, 1549275.1, 69472709.6, 1923686.1, 0.0, 54011.46, 142474512.0, 281956.08, 242896.68, 790860.0, 3517.22, 1505385.42, 689724.0, 260409.6], [0.0, 260380.94, 0.0, 0.0, 1053904.5, 61647439.0, 2083225.69, 0.0, 27005.73, 167579074.56, 38302.68, 266538.72, 466056.36, 1258555.2, 0.0, 2642261.16, 170289.0, 156956.8], [60546.81, 394155.16, 578.55, 3441335.3, 57525764.8, 2779366.24, 3137.4, 304355.08, 179598123.84, 93554.24, 640496.64, 1470340.71, 1262436.0, 2646.98, 4677671.46, 944181.0, 345206.4], [59995.5, 349544.64, 1766443.3, 76132946.4, 2636359.25, 0.0, 194018.82, 193592162.88, 82687.28, 460241.04, 629347.14, 1113025.2, 4405.59, 4340295.96, 896679.0, 265091.2], [81431.73, 247766.14, 0.0, 0.0, 2081833.98, 81714085.6, 2930639.53, 0.0, 168169.76, 188887533.12, 101290.8, 497683.2, 178751.43, 727062.0, 0.0, 4327863.54, 1044540.0, 311731.2], [52698.75, 49140.38, 0.0, 1451.45, 4040605.98, 92612391.2, 3125133.76, 3137.4, 259546.69, 202262007.36, 113141.6, 569051.28, 1867514.94, 1445539.2, 5226398.1, 1135134.0, 286950.4], [3522.05, 3724221.72, 89405556.8, 3842884.78, 11793.6, 323062.96, 209747568.96, 92391.52, 498456.0, 1788961.68, 1606298.4, 1758.61, 5119606.8, 1152018.0, 325846.4], [60806.25, 474087.12, 0.0, 2524970.66, 89607162.4, 3469366.11, 4706.1, 59442.78, 214006315.2, 134942.6, 550581.36, 2337058.17, 2182832.4, 0.0, 5707012.08, 1171674.0, 479635.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

