created: 20230626090515000
creator: Drevarr
modified: 20230705163539008
modifier: drevarr
tags: ChartData
title: 202306260905_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Drevarr Moonwillow", "Illusive Heart", "Koralia Danai", "Urilstormwalker", "Brace Stonebrow", "Gestern Yesteryear", "Traidoruns Maximus"];
const professions = ["Dragonhunter", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.3414, 37.1457, 62.5363, 6.481, 6.0134, 71.4381], [0.0, 0.7722, 0.763, 2.3099, 0.1039, 5.6445, 17.6256, 7.4518, 4.795, 14.924, 92.3667, 51.4497, 2.0205, 0.0, 17.5642, 8.7703], [0.0, 37.6439, 0.0, 7.7409, 8.769, 0.0, 5.7143, 2.6591, 0.2399, 13.3518, 7.3352, 2.4948, 0.0, 1.3042, 7.0487, 8.5686, 55.3386, 0.0, 10.2718, 0.0, 57.2461, 19.6716, 20.7009, 1.0164], [66.3082, 33.8224, 76.3409, 9.4464, 5.7634, 41.7151, 78.8298, 167.1258, 144.1675], [129.4959, 73.5627, 71.2768, 333.5106, 145.8301, 30.4623, 2.4301], [13.3269, 41.4096, 90.141, 83.6184, 57.3948, 26.9438, 26.1853, 70.8864, 213.5967, 68.5633, 49.2334, 48.1681], [8.1884, 0.0, 24.1873, 35.1645, 106.0088, 28.2021, 16.6795, 18.0193, 16.1622, 4.0194, 33.973, 23.7946, 25.0361, 53.4738, 85.8015, 68.7282, 62.5353, 27.1656, 6.536, 39.0029, 144.3113, 16.6296, 16.9048, 3.8531], [30.2896, 6.7799, 28.0067, 104.6417, 20.2776, 37.1514, 12.2298, 2.2878, 18.1682, 18.2373, 26.7106, 30.7072, 80.8881, 94.7335, 104.0616, 15.9667, 12.6798, 5.9482, 267.4941, 61.3132, 14.6384, 30.7415]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

