created: 20230506002551000
creator: Drevarr
modified: 20230705163528397
modifier: drevarr
tags: ChartData
title: 202305060025_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaidy Sagemist", "Miphest\u00f6", "Mrs Stealth Monkey", "Zaylen Harker", "Primal Clone", "Eibh\u00ebar", "Hyde En Sikh", "Black Raspberry Pie", "Viral Marketing", "Ark Darkness", "Air One Com", "Mac Adaymia", "Jupi Jupi Jupi", "Bella Sassy", "Lucas Ryn", "Aronorf Xideliesi", "Koralia Danai", "Newtype Khan", "Xanvias Einzbern", "Solus Sanctus", "Smol Daddy Tika", "Blancooo Padreee"];
const professions = ["Vindicator", "Tempest", "Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[39.996, 0.0, 0.0, 0.0, 0.0, 0.0, 110.9948, 53.4505, 39.9148, 0.0, 0.0, 96.1632, 0.0, 73.32, 238.6017], [64.2602, 185.7701, 32.4522, 3.5631, 0.0, 256.513, 37.5844, 51.5355, 6.93, 0.0, 16.7253, 152.8632], [77.0776, 21.5901, 43.1901, 0.0, 308.4838, 43.9569, 69.2193, 0.0, 0.0, 0.0, 62.8236, 29.9065, 43.428, 158.0859], [106.1227, 254.4867, 19.5115, 5.2947, 0.0, 542.7236], [35.1076, 114.7019, 10.728, 8.9577, 0.0, 6.6856, 166.3066, 59.9531, 42.6431, 13.2502, 18.1632, 14.5908, 114.7608, 21.0266, 130.002, 206.69], [48.6174, 125.1531, 25.412, 2.1978, 0.0, 178.928, 65.8053, 49.0093, 15.6618, 6.935, 5.1462, 118.1628, 19.0481, 140.154, 203.7443], [47.6397, 140.5686, 19.7127, 11.0889, 0.0, 0.0, 169.6475, 67.1058, 48.9082, 15.5232, 7.1827, 5.2632, 104.7816, 12.2847, 149.178, 229.2737], [40.3515, 126.7208, 17.7012, 11.5218, 5.3273, 7.0021, 179.2993, 59.3028, 56.8911, 14.9688, 16.0166, 5.117, 140.3892, 18.45, 140.154, 229.7646], [69.7708, 303.8686, 30.9771, 60.0399, 0.0, 7.5757, 736.1293], [66.66, 142.3976, 0.0, 5.1615, 0.0, 0.0, 203.0573, 69.3167, 51.7376, 12.3631, 2.6006, 0.0, 63.9576, 16.9777, 200.784, 389.8143], [43.3734, 159.6421, 16.025, 4.9617, 0.0, 0.0, 220.5047, 66.3255, 59.6195, 24.8371, 4.9949, 0.0, 84.3696, 36.762, 152.562, 388.8324], [62.927, 181.5896, 81.1305, 46.7865, 0.0, 0.0, 292.8926, 121.5968, 62.651, 41.5246, 0.0, 47.6612, 162.162, 20.9806, 125.49, 143.3574], [69.6819, 220.7816, 23.7357, 4.995, 0.0, 2.4923, 408.7132, 103.1296, 53.6576, 7.9002, 8.0909, 15.8188, 201.1716, 26.1337, 283.974, 552.3188], [158.2064, 333.3933, 42.912, 30.8025, 0.0, 0.0, 643.3243, 161.3921, 128.5356, 11.8642, 8.0496, 199.3572, 22.0388, 412.284, 732.9884], [156.1622, 369.9725, 30.7089, 17.5824, 0.0, 5.0043, 657.4306, 154.7595, 136.7207, 7.4012, 22.5802, 38.0705, 301.8708, 44.3996, 358.422, 646.0902], [35.5341, 58.0653, 20.2464, 27.2964, 753.2054, 202.3578, 137.6301, 26.1677, 18.1632, 45.0588, 315.0252, 31.6089, 364.626, 916.6036], [89.4133, 345.4122, 14.1476, 5.2947, 0.0, 0.0, 618.8237, 168.8049, 121.3611, 7.8725, 18.9888, 15.6434, 286.4484, 30.3206, 348.552, 885.6738], [167.361, 523.3438, 66.3124, 22.4109, 0.0, 0.0, 687.8707, 222.3855, 160.1642, 48.1774, 44.376, 21.5499, 230.6556, 21.7167, 548.49, 213.0723], [97.3236, 485.4582, 88.3049, 0.0, 0.0, 0.0, 613.6267, 161.262, 144.4005, 14.8856, 62.1677, 25.4388, 420.714, 51.6692, 444.996, 929.3683], [151.9848, 474.4845, 24.8085, 13.4532, 0.0, 11.0966, 925.8227, 217.8338, 193.2076, 14.1649, 10.7328, 23.1581, 545.0004, 53.3256, 502.242, 1098.7461], [306.1916, 959.1589, 177.079, 0.0, 0.0, 0.0, 989.6725, 297.0342, 272.0266, 18.4061, 0.0, 56.7548, 781.7796, 72.4657, 629.706, 1315.746], [369.4742, 713.0331, 228.2382, 106.8264, 0.0, 0.0, 1147.8122, 95.4567, 238.5791, 87.7338, 0.0, 8.4504, 408.24, 92.112, 745.89, 1736.4902]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

