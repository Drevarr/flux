created: 20230701000406000
creator: Drevarr
modified: 20230705163540163
modifier: drevarr
tags: ChartData
title: 202307010004_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Latedoctor", "Mistwalker Cael", "Audra Storm", "Smol Gluvs", "Xyntharos", "Zefirokai", "Morv\u00e4rth", "Smol Daddy Tika", "Lucky Leipreach\u00e1n", "Brad Bellick", "Sister Elonith", "Be\u00eb", "Duke Silvver", "K\u00f4sair", "Lord Erin The Wise", "Fluffy No Care Bear", "Kary\u00edna", "Melli Dragonswrath", "Mike The Archmagus", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Berserker", "Reaper", "Vindicator", "Weaver", "Reaper", "Vindicator", "Catalyst", "Reaper", "Berserker", "Scrapper", "Scrapper", "Berserker", "Scourge", "Vindicator", "Berserker", "Weaver", "Berserker", "Vindicator", "Berserker", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[101.5574, 466.2787, 319.6026, 752.3021, 1053.7391, 313.42, 326.0792, 1032.1905, 76.38, 1352.6667, 114.9686, 185.44, 154.9865, 194.9167, 1981.0213, 363.83, 469.89, 103.8636, 0.0, 519.7363, 114.641, 186.1564], [1342.6667, 1007.2703, 1116.125, 485.2128, 382.06, 518.76, 986.0152, 68.9062, 545.3846, 596.0855, 846.2114], [2645.1803, 929.541, 1234.9744, 3468.1042, 3200.4565, 937.24, 507.5743, 1134.381, 4059.08, 3752.8431], [0.0, 2426.3077, 1807.6496, 1908.4799], [492.2131, 816.6885, 725.4872, 754.1042, 419.1087, 931.16, 295.2574, 581.6349, 931.18, 593.5098, 480.3991, 1093.36, 2307.5541, 1755.2917, 242.0957, 506.99, 321.92, 1016.0152, 158.9375, 976.956, 752.9701, 761.4905], [2595.082, 980.082, 1081.6795, 1259.7396, 2883.8587, 589.62, 398.1683, 1460.5079, 1814.7, 1815.4902, 271.6413, 1907.32, 2752.5405, 1806.1806, 1701.1489, 1455.13, 64.0, 2060.3636], [470.8852, 1195.0984, 2738.6538, 1330.5417, 1756.2283, 783.42, 315.198, 1257.7143, 1763.52, 3040.0784, 668.1704, 2135.9333, 1649.7973, 1068.1111, 600.2979, 554.74, 1390.88, 815.3485, 83.5625, 983.0549, 526.0043], [151.8689, 596.6066, 549.6026, 907.1146, 1042.8261, 192.36, 427.4554, 592.746, 1271.28, 1078.5882, 942.1973, 802.0533, 2262.3514, 1514.5694, 1182.234, 1875.55, 677.67, 1161.5152, 5.25, 279.3297, 578.3632, 990.5751], [895.3115, 423.9744, 991.8854, 1302.5326, 1057.56, 161.4158, 958.9841, 1234.98, 2148.451, 593.287, 1041.4267, 2038.4324, 1531.4583, 1304.0851, 777.23, 1096.62, 411.4091, 170.375, 663.4835, 711.6111, 985.4757], [952.1967, 463.3607, 1633.3333, 971.9062, 1125.5978, 354.38, 212.8515, 671.4762, 783.16, 1336.0588, 564.278, 652.2533, 2193.9865, 1247.2361, 215.4255, 2014.82, 988.48, 958.5152, 1133.5934, 867.9615, 984.8689], [940.2295, 1600.3607, 1275.8333, 2632.5312, 2407.0217, 1124.46, 846.9505, 2345.3016, 408.74, 2163.0196, 1191.7399, 3318.7067, 2866.5811, 1229.4861, 1212.0, 2216.7273], [1658.0417, 3163.6489, 3049.16, 2008.24, 2591.1364, 122.4375, 1085.2527, 613.4701, 2020.7378], [456.2951, 637.9872, 1753.4688, 1475.0217, 720.1, 492.2574, 1486.8413, 1283.54, 1545.2549, 1171.7265, 1358.5333, 1903.6081, 1752.9861, 1562.0532, 1181.18, 825.33, 1057.9697, 11.875, 717.3297, 544.5769, 1022.6638], [1067.5082, 687.6885, 1171.9487, 2595.9375, 2396.7826, 1727.38, 666.9307, 1347.619, 2246.76, 1510.4902, 406.4978, 805.5467, 3717.2838, 2702.1111, 2081.2979, 256.86, 1282.86, 1369.697, 231.9688, 886.8632, 255.1268], [1360.64, 1431.6863, 852.7085, 3356.2267, 2738.5946, 2422.9028, 4113.3298, 1488.81, 2301.62, 1379.2727, 101.5938, 2435.4396, 464.1667, 1205.0803], [731.3443, 2548.1803, 1587.3462, 3598.5417, 1872.2609, 2965.26, 280.9307, 1071.5714, 2684.76, 684.7059, 285.0269, 2543.6133, 2491.6892, 2296.1111, 2804.1702, 1146.71, 1178.77, 2083.5909, 210.2188, 538.6374, 900.7222], [3520.6486, 1899.5278, 1968.734, 2368.75, 1346.88, 1543.7576, 174.8125, 2851.8901, 1933.4829, 2330.408], [1660.4754, 1185.6066, 1154.3846, 1506.4375, 2049.1957, 1082.74, 528.0495, 665.0159, 1448.26, 2894.8824, 1311.0269, 2227.6933, 3286.1351, 1326.8333, 936.9043, 376.4, 586.55, 1143.8636, 189.2812, 1145.6484, 735.4615, 1419.4567], [950.3279, 2729.5738, 432.6795, 1433.2708, 842.8696, 2843.3, 138.3168, 697.4603, 1327.0, 2762.0392, 1236.8655, 2138.2133, 1517.7162, 1722.4722, 4613.7447, 485.81, 1875.73, 3476.9394, 53.6562, 2000.2198, 741.0641, 493.704], [2487.8033, 3208.5902, 3159.2179, 3752.9062, 3431.5109, 4450.46, 722.4455, 1117.746, 5194.92, 1774.7647, 1521.7085, 5791.52, 3725.1486, 1447.0694, 6411.2447, 3194.27, 2691.62, 1390.0455], [3730.7213, 2491.2951, 1042.1923, 4773.0104, 3292.7935, 2900.66, 809.8119, 2212.3175, 4549.44, 2969.8235, 1145.0269, 4780.8267, 3719.2432, 2623.625, 5059.9787, 3860.11, 3381.59, 1608.6515, 73.125, 2883.1209, 2108.5598, 2858.7632], [3155.1148, 4293.3607, 4544.5769, 4482.0938, 4157.7283, 2965.54, 1005.7129, 2496.6032, 4629.2, 5072.0, 1874.435, 2501.3067, 4597.3649, 2398.1111, 5153.8191, 3787.62, 3376.17, 3553.0455, 67.0938, 2494.5275, 1975.2137, 2600.9366]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

