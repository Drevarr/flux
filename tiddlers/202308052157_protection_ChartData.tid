created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Hellyrian", "Tegan Parker", "Keypek The Drunk", "Lucas Might", "Belvyn Brightblade", "Miphest\u00f6", "Kumengo", "Tribal S", "Zaedy Zae", "Hyde En Sikh", "Frozen Chaos", "Tootsie Pop Rocks", "Crabbedmermaid", "Venomina The Sly", "Aronorf Xideliesi", "Drevarr Moonwillow", "Sub Train", "Kisumaiassu", "Crusader Siolith", "Gabe Malhorn", "Bella Sassy", "Koralia Danai"];
const professions = ["Tempest", "Tempest", "Scrapper", "Tempest", "Firebrand", "Tempest", "Firebrand", "Druid", "Druid", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.0784, 128.9245], [19.0864, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 24.0408, 9.6655, 9.4934, 11.2042, 0.0, 18.72, 75.373, 0.0, 0.0, 12.258], [8.0936, 20.4877, 3.4839, 12.6158, 7.921, 2.1168, 14.9827, 4.6336, 2.3285, 0.0, 12.6997, 8.1, 5.733, 4.5936, 0.0, 0.0, 38.16, 35.6335, 0.0, 9.2016, 24.3], [22.091, 0.0, 87.408, 78.6724, 9.1261, 30.5442, 10.746], [56.5344, 22.591, 20.8373, 50.2267, 30.263, 26.4756, 0.0, 42.8366], [72.9632, 94.7264, 0.0, 39.9735, 0.0, 0.0, 72.109, 0.0, 39.5928, 0.0, 48.1818, 58.5603], [0.0, 4.1877, 0.0, 21.3998, 31.2794, 0.0, 4.9248, 48.1381, 44.7621, 8.6333, 0.0, 238.032, 85.8577], [42.28, 88.3386, 44.3205, 57.3615, 18.719, 49.4149, 0.0, 22.7304, 50.4977, 0.0, 23.5224, 48.9435, 24.6523, 59.9886, 0.0, 83.808, 56.7497, 0.0, 83.0061, 103.626], [57.0176, 143.1802, 19.1614, 52.0695, 12.5741, 77.612, 53.2224, 32.9141, 30.8734, 9.8496, 101.9618, 12.7855, 34.4062, 0.0, 139.392, 44.3586, 19.0422, 48.708], [66.0172, 57.9576, 36.8015, 32.4135, 0.0, 35.4559, 0.0, 40.5821, 42.3907, 13.3409, 75.492, 48.5171, 28.3272, 25.8681, 15.5152, 130.896, 103.8944, 23.6094, 94.0608, 57.672], [106.416, 346.5103, 52.3883, 183.5847, 246.726], [36.844, 115.6815, 31.0023, 108.6277, 23.4077, 103.157, 66.8237, 11.2217, 0.0, 35.4456, 101.3932, 69.1592, 60.2743, 0.0, 135.216, 75.2263, 22.7719, 12.5244, 42.228], [47.4902, 24.4188, 142.9867, 0.0, 89.591, 37.7518, 175.7798, 47.263, 87.9515, 197.712, 140.6278, 0.0, 90.4824, 96.714], [81.3588, 178.0794, 23.8802, 60.5745, 0.0, 0.0, 54.7193, 0.0, 62.7211, 20.0356, 0.0, 66.5496, 59.5093, 32.0531, 52.3075, 0.0, 159.552, 122.0045, 38.8725, 101.1537, 74.844], [111.3776, 197.5544, 77.0206, 99.8392, 20.3174, 0.0, 70.0276, 17.2288, 91.5499, 50.5198, 13.8414, 142.9488, 114.8491, 97.1546, 80.3657, 22.3268, 230.256, 152.7256, 0.0, 29.2662, 59.67], [83.2916, 235.3359, 60.8801, 116.991, 32.3942, 25.4772, 120.7454, 15.4368, 114.613, 66.9106, 20.0505, 113.8536, 74.3866, 49.9682, 73.5733, 67.2475, 316.368, 77.7192, 4.9674, 137.5767, 141.858], [174.254, 303.9658, 11.3337, 73.332, 0.0, 0.0, 87.1507, 0.0, 159.5194, 112.1068, 0.0, 93.8304, 103.6201, 87.7888, 126.96, 0.0, 256.464, 176.188, 0.0, 77.8302, 158.22], [107.6328, 258.0048, 31.1346, 45.171, 56.9386, 168.997, 23.0656, 133.019, 21.4494, 0.0, 91.9512, 206.4347, 71.5581, 101.2823, 0.0, 369.36, 217.6871, 0.0, 223.7778, 151.578], [75.6812, 312.6127, 53.4272, 269.136, 185.5565, 190.9126, 18.0992, 60.1709, 80.6506, 0.0, 71.9928, 186.8193, 79.8521, 112.6135, 0.0, 216.144, 231.6179, 19.494, 261.7983, 104.436], [198.414, 447.146, 23.7258, 165.8475, 35.9107, 215.4339, 0.0, 77.1355, 23.2387, 0.0, 142.6896, 166.3986, 88.1206, 120.9611, 0.0, 353.808, 319.2353, 40.7641, 248.4432, 188.19], [326.16, 366.0521, 68.3109, 136.6942, 23.905, 120.6988, 0.0, 94.5806, 39.2318, 57.0547, 135.3672, 97.4607, 61.6053, 51.8632, 36.5732, 453.744, 306.6242, 0.0, 305.5698, 183.708], [221.3056, 401.6524, 62.4897, 264.1747, 108.5846, 267.0822, 11.9808, 161.2565, 65.6957, 54.9433, 122.8608, 205.108, 63.7745, 129.8801, 0.0, 496.08, 229.5649, 0.0, 192.0195, 195.804]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

