created: 20230311223557000
creator: Drevarr
modified: 20230705163521826
modifier: drevarr
tags: ChartData
title: 202303112235_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Vopiscus Zergherdus", "Smol Daddy Tika", "Venomina The Fierce", "Sheep Paws", "K\u00f4sair", "Kmpek", "Minnie Marshmallow", "Mistwalker Caelon", "Ryvalia Fazebringer", "Zaylen Harker", "Aronorf Xideliesi", "Xyntharos", "Legendary Hacker", "Blanco Padre Guard", "Sygaldry Verdandi", "Bella Sassy", "Johosh The Great", "Koralia Danai"];
const professions = ["Scrapper", "Berserker", "Spellbreaker", "Berserker", "Spellbreaker", "Vindicator", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.3367, 1.8998, 0.0, 0.0, 3.2864, 4.914, 7.6912], [15.4287, 0.0, 0.0, 1.0643, 1.4715, 1.053, 4.1952, 1.6386, 1.3018, 9.0588, 9.405, 1.0935, 1.6008, 1.5792, 1.5989, 0.0, 1.6684, 0.0, 0.3264, 1.0868, 0.0655, 2.6488, 2.352], [3.9816, 0.0, 1.8933, 1.4835, 1.1281, 5.1948, 12.3059, 4.9157, 5.077, 1.5419, 11.7563, 0.0, 3.8419, 0.0, 3.5278, 2.139, 2.832], [21.8988, 1.4656, 0.0, 1.1932, 2.1092, 4.4226, 6.8522, 0.0, 2.3432, 10.2152, 9.405, 0.0, 2.4012, 0.0, 0.0, 0.0, 0.0, 0.77, 0.0], [34.839, 0.4614, 0.0, 0.0, 2.6676, 7.1318, 3.6282, 4.1658, 11.9499, 11.3287, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5401, 0.0, 1.7952, 6.1065, 3.0139, 2.5564, 4.608], [1.547, 0.0, 0.0, 1.1281, 2.5974, 13.8442, 11.1188, 16.663, 28.5255, 20.9475, 1.3973, 2.0277, 0.0, 0.0, 2.1319, 0.0, 1.5829, 0.0], [29.3643, 3.3382, 0.0, 0.2258, 0.2943, 0.9828, 4.6147, 0.8193, 2.6036, 24.478, 25.0087, 0.486, 0.4802, 0.0, 2.1336, 2.8172, 0.0, 6.0748, 0.2722], [44.793, 2.7411, 0.0, 0.0, 0.0, 3.6504, 8.8099, 3.3942, 11.9766, 21.5869, 14.3213, 0.486, 0.0, 0.0, 2.0558, 2.524, 0.0, 2.244, 5.0198, 0.2621, 1.4476, 4.08], [41.8068, 0.5428, 0.0, 0.0, 0.0, 3.4398, 8.6701, 0.0, 13.9293, 21.7796, 11.5425, 0.0, 0.0, 0.0, 1.4952, 1.4974, 0.0, 5.2192, 1.8245, 9.6696, 10.5053, 4.6847, 4.4968, 9.984], [66.6918, 1.7912, 1.6886, 3.6765, 3.0902, 9.9684, 19.9971, 14.2789, 19.527, 28.3328, 24.795, 4.6777, 3.2016, 2.116, 2.5368, 2.335, 3.7219, 0.0], [67.6872, 2.7954, 0.0, 1.419, 1.7658, 3.4398, 12.1661, 4.4475, 11.7162, 26.2126, 27.1463, 1.6403, 0.6937, 0.8316, 0.9072, 1.5736, 0.049, 6.5026, 0.0, 12.24, 4.8645, 7.4365, 5.7904, 13.488], [80.1297, 2.6054, 0.0, 2.064, 3.4825, 8.8452, 8.5302, 4.4475, 27.2076, 30.4529, 26.9325, 7.4722, 0.0, 0.0, 0.0336, 2.0812, 0.0, 0.9839, 0.3629, 5.3856, 2.2252, 8.878, 3.6036, 3.456], [25.7756, 72.663, 84.8588, 5.4067, 7.1502, 0.7392, 0.0, 0.0, 4.6202, 3.7536, 5.9512, 8.1245, 18.6956, 14.256], [97.5492, 5.9708, 1.9956, 5.6115, 5.4446, 7.371, 23.7728, 20.599, 20.8288, 38.3553, 44.2462, 0.6682, 5.7095, 0.0, 0.0, 0.0, 4.663, 0.0, 4.774, 12.48], [101.5308, 2.3069, 0.0, 1.6187, 9.7578, 21.6752, 5.6179, 20.0477, 35.4642, 37.62, 1.2757, 5.0158, 0.0, 2.5368, 2.0304, 7.0587, 0.0, 17.2176, 13.3515, 15.7903, 7.5152, 15.12], [95.5584, 5.1837, 0.4605, 3.225, 3.0411, 11.3022, 34.8202, 21.3013, 36.7108, 42.0173, 54.2925, 4.9207, 5.5494, 1.848, 2.3352, 5.4059, 3.9568, 9.1977, 3.9312, 12.8928, 18.0607, 15.0696, 5.1436, 17.904], [122.9319, 6.2151, 4.2983, 5.8695, 6.4746, 21.9726, 33.8413, 23.1739, 35.5391, 54.1599, 51.3, 7.4115, 10.9922, 2.3747, 4.3008, 7.7917, 2.9645, 7.5293, 5.3827, 13.3416, 19.8203, 15.43, 11.704, 15.84], [130.3974, 7.8163, 9.3641, 9.0623, 7.2594, 16.9884, 37.1974, 28.3237, 36.3202, 56.4728, 46.17, 8.9302, 8.1107, 0.0, 0.3192, 6.2942, 0.0, 8.0854, 3.1349, 18.4416, 17.8537, 16.249, 13.8908, 14.64]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

