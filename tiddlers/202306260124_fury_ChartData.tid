created: 20230626012458000
creator: Drevarr
modified: 20230705163538228
modifier: drevarr
tags: ChartData
title: 202306260124_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Orunnii", "Artakama Nahid", "Smol Daddy Tika", "Johosh The Mighty", "Miphest\u00f6", "Permanent Dawn", "My Birthday Girl", "Liyo Morgaine", "Ganbaatar Bloodwine", "Kary\u00edna", "Lord Erin The Wise", "Mistwalker Cael", "Zayde Sunsabre", "Arcanophage Farra", "Tribal S", "Arriasa", "Orunnii", "Elon The Mender", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Weaver", "Scrapper", "Herald", "Berserker", "Vindicator", "Weaver", "Vindicator", "Spellbreaker", "Spellbreaker", "Druid", "Druid", "Herald", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.9709, 240.4714], [0.0, 8.8387, 23.1084, 64.2841, 10.5179, 66.8835, 16.2288, 0.0, 10.9296, 13.7491, 31.6066, 19.109, 18.9024, 24.1884, 18.9744], [35.4816, 37.488, 7.943, 68.447, 42.8662, 5.4278, 76.2734, 83.5195], [104.811, 88.4506, 66.1598, 130.2802], [22.8238, 18.2995, 33.516, 48.608, 61.2632, 13.5313, 18.3658, 0.0, 44.447, 0.0, 15.6442, 9.227, 23.8483, 32.7571, 25.9582, 24.731], [37.4544, 4.5423, 101.5907, 38.7472, 161.3452, 20.3818, 12.096, 46.4746, 16.082, 10.1405], [0.0, 42.7939, 7.9821, 133.1859, 24.0223, 116.8851, 4.4755, 12.4992, 59.2733, 0.0, 12.2573, 14.4384, 17.1951, 11.088, 16.2239, 11.9314], [0.0, 29.8742, 82.72, 62.0726, 0.0, 0.0, 44.3731, 144.1188, 143.2406], [140.415, 10.0829, 23.0643, 177.9053, 59.0298, 287.509, 21.3494], [89.2018, 20.2176, 28.5768, 198.4422, 4.4409, 213.6665, 4.5562, 10.0296, 20.687, 21.142, 18.5674, 7.6253, 47.0282, 39.3677, 19.3844, 23.509], [119.8889, 32.3482, 36.0738, 106.8161, 13.1149, 226.6823, 28.6877, 28.2072, 20.4019, 35.882, 19.3536, 24.2069, 38.6737, 8.1312, 56.4676, 38.5277], [77.2538, 26.1014, 30.2085, 240.245, 19.4775, 252.1986, 8.8099, 20.9328, 36.432, 3.212, 26.712, 25.4702, 37.4585, 24.7526, 34.7655, 27.8184], [106.6643, 44.2973, 44.4528, 195.8902, 85.1556, 251.1676, 19.7971, 27.1488, 70.6147, 56.804, 30.4819, 23.2819, 17.0736, 23.76, 30.5094, 43.7376], [232.4762, 18.4291, 121.5396, 399.5578, 87.415, 255.2915, 54.3917, 71.2824], [43.3503, 519.8626, 2.1555, 432.23, 5.5037, 31.3656, 33.4224, 33.594, 25.5226, 16.5365, 48.5472, 69.7382, 50.3152, 35.6976], [45.2902, 60.8861, 28.4886, 305.5013, 37.6565, 423.5957, 54.2707, 28.2744, 18.2794, 12.6605, 23.3947, 42.4712, 80.5306, 137.6292, 68.8867], [400.7699, 32.5555, 210.0924, 747.8341], [261.9889, 70.5024, 85.2012, 523.0221, 29.5539, 530.5578, 65.8022, 39.3792], [80.7259, 109.2528, 134.0199, 459.9532, 138.1085, 407.6158, 41.7715, 60.3792, 126.0864, 29.084, 52.6176, 93.9173, 29.5597, 57.8477, 92.413, 42.2261]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

