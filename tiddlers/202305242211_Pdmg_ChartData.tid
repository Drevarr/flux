created: 20230524221126000
creator: Drevarr
modified: 20230705163531530
modifier: drevarr
tags: ChartData
title: 202305242211_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Brie Cheesebringer", "Tin Holo", "Brioche Bunbringer", "Newtype Khan", "Kaulina", "Grasszanine", "Morv\u00e4rth", "Grilo Gringo", "Gordon Ramsybringer", "Sire Nighthawk", "Mouschi W", "Al Darasum", "Nocta Asthariel", "Ria Zerria", "Smol Gluvs", "Pepper Cornbringer", "Morv\u00e4rth", "Panther B Me", "Demon Maddx", "No Reserv\u00e9", "Legacy Of Mathus", "Cinder Flamebringer", "Plum Crazybringer", "Kary\u00edna", "Bee Honeybringer", "Tootsie Pop Bringer", "Duke Silvver", "Cael Saladbringer", "Sizzln Sisigbringer", "Xanvias Einzbern", "Hauzzy"];
const professions = ["Dragonhunter", "Scrapper", "Chronomancer", "Spellbreaker", "Weaver", "Spellbreaker", "Scourge", "Dragonhunter", "Herald", "Vindicator", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scrapper", "Reaper", "Scourge", "Scourge", "Vindicator", "Berserker", "Weaver", "Scrapper", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[224.3504, 115.4348, 304.4706, 352.1833, 170.9578], [222.4074, 208.3478, 242.5294, 292.65, 148.4392, 51.058, 82.8025], [192.2165, 92.913, 80.3235, 193.3167, 85.1836, 33.3732, 151.3704, 28.4, 77.0047, 28.6486, 40.8667, 100.2363], [267.3789, 64.0882, 287.2083, 123.335, 31.4783, 40.6667, 87.0167, 31.6028, 26.4955, 0.0, 92.7894], [324.1739, 1471.0588, 891.25, 251.4839], [334.9003, 254.7826, 127.0294, 259.0083, 167.1563, 71.192, 230.679, 99.1333], [36.9638, 159.6667, 515.6905], [481.7, 234.8213, 81.3877, 124.8889, 218.257, 25.0225, 0.0, 221.9029], [640.1595, 349.9565, 0.0, 531.5583, 185.5633], [90.0507, 162.7531, 31.3167, 134.1215, 74.7613, 45.6417, 547.5897], [280.9058, 399.5309, 328.6333, 394.5421, 164.545, 193.5833, 223.5018], [36.1558, 277.679, 67.1, 258.2897, 114.6847, 162.1417, 479.7912], [345.094, 116.8261, 348.4706, 410.6833, 186.5583, 25.3442, 164.358, 33.8738, 34.4595, 26.3583, 249.1795], [400.0399, 416.087, 16.7353, 318.1167, 60.933, 34.2391, 96.9877, 244.8972, 88.7387, 15.075, 338.9725], [352.6553, 60.3478, 105.0882, 441.6667, 236.7891, 34.8913, 115.037, 234.8833, 105.2804, 45.8919, 0.0, 298.6813], [966.5755, 0.0, 0.0, 658.1, 257.8511], [824.1595, 270.9565, 555.6471, 939.2333, 239.3077, 80.9167, 702.6963, 191.3333, 0.0], [556.0912, 840.8261, 126.0882, 816.95, 245.9429, 39.4565, 0.0, 100.15, 592.6449, 101.7748, 38.7, 320.1044], [630.2251, 515.6087, 344.6176, 900.3917, 265.804, 70.8804, 294.2346, 24.9667, 307.9346, 116.6486, 0.0, 326.4615], [761.1595, 728.8696, 147.7941, 827.6083, 423.4293, 117.4203, 247.1975, 313.1333, 224.3832, 104.6081, 0.0, 444.8059], [956.0285, 391.6957, 532.5882, 798.075, 671.7742, 94.3442, 66.0988, 0.0, 181.4159, 100.2703, 271.925, 271.0256], [714.0741, 132.5294, 905.225, 460.4988, 153.5, 50.3827, 75.55, 508.9673, 290.5495, 67.2417, 450.0934], [688.1966, 495.8261, 412.7941, 1143.1083, 354.2978, 88.058, 266.0, 89.6833, 352.2056, 226.1892, 66.4083, 648.8571], [671.8604, 437.6087, 630.2353, 855.4667, 480.7593, 195.4203, 206.1358, 193.8333, 275.2336, 222.1486, 235.4417, 590.2454], [856.6952, 1364.8417, 556.9578, 146.5652, 358.2963, 108.8, 44.545, 224.5333, 694.5366], [921.0313, 145.0435, 457.6176, 1418.225, 624.2457, 215.6558, 0.0, 234.8167, 433.1075, 121.9099, 81.7167, 476.6923], [1215.0912, 1656.913, 442.6176, 1533.5667, 528.0347, 183.3442, 599.0494, 236.1333, 363.1636, 94.4189, 41.3, 556.881], [1213.359, 411.0, 0.0, 1553.4583, 723.129, 163.2572, 412.1975, 329.0167, 813.4813, 135.9775, 168.9083, 749.9377], [35.5413, 0.0, 629.5294, 1102.575, 1036.5856, 187.2971, 479.5185, 730.7056, 669.6802, 698.125, 1067.2527], [1971.7066, 504.7826, 379.2941, 1957.55, 1035.3548, 168.6449, 135.5679, 116.35, 897.0327, 413.2207, 442.2583, 26.1758], [1441.9316, 941.7391, 704.7647, 1350.5917, 743.4069, 162.9928, 796.2346, 109.2, 787.1495, 168.5856, 264.0417, 838.0055]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

