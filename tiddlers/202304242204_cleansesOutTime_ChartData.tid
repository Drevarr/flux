created: 20230424220408000
creator: Drevarr
modified: 20230705163526518
modifier: drevarr
tags: ChartData
title: 202304242204_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Johosh The Great", "Tika Rucola", "High Sorcer Baradun", "Sassy Daddy Demon", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar", "Cat Wigglebooty", "Fribble Bibble", "Tegan Parker", "Mac Aaroni", "Tribal S", "Drevarr Moonwillow", "Zadie Miststep", "Arriasa"];
const professions = ["Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Tempest", "Tempest", "Druid", "Scrapper", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3430768.32, 0.0, 16285.5, 30341.6, 20213.76, 0.0, 0.0, 11796.48, 22152.0, 33075.0, 35632.8, 47610.46, 157980.0], [4115691.3, 1225.0, 10174.56, 65055.96, 12257.28, 0.0, 1586.88, 23685.12, 27468.48, 46856.25, 3924.9, 19090.0, 106200.0], [3433845.03, 4949.0, 2016.3, 26013.46, 16531.2, 0.0, 4816.32, 47677.44, 53880.48, 86252.25, 23769.9, 99268.0, 45120.0], [1036141.26, 6149.5, 85615.2, 187984.06, 75022.08, 1976.35, 0.0, 149207.04, 107011.2, 154791.0, 75278.7, 175551.64, 374700.0], [8353504.32, 1225.0, 33315.48, 139660.6, 83220.48, 0.0, 1586.88, 98457.6, 36329.28, 132447.0, 75278.7], [7102703.37, 0.0, 47336.52, 118867.68, 49620.48, 1185.81, 0.0, 98918.4, 83325.6, 169821.75, 200214.0, 99993.42, 45120.0], [7209204.87, 0.0, 95882.82, 147781.44, 92494.08, 0.0, 0.0, 118640.64, 2385.6, 86105.25, 63415.8, 117708.94, 301500.0], [7550246.34, 0.0, 59558.4, 169645.24, 59942.4, 0.0, 6431.04, 45926.4, 29036.16, 114439.5, 119158.2, 186547.48, 257820.0], [9514370.67, 1225.0, 71501.1, 209089.32, 96633.6, 0.0, 12889.92, 105338.88, 53880.48, 137187.75, 88244.1, 48603.14, 0.0], [18406299.24, 0.0, 41287.62, 196194.14, 76177.92, 0.0, 0.0, 112220.16, 78724.8, 77358.75, 236067.3, 163792.2, 483360.0], [19371676.17, 1225.0, 55184.58, 337996.5, 125986.56, 0.0, 0.0, 137195.52, 38612.64, 211533.0, 279197.1, 215220.66, 572760.0], [20886837.51, 21903.0, 124204.08, 323182.66, 127680.0, 395.27, 16091.52, 157040.64, 73578.72, 218037.75, 245945.7, 235570.6, 570180.0], [21953035.86, 1225.0, 102303.96, 371238.4, 168698.88, 0.0, 4816.32, 233625.6, 55448.16, 286319.25, 182882.7, 401806.32, 682860.0], [22696889.67, 33246.5, 96037.92, 355889.12, 134238.72, 8341.56, 30596.16, 151511.04, 113656.8, 232811.25, 226894.5, 353241.36, 849000.0], [23897279.91, 1225.0, 113533.2, 327376.94, 157382.4, 1581.08, 3201.6, 195133.44, 119791.2, 263938.5, 251590.5, 309525.26, 804840.0], [24931764.48, 1225.0, 109159.38, 348839.16, 111363.84, 0.0, 6431.04, 140451.84, 109908.0, 336446.25, 327530.7, 334189.54, 902760.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

