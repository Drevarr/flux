created: 20230527220043000
creator: Drevarr
modified: 20230705163532108
modifier: drevarr
tags: ChartData
title: 202305272200_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Daddy Demon", "Tootsie Pop Rocks", "Newtype Khan", "Venomina The Fierce", "Johosh Of The North", "Zadey Starbolt", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.228, 0.591, 0.703, 0.633, 0.994, 0.534, 0.634, 0.663, 0, 0.899, 0.488, 0, 1.218, 0.474, 0.534], [0.714, 1.057, 1.331, 1.031, 0.969, 0.636, 0.666, 0, 0.899, 0.92, 1.593, 1.041], [0.978, 0, 0.775, 0.418, 0.495, 0.292, 0.782, 0.373, 0.663, 1.299, 0, 0.517, 0.857, 0.431, 0.614, 0.153, 0.3, 0.083, 0, 0.45, 1.112, 0, 0.694, 0, 0.424], [0.859, 0, 0, 1.651, 0, 0, 1.24, 0.841, 1.636, 0.285, 0.329, 1.049, 1.421, 1.277, 0.814, 0.531, 0.277, 0, 0.749, 2.044, 0, 1.303, 0.659, 0], [0, 0, 1.017, 1.62, 0.095, 0.551, 1.231, 0.984, 1.11, 0.679, 1.06, 0.901, 0, 1.47, 2.481, 0, 1.267, 0.664, 0.674], [1.032, 0, 0.699, 0, 1.899, 0.467, 1.361, 1.491, 1.243, 2.158, 0.912, 0.85, 1.292, 0.571, 1.824, 1.032, 1.507, 1.876, 0, 2.02, 1.242, 2.017, 0.474, 0.803], [1.732, 0.426, 2.179, 1.113, 2.593, 0.702, 1.221, 2.609, 1.682, 2.082, 1.231, 1.261, 2.449, 0.484, 1.175, 1.569, 2.628, 1.241, 2.415, 2.016, 3.692, 1.196, 2.648, 2.496, 1.737], [3.285, 2.693, 1.396, 2.225, 0.99, 0.409, 1.735, 1.491, 1.904, 2.902, 1.13, 1.868, 2.347, 2.216, 2.406, 1.776, 2.58, 2.619, 2.664, 2.24, 2.455, 0, 2.735, 2.875, 1.607]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

