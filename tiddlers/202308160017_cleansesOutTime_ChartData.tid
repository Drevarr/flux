created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Chocolate Teapot", "Strongg Mom", "Pafema", "Kosa\u00efr", "Rockdevil", "Mmathuss", "Gamora Titus", "N\u00e8yp\u00e4", "Sakis Unleashed", "P\u00edogre", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Renegade", "Druid", "Weaver", "Weaver", "Willbender", "Firebrand", "Firebrand", "Druid", "Scrapper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.1481, 20.3514, 0.0, 11.9836, 14.04, 0.0, 0.0, 0.0, 0.0, 0.0, 15.8909, 4.9565, 0.0, 6.4348, 0.0, 0.0, 0.0, 0.0, 0.0, 14.0385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0306, 7.2759, 16.5639, 0.0, 17.3163, 0.0, 0.0, 0.0, 24.5841, 0.0, 0.0, 0.0, 26.1566, 15.0638], [0.0, 7.0047, 0.0, 7.9769, 0.0, 0.0, 3.0196, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9901, 23.0091], [1.0, 1.0, 21.1765, 0.9744, 75.7273, 3.9565, 9.8333, 33.3696, 10.7812, 0.0, 43.5161, 15.0543, 39.1042, 64.1731, 45.3684, 12.0526, 7.9434, 8.2, 6.0698], [0.0, 1.0, 10.1739, 0.0, 5.0213, 6.0, 0.0, 0.0, 0.0, 1.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.1, 0.0, 0.0, 0.0, 0.0, 0.0, 1.96, 34.237, 14.6, 14.2948, 0.987, 0.0, 0.0, 10.0353, 1.0, 2.2273, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.5522, 0.0, 0.0, 7.2045, 0.0, 0.0, 0.0, 0.0, 9.9732, 0.0, 0.0], [0.9867, 19.9732, 26.2674, 0.0, 0.0, 0.0, 0.0, 0.0, 28.8505], [0.0, 19.1494, 20.5422, 28.117, 23.7027, 16.4091, 29.7538, 0.0, 10.88, 46.1991, 18.9538], [0.0, 11.0118, 0.0, 1.9942, 0.987, 0.0, 0.0, 0.0, 1.0, 0.0, 18.0658, 20.0, 20.5143, 0.0, 0.0, 0.0, 36.2105, 0.0, 19.9091, 31.766, 0.0, 0.0, 0.0, 40.2432, 0.0, 21.9067, 22.9933, 16.0116, 0.0, 2.0, 0.0, 0.9901, 17.0831], [13.3333, 0.9909, 9.1639, 40.16, 10.6, 7.008, 0.0, 15.1765, 0.9744, 17.7455, 5.9565, 0.0, 6.6739, 4.0312, 0.9643, 29.4516, 1.9922, 0.0, 23.8654, 20.4912, 7.0526, 0.0, 5.0, 0.0, 12.9634, 0.0, 48.4898, 12.1034, 31.2481, 0.0, 26.7347, 0.0, 5.9778, 37.234, 8.0088, 2.9867, 12.9885, 0.0, 35.8434, 36.7234, 19.9865], [0.0, 34.1034, 101.7744, 31.6122, 31.913, 5.9778, 55.4894, 91.8761, 27.7867, 63.0, 72.2169, 41.9681, 46.2703, 0.0, 0.0, 14.6486, 0.0, 18.24, 0.0], [28.6, 6.9565, 0.0, 8.1087, 0.0, 0.0, 10.1613, 1.9922, 13.9375, 20.8269, 0.0, 7.9825, 14.0702, 0.0, 0.0, 0.0, 7.9756, 28.6735, 5.7931, 15.0226, 0.0, 5.0204, 1.9783, 0.0, 18.4468, 36.4071, 0.9867, 20.0, 0.0, 14.1566, 33.8723, 13.9189, 0.0, 0.0, 6.0, 0.0, 13.06, 0.0, 23.9091, 8.4308, 18.7143, 13.2414, 0.96, 35.9028, 17.975, 34.4451, 0.0, 16.4, 12.1373, 16.7412, 4.0, 2.0, 0.0, 24.4211, 14.5333, 0.0, 13.0143, 15.0909, 0.0, 10.0, 15.0526, 0.0, 20.6818, 15.1277, 0.0, 0.0, 14.8667, 50.2838, 0.0, 31.12, 22.1409, 17.0233, 0.0, 1.0, 6.0, 0.0, 43.1526], [35.0988, 64.8649, 25.2, 64.4918, 72.3467, 21.36, 0.0, 33.8235, 10.8718, 84.1818, 9.0, 28.1522, 6.2812, 9.8214, 63.0, 4.9922, 49.7292, 112.1154, 43.0, 50.5614, 0.9811, 9.0182, 10.0465, 17.0427, 2.0, 85.3103, 107.609, 0.0, 64.5102, 8.9348, 10.9778, 119.2766, 99.9115, 35.0667, 90.7241, 5.9773, 83.6265, 78.7872, 0.0], [12.0864, 24.2252, 0.0, 15.4918, 22.2, 6.96, 1.0, 0.0, 5.0, 5.1882, 2.9744, 16.8909, 0.0, 1.9667, 14.5217, 3.0312, 0.0, 11.2581, 14.0698, 38.1875, 78.7308, 28.4848, 51.2982, 36.2982, 20.7736, 12.0727, 12.0698, 48.6159, 5.0526, 83.6224, 46.0, 94.4737, 10.4348, 69.3878, 17.4348, 25.9556, 66.8085, 87.4336, 29.9333, 68.0575, 7.9773, 64.6024, 76.883, 53.9595, 2.16, 5.0, 15.2432, 3.0303, 41.88, 6.0, 24.2273, 56.2615, 36.2571, 35.5172, 44.04, 121.3815, 37.725, 115.474, 29.8701, 73.3684, 33.5098, 45.5529, 15.6571, 28.2727, 7.0435, 78.7763, 49.8, 0.0, 31.5714, 39.7273, 8.913, 52.2687, 71.6579, 44.7273, 50.0213, 53.2, 58.0, 5.4054, 58.7733, 78.1141, 66.7907, 18.2703, 19.125, 35.9362, 5.25, 13.5545, 113.5332]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

