created: 20230701000406000
creator: Drevarr
modified: 20230705163540091
modifier: drevarr
tags: ChartData
title: 202307010004_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Audra Storm", "Smol Daddy Tika", "Lord Erin The Wise", "Duke Silvver", "Pale Pam", "Ima Lou", "Sister Elonith", "Vhalloe", "Oo Dads Mad", "Lucky Leipreach\u00e1n", "Broken Cheese", "Kary\u00edna", "Demon Staph", "Drumina", "Melli Dragonswrath", "K\u00f4sair", "Sakis Ranger", "Blancooo Padreee", "Zefirokai", "Mike The Archmagus", "Primal Clone", "Ak\u00e1nt\u00f3r", "Johosh The Mighty", "Arriasa", "Arcanophage Farra", "Klengah", "Newtype Khan", "Xanvias Einzbern", "Tribal S", "Zayde Sunsabre", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Weaver", "Berserker", "Weaver", "Vindicator", "Druid", "Druid", "Berserker", "Druid", "Spellbreaker", "Scrapper", "Chronomancer", "Vindicator", "Druid", "Druid", "Berserker", "Berserker", "Druid", "Berserker", "Catalyst", "Weaver", "Chronomancer", "Druid", "Berserker", "Druid", "Spellbreaker", "Druid", "Spellbreaker", "Berserker", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.3647, 11.5827, 10.9699, 27.4637, 46.7857, 16.44, 21.0888, 37.165, 16.9785, 28.7395, 73.5387, 30.9465, 17.1562, 27.6948, 36.1571, 53.533, 20.257, 14.7655], [0.0, 72.2813, 199.2557, 256.7444], [0.0, 26.4326, 30.6893, 0.0, 0.0, 139.1376, 67.7678, 0.0, 52.3138, 96.2669, 0.0, 70.0543, 0.0, 22.3391, 36.989, 31.255, 0.0, 0.0, 0.0, 45.0403, 186.0309], [32.0244, 36.1242, 40.3603, 69.9955, 62.1359, 33.384, 39.2688, 42.0638, 32.3155, 7.295, 13.3309, 57.7875, 39.963, 24.9077, 51.6333, 32.571, 31.208, 5.8318, 14.8512, 26.0469, 117.936], [39.3926, 21.8179, 22.464, 26.5882, 45.7912, 26.016, 62.2483, 29.5445, 32.8545, 0.0, 49.6086, 37.9845, 42.4138, 27.1303, 43.1122, 13.16, 21.808, 25.5605, 0.0, 173.6467, 125.9788], [61.5832, 118.4071, 98.1677, 55.4342, 72.8162, 60.84, 120.4243, 43.9992, 54.537, 60.7838, 148.6072], [56.7953, 53.2115, 85.6627, 57.3235, 86.48, 52.944, 66.0782, 82.3133, 49.0, 65.3126, 227.7187, 84.87], [16.4758, 72.959, 42.911, 67.351, 46.561, 43.3843, 70.1856, 195.0998, 483.2452], [85.8862, 51.9225, 3.5402, 42.5124, 94.1466, 0.0, 45.919, 14.3312, 7.1904, 68.3465, 239.9155, 465.6212], [106.2797, 42.6036, 78.5491, 137.5488, 134.044, 80.736, 180.0062, 107.1706, 92.8795, 97.0387, 56.9297, 64.446, 38.7716], [42.3743, 9.7191, 43.5053, 40.5965, 62.525, 12.768, 43.0502, 32.1754, 33.9815, 35.2512, 67.2011, 40.1925, 55.6894, 33.5866, 49.3763, 76.281, 31.208, 17.061, 29.5113, 144.7805, 325.4997], [36.5542, 18.3201, 71.5853, 94.7405, 91.2796, 64.704, 36.8933, 42.5477, 45.815, 37.0138, 229.6855, 29.2471, 29.5705, 58.891, 44.744, 54.6572, 0.0, 86.4809, 272.376, 0.0], [30.2182, 5.2179, 34.6694, 27.5558, 53.1852, 38.16, 53.9582, 47.0534, 17.934, 33.0725, 150.2463, 28.773, 28.3213, 35.3153, 37.8613, 27.824, 31.725, 27.887, 10.6579, 45.0796, 172.9728, 440.8171], [7.8556, 15.3385, 105.5059, 102.8045, 83.7991, 45.072, 103.6987, 64.5624, 39.3715, 34.2965, 278.3107, 67.137, 88.1976, 84.2134, 51.3108, 103.024, 77.597, 48.8565], [231.2153, 87.1125, 57.7659, 99.6307, 94.2848, 59.925, 97.572, 103.6999, 61.0328, 287.9885, 322.0184], [19.3523, 35.3214, 20.8166, 40.919, 51.888, 48.456, 108.3528, 77.0818, 41.8215, 36.4752, 215.0434, 3.7605, 57.2893, 78.5333, 164.8487, 21.338, 0.0, 58.7829, 45.4944, 6.7149, 86.3741, 330.9392], [28.6895, 41.7139, 217.7751, 138.966, 115.8381, 115.3303, 82.8159, 88.219, 162.949, 31.1751, 27.5251, 58.5521, 194.2013, 389.6858], [53.0108, 20.0977, 18.7574, 79.7184, 49.2071, 18.552, 82.8038, 42.0941, 66.787, 13.9291, 166.1997, 33.4995, 33.0528, 44.2764, 53.8441, 27.213, 24.346, 34.0289, 37.1347, 72.3241, 244.0714, 509.3548], [69.9261, 10.0918, 75.9283, 73.3594, 133.0495, 74.544, 77.665, 40.0378, 9.702, 15.0307, 103.4787, 23.2875, 75.5688, 72.6768, 134.0807, 105.515, 71.393, 54.5642, 52.5773, 29.6824, 162.9763, 310.4867], [67.8332, 51.348, 51.3677, 4.608, 100.1006, 88.272, 114.4128, 145.787, 115.9095, 16.573, 250.3376, 62.031, 80.9131, 60.611, 45.9679, 89.629, 67.774, 108.1978, 53.5853, 103.8028, 279.7891], [51.9214, 66.3997, 90.4925, 178.007, 149.5672, 98.496, 170.795, 99.2779, 83.986, 87.7608, 243.1258, 117.024, 81.3556, 105.8753, 110.6361, 141.799, 104.387, 85.243], [71.675, 26.4051, 51.7046, 60.457, 110.7376, 51.528, 59.8728, 92.232, 33.4915, 49.1069, 188.0537, 64.998, 93.1675, 44.1, 72.0839, 79.9, 98.7, 42.1562, 31.1002, 65.4809, 281.6986, 478.0233], [50.5452, 58.3434, 51.5549, 51.4253, 52.1042, 41.784, 117.4186, 71.7898, 58.0895, 42.5707, 291.3138, 88.251, 48.7112, 44.4881, 88.251, 122.811, 51.183, 42.3733, 21.7325, 89.5604, 279.9014, 506.3087], [35.2354, 100.5457, 73.008, 68.1062, 152.4642, 66.072, 71.8958, 20.1398, 100.8665, 28.4947, 218.9771, 93.909, 120.2974, 6.5268, 113.63, 82.438, 29.281, 52.9201, 0.0, 108.037, 288.1008, 544.3852], [11.6114, 30.9349, 28.8288, 30.0902, 62.0926, 18.576, 58.6608, 42.8803, 14.259, 28.5682, 230.1226, 35.121, 76.3858, 73.841, 97.463, 75.999, 103.4, 73.8896, 34.9171, 126.2143, 420.863, 737.3786], [86.6694, 62.5866, 157.1731, 103.3114, 68.2327, 61.584, 160.9536, 46.6906, 36.2355, 49.7678, 26.0063, 91.563, 113.4553, 224.5925, 78.9929, 104.434, 164.97, 106.7398, 223.3022, 249.3504, 224.5426], [68.9514, 47.3055, 53.0525, 105.6154, 109.8296, 81.672, 151.597, 118.0267, 81.585, 41.4936, 353.8163, 57.4425, 121.6249, 32.6693, 67.1555, 97.948, 66.599, 16.5647, 20.0122, 79.039, 316.967, 421.8876], [51.0039, 27.9533, 98.3174, 76.4006, 140.1408, 83.904, 132.5443, 60.0566, 58.1385, 34.7371, 292.4065, 83.835, 50.209, 67.4201, 33.4856, 93.295, 106.032, 45.5374, 43.559, 94.7783, 334.489, 584.6375], [79.3586, 70.3562, 59.3424, 143.7696, 59.1956, 48.384, 57.5942, 29.0002, 32.1685, 50.4288, 324.3134, 128.9955, 137.7939, 52.7436, 91.6133, 95.927, 122.294, 109.6867, 13.8566, 125.5727, 256.6512, 541.1215], [46.4167, 51.9787, 49.3459, 58.153, 139.8814, 42.0, 104.6683, 54.1901, 62.524, 23.5987, 351.0845, 81.1785, 97.4906, 13.1242, 39.0589, 111.249, 69.701, 66.4759, 21.5309, 67.7477, 425.9174, 804.6108], [81.5375, 85.7233, 94.199, 22.0262, 85.5287, 42.96, 113.2008, 73.6344, 78.939, 68.9357, 464.0697, 94.185, 110.2215, 113.3546, 149.695, 155.476, 98.371, 64.1804, 44.7821, 159.2327, 343.0253, 791.556], [96.1018, 50.1438, 213.6701, 161.0957, 112.5105, 49.536, 186.648, 121.9277, 94.178, 92.2651, 623.6039, 138.1725, 169.4171, 169.4498, 164.7566, 148.332, 159.048, 103.4207, 6.5856, 209.8296, 653.5901, 1045.4719]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

