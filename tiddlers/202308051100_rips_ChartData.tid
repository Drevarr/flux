created: 20230805110022000
creator: Drevarr
tags: ChartData
title: 202308051100_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Forever Dreaming", "Heals For Daddy", "Fyshles", "Vee Usagi", "Aronorf Xideliesi", "Aezlenne", "Scythe Of Soulz", "Alarics Bane", "Elorakill", "Elonith Requiem"];
const professions = ["Scourge", "Druid", "Druid", "Scourge", "Firebrand", "Virtuoso", "Reaper", "Reaper", "Spellbreaker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.01, 0.0, 0.0, 0.0188, 0.1044, 0.0804, 0.0087, 0.0073, 0.0, 0.0675, 0.0548, 0.0448, 0.2222], [0.0568, 0.1489, 0.0725, 0.0102, 0.0, 0.0465, 0.0, 0.0717, 0.087, 0.0694, 0.0, 0.0476], [0.0141, 0.1593, 0.1156, 0.0196, 0.1217, 0.0584, 0.075, 0.0368, 0.0548, 0.0597], [0.1826, 0.1168, 0.2, 0.2699, 0.0685, 0.0149, 0.4815], [0.0455, 0.1702, 0.0338, 0.0, 0.0, 0.0814, 0.0458, 0.038, 0.1957, 0.0833, 0.0, 0.0, 0.0529, 0.0455, 0.0436, 0.062, 0.03, 0.0182, 0.032, 0.0751, 0.1593, 0.0503, 0.0588, 0.087, 0.073, 0.075, 0.092, 0.0137, 0.1642, 0.0741], [0.0242, 0.0, 0.0, 0.0, 0.1983, 0.1304, 0.0139, 0.0, 0.0, 0.037, 0.0726, 0.1705, 0.0, 0.0, 0.192, 0.1221, 0.4121, 0.1256, 0.0, 0.0522, 0.0438, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0102, 0.4048, 0.0, 0.0523, 0.4051, 0.0652, 0.0, 0.0, 0.2751, 0.1818, 0.138, 0.3488, 0.0, 0.0727, 0.0, 0.0151, 0.0588, 0.1304], [0.3791, 0.4768, 0.2609, 0.4167, 0.48, 0.0, 0.2593, 0.9545, 0.1864, 0.7597, 0.15, 0.0364, 0.192, 0.3005, 0.5879, 0.3668, 0.8087, 0.2482, 0.325, 0.4601], [0.3295, 0.3404, 0.0145, 0.0, 0.0, 0.5817, 0.5527, 0.4565, 0.0, 0.0, 0.0, 0.1481, 0.1364, 0.77, 0.21, 0.0, 0.352, 0.4507, 0.4176, 0.3266, 0.1304, 0.073, 0.125, 0.0736, 0.0411, 0.2687], [0.2841, 0.9787, 0.5169, 0.051, 0.3929, 0.4302, 0.3595, 0.5359, 0.3913, 0.0556, 0.34, 0.0, 0.455, 0.8636, 0.3729, 0.3411, 0.51, 0.0364, 0.432, 0.7043, 0.2847, 0.2086, 0.4521, 0.6716, 1.3704]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

