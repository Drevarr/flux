created: 20230130220929000
creator: Drevarr
modified: 20230705163518392
modifier: drevarr
tags: ChartData
title: 202301302209_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Demon Sekhmet", "Jeckyll Mbs", "Dark Sidiuz", "Newtype Khan", "Xanvias Einzbern", "Whose Guardian", "\u00c2 R K", "Mistwalker Caelon", "Doctor House", "Sygaldry Verdandi", "Blancoopadree", "Ryvalia Fazebringer", "Zaylen Harker", "Veron Blackburn", "Gavann", "Xyntharos", "Ravioli Fetabringer", "Bella Lunabringer", "Arkitrix", "Koralia Danai"];
const professions = ["Druid", "Berserker", "Berserker", "Reaper", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Herald", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.7773, 12.1275, 1.8522, 0.0, 0.8114, 0.8599, 2.3923, 3.0478, 1.1592, 1.6229, 0.0, 1.428, 1.6157, 0.9821, 0.0, 0.6951, 0.0, 0.5132, 0.2829, 0.0, 0.0, 0.0, 0.7331], [12.152, 9.9225, 2.8709, 0.0, 0.541, 0.9874, 2.905, 4.5717, 0.0, 0.8114, 0.8042, 1.848, 1.7626, 0.6696, 0.0, 0.9814, 0.0, 0.908, 0.0, 0.0, 1.0034, 0.8237, 0.0], [12.152, 10.4737, 0.0, 0.0, 2.0737, 1.1466, 2.2214, 3.505, 4.0186, 0.0, 0.9983, 2.772, 1.836, 0.9821, 0.7216, 0.9814, 0.7708, 0.987, 0.8286, 0.0, 0.0165, 0.2434, 0.9997], [0.0, 56.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [16.0406, 11.025, 4.6305, 0.0, 2.9302, 1.911, 2.9904, 5.9432, 2.3184, 1.9835, 1.6915, 3.024, 3.5986, 1.741, 0.0, 1.84, 1.6732, 0.8291, 0.0, 0.0, 1.2337, 0.7488, 1.5996], [13.1242, 15.9863, 4.8157, 0.0, 2.254, 0.9874, 1.8797, 6.8575, 3.1685, 1.8032, 0.9983, 2.856, 3.011, 2.4552, 0.0, 0.9814, 1.4664, 1.2239, 0.4042, 0.9996, 1.0034, 0.2995, 1.533], [2.6754, 6.0662, 12.3436, 5.1005, 4.3277, 0.2218, 7.392, 11.1629, 4.7318, 5.1775, 2.1672, 1.786, 4.1059, 1.9604, 2.5084, 1.4476, 2.7706, 2.0661], [31.5952, 3.8588, 11.5762, 0.0, 4.508, 2.6435, 6.8352, 12.0388, 6.5688, 2.7048, 0.0], [29.6509, 20.3963, 7.3162, 0.0, 4.1023, 1.1148, 4.7846, 11.734, 3.5549, 2.1638, 0.0, 5.46, 5.2142, 3.1694, 1.6958, 0.0, 1.5228, 0.3948, 0.0404, 0.2452, 0.5758, 0.7114, 0.5998], [54.441, 63.3937], [14.8176, 4.1474, 4.8412, 8.3731, 18.8964, 15.5333, 4.8686, 1.1092, 7.224, 7.7846, 6.1157, 4.5641, 3.5983, 4.2488, 6.3563, 0.2223, 0.9996, 2.632, 3.1824, 5.532], [15.0685, 53.4713, 6.7605, 1.855, 3.8318, 0.5096, 5.1264, 15.6962, 8.1917, 4.2375, 0.0, 0.0, 3.7454, 1.9195, 0.1082, 2.985, 4.7752, 2.2504, 1.2732, 1.3391, 0.0, 0.131, 0.0667], [26.7344, 23.1525, 8.6127, 0.0, 4.5531, 4.2042, 6.5789, 10.2101, 8.3462, 4.508, 3.6326, 7.392, 6.4627, 4.5086, 1.5154, 1.5538, 1.9364, 2.0135, 1.1318, 1.5842, 2.2372, 1.4602, 1.5996], [32.5674, 8.82, 11.7615, 0.0, 4.8686, 4.8094, 8.8858, 16.7629, 7.2643, 4.3277, 3.1889, 12.348, 7.344, 6.3389, 0.0, 4.1708, 3.008, 4.6586, 2.122, 2.7536, 2.484, 2.808, 2.866], [34.5117, 83.2387, 8.1497, 0.0, 2.795, 3.1213, 9.8256, 13.7151, 8.8872, 1.5327, 0.0, 11.004], [39.8586, 62.2912, 7.8719, 3.5162, 4.7775, 9.1421, 7.6195, 5.1005, 4.9588, 2.9948, 5.796, 9.4003, 5.9818, 2.237, 4.5388, 1.316, 4.2638, 1.7987, 1.3013, 1.464, 0.7488, 4.0656], [43.7472, 84.3413, 8.4275, 0.8184, 6.0407, 0.9555, 12.3888, 23.4681, 7.6507, 6.6718, 2.7453, 5.88, 9.3269, 2.9462, 0.8118, 1.7992, 0.2632, 0.5132, 0.6265, 0.9619, 0.6251, 0.5054], [73.3981, 60.6375, 11.8541, 2.1824, 4.5982, 6.4974, 10.0819, 23.0109, 14.6832, 6.0407, 4.3259, 11.424, 11.8238, 8.2138, 0.0, 3.1894, 3.3088, 5.4088, 2.9102, 2.1123, 1.2666, 3.7066, 3.3991], [76.8006, 68.9062, 15.0954, 0.2455, 5.2744, 5.7012, 11.6198, 23.3157, 14.5286, 4.6883, 2.9671, 12.6, 11.3832, 7.0085, 2.0385, 3.4756, 2.068, 6.988, 1.4955, 2.3764, 1.7272, 3.0514, 2.9326], [72.912, 87.0975, 12.6876, 0.0, 6.8972, 7.0707, 8.6294, 20.1155, 11.6693, 5.4096, 2.1352, 14.028, 11.9707, 9.7315, 4.3752, 4.7376, 6.6721, 1.3541, 1.622, 3.3064, 0.599, 4.3989], [85.064, 106.9425, 22.0412, 2.1824, 9.016, 7.5166, 10.5946, 21.7918, 10.3555, 8.6554, 4.52, 15.456, 12.5582, 11.3386, 7.3193, 4.8504, 5.3298, 3.4155, 4.451, 2.632, 3.6504, 5.9318]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

