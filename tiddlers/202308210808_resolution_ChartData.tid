created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Crabbedmermaid", "Gumaass", "Hawaiian Supreme", "Minnie Darley", "Kosair", "Amiti\u00e9l", "Sapir Yong", "Crabbedmermaid", "Darks Na", "Gestern Yesteryear"];
const professions = ["Dragonhunter", "Dragonhunter", "Spellbreaker", "Dragonhunter", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.1602, 15.2463, 2.3897, 7.1341, 22.2401, 67.6704, 94.7916], [0.0, 85.6152, 35.4144, 0.0, 10.0496, 0.0, 0.0, 32.619, 0.0, 45.136, 2.5056, 104.279], [59.7564, 45.7099, 92.877, 32.8496, 57.7472, 23.8163, 143.9443], [0.0, 27.9976, 0.0, 14.819, 165.4344, 24.5942, 51.6582, 0.0, 4.7822, 7.784, 32.8431, 32.8832, 18.9056, 32.9382, 57.816], [0.9475, 62.9896, 117.6434, 46.6235, 26.3098, 161.653, 358.5072, 138.958], [14.3435, 0.0, 25.1624, 60.0653, 178.8432, 180.6052, 0.0, 12.4853, 91.4457, 19.5576, 18.3605, 12.8707, 50.7646, 111.606, 72.5523, 0.0, 0.0, 267.3612, 50.0534, 68.0526], [35.9237, 194.889, 24.508, 115.6675, 63.99, 820.1616, 91.4952, 42.9997, 17.985, 70.1275, 53.669, 89.7534, 0.0, 107.9481, 336.1974, 422.7359, 27.4292], [70.5048, 49.8227, 132.4329, 0.0, 53.1454, 66.8666, 0.0, 172.8227, 269.0666, 301.5076, 0.0, 0.0, 0.0, 453.33, 253.3843, 207.0288, 18.7229, 63.3614, 314.8356, 58.3072, 167.7424, 126.3762, 343.8125], [30.7373, 84.1824, 576.2016, 344.4336, 46.3797, 60.088, 134.9899, 0.0, 47.8737, 89.6227, 5.5202, 165.4643, 264.803, 484.7003, 0.0, 19.4704, 0.0, 608.58, 268.9046, 143.2728], [35.7571, 27.4284, 202.7549, 58.8445, 28.4341, 93.1979, 472.9632, 121.3504, 69.8828, 62.16, 165.9458, 19.4922, 63.3853, 114.5767, 19.4242, 162.3331, 349.1136, 410.0873, 0.0, 19.1991, 58.4422, 550.2888, 75.8227, 104.6034, 0.0, 49.3582, 0.0, 359.6307, 19.4208, 191.688, 46.6538, 350.9256]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

