created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Gamora Titus", "Dizzy Bunnyhopper", "Lord Erin The Wise", "Aira Draugr", "Bee Nemesis", "Shaca Booey", "Zefirokai", "Cat Wigglebooty", "Oo Dads Mad", "Sia Roku", "Tootsy Pop Star", "Tribal S", "Mmathuss", "Rina Of Theros", "Daphne Agla\u00e9", "Be\u00eb", "Klengah", "Koralia Danai", "Bella Sassy", "Legacy Of Mathus", "Miphest\u00f6", "Primal Clone", "Black Raspberry Pie", "Ateriuz", "Sub Train", "Lucky Luprac\u00e1n", "Venomina", "Morton Saltbringer", "Belvyn Brightblade", "Drumina", "High Sorcer Baradun", "Permanent Dawn", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Crusader Siolith", "Soweng", "Blade Stacker", "Rozaalyna", "I Mad X King I", "Tegan Parker", "Johosh The Mighty", "Cyclotechnist Farra", "Duke Silvver", "Inedible Plant", "Eibh\u00ebar", "Glorious Gluvs", "Solus Sanctus", "Mistwalker Cael", "Newtype Khan"];
const professions = ["Firebrand", "Firebrand", "Holosmith", "Weaver", "Herald", "Berserker", "Berserker", "Catalyst", "Scrapper", "Berserker", "Mirage", "Scourge", "Druid", "Firebrand", "Scourge", "Scourge", "Scourge", "Druid", "Firebrand", "Firebrand", "Berserker", "Tempest", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Druid", "Tempest", "Weaver", "Chronomancer", "Scrapper", "Firebrand", "Reaper", "Virtuoso", "Scourge", "Holosmith", "Tempest", "Berserker", "Scrapper", "Vindicator", "Vindicator", "Chronomancer", "Berserker", "Firebrand", "Vindicator", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 17, 2, 0, 5, 1, 0, 3, 1, 2], [7, 0, 6, 13, 6], [16, 2, 0, 0, 0, 1, 3, 6, 0, 1, 3, 1], [15, 5, 0, 4, 9, 1], [0, 22, 4, 2, 9], [1, 7, 3, 8, 7, 0, 4, 3, 4], [18, 7, 1, 4, 7, 2], [11, 3, 0, 3, 18, 5], [1, 5, 5, 12, 8, 0, 3, 3, 4], [0, 26, 7, 3, 9], [14, 14, 4, 9, 4], [0, 15, 3, 8, 11, 7, 4], [3, 8, 4, 6, 7, 3, 4, 7, 3, 2, 4, 0, 1], [20, 10, 6, 15, 3], [0, 16, 4, 5, 9, 4, 2, 6, 1, 0, 4, 3, 4], [0, 17, 3, 4, 10, 8, 2, 9, 0, 0, 3, 3, 1], [0, 9, 4, 4, 15, 1, 4, 12, 3, 2, 1, 3, 4], [13, 13, 6, 19, 5, 0, 1, 3, 4], [0, 6, 4, 9, 9, 3, 4, 13, 5, 0, 4, 5, 3], [1, 15, 11, 4, 10, 3, 2, 11, 5, 0, 3, 4, 2], [2, 33, 7, 6, 15, 8, 1], [0, 24, 10, 2, 16, 5, 2, 10, 3], [0, 7, 7, 8, 12, 6, 2, 16, 4, 0, 4, 5, 4], [0, 17, 7, 1, 14, 5, 5, 9, 4, 0, 6, 5, 3], [0, 19, 2, 4, 15, 7, 5, 14, 4, 0, 3, 4, 5], [0, 21, 8, 6, 8, 7, 7, 13, 2, 0, 4, 3, 5], [1, 21, 7, 7, 14, 6, 1, 11, 2, 0, 3, 9, 2], [0, 26, 6, 3, 10, 5, 3, 14, 5, 0, 2, 10, 4], [0, 18, 5, 7, 16, 2, 4, 15, 7, 0, 4, 6, 5], [0, 39, 13, 9, 29], [0, 13, 13, 6, 15, 9, 1, 16, 2, 1, 6, 8, 1], [1, 24, 12, 8, 7, 7, 7, 12, 7, 0, 3, 3, 1], [1, 23, 5, 9, 18, 8, 6, 8, 3, 0, 2, 4, 5], [2, 17, 9, 11, 20, 3, 4, 14, 1, 1, 5, 6, 2], [1, 19, 10, 11, 14, 7, 4, 15, 6, 0, 3, 5, 2], [2, 24, 9, 0, 19, 5, 4, 16, 8, 1, 5, 7, 4], [0, 9, 4, 30, 5, 13, 14, 13, 2, 5, 8, 8], [8, 41, 19, 3, 7, 21, 13], [0, 33, 17, 10, 7, 12, 3, 17, 10, 0, 6], [30, 16, 7, 27, 7, 2, 7, 17, 11], [1, 30, 5, 11, 19, 13, 5, 15, 7, 1, 6, 17, 0], [0, 32, 6, 11, 24, 6, 10, 17, 10, 1, 4, 7, 4], [1, 38, 11, 10, 23, 5, 7, 22, 8, 1, 3, 9, 7], [4, 13, 23, 9, 29, 7, 6, 27, 12, 2, 5, 7, 5], [3, 31, 8, 10, 35, 11, 13, 28, 10, 0, 3, 6, 6], [6, 53, 19, 14, 30, 10, 6, 25, 10, 1, 6, 15, 8], [2, 55, 15, 14, 36, 23, 6, 26, 10, 0, 5, 14, 14], [2, 60, 16, 7, 32, 23, 9, 28, 13, 6, 21, 9], [6, 70, 19, 8, 38, 24, 11, 24, 16, 2, 4, 18, 8], [9, 79, 21, 16, 34, 25, 5, 31, 14, 2, 7, 22, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

