created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Heres A Quarter", "Lhew Silverhead", "\u00c7onstant\u00edne", "Lady Sherena", "Oo Dads Mad", "High Sorcer Baradun", "Lord Erin The Wise", "Bryxzi", "Belvyn Brightblade", "Crystal Shadowmist", "Daphne Agla\u00e9", "Soft And Chewy", "No Reserv\u00e9", "Lucky Leipreach\u00e1n", "Swithblight", "Klenga", "Astraeus Windrunner", "Elonith Requiem", "Drell The Silent", "Grasszanine", "Venomina The Sly", "Halfpint The Drunk", "Revenant Brandorf", "Tootsie Pop Rocks", "Jmbrage Rev", "Cat Wigglebooty", "Gabe Malhorn", "Be\u00eb", "Jimbo The Pleb", "Xanvias Tseli", "Mike The Archmagus", "Rina Of Theros", "Zaedy Zae", "Rozaalyna", "Tribal S", "Glorious Gluvs", "Kosair", "Mistwalker Cael", "Black Raspberry Pie", "Crusader Siolith", "Newtype Khan", "Sub Train", "Adjudicatrix Farra", "Morton Saltbringer", "Tegan Parker", "Solus Luxes", "Bella Bitty", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Herald", "Scrapper", "Reaper", "Willbender", "Berserker", "Tempest", "Weaver", "Herald", "Firebrand", "Herald", "Reaper", "Druid", "Vindicator", "Scrapper", "Scourge", "Firebrand", "Berserker", "Reaper", "Druid", "Spellbreaker", "Druid", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Scrapper", "Firebrand", "Reaper", "Berserker", "Berserker", "Weaver", "Reaper", "Druid", "Reaper", "Druid", "Berserker", "Firebrand", "Herald", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 2, 4, 1, 10, 3, 1, 2], [0, 3, 20, 3, 2, 1], [0, 2, 0, 0, 2, 2, 1, 0, 1, 4, 3, 4, 1, 3, 5, 1, 0, 3, 2, 0, 2, 1], [38, 1, 2], [0, 0, 0, 3, 1, 34, 2, 1, 1], [6, 1, 0, 3, 7, 3, 1, 0, 5, 5, 2, 6, 7], [0, 0, 0, 11, 5, 3, 0, 3, 2, 5, 4, 0, 0, 7, 1, 2, 0, 3, 1, 0, 0], [0, 3, 0, 0, 15, 3, 0, 0, 0, 10, 1, 7, 6, 3, 0, 1], [4, 1, 1, 4, 1, 0, 34, 0, 3, 5], [5, 1, 0, 3, 1, 39, 4, 3], [2, 1, 0, 1, 0, 11, 2, 2, 0, 1, 0, 8, 9, 4, 6, 3, 3, 4], [0, 0, 4, 49, 2, 1, 8], [0, 0, 1, 0, 18, 1, 2, 0, 3, 19, 6, 8, 12], [0, 0, 4, 3, 4, 4, 1, 18, 9, 7, 5, 8, 2, 2, 3, 3], [4, 1, 1, 1, 1, 0, 17, 2, 0, 0, 0, 6, 1, 5, 0, 1, 9, 6, 5, 14, 2, 1, 1, 3], [3, 2, 8, 6, 3, 10, 12, 7, 4, 9, 5, 8, 3, 1, 1], [4, 1, 0, 2, 0, 8, 0, 1, 0, 1, 5, 2, 8, 3, 10, 7, 11, 2, 9, 3, 1, 3, 3], [5, 0, 1, 1, 3, 19, 9, 10, 9, 6, 4, 5, 5, 2, 2, 1, 3, 2], [0, 0, 12, 0, 2, 0, 6, 12, 3, 7, 7, 10, 6, 5, 3, 7, 5, 0, 2, 2], [2, 9, 6, 7, 2, 5, 1, 12, 13, 17, 5, 3, 3, 5], [17, 14, 9, 13, 10, 9, 3, 6, 6, 3, 0, 2, 4], [10, 0, 0, 1, 0, 0, 16, 2, 3, 0, 1, 12, 7, 6, 8, 3, 5, 4, 7, 5, 2, 2, 1, 2], [0, 2, 0, 8, 6, 5, 1, 2, 13, 5, 9, 17, 6, 11, 7, 0, 3, 5, 0, 2], [4, 3, 0, 3, 0, 0, 23, 3, 3, 0, 2, 12, 7, 7, 8, 8, 5, 7, 5, 2, 3, 2, 2, 4], [0, 0, 18, 1, 1, 2, 1, 15, 13, 12, 13, 18, 6, 7, 7, 0, 1, 2, 1], [0, 2, 14, 4, 1, 0, 0, 20, 9, 12, 14, 12, 3, 10, 8, 7, 4, 0], [3, 21, 14, 11, 21, 13, 9, 6, 7, 11, 1, 1, 4, 1], [0, 5, 0, 0, 9, 9, 1, 0, 4, 13, 11, 16, 11, 9, 8, 6, 6, 10, 5, 2, 3, 6], [5, 2, 2, 4, 0, 0, 45, 3, 1, 2, 5, 9, 11, 10, 5, 7, 7, 9, 7, 8], [4, 3, 0, 5, 2, 0, 48, 1, 3, 0, 3, 13, 7, 15, 13, 9, 2, 5, 9], [1, 0, 2, 5, 0, 29, 16, 2, 1, 3, 18, 8, 9, 13, 8, 13, 4, 6, 5, 6, 1, 2, 1], [5, 2, 0, 6, 1, 0, 53, 4, 2, 1, 3, 15, 15, 12, 6, 6, 1, 7, 1, 4, 5, 1, 1, 4], [2, 0, 0, 3, 34, 3, 1, 0, 2, 9, 16, 15, 21, 12, 0, 8, 3, 17, 3, 0, 2, 5], [3, 1, 6, 0, 76, 3, 3, 1, 3, 14, 3, 15, 8, 9, 3, 5, 4, 0], [0, 1, 0, 3, 0, 44, 11, 1, 0, 3, 14, 3, 7, 14, 13, 2, 6, 7, 15, 6, 2, 2, 5], [2, 1, 0, 2, 0, 0, 53, 6, 2, 0, 4, 19, 11, 13, 15, 4, 9, 5, 3, 8, 3, 1, 3, 1], [2, 0, 6, 11, 14, 14, 19, 14, 12, 10, 5, 46, 5, 1, 2, 9], [6, 1, 0, 6, 0, 0, 46, 2, 1, 0, 6, 17, 10, 12, 10, 15, 5, 9, 11, 10, 2, 1, 1, 4], [1, 1, 7, 0, 0, 53, 8, 3, 0, 4, 15, 6, 13, 4, 12, 8, 18, 10, 5, 3, 1, 2, 5], [3, 1, 0, 6, 1, 45, 5, 2, 2, 5, 13, 9, 12, 15, 10, 7, 10, 11, 12, 3, 1, 3, 7], [1, 1, 1, 3, 0, 33, 4, 1, 1, 5, 12, 12, 17, 19, 14, 6, 7, 6, 26, 3, 3, 3, 6], [4, 1, 1, 4, 0, 45, 5, 2, 1, 10, 13, 20, 10, 14, 9, 13, 10, 5, 9, 7, 1, 1, 2], [4, 1, 1, 5, 1, 62, 3, 2, 0, 7, 7, 11, 18, 13, 9, 12, 9, 5, 10, 0, 2, 9], [0, 1, 4, 0, 71, 11, 2, 2, 1, 17, 18, 14, 10, 11, 7, 6, 5, 6, 2, 2, 2, 3], [8, 1, 8, 0, 0, 61, 3, 1, 3, 15, 13, 11, 16, 14, 37, 4, 0, 2, 0], [5, 2, 1, 7, 1, 58, 12, 3, 1, 5, 18, 15, 9, 25, 14, 10, 7, 7, 12, 6, 2, 2, 6], [4, 1, 1, 5, 0, 65, 9, 2, 4, 8, 24, 14, 12, 17, 19, 13, 11, 10, 35, 9, 1, 2, 8], [6, 1, 1, 5, 0, 0, 88, 11, 4, 2, 6, 17, 10, 14, 15, 27, 9, 13, 11, 29, 7, 1, 3, 11], [6, 2, 0, 6, 0, 84, 17, 3, 1, 7, 26, 13, 16, 28, 12, 10, 11, 13, 31, 4, 2, 2, 6], [2, 0, 8, 0, 68, 9, 5, 3, 8, 23, 15, 23, 20, 41, 11, 24, 10, 27, 7, 2, 3, 4]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

