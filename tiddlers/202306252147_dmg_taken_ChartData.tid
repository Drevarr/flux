created: 20230625214748000
creator: Drevarr
modified: 20230705163536273
modifier: drevarr
tags: ChartData
title: 202306252147_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Duke Silvver", "Ateriuz", "Zayde Sunsabre", "Sp\u00edcy Cheese", "K\u00f4sair", "Caelon Cai", "Raziel Umbra", "Xyntharos", "Mort\u00e4rion", "Xanvias Tsolice", "Gavann", "Arriasa", "Newtype Khan", "Aronorf Xideliesi", "Riann Swordbreak", "Blancooo Padreee", "Jacob Pine", "Grasszanine", "Air One Com", "Sakis Ranger", "Primal Clone", "Elonith Primal", "Ryvalia Fazebringer", "Tika Fiery", "Tribal S", "Bellatrix Astra", "Tegan Parker", "Seiker Novus Terra", "Solus Sanctus", "Morton Saltbringer", "Koralia Danai", "Oo Dads Mad", "Tacitus Kilgore I", "Imalou", "Sumatra Satyricon", "Drevarr Moonwillow", "Traidoruns Maximus", "Bella Sassy", "Gestern Yesteryear", "Ephrem Rowf", "Palm Sauce", "Wild Doggy", "Wrath Symphony", "Drumina", "Gavann", "Xokaa", "Bardyne", "Avatar Sarvity", "Wall Knot", "Fluffy No Care Bear"];
const professions = ["Vindicator", "Berserker", "Spellbreaker", "Berserker", "Spellbreaker", "Reaper", "Chronomancer", "Vindicator", "Scrapper", "Weaver", "Dragonhunter", "Druid", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Reaper", "Spellbreaker", "Firebrand", "Druid", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Soulbeast", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Guardian", "Vindicator", "Druid", "Firebrand", "Willbender", "Dragonhunter", "Catalyst", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[231.6239, 288.337, 180.0252, 46.4146, 292.1851, 228.4054, 430.7389, 676.6115, 488.4461, 1.8, 74.4512, 26.8039, 409.718, 0.0, 34.0377], [158.9238, 333.1935, 39.024, 55.2045, 274.3061, 165.4698, 273.9492, 696.6924, 452.1458, 3.8529, 116.6734, 0.08, 521.2369, 34.1562, 62.9592], [338.9056, 328.4205, 236.4088, 343.6, 296.2202, 304.9124, 292.2754, 547.7371, 295.495, 48.5294, 58.2638, 0.6471, 466.2557, 3.72, 43.34], [156.4611, 114.1957, 221.2086, 198.5909, 225.4154, 252.7642, 403.9556, 545.2709, 441.7366, 23.1186, 80.9141, 36.9623, 508.1972], [229.5294, 324.6022, 239.9125, 121.5909, 279.7343, 586.2945, 317.321, 434.3073, 390.9455, 24.4576, 45.4102, 419.921, 11.4667, 367.12], [175.2225, 170.1978, 172.7516, 80.5385, 159.7288, 367.2915, 353.7305, 506.2036, 371.9261, 0.0, 54.4531, 82.4615, 431.2678, 90.0938, 142.5], [174.4745, 87.3778, 92.0625, 202.119, 145.0, 256.386, 368.0619, 599.9427, 506.0936, 0.0, 34.8667, 5.6154, 404.7112, 0.0, 70.46], [241.3837, 148.5275, 121.4258, 95.0, 180.215, 284.0705, 280.1213, 545.7255, 464.5248, 34.6512, 73.7812, 8.7059, 427.5022, 7.7097, 53.6471], [310.7449, 345.5849, 268.3439, 12.2093, 350.9932, 647.2113, 478.6046, 786.7983], [142.75, 111.0108, 123.0818, 222.7857, 102.0288, 230.9106, 324.8233, 558.763, 319.6436, 5.561, 33.2578, 5.7925, 414.5675, 16.3636, 126.5], [476.4424, 637.6328, 678.0143, 587.0049, 166.4265], [129.7774, 86.5422, 71.1824, 66.6, 84.1667, 165.5705, 352.3427, 597.6822, 431.0495, 0.0, 34.8994, 3.4423, 474.3411, 2.5667, 42.3333], [331.7863, 170.7717, 104.3, 0.0, 187.9604, 221.6446, 275.9348, 460.5562, 326.3351, 28.3704, 35.7291, 17.1481, 368.7696, 0.0, 69.1373], [185.476, 67.2444, 73.7562, 218.1515, 192.6182, 151.5621, 274.6333, 486.1089, 348.5842, 18.6964, 217.3598, 96.1228, 349.8394, 238.2115], [310.7067, 187.1196, 160.275, 27.0682, 529.5641, 195.013, 362.4062, 589.4464, 290.5049], [142.0489, 141.0444, 98.529, 132.825, 130.4072, 174.4755, 288.8696, 502.6943, 858.3767, 2.8696, 52.1412, 217.0417, 317.7977, 35.3871, 7.5349], [275.552, 254.7444, 123.0488, 3334.0, 411.785, 924.0462, 138.8093, 1027.6477, 607.0686], [156.9881, 432.7692, 227.0563, 158.825, 109.7042, 155.5319, 277.5153, 588.8633, 327.0442, 87.8727, 37.2305, 0.0, 384.6254, 0.0, 39.98], [170.4757, 100.5435, 112.3333, 75.125, 93.9909, 160.0967, 229.3277, 606.8992, 458.2842, 0.0, 71.2784, 0.0, 314.9649, 54.0357], [264.912, 171.6705, 89.4654, 55.52, 124.0136, 159.8689, 250.3379, 473.1089, 280.1961, 0.0, 24.375, 179.5306, 304.0597, 27.2143, 36.2041], [142.3194, 261.7312, 570.3232, 322.9442, 0.0, 34.1914, 0.0, 334.4427, 12.5357, 60.94], [101.0118, 124.9778, 157.9437, 31.5116, 116.6565, 174.7359, 220.3117, 408.9065, 256.1485, 4.6379, 19.254, 132.0208, 324.4844, 0.0], [200.5178, 317.7765, 152.0124, 7.963, 125.6965, 142.4773, 262.125, 347.7112, 222.7327, 0.0, 22.7515, 8.8148, 278.2064, 3.9, 109.5455], [98.2522, 75.9011, 92.0625, 56.9655, 118.242, 156.2178, 195.8331, 409.5583, 321.2829, 13.8103, 70.5977, 0.0, 310.5531, 68.9, 149.9423], [88.6501, 64.7527, 107.8375, 2.0, 107.3591, 169.7303, 198.7791, 476.3257, 391.8786, 98.3684, 43.418, 5.4423, 254.0683, 0.0], [101.2658, 114.5287, 35.275, 0.0, 137.0515, 112.7976, 195.9566, 425.8324, 254.8155, 3.0847, 16.0902, 14.1373, 335.4731, 5.6552, 0.0], [73.2687, 86.3556, 28.1887, 45.878, 145.2852, 216.6026, 187.1902, 384.251, 304.601, 0.0, 26.7421, 16.875, 349.1754, 30.25, 0.0], [116.6364, 188.6374, 135.1813, 271.2558, 198.5932, 206.5, 312.252, 515.225, 345.1281], [88.2899, 83.6782, 40.15, 52.9024, 109.1863, 146.0893, 207.7284, 396.6871, 300.203, 0.0, 88.8867, 6.7963, 293.6987, 0.0, 84.5192], [132.7588, 143.5588, 111.4331, 52.4074, 95.9899, 157.8127, 216.7224, 331.9874, 214.5344, 125.2529, 137.0, 276.7713, 52.2069, 73.5], [83.6006, 81.3333, 24.4875, 3.0732, 78.2308, 117.4502, 190.5488, 438.5249, 345.6782, 0.0, 26.1118, 0.0, 298.1718, 0.0, 36.7561], [280.2113, 84.9011, 165.5687, 76.2927, 112.2779, 466.4663, 616.5444], [680.5329, 323.734, 30.2195, 78.0898, 13.2115, 383.425, 0.0, 41.7037], [159.2321, 93.0723, 42.2264, 129.3947, 146.2515, 209.9063, 292.0912, 460.8832, 329.7833], [729.2976, 1663.2462, 0.0, 628.487, 154.0184], [120.9794, 110.7527, 103.05, 8.2444, 84.5127, 158.098, 159.5653, 357.7746, 252.064, 9.0312, 63.6265, 0.0, 218.5833, 5.8387, 65.8182], [120.9645, 89.6957, 46.6352, 130.1786, 155.242, 143.3524, 301.8179, 399.4156, 373.0246], [92.6364, 70.4396, 14.825, 39.8095, 110.6262, 147.4242, 172.0994, 339.2901, 269.8715, 0.0, 31.5484, 0.0, 231.4244, 3.6452, 92.7647], [94.2727, 83.914, 74.3187, 16.5769, 138.3636, 109.7597, 180.1297, 334.6369, 216.4, 20.3256, 23.1469, 0.0, 231.3509, 37.9032, 18.7037], [0.0, 128.5508, 2.449, 710.5422, 3085.0, 105.15], [1135.0808, 280.6512, 245.8063, 18.8409, 171.208, 253.3727, 256.7444], [100.7592, 2.8846, 600.2946, 0.0, 79.7692], [62.9488, 24.3208, 537.0819, 841.8276, 0.0], [0.0, 47.6111, 21.1538, 484.899, 0.0, 122.2941], [10.3819, 25.1765, 423.045, 44.5769, 180.2222], [0.0, 89.7469, 529.9677, 59.6889], [219.4346, 153.3763, 213.5509, 0.0, 310.2922], [21.8654, 592.9308, 16.4103], [124.1187, 0.0, 0.0], [674.26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

