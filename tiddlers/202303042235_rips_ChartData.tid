created: 20230304223548000
creator: Drevarr
modified: 20230705163521246
modifier: drevarr
tags: ChartData
title: 202303042235_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Nelliel T", "Hyde En Sikh", "Morv\u00e4rth", "Smol Gluvs", "Smol Gluvs", "Demon Maddx", "Newtype Khan", "Demon Maddx", "Oo Dads Mad", "Venomina The Fierce", "Be\u00eb", "Be\u00eb", "Primal Clone"];
const professions = ["Reaper", "Chronomancer", "Scourge", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Reaper", "Spellbreaker", "Spellbreaker", "Reaper", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0428, 0.0, 0.0, 0.0043, 0.0621, 0.0, 0.0, 0.1097, 0.04, 0.0], [0.0, 0.0075, 0.0, 0.0952, 0.0385, 0.0714, 0.0111, 0.0, 0.0, 0.114, 0.2, 0.0588, 0.0302, 0.0562, 0.0, 0.0, 0.0097, 0.05, 0.1, 0.0], [0.0473, 0.2556, 0.0, 0.0, 0.2857, 0.3778, 0.0, 0.0, 0.0, 0.0323], [0.0533, 0.4962, 0.5778, 0.0, 0.1154, 0.102, 0.0, 0.0111, 0.5645], [0.1615, 0.0086, 0.1124, 0.0085, 0.0, 0.1581, 0.41, 0.58, 0.2903], [0.145, 0.3459, 1.1111, 0.1538, 0.2041, 0.8889, 0.0, 0.0444, 0.28, 0.5806], [0.0444, 0.4135, 0.8, 0.0, 0.0, 0.0, 0.6333, 0.0, 0.0111, 0.0, 0.4032, 0.1948, 0.0, 0.0588, 0.0302, 0.1006, 0.0043], [0.2257, 0.1509, 0.1243, 0.0128, 0.0862, 0.1645, 0.33, 0.82, 0.1129], [0.1095, 0.406, 1.1111, 0.0, 0.0, 0.3667, 0.0, 0.0, 0.0, 0.3065, 0.3254], [0.0118, 0.0, 0.5778, 0.0, 0.0, 0.4222, 0.0, 0.0, 0.0, 0.2419, 0.1876, 0.3, 0.0, 0.0, 0.1036, 0.0553, 0.1032, 0.32, 0.68, 0.6935], [0.3207, 0.0, 0.0, 0.0776, 0.1805, 0.0085, 0.0259, 0.1548, 0.49, 0.82, 0.0], [0.2515, 0.609, 0.7333, 0.1154, 0.5102, 0.9444, 0.0, 0.0333, 0.7581], [0.1124, 0.0677, 0.5778, 0.0, 0.0, 0.0102, 0.2222, 0.0333, 0.0, 0.5161, 0.2589, 0.35, 0.0294, 0.0216, 0.145, 0.0681, 0.0086, 0.1774, 0.29, 0.54, 0.5484]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

