created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["No Reserv\u00e9", "S\u00e4int Cel\u00e9stine", "Sana Minatozak", "Nazhul Naxxremis", "Tootsie Pop Rocks", "Necrocorruption", "Gluzzen", "Lowella Slytherin", "Hawaiian Supreme", "Anja Starkin", "La Poupounette", "Oo Dads Mad", "Hawaiian Supreme", "Mistwalker Cael", "Miphest\u00f6", "Be\u00eb", "Puppy Sky", "Mort\u00e4rion", "Keypek The Drunk", "Revenant Brandorf", "Arlyss Phury", "Tribal S", "Gamora Titus", "Austinyaj", "Elfina Lightborn", "Kronika Riddle", "Sub Train", "Drevarr Moonwillow", "Adrinz", "Glorious Gluvs", "Xanvias Einzbern", "Meme Soulmessor", "Bella Sassy", "Zaedy Zae", "Koralia Danai", "Ax Axun", "Such A Brets", "Regis Hawkesburne", "Ryvalia Fazebringer", "Etcherii", "Rina Of Theros", "Lord Erin The Wise", "Arcanophage Farra", "Crusader Siolith", "Tegan Parker", "Leafzely", "Venomina The Fierce", "Cedryn X", "Gabe Malhorn", "High Sorcer Baradun"];
const professions = ["Vindicator", "Firebrand", "Scrapper", "Reaper", "Scrapper", "Reaper", "Deadeye", "Scourge", "Spellbreaker", "Druid", "Renegade", "Berserker", "Berserker", "Vindicator", "Tempest", "Reaper", "Reaper", "Scrapper", "Scrapper", "Vindicator", "Vindicator", "Druid", "Firebrand", "Dragonhunter", "Berserker", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Berserker", "Reaper", "Firebrand", "Druid", "Firebrand", "Vindicator", "Mechanist", "Berserker", "Chronomancer", "Firebrand", "Reaper", "Weaver", "Spellbreaker", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Berserker", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22, 22, 0, 0, 0, 0, 15], [14, 54, 2, 0], [15, 57, 0, 0, 0], [55, 4, 17], [0, 8, 0, 0, 0, 0, 13, 0, 17, 33, 0, 16], [0, 23, 0, 30, 23, 10, 8, 0, 0, 0, 0], [33, 18, 0, 8, 13, 14, 15, 0], [13, 8, 0, 57, 0, 0, 0, 0, 0, 0, 29, 0], [0, 21, 14, 2, 52, 23], [29, 19, 0, 0, 0, 71, 0], [12, 69, 0, 0, 0, 0, 26, 17], [13, 8, 0, 0, 0, 0, 14, 0, 11, 28, 0, 54], [0, 26, 80, 26, 0], [0, 28, 0, 0, 0, 0, 8, 14, 0, 39, 0, 12, 0, 13, 20], [111, 8, 22], [6, 11, 0, 0, 0, 0, 15, 0, 23, 8, 0, 16, 0, 0, 55, 0, 0, 12, 0, 0, 0], [0, 38, 12, 0, 12, 18, 14, 10, 46], [21, 20, 0, 0, 46, 16, 0, 29, 11, 21], [11, 4, 0, 0, 0, 0, 4, 0, 17, 8, 0, 20, 27, 13, 20, 3, 19, 6, 0, 13, 0], [0, 13, 0, 0, 0, 36, 0, 38, 0, 0, 34, 0, 0, 0, 22, 27, 0, 0, 0], [24, 11, 0, 32, 0, 36, 9, 0, 33, 25, 0, 0, 0], [0, 8, 0, 0, 0, 0, 11, 0, 18, 11, 0, 4, 0, 25, 32, 12, 9, 5, 0, 39, 0], [90, 0, 23, 26, 18, 21, 0], [25, 16, 0, 0, 0, 8, 0, 13, 6, 0, 0, 18, 17, 22, 24, 2, 0, 16, 14], [4, 5, 18, 13, 32, 83, 28, 0], [18, 120, 1, 20, 4, 27, 1], [0, 5, 0, 0, 0, 0, 0, 0, 30, 10, 0, 19, 0, 23, 23, 9, 0, 52, 9, 23, 0], [12, 1, 0, 0, 0, 0, 28, 0, 3, 18, 0, 33, 0, 7, 33, 11, 20, 13, 34, 0, 0], [22, 0, 0, 17, 32, 13, 8, 30, 75, 0, 24, 0], [0, 8, 0, 0, 0, 0, 13, 0, 19, 44, 0, 6, 0, 12, 16, 18, 6, 27, 34, 25, 0], [0, 6, 0, 0, 0, 0, 14, 0, 27, 13, 0, 40, 0, 6, 19, 20, 32, 54, 0], [0, 14, 0, 20, 0, 54, 14, 17, 19, 7, 26, 0, 60], [0, 2, 0, 0, 0, 0, 26, 0, 29, 0, 0, 30, 0, 35, 17, 13, 33, 12, 0, 39, 0], [0, 18, 0, 0, 0, 0, 20, 0, 13, 9, 0, 42, 0, 31, 19, 35, 32, 5, 0, 20, 0], [0, 23, 0, 0, 0, 37, 0, 38, 19, 0, 15, 17, 12, 5, 43, 26, 13, 0, 0, 0], [19, 16, 0, 0, 0, 0, 87, 0, 19, 7, 0, 20, 0, 11, 25, 0, 12, 14, 10, 14, 0], [89, 53, 0, 10, 0, 18, 66, 27, 0], [8, 17, 0, 0, 0, 0, 4, 0, 36, 10, 0, 25, 0, 22, 78, 24, 9, 17, 0, 14, 0], [0, 10, 0, 0, 0, 0, 44, 0, 11, 9, 0, 21, 0, 32, 16, 19, 48, 40, 0, 17, 3], [0, 0, 0, 36, 0, 0, 0, 0, 0, 25, 43, 27, 24, 35, 36, 0, 46, 0], [22, 6, 0, 0, 0, 0, 14, 0, 0, 17, 0, 34, 0, 28, 41, 0, 34, 40, 0, 38, 0], [81, 0, 0, 0, 0, 11, 10, 28, 3, 0, 22, 0, 29, 43, 0, 14, 38, 5, 15, 0], [12, 39, 0, 0, 0, 3, 28, 16, 37, 23, 0, 10, 37, 26, 30, 7, 6, 36, 10, 12, 0], [0, 15, 0, 0, 0, 0, 25, 0, 5, 43, 0, 29, 13, 37, 52, 0, 52, 17, 28, 23, 0], [0, 0, 0, 0, 32, 0, 70, 26, 0, 34, 0, 22, 25, 0, 43, 35, 74, 0, 0], [33, 13, 0, 0, 0, 33, 7, 0, 21, 11, 0, 44, 0, 40, 146, 0, 13, 22, 0, 0, 0], [24, 0, 0, 0, 4, 36, 0, 38, 25, 0, 27, 13, 33, 15, 44, 104, 23], [23, 17, 0, 0, 0, 0, 62, 0, 17, 20, 0, 39, 25, 24, 23, 12, 19, 87, 0, 33, 0], [9, 24, 0, 0, 0, 28, 0, 41, 20, 0, 63, 10, 22, 21, 22, 61, 79, 0, 37, 0], [12, 15, 0, 0, 0, 0, 54, 0, 57, 26, 0, 39, 29, 56, 58, 13, 24, 13, 14, 40, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

