created: 20230513000456000
creator: Drevarr
modified: 20230705163529744
modifier: drevarr
tags: ChartData
title: 202305130004_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Lookin Boi", "High Sorcer Baradun", "Miphest\u00f6", "Mac Aaroni", "Tegan Parker", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[130.9594, 0.0, 143.7925, 0.0, 19.872, 0.0, 184.1146, 197.9781, 0.0, 0.0], [81.0086, 100.8806, 332.8962, 742.3814, 48.2008, 112.0552, 34.8087, 19.9838, 132.8832], [31.968, 79.4304, 294.1568, 593.8153, 46.6851, 48.3953, 19.3649, 16.7846, 93.7728, 20.1256, 19.3152, 100.407, 0.0, 50.945, 58.7866, 12.0528, 72.4333, 11.8584, 31.3536, 17.1495, 73.2883, 20.1214, 74.0476, 7.6995, 3.9677, 0.0], [30.9658, 95.2358, 293.5002, 526.0405, 37.53, 150.2164, 19.7329, 40.3992, 185.472, 19.0663, 19.875, 0.0, 155.3933, 0.0, 20.1232, 194.5225, 145.3939, 0.0, 135.267, 0.0, 7.5955, 42.2577, 125.1264, 16.4699, 180.6182, 42.0462, 47.6005], [63.3139, 94.3488, 547.9327, 1180.0004, 90.0356, 141.8903, 0.0, 0.0, 203.616, 19.7684, 177.9533, 39.0439, 0.0, 217.12, 135.3946, 0.0, 147.0818, 0.0, 42.6144, 170.8022, 20.1214, 212.2304, 0.0, 0.0, 0.0], [115.6378, 286.7558, 528.0706, 1514.835, 108.4064, 214.4833, 19.5172, 113.0434, 195.1488, 32.2795, 0.0, 13.6464, 153.1674, 32.7805, 78.0169, 199.9275, 284.5786, 40.1544, 133.6558, 97.3286, 91.3253, 201.8016, 24.5582, 218.7136, 49.9554, 63.1483, 33.5842]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

