created: 20230422000344000
creator: Drevarr
modified: 20230705163526215
modifier: drevarr
tags: ChartData
title: 202304220003_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rkantor", "Laddy Lux", "Morton Saltbringer", "Rahani Sunray", "Ryvalia Fazebringer", "Mac Saharlot", "Sub Train", "Ark Darkness", "Venomina The Siren", "Skye Nightroad", "Stoic Rapidfire", "Elonith Primal", "Air One Com", "Zadie Miststep", "Aronorf Xideliesi", "Zaylen Harker", "Lucas Ryn", "Drevarr Moonwillow", "Koralia Danai", "Soxx", "Bella Sassy", "Jupi Jupi Jupi", "Johosh The Great"];
const professions = ["Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Druid", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 36.3492, 10.5092, 69.8342, 92.6652, 26.4422, 122.9562, 107.3362, 0.0, 121.8276], [29.7898, 146.3848, 144.8423, 171.504, 47.7216, 58.6983, 12.2461], [4.129, 16.3016, 34.4187, 20.3803, 19.9848, 28.6311, 30.8282, 43.2729, 21.1829, 146.52, 22.6044, 15.18, 3.9207, 18.7085, 43.3166, 20.761, 0.0, 20.3252, 27.5302, 61.776, 24.6816, 34.8947, 16.5628, 26.1225], [21.7378, 28.2012, 20.031, 47.0016, 35.7192, 48.6235, 24.933, 36.3676, 19.9688, 129.96, 17.892, 24.0948, 36.1008, 5.3556, 4.9997, 0.9616, 0.0, 0.0, 22.4232, 22.701, 63.8496, 24.4512, 36.0622, 13.7476, 26.7417], [38.5572, 33.4836, 24.0473, 32.545, 44.616, 26.445, 22.1003, 50.7641, 65.0182, 140.04, 57.645, 28.0899, 20.6448, 5.5982, 27.5789, 11.1898, 37.0867, 40.2569, 54.0383, 102.7296, 32.4864, 27.9871, 19.9879, 34.4817], [0.0, 13.9444, 6.7109, 37.1288, 1.1616, 66.2535, 27.9954, 72.526, 47.7013, 267.48, 23.058, 0.0, 52.5228, 0.0, 15.241, 42.6172, 12.6298, 0.0, 68.275, 49.8435, 101.52, 0.0, 29.3167, 23.1316, 38.4678], [73.5319, 143.562, 53.5952, 172.5624, 57.4182, 29.9052, 311.58, 22.995, 17.2017, 74.796, 27.0208, 70.2778, 5.2589], [14.2085, 102.098, 28.0128, 48.1652, 0.0, 62.9391, 88.1716, 52.0196, 53.037, 188.28, 25.893, 0.0, 17.5812, 17.704, 69.9149, 55.2057, 22.2816, 78.8091, 63.591, 65.664, 0.0, 44.5588], [37.2892, 66.6512, 72.424, 0.0, 61.2466, 11.9944, 87.1317, 11.4701, 187.56, 106.722, 0.0, 46.4232, 26.5357, 30.0384, 49.9605, 40.2336, 100.2707, 41.4187, 75.0816, 0.0, 27.7601, 0.0, 24.5358], [5.0398, 48.1664, 27.1231, 99.9621, 0.0, 92.9806, 90.4429, 141.3274, 99.3006, 260.1, 132.678, 0.0, 22.4664, 30.1331, 34.0704, 46.5949, 39.431, 0.0, 14.2495, 0.0, 0.0, 0.0, 0.0, 0.0, 9.3654], [30.9065, 53.2216, 51.1959, 52.5021, 49.2624, 95.6956, 73.3445, 89.1823, 77.4787, 256.32, 0.0, 0.0, 11.6472, 11.0145, 30.2803, 57.6098, 32.039, 85.9339, 67.2218, 120.96, 0.0, 101.1492, 0.0, 76.626], [10.5046, 34.506, 65.2277, 53.4542, 60.6936, 51.9732, 10.2846, 36.7443, 12.141, 371.34, 0.0, 0.0, 5.7684, 62.0851, 6.935, 77.1044, 5.808, 37.5714, 48.2995, 78.96, 286.5888, 0.0, 59.8009, 45.4186, 38.6613], [32.0602, 84.206, 117.3387, 78.1009, 32.0496, 84.1304, 89.2434, 113.0369, 3.9618, 259.2, 26.208, 0.0, 52.44, 15.9659, 62.5363, 54.2441, 39.959, 0.0, 71.3347, 67.8563, 94.0896, 14.9184, 52.0177, 0.0, 23.0265], [0.0, 47.9889, 24.6048, 37.834, 20.7478, 52.1451, 69.4273, 280.62, 294.714, 67.5234, 26.4684, 33.3465, 0.0403, 4.677, 5.0054, 55.4243, 26.7195, 250.7328, 30.9888, 5.7401, 70.99, 80.3799], [50.4583, 115.6164, 79.0562, 138.2897, 34.6104, 90.3714, 77.4787, 140.8252, 74.8908, 368.64, 0.0, 15.1731, 61.8792, 19.8866, 43.223, 98.872, 54.3629, 0.0, 171.7803, 113.6813, 81.5616, 21.1968, 79.3886, 51.5651, 40.8672], [33.2746, 86.0804, 57.0425, 137.3024, 45.6456, 86.9159, 106.5715, 189.3713, 0.0, 576.54, 180.747, 20.2653, 1.5456, 71.0179, 70.7616, 85.2782, 46.9709, 130.6055, 122.0355, 74.736, 20.304, 85.453, 20.2694, 63.3132], [0.0, 85.4112, 128.558, 55.9416, 181.73, 132.7295, 190.5849, 154.0949, 413.64, 65.646, 19.8927, 43.6356, 45.998, 76.0435, 88.6876, 100.6157, 0.0, 81.1695, 167.1202, 142.992, 20.5344, 79.1292, 62.3567, 10.6425], [42.3826, 106.1592, 95.4013, 93.4037, 74.2368, 137.4787, 73.957, 154.8031, 101.5371, 403.38, 111.384, 27.1377, 28.704, 15.4202, 81.6077, 71.7718, 45.2602, 141.1833, 39.8678, 217.9872, 42.8256, 59.1848, 125.4641, 170.5122], [10.9296, 110.8736, 117.7963, 63.0801, 112.3056, 123.4805, 86.2576, 150.7856, 73.9643, 614.7, 50.778, 22.0248, 85.0356, 25.8486, 137.2493, 165.4424, 71.7869, 134.3208, 97.5015, 92.1024, 55.8144, 54.3851, 0.0, 9.1332], [32.4245, 75.7428, 118.9148, 106.8731, 38.0424, 169.6359, 174.123, 169.8273, 41.1835, 434.52, 22.05, 0.0, 78.4116, 63.8838, 51.2467, 46.9008, 89.5277, 0.0, 152.0671, 125.49, 205.4592, 23.3568, 97.4197, 22.1462, 126.4329], [15.2407, 50.3532, 65.2531, 97.6349, 89.0472, 119.7782, 75.3861, 70.0988, 91.8563, 682.02, 207.081, 0.0, 57.408, 64.1465, 35.1187, 109.0127, 8.9549, 30.8162, 47.6439, 38.4225, 224.64, 44.2944, 85.226, 99.3296, 126.8586], [38.0714, 94.6856, 145.9108, 154.2625, 173.712, 167.0971, 90.4429, 341.9982, 77.2551, 1074.24, 205.695, 112.6908, 120.1704, 36.1355, 140.7168], [25.5631, 183.7196, 150.1305, 222.138, 167.7192, 135.5042, 156.4631, 278.8466, 194.0324, 784.98, 0.0, 22.2318, 92.8188, 17.5423, 91.4861, 88.9498, 86.6554, 173.179, 197.823, 183.5136, 22.7232, 149.4699, 0.0, 170.7444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

