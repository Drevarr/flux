created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Rina Of Theros", "Luke The Ghastly", "Vee Usagi", "Arriasa", "Crusader Siolith", "Legacy Of Mathus", "Sub Train", "Morton Saltbringer", "Zaedy Zae", "Kosa\u00efr", "Sygaldry Verdandi", "Tribal S", "Daphne Agla\u00e9", "Alarics Bane", "Xanvias Tsolice", "Govinda Ektar", "Darks Na", "Charr Surethang", "Zaylen Harker", "Lord Erin The Wise", "Sub Train", "Rafaellagabriela", "Bella Sassy", "My Birthday Girl", "Tootsie Pop Rocks", "Yummy Kiwi", "Be\u00eb", "Vee Usagi", "Elonith Requiem", "Rina Of Theros", "Klengah", "Necrotic Windrunner", "Tegan Parker", "Jimbo The Pleb", "\u00c1rk\u00e1ntor", "Drevarr Moonwillow", "Venomina The Sly", "Koralia Danai", "Rozaalyna", "Mike The Archmagus", "Mistwalker Cael", "Newtype Khan", "Nose Llama", "Rahani Sunray", "Arcanophage Farra", "Eibh\u00ebar", "Solus Luxes", "Glorious Gluvs"];
const professions = ["Scourge", "Reaper", "Scourge", "Scourge", "Druid", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Druid", "Weaver", "Firebrand", "Druid", "Scourge", "Reaper", "Weaver", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Weaver", "Dragonhunter", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Reaper", "Reaper", "Reaper", "Scourge", "Druid", "Reaper", "Tempest", "Berserker", "Reaper", "Scrapper", "Druid", "Firebrand", "Reaper", "Weaver", "Herald", "Spellbreaker", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8], [8], [2, 7], [9], [5, 6], [0, 10, 2], [5, 5, 5], [4, 3, 10, 4], [3, 6, 11, 4], [0, 0, 3, 0, 0, 3, 0, 4, 0, 2, 0, 2, 3, 0, 5, 0, 2, 0, 3, 4], [2, 2, 2, 0, 1, 3, 0, 3, 0, 0, 2, 3, 1, 3, 1, 1, 0, 4, 1, 2, 3], [0, 5, 0, 0, 2, 1, 3, 0, 1, 1, 3, 3, 3, 2, 4, 0, 0, 3, 2, 2], [0, 5, 3, 0, 3, 0, 1, 1, 1, 1, 2, 5, 1, 2, 0, 0, 3, 6, 4], [0, 6, 1, 1, 0, 0, 3, 2, 2, 3, 2, 4, 3, 1, 0, 6, 1, 1, 3], [2, 3, 1, 0, 0, 4, 0, 1, 1, 1, 3, 4, 4, 4, 1, 3, 0, 2, 1, 5, 1], [3, 2, 2, 1, 1, 4, 0, 0, 0, 1, 3, 3, 0, 2, 2, 4, 1, 2, 4, 6, 1], [2, 4, 0, 5, 2, 4, 1, 2, 3, 2, 1, 2, 3, 0, 5, 0, 8, 0], [1, 6, 2, 1, 4, 0, 3, 0, 1, 2, 2, 3, 7, 1, 6, 0, 1, 1, 2, 3], [0, 2, 0, 3, 1, 3, 3, 3, 6, 5, 6, 0, 4, 3, 3, 4], [0, 7, 1, 0, 4, 1, 4, 0, 3, 2, 5, 6, 5, 5, 7], [4, 10, 3, 2, 0, 4, 1, 0, 1, 4, 6, 6, 1, 3, 2, 6], [3, 10, 2, 1, 1, 2, 2, 5, 1, 3, 2, 3, 6, 5, 2, 6, 0], [2, 6, 4, 0, 1, 0, 4, 0, 3, 3, 3, 2, 4, 2, 3, 0, 3, 5, 5, 4], [2, 4, 0, 2, 0, 3, 1, 2, 1, 1, 2, 2, 5, 4, 3, 7, 2, 3, 2, 9, 0], [2, 4, 6, 0, 0, 2, 1, 1, 1, 1, 3, 2, 3, 1, 1, 4, 0, 3, 4, 13, 3], [8, 2, 1, 1, 0, 5, 1, 5, 0, 1, 3, 3, 1, 1, 4, 3, 1, 4, 2, 11, 3], [0, 4, 0, 3, 1, 3, 1, 2, 4, 4, 7, 5, 3, 2, 0, 1, 4, 14, 4], [5, 6, 0, 1, 3, 1, 5, 0, 2, 3, 2, 6, 5, 1, 1, 0, 5, 5, 10, 1], [7, 6, 1, 0, 3, 1, 4, 1, 2, 4, 5, 0, 5, 6, 4, 1, 3, 2, 7, 2], [3, 1, 2, 1, 0, 6, 2, 2, 6, 6, 1, 8, 1, 7, 3, 6, 2, 9, 1], [4, 0, 0, 3, 2, 4, 1, 2, 6, 6, 4, 7, 5, 6, 1, 5, 3, 11, 2], [2, 10, 5, 0, 6, 5, 3, 3, 6, 8, 2, 5, 4, 8, 2, 3], [3, 1, 1, 3, 4, 6, 1, 2, 4, 5, 3, 4, 7, 3, 4, 6, 14, 4], [4, 5, 3, 1, 4, 4, 6, 1, 4, 5, 5, 7, 0, 4, 3, 5, 4, 6, 1, 5], [4, 7, 1, 0, 0, 4, 1, 6, 1, 2, 7, 6, 6, 9, 3, 3, 0, 6, 1, 4, 9], [7, 6, 4, 2, 0, 3, 3, 7, 4, 2, 8, 7, 8, 7, 6, 8], [4, 9, 5, 1, 1, 5, 2, 3, 1, 3, 5, 4, 6, 5, 4, 5, 2, 4, 4, 10, 3], [2, 5, 4, 2, 11, 2, 5, 1, 2, 7, 6, 7, 3, 4, 0, 5, 5, 11, 6], [0, 5, 2, 0, 3, 1, 7, 1, 3, 5, 8, 6, 8, 6, 7, 1, 5, 4, 13, 4], [10, 3, 1, 9, 2, 7, 2, 4, 7, 7, 6, 8, 6, 7, 5, 5], [2, 6, 8, 2, 7, 4, 1, 4, 3, 4, 7, 5, 10, 1, 4, 8, 6, 8], [9, 4, 3, 0, 2, 3, 0, 6, 1, 2, 6, 7, 6, 6, 5, 8, 2, 6, 5, 13, 4], [15, 7, 3, 1, 1, 3, 1, 7, 2, 4, 8, 8, 5, 5, 5, 8, 6, 6, 3, 5, 3], [2, 8, 3, 1, 7, 2, 5, 0, 4, 6, 7, 2, 10, 5, 10, 2, 6, 8, 14, 8], [14, 11, 4, 4, 0, 1, 5, 7, 0, 3, 9, 5, 9, 9, 5, 9, 2, 5, 2, 5, 4], [11, 12, 2, 2, 0, 5, 1, 7, 0, 2, 6, 4, 9, 8, 7, 10, 3, 5, 5, 12, 3], [14, 7, 5, 2, 3, 1, 3, 7, 2, 3, 7, 7, 7, 8, 6, 9, 5, 3, 4, 13, 5], [15, 4, 6, 3, 2, 6, 4, 9, 1, 3, 7, 5, 9, 7, 6, 5, 3, 5, 4, 12, 5], [11, 0, 9, 6, 4, 5, 9, 1, 4, 7, 9, 8, 12, 7, 6, 4, 2, 7, 5, 6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

