created: 20230315220824000
creator: Drevarr
modified: 20230705163522180
modifier: drevarr
tags: ChartData
title: 202303152208_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Bella Sassy", "Kmpek", "Husky Guard", "Oo Dads Mad", "Blanco Padre Guard", "Smol Daddy Tika", "Cat Wigglebooty", "Be\u00eb", "Black Raspberry Pie", "Zaylen Harker", "Etcheriii", "Dark Sidiuz", "Tribal S", "K\u00f4sair", "Sygaldry Verdandi", "Sp\u00edcy Cheese", "Raziel Umbra", "Belvyn Brightblade", "Rina Of Theros", "Fribble Bibble", "Whose Guardian", "Etcheriii", "Xanvias Tseli", "Panther B Me", "Fruji", "Mike The Archmagus", "Seren Nightroad", "Drevarr Moonwillow", "Sumatra Satyricon", "Lord Erin The Wise", "Sofya De Nova", "Johosh The Great", "Elonith Requiem", "Demon Sekhmet", "Newtype Khan", "Koralia Danai", "Mac Chiato", "Ryvalia Fazebringer", "Arcanophage Farra", "Cerys Fireblade", "Primal Clone", "Nazhul Naxxremis", "Mistwalker Caelon", "Eibh\u00ebar", "Smol Gluvs", "Ravioli Fetabringer", "Xyntharos", "\u00c1rkantor"];
const professions = ["Tempest", "Firebrand", "Vindicator", "Dragonhunter", "Spellbreaker", "Firebrand", "Berserker", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Herald", "Scourge", "Druid", "Berserker", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Scourge", "Scrapper", "Firebrand", "Vindicator", "Berserker", "Scourge", "Scrapper", "Tempest", "Scourge", "Scrapper", "Soulbeast", "Weaver", "Weaver", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Spellbreaker", "Berserker", "Chronomancer", "Scourge", "Vindicator", "Chronomancer", "Scourge", "Firebrand", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 6, 0, 0, 1, 0, 1, 3, 2, 4, 6, 5], [2, 2, 1, 0, 1, 1, 0, 3, 1, 3, 6, 0, 2, 0, 1, 0, 0, 0, 0, 1, 0, 0, 4, 2], [0, 2, 1, 1, 1, 0, 0, 0, 7, 2, 0, 7, 11], [2, 0, 5, 0, 6, 7, 0, 8, 6], [6, 2, 6, 1, 6, 1, 9, 1, 2, 4], [2, 3, 1, 0, 2, 0, 0, 3, 1, 9, 3, 0, 1, 1, 0, 0, 0, 2, 6, 0, 1, 3], [8, 6, 4, 1, 4, 0, 0, 5, 0, 3, 8, 1, 7, 0, 0, 0, 0, 0, 0, 5, 3, 2, 2], [1, 3, 0, 0, 2, 1, 6, 14, 8, 1, 2, 3, 1, 2, 2, 2, 5, 5, 6], [5, 2, 5, 0, 5, 0, 0, 5, 0, 14, 5, 1, 11, 0, 1, 0, 0, 0, 0, 4, 4, 0, 1, 2], [5, 6, 6, 0, 4, 1, 0, 8, 0, 6, 4, 0, 8, 1, 0, 2, 0, 1, 4, 3, 0, 0, 7], [6, 5, 7, 4, 1, 0, 9, 1, 5, 6, 2, 7, 0, 0, 0, 0, 2, 3, 4, 0, 2, 4], [9, 7, 3, 8, 2, 2, 16, 1, 8, 12], [4, 9, 4, 0, 4, 2, 0, 15, 2, 8, 14, 1, 5], [7, 6, 6, 3, 5, 2, 0, 6, 0, 4, 12, 0, 6, 0, 0, 1, 1, 2, 0, 3, 0, 1, 2, 4], [5, 9, 2, 0, 4, 0, 0, 16, 1, 4, 17, 1, 5, 0, 0, 0, 0, 2, 0, 3, 3, 0], [4, 6, 4, 2, 2, 1, 0, 7, 0, 9, 12, 2, 8, 0, 0, 1, 3, 7, 0, 0, 4, 2], [5, 5, 8, 1, 1, 1, 5, 2, 5, 13, 0, 5, 1, 1, 0, 0, 0, 8, 3, 1, 5, 5], [7, 6, 0, 1, 2, 0, 0, 10, 0, 5, 16, 1, 6, 3, 2, 0, 0, 4, 6, 0, 5, 3], [10, 14, 9, 2, 8, 1, 3, 21, 1, 9], [6, 3, 3, 2, 6, 0, 0, 5, 1, 9, 10, 2, 6, 1, 1, 0, 0, 1, 2, 6, 4, 7, 6], [7, 9, 3, 2, 2, 1, 1, 11, 1, 4, 14, 0, 3, 1, 2, 0, 1, 6, 3, 5, 6], [9, 7, 6, 1, 5, 0, 0, 14, 0, 4, 6, 1, 8, 1, 3, 1, 1, 1, 5, 5, 2, 4, 3], [19, 6, 19, 3, 7, 8, 1, 8, 3, 16], [8, 5, 8, 1, 1, 1, 0, 13, 0, 8, 16, 1, 13, 0, 0, 0, 0, 0, 0, 2, 2, 1, 5, 6], [1, 6, 10, 0, 3, 1, 0, 10, 1, 10, 20, 1, 5, 0, 1, 1, 0, 0, 0, 1, 8, 0, 5, 8], [4, 5, 3, 0, 4, 0, 0, 12, 1, 11, 16, 0, 10, 1, 0, 0, 0, 1, 1, 6, 2, 2, 5, 8], [4, 8, 4, 2, 4, 1, 1, 13, 3, 11, 8, 0, 9, 0, 1, 2, 3, 4, 5, 5, 6], [8, 9, 8, 0, 6, 1, 0, 14, 0, 7, 7, 1, 5, 1, 2, 1, 1, 3, 0, 4, 4, 0, 4, 9], [6, 5, 5, 1, 3, 2, 0, 10, 0, 14, 14, 2, 8, 1, 0, 1, 0, 2, 2, 4, 5, 2, 3, 8], [7, 4, 9, 3, 5, 1, 0, 11, 1, 5, 8, 2, 10, 1, 2, 1, 0, 3, 0, 7, 5, 1, 7, 7], [5, 11, 8, 2, 3, 2, 1, 10, 5, 11, 3, 5, 3, 5, 2, 1, 3, 1, 10, 9, 2], [5, 8, 8, 0, 4, 1, 0, 15, 0, 12, 21, 0, 12, 0, 3, 1, 0, 1, 0, 5, 7, 0, 1, 6], [8, 8, 6, 4, 0, 0, 16, 1, 11, 20, 0, 9, 4, 1, 2, 0, 3, 0, 5, 3, 7, 5], [9, 3, 9, 8, 3, 0, 20, 0, 12, 19, 4, 0, 2, 2, 1, 3, 0, 7, 1, 3, 7], [6, 10, 2, 10, 1, 0, 19, 1, 10, 7, 2, 9, 3, 2, 4, 1, 1, 7, 2, 9, 12], [9, 11, 8, 0, 7, 0, 0, 12, 0, 7, 18, 0, 12, 0, 3, 1, 0, 6, 3, 4, 9, 4, 10], [10, 9, 10, 3, 9, 2, 0, 14, 1, 8, 19, 0, 11, 1, 2, 3, 1, 4, 3, 1, 4, 12], [10, 4, 9, 3, 8, 4, 0, 13, 0, 12, 19, 1, 10, 3, 1, 3, 0, 0, 1, 9, 5, 2, 4, 13], [9, 9, 11, 0, 5, 3, 1, 15, 0, 14, 23, 1, 14, 1, 3, 1, 4, 0, 3, 6, 1, 7, 8], [6, 13, 9, 4, 0, 0, 16, 1, 13, 20, 2, 11, 0, 3, 4, 1, 1, 7, 8, 9, 11], [8, 8, 9, 2, 8, 2, 0, 17, 0, 10, 25, 1, 11, 1, 3, 4, 0, 5, 0, 7, 7, 1, 5, 8], [11, 11, 5, 1, 8, 1, 1, 15, 0, 12, 28, 0, 8, 3, 3, 3, 1, 0, 0, 4, 11, 1, 4, 17], [5, 15, 11, 1, 7, 1, 0, 22, 1, 11, 21, 1, 8, 1, 3, 5, 3, 1, 7, 10, 3, 12], [8, 10, 10, 9, 0, 2, 20, 2, 15, 29, 1, 13, 0, 2, 4, 1, 4, 2, 7, 11, 0, 4, 9], [7, 8, 9, 2, 8, 3, 0, 20, 3, 10, 22, 3, 12, 3, 3, 4, 1, 4, 1, 11, 10, 2, 9, 10], [10, 14, 13, 3, 9, 3, 1, 18, 2, 10, 27, 1, 14, 1, 4, 3, 4, 1, 11, 9, 2, 8, 12], [9, 16, 9, 3, 10, 4, 1, 25, 2, 12, 19, 3, 14, 0, 3, 6, 1, 5, 2, 9, 15, 2, 14, 14], [11, 20, 18, 4, 13, 2, 2, 27, 2, 21, 32, 1, 5, 0, 4, 5, 3, 7, 0, 5, 17, 4, 13], [18, 21, 23, 0, 16, 1, 37, 3, 25, 46, 0, 23, 2, 4, 3, 0, 3, 0, 14, 16, 2, 5, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

