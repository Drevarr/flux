created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Primal Clone", "Mistwalker Cael", "Eibh\u00ebar", "River No Hug", "Xyntharos", "Kary\u00edna", "Grasszanine", "Legacy Of Mathus", "Johosh The Mighty"];
const professions = ["Spellbreaker", "Chronomancer", "Vindicator", "Chronomancer", "Reaper", "Vindicator", "Vindicator", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[550.0488, 72.3077, 369.9412, 207.3774, 621.7692, 399.5125, 284.2, 253.3462, 87.1897, 517.9469, 587.68], [755.8659, 762.7885, 360.7794, 547.4906, 1054.9538, 690.1875, 498.7176, 394.7051, 519.3103, 816.3628, 1386.72], [3286.5488, 3059.8269, 2509.3676, 3430.0189], [1470.3902, 1159.8077, 681.1471, 1079.6226, 1043.7846, 1670.15, 1081.8235, 976.4359, 698.0, 1381.8673, 1780.88, 0.0], [531.9268, 1675.4231, 1495.3676, 1687.717, 2298.3231, 2065.2, 1312.1294, 577.8462, 1011.3276, 2475.9823, 1983.0533], [3709.725, 1735.0118, 1973.9615, 2042.5862, 2498.469, 3852.6267, 229.6923], [298.6463, 1602.4615, 2202.9412, 3413.8302, 2159.0615, 2431.3125, 36.0706, 3297.0897, 306.8793, 2096.0796, 2663.2933, 100.1868], [1376.4756, 1823.1538, 2057.7794, 1639.6604, 2794.6154, 1603.3875, 1430.1294, 2261.8462, 1246.9138, 2143.0354, 2286.72], [1064.3049, 2405.6346, 3650.0294, 3512.6226, 2067.9385, 3889.25, 887.0235, 3358.4872, 2413.2759, 1604.4336, 3643.2, 811.2198], [1777.5244, 2973.2692, 3319.3235, 1566.283, 3786.6308, 4885.9375, 2916.1765, 1828.1154, 3288.5862, 3671.292, 5460.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

