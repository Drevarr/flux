created: 20230314004438000
creator: Drevarr
modified: 20230705163522050
modifier: drevarr
tags: ChartData
title: 202303140044_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Venomina The Siren", "Zadie Miststep", "Tegan Parker", "Mac Chiato"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.075, 69.3532, 756.4199, 99.7248, 35.1212, 38.5846, 133.3195, 99.469, 56.2775, 0.0, 16.6551, 169.9305, 53.4198, 71.0966, 19.872, 37.4205, 19.9852, 34.9306, 0.0, 95.1482, 194.3105, 39.9643, 89.4504, 18.9756], [3.995, 850.2426, 160.4946, 19.7226, 99.9953, 66.7483, 85.2638, 16.0208, 66.91, 65.2072, 13.6652, 54.3312, 229.5376, 31.7824, 80.1684, 66.5984, 124.488, 127.8127, 0.0, 21.5875, 14.1096, 59.2488, 323.5294, 141.8947, 105.8928, 65.394], [78.0338, 154.3668, 871.5091, 224.9002, 21.0267, 120.1108, 49.3053, 92.1456, 0.0, 135.9162, 39.6508, 0.0, 70.5894, 231.9601, 131.6145, 103.1621, 73.4206, 65.124, 95.5613, 65.4989, 160.6046, 0.0, 92.951, 355.2314, 153.0144, 61.1208, 119.0952], [60.3582, 115.2957, 1439.0325, 286.5789, 19.6997, 77.8747, 69.1723, 290.5502, 105.4196, 61.2422, 19.9507, 67.4201, 321.292, 173.8618, 35.2648, 56.3774, 112.644, 184.7608, 0.0, 226.2893, 19.8623, 134.213, 230.4725, 29.5099, 64.4904, 87.2424], [52.3069, 37.4731, 1380.2369, 299.4341, 30.4876, 116.0683, 77.419, 221.7326, 0.0, 117.2531, 59.6095, 80.7971, 360.3558, 219.7635, 109.3558, 81.9422, 109.152, 126.9291, 20.0031, 196.1318, 13.3777, 180.0926, 378.6161, 157.3862, 95.316, 117.2304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

