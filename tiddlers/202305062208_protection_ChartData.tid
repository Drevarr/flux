created: 20230506220820000
creator: Drevarr
modified: 20230705163528926
modifier: drevarr
tags: ChartData
title: 202305062208_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Mannse Lee", "Sub Train", "Puny Demon", "Ever Moore", "Hyde En Sikh", "Newtype Khan", "Johoshua", "Lil Red Robin", "Aronorf Xideliesi", "Audrinafa", "Ark Darkness", "Drevarr Moonwillow", "Arriasa", "Miphest\u00f6", "Zaidy Sagemist", "Koralia Danai", "Sygaldry Verdandi", "Bella Sassy", "Jupi Jupi Jupi"];
const professions = ["Scrapper", "Firebrand", "Scourge", "Firebrand", "Chronomancer", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Druid", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[288.3765, 244.0035, 335.6301, 114.552, 181.2513], [91.368, 236.8715, 330.409, 270.4666, 303.709], [86.1748, 292.0496, 138.9531, 65.376, 77.4344, 81.4733, 84.672, 342.051, 17.7095, 24.1283, 66.5254], [352.8, 142.249, 420.2485, 18.7846, 0.0, 334.8642, 20.2684, 4.1933, 174.0554, 53.5952], [187.3923, 246.2674, 184.6845, 62.496, 104.8448, 139.991, 144.9101, 531.2385, 34.2875, 35.2836, 97.4015, 38.6845, 26.2829, 60.2671, 11.9966], [251.1779, 229.9167, 219.7026, 37.08, 127.0015, 178.1875, 149.9904, 593.292, 28.3183, 41.1642, 174.0697, 0.0, 0.0, 105.7697, 46.0233], [418.656, 325.8662, 1408.564, 60.8235, 134.0064, 458.3687, 42.5741, 0.0, 209.312, 45.8364], [0.0, 447.7032, 449.1379, 392.999, 1603.8055, 72.4224, 167.2229, 515.7953, 56.1746, 65.5762, 309.354, 123.0508], [146.6954, 872.3754, 499.3677, 155.52, 423.3765, 565.9853, 120.5971, 956.532, 130.0504, 399.003, 0.0, 55.6358, 169.9188, 54.343], [381.804, 818.496, 499.8067, 1350.5465, 58.5886, 198.5504, 723.7243, 89.6465, 39.7519, 298.5989, 175.462], [172.1164, 1101.0343, 412.8618, 167.832, 321.6154, 319.3075, 342.1958, 1125.035, 8.6002, 94.8737, 496.1062, 0.0, 63.6574, 237.3772, 188.5492], [373.9683, 920.673, 528.3096, 178.56, 255.4878, 596.0909, 232.6061, 1181.539, 84.4739, 80.19, 442.856, 18.9189, 12.505, 191.7473, 94.9445], [317.9955, 784.5845, 470.2659, 166.104, 189.9312, 513.865, 276.8774, 1559.914, 64.4729, 94.5173, 397.3622, 112.8519, 0.0, 203.4571, 105.352], [566.4914, 1417.7358, 450.7581, 230.832, 446.5037, 593.7926, 1227.953, 8.2607, 99.0436, 394.0807], [283.0125, 1086.1929, 530.5482, 251.784, 375.5225, 532.8691, 173.0938, 1529.1395, 4.0455, 61.978, 348.8852, 59.1116, 40.0046, 203.3298], [548.8833, 1439.3691, 503.0454, 127.224, 328.5822, 375.7555, 321.3907, 1644.1655, 0.0, 60.98, 465.8267, 46.6754, 9.6782, 183.4741, 129.7814], [374.7845, 1015.2558, 115.416, 244.2952, 656.6784, 446.5843, 2020.018, 91.801, 126.4151, 676.8881, 36.6206, 26.5169, 409.1416, 137.883], [559.728, 1162.9157, 657.5088, 225.648, 247.9499, 666.6509, 325.1405, 1672.4175, 94.1491, 138.0694, 517.8835, 110.0736, 21.5093, 343.3378, 167.2357], [881.2218, 2156.035, 1263.6897, 360.72, 510.5187, 844.6502, 704.592, 2547.725, 212.0901, 136.1448, 905.4012, 80.1209, 61.3829, 352.9474, 147.3556]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

