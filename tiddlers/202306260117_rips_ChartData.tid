created: 20230626011754000
creator: Drevarr
modified: 20230705163538035
modifier: drevarr
tags: ChartData
title: 202306260117_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Momomeko", "Oo Dads Mad", "Morv\u00e4rth", "Be\u00eb", "Rozaalyna", "Smol Gluvs", "Jacob Pine", "Warrior Constantine", "Arch Wells", "Elonith Requiem", "Rina Of Theros", "Be\u00eb", "Blancooo Padreee", "Grasszanine", "Newtype Khan", "Zayde Sunsabre", "Arcanophage Farra", "Raziel Umbra", "Eibh\u00ebar", "Primal Clone", "Black Raspberry Pie"];
const professions = ["Chronomancer", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4815, 0.5051, 0.0168, 0.2222, 0.0111, 0.6477], [0.0, 0.1818, 0.0, 0.2103, 0.4611, 0.5795, 0.5909, 0.5714, 0.0, 0.2754], [0.1313, 0.0, 0.0952, 0.1611, 0.1932, 0.0909, 0.381, 0.5569, 0.3371, 0.0843, 0.4907, 0.0408, 0.0606, 0.0, 0.09, 0.0669, 0.1552, 0.4769, 0.0921, 0.2892, 0.2449, 0.0, 0.05, 0.3111, 0.0], [0.4259, 0.1212, 0.4091, 0.7024, 0.0, 0.7126, 0.0612, 0.42, 0.1632, 0.431, 0.2462, 0.3026, 0.1928, 0.6327, 0.0, 0.1275, 0.6667, 0.0435], [0.1852, 0.0404, 0.0, 0.0873, 0.2389, 0.3068, 0.6364, 0.2381, 0.0, 0.1856, 0.3371, 0.006, 0.3727, 0.0707, 0.138, 0.0, 0.29, 0.0628, 0.2931, 0.3077, 0.2632, 0.2771, 0.2653, 0.037, 0.0425, 0.4222], [0.3889, 0.2121, 0.1071, 0.3056, 0.2045, 0.5795, 0.3929, 0.0303, 0.2635, 0.1011, 0.1084, 0.118, 0.0625, 0.0808, 0.18, 0.0921, 0.2931, 0.4, 0.3026, 0.2169, 0.5102, 0.0, 0.06, 0.4, 0.0], [0.537, 0.101, 0.0, 0.0794, 0.2167, 0.3295, 0.1932, 0.3333, 0.0, 0.3593, 0.3371, 0.0361, 0.3913, 0.0734, 0.0707, 0.0, 0.44, 0.1004, 0.1379, 0.2308, 0.2763, 0.2169, 0.4082, 0.0, 0.0575, 0.3111], [0.1852, 0.2828, 0.1468, 0.2444, 0.2159, 0.75, 0.3214, 0.0, 0.5389, 0.4607, 0.1687, 0.2547, 0.1223, 0.1414, 0.0, 0.3, 0.1381, 0.3966], [0.7963, 0.0707, 0.0, 0.1984, 0.35, 0.375, 0.0, 0.0, 0.5449, 0.3034, 0.2349, 0.1429, 0.0489, 0.2222, 0.0, 0.23, 0.1172, 0.2414, 0.4615, 0.4605, 0.1807], [0.0303, 0.6766, 0.0225, 0.1867, 0.6398, 0.1685, 0.2525, 0.0612, 0.36, 0.1799, 0.2931, 0.1846, 0.3289, 0.1928, 0.6122, 0.1111, 0.175], [0.3704, 0.2222, 0.0279, 0.1746, 0.0778, 0.3636, 0.4405, 0.0606, 0.2934, 0.3483, 0.3193, 0.4969, 0.1603, 0.0976, 0.0204, 0.49, 0.1339, 0.4138, 0.5077, 0.1184, 0.4337, 0.3673, 0.0741, 0.11, 0.2667, 0.1304], [0.0168, 0.3373, 0.8444, 0.8409, 1.2247, 0.4699, 1.0559, 0.212], [0.6111, 0.0808, 0.0, 0.1389, 0.4167, 0.1023, 0.6932, 0.5476, 0.0, 0.2515, 0.0, 0.1145, 0.6398, 0.1467, 0.1145, 0.0, 0.34, 0.1004, 0.6034, 0.6154, 0.4868, 0.3253, 0.6531, 0.037, 0.07, 0.0], [0.3889, 0.3737, 0.0112, 0.3611, 0.0889, 0.869, 0.0, 0.7365, 0.5393, 0.4217, 0.8385, 0.1332, 0.0067, 0.8, 0.6579, 0.4819, 0.8163, 0.0, 0.1275, 0.6667, 0.0], [0.4074, 0.0808, 0.0223, 0.1667, 0.4056, 0.6591, 0.6705, 0.4167, 0.3034, 0.3494, 0.6646, 0.163, 0.1212, 0.0, 0.34, 0.2469, 0.6897, 0.7538, 0.6711, 0.2651, 0.9184, 0.037, 0.155, 1.0, 0.087], [0.463, 0.4545, 0.2738, 0.1111, 0.1932, 1.0238, 0.3174, 0.3708, 0.3072, 0.5963, 0.1848, 0.0, 0.67, 0.3013, 0.8966, 0.7846, 0.5395, 0.506, 0.5714, 0.0, 0.125, 0.8, 0.0], [0.7222, 0.4242, 0.0, 0.2738, 0.35, 0.8523, 0.8636, 0.75, 0.0, 0.497, 0.4382, 0.3795, 0.1056, 0.1386, 0.1111, 0.72, 0.205, 0.5345, 0.7385, 0.5, 0.506, 1.1429, 0.0, 0.125, 0.7556, 0.0], [0.5, 0.4949, 0.0279, 0.3373, 0.4611, 1.3523, 1.131, 0.1515, 0.4491, 0.5843, 0.4036, 0.9627, 0.0082, 0.0204, 1.14, 0.2803, 0.6552, 0.7846, 0.6711, 0.7959, 0.4444, 0.175, 0.8444, 0.1739], [1.0185, 0.6667, 0.0559, 0.4087, 0.7611, 0.1364, 1.3523, 0.9405, 1.0621, 0.0299, 0.0067, 0.1224, 1.27, 0.3347, 1.3103, 1.3077, 0.6974, 0.8675, 1.2449, 0.5556, 0.29, 1.2667, 0.2609], [0.6481, 0.9899, 0.0112, 0.3254, 0.4389, 0.8977, 0.5795, 1.0357, 0.0, 0.8503, 0.7528, 0.1867, 0.3261, 0.3131, 0.1429, 1.01, 0.3054, 0.9483, 1.4, 1.0132, 1.012, 1.3878, 0.0, 0.18, 1.4, 0.0], [0.463, 0.7475, 0.0559, 0.3254, 0.5889, 0.5568, 0.5568, 1.0714, 0.0, 1.2814, 0.8427, 0.2108, 1.087, 0.2011, 0.165, 0.102, 0.9, 0.3808, 1.1379, 1.0154, 0.3816, 0.6627, 1.0408, 0.037, 0.2375, 0.7778, 0.1304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

