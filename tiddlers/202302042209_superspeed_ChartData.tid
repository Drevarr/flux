created: 20230204220933000
creator: Drevarr
modified: 20230705163518723
modifier: drevarr
tags: ChartData
title: 202302042209_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Bringer", "Vinthry Stormgrave", "Ace Rages", "Grasszanine", "High Sorcer Baradun", "Kosa\u00edr", "Tegan Parker", "Domina Flagbringer", "Manuel Radiador", "Arkintor", "Demon Sekhmet", "Etch\u00e9ry", "Mike The Archmagus", "Xanvias Einzbern", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Tempest", "Berserker", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Berserker", "Berserker", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0003, 0.0007, 0.0, 0.0006, 0.003, 0.0001, 0.0378, 0.0007, 0.0006], [0.0003, 0.0006, 0.0017, 0.001, 0.0007, 0.0006, 0.004, 0.0011, 0.0, 0.001, 0.0005], [0.0006, 0.0007, 0.0028, 0.0011, 0.0008, 0.0005, 0.0033, 0.0003, 0.0, 0.0006, 0.0007], [0.0005, 0.0011, 0.0056, 0.0007, 0.0008, 0.0005, 0.0008, 0.001, 0.0, 0.0006, 0.0007], [0.0005, 0.0009, 0.0044, 0.0017, 0.0017, 0.0009, 0.0042, 0.002, 0.0, 0.0006, 0.0005], [0.0007, 0.0026, 0.0013, 0.005, 0.0028, 0.0, 0.0013, 0.0014], [0.0006, 0.0009, 0.0042, 0.0013, 0.0009, 0.0009, 0.006, 0.0023, 0.0, 0.0009, 0.0009], [0.0007, 0.001, 0.0028, 0.0017, 0.0012, 0.0012, 0.0, 0.0, 0.0, 0.0009, 0.0011], [0.002, 0.0031, 0.0104], [0.0006, 0.0009, 0.0033, 0.0015, 0.0012, 0.001, 0.0079, 0.0024, 0.0, 0.0012, 0.0011], [0.0008, 0.0012, 0.0056, 0.0021, 0.0017, 0.0012, 0.0, 0.0, 0.0, 0.001, 0.0009], [0.0006, 0.0014, 0.0056, 0.0021, 0.0021, 0.0012, 0.0045, 0.0022, 0.0, 0.0013, 0.0009], [0.001, 0.0017, 0.005, 0.0021, 0.0028, 0.0013, 0.008, 0.0029, 0.0345, 0.0014, 0.0012], [0.0013, 0.0018, 0.0052, 0.0022, 0.0024, 0.0018, 0.0075, 0.0022, 0.0629, 0.0012, 0.0014], [0.0013, 0.0017, 0.0075, 0.0029, 0.0038, 0.0019, 0.0066, 0.0017, 0.047, 0.0025, 0.0019], [0.002, 0.0032, 0.0131, 0.0052, 0.0043, 0.0028, 0.0136, 0.0056, 0.0, 0.0027, 0.0029]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

