created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Cosmedicz", "Gavann", "Sub Train", "Sygaldry Verdandi", "Tirluka", "Tootsie Pop Rocks", "Cat Wigglebooty", "My Birthday Girl", "Gestalia Yesteryear", "Klengah", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Druid", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[451.6416, 138.0672, 578.1182], [10.1103, 9.5155, 40.0207, 38.9963, 30.0808, 120.0186, 30.2155, 22.7113, 88.8858, 74.9549, 37.51, 16.3968, 195.3125, 9.8739, 13.8897, 80.1605, 65.9175, 12.2125, 6.8908, 15.1469, 21.1392, 53.5123, 135.0455, 0.0, 0.0, 68.6971, 51.2711, 97.7388, 26.5933, 12.838, 80.5392, 11.1053], [28.8435, 18.5024, 35.4446, 9.1824, 53.8784, 13.5456, 63.5904, 55.9496, 16.726, 153.4744, 14.125, 6.138, 24.9024, 210.6716, 0.0, 17.0775, 30.0909, 34.2461, 36.3968, 15.8102, 17.7744, 15.4154, 23.712, 36.9533, 104.4455, 0.0, 0.0, 23.9134, 58.1962, 16.9929, 59.0675, 78.7136, 33.761, 199.092, 24.1459], [37.4865, 22.6938, 65.9574, 17.75, 102.3376, 38.0256, 25.9992, 73.6036, 13.3294, 94.829, 80.6333, 48.224, 45.8688, 114.3908, 20.0997, 72.1772, 34.06, 64.2509, 21.9282, 74.2403, 79.9876, 26.208, 93.3082, 145.5672, 17.3495, 0.0, 43.4467, 11.5074, 63.1468, 40.329, 83.496, 147.8808, 9.6768], [0.0, 56.3629, 67.2403, 13.8048, 111.9427, 334.9591, 40.7952, 172.1837, 147.6453, 242.6338, 139.8656, 128.723, 308.3952, 81.7459], [86.5104, 81.9392, 10.8986, 132.6258, 69.5472, 97.8792, 119.9358, 464.7076, 106.0474, 61.18, 193.2785, 91.344, 5.5104, 367.4717, 25.4196, 64.3167, 0.0, 170.7341, 105.938, 66.1517, 0.0, 146.8205, 100.1981, 0.0, 0.0, 219.7186, 27.7932, 104.5376, 143.4406, 66.542, 132.7656, 313.0214], [124.62, 61.3034, 37.2395, 135.2768, 210.3694, 185.9664, 181.3734, 340.7222, 80.3984, 127.5166, 365.9729, 28.138, 3.3792, 608.403, 82.0962, 40.7762, 60.489, 93.4285, 151.179, 19.8867, 0.0, 16.6848, 310.3805, 159.6606, 0.0, 0.0, 226.8528, 0.0, 112.968, 195.1846], [55.9785, 63.6067, 81.8687, 188.2196, 160.3001, 106.1616, 199.8378, 291.7663, 118.2384, 282.6516, 364.6243, 63.008, 0.0, 809.2172, 98.0922, 106.957, 87.2922, 133.791, 0.0, 0.0, 73.2096, 163.199, 303.1042, 278.9158, 139.846, 291.024, 0.0, 184.6426], [347.314, 363.4368, 1751.6228, 308.9682, 208.4665, 422.7716, 607.0144, 349.5954, 298.5584, 261.0624, 238.6848, 868.6735, 143.4674, 0.0, 219.7829, 870.7781, 518.9771, 218.0495, 351.0438, 269.402, 1189.0248, 0.0, 523.4688], [122.3085, 101.6877, 118.3321, 875.0539, 793.9609, 514.7736, 894.8196, 218.9096, 62.0568, 1864.242, 476.9856, 216.194, 301.44, 3608.4668, 0.0, 25.7094, 24.3184, 0.0, 469.609, 304.0968, 292.4275, 137.7954, 111.84, 480.9341, 1871.5236, 0.0, 1361.2771, 262.5238, 391.2273, 209.0458, 248.234, 961.9584, 0.0, 565.079], [362.604, 363.9875, 332.8271, 854.3071, 637.3128, 485.316, 606.7584, 1447.7638, 296.4956, 971.9754, 892.8574, 345.378, 81.1776, 3251.5402, 41.2589, 277.4007, 266.0281, 352.4803, 556.0589, 307.7998, 318.239, 20.4281, 25.2096, 576.9043, 860.4684, 75.0871, 0.0, 80.2917, 727.1314, 195.4057, 335.7495, 802.3142, 227.458, 1162.7424, 10.1783, 614.1082], [131.4237, 171.1756, 853.4619, 871.7547, 662.388, 721.7676, 1235.8479, 273.7476, 622.6376, 564.149, 172.502, 175.0272, 3505.5381, 0.0, 437.8878, 346.4343, 495.4514, 793.3299, 504.1232, 154.8691, 34.7904, 942.2861, 1458.3752, 1045.0459, 369.5033, 500.1161, 1019.5763, 133.035, 1340.628, 385.2749]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

