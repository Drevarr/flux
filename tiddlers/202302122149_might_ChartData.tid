created: 20230212214943000
creator: Drevarr
modified: 20230705163519129
modifier: drevarr
tags: ChartData
title: 202302122149_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Arka\u00f1", "Gangsta Mech", "Sygaldry Verdandi", "Ark Darkness", "Zaylen Harker", "Primal Shield", "Tegan Parker", "Blanco Padre Guard", "Reverve Mk V", "Veggie Mac", "Bella Sassy", "High Sorcer Baradun", "Venomina The Fierce", "Newtype Khan"];
const professions = ["Firebrand", "Chronomancer", "Engineer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Herald", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.2647, 31.0627, 7.6334, 5.0794, 5.032, 0.0, 3.5446, 1.3382], [7.6507, 19.7995, 19.0836, 0.0, 0.0, 0.0, 4.7318, 9.3677], [2.8552, 0.0, 36.761, 6.0439, 19.795], [9.9515, 16.717, 11.7515, 3.3455, 10.619, 0.0, 8.463, 4.8806], [4.8787, 26.5574, 25.3109, 0.928, 11.433], [3.2987, 26.9131, 21.695, 3.138, 2.183, 4.8312, 4.7827, 10.0762], [4.9896, 26.7946, 22.3981, 0.0, 5.846, 0.0, 9.4298, 12.8314], [3.2432, 60.347, 12.6554, 0.0, 0.629, 0.0, 3.7312, 6.1402], [8.8981, 46.1198, 6.3277, 5.5189, 5.772, 0.0, 13.5341, 2.4403], [5.2945, 42.8002, 25.0096, 3.4554, 8.029, 6.6033, 5.3085, 10.0762], [0.0, 78.4867, 9.2405, 0.0, 4.551, 0.0, 34.1066, 15.7046], [13.8323, 58.4501, 40.8791, 1.0867, 12.432, 0.7722, 6.5466, 8.4624], [23.6729, 33.4339, 54.7398, 0.259, 0.0, 11.0918, 38.5334], [0.0, 103.6214, 130.8733, 4.9695, 28.453, 15.9291, 18.0794, 56.4422], [39.6396, 186.732, 167.0317, 15.58, 10.138, 14.2659, 30.1718, 99.6595]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

