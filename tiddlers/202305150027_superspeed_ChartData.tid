created: 20230515002743000
creator: Drevarr
modified: 20230705163530112
modifier: drevarr
tags: ChartData
title: 202305150027_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuuka Chou", "Roxy Willowmoon", "Binkety Bonk", "Tegan Parker", "Cerys Fireblade", "W V N D E R F O X", "Miphest\u00f6", "Tika Mi", "Tootsie Pop Rocks", "Artakama Nahid", "Venomina The Fierce", "Blancooo Padreee", "Ikong Winnie Ilocos", "Xanvias Einzbern", "John John"];
const professions = ["Tempest", "Scrapper", "Scrapper", "Tempest", "Berserker", "Berserker", "Tempest", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Berserker", "Holosmith"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.769, 0.392, 0.614, 0.463, 0.327, 0.488, 0.542], [1.497, 0.33, 0.325, 0.364, 0.45, 0.262, 0.42], [2.702, 1.018, 1.19, 1.187, 0.129, 1.224, 0.54], [0.248, 0.67, 0.288, 0.302, 0.392, 0.839, 0.772, 0.36, 0.649, 0.722, 0, 0.49, 0], [1.419, 0.138, 0.622, 0.845, 0.326, 0.654, 0.847, 0, 0.097, 0, 0.423, 0, 0.408, 1.114], [0.646, 1.237, 0.211, 0.48, 0.852, 1.221], [0.856, 0.886, 0.513, 0.402, 0.196, 0.394, 0.524, 0.361, 0.175, 0.406, 0.683, 0.735, 0.542], [0.429, 0.494, 0.796, 0.38, 0.625, 0.524, 0.42, 0, 0.722, 0.879, 0.361, 0.969, 0.491, 0.542], [1.767, 0.599, 0.697, 0.777, 0.685, 0.426, 1.048, 0, 1.126, 0.794, 0.723, 0.815, 0.61, 0.533], [1.283, 0.763, 0.85, 0.758, 0.73, 0.801, 0.42, 0, 0.579, 0.72, 0.88, 0.605, 0.98, 0.731, 1.081], [2.49, 1.101, 0.845, 0.54, 0.803, 0.219, 0.699, 1.071, 0, 0.534, 1.026, 0.823, 1.089, 0.51, 0.901], [0.715, 1.064, 1.206, 0.899, 0.51, 0.437, 1.318, 0, 0.602, 1.026, 0.209, 1.128, 1.223, 0.901], [1.673, 1.569, 0.698, 1.415, 0.788, 1.27, 0.324, 0.386, 1.086, 1.741, 1.123, 1.148, 0.734, 0.949], [2.145, 1.375, 1.348, 1.056, 1.271, 0.437, 0.601, 1.729, 2.572, 1.332, 1.172, 1.343, 1.29, 0.815, 0.903], [0.107, 0.371, 2.308, 1.017, 0.217, 2.813, 0, 2.393, 3.498, 0.156, 2.716, 2.985, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

