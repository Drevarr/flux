created: 20230424220408000
creator: Drevarr
modified: 20230705163526654
modifier: drevarr
tags: ChartData
title: 202304242204_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Sassy Daddy Demon", "Raziel Umbra", "Seren Nightroad", "Primal Clone", "Kiloak", "Koralia Danai", "Lord Erin The Wise", "Sygaldry Verdandi", "Mac Aaroni", "Mistwalker Caelon", "Tegan Parker", "Kmpek", "Bella Sassy", "Zaylen Harker", "Rudjulin", "Xyntharos", "Smol Gluvs", "Mike The Archmagus", "Tika Rucola", "Sumatra Satyricon", "Arriasa", "Etch\u00e9ry", "Fribble Bibble", "Sub Train", "Tribal S", "Blancooo Padreee", "Inedible Plant", "Rina Of Theros", "Cyclotechnist Farra", "Gavann", "Daddys Lil Orchid", "Ryvalia Fazebringer", "Smol Bee", "Zefirokai", "Sp\u00edcy Cheese", "Newtype Khan", "Cat Wigglebooty", "Arka\u00f1tor", "Grasszanine", "Leana Deeb", "Cedryn X", "Panther B Me", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Eibh\u00ebar", "Zadie Miststep", "Xanvias Tsoli", "Black Raspberry Pie", "High Sorcer Baradun", "Solo Bloodborn"];
const professions = ["Vindicator", "Chronomancer", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Weaver", "Firebrand", "Tempest", "Vindicator", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Scourge", "Weaver", "Chronomancer", "Soulbeast", "Druid", "Berserker", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Vindicator", "Scourge", "Scrapper", "Firebrand", "Vindicator", "Chronomancer", "Vindicator", "Tempest", "Berserker", "Spellbreaker", "Scrapper", "Scrapper", "Spellbreaker", "Weaver", "Berserker", "Scourge", "Scrapper", "Scrapper", "Chronomancer", "Tempest", "Holosmith", "Chronomancer", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0021, 0.0, 0.0, 0.0206, 0.0179, 0.1379, 0.0, 0.0625, 0.0704, 0.0267, 0.0222], [0.1867, 0.0111, 0.0482, 0.04], [0.0124, 0.0, 0.0, 0.0722, 0.0714, 0.0345, 0.0345, 0.0781], [0.0, 0.0, 0.0455, 0.0103, 0.0536, 0.0, 0.0, 0.1719, 0.0141, 0.08, 0.0, 0.012, 0.008], [0.0021, 0.0, 0.0455, 0.0309, 0.1786, 0.0, 0.0312, 0.0141, 0.0, 0.0, 0.0361, 0.032], [0.0041, 0.0, 0.1061, 0.0309, 0.0536, 0.0, 0.0, 0.0469, 0.0563, 0.0267, 0.0556, 0.0241, 0.0], [0.0021, 0.0, 0.0, 0.0206, 0.0893, 0.0, 0.0, 0.0156, 0.0, 0.0667, 0.0778, 0.1325], [0.0083, 0.0, 0.0606, 0.0309, 0.0893, 0.0, 0.0, 0.0781, 0.0845, 0.0267, 0.0, 0.0602, 0.024], [0.0083, 0.0, 0.0455, 0.0206, 0.0714, 0.0, 0.0, 0.0, 0.1408, 0.12, 0.0111, 0.0361, 0.016], [0.0021, 0.0, 0.1061, 0.0309, 0.0179, 0.0345, 0.0, 0.0469, 0.0141, 0.2267, 0.0222, 0.012, 0.016], [0.0083, 0.0, 0.0303, 0.0619, 0.125, 0.0345, 0.0, 0.0469, 0.0141, 0.04, 0.0111, 0.0843, 0.032], [0.0722, 0.1607, 0.0, 0.0, 0.0625, 0.0563, 0.12, 0.0222, 0.0241, 0.048], [0.0145, 0.0, 0.0303, 0.0619, 0.1429, 0.0345, 0.0, 0.0625, 0.0563, 0.0667, 0.0222, 0.0361, 0.016], [0.0041, 0.0, 0.0909, 0.0515, 0.2143, 0.0, 0.0, 0.0312, 0.0704, 0.08, 0.0333, 0.0241, 0.008], [0.1964, 0.0345, 0.0, 0.1562, 0.0986, 0.0667, 0.0222, 0.0482, 0.032], [0.0104, 0.0, 0.1364, 0.0412, 0.0536, 0.0, 0.0172, 0.1094, 0.0845, 0.04, 0.0, 0.0241, 0.04], [0.0104, 0.0, 0.0455, 0.0412, 0.2857, 0.0, 0.0, 0.0, 0.0, 0.1333, 0.0333, 0.0361, 0.008], [0.0124, 0.0, 0.0303, 0.0515, 0.1071, 0.0, 0.0, 0.0781, 0.0423, 0.04, 0.1111, 0.0361, 0.032], [0.0145, 0.0, 0.0909, 0.0619, 0.0714, 0.0345, 0.0, 0.0469, 0.0, 0.16, 0.0333, 0.0361, 0.024], [0.0041, 0.0, 0.0303, 0.0619, 0.0, 0.0625, 0.0, 0.3467, 0.0111, 0.0723, 0.008], [0.0207, 0.0, 0.0152, 0.0206, 0.0536, 0.0, 0.0, 0.0781, 0.0845, 0.1467, 0.0, 0.0723, 0.04], [0.0062, 0.0, 0.0606, 0.1031, 0.0536, 0.0, 0.0, 0.0423, 0.0667, 0.0444, 0.0843, 0.08], [0.0062, 0.0, 0.0152, 0.0515, 0.0893, 0.0, 0.0, 0.1094, 0.0845, 0.12, 0.0667, 0.0964, 0.016], [0.0248, 0.0, 0.0455, 0.0928, 0.0357, 0.0, 0.0, 0.0625, 0.0704, 0.24], [0.0041, 0.0, 0.0909, 0.0722, 0.3036, 0.0, 0.0, 0.0, 0.0141, 0.1867, 0.0, 0.0482, 0.04], [0.0104, 0.0, 0.0758, 0.0309, 0.1429, 0.0345, 0.0, 0.0625, 0.0704, 0.24, 0.0, 0.0361, 0.064], [0.0062, 0.0, 0.0303, 0.0515, 0.2321, 0.0, 0.0862, 0.1094, 0.0704, 0.16, 0.0, 0.0723, 0.016], [0.0145, 0.0, 0.0909, 0.0515, 0.25, 0.0, 0.0, 0.0625, 0.0423, 0.1733, 0.0111, 0.0602, 0.024], [0.0041, 0.0, 0.0303, 0.1753, 0.0714, 0.0345, 0.1094, 0.0845, 0.0667, 0.0556, 0.0964, 0.04], [0.0207, 0.0, 0.0455, 0.1429, 0.0, 0.0, 0.1406, 0.0141, 0.1333, 0.1, 0.012, 0.088], [0.0311, 0.0, 0.0722, 0.1964, 0.0, 0.0, 0.0312, 0.0563, 0.08, 0.0556, 0.1325, 0.04], [0.0104, 0.0, 0.0, 0.0619, 0.1786, 0.0345, 0.0, 0.1094, 0.0986, 0.1333, 0.0222, 0.1566, 0.048], [0.0021, 0.0, 0.1061, 0.0412, 0.2321, 0.0, 0.0, 0.0469, 0.1268, 0.16, 0.0111, 0.0602, 0.104], [0.25, 0.0, 0.0, 0.1094, 0.0, 0.2533, 0.0111, 0.3373, 0.016], [0.0104, 0.0, 0.0606, 0.268, 0.2679, 0.0, 0.0, 0.0469, 0.0, 0.12, 0.0, 0.08], [0.0083, 0.0, 0.0152, 0.0515, 0.4107, 0.0, 0.0, 0.0938, 0.0563, 0.1333, 0.0667, 0.0361, 0.096], [0.0083, 0.0, 0.0455, 0.0206, 0.1071, 0.0, 0.0, 0.2188, 0.0704, 0.1333, 0.0, 0.253, 0.08], [0.0228, 0.0, 0.0909, 0.0825, 0.0536, 0.0345, 0.0, 0.0781, 0.0563, 0.24, 0.0, 0.0843, 0.104], [0.0145, 0.0, 0.0152, 0.0825, 0.3036, 0.0, 0.0172, 0.1875, 0.0563, 0.1333, 0.0222, 0.1084, 0.04], [0.0062, 0.0, 0.0303, 0.0619, 0.3036, 0.0, 0.0, 0.3125, 0.0704, 0.1333, 0.0444, 0.1205, 0.008], [0.0412, 0.4286, 0.0345, 0.0, 0.2031, 0.0141, 0.1867, 0.1222, 0.0241, 0.072], [0.0083, 0.0, 0.1818, 0.0515, 0.125, 0.0345, 0.0, 0.1562, 0.2113, 0.16, 0.0, 0.1928, 0.008], [0.0145, 0.0, 0.1212, 0.0928, 0.1786, 0.0345, 0.0, 0.0469, 0.2254, 0.1333, 0.0556, 0.1687, 0.024], [0.0124, 0.0, 0.0758, 0.1237, 0.4821, 0.0, 0.0, 0.0938, 0.0986, 0.0933, 0.1, 0.0241, 0.04], [0.0145, 0.0, 0.1667, 0.1237, 0.125, 0.0, 0.0, 0.25, 0.0704, 0.12, 0.0778, 0.0723, 0.056], [0.0083, 0.0, 0.0455, 0.0412, 0.2679, 0.0, 0.0, 0.0312, 0.0845, 0.12, 0.0444, 0.3133, 0.112], [0.0062, 0.0, 0.1667, 0.0412, 0.3036, 0.069, 0.0, 0.1875, 0.169, 0.0667, 0.1111, 0.0843, 0.04], [0.0021, 0.0, 0.0909, 0.0928, 0.2857, 0.0, 0.0, 0.2656, 0.0282, 0.3067, 0.0667, 0.0964, 0.056], [0.0, 0.0, 0.197, 0.1237, 0.4286, 0.0, 0.0, 0.1562, 0.1127, 0.0667, 0.0889, 0.241, 0.04], [0.0062, 0.0, 0.2273, 0.1649, 0.3393, 0.0, 0.0, 0.2031, 0.1408, 0.3467, 0.0667, 0.0964, 0.216]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

