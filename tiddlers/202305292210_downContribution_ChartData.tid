created: 20230529221000000
creator: Drevarr
modified: 20230705163532196
modifier: drevarr
tags: ChartData
title: 202305292210_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Rx Medic", "Riann Swordbreak", "Sire Nighthawk", "Smol Gluvs", "Legacy Of Mathus", "Rosie Sunray", "Rozaalyna", "Tootsie Pop Rocks", "Smol Bee", "Inedible Plant", "Lord Erin The Wise", "Jeckyll Mbs", "No Reserv\u00e9", "Sister Elonith", "Kary\u00edna", "Mistwalker Cael", "Cyclotechnist Farra", "Xanvias Einzbern"];
const professions = ["Firebrand", "Berserker", "Vindicator", "Scourge", "Berserker", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Weaver", "Berserker", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.48, 43.2311, 44.9565, 0.0, 116.6975, 228.8793, 354.5505, 0.0, 131.532], [0.0, 135.3659, 211.5524, 243.8857, 422.52], [57.5172, 539.5963, 191.3077, 102.3736, 110.0256, 38.7045, 106.8862, 103.3246, 339.0143, 260.196], [0.0, 109.2661, 105.0652, 0.0, 177.4136, 0.0, 369.5872, 312.4538, 52.1379, 66.7749, 102.4545, 61.3577, 125.6126, 206.2857, 126.848], [0.0, 233.5294, 55.2609, 39.2778, 309.858, 98.2241, 630.2752, 575.6846, 188.8448], [360.5172, 417.1927, 290.9154, 113.454, 281.849, 123.0682, 61.7073, 34.2068, 270.4143, 284.896], [0.0, 151.8796, 42.4783, 95.5556, 162.9753, 15.6724, 40.5505, 459.0231, 118.9828, 123.5128, 99.8182, 49.4797, 194.8403, 154.9571, 204.298], [0.0, 119.4314, 0.0, 0.0, 126.2716, 0.0, 466.7982, 30.2077, 253.931, 113.8604, 292.9545, 97.8211, 222.1283, 285.4714, 186.748], [0.0, 44.2283, 305.4783, 55.1389, 146.2778, 0.0, 450.8716, 309.7308, 240.1322, 238.6496, 201.6136, 128.7886, 0.2592, 491.9714, 315.67], [0.5733, 62.0672, 225.4565, 220.1667, 194.5309, 79.5, 651.4679, 346.6538, 3.0517, 97.8689, 163.75, 144.4065, 207.5942, 443.4857, 275.152], [0.0, 224.4916, 319.7174, 0.0, 177.2654, 118.6207, 213.2294, 714.3231, 78.1322, 132.9858, 123.7045, 10.1463, 259.8691, 260.3571, 122.15], [77.0533, 155.3782, 64.3043, 0.0, 254.2593, 148.5, 403.6606, 860.3692, 0.0, 163.151, 106.2045, 0.0, 268.3298, 272.2429, 164.224], [106.8277, 0.0, 134.4167, 217.1667, 200.1897, 655.7523, 860.8846, 43.2874, 198.8034, 23.4545, 87.2927, 182.6361, 384.0857, 244.094], [249.3736, 417.9459, 202.5227, 23.3008, 252.8927, 707.6714, 547.676], [0.0, 195.4818, 29.0435, 0.0, 242.7099, 172.8103, 779.8624, 530.1769, 108.2471, 71.7977, 74.4318, 104.878, 140.3168, 651.2143, 269.59], [0.0, 239.042, 343.0435, 84.0278, 666.4259, 92.0517, 792.9908, 838.7385, 186.2069, 295.9772, 0.6136, 136.3171, 67.3508, 932.4714, 387.762], [0.0, 261.6821, 66.5, 105.7222, 128.8704, 65.8966, 748.9908, 334.9615, 336.7529, 177.5954, 36.6136, 334.8618, 410.8194, 376.8143, 534.852], [0.0, 395.6204, 139.3696, 75.3889, 756.0309, 0.0, 1481.6055, 1601.7769, 425.1322, 391.7977, 0.0, 293.439, 512.1806, 1054.2143, 797.702]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

