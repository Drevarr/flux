created: 20230320222849000
creator: Drevarr
modified: 20230705163522601
modifier: drevarr
tags: ChartData
title: 202303202228_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Raelyn Sunray", "Legacy Of Mathus", "Avanda Corone", "Demon Sekhmet", "Ark Darkness", "Zaylen Harker", "Lord Erin The Wise", "Mistwalker Caelon", "Stoic Rapidfire", "High Sorcer Baradun", "Whose Guardian", "Xyntharos", "Seren Nightroad", "Tribal S", "Jeckyll Mbs", "Cerys Fireblade", "Viral Marketing", "Misaki Amakase", "Venomina The Siren", "Primal Clone", "Black Raspberry Pie", "Cat Wigglebooty", "Zadie Miststep", "Smol Daddy Tika", "Johosh The Great", "Solus Sanctus", "Bella Sassy", "Ryvalia Fazebringer", "Xanvias Einzbern", "Dark Sidiuz", "Eibh\u00ebar", "Fribble Bibble", "Rina Of Theros", "Drevarr Moonwillow", "Rozaalyna", "Nazhul Naxxremis", "The X E N", "Be\u00eb", "\u00c1rkantor", "Smol Gluvs", "Newtype Khan", "Tootsie Pop Rocks"];
const professions = ["Firebrand", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Weaver", "Vindicator", "Druid", "Tempest", "Dragonhunter", "Vindicator", "Scourge", "Druid", "Spellbreaker", "Berserker", "Firebrand", "Vindicator", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Scourge", "Chronomancer", "Scrapper", "Scourge", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scourge", "Vindicator", "Scourge", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19333, 2113, 7602, 0, 0, 1556, 3303, 0, 8119, 238, 2203, 0, 4838], [2357, 0, 2465, 1186, 2496, 1109, 398, 18636, 0, 0, 7607, 8054, 0, 0, 2165, 4292], [4429, 0, 476, 3615, 14644, 1555, 5103, 809, 1327, 480, 13520, 3781, 0, 0, 4787], [0, 5762, 9196, 0, 9967, 0, 1296, 1201, 18090, 6664, 2297, 0, 3628], [3848, 1594, 0, 3580, 31429, 7372, 1109, 0, 0, 8861, 8843], [0, 0, 248, 1246, 0, 859, 24194, 0, 0, 0, 0, 0, 6399, 0, 8285, 0, 4065, 0, 3192, 9362, 3192, 0, 0, 7494], [0, 2734, 3466, 2081, 1509, 0, 3155, 13881, 2617, 1119, 560, 0, 0, 10893, 0, 53, 0, 0, 3885, 16920, 5817], [1109, 3532, 1153, 3405, 1248, 0, 0, 8924, 1328, 2662, 0, 0, 6688, 7390, 2352, 1737, 1035, 224, 0, 14930, 2805, 3731, 0, 0, 5281], [653, 0, 4764, 4340, 1109, 1109, 3841, 13682, 2039, 5127, 0, 0, 1109, 3473, 305, 446, 4622, 1109, 11307, 2235, 4910, 702, 662, 2301], [2949, 0, 5044, 1248, 0, 28500, 1237, 974, 0, 0, 0, 9018, 0, 6280, 0, 1908, 1315, 3260, 5965, 942, 0, 0, 1248], [0, 655, 3258, 0, 2358, 0, 0, 21378, 2313, 1921, 0, 0, 1366, 11482, 0, 3682, 747, 2268, 2776, 13645, 6068, 4450, 0, 0, 1109], [9866, 0, 238, 0, 0, 14, 1736, 24077, 272, 2308, 0, 3704, 5673, 1119, 8083, 765, 3475, 0, 8356, 2218, 5429, 0, 0, 4173], [9389, 5714, 5764, 5859, 7187, 2357, 6904, 31918, 7572], [2167, 0, 0, 2428, 1109, 0, 2359, 18201, 2151, 2226, 0, 0, 9578, 1304, 0, 4464, 0, 1389, 5671, 11627, 6582, 8645, 0, 684, 2089], [15300, 0, 2616, 1873, 7547, 3971, 31275, 11122, 1249, 0, 1048, 9792], [0, 2167, 0, 0, 0, 28869, 2901, 0, 0, 0, 0, 7091, 0, 0, 1059, 6041, 4626, 12106, 3791, 4374, 0, 1248, 12079], [35795, 0, 1113, 346, 0, 2299, 4270, 0, 8515, 737, 3519, 0, 10801, 7137, 8331, 0, 4832], [9832, 0, 0, 6623, 12217, 644, 2575, 2945, 4864, 3771, 13814, 2790, 11408, 0, 1032, 15776], [33147, 0, 2238, 0, 0, 4886, 8361, 2485, 2492, 0, 1169, 831, 6395, 4681, 9714, 0, 12058], [538, 967, 2476, 0, 0, 2349, 41510, 1048, 2269, 0, 0, 876, 7262, 0, 8090, 718, 4396, 1250, 7974, 2496, 3086, 263, 2465], [2267, 0, 2319, 3713, 2357, 0, 0, 23108, 2682, 4960, 631, 0, 0, 8188, 0, 3757, 0, 1248, 4856, 14841, 1252, 10374, 0, 0, 3579], [0, 728, 5241, 3391, 2403, 4062, 546, 43347, 1769, 11601, 0, 10486, 6591, 0], [2004, 0, 1924, 4959, 2218, 1109, 3528, 38888, 0, 2238, 0, 0, 2228, 6544, 0, 10485, 0, 2315, 3201, 11005, 6912, 1109, 0, 0, 2418], [5472, 2620, 1098, 2951, 5450, 3156, 3960, 31143, 974, 114, 0, 0, 3336, 11789, 0, 0, 0, 3878, 1203, 15106, 10886, 1143, 0, 0, 1119], [2218, 625, 2180, 0, 2997, 3155, 0, 33375, 2013, 928, 0, 0, 11281, 6610, 267, 6720, 281, 7989, 1745, 8474, 10260, 3350, 0, 1064], [0, 2413, 4703, 2341, 1238, 0, 2633, 36337, 2136, 1109, 0, 0, 5840, 6258, 0, 10971, 0, 3035, 3047, 6071, 3512, 4315, 0, 9651], [0, 0, 2507, 1098, 4663, 0, 0, 25418, 571, 1248, 0, 0, 3922, 14066, 0, 9938, 369, 5058, 1597, 19411, 6338, 4448, 0, 0, 5468], [3918, 0, 0, 7759, 2138, 0, 1690, 23573, 4381, 3347, 0, 0, 5491, 11594, 0, 12654, 403, 4642, 2069, 11385, 2980, 1443, 274, 7764], [8199, 1308, 8925, 0, 3420, 3946, 2069, 26383, 6294, 0, 0, 0, 6421, 13363, 0, 8344, 3492, 4867, 2039, 3883, 2228, 5588, 0, 671, 479], [0, 7063, 4915, 379, 1248, 19279, 8589, 0, 0, 0, 5422, 14722, 0, 0, 489, 6305, 2170, 18278, 16913, 6359], [0, 0, 4037, 1304, 1304, 0, 82, 27618, 8222, 3567, 0, 0, 9409, 20681, 0, 5032, 0, 8180, 2887, 9893, 7783, 5118, 0, 0, 11916], [3885, 2005, 2246, 5310, 3904, 72, 2830, 36299, 5225, 7139, 0, 0, 5992, 8166, 0, 12816, 2893, 8642, 326, 14052, 9277, 0], [3474, 0, 3434, 2223, 1517, 0, 4201, 58780, 2720, 3800, 1801, 0, 10365, 11036, 0, 15547, 0, 2181, 1109, 18734, 9830, 8444, 0, 764, 5167], [3666, 815, 1136, 3370, 4515, 239, 4026, 44767, 410, 7752, 0, 1705, 3116, 20616, 427, 13217, 222, 11016, 1865, 16605, 4739, 7692, 0, 0, 14073], [0, 4674, 1814, 4674, 4085, 0, 770, 43300, 2569, 1387, 0, 14256, 19742, 0, 10956, 427, 10166, 6971, 33609, 8326], [0, 4722, 9041, 3508, 0, 4722, 31568, 8129, 0, 0, 9682, 20215, 0, 12879, 2492, 3706, 3217, 38705, 4430, 8805, 0, 0, 4898], [10413, 3214, 23349, 8399, 61938, 28995, 28178, 1971, 10514], [7183, 197, 3641, 6226, 2211, 3813, 51171, 1575, 9514, 0, 3142, 10773, 20970, 0, 19109, 1099, 7126, 3471, 7334, 18639, 10866, 0, 755, 9740], [5823, 692, 2863, 870, 2514, 730, 267, 90582, 4723, 6878, 0, 238, 9696, 16378, 0, 14560, 78, 1869, 981, 19197, 14679, 6415, 239, 14969], [0, 3713, 1919, 3709, 1114, 3474, 67303, 1438, 12918, 278, 0, 2786, 21572, 1544, 15194, 2976, 8076, 5758, 20067, 14817, 15469, 0, 1248, 10390], [7876, 1714, 4321, 3155, 4260, 5812, 2429, 66657, 6898, 3155, 3086, 0, 12390, 11569, 0, 11179, 2566, 9444, 3491, 27324, 14125, 5678, 0, 897, 12161], [765, 4294, 19221, 17082, 8668, 13678, 163356, 12542, 14257, 1364, 0, 27136, 26252, 1790, 21341, 0, 20806, 9025, 43824, 15093, 1119]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

