created: 20230625215204000
creator: Drevarr
modified: 20230705163536612
modifier: drevarr
tags: ChartData
title: 202306252152_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Rozaalyna", "Pale Pam", "Mistwalker Cael", "Lord Erin The Wise", "My Birthday Girl", "Oo Dads Mad", "Miphest\u00f6", "Xyntharos", "Zayde Sunsabre", "Decidus Borleaf", "Arriasa", "Xanvias Tsolice", "Demon Maddx", "Newtype Khan", "Irish Necroman", "Elon The Mender", "Johosh The Mighty", "Drumina", "Fribble Bibble", "Tribal S", "Arcanophage Farra", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Tempest", "Reaper", "Druid", "Vindicator", "Weaver", "Scrapper", "Spellbreaker", "Tempest", "Vindicator", "Berserker", "Herald", "Druid", "Weaver", "Reaper", "Spellbreaker", "Reaper", "Druid", "Berserker", "Druid", "Scrapper", "Druid", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.7142, 20.4792, 36.3874, 14.6584, 12.2304, 26.4328, 0.0, 30.7774, 66.816, 15.3115, 15.3672, 29.9228, 34.6522, 0.0, 30.2673, 0.0], [22.5365, 94.2416, 70.1938, 9.4, 7.2202, 39.6988, 102.144, 49.4586, 14.8656, 80.9813], [225.984, 56.1119, 126.8136, 95.4589, 67.5108], [6.2505, 55.5312, 30.9589, 92.8147, 38.5694, 0.0, 26.9404, 3.2458, 28.9252, 91.296, 42.7447, 36.708, 45.9488, 24.7032, 80.3752, 88.7145, 39.8429, 0.0], [27.692, 81.8616, 48.2972, 165.1984, 94.6982, 40.138, 14.5507, 57.6652, 179.232, 0.0, 26.1288, 76.1426, 21.5053], [3.9956, 106.4256, 63.4312, 134.1305, 74.387, 12.2261, 30.7756, 0.0, 58.3752, 123.648, 31.3522, 43.092, 54.6585, 31.8096, 0.0, 57.4731, 33.264, 6.0278], [39.4018, 130.3272, 129.9879, 164.6795, 83.8656, 30.0674, 33.1068, 23.5262, 82.7933, 153.6, 37.0028], [0.0, 43.6632, 40.9934, 85.5503, 78.7987, 25.474, 3.047, 51.5529, 75.072, 31.7471, 93.2064, 100.2202, 56.4451, 119.3307, 155.9288], [44.7028, 77.8872, 60.6018, 112.7915, 54.8621, 9.7863, 27.5984, 20.2032, 30.0365, 103.584, 37.6408, 59.1432, 59.6134, 0.1523, 62.0247, 82.3827, 73.2547, 56.6352], [27.5338, 48.1344, 53.0019, 48.9044, 73.0766, 44.7603, 56.9264, 59.5939, 43.3415, 110.016, 11.0279, 61.2864, 37.8584, 49.271, 76.0235, 91.9848, 134.3866, 52.1309], [346.8769, 413.7923, 338.184], [24.8041, 109.7928, 27.9321, 161.6311, 73.1203, 33.4132, 40.0252, 0.0, 25.8382, 83.04, 46.5118, 82.491, 28.2564, 78.1731, 70.3454, 137.4173, 92.3386], [92.2144, 72.864, 62.3455, 123.688, 107.0597, 23.4924, 39.6868, 0.0, 53.9299, 98.208, 39.7674, 24.3504, 48.0778, 29.39, 55.1564, 107.2924, 143.4048, 19.6402], [103.2912, 105.2112, 66.9186, 106.111, 111.8645, 0.0, 51.0984, 46.0699, 72.6989, 78.432, 82.3906, 129.276, 101.3428, 26.7167, 43.3072, 87.1837, 115.0195, 64.584], [119.7877, 149.5368, 28.952, 68.103, 57.9634, 18.4692, 14.5888, 0.0, 98.074, 185.184, 30.4711, 58.8696, 63.7167, 11.7425, 133.6441, 119.9559, 159.2237, 113.8003], [124.5744, 134.412, 68.1688, 148.0105, 122.6971, 20.4247, 64.8788, 31.5965, 61.3696, 202.368, 30.6534, 61.0128, 72.4264, 28.2395, 175.7978, 110.5626, 142.2221, 86.9731], [38.7292, 136.9512, 69.419, 224.9993, 131.2147, 5.992, 34.1408, 16.2178, 81.682, 211.68, 34.1775, 80.7576, 88.4136, 82.5358, 62.549, 155.3721, 223.5341, 99.2275], [89.9594, 126.1872, 61.0953, 246.2086, 95.1787, 22.0124, 29.3844, 59.0971, 13.4902, 256.896, 88.983, 96.0336, 95.7298, 45.6163, 109.1593, 163.5826, 130.9123, 84.8203], [66.9751, 143.244, 27.8334, 138.4112, 112.476, 10.5397, 74.5796, 18.4589, 67.2349, 137.376, 34.9674, 61.6056, 130.5301, 59.2877, 141.8756, 257.5852, 267.8122, 69.0883], [106.179, 192.096, 67.2805, 209.7572, 201.5832, 2.5475, 65.1608, 31.0445, 150.5839, 251.328, 65.2562, 140.3568, 80.7878, 26.8351, 107.4815, 183.2737, 99.5702, 102.4733], [43.1204, 161.9016, 169.1718, 332.7967, 178.3454, 61.8332, 29.1235, 149.2873, 229.248, 53.8637, 125.2632, 91.704, 63.653, 16.096, 339.6896, 230.7043, 42.5592], [210.1032, 230.46, 172.3631, 185.759, 155.4571, 8.683, 58.656, 85.571, 98.8149, 497.472, 53.4688, 242.1816, 134.4785, 34.0092, 102.3958, 214.2368, 245.784], [174.3805, 278.5944, 153.8075, 231.4205, 177.6029, 67.3019, 149.6269, 504.864, 65.8942, 78.7968, 295.9767, 152.703, 246.3686, 255.9848, 184.7261, 21.8261], [148.5874, 216.9912, 250.6322, 396.1, 222.0254, 58.0449, 67.5296, 72.2458, 177.3173, 289.536, 122.8567, 232.9704, 154.0658, 73.5343, 172.1801, 155.233, 202.5408, 183.2861]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

