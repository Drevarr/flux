created: 20230311223557000
creator: Drevarr
modified: 20230705163521795
modifier: drevarr
tags: ChartData
title: 202303112235_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Vopiscus Zergherdus", "Morton Saltbringer", "High Sorcer Baradun", "Lechen", "Mac Chiato", "Zadie Miststep", "Primal Clone", "Black Raspberry Pie", "Ryvalia Fazebringer", "Mom You Never Had", "Tribal S", "Minnie Marshmallow", "Blanco Padre Guard", "\u00c1rkantor", "Zaylen Harker", "Drevarr Moonwillow", "Aronorf Xideliesi", "Bella Sassy", "Sygaldry Verdandi", "Koralia Danai", "Johosh The Great"];
const professions = ["Scrapper", "Chronomancer", "Tempest", "Soulbeast", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[899.8416, 17.641, 0.0, 0.0, 58.6638, 126.009, 136.2042], [455.3955, 28.6056, 0.0, 20.8463, 76.518, 120.9616, 110.1346, 51.5513, 148.7953, 180.8325, 0.0, 15.7412, 11.7768, 23.0197, 10.2778, 41.6677, 23.9702], [794.8269, 28.8227, 0.0, 38.5388, 40.6624, 56.6514, 112.5712, 65.3083, 91.3864, 19.274, 172.71, 38.637, 38.6326, 9.933, 0.0, 9.2891, 18.3628, 14.3741], [549.4608, 31.021, 0.0, 9.0623, 42.6245, 64.3734, 131.3098, 77.3634, 92.558, 214.7124, 248.3775, 0.0, 35.5378, 15.8004, 11.8944, 15.228, 0.0, 29.4326, 16.1582], [500.1885, 33.3551, 0.0, 0.0, 49.3933, 66.7602, 133.4074, 25.9829, 91.9071, 122.9681, 317.4187, 0.0, 104.6923, 1.5431, 0.0, 14.0351, 0.0, 18.6949, 0.0, 4.6512, 78.9187, 42.3259, 59.8444, 38.208], [581.8113, 37.616, 51.8352, 32.379, 111.7359, 44.8578, 207.3827, 122.892, 135.1268, 199.8714, 209.6887, 0.0, 22.0377, 0.0, 21.2684, 18.767, 9.5399], [541.9953, 9.7704, 14.6858, 15.7703, 25.1136, 86.4864, 194.0979, 117.3911, 75.244, 208.1592, 302.67, 39.2445, 25.3994, 7.623, 0.0, 33.73, 49.8387, 0.0, 82.6447, 35.7739, 34.1264, 45.792], [598.2354, 10.8289, 21.0309, 10.8038, 31.7354, 91.611, 218.7098, 82.8643, 165.3286, 273.3053, 284.2875, 40.824, 32.6563, 0.0, 0.0, 19.9487, 6.1372, 52.8333, 13.0738, 61.1072, 75.984], [633.5721, 50.9418, 49.5837, 31.4115, 48.1671, 87.2586, 143.6157, 145.5978, 106.8778, 283.1351, 225.72, 16.9493, 16.8618, 0.0, 11.1888, 16.9285, 22.3562, 43.5073, 22.7909, 48.552, 102.9308, 47.7968, 56.7028, 69.744], [1030.7367, 0.0, 26.5572, 0.0, 80.73, 125.2966, 199.0452, 492.258, 471.7462], [976.9851, 59.4637, 17.2443, 17.2538, 40.7606, 129.6594, 255.0682, 213.8321, 198.0038, 283.1351, 358.8863, 40.02, 13.5736, 14.784, 18.3244, 48.7264, 0.0, 77.0304, 78.1425, 56.4127, 105.2128, 166.8], [1255.1994, 22.1462, 22.2589, 0.0, 22.3178, 99.684, 403.2986, 121.2534, 134.9967, 443.8802, 617.0963, 21.5662, 16.1147, 0.0, 37.9344, 43.5775, 0.0, 133.4308, 0.0], [1599.1101, 23.1504, 22.6171, 19.3178, 94.0779, 114.0048, 433.0845, 235.7186, 176.0034, 426.1481, 723.9712, 23.0243, 22.9448, 19.3393, 0.0, 0.0, 132.6608, 21.4805, 33.5104, 159.216], [1758.3741, 123.4599, 105.1032, 75.336, 2.1092, 119.34, 234.6515, 246.8374, 224.8209, 547.5743, 406.3388, 0.0, 74.5973, 4.1395, 13.7424, 52.6635, 4.1282, 54.3306, 3.2357, 280.368], [2367.5589, 57.5097, 0.0, 34.1205, 76.6651, 172.692, 599.4941, 132.7234, 295.769, 522.3254, 781.2562, 20.2297, 48.3442, 0.0, 36.9768, 22.0806, 116.0621, 0.0], [1775.2959, 129.2407, 121.4264, 117.9382, 131.3068, 259.1082, 352.257, 243.2091, 489.9975, 700.4172, 810.1125, 100.2982, 128.8644, 16.3178, 51.1896, 41.8516, 35.8435, 140.1901, 0.0, 39.6168, 167.256, 205.0121, 133.6104, 177.12], [1914.1542, 77.0776, 0.0, 0.0, 152.8889, 189.3996, 585.7898, 186.6788, 487.0034, 710.0542, 911.2162, 36.8753, 57.4687, 17.1679, 2.7384, 21.4461, 10.2655, 126.6716, 13.3762, 126.9288, 190.647, 216.5764, 140.7868, 225.216], [1508.5287, 52.4616, 110.783, 73.2075, 118.8972, 229.905, 632.776, 325.3712, 376.6107, 834.9497, 705.8025, 103.6395, 134.8407, 22.6195, 52.1304, 143.7777, 43.2915, 83.4638, 24.1214, 156.1416, 124.4587, 222.7025, 99.6688, 251.712], [2159.5203, 32.2966, 0.0, 263.6928, 258.1956, 412.2483, 183.6358, 280.0172, 992.9965, 767.1488, 94.041, 122.728, 30.5474, 39.2952, 118.9561, 107.6345, 20.16, 268.4232, 368.874, 262.5386, 90.0592, 209.184], [2711.4696, 18.6452, 107.15, 50.6325, 113.4527, 203.2992, 532.5107, 451.7744, 575.5258, 728.3645, 835.5488, 90.882, 30.6286, 0.0, 19.068, 22.0806, 0.0, 104.6827, 29.2622, 209.3856, 177.5542, 164.6845, 135.828, 178.08], [3357.4842, 194.2138, 143.89, 117.6157, 175.5499, 528.3954, 1110.0499, 560.1534, 842.525, 1448.2484, 1457.1338, 171.0112, 273.5234, 3.5389, 147.588, 181.6447, 18.3015, 157.6015, 122.7341, 204.8568, 364.0612, 267.9768, 256.5332, 199.248]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

