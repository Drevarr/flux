created: 20230503220838000
creator: Drevarr
modified: 20230705163528000
modifier: drevarr
tags: ChartData
title: 202305032208_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Ryvalia Fazebringer", "High Sorcer Baradun", "Drevarr Moonwillow", "Primal Clone", "Tegan Parker", "Xkaet", "Johosh The Great", "Eibh\u00ebar", "Zadie Miststep", "Black Raspberry Pie", "Miphest\u00f6", "Artakama Nahid"];
const professions = ["Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Willbender", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.7389, 0.0, 0.0, 510.7085, 257.2941], [269.3496, 185.8281, 0.0, 0.0, 39.3254, 0.0, 0.0, 0.0, 137.3889, 0.0, 0.0, 196.2413, 88.3749], [1074.2961], [262.6853, 42.4144, 24.6754, 0.0, 44.9859, 21.0945, 0.0, 46.1469, 255.2774, 0.0, 0.0, 346.7731, 152.512], [711.9715, 482.994, 0.0, 31.4997, 0.0, 107.8392, 0.0, 0.0, 597.8633, 0.0, 0.0, 551.2627, 435.9084], [25.0463, 1055.2354, 0.0, 0.293, 1154.7648, 850.5621], [27.3586, 186.6537, 1432.1146, 2080.3533], [776.9486, 473.4507, 0.0, 0.0, 216.2527, 148.3818, 30.9692, 0.0, 1295.0012, 0.0, 518.2694, 949.3779], [1361.7427, 625.3473, 25.6133, 0.0, 43.1239, 201.2724, 0.0, 34.3443, 838.9587, 0.0, 0.0, 995.2973, 779.713], [1473.3701, 764.7846, 10.462, 1.5884, 85.652, 155.2761, 49.8896, 0.0, 1102.2135, 122.2731, 986.0179, 1111.2122], [1581.6653, 827.0808, 37.6276, 0.0, 153.5405, 397.3998, 34.9642, 0.0, 923.1648, 164.6772, 1335.8842, 1290.1994], [2452.4698, 1638.7864, 56.0129, 0.0, 97.3454, 362.0022, 53.4052, 127.7361, 1944.2745, 45.0101, 0.0, 0.0], [1801.5878, 838.4797, 47.0062, 151.3061, 336.1743, 116.4622, 0.0, 1430.6173, 69.7637, 90.292, 1053.0355, 1007.1759]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

