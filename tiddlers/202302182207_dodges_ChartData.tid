created: 20230218220736000
creator: Drevarr
modified: 20230705163519572
modifier: drevarr
tags: ChartData
title: 202302182207_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Ark Est Destroyer", "Bri The Warrior", "Th\u00fbnad", "Be\u00eb", "Flanneryflame", "Kalenthian", "Smoothsword", "Morv\u00e4rth", "Irish Mini Rev", "Mini Mei Rev", "Savage Pixie", "Aveliad Frostmoon", "Sygaldry Verdandi", "Drevarr Moonwillow", "Kira Dragonblaze", "Johosh The Great", "Dark Sidiuz", "Flanneryflame", "El Mas Prron Aki", "Hyde En Sikh", "Irish Mini Rev", "Rina Of Theros", "Jessica Jung", "Tegan Parker", "Venomina The Fierce", "Sumatra Satyricon", "Kahless The Drunk", "Adalvarn", "Xanvias Tseli", "Legacy Of Mathus", "Belvyn Brightblade", "Kia Forte", "Primal Clone", "Gabeulon", "Peanut Strongpaw", "Lord Erin The Wise", "Aronorf Xideliesi", "Morv\u00e4rth", "Sailor Soup", "Koralia Danai", "Sp\u00edcy Cheese", "Anita Strips", "Husky Guard", "Sheep Poh", "Newtype Khan", "Ace Hammers", "Minka Bringer", "Leilani Ellesmera"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Soulbeast", "Scourge", "Weaver", "Mechanist", "Berserker", "Reaper", "Herald", "Renegade", "Virtuoso", "Scrapper", "Firebrand", "Scrapper", "Dragonhunter", "Firebrand", "Scourge", "Tempest", "Firebrand", "Chronomancer", "Vindicator", "Scourge", "Catalyst", "Tempest", "Spellbreaker", "Soulbeast", "Firebrand", "Mirage", "Berserker", "Berserker", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Spellbreaker", "Weaver", "Firebrand", "Scourge", "Reaper", "Firebrand", "Berserker", "Chronomancer", "Dragonhunter", "Catalyst", "Spellbreaker", "Vindicator", "Scrapper", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 2, 1, 0, 0, 0, 0, 0, 0, 1], [1, 2, 3, 0], [1, 0, 2, 3, 0], [0, 1, 1, 0, 3, 1], [2, 2, 1, 1, 0, 0, 0, 0, 0, 1], [7], [3, 1, 1, 0, 1, 2, 0, 0, 0, 0], [3, 4, 0, 1], [9], [1, 7, 0, 1, 0], [1, 4, 2, 3, 0], [3, 7, 0], [4, 1, 2, 4, 0], [0, 3, 3, 0, 3, 0, 0, 2], [3, 2, 1, 2, 0, 2, 0, 0, 0, 0, 2], [6, 3, 2, 1, 0], [3, 2, 1, 1, 0, 0, 0, 0, 0, 1, 4], [5, 2, 2, 4], [1, 2, 1, 2, 4, 1, 0, 2], [5, 2, 0, 7], [3, 4, 2, 3, 0, 0, 0, 0, 0, 0, 3], [5, 3, 2, 5], [3, 0, 1, 4, 0, 1, 2, 1, 0, 2, 4], [3, 4, 3, 1, 5, 1, 1, 1], [0, 3, 1, 2, 7, 3, 0, 1, 4], [6, 1, 4, 2, 2, 0, 1, 5], [9, 2, 2, 2, 1, 3, 1, 0, 0, 0, 5], [2, 4, 1, 2, 0, 3, 5, 3, 1, 0, 4], [7, 5, 1, 2, 2, 8], [5, 4, 4, 3, 0, 3, 2, 0, 0, 1, 4], [5, 5, 3, 1, 3, 1, 2, 2, 1, 0, 3], [8, 8, 3, 5, 2], [4, 1, 6, 4, 1, 1, 1, 8], [9, 5, 2, 3, 0, 2, 2, 2, 0, 4], [5, 5, 4, 1, 4, 7, 2, 0, 1, 3], [5, 1, 2, 1, 6, 5, 3, 2, 0, 9], [3, 2, 2, 5, 3, 6, 4, 0, 4, 7], [10, 3, 3, 1, 4, 3, 3, 3, 7], [5, 4, 5, 0, 6, 2, 2, 2, 4, 7], [4, 3, 12, 5, 3, 2, 0, 9], [9, 5, 4, 4, 0, 9, 4, 1, 0, 1, 2], [8, 3, 3, 4, 0, 9, 4, 0, 1, 7], [10, 3, 3, 4, 0, 4, 4, 1, 3, 0, 8], [10, 6, 5, 2, 4, 3, 1, 1, 0, 9], [6, 5, 1, 9, 5, 2, 3, 3, 7], [7, 6, 4, 6, 0, 10, 5, 0, 0, 2, 3], [10, 8, 6, 5, 0, 6, 4, 2, 0, 6], [5, 6, 4, 5, 1, 7, 3, 0, 2, 5, 9], [7, 4, 11, 6, 4, 2, 5, 8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

