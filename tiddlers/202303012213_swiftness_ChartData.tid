created: 20230301221309000
creator: Drevarr
modified: 20230705163520992
modifier: drevarr
tags: ChartData
title: 202303012213_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Panther B Me", "Mike The Archmagus", "Grasszanine", "Raziel Umbra", "Xanvias Tseli", "Smol Daddy Tika", "Arduran Illl", "Arriasa", "Nazhul Naxxremis", "Eibh\u00ebar", "Sister Elon\u00edth", "Zadie Miststep", "Etchery Howls", "Newtype Khan", "Smol Gluvs", "Be\u00eb", "Fribble Bibble", "Mac Aaroni", "Jeckyll Mbs", "Tegan Parker", "Kiloak", "Ryvalia Fazebringer", "Ark Darkness", "Ravioli Fetabringer", "Koralia Danai", "Sygaldry Verdandi", "Drevarr Moonwillow", "Blanco Padre Guard", "Demon Sekhmet", "Arcanophage Farra", "Kahless The Drunk", "Gavann", "Bella Sassy"];
const professions = ["Scourge", "Weaver", "Spellbreaker", "Chronomancer", "Berserker", "Berserker", "Weaver", "Druid", "Scourge", "Chronomancer", "Firebrand", "Tempest", "Druid", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 42.3563, 28.5246, 8.1893, 3.3708, 0.0, 12.722, 0.0, 0.0, 0.0, 44.3156, 0.0, 0.0, 0.0, 0.0, 18.2477, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.3709, 0.0, 0.0, 164.249, 0.0, 18.3187, 11.951, 0.0, 23.6544, 0.0, 5.9742, 60.291, 0.0, 9.7786, 0.0, 8.2417, 7.47, 0.0, 141.9768, 31.7698, 0.0, 3.1601], [13.3308, 22.916, 0.0, 0.0, 0.0, 0.0, 40.546, 0.0, 0.0, 44.199, 28.1466, 0.0, 0.0, 0.0, 18.0749, 22.8758, 16.9556, 53.6061, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 94.0369, 63.3485, 9.997, 0.0, 57.7632, 0.0, 0.0, 0.0, 23.3046, 0.0, 3.8556, 17.9091, 33.356, 0.0, 0.0, 16.8238, 0.0, 95.003], [84.2545, 0.0, 30.7718, 69.5539, 1.0293, 17.556, 26.2278, 63.4387, 65.4588, 122.3973, 0.0, 0.0, 30.0713, 47.1495, 0.0, 0.0, 30.1629, 39.739, 50.8121], [7.967, 17.108, 0.0, 10.8634, 17.1431, 17.1294, 79.1692, 0.0, 0.0, 30.1363, 75.5196, 0.0, 7.4603, 0.0, 138.7584, 0.0, 2.3213, 0.0, 96.8769, 0.0, 0.0, 0.0, 10.1376, 20.7684, 0.0, 59.769, 39.2904, 21.4579, 0.0, 15.9934, 0.0, 0.0, 0.0, 9.0024, 15.3886, 10.333], [38.2536, 33.8143, 21.4682, 3.8914, 0.0, 34.3561, 0.0, 72.9656, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 59.2358, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 29.6899, 0.0, 0.0, 23.9826, 0.0, 9.4451, 0.0, 20.2429, 0.0, 0.0, 5.3312, 126.0108, 4.6706, 0.0, 0.0, 68.2952, 26.6996, 61.5446, 23.4662, 14.2102, 24.8516, 47.7022], [0.0, 85.4195, 0.0, 0.0, 0.0, 1.5606, 14.9263, 147.642, 0.0, 27.4339, 70.0303, 30.7877, 0.0, 0.0, 0.0, 19.1808, 0.0, 0.0, 0.0, 0.0, 81.1166, 0.0, 6.4397, 0.0, 0.0, 117.3883, 26.904, 9.6068, 10.4544, 0.0, 0.0, 22.0806, 0.0, 43.8874, 0.0, 0.0, 0.0, 47.8397, 0.0], [0.0, 1.0454, 0.1241, 29.8579, 15.745, 147.2143, 120.0192, 36.6835, 142.9761, 80.5913, 43.0038, 43.0488, 27.5148, 110.5574], [28.8036, 55.7878, 29.003, 0.0, 42.8017, 33.7888, 0.0, 0.0, 0.0, 0.0, 81.7232, 0.0, 37.2384, 0.0, 49.801, 74.8231, 35.8745, 72.2568, 0.0, 44.0035, 0.0, 58.8931, 0.0, 0.0, 92.9324, 31.1805, 0.0, 15.8026, 0.0, 0.0, 0.0, 0.0, 81.1188, 0.0], [21.924, 6.0088, 60.3382, 76.3946, 33.9772, 15.3306, 19.2719, 171.5077, 0.0, 84.4272, 34.5778, 114.7747, 0.0, 0.0, 0.0, 2.8685, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 263.6504, 0.0, 45.7517, 0.0], [28.4508, 88.7774, 17.1925, 17.211, 0.0, 30.4776, 12.9739, 57.7395, 0.0, 24.0096, 33.5282, 40.9748, 0.0, 0.0, 0.0, 24.8832, 0.0, 0.0, 16.9616, 0.0, 21.1464, 0.0, 5.953, 0.0, 31.8716, 0.0, 16.5741, 29.4528, 2.2302, 0.0, 9.9468, 0.0, 131.1264, 0.0, 23.6544, 0.0, 11.4494, 20.8197, 55.612, 289.5782, 8.3829, 11.2319, 8.0758], [52.3872, 102.2419, 113.7402, 74.0421, 184.7521, 152.1542, 42.1546, 76.4526, 92.862, 195.8246], [0.0, 0.0, 5.98, 0.0, 0.0, 15.8355, 23.6805, 38.493, 0.0, 97.0618, 47.4643, 26.7883, 16.5528, 0.0, 10.7457, 58.5101, 0.0, 27.9767, 14.7798, 0.0, 24.7104, 0.0, 55.3363, 21.4936, 151.1532, 0.0, 3.9104, 37.7222, 5.0779, 72.2568, 11.6802, 30.0852, 95.1084, 0.0, 9.7574, 107.2071, 28.4674, 0.0, 11.7797, 31.6008, 0.0, 35.6118, 1.8058], [106.974, 113.7552, 79.0855, 0.9486, 11.0845, 0.0, 0.0, 108.8924, 36.4435, 63.3302, 0.0, 106.4741, 0.0, 13.014, 9.7662, 13.271, 16.9186, 82.067, 4.151, 16.2864, 58.9882, 0.0, 0.0, 18.2926, 75.8918, 3.7382, 164.7566, 14.7048, 30.2616], [0.0, 93.608, 145.2841, 4.2398, 0.0, 20.8845, 0.0, 72.6235, 0.0, 2.9914, 27.9305, 57.7269, 0.0, 0.0, 0.0, 59.9616, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 185.8648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 168.3972, 94.9518, 0.0, 66.045, 47.9804, 0.0, 114.5104, 0.0, 0.0, 33.0471, 0.0], [0.0, 28.6303, 33.1591, 66.0176, 0.0, 14.1601, 72.0806, 32.6763, 0.0, 59.3155, 56.3858, 17.054, 0.0, 0.0, 0.0, 2.7994, 0.0, 28.5508, 0.0, 96.5131, 0.0, 9.1728, 0.0, 0.0, 292.5241, 0.0, 0.0, 47.0678, 18.4588, 20.9088, 10.7082, 0.4554, 96.048, 10.8819, 61.7126, 0.0, 29.4921, 20.5609, 3.201, 29.7562, 0.0, 54.0368, 71.177], [30.8196, 63.0337, 118.1648, 93.2958, 14.3726, 15.8355, 25.0346, 194.0047, 0.0, 67.6992, 90.2056, 0.0, 0.0, 0.0, 0.0, 16.7616, 0.0, 0.0, 0.0, 0.0, 70.3296, 0.0, 46.7251, 0.0, 0.0, 107.606, 0.0, 12.6637, 12.1776, 52.8717, 31.548, 66.987, 9.8051, 101.3724, 18.3933, 13.4957, 0.0, 21.8295, 41.7134, 0.0427, 3.8707, 0.0, 0.2948, 37.921], [0.0, 54.5507, 47.6307, 3.7946, 11.2292, 8.721, 24.3103, 129.1654, 94.7021, 52.7424, 64.9573, 114.6992, 0.0, 0.0, 50.5267, 0.0, 8.6884, 12.4936, 71.2011, 16.7464, 107.0626, 72.0029, 76.9766, 0.0, 0.0, 466.871, 0.0, 29.9296, 3.7666, 43.6423, 0.0, 0.0, 0.0, 62.4312, 8.4744, 0.0, 6.8187, 10.7811, 36.8321, 69.1416, 17.4182], [47.4225, 15.847, 3.2912, 0.0, 5.049, 26.4201, 201.1901, 62.5632, 81.0422, 88.8644, 98.7771, 0.0, 0.0, 31.4038, 57.0931, 0.0, 0.0, 7.8591, 48.1378, 0.0, 152.3059, 0.0, 0.0, 149.1021, 0.0, 0.0, 36.2213, 1.2695, 88.4136, 10.8864, 22.5036, 83.52, 17.0932, 29.399, 118.3455, 68.6516, 52.4007, 25.0105, 152.4701, 44.7022, 39.857, 109.5494], [173.6462, 74.8205, 109.657, 149.915, 189.0273, 65.6214, 95.1738, 32.4562, 138.9936, 64.7338, 37.4528, 264.9126, 98.7526, 9.7138, 109.5518, 115.5528, 0.0, 85.219, 143.5351, 0.0, 174.3588, 35.5509, 152.6534, 133.503], [16.38, 33.7554, 105.2181, 45.1669, 0.0, 30.776, 23.6805, 111.4586, 0.3283, 76.319, 155.2212, 31.3914, 0.0, 0.0, 144.6336, 80.8536, 0.0, 116.2339, 10.4659, 90.1181, 0.0, 0.0, 423.166, 15.8522, 31.1237, 13.3466, 92.5848, 9.558, 4.7418, 55.6974, 64.7136, 36.8755, 140.4438, 32.6551, 95.7412, 112.4191, 108.3197, 15.4106, 51.4426, 145.3637], [39.4884, 136.4945, 125.7594, 93.9976, 363.7161, 54.1363, 75.8861, 205.5428, 330.2884, 7.722, 0.0, 77.8982, 0.6049, 0.0, 18.5803, 0.0, 160.4275, 0.0, 32.9098, 50.8077, 18.5341, 625.2821, 39.4153, 25.3875, 105.492, 48.8231, 58.212, 22.8744, 19.7978], [0.0, 166.244, 23.4416, 0.0, 0.0, 0.0, 68.5537, 293.5733, 35.641, 315.2342, 50.2632, 111.1526, 18.5926, 0.0, 5.1316, 98.6688, 0.0, 0.0, 22.2401, 0.0, 53.3174, 12.5856, 9.8093, 0.0, 0.0, 624.1777, 0.0, 121.2525, 23.6755, 4.9406, 0.0, 0.0, 10.3141, 308.2932, 42.4683, 125.0093, 0.0, 227.8287, 0.0, 0.0, 36.8626, 0.0, 0.0, 17.3554], [65.3436, 0.0, 21.3665, 93.7142, 252.343, 0.0, 140.8694, 51.0213, 171.3697, 19.0296, 40.4535, 67.4957, 121.2713, 32.6618, 104.8193, 40.8109, 358.3483, 9.2736, 74.88, 0.0, 855.0098, 66.3745, 121.6134, 42.9614, 129.932, 27.7464, 4.4712], [74.3148, 319.4689, 109.5835, 14.8104, 124.1834, 26.8285, 42.6375, 76.6438, 273.1258, 19.7587, 122.7425, 334.4387, 0.0, 63.1044, 26.3891, 7.2922, 27.495, 136.2249, 26.3221, 12.9906, 105.5419, 18.6797, 11.2694, 16.009, 38.2721, 180.8159, 33.2272, 26.9517, 0.0, 76.1682, 40.4976, 4.617, 42.864, 52.0956, 0.0, 0.0, 80.4678, 35.2391, 123.6241, 270.7192, 7.9229, 41.4304, 71.6364, 2.0566], [58.6908, 5.7143, 47.9895, 25.2842, 104.0618, 0.0, 0.0, 74.933, 41.2589, 23.8522, 61.517, 203.4402, 26.2002, 66.1392, 27.1296, 109.5034, 318.096, 32.1871, 158.4616, 57.9269, 72.6653, 30.888, 0.0, 0.0, 346.3271, 66.7103, 17.2058, 23.6755, 174.0889, 28.9872, 53.9784, 115.2774, 29.9106, 254.858, 0.0, 153.51, 33.1898, 110.7551, 45.3262, 22.4078, 23.0384, 100.0846, 158.305], [22.3776, 0.0, 14.95, 112.7333, 71.6769, 81.0594, 39.7719, 311.2801, 44.5421, 66.4397, 135.2209, 190.6874, 6.7549, 0.0, 0.1728, 75.6113, 0.0, 70.3565, 70.4704, 100.885, 99.8678, 88.3958, 393.8189, 39.4473, 8.3021, 5.7206, 215.8442, 7.7352, 1.1826, 76.8605, 69.1128, 190.1925, 131.8733, 117.81, 210.3651, 132.2405, 70.7634, 61.871, 5.9629, 121.2218, 35.8142], [39.4632, 22.2091, 42.0394, 9.0992, 52.8788, 6.2654, 25.6329, 252.7707, 73.6531, 155.1965, 195.63, 74.9318, 0.0, 13.3056, 132.1794, 85.1213, 53.6702, 101.0197, 67.7994, 22.4382, 216.7862, 69.4637, 103.2221, 0.0, 40.7299, 714.5856, 14.7108, 83.111, 68.0813, 79.8737, 73.3128, 17.577, 15.7793, 78.7698, 203.193, 29.1245, 95.0334, 64.642, 10.0216, 40.5887, 16.3296, 1.8392, 77.2081, 160.9634], [44.8056, 119.8819, 17.4616, 96.587, 113.0162, 10.2586, 65.8141, 448.9139, 72.1939, 52.0339, 206.3591, 352.1718, 0.0, 120.7181, 62.0104, 200.0761, 31.0376, 29.6982, 186.1834, 11.857, 117.3744, 0.0, 189.6516, 85.8483, 18.3514, 26.5902, 77.748, 32.886, 80.3432, 161.9766, 249.8985, 58.6714, 185.0331, 53.3709, 89.8614, 69.5257, 23.7082, 41.7595, 53.7715, 101.6743], [259.9561, 174.8122, 94.5427, 329.6264, 50.4073, 126.3698, 42.552, 108.5974, 51.4598, 108.2753, 207.9292, 59.1896, 97.3808, 106.9675, 70.656, 119.9203, 12.7565, 514.5206, 87.8637, 74.7365, 163.5558, 110.5632, 75.33, 70.3237, 376.2923, 78.9677, 285.7071, 32.967, 210.786, 213.6561, 138.227, 29.8144, 58.9895, 135.8834], [48.2328, 264.0935, 135.3573, 140.573, 111.1757, 39.956, 24.7511, 341.7323, 196.7366, 105.7997, 342.9211, 243.7358, 162.1171, 84.0996, 62.7052, 63.0374, 81.5135, 0.0, 0.0, 53.4336, 166.8427, 67.079, 42.719, 0.0, 0.0, 335.9136, 129.7588, 73.9066, 55.5638, 2.7192, 0.0, 18.9673, 132.849, 128.9938, 84.649, 82.5027, 99.1238, 174.9524, 150.5324, 110.9506, 56.0278, 74.5549, 196.0754], [64.4616, 85.6551, 65.6903, 62.1069, 14.2072, 1.9048, 26.609, 273.3858, 177.84, 151.0243, 113.5879, 231.3604, 54.7246, 6.8904, 43.9039, 34.6637, 38.0348, 155.5453, 108.5494, 219.8134, 160.475, 245.2426, 186.9379, 73.7299, 57.893, 531.8764, 36.9209, 166.2822, 95.2685, 162.2177, 34.0296, 63.6012, 40.185, 248.6808, 350.9654, 36.7488, 109.8846, 44.3273, 189.0418, 46.9907, 66.2256, 112.3267, 75.8226, 250.2984], [86.2442, 79.5639, 4.2592, 99.7603, 49.7556, 127.3141, 270.6486, 213.0797, 67.9747, 211.3738, 348.7007, 0.0, 37.7784, 18.0849, 116.3981, 82.1184, 0.0, 4.1524, 109.6163, 158.4792, 41.2896, 3.9312, 57.2141, 53.5458, 867.6322, 56.1569, 42.864, 65.8157, 26.899, 60.7728, 36.3042, 218.1778, 335.1762, 62.595, 130.2893, 186.3897, 155.6131, 181.7197, 69.483, 51.4685, 38.5651, 160.5481, 409.1551], [11.2644, 131.6049, 65.7202, 26.0005, 67.665, 75.1612, 48.778, 403.0645, 324.7085, 91.9843, 335.2825, 414.2754, 109.8002, 50.5116, 15.1171, 157.248, 10.1548, 427.2365, 20.6917, 102.4918, 139.3286, 106.249, 151.3325, 5.6461, 42.3685, 451.4086, 101.0568, 127.7798, 83.4024, 131.6818, 118.14, 72.6408, 79.218, 190.791, 171.0288, 81.7766, 240.2967, 104.1579, 214.1882, 282.3282, 114.8818, 110.623, 115.3258, 185.5418]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

