created: 20230130220929000
creator: Drevarr
modified: 20230705163518360
modifier: drevarr
tags: ChartData
title: 202301302209_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Gretrek", "Skyra Lightmoon", "Tribal S", "Ace Peppers", "Mike The Archmagus", "Veron Blackburn", "Sumatra Satyricon", "Cat Wigglebooty", "Joh Oshi", "Arriasa", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Herald", "Herald", "Druid", "Scrapper", "Weaver", "Herald", "Ranger", "Scrapper", "Druid", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[169.4858, 374.976, 0.0, 0.0, 270.8145, 128.1784, 279.9527, 39.5712, 74.8365, 22.9148, 122.1106, 393.7682], [905.081, 1012.095], [101.8881, 179.1677, 252.0531, 230.3717, 154.7146, 77.644, 227.556, 157.6757, 116.6443, 51.9732, 138.1673, 49.1432, 102.9638, 43.8355, 58.73, 29.4455, 44.4787, 76.7141], [629.4736, 606.375, 174.4772, 31.8903, 0.0, 0.0, 109.9613, 170.0672, 54.7142, 67.1692, 17.6363, 116.508, 131.9717, 25.668, 31.7324, 15.988, 8.5352, 28.8204, 15.9053, 11.7686, 16.0058, 0.0, 56.9858], [770.4368, 968.5462, 99.0001, 23.9246, 83.6685, 53.922, 105.5184, 148.2755, 102.6278, 106.7494, 29.8652, 98.868, 127.9325, 64.237, 15.8391, 95.7644, 31.8472, 68.5373, 12.9748, 13.466, 11.992, 19.7122, 42.5893], [1517.5418, 774.5063, 140.9524, 0.0, 0.0, 57.8714, 12.4742, 10.6673, 11.9784, 534.9193, 63.9731, 262.5], [1008.1299, 1349.46, 92.3322, 32.8724, 62.4809, 47.9979, 111.1574, 209.9934, 56.7235, 171.3942, 20.6866, 138.18, 118.679, 74.1024, 5.9352, 38.0277, 23.876, 44.5334, 30.6384, 45.9995, 22.849, 11.831], [926.4685, 1509.3225, 360.5307, 0.0, 166.4804, 85.0077, 282.8064, 577.7105, 136.9402, 110.8968, 31.5845, 145.236, 154.6646, 128.965, 26.4466, 111.875, 52.828, 56.18, 20.7355, 20.067, 0.0, 4.6987, 51.5871], [659.1245, 2128.9275, 363.9573, 178.9841, 171.89, 119.119, 313.992, 671.8875, 282.4584, 320.4286, 115.2459, 315.084, 281.9362, 119.1442, 106.2917, 197.4987, 55.46, 152.6692, 48.7061, 88.9626, 22.6846, 73.2701, 126.2351], [1933.6262, 2523.6225, 359.4194, 20.0235, 122.7078, 45.1633, 308.353, 474.8472, 211.8245, 164.9026, 60.5346, 103.404, 238.3862, 141.5534, 8.7855, 80.308, 42.0368, 116.1502, 74.2515, 57.6927, 46.4055, 30.9254, 266.0002], [2391.9997, 2798.145, 566.2175, 117.6314, 156.653, 190.6541, 346.6301, 653.6007, 451.0061, 254.7922, 93.3669, 325.164, 361.3982, 189.2736, 21.4856, 123.2833, 69.0712, 200.7163, 94.886, 69.2539, 72.3142, 80.9827, 135.0995], [3361.2432, 4137.1313, 597.7049, 115.8309, 189.5163, 69.6559, 330.8237, 841.8024, 506.2613, 335.3952, 89.5679, 377.748, 398.1182, 91.021, 57.5296, 200.9743, 68.8644, 241.6966, 19.8058, 61.8042, 53.4954, 96.7262, 263.5341]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

