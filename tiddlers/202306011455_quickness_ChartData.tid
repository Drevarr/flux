created: 20230601145547000
creator: Drevarr
modified: 20230705163532855
modifier: drevarr
tags: ChartData
title: 202306011455_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Sephy Xs", "Demon Dalham", "Zady Stardust", "Venomina The Fierce", "Gavann", "Smol Daddy Tika", "Blancooo Padreee", "Jupi Jupi Jupi", "Grasszanine", "Aronorf Xideliesi", "Newtype Khan"];
const professions = ["Willbender", "Harbinger", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[575.9083, 336.9294, 0.0, 0.0, 20.7799, 128.5221, 0.0, 18.2872, 479.5316, 0.0, 381.4848, 354.9913, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [415.8695, 1494.7829, 275.1732, 118.0818, 41.9203, 41.9732], [830.8186, 372.1864, 21.0372, 41.2992, 56.0805, 34.9642, 0.0, 432.5534, 0.0, 552.9811, 492.9606], [9.956, 75.5741, 6.0562, 0.0, 145.2046, 785.3916, 193.3133, 22.0941, 112.549, 1164.4771, 52.859, 73.0682, 112.3035, 99.078, 0.0, 187.0176, 135.45, 89.056], [533.701, 307.2393, 29.866, 30.2016, 48.1572, 25.2804, 13.0378, 628.4434, 9.5386, 471.8726, 448.5867, 7.5675, 36.4941, 50.8226, 93.5233, 25.4281, 37.1405, 107.3607, 63.2548, 39.2217, 0.0, 92.3915, 96.1632, 222.9055, 12.811, 292.8443, 0.0, 310.0216, 0.0, 0.0, 74.2365, 147.4543, 10.7222, 107.649, 140.4309, 42.7933, 86.3604, 105.4872, 49.329, 107.9337, 9.4114, 56.4346, 27.7859, 14.5454, 44.8717, 41.6109, 59.4048], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 59.4173, 9.2106, 112.6608, 134.6314, 40.572, 51.7088, 6.6902, 11.9246, 0.0, 23.4436, 30.1325, 18.3838, 127.1491, 0.0, 4.8334, 8.0314, 87.58, 13.3676, 11.016, 35.7708, 80.8128, 68.0698, 37.8072, 9.7416, 12.776, 61.9234, 12.9396, 20.8152, 86.346, 26.8286, 79.6416, 51.8016, 13.1666, 70.4605, 8.2325, 0.0, 8.4065, 12.8795, 0.344, 52.0541, 97.524, 222.4853, 0.0, 17.1494, 300.5951, 0.0, 13.5054, 115.2576, 269.2915, 175.6589, 77.629, 251.8646, 82.8096, 77.531, 0.0, 23.3118, 40.717, 0.0, 452.4975, 60.9922, 8.208, 624.0522, 276.6187, 6.878, 17.0853, 45.8208, 34.1925, 34.2376, 71.7878, 162.5016, 182.7617, 17.2058, 64.7782], [545.9189, 269.3314, 0.0, 7.7946, 23.9081, 69.972, 12.0809, 7.4453, 418.8145, 17.8459, 17.33, 325.465, 354.2455, 135.1865, 287.408, 104.4639, 0.0, 0.0, 0.0, 247.6037, 153.5891, 170.0672, 30.2425, 11.8474, 36.4623, 273.0672, 43.0654, 320.916, 569.502, 123.0235, 270.6678, 154.3035, 34.416, 81.4317, 135.4752, 68.7053, 357.6905, 11.6555, 39.7386, 134.244, 17.6753, 0.0, 79.9318, 40.7884], [107.6334, 0.0, 29.029, 10.0089, 21.9398, 33.2989, 179.9239, 5.0808, 317.6439, 0.0, 57.6126, 20.727, 0.0, 70.3444, 520.3723, 258.9929, 14.3428, 5.9956, 21.609, 0.0, 0.0, 45.6486, 0.0, 0.0, 314.8109, 300.9222, 103.5452, 170.6158, 91.9926, 5.6943, 0.0, 0.0, 405.3722, 77.8999, 110.7508, 27.027, 0.0, 8.5673, 251.5212, 64.8741, 269.028, 660.8187, 72.9979, 189.4171, 115.128, 15.984, 58.0187, 145.4477, 92.0506, 288.0695, 38.4178, 22.5245, 183.9143, 16.3258, 0.0, 63.64, 21.5093, 5.7213, 122.945, 53.5692, 0.0, 131.2857, 0.0, 24.2986, 0.0, 21.6443, 18.0075, 22.3969, 59.4194, 29.2238, 0.0, 37.9816, 19.872, 42.5779, 165.7915, 232.948, 19.2803, 40.3295, 0.0, 28.9714, 76.7232, 22.8228, 22.3944, 41.2698, 27.2012, 61.295, 89.591, 0.0, 66.3244, 48.2669, 0.0, 12.936, 90.0144, 5.6637, 22.5431, 0.0], [238.5539, 747.5221, 90.3834, 1.998, 7.9739, 0.0, 915.0573, 325.9053, 237.6696, 53.6105, 62.0851, 56.901, 517.104, 87.0049, 625.194, 1088.4361, 225.8736, 946.3311, 472.3446, 106.272, 268.2793, 343.7683, 295.0214, 1315.2315, 40.5113, 110.484, 436.7405, 40.5367, 20.8166, 139.0534, 53.7198, 0.0, 5.7645, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [19.3931, 40.0233, 13.4798, 19.5804, 25.7485, 569.7965, 32.0866, 70.4021, 12.7633, 109.7208, 0.0, 139.6256, 61.992, 61.7056, 102.0652, 19.9417, 95.1731, 0.0, 36.3106, 89.355, 79.9949, 0.0, 83.7111, 0.0, 0.0, 60.2582, 0.0, 93.3364, 25.2387, 20.0756, 36.337, 30.1608, 33.6312, 13.2709, 26.5559, 0.0, 34.8012, 93.717, 46.2917, 70.9104, 93.0384, 13.4429, 69.8777, 22.9233, 40.1939, 0.0, 33.2897, 25.1887, 13.3515, 62.0696, 90.2088, 33.6586, 6.7417, 67.4201, 26.9818, 1.7837, 13.3152, 91.7266, 13.5, 63.1454, 45.715, 0.0, 45.8496, 113.5153, 61.9836, 63.0106, 0.0, 0.0, 13.4343, 0.0, 0.0, 79.0644, 26.7011, 62.9273, 31.1199, 80.1601, 20.0253, 0.0, 55.944, 0.0, 41.5819, 47.9875, 42.8076, 25.1744, 38.232, 61.6284, 650.2356, 29.5596, 100.9193, 14.2506, 36.3048, 13.3188, 61.8478, 49.859, 47.0954, 122.0846, 139.0752, 97.272, 25.679, 14.664, 30.3614, 113.9544, 21.9537, 0.0, 0.0, 49.0565, 35.2999, 93.6029, 20.391, 113.9107, 30.9191, 33.4567, 165.412, 80.1667, 13.4954, 33.2548, 0.0, 0.0, 33.626, 13.3567, 35.3701, 80.3799, 17.1564, 281.5488, 53.8592, 22.3758, 59.4432, 19.21, 118.5977, 25.7346, 238.329, 9.6767, 12.987, 86.6473, 0.0, 32.0634, 14.4239, 73.5879, 14.9256, 13.4865, 13.4182, 48.1536, 80.3169, 60.4485, 6.6327, 45.0778, 94.2354, 199.3754, 33.5377, 35.096, 40.2195, 376.4178, 31.734, 337.7688, 191.0072, 0.0, 13.2661, 66.7584, 112.5095, 71.4757, 25.6211, 14.3136, 368.9595, 179.0371, 33.696, 815.4698, 244.6668, 14.695, 46.793, 46.9752, 133.48, 13.4218, 81.6578, 124.3131, 154.3231, 26.8646, 0.0], [21.9475, 38.3526, 11.7216, 6.745, 492.6089, 143.185, 101.7574, 45.0173, 36.6979, 24.3862, 270.1188, 59.997, 266.49, 569.502, 44.6616, 337.3286, 219.7026, 38.448, 144.0188, 161.6294, 63.9878, 431.3475, 20.885, 155.1264, 6.6415, 8.6861, 81.7138, 24.4918, 34.007, 56.2867, 216.8422, 557.4593, 18.4921, 40.6764, 13.6544, 0.0, 94.8096, 7.0649, 81.4566, 1.7774, 68.31, 96.2035, 8.7264, 96.6672, 3.4992, 19.3421, 7.1928, 54.2371, 0.0, 82.6204, 13.9374, 3.4545, 36.3474, 701.7318, 10.7743, 95.3568, 0.0, 38.2554, 0.4752, 14.221, 26.752, 10.4702, 116.9784, 132.1056, 60.4013, 11.7466, 0.0, 22.7879, 122.2496, 26.5644, 10.4328, 0.0, 49.859, 24.3148, 88.7689, 14.8002, 125.2709, 19.01, 50.2375, 173.282, 81.0566, 38.9029, 29.3395, 14.0712, 18.4931, 7.0737, 31.7667, 6.7317, 37.011, 100.1749, 30.0696, 317.0131, 35.0385, 15.7582, 81.0958, 7.1359, 22.9937, 181.9668, 27.2034, 287.217, 5.0886, 14.021, 189.1318, 1.703, 27.9603, 15.6761, 81.4181, 24.0624, 31.4019, 14.0356, 75.7944, 138.0281, 275.3741, 292.6426, 51.9275, 21.6357, 211.5936, 36.6611, 130.3795, 71.1802, 0.0, 83.4984, 50.7121, 20.8906, 84.4211, 82.9858, 97.3769, 27.6529, 163.6512, 8.3401, 87.5679, 193.847, 34.5492, 88.15, 66.258, 50.3496, 5.2021, 11.7852, 0.0, 16.572, 5.1806, 134.406, 5.6376, 77.8886, 257.145, 51.246, 69.174, 143.1829, 49.9791, 139.7995, 134.1522, 78.8508, 104.6892, 0.0, 67.0956, 14.1162, 4.1882, 82.2938, 24.3194, 60.6592], [371.2254, 40.8623, 0.0, 0.0, 24.1889, 54.5611, 463.1534, 31.9696, 249.4149, 0.0, 35.5726, 0.0, 411.5218, 135.9912, 0.0, 0.0, 0.0, 40.7484, 0.0, 0.0, 142.7072, 0.0, 0.0, 361.5514, 285.2609, 79.0143, 122.5403, 0.0, 0.0, 0.0, 16.1207, 160.7383, 80.8911, 21.5236, 0.0, 0.0, 0.0, 173.2752, 0.0, 168.636, 21.6018, 21.3396, 196.209, 167.5752, 21.744, 22.0425, 226.921, 84.1882, 275.9615, 38.927, 21.7048, 119.0297, 0.0, 0.0, 64.2764, 73.2883, 14.4314, 0.0, 0.0, 0.0, 123.9136, 195.804, 32.5928, 0.0, 64.9747, 239.7005, 75.778, 27.6276, 64.54, 63.3864, 0.0, 153.2269, 124.992, 119.8208, 57.2314, 21.7728, 130.4993, 198.8361, 0.0, 147.441, 42.8922, 21.8587, 109.2672, 0.0, 137.5859, 0.0, 103.615, 82.4947, 21.8592, 49.8105, 0.0, 42.9235, 10.8558, 99.2544, 94.6223, 0.0, 0.0, 0.0, 20.2425, 38.052, 19.9637, 0.0, 21.7215, 144.9946, 206.7686, 0.0, 0.0, 125.2087, 49.0219, 21.9672, 0.0, 66.3292, 0.0, 12.5244, 79.7355, 32.7658, 79.4784, 87.2448, 22.8194, 111.8393, 0.0, 17.5653, 0.0, 72.9841, 0.0, 0.0, 117.6712, 72.36, 14.5829, 21.7864, 43.7396, 18.5255, 0.0, 0.0, 0.0, 0.0, 119.3198, 89.8537, 0.0, 21.6576, 74.4424, 123.516, 42.8659, 35.8013, 0.0, 0.0, 42.9358, 150.0547, 21.7854, 48.3615, 17.7419, 47.2017, 0.0, 16.398, 79.5312, 0.0, 108.7241, 58.3632, 65.8548, 0.0, 54.0, 46.0782, 490.3668, 21.8912, 85.5941, 0.0, 21.7074, 36.1152, 25.1326, 56.1458, 21.7959, 167.3905, 43.4808, 124.9714, 34.9306, 0.0, 65.9295, 64.4345, 20.9385, 0.0, 0.0, 20.7997, 23.2228, 133.5928, 21.1715, 41.7312, 66.0677, 103.2544, 186.4463, 23.8241, 0.0, 20.7161, 20.7788, 18.6329, 0.0, 21.0064, 0.0, 0.0, 13.9165, 21.012, 230.112, 95.8386, 21.0522, 41.6799, 0.0, 20.7623, 104.3915, 17.8092, 224.361, 0.0, 0.0, 148.0162, 62.3925, 0.0, 69.9924, 42.8544, 0.0, 20.827, 0.0, 81.9126, 305.8052, 0.0, 139.3344, 197.5546, 95.8631, 110.8979, 0.0, 84.3631, 25.9807, 0.0, 101.9327, 257.1264, 230.1168, 34.8514, 0.0, 0.0, 355.3862, 0.0, 191.52, 43.1357, 0.0, 0.0, 0.0, 20.8003, 62.0928, 42.0509, 0.0, 0.0, 20.923, 0.0, 0.0, 61.6783, 121.0522, 10.56, 39.7794, 97.2471, 34.7004, 61.5617, 0.0, 0.0, 72.72, 0.0, 55.6488, 81.729, 58.4346, 315.3332, 16.7666, 116.802, 165.4414, 47.9179, 164.2007, 132.8292, 44.1882, 49.5327, 0.0, 60.0678, 45.0666, 0.0, 62.266, 44.2653, 22.176, 214.149, 97.2614, 21.0384, 511.2248, 159.983, 19.8472, 20.872, 52.392, 151.4575, 0.0, 49.8764, 20.8718, 83.4288, 0.0, 34.7734]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

