created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Kisumaiasu", "Smol Gluvs", "Latedoctor", "Newtype Khan", "Name Is What"];
const professions = ["Reaper", "Reaper", "Reaper", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.3448, 41308.0385, 7.4, 5.8462, 0.0, 0.0, 0.0, 6.3319, 0.0], [4.6538, 7.3095, 16.0088, 3.1228, 11.1519, 8.2471, 5.4865, 17.648, 5.3784, 14.2157, 0.9643, 1.0, 16.3235, 6.0619, 7.0714, 20.0556, 8.5143, 12.4432, 0.0, 17.5385, 24.3655, 16.1319, 0.9714, 0.0, 0.0, 9397.1878, 14.0123], [0.0, 9.4568, 14.3579, 10.6721, 3.0133, 1.9808, 16.6825, 15.9339, 13.1053, 12.6835, 0.0, 0.0, 17.848, 0.0, 9.8824, 0.0, 63172.3824, 10.0722, 0.0, 11.3889, 3.2571, 23.1477, 0.0, 19.0769, 12.931, 23.1429, 4.9714, 0.0, 0.0, 13.2707, 16.1111], [23.9359, 19.27, 26.1121, 11.4286, 0.9565, 2.0, 1.0, 27.9278, 6.0606, 0.0, 23.3292, 51186.0952, 32.1143, 0.0, 21.3395, 27.8, 23.6066, 19.0, 13.4615, 15.7143, 17.1542, 5.8596, 27.4051, 18.6471, 5.2162, 30.12, 7.2432, 8.6078, 6.9286, 2.0, 14.8041, 0.0, 11.8778, 1.9857, 24.0341, 2.0, 21.75, 23.5793], [23.2308, 22.44, 19.9252, 14.6429, 6.0435, 14.5588, 5.0, 26.8144, 3.0, 0.9615, 19.7042, 0.0, 34.9348, 15.4211, 21.7739, 41.913, 24.9127, 12.7724, 5.0062, 20.7, 27.2143, 0.0, 22.8571, 14.8608, 21.4568, 16.6211, 20.3115, 14.2, 27.8462, 17.254, 9480.674, 1.0, 13.8101, 17.1765, 0.0, 30.312, 7.1081, 12.5686, 8.7857, 0.0, 17.0294, 10.9381, 1.0, 13.7667, 13.0429, 35.5909, 32.7586, 22.2308, 9.469, 26.6374, 8.1714, 17.25, 3.0, 19.3581, 24.8519]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

