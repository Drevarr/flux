created: 20230626011254000
creator: Drevarr
modified: 20230705163537792
modifier: drevarr
tags: ChartData
title: 202306260112_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Grasszanine", "Blancooo Padreee", "Demon Staph", "Arcanophage Farra", "Newtype Khan", "Zhavashian", "Smol Daddy Tika", "Fribble Bibble", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Druid", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[65.7876, 0.0, 0.0, 26.136, 170.2533, 0.0, 0.0, 23.9154, 0.0, 15.98, 41.7035, 0.0, 0.0, 0.0, 43.2616, 0.0, 7.9027, 2.0182, 31.4411, 59.292, 64.9786, 20.016, 6.682, 34.6367, 24.7315, 0.0], [0.0, 162.3568, 97.0528, 21.182, 27.6914, 5.0274, 59.0047, 69.8998, 35.9904, 30.24, 0.0, 75.7856, 26.9669, 85.7333, 92.9088, 27.8456, 36.9138, 40.9728, 29.3682], [0.0, 0.0, 0.0, 0.0, 0.0, 20.3558, 0.0, 0.0, 0.0, 138.0672, 137.7508, 0.0, 47.632, 94.9343, 55.3711, 61.6768, 99.456, 0.0, 53.0221, 20.7888, 100.5163, 52.4448, 6.8807, 105.7476, 44.2675, 1.012], [43.8876, 0.0, 0.0, 114.136, 335.8942, 30.3552, 78.0438, 0.0, 138.0672, 0.0, 37.517, 20.7908, 13.6715, 44.6899, 0.0, 71.8152, 0.0, 0.0, 0.0, 27.6989, 24.3043, 21.6576, 0.0, 37.0736, 31.321], [0.0, 0.0, 131.9102, 185.592, 418.1041, 7.9459, 48.9915, 113.6545, 0.0, 485.1528, 43.8102, 13.9352, 3.7842, 0.0, 12.5373, 0.0, 0.0, 0.0, 23.2894, 62.2388, 0.0, 0.0, 0.0, 0.0, 36.3545, 39.9802, 0.0], [52.9396, 0.0, 70.7986, 255.112, 55.3493, 102.4934, 0.0, 260.0709, 84.6798, 265.4278, 40.4586, 36.0677, 36.8403, 14.9796, 38.1197, 0.0, 36.5792, 38.3309, 58.295, 0.0, 33.1157, 72.036, 29.1744, 12.3703, 149.0135, 0.0, 4.3516], [269.5363, 46.0469, 307.1521, 240.8683, 857.327, 174.8099, 50.6563], [4.7304, 131.2408, 153.6682, 315.744, 202.5404, 58.2552, 19.5966, 189.1493, 52.1909, 363.545, 133.4416, 0.0, 0.0, 0.0, 0.0, 79.7336, 54.9792, 70.8557, 0.0, 0.0, 0.6734, 31.8211, 80.8992, 0.0, 9.1885, 23.1475, 7.59], [84.5632, 81.0088, 218.2233, 299.728, 419.0537, 52.0056, 190.9486, 0.0, 523.1852, 69.5696, 25.5767, 8.1824, 31.2004, 62.5775, 33.9112, 57.2813, 0.0, 65.5429, 72.468, 93.2083, 68.2848, 0.0, 39.5106, 0.0, 0.8906], [192.9828, 74.5559, 239.9056, 441.496, 716.4205, 133.6968, 3.6218, 300.4798, 74.1429, 1023.8386, 178.4966, 34.6183, 40.1793, 41.8095, 73.7003, 50.9855, 55.3656, 36.3955, 78.0661, 54.2394, 16.5139, 109.6618, 66.3552, 56.362, 140.7439, 48.8506, 35.845], [241.1044, 203.4976, 197.3356, 761.64, 559.7332, 317.3011, 486.3304, 357.2688, 942.021, 267.7928, 105.4231, 137.4778, 123.2482, 154.8912, 116.5576, 161.6072, 141.6845, 88.7821, 125.608, 127.9829, 240.3288, 136.2816, 66.6706, 99.7951, 93.5616, 69.0994]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

