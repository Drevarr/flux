created: 20230614223544000
creator: Drevarr
modified: 20230705163535124
modifier: drevarr
tags: ChartData
title: 202306142235_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsy Pop Star", "Primal Clone", "Alarics Bane", "Jacob Pine", "Elon The Archmagus", "Tegan Parker", "Eibh\u00ebar", "Sygaldry Verdandi", "Drevarr Moonwillow", "Johosh The Mighty", "Fribble Bibble", "Rozaalyna", "Cedryn X", "Bella Sassy", "Sub Train", "River No Hug", "No Reserv\u00e9", "Smol Gluvs", "Zayde Sunsabre", "Raelyn Sunray", "Be\u00eb", "Hyde En Sikh", "River No Hug", "Elonith Requiem", "Lord Erin The Wise"];
const professions = ["Reaper", "Chronomancer", "Reaper", "Reaper", "Tempest", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Berserker", "Scrapper", "Reaper", "Berserker", "Firebrand", "Firebrand", "Scourge", "Vindicator", "Reaper", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Reaper", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5158.9565, 1820.0851, 7386.2143, 2041.5168, 6416.0714, 1610.2241, 778.8103, 1858.2558, 497.6102], [3639.0625, 3795.1176, 902.9057, 1130.625, 904.2125, 1285.803, 752.871, 3560.8947, 183.7386], [2849.1579, 908.7561, 701.5273, 806.2635, 494.4198, 1843.5758, 796.3167, 3348.0923, 252.6216], [8031.1667, 463.3659, 303.6909, 1948.0584, 953.2099, 3175.32, 1001.3115, 3665.6216, 26.3293], [5908.8333, 836.3846, 3386.1538, 1214.1756, 2593.8438, 1232.7969, 533.5484, 2221.2963, 461.6463], [919.6327, 1127.4211, 1201.2909, 1119.8421, 630.8148, 1106.4483, 557.6071, 1434.4667, 992.7692], [1275.92, 657.35, 848.0189, 718.1538, 230.8481, 1432.5862, 535.5574, 1576.9438, 127.1136], [4822.8571, 1967.8276, 470.1765, 410.4327, 5871.1429, 523.6364, 172.9483, 2551.1475, 62.7586], [1053.1277, 569.0213, 636.1852, 671.3488, 196.284, 725.6923, 772.8475, 2165.7391, 209.8046], [7060.3333, 1296.6829, 1783.2857, 877.0355, 3206.5], [269.8367, 627.275, 3654.7333, 403.9709, 435.7949, 1301.9661, 498.6316, 3490.78], [5315.5294, 644.5897, 1252.0577, 896.369, 4924.8571], [4745.25, 10393.3333, 3488.2963, 2149.6575, 3744.4], [1056.58, 1423.025, 105.4821, 657.1429, 351.9125, 744.4286, 379.8235, 1486.6111, 114.131], [749.3404, 858.625, 2951.4, 1368.25, 170.7468, 800.7679, 535.6949, 1840.9459, 62.0833], [2639.1515, 514.225, 6410.1538, 1228.5882, 416.9383], [4199.6818, 684.2667, 4766.8, 639.744, 574.5802], [972.6061, 572.0169, 2800.3333, 796.9545], [1347.1321, 1025.6667, 2894.4127, 153.5172], [721.6522, 638.2821, 290.7451, 356.574, 292.2532, 871.9492, 211.322, 1161.2135, 0.0], [894.5, 984.8136, 3803.5135, 0.0], [239.24, 1845.175, 287.3673, 576.5207, 219.475], [886.3548, 465.5667, 1212.1444, 234.2353], [706.7692, 912.2333, 866.3444, 361.1446], [319.7959, 152.2, 300.4727, 266.4941, 289.7625]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

