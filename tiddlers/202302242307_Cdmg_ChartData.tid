created: 20230224230708000
creator: Drevarr
modified: 20230705163520058
modifier: drevarr
tags: ChartData
title: 202302242307_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "Irish Necroman", "Ravioli Fetabringer", "Jeckyll Mbs", "Lord Erin The Wise", "Burnhard Riemann", "Smol Daddy Tika", "Sofya De Nova", "Sp\u00edcy Cheese", "Rozaalyna", "Xanvias Tseli", "Panther B Me", "Smol Gluvs", "Ez Mode Mathus", "Nazhul Naxxremis", "Rina Of Theros", "Dark Sidiuz", "Elonith Tenebris", "Daring Deathblade"];
const professions = ["Scourge", "Scourge", "Firebrand", "Berserker", "Weaver", "Berserker", "Berserker", "Catalyst", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[63.1629, 76.1724, 53.2838, 60.7143, 107.6541, 163.1811, 53.8187, 0.0, 1.6122], [19.4714, 72.0451, 49.2814, 0.0, 18.56, 58.8889, 34.043, 64.066, 55.4576, 45.9531, 31.5806, 18.6591, 22.7925, 75.7375, 135.4167, 68.7561, 13.9639, 58.3265], [5.3084, 5.7783, 0.0, 3.4324, 6.8286, 38.6165, 37.2205, 4.0058, 51.1765, 0.0, 5.8571, 0.0, 322.76, 52.4372, 10.5135, 9.7733, 200.7407, 30.5054, 85.5, 48.2373, 17.9531, 27.6452, 0.0455, 8.9434, 70.9375, 68.3125, 71.626, 19.988, 98.2245], [2.5047, 17.3439, 19.431, 26.7973, 87.5714, 0.0, 37.8504, 57.5731, 39.2941, 27.6667, 1.1837, 0.0, 3.64, 24.7085, 17.973, 4.0267, 100.5556, 155.3441, 88.1604, 15.6102, 37.0938, 16.129, 0.0, 0.0, 78.0375, 23.6979, 34.8211, 68.7349, 0.0], [7.6262, 21.1086, 56.6897, 93.7027, 8.7429, 19.6692, 47.8898, 0.0, 46.6078, 3.3939, 0.0, 67.56, 42.2613, 0.0, 27.28, 5.5926, 119.8387, 125.4717, 69.3559, 53.3516, 76.9355, 8.5, 0.2075, 73.5875, 13.5729, 35.3415, 16.6867, 28.8367], [52.7009, 27.552, 20.8276, 0.0, 41.0857, 33.6241, 33.2756, 2.462, 0.0, 75.2245, 0.0, 0.0, 9.9497, 3.8919, 5.92, 111.037, 70.7957, 108.9906, 35.8475, 0.0, 108.8871, 13.3864, 15.8679, 37.3687, 134.7708, 28.3171, 185.8554, 52.5918], [16.0187, 37.3167, 22.1983, 16.5, 46.1143, 59.7293, 54.7087, 8.0936, 133.4706, 0.0, 0.0, 0.0, 17.6, 40.8543, 0.0, 28.8533, 184.3333, 0.0, 51.4151, 76.9492, 48.7656, 37.129, 3.25, 0.0, 135.0, 26.4688, 47.3821, 27.3133, 45.898], [19.2009, 27.1176, 53.8621, 50.4595, 15.9857, 31.3308, 137.8425, 30.4152, 36.4314, 28.7879, 17.3265, 5.6562, 0.0, 41.1658, 4.5405, 8.7733, 30.963, 50.3226, 78.3113, 94.0678, 160.0469, 47.1613, 13.0, 0.0, 75.9437, 69.7396, 87.5528, 56.759, 31.0204], [13.0794, 27.724, 0.0, 206.8514, 86.1286, 20.8421, 117.1496, 30.3626, 171.8824, 1.5152, 0.4694, 0.0, 0.0, 72.6683, 5.8919, 3.68, 10.3704, 86.0968, 25.8396, 7.9153, 90.3047, 112.9839, 0.6136, 0.0, 132.8125, 145.0976, 103.8795, 107.898], [16.4439, 88.4072, 107.9397, 88.5811, 21.6, 133.1805, 137.8976, 33.7076, 168.098, 0.0, 4.1429, 47.0, 33.0151, 30.8667, 31.8519, 88.3011, 148.5094, 195.3559, 130.0234, 98.3548, 12.5227, 0.0, 87.1125], [28.4393, 94.9186, 57.2931, 38.5676, 56.4571, 88.1955, 65.1181, 102.0234, 150.2745, 17.5758, 40.7755, 467.375, 5.72, 99.6834, 6.3514, 0.56, 37.4815, 96.129, 171.5472, 29.7627, 227.1562, 66.0, 0.0, 10.0189, 57.4438, 55.6979, 27.1382, 63.506, 1.2041], [28.3178, 82.7919, 64.0862, 73.3243, 18.6286, 125.3233, 112.1181, 116.2456, 127.3333, 0.3636, 46.1633, 28.9375, 0.0, 41.7638, 0.0, 25.44, 60.1852, 66.6882, 111.3679, 206.3729, 69.8594, 134.6935, 17.9773, 11.283, 72.475, 10.8646, 179.9024, 137.0964, 101.3878], [17.7383, 44.0271, 77.4655, 47.4459, 112.6857, 155.7218, 51.8661, 48.8889, 1.5882, 16.3939, 3.5306, 66.4375, 0.16, 50.8141, 102.9189, 54.3333, 88.5926, 54.4301, 126.783, 65.0847, 135.75, 199.4032, 18.9773, 0.6415, 85.0062, 318.5208, 148.9024, 95.1446, 202.4082], [30.8084, 77.2353, 115.7759, 10.4865, 122.4571, 81.9323, 177.4252, 54.0643, 16.6364, 0.0, 8.0625, 27.6332, 11.1081, 35.4667, 51.2963, 173.6667, 53.8396, 164.9831, 70.1797, 140.871, 14.1364, 0.0, 170.8875, 369.1979, 173.5935, 112.3614, 55.8367], [25.3645, 76.9186, 71.2931, 47.9054, 54.0857, 165.7519, 169.8268, 98.6901, 44.9216, 44.2424, 16.1633, 0.76, 42.1608, 16.4595, 40.6933, 97.037, 111.5161, 87.3585, 121.5254, 178.7109, 93.0161, 26.9318, 2.0943, 172.2812, 175.3333, 145.935, 167.9036, 120.0816], [74.9579, 50.5158, 38.9655, 116.7838, 206.9143, 135.4211, 185.063, 65.4327, 144.0, 28.2121, 28.9592, 72.625, 18.96, 108.3618, 26.1351, 55.1867, 83.7037, 88.7742, 121.4528, 427.6949, 198.5859, 195.9032, 34.9773, 0.0, 92.925, 236.6042, 166.6179, 138.4458, 172.4898], [46.0421, 133.8416, 44.3534, 113.1622, 193.2286, 153.6466, 116.3386, 93.6491, 138.8235, 31.1818, 24.8571, 847.72, 66.7337, 45.0811, 64.6, 0.0, 175.1415, 293.8475, 211.0625, 229.8226, 55.5909, 16.9811, 121.9688, 524.8021, 209.9187, 185.6024, 211.4286], [115.3645, 87.8959, 123.1034, 137.8378, 99.3143, 202.9398, 136.4173, 95.2164, 228.2941, 27.6364, 37.3469, 156.1875, 5.04, 109.7337, 77.4324, 120.7467, 204.5926, 123.5376, 173.6887, 333.8136, 138.375, 121.9839, 47.5227, 10.2075, 183.3063, 239.8021, 311.2683, 190.7831, 302.3878], [89.28, 132.6834, 161.1733, 158.8889, 334.3978, 412.6415, 604.2881, 626.1484, 435.7742, 58.7045, 183.3396, 445.3, 849.8021, 613.8618, 386.6024, 905.4898]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

