created: 20230308221219000
creator: Drevarr
modified: 20230705163521466
modifier: drevarr
tags: ChartData
title: 202303082212_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Seren Nightroad", "Drevarr Moonwillow", "Rayla Shadowmoon", "Momomeko", "Panther B Me", "Koralia Danai", "Oo Dads Mad", "Dark Sidiuz", "Fribble Bibble", "Be\u00eb", "Blanco Padre Guard", "Morton Saltbringer", "Sumatra Satyricon", "Belvyn Brightblade", "Rozaalyna", "Jupi Jupi Jupi", "Tootsie Poppa", "Tegan Parker", "Sygaldry Verdandi", "Zaylen Harker", "Arriasa", "Zadie Miststep", "Raelyn Sunray", "Brother Titus", "Tribal S", "Viral Marketing", "My Birthday Girl", "Kmpek", "Ravioli Fetabringer", "Xanvias Tseli", "Cerys Fireblade", "Mac Chiato", "Legacy Of Mathus", "Raziel Umbra", "Eibh\u00ebar", "Gavann", "K\u00f4sair", "Smol Daddy Tika", "Smol Gluvs", "Domina Flagbringer", "Mike The Archmagus", "Primal Clone", "Lord Erin The Wise", "Ryvalia Fazebringer", "Ace Hammers", "Black Raspberry Pie", "Demon Sekhmet", "Mistwalker Caelon", "\u00c1rkantor", "Xyntharos"];
const professions = ["Scourge", "Scrapper", "Herald", "Chronomancer", "Scourge", "Firebrand", "Spellbreaker", "Scourge", "Scrapper", "Scourge", "Firebrand", "Chronomancer", "Soulbeast", "Firebrand", "Scourge", "Dragonhunter", "Scourge", "Tempest", "Firebrand", "Firebrand", "Druid", "Tempest", "Firebrand", "Berserker", "Druid", "Firebrand", "Scrapper", "Vindicator", "Firebrand", "Berserker", "Berserker", "Tempest", "Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Spellbreaker", "Tempest", "Chronomancer", "Weaver", "Chronomancer", "Vindicator", "Chronomancer", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 2, 2, 19, 14, 0, 2, 10, 5, 21, 5, 0, 0, 4, 3, 0, 0, 0, 0, 2, 4], [0, 0, 0, 0, 0, 13, 21, 3, 2, 3, 0, 0, 0, 4, 0, 6, 0, 5, 0, 0, 0, 4, 7, 9, 0, 1, 15, 2, 0], [0, 0, 0, 0, 0, 27, 2, 15, 13, 26, 2, 16], [22, 0, 1, 0, 40, 0, 0, 0, 2, 0, 0, 0, 6, 9, 2, 0, 7, 8, 5, 1], [1, 0, 0, 0, 0, 5, 9, 0, 1, 9, 5, 18, 8, 0, 1, 10, 0, 1, 0, 6, 0, 4, 10, 2, 8, 1, 0, 0, 5, 5, 2], [0, 0, 0, 0, 2, 15, 22, 2, 1, 6, 3, 21, 16, 0, 0, 0, 6, 0, 0, 0, 0, 0, 4, 0, 0, 2, 2, 2, 6, 1, 1], [0, 3, 1, 0, 0, 68, 29, 0, 0, 3, 10, 6, 2], [4, 4, 5, 1, 17, 5, 0, 2, 15, 3, 1, 9, 0, 4, 10, 28, 2, 0, 8, 0, 7, 1], [0, 0, 0, 1, 0, 6, 18, 0, 0, 6, 40, 4, 5, 0, 0, 3, 8, 0, 0, 0, 0, 2, 2, 5, 0, 4, 6, 0, 0, 8, 2, 10], [0, 1, 0, 21, 14, 1, 2, 9, 1, 17, 28, 0, 0, 0, 11, 0, 0, 0, 0, 0, 4, 2, 4, 2, 0, 0, 6, 9, 3, 1], [0, 0, 0, 0, 4, 0, 19, 0, 1, 3, 2, 25, 13, 1, 5, 26, 0, 0, 0, 2, 0, 5, 0, 18, 0, 1, 0, 5, 5, 1, 0], [0, 0, 0, 0, 0, 29, 14, 1, 1, 0, 3, 2, 14, 0, 1, 9, 0, 0, 2, 4, 0, 1, 1, 2, 1, 4, 0, 6, 30, 13, 0], [0, 1, 1, 21, 3, 0, 7, 8, 12, 8, 0, 0, 2, 4, 0, 0, 1, 11, 0, 11, 10, 8, 6, 4, 12, 2, 9, 0], [0, 0, 0, 13, 38, 46, 1, 6, 5, 2, 32], [0, 0, 0, 0, 16, 20, 0, 14, 4, 13, 11, 7, 2, 29, 0, 1, 0, 4, 1, 3, 0, 0, 2, 3, 2, 1, 8, 3], [0, 0, 0, 0, 2, 17, 20, 1, 5, 6, 7, 16, 1, 0, 0, 3, 7, 0, 0, 0, 14, 0, 6, 1, 4, 3, 0, 0, 9, 15, 8, 0], [0, 1, 0, 0, 2, 21, 19, 3, 6, 8, 1, 14, 3, 0, 0, 1, 4, 0, 0, 0, 9, 1, 8, 0, 9, 6, 3, 0, 6, 10, 10, 1], [0, 0, 0, 2, 57, 8, 5, 0, 0, 16, 2, 8, 0, 1, 6, 0, 0, 0, 4, 0, 6, 0, 6, 18, 2, 1, 0, 3, 3], [0, 1, 0, 7, 2, 13, 33, 4, 1, 1, 4, 23, 6, 0, 10, 2, 0, 0, 0, 24, 0, 10, 0, 0, 5, 3, 7, 0, 0], [0, 1, 0, 0, 0, 22, 21, 0, 1, 0, 24, 14, 6, 13, 15, 0, 0, 0, 9, 1, 2, 5, 4, 1, 8, 0, 2, 2, 7, 1], [0, 0, 0, 2, 10, 22, 16, 2, 8, 16, 12, 10, 0, 0, 8, 3, 0, 16, 0, 8, 5, 1, 3, 11, 7, 5, 2, 1], [0, 0, 0, 0, 5, 16, 3, 5, 0, 0, 5, 68, 8, 0, 0, 1, 9, 0, 0, 0, 33, 0, 0, 0, 0, 10, 6, 0, 0, 0, 0], [0, 0, 0, 0, 19, 1, 0, 7, 21, 12, 23, 0, 0, 6, 3, 1, 0, 12, 1, 15, 4, 4, 4, 8, 0, 14, 9, 5, 3], [14, 20, 0, 0, 9, 29, 0, 0, 0, 20, 0, 3, 7, 6, 8, 20, 0, 12, 17, 10, 1], [1, 0, 0, 0, 1, 9, 25, 1, 8, 6, 0, 7, 16, 0, 1, 6, 10, 0, 0, 0, 15, 0, 9, 4, 0, 7, 21, 0, 1, 17, 13, 1], [0, 0, 0, 34, 18, 0, 0, 1, 30, 10, 13, 0, 0, 1, 26, 0, 0, 0, 5, 0, 1, 0, 5, 10, 10, 0, 0, 9, 10, 0], [0, 4, 0, 1, 0, 26, 23, 0, 0, 5, 2, 17, 12, 0, 0, 7, 35, 0, 1, 1, 7, 1, 7, 5, 2, 7, 0, 0, 4, 15, 4, 3], [1, 18, 26, 35, 3, 36, 56, 12, 3], [1, 0, 0, 2, 1, 21, 22, 0, 4, 5, 19, 20, 9, 0, 3, 14, 0, 3, 0, 12, 0, 9, 7, 4, 14, 3, 0, 4, 17, 7, 2], [0, 0, 0, 2, 2, 27, 20, 1, 2, 1, 24, 28, 24, 0, 0, 3, 8, 0, 0, 0, 5, 0, 1, 11, 0, 18, 5, 0, 4, 20, 1, 1], [0, 2, 0, 3, 12, 15, 7, 9, 3, 6, 22, 5, 0, 0, 6, 14, 0, 4, 4, 25, 0, 21, 4, 10, 16, 2, 0, 2, 12, 5, 0], [0, 0, 0, 2, 20, 16, 10, 1, 10, 11, 25, 8, 0, 0, 8, 15, 1, 0, 26, 1, 6, 6, 0, 4, 17, 10, 13, 15, 10], [0, 0, 0, 1, 4, 37, 0, 7, 14, 14, 22, 11, 0, 0, 13, 26, 0, 1, 0, 10, 0, 11, 8, 19, 0, 8, 18, 13, 1], [0, 0, 10, 20, 60, 13, 0, 2, 16, 12, 27, 15, 0, 0, 1, 21, 0, 0, 0, 13, 5, 12, 12, 1, 4, 3, 9, 6, 3, 0], [0, 0, 0, 0, 6, 26, 44, 2, 7, 13, 9, 22, 15, 0, 0, 0, 28, 0, 1, 0, 15, 1, 10, 5, 3, 4, 6, 1, 35, 12, 2], [0, 0, 0, 1, 8, 33, 36, 2, 1, 12, 2, 44, 15, 0, 0, 6, 15, 0, 9, 1, 0, 3, 7, 15, 7, 17, 22, 0, 4, 7, 0], [0, 7, 13, 110, 0, 0, 30, 0, 0, 0, 22, 0, 17, 10, 6, 9, 11, 25, 11, 0, 0], [0, 0, 0, 0, 5, 26, 20, 0, 1, 5, 9, 2, 5, 0, 57, 21, 0, 0, 0, 8, 0, 9, 15, 21, 1, 13, 0, 7, 27, 18, 4], [2, 14, 14, 25, 0, 6, 2, 6, 40, 10, 0, 0, 5, 14, 0, 0, 0, 15, 3, 15, 21, 3, 22, 20, 0, 4, 28, 14, 1], [0, 1, 0, 0, 7, 33, 27, 4, 2, 3, 10, 17, 42, 0, 0, 7, 27, 0, 0, 0, 12, 9, 7, 10, 3, 14, 6, 10, 41, 0, 0], [1, 0, 0, 0, 3, 35, 21, 1, 1, 1, 28, 64, 31, 0, 0, 12, 14, 0, 0, 0, 27, 1, 7, 5, 6, 3, 16, 4, 18, 2, 4], [0, 0, 0, 0, 0, 39, 20, 0, 0, 14, 9, 31, 36, 0, 0, 11, 38, 0, 0, 0, 15, 7, 6, 7, 18, 2, 12, 3, 15, 26, 13], [1, 9, 1, 4, 8, 24, 23, 5, 6, 29, 25, 16, 7, 0, 3, 47, 29, 0, 0, 0, 1, 3, 33, 8, 11, 0, 21, 0, 0, 6, 14, 0], [4, 0, 0, 1, 6, 41, 35, 3, 1, 6, 7, 21, 11, 0, 0, 3, 18, 0, 0, 0, 28, 0, 5, 30, 1, 37, 26, 0, 20, 24, 5, 3], [0, 3, 0, 18, 6, 47, 31, 2, 6, 6, 2, 23, 44, 0, 0, 13, 2, 0, 0, 11, 8, 0, 13, 22, 15, 9, 16, 7, 25, 5, 6], [0, 0, 0, 0, 1, 39, 26, 9, 20, 1, 16, 20, 26, 0, 0, 4, 42, 0, 0, 0, 48, 10, 43, 5, 2, 1, 14, 0, 14, 22, 5], [0, 2, 0, 4, 1, 40, 30, 1, 4, 8, 43, 54, 0, 5, 36, 0, 0, 33, 6, 55, 15, 2, 13, 16, 7, 47, 11, 3], [1, 1, 0, 0, 5, 61, 53, 3, 8, 10, 7, 74, 36, 0, 0, 8, 26, 0, 1, 4, 7, 1, 21, 7, 20, 11, 20, 0, 11, 48, 14, 10], [4, 0, 0, 1, 10, 108, 75, 3, 10, 23, 40, 114, 19, 1, 20, 18, 0, 0, 0, 15, 1, 37, 15, 36, 5], [0, 0, 0, 3, 5, 73, 105, 11, 8, 28, 18, 101, 78, 0, 5, 12, 37, 0, 1, 12, 40, 12, 39, 9, 19, 21, 57, 0, 26, 92, 16, 17]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

