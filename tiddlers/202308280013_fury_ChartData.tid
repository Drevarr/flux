created: 20230828001355000
creator: Drevarr
tags: ChartData
title: 202308280013_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Kadie Mae", "Liu Mira", "Trodek", "Healdone", "Ayrion", "Xanvias Einzbern", "Lookatyou Lookatme", "Mom Tapper", "Ryasma", "Ax Axun", "Flick Embermage", "Heals For Daddy", "Reina Armitage", "Drevarr Moonwillow"];
const professions = ["Renegade", "Berserker", "Scrapper", "Scrapper", "Tempest", "Berserker", "Catalyst", "Spellbreaker", "Harbinger", "Vindicator", "Weaver", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.9611, 32.4474, 49.8249, 39.3267], [28.0103, 99.4014, 0.0, 0.0, 17.514], [0.0, 16.335, 59.695, 66.149, 5.3102, 0.0, 4.014], [75.0456, 0.0, 26.8716, 96.3976], [0.0, 0.0, 0.0, 0.0, 0.0, 31.9253, 9.9015, 0.0, 0.0, 0.0, 65.1558, 20.559, 33.2779, 25.172, 12.4504], [221.0698, 0.0, 0.0, 0.0, 9.5082, 19.1682], [60.0647, 74.195, 51.876, 25.4054, 55.274, 0.0, 0.0, 55.1034, 0.0, 0.0, 0.0], [32.316, 82.4505, 81.939, 0.0, 31.9, 8.5275, 34.416, 36.8874, 0.0, 34.32, 3.822], [0.0, 0.0, 0.0, 0.0, 43.8867, 9.7994, 13.1979, 2.4665, 56.1078, 76.7216, 79.5245, 0.0, 58.7803, 13.775, 17.3659, 0.0, 25.7508, 0.0, 0.0, 0.0], [11.8944, 62.5536, 61.4113, 35.623, 103.6113, 32.0211, 19.5324, 23.664, 44.2402, 84.6663, 3.003, 45.2529, 24.1135, 30.5698, 55.5588], [21.4872, 17.2656, 29.2592, 39.9987, 181.1284, 17.1996, 45.4731, 41.4555, 0.0, 148.4922, 43.23, 68.1496, 29.58, 11.7088], [340.9835, 0.0, 130.9631, 85.6515, 80.2277, 20.496, 202.653, 10.2377], [31.9452, 103.5432, 61.071, 215.6252, 52.1732, 104.0088, 50.0294, 67.2983, 102.6665, 112.1808, 132.462, 80.3741, 134.6035, 65.4451, 208.4904, 54.61, 25.974], [0.0, 0.0, 15.996, 48.5639, 88.5996, 34.2182, 55.2639, 26.0695, 50.4348, 281.5941, 809.7182, 249.051, 181.566, 170.8535, 130.4118, 0.0, 479.8674, 78.7, 30.726]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

