created: 20230204000024000
creator: Drevarr
modified: 20230705163518627
modifier: drevarr
tags: ChartData
title: 202302040000_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Evil Stepmother", "Whose Guardian", "Kahless The Drunk", "Tyrisai", "\u00c2 R K", "Air One Com", "Raven The Guard", "Palatine Of Ruin", "Ravioli Fetabringer", "Koralia Danai", "Zady Stardust", "Johosh The Great"];
const professions = ["Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[135.2641, 93.0451, 123.0676, 51.6611, 217.4283], [74.1642, 454.3488, 108.0586, 38.4532], [20.3311, 0.0, 0.0, 0.0, 6.9927, 20.8858, 4.9266, 0.0, 5.0585, 57.3981, 2.4662, 14.0679, 32.4292, 91.872, 0.0, 42.7284, 23.6579, 23.3926, 39.4052, 39.8309, 15.341, 27.2431, 20.5102, 107.3203, 20.0634, 35.1849, 38.8314, 0.0, 42.4575], [22.2737, 38.522, 0.0, 0.0, 22.5948, 22.5968, 9.0707, 48.8628, 60.8777, 39.4125, 31.4376, 54.2871, 12.388, 80.9028, 138.5748, 70.6563, 93.7165, 113.1438, 102.3176, 68.3468, 71.9176, 14.4097, 71.045, 70.7635, 70.7124, 66.786, 67.1555, 22.3351, 62.1486], [27.0452, 38.6303, 20.4792, 23.6178, 44.5833, 46.3932, 11.9977, 40.5367, 15.6434, 53.8919, 18.2239, 40.8366, 52.4304, 36.8856, 71.6859, 168.5798, 109.7338, 68.8572, 57.6406, 107.8506, 51.6366, 67.0507, 0.0, 110.3757, 114.9089, 126.3163, 39.2117, 231.5655], [101.0707, 108.6128, 69.2496, 0.0, 78.1319, 72.1123, 43.9627, 182.7792, 0.0, 65.7048, 137.9448, 148.896, 209.808, 150.386, 281.9731, 138.105, 35.1589, 121.9561, 45.3512, 37.2728, 72.0691, 96.5549], [37.8332, 32.7608, 43.5624, 0.0, 59.9024, 56.3774, 31.5592, 116.8826, 14.6785, 179.0769, 53.2959, 97.5492, 0.0, 150.7176, 172.1187, 198.9059, 112.3408, 155.4278, 104.186, 108.1269, 140.9008, 30.6384, 77.5078, 81.2083, 79.4902, 37.2135, 97.5861, 68.2533], [121.5837, 44.5132, 384.9912, 193.9032, 219.1117, 240.2858, 215.9894, 166.6568, 109.4462, 154.44, 114.0046, 128.8056, 454.871], [119.1947, 192.7699, 80.7316, 167.6493, 94.4165, 94.9473, 71.25, 240.2136, 240.687, 183.5262, 126.7094, 243.0648, 179.2597, 46.2495, 321.2867, 99.9385, 61.6202, 189.4426, 116.8909, 91.7378, 76.7745, 21.6918, 151.3782], [77.6204, 121.3632, 37.9772, 32.868, 365.6835, 476.4474, 367.407, 279.279, 191.1832, 153.1333, 286.4347, 85.4277, 104.4358, 177.1699, 224.8405, 89.7543, 146.7472, 19.6106, 136.0476], [140.6956, 56.293, 126.2688, 83.5279, 193.8812, 110.3269, 112.4021, 144.2409, 277.4459, 80.5539, 160.3917, 0.0, 270.1512, 239.9679, 269.5622, 261.1981, 282.6208, 162.3766, 161.2771, 237.7861, 156.8498, 107.0837, 371.8349, 58.3637, 53.9833, 120.8088, 62.7482, 222.3855], [84.3042, 114.4462, 22.8648, 45.715, 92.1514, 92.5911, 194.8514, 297.9264, 498.7923, 66.0942, 95.4324, 38.3876, 90.882, 333.7047, 293.5647, 365.119, 316.448, 143.8969, 116.8035, 123.2946, 50.626, 117.2714, 283.3152, 118.0903, 113.3086, 137.2297, 85.0076, 223.9461], [137.7723, 123.0247, 43.4784, 72.5458, 117.5212, 140.8025, 121.5131, 212.4562, 255.6161, 449.9649, 119.416, 209.4309, 37.0804, 291.9708, 237.9798, 395.6238, 273.9194, 439.208, 186.1216, 186.9769, 260.7462, 141.2881, 143.4365, 638.8301, 165.1411, 137.0432, 163.9548, 67.4971, 167.535]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

