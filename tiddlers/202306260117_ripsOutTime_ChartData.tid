created: 20230626011754000
creator: Drevarr
modified: 20230705163538044
modifier: drevarr
tags: ChartData
title: 202306260117_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Requiem", "Zayde Sunsabre", "Arcanophage Farra", "Be\u00eb", "Arch Wells", "Smol Gluvs"];
const professions = ["Reaper", "Spellbreaker", "Spellbreaker", "Scourge", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.9697, 28.1856, 1.9888, 14.7952, 13362.7019, 15.6902, 18.2391, 3.0, 17.24, 14.2176, 11.1034, 11.0923, 14.6184, 8.7711, 25.9184, 2.037, 12.1375], [12.3704, 14.0303, 8541.2579, 8.2556, 14.4318, 31.75, 19.6287, 18.2022, 22.1506, 25.7019, 15.7174, 0.0, 33.44, 20.4686, 20.7759, 24.2615, 22.3421, 15.3373, 15.3061, 0.0, 12.56, 19.8222, 0.0], [22.2963, 16.7576, 0.0, 17.7698, 19.0, 41.7386, 24449.5568, 25.631, 0.0, 32.0299, 22.3933, 23.6265, 10.2919, 13.5924, 8.1481, 32.33, 15.9498, 25.8103, 43.7692, 27.4342, 17.9036, 29.7143, 0.0, 12.155, 17.2, 0.0], [2.162, 16.8254, 11960.5611, 31.6023, 40.0787, 12955.741, 35.6894, 15.481], [22.7037, 4.4141, 0.0, 13.5159, 21.5, 18.5, 0.0, 0.0, 26.6707, 24139.7079, 17.1024, 12.3851, 5838.1929, 17.4108, 0.0, 15.29, 11.9079, 12.4138, 17.7692, 14.9211, 8.8434], [15.7037, 12.596, 8.9524, 14.85, 11.0227, 20.6591, 25583.0, 0.9697, 18.4192, 6.573, 10.2349, 10.6522, 10.7038, 10.33, 10.09, 9.8326, 10.931, 11.2, 15.6974, 10.9639, 15.4898, 0.0, 5379.1375, 47734.1333, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

