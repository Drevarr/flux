created: 20230306221045000
creator: Drevarr
modified: 20230705163521379
modifier: drevarr
tags: ChartData
title: 202303062210_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Raelyn Sunray", "Ark Darkness", "Blanco Padre Guard", "Kahless The Drunk", "Viral Marketing", "Sygaldry Verdandi", "Zaylen Harker", "Bella Sassy", "Ravioli Fetabringer", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[80.2723, 12.5126, 0.0, 96.6011, 0.0, 0.0, 52.3209, 35.9121, 67.5161, 34.5068, 22.5273, 75.8128, 38.9565, 61.128, 114.1881, 74.3658, 72.9483, 0.0, 87.3185, 33.5309, 120.7987, 0.0, 108.1358, 31.1554, 106.3574, 0.0, 57.6202, 26.0928, 126.0874, 92.6652, 32.6724, 41.3816, 44.5968, 18.7372], [325.5021, 436.2779, 390.2629, 45.2339, 4.4683, 190.805, 119.4893, 688.8067, 36.7901, 24.1567, 509.3366, 41.2171, 252.5989, 0.0, 198.5069, 57.0586, 348.4454], [405.1839, 156.5178, 0.0, 133.5216, 0.0, 140.8789, 208.4043, 0.0, 171.696, 156.9971, 284.7699, 269.7283, 63.0145, 182.3212, 171.3148, 98.7811, 409.248, 0.0, 398.9563, 12.7915, 285.0193, 0.0, 225.8381], [135.2371, 154.7616, 0.0, 83.7018, 0.0, 0.0, 94.6759, 0.0, 153.9502, 322.3004, 0.0, 189.5712, 181.9613, 269.1766, 307.9253, 247.304, 95.0208, 39.9643, 75.3032, 93.6662, 380.6006, 299.3174, 52.2715, 207.4087, 27.49, 77.1264, 60.0653, 29.9141, 339.6267, 35.7337, 209.375, 175.5828, 293.7008], [214.5867, 236.9718, 0.3883, 166.1423, 24.1256, 25.4054, 230.7014, 122.3995, 74.5172, 250.441, 63.9724, 161.112, 180.6977, 324.3756, 273.8904, 153.2916, 153.0726, 227.8475, 109.0819, 473.1754, 15.9782, 5.3273, 354.227, 64.4765, 223.0941, 42.3171, 196.223, 144.288, 333.8294, 306.9171, 84.8258, 123.1898, 254.5848, 218.9775], [368.9362, 367.8606, 0.0, 225.1349, 0.0, 11.8275, 220.9103, 64.2611, 188.0248, 285.4814, 0.0, 219.912, 183.9029, 252.9904, 246.0315, 161.6353, 208.4024, 15.7748, 227.1831, 121.5494, 605.687, 8.9467, 424.1266, 71.6731, 353.7085, 18.1156, 187.3123, 144.7027, 458.3578, 407.4501, 59.8902, 199.5071, 251.9172, 208.593], [387.5214, 229.7277, 5.4915, 251.3347, 14.3158, 86.4092, 204.6065, 97.9608, 183.8539, 248.0101, 70.4444, 160.4848, 149.816, 354.4949, 384.8563, 293.9706, 108.7295, 0.0, 180.0632, 102.191, 524.1197, 18.7963, 0.0, 494.507, 15.2731, 319.1306, 8.6279, 181.7712, 31.0349, 405.0581, 397.5424, 135.5321, 257.4413, 236.5272, 260.2145], [161.5991, 285.9248, 221.4085, 0.0, 61.9304, 152.679, 193.7092, 152.684, 242.7333, 138.9596, 286.2384, 127.8414, 323.3084, 285.1011, 184.8231, 306.2936, 31.0068, 246.0089, 72.6384, 545.9933, 17.3189, 41.0206, 448.3349, 57.7085, 356.5073, 35.3997, 197.1216, 159.8746, 497.2363, 449.8487, 247.6313, 199.3479, 368.9496, 188.2002], [604.6125, 327.2494, 0.0, 231.6132, 0.0, 9.1634, 236.4274, 74.1909, 108.0332, 270.2438, 47.9793, 252.6048, 176.1055, 318.9209, 300.004, 337.096, 64.8814, 231.059, 67.9142, 609.6384, 29.4302, 385.5696, 44.6462, 267.7595, 24.2015, 222.6182, 98.2541, 411.5866, 391.1316, 227.3711, 278.6096, 342.0684, 382.6463], [502.5915, 290.0957, 0.0, 223.071, 0.0, 8.121, 213.9604, 89.2657, 147.9545, 315.1856, 54.0156, 378.0448, 173.6707, 288.8609, 374.921, 211.6976, 209.2437, 279.1755, 116.9318, 460.4746, 15.3216, 12.0506, 361.2811, 35.532, 371.7262, 63.041, 252.1584, 189.769, 426.3, 435.1331, 199.1515, 253.3031, 278.046, 217.623], [608.5668, 378.0134, 287.7966, 40.5112, 231.3133, 231.9366, 151.6785, 337.0044, 188.6814, 329.5152, 162.668, 376.8472, 434.9353, 366.5416, 274.7685, 200.1072, 144.673, 537.6672, 22.5238, 540.9998, 96.4214, 377.2074, 231.4166, 149.8522, 503.375, 552.3487, 281.8622, 445.0114, 253.6956, 284.8965]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

