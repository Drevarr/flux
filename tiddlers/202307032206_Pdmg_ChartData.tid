created: 20230703220627000
creator: Drevarr
modified: 20230705163541463
modifier: drevarr
tags: ChartData
title: 202307032206_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Grasszanine", "Arcanophage Farra", "Morvtron", "Be\u00eb", "Necrotic Windrunner", "Primal Clone", "Cpt Z Brannigan", "Smol Daddy Tika", "Lucky Leipreach\u00e1n", "Eibh\u00ebar", "Be\u00eb", "\u00c1rkantor", "Lord Erin The Wise", "Morv\u00e4rth", "Smol Dome Dim", "Oo Dads Mad", "\u00c1rkantor", "Inedible Plant", "Kary\u00edna", "Mike The Archmagus", "Ateriuz", "Mistwalker Cael", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Chronomancer", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Reaper", "Chronomancer", "Scrapper", "Berserker", "Scrapper", "Chronomancer", "Reaper", "Herald", "Weaver", "Reaper", "Berserker", "Berserker", "Vindicator", "Vindicator", "Vindicator", "Weaver", "Berserker", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[42.2383, 69.4861, 0.0, 20.1186, 3.5455, 58.507, 22.0381, 128.1756, 45.2366, 294.7703, 260.6727, 692.2791, 244.5, 277.2292, 407.2321, 0.4805, 0.0, 235.3333, 128.6111, 435.8214, 219.3133, 360.7558, 144.7344, 368.1696], [18.9275, 0.0, 38.7917, 66.9206, 31.5424, 0.0, 121.3447, 0.0, 39.0229, 50.4731, 234.4459, 609.6364, 163.8372, 283.9444, 147.5, 202.1607, 135.5844, 129.703, 285.9825, 413.5833, 449.2857, 437.4217, 166.0349, 49.5781, 485.7135], [0.0, 0.0, 25.7778, 63.7381, 4.5085, 146.3333, 96.9683, 40.1619, 90.1603, 112.043, 0.0, 151.6622, 453.0182, 95.5581, 173.537, 0.0, 165.7857, 581.2468, 94.6733, 575.0526, 288.8704, 557.2619, 295.8072, 242.5233, 363.7344, 512.2865], [17.057, 0.0, 0.0, 0.0, 245.8441, 32.9333, 217.8397, 38.957, 0.0, 1668.7703, 870.0727, 420.9535, 1582.2963], [25.2798, 0.0, 182.1528, 126.7698, 51.0508, 0.0, 340.1597, 91.8381, 210.1298, 135.0215, 13.093, 730.1622, 1315.8837, 919.537], [0.0, 91.5714, 103.8397, 114.4194, 150.3953, 876.5541, 190.2364, 344.6047, 149.7407, 0.0, 577.0714, 407.5844, 290.3366, 638.2456, 390.2407, 740.7024, 691.3614, 659.593, 383.4375, 501.9474], [0.0, 1.0833, 47.0952, 0.0, 196.2978, 11.5333, 45.084, 17.1398, 0.0, 267.9324, 341.1091, 507.5116, 182.1481, 98.4583, 341.125, 226.9351, 133.8713, 440.7193, 542.5463, 444.9881, 304.3614, 216.7558, 283.625, 761.8246], [438.8182, 760.3366, 434.2105, 149.787, 1066.0, 1011.5904, 46.407, 1532.1719, 1265.3216], [492.1558, 286.1683, 554.9298, 300.7315, 1276.3571, 1931.6747, 1266.0233, 1309.6406, 331.5497], [0.0, 108.7778, 237.5476, 437.8475, 20.3333, 322.4512, 79.3238, 227.4809, 192.1183, 235.6744, 941.7162, 845.0909, 966.1628, 660.6296, 213.0208, 809.7321, 961.0909, 24.495], [3.1762, 0.0, 73.3889, 82.4762, 99.6441, 23.5758, 184.4144, 20.9333, 37.542, 53.2151, 16.6047, 362.7703, 620.5091, 609.1163, 344.5741, 215.3125, 207.7143, 224.1039, 238.2574, 773.7018, 570.7037, 696.1905, 314.3614, 590.0, 467.0781, 625.7602], [759.2727, 0.0, 762.0357, 305.4026, 275.8218, 1097.9123, 1372.3796, 2121.0952, 971.3012, 770.2442, 495.4531, 1552.2632], [3043.1667, 799.5783, 1795.2791, 1518.5781, 2399.7836], [228.3523, 100.1389, 52.873, 73.0, 444.711, 259.7714, 78.916, 505.871, 461.6744, 2076.8919, 702.2545, 2687.5116, 1916.2407, 173.4792, 1010.0893], [618.6494, 745.2475, 768.6491, 1555.7315, 1404.2381, 1453.7349, 636.907, 265.3438, 2108.1345], [0.0, 353.4455, 2281.6842, 1870.25, 2933.7857, 3482.8193, 1551.8372, 1470.2344, 549.6199], [36.5389, 57.5417, 58.0, 75.322, 0.0, 121.6946, 68.1333, 444.2727, 595.8605, 332.9074, 1458.7292, 48.0714, 635.4416, 381.7624, 815.5263, 853.1389, 1796.25, 1246.6627, 2140.1395, 1016.2188, 1858.6608], [0.0, 0.0, 222.625, 142.1984, 50.0847, 108.5152, 796.9556, 435.581, 195.8473, 490.4624, 882.0698, 1322.7703, 3510.2364, 1045.0233, 758.7222, 1482.1667, 1196.8214, 1089.2468, 559.396, 1486.9649, 236.3519], [23.2021, 99.3611, 116.5952, 68.2881, 0.0, 461.9848, 236.9905, 246.1679, 284.6452, 298.0465, 2106.7838, 1414.3818, 1231.8605, 665.4815, 320.125, 522.2321, 1031.7273, 427.1485, 1469.9649, 1126.3611, 1999.0595, 190.4217, 1104.8605, 512.75, 1509.5497], [133.2332, 103.7143, 354.7222, 201.6032, 46.2542, 69.4848, 378.6477, 170.1048, 365.626, 140.6559, 361.5581, 2882.5, 2105.1273, 2207.2093, 1027.5926, 628.9375, 323.6607, 504.7792, 99.5743, 749.9825, 1679.4352, 1659.131, 987.2048, 864.314, 752.75, 1675.8246], [168.0933, 0.0, 348.1944, 255.0079, 171.5763, 634.5703, 162.7238, 222.2443, 418.0108, 451.9302, 3543.5946, 4406.3455, 459.2558, 3729.1111, 2947.1094, 3001.117], [69.9171, 147.7778, 57.4524, 43.7458, 0.0, 313.9696, 44.3238, 99.2901, 367.0753, 393.7442, 2495.8108, 1235.4909, 839.6512, 2775.037, 1492.9167, 2568.2857, 1041.0909, 1269.0297, 2299.807, 1625.0833, 2461.5476, 1738.8675, 3075.7326, 481.6875, 2219.269], [104.4456, 382.5143, 318.1528, 474.246, 0.7458, 268.6061, 709.5336, 241.6571, 285.6947, 309.5914, 303.7907, 2648.5135, 3749.0545, 2871.1163, 2678.6481, 611.25, 363.1964, 2270.8182, 1673.4059, 1974.8947, 272.8704, 3030.4762, 3343.7831, 742.907, 2003.0625, 3420.3333], [115.9378, 188.8194, 373.5079, 0.0, 672.8948, 56.5238, 298.4198, 100.1828, 269.2791, 2872.7973, 6735.9818, 2587.2558, 368.5, 2716.375, 3583.3214, 3193.013, 1522.7525, 1814.9123, 2860.0741, 3735.3452, 5012.9639, 4377.8372], [45.3782, 0.0, 163.5278, 58.9603, 188.8305, 526.5425, 91.8, 51.1069, 104.3978, 19.6977, 3014.6757, 5471.0727, 1342.4651, 2861.7407, 2252.7917, 2153.6607, 2477.7922, 1511.604, 1786.3684, 1697.2685, 3407.8929, 3837.7108, 4022.2326, 2338.4062, 3391.6316]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

