created: 20230527000807000
creator: Drevarr
modified: 20230705163531694
modifier: drevarr
tags: ChartData
title: 202305270008_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "High Sorcer Baradun", "Eibh\u00ebar", "Newtype Khan", "Lucky Leipreach\u00e1n", "Demon Sekhmet", "Smol Gluvs", "Lord Erin The Wise", "Cedryn X", "Rozaalyna", "Chrozz", "Daddys Lil Orchid", "Duke Silvver", "Legacy Of Mathus", "Kary\u00edna", "Melli Dragonswrath", "Panther B Me", "The Fancy Cheese", "Hauzzy", "Smol Bee", "Sofya De Nova", "Kosair", "Cyclotechnist Farra", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Soulbeast", "Weaver", "Chronomancer", "Spellbreaker", "Scrapper", "Spellbreaker", "Scourge", "Weaver", "Berserker", "Scourge", "Willbender", "Vindicator", "Vindicator", "Berserker", "Vindicator", "Berserker", "Scourge", "Scrapper", "Berserker", "Vindicator", "Weaver", "Dragonhunter", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[75.1146, 7.0497, 0.0, 0.0, 0.0, 41.2194, 0.0, 7.5263, 67.7557, 0.0, 47.8613, 0.0, 10.8542, 65.4453, 0.0, 19.2151, 21.2057, 81.0303, 0.0, 14.8378, 53.5141, 20.65, 10.1682, 44.9817, 16.0864], [23.8828, 16.6414, 0.0, 0.0, 64.2405, 0.0, 30.4605, 137.9618, 19.578, 0.0, 0.0, 103.4453, 0.0, 1.6559, 0.0, 0.0, 0.0, 0.0, 65.1081, 80.2641, 96.6822, 86.0427, 0.0], [66.8021, 45.0654, 23.8306, 25.0263, 0.0, 27.3755, 24.0811, 87.3289, 70.6107, 147.1364, 13.5549, 0.0, 23.4167, 64.5, 65.3118, 26.1159, 0.0, 12.6938, 0.0, 0.0, 43.5495, 59.6373, 137.15, 51.8785, 37.8232, 49.0864], [56.375, 49.1885, 0.0, 85.4211, 0.0, 43.4283, 15.7703, 148.6053, 45.9695, 0.0, 5.052, 0.0, 0.0, 47.3711, 73.3978, 4.1739, 0.0, 10.6077, 96.8788, 0.0, 86.6216, 34.2324, 143.125, 57.1308, 72.7134, 76.0988], [103.4149, 291.8542, 85.6484, 230.7957, 81.0145, 84.2037, 10.8995, 334.7273, 0.0, 106.8649, 63.3204, 47.0, 95.7103, 127.2744, 102.5679], [96.0833, 81.5314, 0.0, 73.4474, 0.0, 45.692, 40.8649, 79.9539, 88.1145, 148.4545, 0.0, 0.0, 63.3125, 76.6953, 0.0, 47.6344, 0.0, 0.0, 14.5598, 167.5532, 36.1441, 39.1901, 72.575, 98.4673], [66.0677, 41.7068, 0.0, 68.6579, 39.0938, 34.6118, 33.1351, 133.4605, 170.4351, 13.0909, 2.0, 0.0, 30.5208, 90.6211, 0.0, 95.0215, 37.471, 0.0, 24.3062, 130.1818, 486.8085, 89.3423, 22.4401, 212.9, 192.972], [168.6615, 174.5209, 0.0, 25.6316, 0.0, 110.846, 60.1622, 283.6513, 208.3969, 83.0909, 38.8671], [35.1484, 117.4555, 5.2984, 0.0, 0.0, 72.0316, 123.9324, 62.5724, 303.8931, 0.0, 51.8728, 0.0, 9.0, 98.1992, 98.8817, 31.8406, 42.4444, 11.4067, 17.7576, 123.6937, 57.5458, 0.0, 132.1776, 53.4634, 198.3827], [127.0964, 123.8717, 0.0, 98.9474, 111.0907, 92.9595, 79.9868, 239.9847, 135.7727, 18.8092, 0.0, 10.5938, 102.75, 0.0, 163.6129, 65.2201, 195.9091, 0.0, 141.0991, 81.1303], [78.8281, 115.356, 14.5081, 14.0, 0.0, 106.4831, 30.4189, 112.1316, 204.4504, 25.7273, 10.1676, 37.7021, 73.2083, 104.0312, 172.8387, 21.6304, 28.2778, 48.6029, 70.9697, 2.1064, 232.4144, 61.1514, 270.875, 243.3832, 81.6829, 185.4691], [158.7995, 139.8403, 0.0, 0.0, 0.0, 122.7679, 0.0, 216.1053, 423.9847, 109.4773, 96.7225, 65.0638, 38.8438, 103.7539, 0.0, 68.9234, 174.7576, 0.0, 100.5045, 84.2817, 97.375, 220.7009, 116.3049, 205.7407], [99.8984, 178.6675, 71.3145, 0.0, 0.0, 103.6751, 44.1216, 245.0724, 0.0, 71.2273, 48.8439, 0.0, 189.8958, 243.6602, 0.0, 184.5591, 32.5072, 0.0, 80.3923, 51.7879, 0.0, 185.7838, 74.0951, 1181.575, 75.4112, 177.939, 252.5309], [236.6276, 72.7958, 0.0, 34.9211, 0.0, 141.3671, 104.1081, 199.5658, 341.2672, 0.0, 11.6821, 0.0, 110.5, 64.8516, 0.0, 445.6237, 89.913, 0.0, 48.1818, 0.0, 259.5856, 61.4789, 0.0, 600.1589, 209.5671, 48.9383], [172.5859, 180.8613, 0.0, 206.6579, 78.4375, 158.1561, 82.3649, 251.5395, 264.8397, 259.3409, 56.4451, 45.3723, 141.1562, 139.9961, 0.0, 72.4839, 110.3116, 42.1111, 73.6555, 327.1818, 134.9149, 212.009, 144.007, 15.825, 84.0374, 225.5732, 78.5432], [321.8385, 206.6885, 15.1613, 157.0789, 0.0, 195.5063, 113.7703, 179.5395, 264.313, 349.1818, 109.896, 65.4043, 178.2708, 141.9609, 0.0, 156.5269, 203.1014, 0.0, 21.89, 0.0, 0.0, 51.6126, 43.6127, 0.0, 97.6262, 0.0, 214.4074], [175.263, 149.822, 0.0, 322.2632, 0.0, 144.3987, 4.3649, 303.0263, 291.5573, 54.25, 57.8035, 29.5, 153.2812, 185.8438, 0.0, 244.3226, 132.3986, 0.0, 15.8086, 301.4848, 36.7872, 230.0901, 141.6514, 185.425, 280.5234, 225.628, 247.4074], [247.5703, 113.356, 0.0, 0.0, 0.0, 175.5886, 0.0, 175.3684, 564.6031, 0.0, 0.0, 0.0, 313.082, 0.0, 154.7634, 0.0, 86.2593, 8.2823, 0.0, 254.4234, 137.0669, 0.0, 216.8972, 294.8902, 382.3333], [475.5026, 331.8482, 0.0, 125.6842, 197.8438, 298.2975, 0.0, 221.0066, 755.3817, 29.4091, 8.3815], [394.2812, 241.6675, 37.4435, 28.4737, 0.0, 152.2616, 0.0, 366.5789, 376.9695, 0.0, 74.3353, 0.0, 0.0, 281.0547, 201.8387, 206.4058, 18.8889, 11.8517, 169.4242, 385.5106, 180.1081, 74.3838, 178.0561, 193.5, 90.6296], [281.6094, 272.7068, 0.0, 82.8947, 0.0, 296.7089, 307.4595, 297.2105, 353.4122, 1.1136, 75.9711, 116.5, 117.9792, 262.2539, 0.0, 196.8065, 86.4638, 0.0, 41.2536, 164.0, 141.766, 261.0811, 130.0458, 0.0, 373.243, 235.3598, 211.9012], [641.0052, 253.644, 0.0161, 13.5, 59.4375, 298.135, 270.5, 537.75, 737.6107, 88.5227, 160.2081, 2.266, 57.0729, 174.0273, 0.0, 286.957], [255.5417, 194.822, 0.0, 47.6053, 284.7447, 354.7162, 514.2895, 424.1832, 491.1818, 13.7168, 154.1596, 359.6758, 395.4839, 89.0072, 13.2407, 101.7847, 90.7273, 0.0, 324.7568, 192.088, 471.975, 528.7944, 240.0793, 298.3704], [367.2656, 163.6073, 8.9435, 109.8684, 102.0312, 285.1392, 47.527, 396.1513, 635.7481, 87.0682, 96.0347, 29.7447, 151.5833, 245.293, 0.0, 232.9247, 242.2536, 26.3704, 39.7608, 173.5152, 0.0, 332.1802, 130.5528, 683.7, 796.1963, 203.0732, 229.6296], [592.112, 349.6754, 50.0161, 192.7895, 211.8438, 392.8924, 250.1216, 620.8553, 848.6107, 56.5455, 108.8208, 0.0, 47.8542, 476.5117, 0.0, 437.7527, 57.6522, 47.9444, 50.5072, 0.0, 0.0, 506.6667, 71.993, 277.5, 407.3551, 332.5305, 64.8889]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

