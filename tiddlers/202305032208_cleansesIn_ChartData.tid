created: 20230503220838000
creator: Drevarr
modified: 20230705163528028
modifier: drevarr
tags: ChartData
title: 202305032208_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Maaaathexxs", "Aira Draugr", "Belvyn Brightblade", "Rozaalyna", "Mannse Lee", "Tegan Parker", "Tribal S", "Miphest\u00f6", "Gavann", "Skylar Shadowmoon", "Blancooo Padreee", "Elonith Requiem", "Allie Mistwalker", "Be\u00eb", "Koralia Danai", "\u00c1rkantor", "Slautorn", "Mac Adaymia", "Cedryn X", "Smol Gluvs", "Mistwalker Caelon", "Demon Dalham", "Sygaldry Verdandi", "Primal Clone", "Inedible Plant", "Kary\u00edna", "Bella Sassy", "Black Raspberry Pie", "Eibh\u00ebar", "Solus Nex", "Artakama Nahid", "Husky Guard", "Xanvias Einzbern", "Zaylen Harker", "Lucas Ryn", "Tootsie Pop Rocks", "Arriasa", "Newtype Khan", "Sub Train", "Kosa\u00efr", "Ryvalia Fazebringer", "Farra The Bloodless", "Hauzzy", "Drevarr Moonwillow", "Smol Daddy Tika", "Johosh The Great", "Venomina The Fierce", "Lord Erin The Wise", "Zadie Miststep", "Skye Nightroad"];
const professions = ["Scourge", "Herald", "Firebrand", "Scourge", "Scrapper", "Tempest", "Druid", "Tempest", "Firebrand", "Scrapper", "Spellbreaker", "Scourge", "Vindicator", "Scourge", "Firebrand", "Vindicator", "Weaver", "Vindicator", "Berserker", "Scourge", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Scourge", "Tempest", "Dragonhunter", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Druid", "Spellbreaker", "Firebrand", "Catalyst", "Chronomancer", "Vindicator", "Berserker", "Scrapper", "Spellbreaker", "Willbender", "Spellbreaker", "Weaver", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.357, 0.5453, 0.0909, 0.0714, 0.0132, 0.1619], [0.2541, 0.4011, 0.1818, 0.1071, 0.0263, 0.2952, 0.0, 0.0, 0.206], [0.2602, 0.2976, 0.0606, 0.1071, 0.0132, 0.1429, 0.0, 0.0, 0.3072], [0.3146, 0.4233, 0.0303, 0.0132, 0.1095, 0.0, 0.0274, 0.1876], [0.2567, 0.4954, 0.0, 0.0526, 0.1381, 0.0, 0.1233, 0.2417], [0.0, 0.3441, 0.0, 0.0, 0.486, 0.251], [0.3552, 0.4251, 0.1212, 0.0714, 0.0263, 0.2905, 0.0147, 0.0, 0.2278], [0.2576, 0.2699, 0.1818, 0.0714, 0.1316, 0.1, 0.0, 0.0137, 0.4891, 0.0, 0.0, 0.0154], [0.3267, 0.6155, 0.0606, 0.0, 0.0132, 0.1571, 0.0, 0.0, 0.2002], [0.293, 0.6044, 0.1212, 0.0132, 0.1476, 0.0, 0.0, 0.3636], [0.2567, 0.3383, 0.0606, 0.0263, 0.2476, 0.0147, 0.0137, 0.0426, 0.0, 0.033, 0.4008, 0.2484], [0.3919, 0.3333, 0.0658, 0.2095, 0.0, 0.0, 0.2946, 0.0, 0.033, 0.5056, 0.2352], [0.2921, 0.3512, 0.1515, 0.0357, 0.0658, 0.181, 0.0, 0.1507, 0.0127, 0.0, 0.4064, 0.2615], [0.2861, 0.0111, 0.0, 0.0, 0.0395, 0.1238, 0.0, 0.0, 0.2681, 0.0, 0.033, 0.4385, 0.251], [0.2558, 0.4603, 0.0, 0.0263, 0.1571, 0.0, 0.1565, 0.0, 0.0, 0.3743, 0.1708], [0.28, 0.4067, 0.0606, 0.0, 0.0, 0.1333, 0.0, 0.0, 0.1922, 0.0, 0.022, 0.3324, 0.18], [0.2973, 0.2957, 0.0606, 0.0, 0.0132, 0.1524, 0.0294, 0.0, 0.2371, 0.0, 0.0, 0.3394, 0.2024], [0.2705, 0.2662, 0.0909, 0.0357, 0.0132, 0.1238, 0.0, 0.0959, 0.4212, 0.0, 0.022, 0.3184, 0.0841], [0.3561, 0.3956, 0.0606, 0.0132, 0.0714, 0.0, 0.1233, 0.2301, 0.0, 0.0, 0.2067, 0.2234], [0.2593, 0.3031, 0.3333, 0.0789, 0.1238, 0.0, 0.0, 0.2509, 0.0, 0.022, 0.352, 0.2523], [0.2195, 0.3179, 0.2424, 0.1053, 0.2143, 0.0, 0.0, 0.3659, 0.0, 0.044, 0.2905, 0.2273], [0.2576, 0.5379, 0.0, 0.0, 0.1429, 0.0294, 0.0548, 0.2048, 0.0, 0.3925, 0.1997], [0.2239, 0.464, 0.1515, 0.0714, 0.0132, 0.0524, 0.0, 0.0, 0.29, 0.0, 0.3994, 0.2392], [0.2429, 0.4455, 0.1212, 0.0, 0.0526, 0.2429, 0.0147, 0.0, 0.1968, 0.0, 0.022, 0.4344, 0.2484], [0.3129, 0.2107, 0.0909, 0.1071, 0.0395, 0.2333, 0.0, 0.0, 0.4534, 0.0, 0.022, 0.3687, 0.1025], [0.2671, 0.488, 0.1212, 0.0357, 0.0263, 0.2048, 0.0, 0.0, 0.2186, 0.0, 0.0, 0.4022, 0.226], [0.3155, 0.4177, 0.0303, 0.0263, 0.1429, 0.1644, 0.1784, 0.0, 0.4818, 0.2221], [0.2852, 0.4251, 0.0303, 0.0357, 0.0395, 0.219, 0.0, 0.0, 0.2048, 0.022, 0.4372, 0.2786], [0.2904, 0.3567, 0.1515, 0.0, 0.0263, 0.2095, 0.0, 0.0, 0.2405, 0.0, 0.0, 0.4232, 0.2983], [0.3414, 0.3549, 0.0606, 0.0, 0.0132, 0.2333, 0.0, 0.0411, 0.3107, 0.0, 0.0, 0.324, 0.2891], [0.3137, 0.3604, 0.0909, 0.0132, 0.0714, 0.0, 0.0959, 0.2635, 0.0, 0.011, 0.4944, 0.2641], [0.3241, 0.4122, 0.0606, 0.0, 0.0395, 0.1571, 0.0, 0.0, 0.2785, 0.0556, 0.0, 0.4316, 0.2418], [0.2619, 0.3438, 0.0, 0.0789, 0.1429, 0.0, 0.0, 0.4511, 0.0, 0.0549, 0.3547, 0.2694], [0.3068, 0.5194, 0.0606, 0.0132, 0.281, 0.0294, 0.1096, 0.1968, 0.0, 0.5042, 0.1958], [0.3293, 0.5564, 0.0606, 0.1071, 0.0132, 0.2, 0.0, 0.1096, 0.1795, 0.0, 0.033, 0.4777, 0.2076], [0.2697, 0.3567, 0.1515, 0.0357, 0.0263, 0.0905, 0.0, 0.5178, 0.0, 0.0, 0.3268, 0.2838], [0.2999, 0.5878, 0.1212, 0.0, 0.0263, 0.1286, 0.0, 0.0, 0.2037, 0.0, 0.5028, 0.2681], [0.293, 0.3031, 0.3939, 0.0, 0.0526, 0.1333, 0.0, 0.0959, 0.3832, 0.0, 0.033, 0.4162, 0.3338], [0.3224, 0.3105, 0.0303, 0.0, 0.0395, 0.1333, 0.0294, 0.0137, 0.3636, 0.0, 0.0, 0.4623, 0.2917], [0.3483, 0.4806, 0.0606, 0.0, 0.1524, 0.0, 0.0685, 0.2348, 0.0, 0.011, 0.514, 0.2431], [0.3232, 0.3604, 0.0303, 0.0357, 0.0263, 0.0476, 0.0, 0.1781, 0.4097, 0.0, 0.011, 0.4427, 0.2694], [0.2351, 0.3013, 0.0606, 0.0132, 0.1048, 0.0, 0.0, 0.6214, 0.0833, 0.033, 0.2933, 0.3495], [0.3111, 0.549, 0.0909, 0.0, 0.0526, 0.1905, 0.0, 0.0, 0.2325, 0.0, 0.0549, 0.4874, 0.3325], [0.3682, 0.5157, 0.0606, 0.0714, 0.0658, 0.1524, 0.0294, 0.1781, 0.2658, 0.0, 0.0549, 0.4427, 0.272], [0.2671, 0.3142, 0.0303, 0.0357, 0.1184, 0.1714, 0.0147, 0.1507, 0.6628, 0.0, 0.0659, 0.3617, 0.2484], [0.3898, 0.4214, 0.0909, 0.0, 0.0395, 0.281, 0.0, 0.1918, 0.2796, 0.0879, 0.4707, 0.2983], [0.3198, 0.3623, 0.0303, 0.0263, 0.2238, 0.0, 0.0, 0.519, 0.0, 0.4469, 0.3075], [0.4036, 0.5601, 0.0303, 0.1071, 0.0132, 0.2524, 0.0294, 0.0137, 0.3188, 0.0, 0.011, 0.514, 0.2037], [0.3423, 0.5952, 0.0606, 0.2143, 0.0263, 0.3095, 0.0, 0.0685, 0.2509, 0.011, 0.5922, 0.2641], [0.4356, 0.4843, 0.2424, 0.0, 0.0263, 0.0667, 0.0, 0.0, 0.6191, 0.022, 0.4567, 0.2562]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

