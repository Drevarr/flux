created: 20230210230955000
creator: Drevarr
modified: 20230705163519023
modifier: drevarr
tags: ChartData
title: 202302102309_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Oo Dads Mad", "Arka\u00f1", "Koralia Danai", "Kahless The Drunk", "Aronorf Xideliesi", "Bambiae", "Zaylen Harker", "Black Raspberry Pie", "Ryvalia Fazebringer", "Air One Com", "Grasszanine", "Jeckyll Mbs", "Ravioli Fetabringer", "Xanvias Tseli", "Bella Sassy", "Newtype Khan", "Blanco Padre Guard", "Johosh The Great", "Burnhard Riemann", "Arcanophage Farra"];
const professions = ["Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.8417, 17.2626, 0.0, 21.1444, 0.0, 0.0, 0.0, 0.0, 20.6411], [13.1468, 13.6798, 18.1608, 20.5606, 9.1142, 4.5599, 6.8112, 9.1881, 9.1448], [9.8601, 31.2682, 31.7156, 17.4473, 6.2867, 30.1514], [5.7387, 28.5539, 30.8602, 28.7978, 3.8803, 13.6798, 0.0, 7.8061, 31.223, 11.5403], [13.6685, 26.4911, 33.9528, 27.3061, 2.3763, 13.6798, 13.5828, 6.7977, 25.2788, 10.6159], [19.4594, 32.571, 34.9398, 29.3167, 5.7754, 5.5836, 0.0, 13.9689, 20.2492, 12.4349], [13.4599, 40.388, 32.9658, 33.5975, 6.6778, 21.776, 0.0, 6.723, 15.0889, 11.3316], [34.8496, 61.8849, 47.3102, 27.5655, 4.9632, 6.7003], [13.9294, 29.6396, 34.8082, 24.2576, 6.9184, 32.4779, 13.8204, 13.9315, 13.1946, 10.3177], [22.3809, 42.3423, 28.952, 27.1763, 5.4445, 13.0284, 7.1676, 11.8026, 21.5556, 14.9398], [23.633, 68.0734, 34.6108, 49.6179, 4.9331, 14.8896, 0.0, 4.9676, 24.7563, 9.5424], [62.0301, 81.7532, 52.1794, 64.2763, 0.0, 0.0], [64.3778, 87.2903, 47.6392, 79.9075, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [39.284, 69.4848, 57.904, 28.1492, 6.768, 9.7713, 12.5928, 7.8435, 23.1233, 29.7305], [14.5033, 87.5074, 69.5506, 52.9258, 0.0, 0.0, 0.0, 0.0, 49.5779, 69.9875], [65.4212, 116.4956, 69.2216, 54.6121, 10.8589, 15.8202, 7.8408, 7.9182, 28.6102, 41.7182], [59.6303, 78.0618, 41.5198, 78.4157, 20.665, 41.5978, 20.6316, 20.804, 41.4782, 20.546], [53.6308, 130.9354, 79.1574, 50.7854, 0.0, 61.0474, 12.8304, 15.8364, 22.7314, 32.5933], [36.9885, 104.9872, 86.7244, 86.9773, 7.881, 15.8202, 0.0, 25.8462, 55.522, 58.0297], [36.519, 118.667, 111.0704, 92.1661, 0.0, 0.0, 0.0, 19.9449, 57.8082, 48.0997], [151.1887, 320.6072, 0.0, 107.473, 0.0, 28.1041, 5.5836, 0.0, 5.5522, 98.2569]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

