created: 20230527220043000
creator: Drevarr
modified: 20230705163531949
modifier: drevarr
tags: ChartData
title: 202305272200_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Newtype Khan", "Mammary Mission", "Grilo Gringo", "K U S A T T A", "Splitting Hairs", "Rx Medic", "Lord Erin The Wise", "Cedryn X", "Morv\u00e4rth", "Legacy Of Mathus", "Permanent Dawn", "Kary\u00edna", "Mistwalker Cael", "Be\u00eb", "Xanvias"];
const professions = ["Scrapper", "Spellbreaker", "Scourge", "Dragonhunter", "Reaper", "Reaper", "Firebrand", "Weaver", "Berserker", "Reaper", "Berserker", "Weaver", "Vindicator", "Vindicator", "Scourge", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[181.018, 157.0976, 76.8852, 0.0, 1067.275, 89.0114, 28.3053, 547.9444, 176.3363, 5.9789, 0.0, 3.0444, 20.6056, 4.8361, 3.4099, 1.504, 0.0, 8.3641, 2.913, 11.3974, 17.129, 0.0, 0.0, 0.0, 0.0], [9.6937, 13.5246, 13.2895, 107.125, 74.1477, 15.7519, 177.3704, 37.7699, 26.1603, 13.0068, 60.2267, 84.5446, 21.3279, 49.3975, 49.5754, 116.2593, 46.2136, 37.087, 203.7564, 147.6452, 68.8519, 24.7905, 154.0127, 21.2031], [0.0, 154.1467, 117.6901, 64.3443, 36.1677, 68.2222, 275.3704, 60.9515, 0.0, 125.9359, 120.6129, 102.7778, 131.0762, 5.9241, 0.0], [606.225, 29.1023, 17.3244, 630.8704, 107.292, 9.892, 300.623, 0.0, 33.1429, 89.9815, 29.3786, 16.2174, 57.0769, 580.2258, 2.8889, 20.0571, 185.2278, 5.5781], [9.9863, 205.8133, 106.1549, 8.8852, 145.0497, 42.9365, 560.6204, 6.3058, 64.9565, 149.8462, 336.0323, 84.5926, 0.0, 77.2405, 41.7266], [198.8089, 239.3286, 52.3975, 112.7857, 434.2963, 54.9175, 175.9487, 310.3548, 222.6296, 66.4857, 80.2532, 59.7344], [0.0, 225.4578, 188.9765, 54.377, 86.2484, 102.2579, 301.5093, 125.4417, 151.4348, 252.5769, 206.3871, 163.2593, 16.9524, 113.7595, 59.0938], [184.6667, 45.4878, 79.2295, 0.0, 253.2, 107.375, 39.9466, 660.5741, 21.4779, 18.9958, 27.1575, 200.7511, 288.277, 186.3934, 227.3789, 156.754, 191.6389, 38.1214, 0.0, 31.4615], [0.0, 78.5, 261.65, 67.8977, 37.2634, 45.9259, 17.292, 11.5274, 19.9863, 219.5244, 280.1502, 40.541, 92.2795, 184.1746, 698.8519, 59.6214, 0.0, 396.8462, 127.6381, 103.443, 13.0938], [45.8919, 0.0, 12.377, 43.4474, 611.5, 188.5682, 35.8321, 434.9444, 91.6549, 144.0422, 331.1596, 286.9508, 180.5652, 182.0754, 269.75, 72.1117, 146.5217, 467.7821, 235.0, 47.4074, 183.0762, 190.6203, 73.5469], [21.8312, 11.9726, 522.0356, 184.5869, 175.087, 168.5238, 752.9537, 36.6408, 50.6087, 464.0769, 35.871, 0.0, 516.4476, 33.7722, 87.0], [360.2743, 195.557, 23.2397, 193.36, 437.8028, 217.5839, 282.5198, 1230.5926, 156.0485, 268.087, 623.5769, 198.2903, 160.2963, 68.2476, 15.8359], [194.3514, 20.3171, 0.0, 257.9737, 1105.925, 230.3182, 23.5496, 365.8704, 197.8584, 52.8143, 0.7123, 515.3067, 188.9953, 0.0, 201.2174, 244.5635, 533.4815, 49.5922, 0.0, 492.0256, 485.9677, 174.9259, 72.6286, 265.6329, 103.4609], [180.6216, 0.0, 0.0, 292.7632, 407.825, 105.7955, 48.4427, 827.0556, 222.6283, 173.0928, 0.0, 883.0844, 90.8404, 124.4643, 1159.8981, 225.8447, 0.0, 410.2051, 760.1613, 246.963, 246.4, 313.3418, 96.1094], [71.1441, 11.9512, 95.9344, 160.8421, 1270.175, 0.0, 93.9695, 1336.8889, 178.9646, 254.9114, 54.5616, 390.44, 448.0798, 318.8525, 389.0497, 247.504, 382.0833, 349.8592, 0.0, 485.359, 290.2581, 275.3704, 289.2381, 306.2658, 129.4531], [0.0, 0.0, 12.3607, 58.1316, 1791.975, 168.4659, 141.6679, 1103.0741, 666.8938, 380.2785, 99.1781, 682.3156, 842.1549, 871.7869, 509.2671, 315.6627, 1515.9259, 280.0874, 87.2609, 408.7692, 938.7742, 873.2222, 492.0095, 494.3165, 98.1562]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

