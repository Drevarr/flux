created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Brazilian Hookah", "Chocolate Teapot", "Danu Leon", "Kosair", "Drevarr Moonwillow", "Reina Armitage", "Flick Embermage", "Nose Llama"];
const professions = ["Tempest", "Chronomancer", "Druid", "Firebrand", "Scrapper", "Druid", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.8293, 8.0122, 29.8, 38.3333, 11.0702, 16.0962], [12.0976, 12.0417, 1.9851, 0.0, 0.0, 0.0, 12.0645, 0.0, 0.0, 16.1064, 5.0141, 0.0, 28.1304, 0.0, 15.0, 2.0, 12.988, 6.9907, 23.3091, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.8727, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [65.6364, 5.9268, 35.9091, 35.2696, 22.4211, 0.0, 48.3023, 50.9036, 16.5357], [3.0, 20.1667, 13.1791, 3.0161, 4.64, 4.0102, 23.1452, 1.0, 2.0, 10.8936, 9.0423, 0.9545, 6.1304, 0.0, 24.2567, 26.3762, 0.0, 0.0, 0.9955, 0.0, 3.1071, 19.2424], [0.0, 0.0, 4.3478, 16.6585, 8.2292, 8.0597, 4.0645, 8.02, 9.051, 21.1048, 3.0, 7.1167, 6.4468, 14.1831, 20.2273, 41.4565, 13.2577, 42.7273, 35.0099, 12.9518, 7.9815, 16.0682, 5.0, 11.6786, 0.0, 10.3333, 23.1818, 28.1951, 6.0122, 33.2182, 32.1471, 41.7895, 7.3654, 36.5814, 71.9277, 36.0], [9.0806, 5.16, 19.3265, 50.4758, 7.2429, 19.4, 13.383, 30.5634, 0.9545, 28.6087, 17.0825, 73.893, 55.3069, 33.2289, 24.037, 30.1273, 15.0238, 0.0, 1.9688, 35.6, 48.6061], [33.1791, 12.0806, 4.0, 5.0102, 47.4274, 13.1286, 24.2167, 31.234, 34.0563, 20.8636, 64.7391, 2.0, 83.5882, 65.3267, 41.6024, 27.4444, 38.1455, 6.0119, 6.6429, 0.0, 56.5111, 62.6364], [58.3043, 21.6598, 101.3155, 78.2376, 54.0, 30.537, 64.2455, 33.1667, 8.0938, 75.2667, 12.9091, 12.9512, 4.0, 32.3636, 58.2941, 45.5263, 7.9615, 57.0, 61.4699, 21.7857]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

