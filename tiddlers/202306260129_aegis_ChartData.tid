created: 20230626012920000
creator: Drevarr
modified: 20230705163538398
modifier: drevarr
tags: ChartData
title: 202306260129_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["N\u00e8yp\u00e4", "Alarics Clone", "Drevarr Moonwillow", "Stark Wall", "Ygyn", "Astraea Lumena", "Traidoruns Maximus", "Kosair"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 7.2248, 24.1461, 0.0, 62.4358, 62.9957], [0.0, 18.1382, 12.0701, 14.4745, 0.0, 28.3694, 0.0, 9.635, 0.0, 17.7563, 0.0, 0.0, 0.3969, 56.0347, 0.0286], [19.7003, 0.0, 0.2257, 7.0598, 0.0, 10.1218, 5.2972, 4.1147, 0.7478, 25.9592, 10.0296, 3.4373, 0.3969, 2.0726, 3.2926, 43.7312, 17.8551, 12.8128, 1.7164, 9.2876, 0.0, 0.0], [183.1315, 49.5414], [16.9199, 29.8987, 17.3844, 34.5811, 7.439, 89.2786, 4.0147, 103.1215, 13.7547, 37.1405, 14.3629], [21.5546, 35.9296, 7.2646, 106.4091, 22.6478, 12.7354, 22.694, 100.3834, 12.7522, 53.6911, 10.7028, 5.9675, 30.9242, 14.7451, 19.788, 89.6798, 47.9349], [5.612, 8.57, 28.714, 32.4986, 17.983, 14.953, 24.1927, 83.8022, 57.1396, 24.0316, 10.728, 7.4952, 49.4311, 13.5782, 10.7998, 62.5221, 31.3956, 47.1994, 59.1154, 45.1219, 0.0, 23.298], [133.9954, 23.3798, 8.3528, 122.0978, 34.1514, 51.4962, 30.7908, 58.0902, 44.4471, 100.7512, 0.0, 55.23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

