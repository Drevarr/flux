created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Nsidejob", "Lord Erin The Wise", "Crusader Siolith", "Drevarr Moonwillow", "Hyde En Sikh", "Venomina The Fierce", "Kos\u00e1ir", "No Reserv\u00e9", "Latedoctor", "Keypek The Drunk", "Zatoshin", "Mistwalker Cael", "Gabe Malhorn", "High Sorcer Baradun", "Bella Sassy", "Pr\u00e6tor Lightbringer", "Matrim The Mad", "Koralia Danai", "Seiker Novus Terra", "Sygaldry Verdandi", "Fourty Eighth", "F\u00e4dscelsior", "Traidoruns Maximus", "Mort\u00e4rion", "Charr Surethang", "Philip Poundhouse", "Sofya De Nova", "Christie Raskae", "Tegan Parker", "Belvyn Brightblade", "Aira Draugr", "Konoko K", "Oo Dads Mad", "Jimbo The Pleb", "Melody Phoenixstorm", "Starla Rayn", "Fqa Rev", "Sygaldry Verdandi", "Helgariz", "Itty Bitty Mew", "Krytsmancer", "Deffray N", "Tikonis", "Bearah", "\u00c4rt\u00ebmiza", "Smol Gluvs", "Ryzen Grimsaw", "Dargon Spiritwalker", "Luke The Ghastly"];
const professions = ["Vindicator", "Catalyst", "Weaver", "Firebrand", "Scrapper", "Chronomancer", "Spellbreaker", "Virtuoso", "Vindicator", "Reaper", "Scrapper", "Vindicator", "Herald", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Catalyst", "Firebrand", "Tempest", "Firebrand", "Scourge", "Tempest", "Firebrand", "Scrapper", "Berserker", "Herald", "Tempest", "Willbender", "Tempest", "Firebrand", "Herald", "Tempest", "Berserker", "Berserker", "Scrapper", "Reaper", "Herald", "Willbender", "Berserker", "Catalyst", "Reaper", "Scourge", "Holosmith", "Firebrand", "Spellbreaker", "Reaper", "Vindicator", "Reaper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1537.5942, 142.4736, 81.0, 340.9737, 1149.3792, 0.0, 29.2247, 0.0, 844.4886, 723.2026, 600.8251, 169.4454, 182.02, 117.3258, 219.625], [834.1429, 308.7534, 527.7353, 0.0, 815.1213, 155.013, 23.475, 0.0, 1125.066, 586.1723, 632.5738, 241.3038, 96.9298, 77.3596, 438.581], [340.5089, 293.3889, 7.6118, 1114.7948, 187.375, 46.5778, 0.0, 1208.6286, 535.9701, 461.6591, 329.9313, 79.322, 19.6966, 302.1204], [8.3448, 1220.2073, 227.1126, 394.4242, 227.4146, 865.8719, 58.8111, 28.3478, 666.027, 692.6169, 537.9204, 380.8189, 376.7778, 9.7143], [12.9658, 1526.4468, 193.099, 252.6136, 154.7895, 771.2494, 309.8367, 72.1053, 0.0, 609.9975, 743.0446, 545.2773, 103.6657, 37.0, 199.0, 166.375], [21.1176, 993.6703, 327.9861, 362.6857, 19.2989, 838.7724, 149.1471, 26.1474, 0.0, 622.2893, 687.4906, 706.6938, 68.0351, 29.7255, 140.2637, 125.3604], [330.5956, 176.9062, 54.119, 1078.9325, 182.878, 0.0, 892.5149, 748.0945, 200.4342, 197.2882, 109.7018, 110.9213, 200.34], [40.731, 1079.8734, 250.4668, 526.5143, 16.0, 266.9877, 53.5806, 918.5659, 947.411, 664.3905, 170.7358, 202.5636, 175.9326, 236.3113], [1151.1528, 207.5188, 435.3824, 355.6076, 625.0051, 92.4615, 0.0, 0.0, 738.1837, 642.2161, 680.1477], [71.3168, 1215.4524, 285.1624, 701.1212, 277.4444, 498.9286, 467.2222, 54.0, 0.0, 879.9766, 597.6098, 707.9409, 382.3913, 253.25, 18.5165], [238.1333, 165.6452, 0.0, 1095.1202, 1180.2514, 687.8534, 480.1261], [970.0435, 144.1319, 83.7, 0.0, 846.0691, 532.1381, 755.8841, 339.6602, 134.4783, 182.6311], [34.4424, 1406.5732, 335.0993, 5029.7273, 3.9231, 4275.7857, 129.2727, 106.5789, 0.0, 615.2072, 801.7967, 270.5038, 95.9755, 36.7069, 183.9341, 346.4766], [14.4684, 1611.4677, 180.7116, 701.0882, 11.3483, 734.6269, 115.6265, 0.0, 0.0, 459.6487, 614.1798, 600.2811, 84.4926, 28.4561, 38.6404, 131.0882], [1093.6036, 94.4167, 56.4886, 710.2977, 718.7273, 716.8761, 112.3821, 45.0508, 136.2667, 330.0588], [13.4867, 1094.8696, 195.087, 199.2353, 114.0886, 782.4308, 168.5412, 23.8556, 0.0, 475.6684, 549.5564, 423.0352, 82.6452, 46.4048, 64.8022, 150.4608], [1521.0179, 169.6365, 252.7143, 12.1429, 776.8111, 71.4096, 5.1522, 0.0, 488.7318, 565.7389, 494.4979, 109.6937, 29.1458, 85.8667, 181.4038], [837.4864, 310.5778, 34.967, 0.0, 1235.2748, 620.4531, 458.144, 281.0361, 380.8286], [10.5, 1042.7164, 149.3867, 247.4688, 30.5476, 769.6375, 68.1548, 5.3298, 0.0, 488.5974, 537.4766, 459.6492, 71.4428, 42.1429, 1.2564, 152.1667], [24.8966, 1090.7465, 171.1248, 198.8286, 285.7922, 835.5266, 139.9444, 15.5506, 0.0, 581.3351, 500.8802], [13.9318, 931.1596, 124.4706, 58.8222, 0.0, 573.9728, 768.4972, 335.8217, 75.2828, 48.6667, 63.7865, 208.7387], [1218.338, 324.7473, 533.5279, 195.1516, 18.9483, 937.5263], [530.0, 76.931, 710.5431, 628.1923, 641.7341, 312.8838], [732.1537, 121.9891, 4.25, 0.0, 601.7573, 624.4016], [348.6224, 1695.1696, 451.2471, 28.3605, 0.0, 622.4727], [639.9474, 353.4296, 701.4706, 0.0, 1232.2099], [146.5067, 1.2717, 0.0, 825.7642, 472.4303, 793.7709], [89.1667, 46.663, 0.0, 496.2072, 587.7446, 432.1404, 41.8333, 37.1552, 58.1705, 194.9238], [937.9916, 247.7391, 191.4923, 187.1174, 447.1822], [64.757, 156.1585, 62.6196, 0.0, 579.1957, 120.7454, 693.3203, 69.507, 40.5556, 85.7662, 134.2411], [16.8378, 1714.1818, 213.1332, 80.871, 53.9412, 764.5932], [15.3287, 906.6447, 214.3362, 285.7059, 81.6203, 831.98], [1006.4098, 180.7509, 193.5152, 16.6136, 700.2854], [63.8533, 1480.2281, 317.983, 776.3824, 265.8158, 3629.8182], [2381.1176, 338.2952, 840.3056, 186.6024], [41.0863, 1745.7407, 345.9386, 432.3659, 134.5909], [949.7324, 360.128, 343.6136, 320.369, 55.0897], [1017.3366], [1127.0, 305.7918, 177.6667, 30.1795], [432.0758, 188.1871, 141.2353, 233.6304, 375.1171], [488.7638, 219.4265, 85.2203, 209.4946, 203.2182], [534.3115, 154.8806, 0.0, 121.6848, 262.9909], [752.8231, 308.9697], [328.4853, 271.7654, 125.0652, 69.4831, 313.4952], [23.3448, 1216.2222, 118.4181, 0.0, 0.5169], [26.2376, 4250.8571], [1230.7333], [206.1, 90.0204, 116.4, 328.5922], [19.3793], [0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

