created: 20230626010646000
creator: Drevarr
modified: 20230705163537371
modifier: drevarr
tags: ChartData
title: 202306260106_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Iskalla", "Gestern Yesteryear"];
const professions = ["Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.2253, 1.8528, 2.3299, 0.0, 8.5101, 4.5446, 15.68, 5.0887, 1.6614, 2.1528, 0.0, 3.3696, 2.178, 11.1989, 1.0624, 3.6456, 2.328, 3.1012, 4.257, 1.7168, 0.5107, 1.131, 1.1088, 3.2076, 4.9082, 2.6488, 1.1118, 0.1892, 2.5754, 0.9412, 5.8162], [5.2283, 0.0, 5.4665, 4.9634, 12.1282, 3.767, 18.0096, 3.3779, 1.9949, 6.008, 0.0, 5.3165, 5.3064, 11.8087, 2.939, 0.372, 3.624, 4.386, 2.5344, 2.2359, 0.3146, 0.309, 0.3785, 2.0832, 4.4323, 8.6659, 2.4508, 3.8658, 3.6952, 5.5978, 3.3927, 5.3424, 0.5376, 1.8384, 7.4858, 2.2939, 3.8323, 6.9212], [2.1736, 1.4591, 1.4233, 0.5823, 5.9112, 0.2584, 5.6927, 1.5548, 8.9162, 5.5757, 16.0832, 3.953, 3.4223, 3.4105, 0.196, 5.9738, 4.0854, 10.5336, 1.5912, 8.1989, 6.336, 3.7978, 5.5044, 2.7898, 2.4077, 1.3059, 2.2982, 2.0218, 10.9058, 3.8192, 6.0894, 0.3884, 7.3618, 4.8652, 7.3382, 2.1888, 0.072, 5.0438, 0.0875, 1.6819, 6.0984]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

