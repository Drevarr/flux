created: 20230422000344000
creator: Drevarr
modified: 20230705163526172
modifier: drevarr
tags: ChartData
title: 202304220003_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Stoic Rapidfire", "Zadie Miststep", "Mac Saharlot", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[222.4015, 696.5352, 137.0323, 76.5854, 313.3788, 673.2073, 290.069, 1066.3978, 33.9155, 367.2225, 74.0643, 4.6667, 692.65, 243.6809, 484.131, 355.1075, 670.8409, 936.2903, 551.7733, 16.3778, 206.1719, 871.7826, 3.5882, 600.8333], [525.9697, 1383.4366, 353.7258, 636.7073, 981.7121, 1264.5732, 578.9138, 2631.914, 351.1408, 771.82, 92.8357, 29.8444, 2729.2, 736.3191, 1280.381, 563.172, 1459.7273, 1606.8065, 1370.5467, 238.2222, 320.7969, 1387.1159, 63.0392, 950.4], [8.2803, 850.5244, 905.9394, 2040.5244, 607.7414, 3031.5591, 266.662, 850.285, 81.0, 196.2889, 2227.45, 1513.1277, 2676.4167, 1627.6774, 3131.0227, 2850.4946, 2521.12, 162.3778, 195.6094, 1745.8406, 318.6471, 1285.3778], [2749.0909, 1261.0, 420.3065, 1005.0854, 359.1061, 1999.9512, 652.9655, 2471.5376, 116.2817, 869.91, 24.7143, 25.9111, 6627.35, 38.6383, 1692.6786, 1860.3011, 1300.6818, 1616.1183, 2281.32, 136.9667, 30.5, 3165.913, 21.2941, 2820.6222], [420.9318, 1700.3099, 1214.8065, 834.439, 1471.2424, 2412.4878, 1643.9138, 4335.5269, 328.9718, 1494.7725, 101.5143, 286.0667, 2329.4333, 529.9362, 2621.0357, 1940.0, 4388.3636, 2442.0, 2124.3733, 238.8889, 342.0, 3079.9855, 375.7255, 2431.4222]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

