created: 20230614224052000
creator: Drevarr
modified: 20230705163535343
modifier: drevarr
tags: ChartData
title: 202306142240_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Permanent Dawn", "Johosh The Mighty", "Xanvias Einzbern", "Koralia Danai", "Venomina The Siren", "Momomeko", "Crusader Siolith", "Artakama Nahid", "Ryvalia Fazebringer", "Rina Of Theros", "Solus Sanctus", "Zayde Sunsabre", "Tika Fiery", "Arriasa", "Shaca Booey", "Black Raspberry Pie", "Smol Gluvs", "Elonith Requiem", "Sakis Ranger", "Be\u00eb"];
const professions = ["Weaver", "Spellbreaker", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Chronomancer", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Druid", "Berserker", "Chronomancer", "Scourge", "Scourge", "Druid", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1189, 571, 307, 3215, 261, 0, 0, 0, 296], [5636, 296], [0, 1187, 0, 0, 0, 5450, 0], [2009, 0, 3439, 530, 204, 0, 0, 3390, 0], [0, 1069, 2140, 5963, 485, 295, 278, 2382, 0], [746, 2014, 1721, 3959, 557, 269, 308, 2816, 296], [0, 893, 1066, 9167, 3061, 513, 261, 556, 0], [0, 403, 0, 12398, 3611, 0, 0, 0, 0], [2418, 0, 0, 11373, 0, 261, 0, 2638, 0], [3391, 796, 3324, 7844, 2355], [2009, 0, 1188, 14661, 0, 0, 0, 0, 0], [4541, 4524, 3136, 4672, 3248, 0], [0, 249, 95, 13347, 3787, 0, 0, 4013, 514], [2978, 1190, 2376, 15763, 0, 0, 0, 248, 0], [4485, 0, 0, 12118, 2717, 566, 261, 3322, 0], [4148, 0, 3227, 16909, 3347, 0, 0, 0, 0], [3256, 0, 0, 26546, 3563], [29351, 5892], [3209, 217, 3211, 20167, 7316, 3941, 3809, 5258], [7109, 4661, 6524, 32317]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

