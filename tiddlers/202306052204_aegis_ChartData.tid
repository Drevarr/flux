created: 20230605220452000
creator: Drevarr
modified: 20230705163533659
modifier: drevarr
tags: ChartData
title: 202306052204_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Ryvalia Fazebringer", "Crusader Siolith", "Etchery", "Blanco Padre Guard", "Al\u00ee\u00e7ization", "Drevarr Moonwillow", "Gabe Malhorn", "Sygaldry Verdandi", "Zaylen Harker", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 168.9206, 0.0, 122.0856, 0.0, 0.0], [0.0, 98.537, 40.7534, 35.4518, 28.1865, 0.0, 0.0, 0.0, 42.5946, 16.232, 0.0, 3.8198, 38.22, 72.5906, 0.0, 0.0], [0.0, 122.7803, 3.0576, 46.2517, 15.4413, 2.3476, 0.0, 0.0, 9.7603, 6.0748, 0.0, 0.0, 58.032, 129.5207, 0.0, 0.0], [0.0, 256.1181, 12.1649, 137.8159, 0.0, 0.0, 0.0, 0.0, 11.0869, 43.0132, 0.0, 0.0, 62.712, 95.8048, 7.1266, 0.0], [0.0, 331.1939, 3.4944, 182.8936, 0.0, 0.0, 0.0, 0.0, 50.5545, 0.9798, 0.0, 0.0, 61.776, 36.111, 0.0, 0.0], [22.6334, 75.9028, 77.6981, 0.0, 33.8045, 189.384, 205.9803, 47.6124, 23.5102], [0.0, 341.7515, 12.0338, 120.9117, 0.0, 1.7149, 15.818, 0.0, 26.7697, 20.7391, 0.0, 0.0, 64.896, 70.1954, 22.7386], [0.0, 539.2166, 0.0, 266.2405, 0.0, 14.4189, 0.0, 15.1041, 154.2693, 12.868, 14.9657, 17.5315, 164.112, 139.6539, 0.0, 0.0], [0.0, 710.0923, 12.7327, 262.484, 11.7648, 21.4618, 0.0, 4.1897, 65.6213, 50.427, 43.7809, 12.5414, 168.48, 221.2722, 28.756, 0.0], [0.0, 577.5365, 39.2465, 281.2664, 0.0, 0.0, 17.5784, 55.2451, 82.8258, 57.6114, 44.2483, 134.94, 154.0246, 142.1162, 47.4255], [14.256, 1028.3826, 17.0352, 482.7077, 27.735, 13.32, 15.554, 63.756, 167.3935, 48.7614, 31.464, 25.392, 295.152, 127.3098, 38.4615, 11.8665], [0.0, 896.6089, 56.784, 440.6821, 32.9337, 26.5401, 0.0, 17.0623, 155.2169, 145.9902, 46.5054, 8.9645, 259.116, 529.69, 57.9834, 79.1573], [34.776, 1016.261, 48.4848, 444.6733, 32.2113, 61.5384, 39.886, 56.7277, 80.8777, 104.4793, 54.3193, 24.1555, 343.2, 378.7974, 118.6289, 37.5435]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

