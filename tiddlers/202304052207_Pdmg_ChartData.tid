created: 20230405220700000
creator: Drevarr
modified: 20230705163524533
modifier: drevarr
tags: ChartData
title: 202304052207_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Eibh\u00ebar", "Newtype Khan", "Sister Elon\u00edth", "Sumatra Satyricon", "Sehaninee", "Rozaalyna", "Dark Sidiuz", "Grasszanine", "Nazhul Naxxremis", "Smol Gluvs", "Nelliel T", "N Er Gal", "Seren Nightroad", "River No Hug", "Rina Of Theros", "Panther B Me", "Tootsie Pop Rocks", "Be\u00eb", "Sassy Daddy Demon", "Smol Daddy Tika", "Lord Erin The Wise", "Mike The Archmagus", "Legacy Of Mathus", "Xyntharos", "Sp\u00edcy Cheese", "Kos\u00e4ir", "Zenek Tryst", "Mistwalker Caelon", "Xanvias Tlesel"];
const professions = ["Spellbreaker", "Chronomancer", "Spellbreaker", "Dragonhunter", "Soulbeast", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Reaper", "Dragonhunter", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scourge", "Vindicator", "Berserker", "Weaver", "Weaver", "Berserker", "Vindicator", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[126.4902, 0.0, 0.0, 455.2778, 538.25, 36.6364, 190.1053, 304.2222, 972.7833, 296.8594, 603.9245], [76.4902, 25.2885, 82.274, 184.3384, 135.9773, 85.0227, 189.7105, 134.254, 164.0167, 80.0156, 372.3396, 38.4412, 184.0404, 60.9942, 289.3462, 98.6684, 72.7857, 64.8698, 46.0089, 65.51, 164.2449, 61.4355, 50.4779, 32.5357, 41.3105], [128.9412, 114.3462, 70.7123, 207.2475, 307.1136, 89.3864, 323.7368, 102.6984, 255.3167, 151.7188, 494.3774, 0.0, 252.4596, 45.0578, 260.5769, 237.1263, 305.1905, 34.4201, 59.878, 23.396, 70.2653, 96.6452, 32.0, 67.4286, 88.1089], [1108.3409, 0.0, 909.8158, 1834.6984, 1049.9, 614.9219, 1416.6038], [236.2353, 430.0192, 126.0548, 293.0101, 59.9773, 112.0682, 44.5789, 166.4444, 237.1167, 190.0156, 34.566, 139.5588, 205.8333, 130.237, 65.7308, 253.5, 47.1667, 116.1657, 126.9821, 58.7806, 333.7347, 0.0, 63.9381, 0.0, 30.8347], [99.9075, 1041.7115, 388.9789, 458.8095, 196.5917, 259.8631, 77.4644, 45.1633, 21.0726, 111.5841, 57.2857, 255.3185], [446.4902, 135.8654, 0.0, 520.8333, 980.2955, 257.1429, 231.3667, 127.4062, 306.1887, 295.7647, 319.7424, 13.2775, 135.9808, 19.7842, 463.3095, 95.0, 71.7173, 7.8547, 500.6735, 154.0968, 19.8053, 65.375, 21.4476], [380.0392, 0.0, 70.2192, 422.702, 549.0455, 132.6591, 608.8413, 567.65, 154.9219, 559.5849, 224.6, 0.0, 19.9941, 161.75, 104.7749, 61.0204, 147.1452, 99.2743, 35.0893, 193.6935], [191.451, 168.5192, 19.0685, 353.6515, 360.5682, 122.2727, 653.8684, 350.3492, 303.55, 214.5, 452.7358, 0.0, 319.5505, 63.5434, 792.0385, 206.9789, 608.619, 127.142, 101.4524, 35.0114, 59.4694, 73.4435, 2.7522, 64.6071, 35.1815], [707.2941, 477.7115, 142.3014, 533.0909, 998.8636, 100.5909, 1436.1316, 824.873, 1150.3833, 318.8281, 1307.8868], [152.9423, 1.7123, 279.0202, 761.5682, 77.6136, 1145.9737, 655.8095, 882.9833, 182.8281, 897.1132, 116.9706, 347.803, 36.6012, 439.9038, 200.9632, 43.7143, 31.6391, 60.122, 58.1994, 269.5306, 25.7016, 40.6903, 27.7321, 76.871], [602.8039, 354.6923, 24.5753, 772.9697, 661.7955, 5.0682, 71.8421, 305.5312, 744.2642, 162.7353, 417.5253, 0.0, 406.5, 236.5895, 82.0952, 119.7778, 106.1633, 93.1048, 21.8761, 19.25, 18.9839], [220.2656, 602.7547, 158.0588, 686.4141, 172.0347, 1348.9231, 366.9, 220.8333, 74.6864, 182.3958, 224.6154, 222.5102, 144.75, 129.9381, 150.5179, 259.0363], [644.1569, 209.5192, 26.3014, 518.7273, 485.5227, 63.75, 615.0159, 907.7167, 13.0625, 831.8113, 41.7647, 474.4192, 190.1272, 313.0769, 218.0684, 172.9048, 122.1243, 121.2976, 53.6068, 225.1429, 119.3065, 25.8142, 20.5536, 114.7782], [725.0588, 855.6154, 43.8767, 559.6061, 0.0, 377.1591, 0.0, 289.7619, 831.1667, 664.4062, 0.0, 612.4118, 531.4343, 162.3468, 167.2885, 187.9421, 0.0, 93.1183, 92.3452, 68.1368, 207.9184, 122.2177, 93.2655, 15.1607, 66.8911], [615.1176, 427.7692, 209.7123, 749.5909, 978.25, 226.5455, 968.3421, 777.3333, 858.2333, 128.5781, 677.1321, 258.0294, 379.4899, 136.341, 907.3077, 176.4053, 720.381, 121.0059, 98.6101, 90.49, 88.0408, 156.1371, 23.7345, 53.2679, 102.3226], [601.0392, 601.9423, 82.4658, 467.0152, 1366.1364, 211.7955, 269.0526, 1124.254, 1313.2667, 642.4844, 1137.7547, 18.9118, 650.5606, 40.5145, 1325.9231, 418.7526, 598.2381, 168.2544, 201.9405, 99.7977, 298.3265, 84.871, 90.1947, 31.0536, 54.0282], [442.6667, 74.5962, 128.411, 794.8788, 1010.2045, 234.7273, 471.1579, 822.4603, 373.9167, 499.8438, 942.3208, 0.0, 972.6313, 126.6994, 2518.7115, 662.7526, 0.0, 250.3964, 150.1369, 137.4843, 175.4286, 90.2661, 63.2478, 91.375, 209.5565], [450.5294, 226.9231, 323.0685, 934.2778, 1537.7045, 244.7955, 621.7895, 147.3016, 1588.0, 230.4844, 959.6792, 434.4118, 809.9596, 220.3931, 1900.8846, 778.6737, 589.9524, 223.1183, 302.9911, 124.453, 317.7551, 198.371, 109.9115, 63.1071, 60.254], [952.4314, 388.7692, 0.0, 1060.6515, 1705.5455, 2198.7895, 924.6349, 1241.25, 465.2344, 1043.8113, 16.8235, 988.8586, 135.3237, 877.6346, 507.6474, 760.119, 282.3195, 173.1071, 203.0826, 705.6939, 80.0968, 75.1593, 65.4107, 61.4718], [216.098, 255.5769, 116.8356, 644.9394, 1632.5227, 612.3864, 1225.2105, 1396.4127, 1867.8667, 551.2344, 1711.7547, 288.4118, 750.6313, 87.7803, 1057.2115, 578.4211, 324.7143, 322.5266, 170.625, 153.5299, 221.8571, 466.1532, 64.9292, 48.6607, 532.7742], [523.1373, 719.0962, 66.0959, 1053.8232, 582.1591, 244.8864, 169.1316, 692.127, 1164.15, 380.0938, 1420.9623, 786.0588, 872.5101, 163.3584, 852.1538, 651.5737, 476.5476, 133.3669, 388.2887, 326.8661, 570.3061, 102.4274, 216.4425, 350.6607, 336.2944], [1517.8824, 1455.1566, 582.2254, 2049.8462, 1260.6474, 695.8571, 221.5089, 625.1101, 500.4587, 619.449, 159.4435, 236.5398, 77.0357, 423.0444], [589.8824, 111.8077, 114.5753, 1139.6919, 1583.3182, 303.0455, 1215.1316, 1286.1746, 2478.3667, 738.5, 0.0, 238.0294, 985.7323, 220.4104, 1516.0769, 720.1421, 412.8095, 92.426, 174.6339, 315.2536, 754.3878, 399.2097, 103.1416, 43.25, 294.3871], [1279.8627, 80.5577, 110.9315, 1799.3131, 1491.2273, 85.7727, 630.2895, 1392.0159, 1368.3667, 292.25, 1449.6981, 901.9412, 1137.1515, 212.3468, 1935.7115, 844.7737, 239.8333, 221.6627, 241.5417, 155.7265, 131.9592, 141.121, 40.7699, 73.2857, 124.4355], [901.7843, 0.0, 0.0, 1143.7525, 1116.1591, 1495.0, 2469.5714, 2153.0, 647.1719, 2649.6792, 141.4706, 900.0202, 42.4393, 3100.1154, 685.9579, 323.9524, 113.7278, 303.2768, 60.943, 478.4694, 208.7419, 82.0, 77.1607, 244.3266], [778.1176, 613.0385, 326.863, 1503.8838, 1909.0682, 30.7045, 344.3684, 1099.1429, 1121.2167, 593.0312, 2148.1698, 100.7941, 1446.3283, 228.2023, 3296.2692, 455.0579, 1291.9048, 180.3964, 435.9464, 129.7407, 750.6735, 377.3629, 49.646, 0.0], [174.8824, 2539.1346, 632.3288, 1961.1313, 957.6818, 335.4545, 1371.2105, 1550.1905, 2274.2, 462.5, 1297.3019, 974.5, 1338.1768, 647.2139, 2414.4615, 1364.2474, 293.5, 133.2189, 481.8333, 325.2222, 0.0, 835.8952, 149.7876, 159.5714], [1145.9804, 1413.8077, 468.2055, 1694.8131, 874.2273, 893.8636, 8.7368, 959.1905, 2862.0167, 644.0312, 3316.9811, 367.8529, 1825.9343, 543.2081, 2584.1923, 756.6053, 653.1429, 295.9527, 505.9256, 319.2393, 570.3061, 470.5806, 48.2124, 175.1429, 308.3629], [1014.8039, 672.5769, 291.5068, 1822.3485, 1837.7045, 154.5, 654.7632, 2564.7778, 3884.85, 991.3438, 3899.8113, 300.6765, 2257.7828, 269.1098, 1333.8462, 933.4, 1512.3571, 66.8343, 279.8333, 277.792, 362.0408, 864.3387, 115.7611, 114.4821, 431.1452]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

