created: 20230503220838000
creator: Drevarr
modified: 20230705163528103
modifier: drevarr
tags: ChartData
title: 202305032208_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Dalham", "Tegan Parker", "Johosh The Great", "Tribal S", "Zadie Miststep", "Mac Adaymia", "Drevarr Moonwillow", "Arriasa", "\u00c1rkantor"];
const professions = ["Firebrand", "Tempest", "Willbender", "Druid", "Tempest", "Vindicator", "Scrapper", "Druid", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[432.4002, 460.0185, 127.2121, 27.6711, 65.9857, 124.4706, 97.6438, 181.0725, 0.0, 454.8366, 233.5769], [0.0, 661.5132, 0.0, 0.0, 1202.4064, 703.2208], [1095.4788, 1222.8725, 101.7273, 16.0714, 91.0, 388.8571, 54.2059, 181.863, 559.2451, 13.967, 1220.2807, 631.8909], [2214.3647, 2957.5767, 302.6061, 69.4286, 51.3158, 722.7381, 23.5441, 191.7945, 1005.2946], [1429.9931, 1547.281, 322.5455, 293.1071, 119.3553, 363.4714, 385.25, 219.6849, 740.794, 0.0, 1764.169, 1073.7135], [1107.7908, 1660.4917, 700.7879, 0.0, 182.6184, 367.2333, 581.7353, 361.863, 1161.9287, 37.0833, 10.4945, 2674.3101, 594.9974], [2027.255, 2378.9723, 232.6364, 216.3929, 56.0789, 618.4619, 445.2647, 492.3699, 1296.7733, 116.8611, 28.7143, 2810.3673, 1449.8357], [2154.5851, 2976.8799, 525.697, 177.7857, 259.9079, 730.4476, 289.5147, 312.8356, 960.2094, 23.5055, 2593.4106, 1675.6307], [4368.5203, 3512.2033, 201.7273, 354.6786, 289.9211, 891.3952, 167.4706, 107.2466, 1770.0633, 143.3056, 84.3187, 3984.486, 2826.7648]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

