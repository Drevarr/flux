created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Efreet White", "Leafzely", "Gadget Windrunner", "Tootsie Pop Rocks", "Belvyn Brightblade", "Ryvalia Fazebringer", "Darks Na", "Zaylen Harker", "Amiti\u00e9l", "Atria Ruinheart", "Crusader Siolith", "Gabe Malhorn", "Sygaldry Verdandi"];
const professions = ["Scourge", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 7.1528, 66.4106, 0.0, 66.4747, 0.0], [5.7357, 0.0, 0.0, 0.7889, 3.7975, 20.4854, 1.0541, 18.4926, 22.7867, 35.4869, 19.0524, 14.9688, 0.0, 0.0, 8.5115, 32.0494, 16.3552], [0.1532, 0.0, 0.0, 0.0, 3.6456, 9.9123, 5.8404, 12.341, 0.0, 20.8008, 26.598, 15.7816, 0.1458, 21.4137, 27.5724, 7.5132, 55.7536, 0.0, 4.6301], [0.0, 0.0, 15.1582, 20.3763, 21.5288, 0.2564, 40.5705, 26.9112, 39.9485, 80.6252, 7.047, 0.0, 1.2388, 50.1757, 52.3488, 0.0, 15.7092, 0.0], [1.2169, 10.3219, 0.0, 54.9412, 29.3818, 32.5193, 36.8661, 37.4003, 0.0, 26.6057, 20.0086, 208.1864, 10.8378], [0.0, 0.0, 0.0, 29.6401, 14.6909, 19.9985, 6.6097, 24.0781, 0.0, 23.4741, 45.9202, 109.4083, 14.4828, 0.0, 0.0, 28.5314, 0.0, 82.5664, 11.5233, 54.8995, 23.1498, 16.7806], [54.6046, 37.1795, 32.7583, 65.2794, 30.3046, 133.0398, 26.7462, 29.1868, 0.0, 56.8631, 52.5925, 144.1568], [209.5168, 175.5152, 273.5054, 44.949, 0.0], [7.2846, 199.0464, 33.2465, 43.5953, 14.4685, 10.1994, 66.4979, 0.0, 16.6254, 21.3814, 67.542, 24.8184, 4.6893, 21.7984, 70.4495, 7.9335, 106.7648, 18.7352, 92.4362, 0.0], [22.6451, 0.0, 0.0, 53.8706, 54.5321, 43.9619, 4.6724, 24.6065, 41.678, 38.0266, 132.3856, 57.1374, 30.5844, 0.0, 27.6124, 36.4628, 103.2384, 80.8201, 259.7806, 2.7212], [7.7101, 186.3053, 49.8697, 41.4687, 91.4366, 35.9544, 65.8186, 35.4912, 72.6898, 147.5949, 20.4282, 41.014, 0.0, 43.7562, 25.4819, 82.6272, 207.4983, 233.1576, 11.3795], [27.9724, 84.3226, 0.0, 50.8841, 45.6785, 27.6849, 52.5356, 96.4634, 73.1211, 34.6289, 215.2186, 34.8786, 33.5643, 56.8048, 91.1088, 38.9321, 99.2864, 33.3158, 280.9466, 0.0, 93.7982], [9.4035, 86.7149, 187.4764, 57.0927, 167.257, 45.0712, 150.092, 52.4221, 87.1042, 168.2827, 12.3282, 54.9433, 5.8656, 105.3346, 88.7926, 180.0896, 468.4586, 471.4414, 107.3072, 19.543]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

