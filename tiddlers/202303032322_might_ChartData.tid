created: 20230303232222000
creator: Drevarr
modified: 20230705163521088
modifier: drevarr
tags: ChartData
title: 202303032322_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Zadie Miststep", "Blanco Padre Guard", "Kahless The Drunk", "Venomina The Siren", "Viral Marketing", "Aronorf Xideliesi", "Drevarr Moonwillow", "Ravioli Fetabringer", "Bella Sassy", "High Sorcer Baradun", "Newtype Khan", "Grasszanine", "Arcanophage Farra"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.0818, 11.016, 7.8622, 1.1309, 2.7265, 1.7556, 11.9482, 6.3384, 5.6244, 53.6546, 5.1898, 10.6762, 76.6208, 9.4962, 0.92, 0.0, 33.528, 0.0, 13.1595, 37.3842, 14.9688, 14.3985], [29.6806, 4.4064, 0.0, 0.7946, 0.0, 34.0309, 12.6768, 8.9268, 15.8567, 6.169, 5.1675, 23.36, 2.8988, 0.0, 0.0, 74.5259, 35.3501, 22.4112, 6.2521, 0.0, 33.984, 3.4056, 6.6528, 0.0], [10.4421, 19.4157, 7.2139, 0.0, 2.2903, 5.7981, 27.9502, 5.4264, 11.352, 61.9517, 4.2106, 15.1125, 71.7152, 9.0964, 4.5444, 5.1381, 43.6037, 3.0367, 83.0857, 24.6523, 0.0, 3.7296, 32.2848, 33.669, 19.4832, 19.808], [3.7101, 23.6844, 4.6838, 0.4266, 3.3341, 5.5902, 12.2149, 2.622, 12.7452, 50.8889, 11.7994, 18.2325, 60.5024, 10.096, 0.0, 6.2894, 46.7307, 66.5717, 16.4606, 1.0234, 5.418, 81.2218, 28.1736, 25.74, 28.0811], [0.0, 21.3435, 0.0, 0.0, 16.7329, 0.0, 17.3888, 3.1008, 2.6316, 56.0515, 0.0, 11.6512, 69.6128, 12.1951, 9.0331, 0.0, 33.8754, 0.0, 121.0161, 54.4051, 0.0, 110.1082, 13.4676, 0.0, 14.6372], [5.1282, 11.8948, 3.5112, 14.7576, 55.6828, 10.5998, 10.335, 75.4528, 13.2947, 2.2722, 3.5391, 59.9334, 0.0, 72.2484, 32.9213, 6.0602, 0.0, 129.8189, 33.5142, 18.6912, 19.3306], [3.6802, 39.6576, 0.0, 0.2083, 4.0664, 1.7556, 7.5209, 0.0, 7.1724, 57.7109, 10.1837, 2.925, 104.1856, 23.5906, 0.0, 1.9401, 48.989, 0.4257, 87.2141, 27.7435, 0.8475, 0.0, 140.6938, 19.35, 34.7688, 23.5468], [3.4408, 29.8809, 2.9274, 2.8272, 10.8437, 5.4285, 16.8021, 8.7552, 19.2984, 63.9799, 12.1421, 9.945, 81.5264, 14.8441, 7.0815, 1.1726, 51.4211, 2.242, 91.6007, 22.8749, 11.4329, 1.0584, 137.2954, 16.5636, 23.8392, 26.4901], [1.5558, 33.3234, 7.674, 0.0, 3.3497, 1.617, 20.7493, 12.3348, 11.4036, 76.5177, 10.0613, 23.0587, 127.0784, 20.042, 1.7286, 12.2164, 57.1539, 2.1285, 114.5653, 38.3309, 6.7158, 1.3608, 135.936, 21.8268, 30.3336, 26.5697], [4.3234, 52.0506, 6.5867, 0.0, 4.0352, 0.9009, 25.9766, 6.0192, 15.6348, 92.7431, 17.7725, 13.2112, 122.8736, 22.441, 1.1849, 2.3026, 73.3098, 123.0803, 42.8904, 4.1414, 6.5268, 139.3344, 38.2356, 23.9976, 21.4785], [0.0, 97.3539, 0.0, 0.0, 5.6867, 17.1402, 0.9068, 14.9568, 26.1612, 84.9992, 4.9694, 26.325, 112.5952, 33.7865, 0.0, 14.924, 45.8621, 219.3255, 50.8502, 0.0, 0.0, 241.2864], [14.6309, 99.9702, 17.8362, 10.535, 12.7912, 24.486, 52.1132, 24.2592, 29.67, 175.8985, 24.529, 47.775, 231.264, 35.6357, 9.995, 26.7992, 133.417, 9.5215, 220.8737, 71.3294, 17.525, 14.616, 335.7619, 66.7962, 55.2816, 66.1856], [19.1488, 183.4164, 23.8165, 14.6816, 15.4865, 38.4384, 44.8056, 43.2744, 41.3832, 238.5877, 36.3283, 68.1038, 316.7616, 55.028, 10.1901, 27.2256, 174.2412, 292.8641, 94.4362, 18.0047, 27.2664, 304.1568, 76.4712, 88.0704, 90.2097], [6.373, 190.026, 0.0, 21.1109, 22.2453, 21.656, 14.5464, 56.6568, 193.599, 56.7936, 72.8813, 413.7056, 71.7713, 17.0207, 20.0834, 240.9496, 10.8979, 393.2377, 126.7392, 21.9863, 25.0236, 612.0518, 98.0658, 115.8696, 118.5295]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

