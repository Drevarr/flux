created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Thought Bound", "Wreakit Herm", "Tirluka", "Violet Stab", "Mierin Farshaw", "Reina Armitage", "Mechcem", "Tegan Parker", "Elonith Primal", "Sakis Ranger", "Legoh Brave", "Magix Shot", "The C\u00fcre", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Chronomancer", "Druid", "Scrapper", "Tempest", "Tempest", "Druid", "Tempest", "Druid", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.515, 31.5364, 21.0901, 14.7676, 7.2471, 21.6367, 47.0184, 19.3901, 32.4601, 97.242, 94.1332, 28.2968, 37.1941, 17.3812], [0.0, 46.6633, 30.6562, 0.0, 0.197, 8.4198, 29.1152, 0.2285, 7.3937, 0.0, 7.7893, 0.0, 23.9866, 80.028, 52.1164, 4.2893, 18.4677, 43.0464, 0.0, 7.3128, 0.0, 85.0385, 100.8693], [28.1475, 1.7248, 55.1836, 0.0, 0.0, 59.328, 213.6498, 209.9601], [0.0, 24.5028, 91.4991, 62.8285, 17.2834, 69.1891, 176.244, 179.3634], [0.0, 0.0, 207.252, 102.227, 20.0596, 13.4042, 0.0, 20.1768, 0.0, 75.2256, 8.9337, 177.9813], [11.9286, 20.2952, 11.6542, 6.8845, 69.3547, 43.8029, 13.16, 21.5226, 19.5518, 14.1151, 23.819, 6.1085, 39.468, 28.0111, 24.7401, 17.5344, 82.707, 82.0983, 3.6065, 13.7984, 13.8776, 0.0, 0.0, 48.2976, 31.4786, 47.5713], [34.9941, 0.0, 33.0868, 0.0, 167.8439, 21.9893, 0.0, 0.0, 123.5247, 0.0, 0.0, 0.0, 103.7379, 0.0, 93.2085, 152.418, 206.5301], [447.9061, 552.9384], [69.0494, 12.8537, 0.0, 266.3731, 73.405, 7.07, 4.7867, 83.8543, 10.8916, 27.2677, 33.7478, 20.6606, 55.6479, 29.7436, 0.0, 97.584, 158.9532, 199.8491, 72.0597], [1.8228, 28.2568, 187.7472, 337.415, 693.1008], [12.5249, 54.7344, 101.4737, 64.4274, 151.248, 112.3261, 474.833, 315.5178], [61.2526, 3.4084, 45.4054, 0.0, 103.8119, 151.6997, 15.645, 28.6273, 54.9314, 10.3812, 25.0685, 69.2496, 34.789, 36.729, 76.6735, 0.0, 300.903, 149.8742, 60.7336, 60.1586], [65.5063, 199.8599, 343.513, 219.3012, 86.1948, 181.6135, 21.9269, 200.7936, 0.0, 127.318], [0.0, 0.0, 0.0, 707.1092, 887.6952], [3.9992, 0.0, 0.0, 0.0, 0.0, 2.0005, 0.0, 0.0, 238.6426, 155.0144, 67.027, 746.8933, 773.2555, 123.8562, 297.2487, 506.1822, 145.4081, 144.2423, 227.5258, 134.3742, 398.9047, 227.6644, 16.3987, 1629.744, 1074.4563, 610.324, 350.7381, 227.4072, 15.9628, 179.3088, 807.9264]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

