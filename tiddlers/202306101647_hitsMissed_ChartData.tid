created: 20230610164704000
creator: Drevarr
modified: 20230705163534906
modifier: drevarr
tags: ChartData
title: 202306101647_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Wabbit Twouble", "Lucky Leipreach\u00e1n", "Miphest\u00f6", "Traidoruns Maximus", "Rakloz Blightspire", "Sumatra Satyricon", "Trolit\u00e1", "Koralia Danai", "Sub Train", "Bella Sassy", "Melli Dragonswrath", "Tegan Parker", "Grasszanine", "Zhavashian", "Morv\u00e4rth", "Newtype Khan", "Lord Erin The Wise", "Air One Com", "Be\u00eb", "Xyntharos", "Blackout Angel", "Cedryn X", "Arcanophage Farra", "Mistwalker Cael", "Cat Wigglebooty", "Tootsie Pop Rocks", "Arriasa", "Seikers Sorrow", "Gestern Yesteryear", "Duke Silvver", "Sakis Ranger", "Rosie Sunray", "Zayde Sunsabre", "Ryvalia Fazebringer", "Elonith Requiem", "Primal Clone", "Blanco Padre Guard", "Smol Gluvs", "Morton Saltbringer", "Johosh The Mighty", "Solus Sanctus", "Scintilla The Storm", "Kary\u00edna", "Aronorf Xideliesi", "Tika Fiery", "Drevarr Moonwillow", "Eibh\u00ebar", "Tomitigas", "Little Heks", "Xanvias Einzbern"];
const professions = ["Scourge", "Scrapper", "Tempest", "Firebrand", "Berserker", "Soulbeast", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Tempest", "Spellbreaker", "Tempest", "Reaper", "Spellbreaker", "Weaver", "Firebrand", "Reaper", "Vindicator", "Reaper", "Berserker", "Spellbreaker", "Vindicator", "Scrapper", "Scrapper", "Druid", "Chronomancer", "Firebrand", "Vindicator", "Druid", "Vindicator", "Spellbreaker", "Chronomancer", "Reaper", "Chronomancer", "Firebrand", "Reaper", "Chronomancer", "Berserker", "Firebrand", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 6], [0, 0, 0, 1, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0], [0, 0, 5, 2, 0, 0, 0, 0], [0, 0, 5, 1, 2, 0, 0, 0], [0, 0, 5, 2, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4], [4, 0, 0, 1, 0, 0, 1, 2], [0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0], [0, 0, 4, 2, 2, 0, 0, 0, 0, 1], [0, 0, 4, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1], [0, 0, 4, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0], [0, 0, 6, 1, 1, 2, 0, 0], [0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 2], [0, 0, 5, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2], [0, 0, 4, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0], [1, 0, 4, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 2], [0, 0, 5, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3], [2, 0, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 4, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0], [0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 1], [0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 1], [0, 0, 5, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 1, 0], [0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 3, 0, 0, 1, 1], [0, 0, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 3, 0, 0, 0, 1], [0, 0, 6, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 5, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 1, 2, 0], [0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0, 3, 0, 0, 1, 0], [0, 0, 6, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 1], [7, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 1, 1], [0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 0, 1, 0, 1, 0, 2], [0, 0, 4, 4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5, 0, 0, 1, 0, 0, 0, 0], [0, 0, 5, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0, 0, 2], [0, 0, 5, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 0, 2], [1, 0, 5, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 2, 0, 1], [0, 0, 6, 0, 5, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0], [2, 0, 4, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 2], [0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 5, 1, 0, 4, 0, 0, 0, 0], [0, 0, 5, 4, 2, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 3, 0, 0, 0, 1], [0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 5, 0, 0, 1, 1], [0, 0, 5, 4, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 2], [0, 0, 4, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 5, 0, 0, 0, 2], [0, 0, 5, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 4, 0, 0, 3, 0, 2, 1, 1], [0, 0, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 7, 0, 0, 2, 0, 0, 1, 1], [0, 0, 5, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 4, 0, 0, 5, 0, 1, 0, 1], [0, 0, 3, 1, 2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 5, 0, 0, 4, 0, 0, 1, 3], [0, 0, 6, 5, 1, 1, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 4, 0, 0, 2, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

