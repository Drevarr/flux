created: 20230304223548000
creator: Drevarr
modified: 20230705163521134
modifier: drevarr
tags: ChartData
title: 202303042235_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Blanco Padre Guard", "Drevarr Moonwillow", "Gabe Malhorn", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[180.3027, 14.9665, 6.6816, 6.9306, 3.0906, 28.3972, 28.6605, 0.0, 10.8643, 73.2329, 0.0, 0.0, 118.3896, 88.2518, 37.3415, 0.0, 41.85, 12.035, 1.162, 8.8015], [39.911, 20.2333, 1.2816, 0.0, 7.6908, 143.8424, 0.0, 0.0, 10.8405, 0.0, 61.887, 0.0, 32.7236, 33.124, 9.4588, 0.0, 370.047, 16.414, 1.414, 0.0], [178.2477, 13.8254, 5.112, 0.0, 13.8736, 12.7616, 6.273, 0.0, 29.7891, 2.1074, 80.7478, 0.0, 0.0, 73.486, 132.3777, 41.2072, 16.5172, 113.739, 48.546, 9.898, 13.6698], [137.5795, 2.1945, 1.296, 0.0, 0.0, 198.5539, 51.4998, 77.1903, 0.0, 11.6622, 160.1695, 29.286, 21.5642, 302.47, 125.9895, 2.4675, 0.0, 202.368, 20.097, 16.352, 0.0], [280.2426, 27.8701, 6.7248, 0.0, 0.4147, 92.0632, 27.081, 7.6923, 39.7129, 304.5725, 46.35, 29.2019, 158.9896, 209.5093, 86.6092, 92.8128, 227.292, 18.299, 18.2, 6.1417], [422.3648, 107.8377, 39.168, 35.257, 91.2968, 60.0678, 118.5313, 85.1796, 7.3772, 64.2649, 270.3872, 22.992, 32.2157, 353.9508, 436.0538, 102.4835, 80.1641, 369.396, 94.888, 10.934, 11.4291], [349.0323, 134.6984, 0.0, 29.3803, 23.9395, 95.795, 39.1374, 42.44, 92.7234, 14.9443, 64.7559, 426.873, 28.674, 54.2694, 362.0708, 427.063, 297.416, 217.2135, 445.47, 134.096, 28.924, 25.3245]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

