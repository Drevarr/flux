created: 20230520220730000
creator: Drevarr
modified: 20230705163531036
modifier: drevarr
tags: ChartData
title: 202305202207_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Vddz", "Artakama Nahid", "Miphest\u00f6", "High Sorcer Baradun", "Belvyn Brightblade", "Red Omega Red", "Tika Mi", "Alnerian", "Primal Clone", "Ryvalia Fazebringer", "Black Raspberry Pie", "Newtype Khan", "Sub Train", "La Morte Vivante", "Tribal S", "Gabe Malhorn", "Blanco Padre Guard", "Arriasa", "Aronorf Xideliesi", "Drevarr Moonwillow", "Koralia Danai", "Crusader Siolith", "Sygaldry Verdandi"];
const professions = ["Spellbreaker", "Tempest", "Catalyst", "Tempest", "Firebrand", "Herald", "Tempest", "Guardian", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.4994, 43.5406, 0.0, 13.7033, 0.0, 10.2188, 0.0, 27.5338, 4.7455, 37.6947, 96.096, 6.936, 190.0454, 27.6971, 13.8763, 54.9153, 10.4122, 22.9937, 126.0998, 6.885, 181.293], [91.8638, 0.0, 0.0, 18.4363, 0.0, 18.3405, 0.0, 0.0, 0.0, 10.7113, 55.7861, 0.0, 141.8573, 9.2769, 22.9134, 44.5243, 0.0, 0.0, 117.4803, 0.0, 146.664, 19.6874, 95.9364, 0.0, 21.8691, 15.7242, 19.4157, 0.0, 0.0, 0.0, 19.5624, 74.0228], [310.6484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.9272, 0.0, 0.0, 37.5506, 198.4378, 53.9865, 0.0, 0.0, 44.0551, 21.5118, 52.38, 0.0, 0.0, 205.4257, 41.7501, 0.0, 0.0], [92.15, 18.4157, 25.1639, 44.1084, 18.3844, 18.2643, 0.0, 18.5536, 10.3441, 9.2527, 65.2637, 123.1776, 44.2486, 16.8335, 18.4599, 0.0, 36.0914, 109.3397, 18.4212, 171.981, 0.0, 18.6947, 98.3729, 0.0, 60.1647, 18.2952, 0.0, 17.9046, 36.828, 78.5439], [189.165, 27.4525, 43.7262, 34.1716, 0.0, 0.0, 41.4589, 0.0, 39.7913, 266.5733, 0.0, 578.2579, 0.0, 0.0], [124.3431, 37.0484, 0.0, 206.5483, 104.4072, 320.973, 16.0584, 43.366, 146.9502, 16.7508, 46.5226, 42.7465, 11.5344, 92.7738, 30.9729, 44.6292, 52.7467], [98.589, 55.0418, 15.493, 38.6816, 0.0, 24.0219, 0.0, 19.5426, 11.3705, 61.6697, 87.4581, 0.0, 210.0787, 58.531, 19.6046, 45.9176, 0.0, 21.2797, 122.9074, 19.4004, 196.425, 19.5203, 19.708, 110.7076, 42.2577, 21.2867, 85.1734, 19.3104, 17.8821, 25.3957, 51.9156, 84.2175], [25.5356, 31.936, 5.402, 25.4036, 9.5579, 0.0, 63.0191, 25.3403, 15.3605, 126.4484, 36.312, 264.7642, 53.659, 27.5251, 0.0, 94.3354, 292.164, 19.1866, 28.0421, 153.1937, 0.0, 31.8096, 28.7515, 61.2833, 27.7344, 27.6723, 25.5809, 37.62, 100.9724], [164.1242, 29.5063, 25.5536, 11.2749, 0.0, 30.0846, 10.3295, 43.3578, 29.1127, 50.4115, 151.4021, 0.0, 210.8909, 22.0909, 4.9425, 37.5003, 0.0, 0.0, 153.7141, 22.032, 240.075, 20.3128, 20.5146, 109.0325, 20.8455, 65.1843, 21.7442, 102.9911, 22.356, 0.0, 0.0, 27.6408, 73.2249], [128.9241, 55.3841, 45.3583, 48.1971, 0.0, 24.6574, 13.7986, 72.0388, 30.3257, 30.5386, 129.4476, 0.0, 259.6205, 72.7466, 0.0, 83.0696, 26.165, 24.9341, 114.7668, 36.873, 294.492, 54.4315, 22.748, 134.7678, 15.1515, 44.4573, 47.7988, 87.091, 28.5552, 26.4735, 14.7353, 58.2516, 101.7702], [221.7895, 91.8049, 42.4838, 25.6225, 15.7276, 20.8444, 10.3295, 19.8196, 25.2737, 52.7361, 202.8693, 0.0, 318.9082, 69.6098, 10.6088, 88.236, 20.2633, 49.1568, 212.9331, 10.3122, 346.581, 36.9968, 21.3624, 238.0136, 6.786, 36.8433, 13.8219, 121.1284, 20.9304, 21.2454, 42.1684, 20.592, 117.8158], [239.9619, 80.5774, 21.1445, 54.4912, 25.1248, 15.7223, 16.1435, 51.3093, 25.8335, 45.7167, 155.2412, 7.956, 358.1626, 61.8012, 31.475, 53.5221, 21.2507, 32.5987, 218.0409, 22.4298, 354.438, 46.7152, 0.0, 227.2018, 51.0561, 33.2786, 146.8562, 46.5264, 21.1455, 0.0, 61.3404, 109.1282], [184.5861, 70.993, 23.0202, 26.6385, 0.0, 22.6111, 17.0738, 49.7269, 28.0463, 83.9584, 173.9565, 0.0, 716.8666, 57.7968, 0.0, 222.2735, 23.0683, 38.3876, 252.5188, 10.404, 410.019, 22.9405, 12.987, 231.0088, 0.0, 53.721, 0.0, 67.116, 22.7016, 0.0, 14.5295, 62.172, 220.2066], [712.535, 56.1951, 27.2149, 203.7555, 39.3822, 96.3732, 492.2681, 0.0, 639.618, 23.441, 14.8896, 398.8213, 13.117, 113.1525, 14.448, 112.659, 65.5344, 34.0326, 36.0973, 20.0376, 153.8964], [390.7788, 94.5433, 32.2283, 12.0431, 0.0, 38.8291, 0.0, 49.3313, 41.7229, 82.3175, 160.5199, 4.4268, 606.9542, 88.9644, 36.0452, 159.115, 34.3108, 52.2291, 433.5279, 56.3346, 664.062, 50.5833, 385.2684, 8.6645, 85.6998, 69.6394, 63.2009, 37.9728, 33.633, 16.6698, 0.0, 166.4847], [234.2318, 0.0, 169.5263, 694.1874, 0.0, 1026.648, 30.3232, 62.3088, 770.9936, 192.5496, 56.901, 220.1245, 16.8048, 67.6989, 32.7839, 32.3136, 418.162], [485.5044, 68.8023, 24.1408, 27.9023, 0.0, 23.6787, 0.0, 60.3686, 27.4598, 71.9708, 422.4144, 762.3475, 102.3792, 23.265, 152.033, 34.9391, 117.5236, 461.4614, 114.6582, 802.578, 30.0312, 26.8013, 294.9664, 0.0, 137.5173, 17.2172, 109.2233, 83.2248, 28.5714, 0.0, 106.128, 194.3208], [466.0441, 143.9714, 40.4863, 52.7566, 15.1044, 33.6052, 0.0, 34.1007, 22.9809, 55.1974, 378.6253, 63.3012, 836.5248, 157.2394, 83.9815, 189.3591, 0.0, 72.2152, 459.7056, 60.0678, 768.531, 45.4639, 68.823, 452.8807, 115.3521, 83.8466, 175.5403, 24.9264, 32.3676, 95.1825, 114.3648, 263.5565], [474.7726, 234.2017, 57.6114, 20.2948, 0.0, 19.8911, 0.0, 76.9046, 0.0, 61.4418, 301.1247, 54.0192, 955.3709, 128.0073, 37.4928, 135.7209, 21.4078, 58.2767, 478.0619, 72.4914, 735.648, 0.0, 20.8661, 629.5255, 5.1155, 100.251, 27.5475, 254.9609, 33.1344, 72.9936, 46.9224, 185.1696, 309.4772], [456.0278, 270.1432, 25.846, 64.6758, 21.5988, 39.49, 16.2211, 139.7655, 32.4852, 200.7799, 452.5268, 33.048, 827.591, 152.7679, 84.1056, 157.0252, 106.6124, 118.2027, 449.0111, 65.6676, 753.399, 53.3054, 65.3902, 455.9263, 1.1895, 160.4439, 81.3663, 254.5614, 71.9928, 41.6916, 42.0449, 159.7068, 348.1285], [578.3698, 166.7686, 19.9021, 45.1244, 0.0, 23.1195, 30.3425, 18.1155, 18.4599, 704.9437, 108.1812, 1160.8474, 59.6656, 23.6993, 281.1942, 112.8956, 39.0991, 654.442, 44.4618, 1029.558, 0.0, 0.0, 401.4101, 89.8452, 25.4766, 175.6202, 45.2088, 31.9347, 0.0, 115.2756, 452.7356], [611.5667, 251.5905, 99.0965, 33.0565, 90.282, 46.6711, 34.5352, 63.2169, 45.7086, 268.1471, 597.3306, 107.4468, 995.9789, 156.3051, 69.1746, 350.622, 61.1266, 100.2217, 754.2045, 148.2264, 1045.854, 58.2689, 21.0109, 520.1885, 11.947, 218.6064, 189.4133, 278.851, 102.3408, 30.303, 33.71, 147.7476, 344.7599], [676.1002, 406.9262, 139.4854, 167.7854, 46.7892, 72.2563, 0.0, 133.2381, 21.5413, 211.4912, 679.87, 107.8752, 1363.3459, 147.2952, 126.8718, 325.1961, 38.911, 133.5642, 807.1983, 121.6044, 1085.139, 61.0474, 586.1257, 140.9859, 115.8007, 316.2442, 86.4, 47.5524, 111.5436, 96.7032, 293.6975]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

