created: 20230625215204000
creator: Drevarr
modified: 20230705163536573
modifier: drevarr
tags: ChartData
title: 202306252152_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Necrotic Windrunner", "Hulk N Wall", "Eibh\u00ebar", "Oo Dads Mad", "Newtype Khan", "Blancooo Padreee", "Rozaalyna", "Arcanophage Farra", "Grasszanine", "Tootsy Pop Star", "Swithblight", "Shaca Booey", "Mister Jekyll", "Irish Necroman", "Zayde Sunsabre", "Smol Gluvs", "Rina Of Theros", "Demon Maddx", "Lord Erin The Wise", "No Reserv\u00e9", "Sister Elon\u00edth", "My Birthday Girl", "Xyntharos", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Tsolice"];
const professions = ["Firebrand", "Scourge", "Dragonhunter", "Chronomancer", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Reaper", "Spellbreaker", "Spellbreaker", "Reaper", "Reaper", "Berserker", "Reaper", "Reaper", "Berserker", "Reaper", "Scourge", "Reaper", "Weaver", "Vindicator", "Dragonhunter", "Scrapper", "Vindicator", "Vindicator", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 109.1417, 125.7857, 137.3261, 88.5604, 25.725, 0.0, 126.9048, 3.825, 0.0, 125.3053, 7.1772, 25.0, 0.0, 53.3662, 18.3052, 139.0417], [40.4884, 129.525, 0.0, 233.575, 0.0, 84.9048, 135.075, 28.8871, 113.2737, 91.3165, 76.5556, 0.0, 35.5986, 27.1364, 112.5], [7.8837, 168.9833, 244.7714, 295.0435, 232.2198, 48.087, 108.7, 0.0, 41.9841], [0.0, 80.0667, 128.8, 100.2609, 117.2967, 330.4783, 232.2, 0.0, 103.1587, 2.895, 11.7581, 46.4526, 84.2785, 199.6944, 30.3084, 97.6127, 23.1039, 21.3472], [0.0, 59.8917, 111.7, 176.3333, 200.1648, 515.9565, 228.375, 0.0, 75.7143, 134.12, 33.7258], [0.0, 91.5167, 87.3429, 160.442, 157.4835, 323.913, 68.95, 0.0, 288.9524, 3.115, 0.0, 83.3895, 28.3038, 0.0, 0.0, 115.7606, 36.3247, 26.7361], [0.0, 165.7917, 121.0857, 111.0652, 197.5495, 24.4783, 87.1746, 163.945, 0.0, 102.1684, 7.5696, 0.0, 0.0, 57.162, 4.0195, 25.625], [145.4571, 249.6594, 142.5824, 376.55, 0.0, 489.5873, 37.085, 24.9677, 190.6737, 28.5949], [0.0, 116.3667, 178.9714, 155.1812, 152.7253, 201.0435, 144.825, 0.0, 260.4286, 99.595, 11.5968, 106.3368, 20.8861, 0.0, 0.0, 47.1761, 63.9545], [0.0, 175.8083, 66.7143, 187.1594, 271.5714, 129.3913, 227.3, 0.0, 116.0, 82.74, 4.5968, 41.6737, 98.557, 215.3056, 0.0, 69.3169, 11.9286, 0.0], [43.4651, 112.0333, 22.9714, 239.6594, 166.5055, 310.075, 0.0, 61.2857, 22.995, 0.0, 343.6526, 93.7468, 102.0, 0.0, 169.4225, 17.2468, 150.3472], [0.0, 339.6857, 410.2029, 264.5495, 0.0, 384.925, 0.0, 765.2857, 45.26, 69.9194], [413.7253, 362.7826, 538.6, 0.0, 559.7302, 254.325, 45.2742, 230.3579, 265.3418, 0.0, 0.0, 179.1197, 9.7403, 0.0], [3.1395, 242.2167, 259.2286, 216.9928, 523.1538, 0.0, 343.44, 87.7903, 67.7368, 50.4177, 245.7222, 37.0748, 154.0282, 104.474, 66.7778], [82.186, 124.4917, 301.2, 491.1014, 262.0659, 953.3913, 180.475, 0.0, 171.873, 116.13, 0.0, 196.4105, 62.2532, 152.6667, 0.0, 220.5986, 93.3442, 112.75], [6.5465, 221.45, 296.2143, 507.2174, 247.4835, 177.5217, 294.125, 0.0, 292.2381, 13.67, 32.7419, 177.7263, 494.3165, 124.3056, 85.8131, 69.6338, 148.1753, 31.7361], [0.6744, 169.2667, 280.6143, 531.2319, 167.2637, 159.9565, 270.45, 0.0, 472.3651, 216.665, 40.4677, 429.1053, 117.3544, 69.4722, 0.0, 178.5775, 5.3831, 103.0556], [79.7674, 222.475, 295.9857, 394.8841, 638.022, 687.1304, 159.025, 0.0, 282.9841, 142.675, 94.3387, 262.4, 234.2658, 166.9444, 53.8972, 87.6831, 39.5584, 119.6111], [11.6744, 355.6833, 458.8143, 332.7101, 194.8022, 0.0, 544.775, 0.0, 470.3175, 47.585, 188.7097, 275.0316, 364.0127, 250.6944, 0.0, 276.2958, 0.7532, 295.0556], [0.0, 268.95, 404.6857, 707.0217, 276.9451, 889.325, 0.0, 405.3492, 311.54, 0.0, 239.1474, 14.443, 436.0556], [55.8023, 438.35, 155.3143, 421.6304, 461.3077, 517.6087, 813.525, 0.0, 837.5397, 364.245, 0.3871, 202.8, 141.0253, 0.0, 0.0, 272.7676, 42.3377, 146.3889], [119.6163, 251.2833, 267.1857, 624.8841, 566.2308, 208.5, 0.0, 554.7302, 395.685, 74.8065, 297.3368, 316.5063, 137.2778, 0.0, 247.7394, 192.1883, 108.8889], [120.6744, 298.6417, 727.0143, 530.7319, 944.8681, 1482.7391, 270.375, 0.0, 675.5397, 301.04, 0.0, 322.5053, 214.1266, 187.2778, 379.2523, 239.2394, 151.5649, 95.3472], [29.186, 338.6833, 361.2143, 642.5507, 1430.4725, 0.0, 383.825, 0.0, 875.0952, 558.475, 177.9355, 327.5579, 577.2911, 483.2222, 24.0561, 239.8803, 157.4156, 45.4722], [86.8721, 192.0, 387.5, 894.1087, 505.7473, 934.3043, 506.025, 0.0, 729.0, 633.325, 118.5645, 423.0105, 374.0127, 866.1944, 89.1028, 469.0704, 153.1234, 0.0], [47.2209, 225.4333, 972.8143, 827.3768, 1127.9341, 2057.8696, 1452.375, 0.0, 518.9683, 486.845, 127.3065, 424.6316, 781.7342, 0.0, 103.2897, 402.7183, 89.1558, 429.0278], [54.5, 532.8167, 440.9, 1136.558, 1244.3736, 244.0435, 703.525, 0.0, 692.0159, 638.26, 235.1452, 424.0211, 442.8608, 48.0833, 166.271, 886.9225, 453.4545, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

