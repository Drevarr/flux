created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Vivian Vivisection", "Willow Starrdust", "Yobam N", "Gamora Titus", "Grasszanine", "Dark Sidiuz", "Satori Krull", "Belvyn Brightblade", "Gokai Ramasheta", "Gamora Titus", "Daring Deathblade", "Jmbrage Rev", "Shaca Booey", "Necrotic Windrunner", "Daphne Agla\u00e9", "Lord Erin The Wise", "Lost In Sauce", "Aira Draugr", "Duke Silvver", "Brygdyla", "Vee Usagii", "High Sorcer Baradun", "Legacy Of Mathus", "Tootsy Pop Star", "Ax Axun", "Glorious Gluvs", "Ateriuz", "Tribal S", "Gestalia Yesteryear", "Crusader Siolith", "My Birthday Girl", "Rina Of Theros", "Be\u00eb", "Newtype Khan", "Lord Of Bones", "Tika Fiery", "Lucky Luprac\u00e1n", "Blancooo Padreee", "Artakama Nahid", "Koralia Danai", "Xanvias Einzbern", "Sub Train", "Sygaldry Verdandi", "Arriasa", "Aronorf Xideliesi", "Bella Sassy", "Mistwalker Cael", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Primal Clone"];
const professions = ["Reaper", "Herald", "Reaper", "Firebrand", "Spellbreaker", "Scourge", "Scrapper", "Firebrand", "Vindicator", "Dragonhunter", "Reaper", "Vindicator", "Berserker", "Reaper", "Scourge", "Weaver", "Vindicator", "Herald", "Vindicator", "Tempest", "Dragonhunter", "Tempest", "Berserker", "Scourge", "Vindicator", "Berserker", "Berserker", "Druid", "Druid", "Firebrand", "Scrapper", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 0, 0, 1, 5, 0, 5, 2, 18, 2, 0, 0, 0, 3, 2, 0, 0, 0, 1, 0, 1], [11, 39, 11, 10, 5, 0], [1, 4, 3, 28, 1, 5, 1, 9, 1, 0, 0, 1, 6, 0, 3, 10, 0, 5], [40, 9, 6, 2, 1, 2, 27], [4, 4, 7, 3, 0, 0, 0, 13, 0, 21, 21, 1, 19], [7, 12, 0, 8, 3, 0, 4, 0, 23, 5, 10, 0, 0, 16, 5, 2, 2, 0, 0, 4, 0], [8, 84, 4, 0, 9, 11, 7, 14], [22, 45, 27, 7, 8, 0, 4, 26], [16, 0, 5, 2, 59, 1, 4, 1, 0, 30, 13, 3, 5], [61, 91], [0, 16, 7, 1, 10, 3, 28, 2, 2, 5, 0, 9, 3, 1, 0, 0, 8, 1, 44, 10, 0, 9], [7, 4, 22, 5, 7, 13, 0, 10, 2, 0, 0, 0, 15, 0, 14, 28, 0, 38], [2, 68, 48, 14, 13, 1, 10, 0, 13], [14, 52, 25, 9, 2, 0, 5, 2, 17, 2, 0, 7, 0, 5, 1, 0, 0, 0, 5, 1, 4, 10, 0, 10], [17, 12, 21, 9, 3, 0, 3, 1, 19, 4, 10, 3, 0, 15, 3, 3, 0, 0, 0, 9, 0, 9, 22, 0, 16], [10, 39, 36, 10, 6, 4, 9, 4, 21, 1, 2, 4, 0, 14, 0, 1, 2, 0, 0, 0, 12, 10], [30, 16, 69, 7, 9, 0, 5, 1, 38, 16], [10, 89, 36, 12, 5, 0, 7, 3, 34], [1, 34, 17, 15, 1, 9, 1, 33, 6, 5, 7, 1, 5, 2, 2, 0, 0, 14, 0, 26, 15, 1, 8], [1, 66, 36, 15, 10, 2, 9, 2, 23, 12, 7, 7, 0, 2, 5, 1, 1, 0, 0, 5, 0, 15, 9], [38, 10, 1, 8, 2, 38, 11, 1, 2, 2, 9, 6, 1, 1, 0, 0, 2, 2, 47, 17, 1, 35], [16, 48, 21, 13, 6, 0, 5, 1, 21, 4, 8, 4, 0, 31, 7, 1, 2, 0, 7, 0, 4, 23, 0, 19], [20, 65, 42, 15, 11, 0, 5, 2, 26, 0, 11, 17, 0, 19, 2, 2, 0, 1, 0, 5, 0, 5, 16, 1, 10], [21, 43, 47, 12, 10, 0, 16, 5, 13, 15, 7, 8, 0, 12, 5, 0, 2, 0, 7, 1, 19, 23, 0, 16], [24, 69, 39, 11, 9, 0, 8, 5, 24, 4, 1, 2, 0, 17, 3, 2, 0, 0, 0, 19, 0, 26, 22, 0, 18], [21, 94, 45, 11, 9, 0, 6, 3, 23, 2, 6, 6, 16, 4, 2, 0, 0, 10, 1, 5, 31, 0, 12], [21, 78, 29, 14, 6, 2, 3, 2, 26, 3, 14, 13, 0, 19, 4, 2, 0, 1, 12, 2, 11, 31, 0, 15], [24, 66, 43, 15, 10, 0, 4, 3, 28, 5, 12, 14, 0, 15, 4, 3, 1, 0, 0, 16, 0, 7, 35, 2, 12], [33, 66, 44, 10, 6, 0, 8, 4, 26, 2, 10, 20, 10, 3, 1, 1, 0, 0, 18, 1, 19, 30, 0, 12], [30, 63, 41, 10, 8, 0, 8, 3, 23, 4, 6, 20, 1, 14, 1, 1, 1, 0, 23, 2, 36, 21, 1, 10], [24, 91, 41, 16, 11, 0, 10, 3, 17, 1, 0, 6, 0, 22, 4, 3, 0, 0, 24, 34, 1, 21], [18, 69, 66, 20, 10, 2, 6, 0, 32, 9, 17, 5, 0, 20, 3, 3, 0, 0, 0, 15, 3, 17, 15, 1, 4], [15, 87, 45, 17, 4, 2, 6, 2, 34, 5, 13, 18, 0, 16, 5, 2, 0, 0, 0, 13, 0, 18, 29, 0, 13], [30, 86, 51, 15, 11, 1, 4, 2, 27, 4, 8, 20, 0, 13, 2, 2, 1, 0, 0, 12, 1, 16, 23, 0, 15], [32, 77, 50, 8, 10, 0, 11, 3, 29, 7, 14, 24, 15, 4, 1, 0, 1, 0, 14, 0, 22, 31, 1, 17], [23, 86, 56, 13, 12, 2, 5, 3, 24, 9, 13, 29, 0, 16, 1, 2, 2, 1, 0, 15, 1, 14, 34, 1, 14], [23, 63, 41, 13, 16, 4, 8, 3, 31, 10, 9, 30, 1, 15, 4, 1, 1, 0, 41, 1, 23, 11, 0, 29], [32, 76, 61, 20, 8, 1, 8, 6, 46, 6, 9, 22, 1, 9, 4, 1, 0, 1, 13, 0, 13, 30, 1, 24], [35, 105, 51, 15, 10, 1, 5, 6, 31, 7, 16, 20, 0, 16, 4, 2, 1, 11, 1, 18, 27, 1, 13], [40, 83, 50, 13, 7, 0, 9, 4, 45, 5, 11, 22, 13, 3, 2, 1, 1, 13, 1, 19, 42, 1, 13], [27, 84, 65, 14, 4, 0, 5, 4, 48, 15, 12, 25, 0, 10, 4, 2, 0, 1, 0, 12, 0, 18, 35, 0, 15], [38, 85, 69, 10, 9, 4, 8, 2, 28, 4, 17, 9, 0, 30, 3, 4, 1, 1, 0, 15, 1, 16, 36, 0, 17], [34, 99, 53, 14, 7, 1, 12, 3, 39, 3, 10, 31, 1, 25, 1, 2, 1, 10, 2, 33, 28, 1, 15], [37, 85, 55, 16, 10, 0, 8, 7, 51, 4, 11, 19, 0, 14, 4, 4, 1, 0, 12, 2, 28, 40, 0, 17], [35, 95, 72, 16, 12, 10, 7, 2, 25, 6, 13, 6, 1, 20, 4, 4, 1, 1, 1, 18, 2, 33, 35, 2, 17], [28, 111, 48, 19, 10, 1, 11, 4, 42, 6, 15, 27, 0, 25, 5, 1, 1, 0, 23, 3, 24, 44, 2, 21], [24, 95, 64, 34, 15, 6, 10, 2, 55, 7, 15, 43, 0, 13, 2, 2, 0, 1, 0, 22, 0, 10, 47, 4, 32], [38, 126, 66, 23, 19, 1, 11, 5, 48, 6, 14, 29, 27, 8, 3, 0, 22, 3, 15, 47, 0, 14], [33, 168, 93, 18, 13, 1, 15, 6, 44, 5, 19, 34, 27, 2, 3, 0, 0, 32, 2, 34, 52, 0, 21], [55, 173, 83, 22, 8, 0, 18, 6, 55, 5, 15, 48, 31, 7, 3, 1, 1, 48, 2, 14, 71, 0, 23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

