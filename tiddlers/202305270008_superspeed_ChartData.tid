created: 20230527000807000
creator: Drevarr
modified: 20230705163531856
modifier: drevarr
tags: ChartData
title: 202305270008_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "The Fancy Cheese", "Miphest\u00f6", "Sofya De Nova", "Newtype Khan", "Tegan Parker", "Venomina The Siren", "Cyclotechnist Farra", "Melli Dragonswrath", "Xanvias Einzbern", "Elonith Primal", "Johosh Of The North", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Tempest", "Weaver", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Berserker", "Berserker", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.39, 0.303, 0.204, 0, 0, 0.316, 0.351, 0.325, 0, 0.6, 0, 0, 0, 0.095, 0, 0, 0, 0.122, 0, 0.219, 0, 0, 0.24], [0.382, 0.062, 0, 0, 0, 0.595, 0, 0.821, 0.378, 0, 0, 0, 0.395, 0, 0.259, 0, 0, 0, 0, 0.11, 0.176, 0, 0.239, 0.255, 0.185], [0.656, 0.378, 0, 0.508, 0, 0.491, 0.423, 0, 0, 0, 0.266, 0.286, 0.726, 0.202, 0, 0.122, 0, 0, 0.423, 0.353], [0.256, 0.464, 0.797, 0, 0, 0.158, 0.259, 0.778, 0, 0.601, 0.424, 0.462, 0.264, 0.19, 0.983, 0, 0.405, 0.946, 0.609, 0, 0, 0, 0.351, 0, 0.256, 0.169, 0.368], [0.664, 0.701, 0, 0, 0, 0.553, 0, 1.035, 0.314, 0, 0, 0, 0, 0.159, 0.411, 0, 0, 0.203, 0, 0, 0.366, 0.404, 0, 0.368, 0.548, 0], [0.588, 0.56, 0, 0, 0, 0.451, 0.348, 0.697, 0.643, 0, 0.264, 0.259, 0.521, 0.286, 0, 0.403, 0.405, 0.907, 0.366, 0, 0.872, 0.527, 0, 0.48, 0.383, 0.37], [0.513, 0.73, 0.413, 0, 0.474, 0, 0.737, 0.661, 0, 0.277, 0.517, 0.529, 0.457, 0.541, 0.607, 0, 0.365, 0, 0.533, 0.704, 0.759, 0.718, 0.551, 1.125], [0.742, 1.151, 0.207, 0.357, 1.029, 0.702, 1.468, 0.328, 0, 0.369, 0.389, 0.51, 0.764, 0.303, 1.347, 0.713, 0.444, 0, 0.494, 0.691, 0.379, 0.574, 0.685, 1.293], [0.995, 0.891, 0.344, 0, 0, 0.777, 0.983, 1.158, 0.72, 1.001, 0.703, 0.649, 0.442, 0.659, 1.615, 0.445, 0.674, 1.797, 0.486, 1.846, 0, 1.152, 0.934, 0, 0.399, 0, 0.616], [1.123, 1.02, 0.343, 0, 0, 1.056, 1.167, 1.092, 0.543, 0, 0.905, 0.863, 0.825, 0.476, 0, 0.448, 0.671, 0, 0.815, 1.479, 0, 1.097, 1.028, 0, 0.399, 0.369, 1.226], [0.778, 0.775, 0.584, 1.545, 0.919, 1.138, 0.776, 0.767, 0.602, 0.689, 0.765, 0.568, 0.667, 0.999, 0.521, 1.011, 0.676, 0.978, 1.018, 0, 0.878, 0.958, 1.39, 0.989, 0.747, 1.189], [1.098, 1.344, 0.62, 0, 0, 1.419, 1.394, 1.42, 1.139, 0.669, 1.295, 1.057, 1.138, 1.259, 1.009, 0, 1.099, 0.886, 0.726, 1.45, 1.409, 0, 0.958, 0.835, 1.111], [1.851, 1.754, 0.515, 1.059, 0, 1.774, 1.601, 2.127, 1.465, 1.436, 1.099, 1.263, 0.749, 1.385, 0.666, 1.172, 1.32, 1.723, 1.904, 1.879, 0.998, 1.539, 1.979, 2.375, 1.527, 1.877, 2.033]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

