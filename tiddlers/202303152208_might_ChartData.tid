created: 20230315220824000
creator: Drevarr
modified: 20230705163522237
modifier: drevarr
tags: ChartData
title: 202303152208_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Blanco Padre Guard", "Zaylen Harker", "Johosh The Great", "Koralia Danai", "Fribble Bibble", "Drevarr Moonwillow", "Sygaldry Verdandi", "Whose Guardian", "Bella Sassy", "Ravioli Fetabringer", "Newtype Khan", "Arcanophage Farra"];
const professions = ["Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.9448, 5.5115, 5.2067, 3.3264, 0.0, 0.0, 30.4672, 0.0, 1.62, 15.4668, 0.0, 3.6921, 0.0, 0.0, 0.0, 0.0, 3.2069, 0.0, 0.8242, 16.8365, 44.0898, 30.4819], [5.7947, 9.7177, 17.3783, 0.567, 6.6053, 0.767, 4.027, 22.5552, 5.0787, 3.7584, 2.3128, 0.0, 1.2083, 0.0, 0.0, 7.2461, 0.0, 11.0534, 19.1808, 6.9082, 32.6819, 9.0202], [13.4946, 20.0155, 10.143, 5.94, 6.1363, 1.6243, 15.1155, 1.5795, 7.9704, 12.4313, 3.7393, 5.5718, 2.2136, 0.2858, 14.3276, 2.5024, 6.8054, 12.217, 10.8158, 3.481, 7.7851, 11.8973], [7.422, 19.2903, 16.364, 8.4586, 7.6554, 4.7827, 23.618, 0.0, 7.776, 5.782, 0.0, 12.0834, 0.9279, 0.767, 9.163, 3.542, 9.792, 4.3235, 10.7626, 10.0699, 23.8948, 22.1616], [3.8896, 13.6338, 22.247, 3.1752, 6.8904, 6.2717, 7.4222, 22.7914, 0.0, 10.2384, 15.4668, 5.5328, 9.5325, 1.8335, 2.2109, 7.5636, 7.1726, 13.8168, 9.3773, 5.2685, 30.6008, 23.328], [9.2478, 14.359, 18.5279, 4.977, 10.5019, 2.7674, 5.3354, 22.5552, 1.0328, 11.9232, 23.2726, 2.6903, 12.5533, 3.1528, 3.5795, 4.6315, 8.9842, 12.9442, 14.1725, 14.6452, 27.1382], [12.8199, 21.1758, 29.8204, 4.8762, 16.2994, 3.6246, 2.9554, 41.4496, 3.9731, 23.8464, 42.064, 2.8764, 16.1783, 0.5031, 6.2115, 11.6953, 3.2476, 9.3024, 3.1574, 19.8283, 20.0866, 7.9834, 4.5477, 22.3171], [18.2574, 19.2903, 22.9232, 1.6002, 13.7333, 2.8726, 5.1662, 51.6053, 2.2599, 33.1776, 11.1303, 1.2521, 15.2385, 1.6845, 13.1947, 4.7472, 7.8581, 18.6648, 22.0046, 4.3814, 27.7488, 33.1258], [9.7241, 13.3437, 28.5356, 0.4662, 16.3469, 6.4973, 0.9024, 47.5903, 6.6704, 28.3824, 19.8034, 4.9406, 20.7432, 2.647, 19.5255, 4.9036, 10.1592, 5.068, 18.4224, 29.8901, 2.7283, 11.1766, 35.2253], [6.8267, 19.2903, 16.4993, 5.8842, 20.291, 6.1965, 4.1285, 45.3466, 6.1357, 22.2912, 23.5617, 6.5988, 27.4562, 2.672, 2.7222, 10.3958, 2.944, 10.2326, 6.1175, 18.4709, 12.361, 8.5478, 37.4609, 22.5504], [10.1606, 23.4965, 25.3575, 7.6734, 18.0576, 6.2867, 6.7793, 31.0577, 1.1907, 17.1072, 27.4645, 5.2621, 12.4862, 2.4596, 1.6544, 12.2284, 2.7968, 12.1421, 4.2518, 24.5309, 19.1808, 6.3706, 44.1668, 32.0371], [25.0444, 40.9738, 46.9283, 2.5956, 29.8901, 6.783, 5.9446, 72.0349, 2.0412, 30.6504, 73.2869, 7.6986, 33.565, 6.0484, 10.3325, 17.0265, 0.0184, 15.1531, 2.0272, 31.8029, 40.1731, 24.6656, 38.1802], [54.1372, 112.9136, 113.6016, 52.0344, 3.384, 17.6419, 188.944, 21.3354, 92.5344, 167.0998, 24.8386, 87.0676, 9.2906, 31.4787, 61.6753, 4.7104, 39.9024, 89.9789, 71.7149, 124.7925, 111.5078]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

