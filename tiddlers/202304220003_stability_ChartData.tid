created: 20230422000344000
creator: Drevarr
modified: 20230705163526263
modifier: drevarr
tags: ChartData
title: 202304220003_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Kmpek", "Laddy Lux", "Smol Daddy Tika", "Solo Bloodborn", "Xanvias Einzbern", "Blancooo Padreee", "Domina Flagbringer", "Elonith Primal", "Sub Train", "Aronorf Xideliesi", "Xyntharos", "Ryvalia Fazebringer", "Air One Com", "Jupi Jupi Jupi", "Lucas Ryn", "Ark Darkness", "Zaylen Harker", "Soxx", "Koralia Danai", "Bella Sassy", "Johosh The Great"];
const professions = ["Vindicator", "Vindicator", "Firebrand", "Berserker", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2.0448, 3.5842, 0.0, 0.6854, 1.0053, 0.2112, 0.0, 0.5682, 5.4285, 1.0368, 0.0, 3.1133, 0.0, 2.9412], [2.272, 1.8302, 1.6572, 0.0, 0.0, 0.0, 1.4229, 0.0, 3.42, 0.0, 0.0, 1.794, 0.2627, 2.4192, 0.0437, 0.1478, 0.0, 1.9669, 0.0, 2.4192, 0.0, 0.0, 3.6598, 0.0], [0.0, 7.5181, 5.7105, 6.48, 0.0, 3.9565, 1.4545], [2.3681, 0.0, 1.6015, 1.3046, 0.792, 2.3977, 0.0, 0.9626, 0.0, 2.16, 1.071, 0.0, 0.9384, 0.0, 1.0483, 0.5682, 0.9082, 0.0, 1.5299, 2.397, 2.16, 1.0656, 1.0053, 2.2991, 0.0], [0.0, 1.4484, 1.5252, 1.6572, 2.2704, 3.2087, 0.4083, 1.5903, 0.0, 3.06, 0.0, 0.0, 1.1868, 0.0, 0.7661, 1.0927, 1.0771, 2.2292, 2.2912, 3.888, 0.0, 1.5242, 0.0, 0.0], [0.5465, 2.6128, 1.0422, 2.0098, 1.056, 0.7405, 0.8166, 2.0925, 0.7349, 5.4, 0.0, 0.0, 1.0764, 0.3436, 1.008, 1.049, 0.6758, 0.0, 1.7484, 1.7977, 1.0368, 0.0, 2.0431, 0.0, 2.0124], [2.3074, 2.556, 1.7286, 1.6572, 0.0, 3.1029, 2.0416, 3.5573, 2.6519, 1.62, 0.0, 0.0, 1.2696, 1.7987, 1.9757, 1.7921, 0.9504, 2.7974, 1.692, 3.456, 1.728, 0.9729, 0.0, 0.4257], [1.2144, 0.0, 1.576, 4.4075, 0.0, 1.4809, 2.1437, 3.4735, 1.7572, 6.48, 2.268, 0.0, 0.0, 1.7987, 1.6128, 0.0, 0.0, 2.9286, 2.3618, 4.0608, 1.728, 0.7783, 0.0, 1.6641], [0.4858, 1.3064, 1.7286, 2.3272, 1.716, 1.8688, 2.8838, 3.5154, 1.278, 10.26, 0.0, 0.0, 0.4692, 0.384, 0.7661, 2.3603, 1.1616, 0.0, 1.5299, 3.0667, 3.5424, 0.0, 0.908, 0.5161, 2.5155], [2.4288, 5.9072, 5.8884, 7.5104, 2.6366, 3.7701, 10.98, 0.0, 0.0, 3.7812, 2.5465, 3.2659, 4.4986], [1.2751, 5.5948, 4.2451, 2.6092, 0.0, 5.289, 3.6749, 8.2863, 1.9489, 9.72, 0.0, 0.0, 2.0976, 2.2231, 3.3062, 2.7974, 2.4499, 0.2864, 8.0426, 5.8868, 2.0736, 0.0, 5.351, 0.0, 0.0], [0.2429, 3.2376, 0.6355, 4.5133, 2.508, 2.4682, 0.689, 2.0088, 2.524, 8.28, 5.04, 2.484, 1.2144, 1.9402, 2.016, 0.9179, 1.3094, 1.2174, 5.1141, 4.8293, 20.2176, 1.6992, 1.6864, 3.519, 0.0], [0.0, 3.8908, 3.33, 1.1283, 0.0, 3.2792, 5.2061, 6.2775, 0.8307, 12.42, 3.654, 0.0, 2.0976, 2.9709, 5.7658, 4.0213, 3.0413, 5.1141, 2.7495, 3.1968, 1.872, 4.4105, 0.0, 7.7787], [1.3966, 4.4588, 2.9996, 3.8433, 0.3168, 3.5613, 2.4499, 7.24, 1.5016, 18.72, 0.252, 0.1863, 3.1188, 2.3241, 3.3869, 5.4638, 4.0128, 0.1671, 2.7974, 5.781, 4.32, 1.6416, 4.0862, 0.0, 2.2059], [3.2182, 3.8908, 2.1099, 4.6191, 1.9272, 6.5584, 8.2174, 9.751, 5.9108, 23.58, 1.89, 3.0222, 5.8788, 2.2433, 5.2819], [0.0, 4.0164, 3.4202, 0.2112, 9.2381, 5.0274, 12.2202, 5.0161, 16.74, 0.189, 0.0, 2.3736, 2.4858, 3.145, 4.8518, 5.0477, 0.0, 3.0597, 8.037, 4.8384, 0.2592, 5.9996, 0.8446, 0.6579], [1.1537, 7.9236, 6.2787, 4.0549, 0.0, 8.8855, 5.0274, 10.6299, 1.3099, 14.58, 0.0, 0.0, 5.3268, 3.2134, 7.0963, 6.5565, 3.3158, 7.0373, 6.3803, 3.3696, 0.0, 3.4376], [1.2751, 6.248, 4.8298, 6.241, 3.036, 6.2058, 3.5728, 8.0352, 5.0161, 19.62, 2.772, 2.0286, 0.1104, 3.1123, 4.2739, 5.2015, 3.1891, 5.9883, 5.4637, 6.8256, 2.2464, 4.7672, 2.7214, 6.2694], [2.9146, 3.4364, 5.8212, 4.1607, 0.2376, 8.815, 6.8904, 11.718, 1.885, 16.2, 0.0, 0.0, 3.1464, 3.1325, 4.7578, 5.3763, 4.8998, 0.0, 9.4414, 8.1427, 3.1968, 0.2304, 8.6264, 0.0, 7.4304], [2.4288, 10.224, 6.3296, 5.6769, 3.5376, 10.2254, 8.983, 15.61, 3.4506, 23.94, 2.457, 0.3105, 5.6028, 2.7688, 6.5318, 6.6439, 4.2874, 8.8294, 9.1298, 9.8496, 2.8512, 5.7077, 1.173, 0.8901], [2.4288, 7.2988, 7.4481, 10.1901, 3.0888, 10.3664, 6.5586, 12.7224, 4.473, 29.88, 4.977, 0.4968, 5.1612, 2.7688, 6.4915, 5.8134, 2.7878, 0.0, 9.3539, 5.2875, 11.664, 2.3904, 6.8752, 4.3166, 8.9397], [3.7646, 8.3212, 3.8638, 7.2283, 4.5936, 8.9208, 8.6768, 16.0285, 7.1249, 25.92, 0.0, 0.3726, 6.1272, 2.122, 6.8544, 5.2015, 4.1395, 12.5011, 7.9665, 8.8128, 1.4112, 8.4318, 1.8299, 14.1642]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

