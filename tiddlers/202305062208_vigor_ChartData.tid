created: 20230506220820000
creator: Drevarr
modified: 20230705163529044
modifier: drevarr
tags: ChartData
title: 202305062208_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Johoshua", "Arriasa", "Needragee", "Blancooo Padreee", "Artakama Nahid", "Smol Daddy Tika", "Na Ting Wong", "Newtype Khan", "Zaidy Sagemist", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Druid", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[164.1869, 315.1921, 104.8944, 78.12, 70.1837, 58.9075, 265.8715, 0.0, 0.0, 107.246], [102.1709, 232.969, 814.7675, 5.2054, 37.7071, 332.4776, 0.0, 5.1012, 31.7564, 57.3032], [33.8169, 255.3232, 177.1692, 0.0, 187.076, 110.2618, 80.8013, 554.95, 0.0, 80.8672, 86.3636, 0.0, 0.0, 60.9035, 0.0], [0.0, 176.8691, 229.5929, 698.3671, 86.9211, 54.99, 421.1695, 218.4939], [423.6441, 483.4791, 323.9574, 141.048, 189.1318, 177.0586, 73.1808, 327.925, 0.0, 0.0, 77.414, 71.6008, 0.0, 81.0774], [159.5225, 385.6261, 171.4128, 124.128, 69.3255, 232.0013, 150.9581, 647.2735, 30.9493, 61.871, 173.7714, 31.0111, 30.3451, 103.3514, 55.1844], [272.6342, 322.2355, 265.5939, 101.952, 107.8142, 172.1664, 113.5814, 653.832, 51.0352, 114.9034, 187.4941, 0.0, 0.0, 69.6222, 29.3216], [0.0, 361.079, 366.3878, 1107.3775, 63.7657, 29.8663, 604.2472], [181.2119, 689.7501, 524.472, 54.432, 201.238, 314.9798, 348.1229, 1097.792, 62.436, 98.2238, 330.986, 5.1332, 0.0, 208.8665, 43.9668], [325.4585, 883.6952, 420.537, 84.096, 214.0295, 476.233, 262.7251, 1162.368, 38.729, 108.3812, 379.9105, 63.1336, 11.0635, 180.1012], [855.3344, 1333.9697, 764.322, 255.312, 619.5892, 703.9066, 509.4835, 2236.953, 84.9266, 161.3779, 759.2244, 129.5217, 66.5683, 278.425, 178.0171]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

