created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Scarlet Redwitch", "Unnamed Charr", "Kandy Land", "Melmyr", "Adredhel Winter", "Fqa Necr", "Zatoshin", "Melody Phoenixstorm", "Melmyr", "Aira Draugr", "Jamaass", "Lady Sherena", "Serene Azura", "Lord Erin The Wise", "Puppy Sky", "Leyviathan", "Leriel Nova", "Belvyn Brightblade", "Scuba Steves", "Sight Beyond Sights", "Mistwalker Cael", "Elfina Lightborn", "Unbreakable Nemesis", "Revenant Brandorf", "Sygaldry Verdandi", "Mistwalker Cael", "Sygaldry Verdandi", "Sofya De Nova", "Sly The Ele", "Daphne Agla\u00e9", "Val Haden", "Glorious Gluvs", "Legacy Of Mathus", "Greg The Knight", "Mort\u00e4rion", "Rina Of Theros", "Sub Train", "Newtype Khan", "Crusader Siolith", "Tootsie Pop Rocks", "Xanvias Einzbern", "Be\u00eb", "Koralia Danai", "Zaedy Zae", "Gabe Malhorn", "Hyde En Sikh", "Bella Sassy", "Drevarr Moonwillow"];
const professions = ["Harbinger", "Dragonhunter", "Soulbeast", "Firebrand", "Firebrand", "Scourge", "Herald", "Scrapper", "Willbender", "Herald", "Reaper", "Willbender", "Dragonhunter", "Weaver", "Reaper", "Herald", "Tempest", "Firebrand", "Spellbreaker", "Vindicator", "Herald", "Berserker", "Firebrand", "Herald", "Willbender", "Vindicator", "Firebrand", "Tempest", "Tempest", "Reaper", "Reaper", "Berserker", "Berserker", "Firebrand", "Scrapper", "Reaper", "Dragonhunter", "Spellbreaker", "Firebrand", "Scrapper", "Berserker", "Reaper", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 15, 16, 3, 0], [5, 0, 40, 2, 0], [2, 20, 0, 0, 0, 1, 0, 1, 1, 6, 0, 2, 6, 0, 3, 2, 0, 0, 0, 6, 2], [14, 8, 23, 10, 3], [8, 1, 50], [2, 13, 8, 6, 18, 11, 11, 2], [0, 16, 1, 0, 3, 4, 14, 7, 5, 18, 6], [0, 28, 3, 0, 5, 1, 9, 36, 9], [24, 3, 2, 1, 4, 3, 21, 6, 4, 13, 5, 2, 3, 3], [1, 0, 32, 5, 0, 3, 0, 0, 7, 38, 19], [2, 0, 1, 6, 27, 9, 2, 3, 6, 13, 2, 5, 8, 7, 7, 7], [6, 92, 8, 1, 1], [5, 15, 43, 19, 33], [3, 0, 1, 10, 16, 10, 2, 9, 8, 8, 17, 6, 1, 6, 8, 5, 15], [2, 0, 50, 5, 0, 4, 1, 0, 4, 51, 13], [3, 0, 32, 3, 1, 2, 0, 8, 30, 0, 4, 2, 6, 7, 3, 18, 6, 4, 4], [0, 53, 9, 0, 7, 0, 2, 10, 16, 12, 2, 7, 10, 1, 14, 5, 6], [4, 0, 59, 6, 0, 9, 2, 17, 49, 10], [28, 2, 0, 2, 0, 0, 8, 31, 13, 1, 2, 12, 2, 12, 3, 2, 18, 6, 3, 15], [0, 25, 0, 1, 5, 39, 12, 3, 19, 10, 24, 1, 2, 25, 3, 3], [6, 21, 19, 3, 15, 8, 8, 30, 23, 15, 26], [0, 0, 12, 25, 11, 11, 21, 7, 5, 15, 4, 7, 18, 19, 8, 12], [7, 0, 0, 4, 6, 36, 15, 0, 23, 1, 5, 35, 10, 14, 21], [2, 12, 28, 5, 20, 8, 23, 37, 22, 17, 7], [3, 0, 75, 8, 1, 6, 1, 16, 41, 31, 2], [3, 0, 65, 10, 0, 10, 0, 13, 65, 29], [23, 35, 4, 16, 10, 10, 35, 26, 19, 18], [6, 21, 7, 28, 17, 4, 20, 11, 11, 31, 25, 15, 15], [2, 0, 10, 0, 9, 46, 15, 6, 9, 14, 5, 19, 9, 7, 29, 13, 14, 8], [3, 0, 63, 7, 0, 4, 0, 11, 35, 17, 9, 12, 16, 3, 14, 1, 4, 2, 10, 9, 6], [5, 0, 0, 4, 34, 20, 2, 23, 28, 8, 16, 2, 9, 35, 14, 18, 9], [3, 0, 62, 6, 0, 7, 0, 0, 11, 49, 18, 4, 15, 14, 2, 14, 2, 8, 13, 15, 8, 9], [1, 0, 74, 7, 0, 9, 0, 1, 8, 12, 10, 3, 17, 12, 6, 15, 4, 4, 29, 9, 19, 22], [6, 6, 2, 7, 12, 52, 22, 14, 18, 3, 20, 6, 9, 40, 21, 19, 21], [3, 0, 63, 3, 0, 5, 0, 1, 42, 10, 2, 41, 18, 10, 15, 10, 12, 25, 10, 3, 11], [3, 0, 61, 8, 0, 4, 0, 0, 14, 63, 13, 9, 4, 9, 5, 16, 5, 9, 28, 8, 20, 19], [3, 0, 74, 5, 0, 17, 1, 1, 31, 29, 3, 15, 31, 50, 6, 22, 3, 21], [1, 45, 6, 0, 10, 0, 2, 16, 55, 17, 3, 21, 22, 6, 10, 8, 7, 29, 14, 22, 23], [5, 67, 7, 0, 6, 0, 2, 12, 34, 25, 8, 21, 24, 7, 17, 2, 13, 33, 14, 12, 19], [5, 71, 9, 0, 7, 0, 0, 8, 55, 16, 8, 32, 14, 5, 26, 5, 11, 40, 17, 20, 14], [4, 0, 70, 9, 0, 12, 4, 23, 57, 25, 18, 14, 21, 3, 16, 8, 15, 3, 20, 22, 27], [3, 0, 66, 8, 0, 11, 0, 2, 18, 60, 23, 16, 14, 27, 4, 15, 9, 18, 23, 28, 21, 18], [5, 0, 66, 6, 10, 1, 21, 42, 24, 14, 28, 28, 3, 13, 12, 16, 31, 27, 23, 15], [0, 84, 7, 0, 6, 0, 1, 16, 57, 25, 11, 20, 11, 7, 23, 5, 9, 42, 30, 12, 21], [3, 0, 62, 6, 0, 9, 1, 4, 13, 57, 28, 16, 26, 28, 5, 17, 7, 20, 35, 17, 30, 11], [4, 70, 9, 0, 13, 0, 20, 80, 31, 11, 23, 24, 8, 19, 13, 12, 33, 23, 25, 26], [4, 73, 6, 1, 12, 2, 23, 79, 30, 25, 19, 24, 6, 14, 8, 21, 32, 32, 24, 19], [6, 0, 84, 6, 0, 10, 0, 0, 27, 71, 34, 11, 26, 33, 6, 24, 16, 19, 34, 27, 21, 26]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

