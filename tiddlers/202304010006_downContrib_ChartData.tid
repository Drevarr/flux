created: 20230401000636000
creator: Drevarr
modified: 20230705163523603
modifier: drevarr
tags: ChartData
title: 202304010006_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Newtype Khan", "K\u00f4sair", "Fungus", "Il Kurai Il", "Nelliel T", "Zenek Tryst", "Dark Sidiuz", "Oo Dads Mad", "Smol Gluvs", "Rozaalyna", "Jeckyll Mbs", "Panther B Me", "Rina Of Theros", "Sister Elon\u00edth", "Nazhul Naxxremis", "Legacy Of Mathus", "Estryl", "Lord Erin The Wise", "Be\u00eb", "Smol Daddy Tika", "Xyntharos", "Sp\u00edcy Cheese", "Sassy Daddy Demon", "Ateriuz", "Mistwalker Caelon", "Xanvias Tlesel"];
const professions = ["Spellbreaker", "Spellbreaker", "Berserker", "Scourge", "Scourge", "Reaper", "Weaver", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Berserker", "Weaver", "Scourge", "Berserker", "Vindicator", "Berserker", "Vindicator", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14684.0, 14470.0, 765.0, 9647.0, 6257.0, 17171.0, 1917.0, 12027.0, 16897.0, 1216.0, 9264.0, 6457.0, 14621.0, 9670.0, 0.0, 23757.0, 0.0, 10309.0, 5304.0, 0.0, 853.0, 0.0, 11688.0, 0.0, 4430.0, 0.0, 979.0, 3036.0], [9911.0, 5179.0, 11839.0, 3887.0, 5778.0, 24756.0, 2146.0, 17529.0, 30996.0, 0.0, 17985.0, 456.0, 10161.0, 3821.0, 8546.0, 9032.0, 0.0, 15691.0, 10894.0, 1084.0, 421.0, 0.0, 1068.0, 0.0, 0.0, 0.0, 1376.0, 3469.0], [32166.0, 0.0, 154219.0, 0.0, 30001.0], [35140.0, 2876.0, 40140.0, 0.0, 49107.0, 14685.0, 0.0, 10843.0, 4587.0, 49642.0, 3946.0, 8039.0], [15471.0, 23464.0, 0.0, 30155.0, 35865.0, 30980.0, 6525.0, 21867.0, 54496.0, 976.0], [30898.0, 8048.0, 0.0, 32305.0, 3057.0, 11856.0, 0.0, 4861.0, 0.0, 1237.0, 2013.0, 2000.0, 0.0, 8679.0, 27716.0, 10581.0, 0.0, 17510.0, 0.0, 0.0, 10680.0, 37521.0, 3437.0, 673.0, 0.0, 19239.0], [9855.0, 12270.0, 0.0, 9845.0, 27625.0, 133099.0, 0.0, 3318.0, 0.0, 0.0, 62137.0], [16895.0, 20079.0, 0.0, 21989.0, 36158.0, 9729.0, 14686.0, 46831.0, 0.0, 30398.0, 1314.0, 10278.0, 18958.0, 3065.0, 0.0, 15726.0, 3823.0, 10432.0, 2644.0, 0.0, 5206.0, 41763.0, 0.0, 2542.0], [29218.0, 23493.0, 0.0, 19645.0, 6517.0, 54886.0, 11733.0, 18198.0, 39670.0, 0.0, 42620.0, 0.0, 6758.0, 34326.0, 0.0, 9344.0, 0.0, 10763.0, 0.0, 7954.0], [18094.0, 9619.0, 1568.0, 0.0, 26251.0, 29494.0, 18534.0, 14555.0, 43384.0, 338.0, 8604.0, 0.0, 8729.0, 28607.0, 19311.0, 1613.0, 19099.0, 3762.0, 23912.0, 0.0, 7736.0, 2092.0, 2793.0, 4876.0, 40455.0, 1437.0, 1606.0, 0.0, 230.0, 17569.0], [21318.0, 0.0, 11245.0, 29395.0, 17140.0, 54487.0, 9779.0, 14347.0, 4520.0, 9138.0, 7016.0, 9904.0, 25834.0, 20449.0, 35385.0, 0.0, 2789.0, 6537.0, 2017.0, 6552.0, 6917.0, 57671.0, 846.0, 0.0, 1340.0, 40816.0], [75765.0, 27994.0, 0.0, 41141.0, 19378.0, 17407.0, 10232.0, 31873.0, 58729.0, 0.0, 2059.0, 70714.0, 15990.0, 1593.0, 45470.0, 0.0, 41955.0, 0.0, 30997.0], [16194.0, 13935.0, 1405.0, 21188.0, 29417.0, 61376.0, 13026.0, 37763.0, 31649.0, 0.0, 43295.0, 0.0, 9847.0, 42322.0, 13748.0, 6214.0, 69601.0, 2185.0, 7586.0, 0.0, 27110.0, 0.0, 5226.0, 7649.0, 37603.0, 1974.0, 2692.0, 724.0, 7189.0, 9744.0], [31339.0, 26417.0, 1686.0, 20660.0, 30130.0, 64077.0, 7571.0, 19578.0, 22177.0, 3127.0, 52843.0, 2041.0, 28962.0, 44972.0, 19164.0, 32179.0, 0.0, 19516.0, 0.0, 17201.0, 6592.0, 4555.0, 13662.0, 45678.0, 1516.0, 6095.0, 4253.0, 17333.0, 22429.0], [63085.0, 15492.0, 22069.0, 46333.0, 65860.0, 0.0, 15206.0, 11477.0, 79978.0, 29890.0, 17691.0, 46209.0, 0.0, 3638.0, 9992.0, 29087.0, 9572.0, 4916.0, 19196.0, 51418.0, 21965.0, 2116.0, 987.0, 4365.0, 12334.0], [43714.0, 24803.0, 2485.0, 37731.0, 34467.0, 22765.0, 23157.0, 28950.0, 52913.0, 783.0, 6435.0, 3253.0, 19572.0, 51396.0, 29726.0, 1206.0, 74070.0, 654.0, 37808.0, 0.0, 19496.0, 1179.0, 4888.0, 5538.0, 63449.0, 3538.0, 0.0, 1344.0], [75786.0, 8552.0, 18987.0, 65960.0, 28424.0, 47085.0, 0.0, 48836.0, 178159.0, 0.0, 41872.0, 0.0, 63108.0, 12816.0, 0.0, 0.0, 75469.0, 0.0, 0.0, 0.0, 0.0, 1543.0], [41965.0, 24145.0, 34853.0, 21961.0, 60613.0, 70770.0, 34735.0, 14879.0, 68934.0, 0.0, 24969.0, 0.0, 79917.0, 16230.0, 0.0, 52360.0, 0.0, 3059.0, 7361.0, 15123.0, 4636.0, 5819.0, 1716.0, 27541.0, 0.0, 7632.0, 7412.0, 11085.0, 64999.0], [33221.0, 26981.0, 0.0, 35938.0, 45635.0, 46081.0, 11330.0, 32795.0, 96860.0, 4654.0, 86929.0, 0.0, 29593.0, 66858.0, 25763.0, 3638.0, 24272.0, 0.0, 51128.0, 0.0, 33379.0, 3557.0, 0.0, 3954.0, 102499.0, 0.0, 5885.0, 0.0, 7885.0], [46790.0, 21706.0, 5532.0, 52654.0, 38218.0, 71560.0, 20461.0, 33994.0, 55846.0, 4631.0, 65451.0, 2822.0, 15779.0, 81094.0, 28543.0, 49657.0, 158.0, 64976.0, 2953.0, 37878.0, 5310.0, 6373.0, 15176.0, 44916.0, 7554.0, 2246.0, 2950.0, 12498.0, 32467.0], [90848.0, 57511.0, 0.0, 45648.0, 43085.0, 14880.0, 38935.0, 37603.0, 69451.0, 0.0, 37502.0, 1662.0, 36421.0, 42495.0, 13389.0, 905.0, 76385.0, 0.0, 46870.0, 0.0, 14550.0, 2603.0, 4879.0, 8949.0, 116789.0, 1051.0, 4380.0, 0.0, 10878.0, 13420.0], [68301.0, 45580.0, 0.0, 39486.0, 68386.0, 69002.0, 28583.0, 28944.0, 109500.0, 0.0, 14409.0, 0.0, 40961.0, 48233.0, 22272.0, 1030.0, 52551.0, 6598.0, 42983.0, 2702.0, 29012.0, 8150.0, 4865.0, 11902.0, 66003.0, 0.0, 7347.0, 1439.0, 12253.0, 11876.0], [33563.0, 55813.0, 19254.0, 33552.0, 48119.0, 155659.0, 44191.0, 23125.0, 19035.0, 0.0, 183968.0, 23362.0, 88257.0, 32530.0, 92870.0, 0.0, 32998.0, 0.0, 52645.0, 22894.0, 1102.0, 12857.0, 140378.0, 0.0, 3708.0, 0.0, 43253.0], [53950.0, 38176.0, 5979.0, 48845.0, 68597.0, 128326.0, 9930.0, 39645.0, 138659.0, 0.0, 35691.0, 9969.0, 65847.0, 100836.0, 30228.0, 40.0, 103873.0, 0.0, 40917.0, 0.0, 38489.0, 0.0, 14382.0, 15662.0, 142165.0, 0.0, 26048.0, 0.0, 4046.0, 44475.0], [21142.0, 0.0, 42379.0, 38286.0, 148232.0, 36234.0, 76879.0, 145304.0, 486.0, 155133.0, 5168.0, 45694.0, 66695.0, 30695.0, 0.0, 116190.0, 3263.0, 70479.0, 1830.0, 31009.0, 15196.0, 5030.0, 14365.0, 183431.0, 0.0, 3496.0, 5363.0, 2403.0, 32682.0], [42678.0, 9987.0, 22238.0, 48078.0, 54631.0, 108949.0, 31711.0, 71599.0, 170547.0, 0.0, 137431.0, 0.0, 67772.0, 107432.0, 106500.0, 0.0, 123327.0, 9243.0, 46801.0, 4622.0, 10592.0, 0.0, 12571.0, 31414.0, 117628.0, 0.0, 6453.0, 95.0, 11169.0, 27884.0], [103993.0, 69765.0, 49008.0, 54129.0, 69461.0, 131662.0, 77190.0, 124945.0, 160190.0, 3596.0, 73907.0, 2035.0, 69431.0, 184116.0, 37369.0, 192483.0, 9471.0, 116310.0, 0.0, 91207.0, 326.0, 8825.0, 24802.0, 113901.0, 0.0, 29961.0, 0.0, 4551.0, 151129.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

