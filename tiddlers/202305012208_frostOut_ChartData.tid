created: 20230501220820000
creator: Drevarr
modified: 20230705163527868
modifier: drevarr
tags: ChartData
title: 202305012208_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Flanneryflame", "Miphest\u00f6", "Lord Erin The Wise", "Xkaet", "Needragee", "Tegan Parker", "Venomina The Siren", "Tyzzki", "Tika Sumiko", "Elonith Primal", "Mac Aaroni", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.2208, 0.0, 0.0, 19.701, 37.3527, 70.9909, 640.9252], [491.5991, 19.9944, 20.0332, 17.8398, 16.736, 68.3551, 198.0024, 4.176], [72.1156, 35.409, 15.7113, 36.3825, 68.0915, 278.4947, 32.364, 427.3157], [162.3814, 104.5682, 0.0, 66.6131, 114.218, 702.9085], [101.036, 568.3223, 33.5412, 185.4446, 20.0214, 29.7547, 259.5817], [197.1415, 29.1392, 931.9576, 60.3504, 127.6116, 32.5541, 232.2859], [97.529, 58.8184, 0.0, 0.0, 0.0, 58.1633, 736.0524, 50.8544, 506.4108, 0.0, 116.1067, 0.0, 0.0, 100.0167], [1168.1519, 32.0298, 0.0, 0.0, 8.82, 92.1651, 828.1666, 77.9752, 510.7067, 17.5824, 145.8166, 0.0, 0.0, 149.5837], [860.6279, 139.7664, 32.6656, 13.3848, 79.2036, 160.2566, 769.1963, 62.8488, 708.3181, 37.6794, 84.5895, 20.0214, 20.0433, 134.1704], [1640.4209, 212.2702, 126.8344, 44.4114, 42.1376, 179.8494, 1444.9871, 73.2656], [1570.569, 99.8747, 40.0664, 0.0, 51.3986, 262.2621, 1457.0394, 117.4616, 1125.0204, 78.0912, 193.6434, 0.0, 0.0, 206.1444], [1616.6976, 156.946, 121.7942, 39.3525, 96.579, 187.7568, 1484.5876, 89.784, 1196.2818, 106.9992, 186.1939, 28.0255, 78.8167, 309.0808]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

