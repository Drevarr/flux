created: 20230401000636000
creator: Drevarr
modified: 20230705163523554
modifier: drevarr
tags: ChartData
title: 202304010006_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Aronorf Xideliesi", "Air One Com", "Drevarr Moonwillow", "Gavann", "Ark Darkness", "Whose Guardian", "Zaylen Harker", "Johosh The Great", "Koralia Danai", "Ju\u00e7", "Etcherii", "Bella Lunabringer"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[63.9091, 0.8467, 2.058, 15.5109, 32.1406, 13.8121, 6.9149, 0.0, 37.9104, 43.6234, 5.8954, 4.5091, 21.4066, 9.1331, 0.0, 0.0, 40.6823, 0.0, 0.0, 37.6358, 22.6134, 0.0, 17.4474, 0.7763, 0.0, 0.0, 0.0, 0.0, 7.8408], [11.2282, 3.1223, 16.2994, 8.5324, 28.1721, 40.5367, 11.1132, 28.0704, 35.3232, 24.9955, 46.0522, 0.0, 17.0016, 46.2521, 0.54, 44.519, 12.7546, 15.3138, 0.0, 45.4766, 9.027, 0.0, 36.6444, 30.3413, 7.92, 21.0289, 0.0, 17.7628], [46.6099, 0.0, 18.2339, 19.7635, 56.6494, 37.4144, 13.2947, 24.9744, 28.9872, 0.0, 28.7933, 0.0, 13.5755, 76.5841, 7.452, 55.566, 21.2285, 34.727, 9.599, 25.1838, 0.0486, 54.7087, 0.0, 23.5066, 0.0, 0.0, 11.5192], [40.1472, 4.0219, 9.014, 20.6631, 38.3332, 38.4728, 17.3284, 5.5728, 44.7744, 0.0, 29.3914, 0.0, 12.8285, 67.2834, 8.748, 0.0, 90.2286, 19.8307, 9.4186, 53.9827, 21.3282, 13.608, 17.0586, 33.6825, 0.0, 22.2816, 6.5539, 0.0, 22.99], [27.7128, 67.8037, 6.5083, 23.6144, 1.283, 0.0, 0.0, 88.3062, 111.645, 48.7512, 2.809, 181.5747, 38.8768, 76.472], [64.5619, 16.6169, 100.842, 6.4879, 38.6821, 86.1538, 29.1413, 29.9074, 7.128, 0.0, 13.3286, 0.0, 152.0098, 64.6021, 6.1992, 62.3133, 33.9394, 0.0, 29.0822, 9.9144, 12.0825, 0.0], [40.0819, 13.5475, 95.3677, 24.6703, 16.2229, 49.8506, 26.4247, 5.5315, 27.72, 42.1502, 10.3382, 0.0, 3.9928, 84.6279, 37.9944, 9.7281, 101.0772, 26.1643, 19.8198, 0.0, 84.1579, 54.3762, 0.0, 55.7928, 27.9787, 18.9446], [108.5606, 30.429, 69.8074, 30.0133, 25.7735, 96.0498, 51.9851, 47.0179, 33.8448, 62.4888, 159.6019, 4.6108, 81.8138, 187.4382, 49.1184, 20.6793, 148.7714, 26.9942, 31.2374, 45.0014, 2.142, 0.0, 60.264, 104.1525, 7.8144, 52.1951, 13.5825, 94.7672], [82.1222, 74.0351, 47.0459, 37.4825, 126.6434, 133.9405, 52.6436, 92.3021, 109.0848, 15.9667, 9.3984, 0.0, 83.3336, 226.9871, 65.9448, 0.0, 129.9848, 97.7122, 151.613, 29.9851, 85.7412, 75.6702, 72.765, 0.0, 79.7491, 0.8016, 82.3926, 125.7432], [86.1043, 120.0226, 125.0441, 129.9212, 75.14, 118.0645, 29.5117, 26.8733, 66.5808, 68.904, 44.2579, 11.1619, 173.2875, 239.2204, 45.9648, 98.2327, 103.0411, 48.5839, 69.0466, 2.7234, 0.948, 122.5206, 78.975, 0.0, 24.3514, 154.1334, 29.477, 121.968], [84.8651, 113.8838, 78.6568, 34.056, 115.5792, 28.9872, 45.625, 38.3275, 27.692, 338.6792, 96.336, 172.5854, 185.0285, 43.9762, 55.6459, 29.8044, 36.216, 173.4534, 119.745, 0.0, 131.8522, 222.7837, 57.5546, 171.2876], [213.792, 195.9098, 136.1161, 93.6654, 54.6433, 104.4112, 62.8102, 60.7435, 127.6704, 33.1214, 102.1862, 118.9835, 136.2704, 442.076, 106.5096, 19.4319, 165.6396, 202.2821, 74.5021, 31.0781, 32.0285], [90.2822, 227.0268, 64.4977, 54.8199, 78.8905, 82.1848, 48.8981, 127.6378, 195.2016, 244.1578, 101.5882, 43.9085, 133.4883, 223.3841, 94.1112, 43.7886, 113.7118, 110.6414, 114.6838, 176.8219, 34.4556, 55.092, 91.9026, 143.775, 31.968, 47.2454, 234.6656, 20.4574, 53.1916]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

