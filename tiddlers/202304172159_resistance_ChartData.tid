created: 20230417215912000
creator: Drevarr
modified: 20230705163525831
modifier: drevarr
tags: ChartData
title: 202304172159_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Primal Clone", "Smol Daddy Tika", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer", "Miphest\u00f6", "Mettrik Milliohm", "Jeckyll Mbs", "Newtype Khan", "Smol Daddy Tika", "Ark Darkness", "Gavann", "Grasszanine", "Sygaldry Verdandi", "Xanvias Einzbern", "Koralia Danai", "Bella Sassy", "Sub Train", "Arcanophage Farra", "Johosh The Great", "Solus Sanctus"];
const professions = ["Berserker", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 27.9724, 58.994, 0.0, 28.7493, 0.0, 71.5008, 17.5346, 7.9792, 14.0267, 0.0, 0.0, 11.9261, 0.0, 0.0, 0.0, 3.9847, 31.9985, 0.0, 0.0, 0.0, 7.2883, 0.0, 27.1973, 0.0, 17.0755, 0.0, 0.0, 11.9055, 0.0], [0.0, 6.7109, 6.708, 108.4654, 0.0, 25.1742, 6.7022, 19.9979, 11.9535, 26.7707, 6.7267, 5.1322, 27.5373, 18.6163, 0.0, 19.7803, 25.9896, 21.7584, 23.9174, 0.0, 0.0, 21.5034, 6.2899, 7.7031, 30.0696, 8.4937, 12.3539, 6.7088, 16.6795, 21.0019, 15.6555], [28.5821, 4.3529, 0.0, 45.8156, 195.3307, 0.0, 131.3827, 0.0, 8.4907, 14.994, 17.1147, 0.0, 28.2902, 21.4376, 44.6016], [0.0, 0.0, 6.0707, 96.6202, 0.0, 29.792, 10.9566, 15.7525, 20.5751, 36.3688, 3.3251, 7.1042, 28.9586, 24.5309, 0.0, 24.1712, 27.7095, 21.1293, 31.7378, 6.9541, 6.9619, 20.7759, 10.5331, 11.664, 32.9419, 11.5101, 17.1725, 6.9837, 14.9299, 18.5494, 16.66], [0.0, 7.0382, 5.2993, 117.7558, 6.7549, 26.7383, 6.7022, 20.9475, 14.0361, 24.0531, 8.7906, 5.3698, 27.5373, 19.3435, 0.0, 25.4927, 19.3011, 23.2265, 32.2591, 0.0, 6.9442, 21.0992, 6.6893, 4.3011, 36.3528, 13.0977, 20.8593, 7.0387, 17.8459, 22.9639, 18.0565], [3.821, 14.1583, 7.513, 123.0978, 41.4109, 7.4016, 27.4273, 14.6608, 29.4304, 7.5676, 6.2806, 28.3072, 25.452, 29.6705, 30.0027, 28.5219, 43.6639, 0.0, 1.8826, 23.4436, 9.5098, 7.5087, 30.6082, 12.1848, 27.1009, 7.5703, 15.3187, 25.2825, 13.2055], [84.5426, 0.0, 46.55, 10.7818, 28.4886, 32.2787, 37.583, 18.422, 43.6451, 44.6501, 0.0, 21.9971, 35.6401, 36.1243, 44.837, 0.0, 8.6491, 28.4961, 5.2166, 15.7707, 29.6208, 10.121, 17.6576, 23.017, 27.4229, 23.079], [13.9946, 7.0434, 110.788, 0.0, 47.7417, 0.0, 55.86, 14.0777, 68.5745, 8.7906, 0.0, 61.4704, 40.6747, 48.0014, 19.3011, 34.3417, 71.4263, 0.0, 0.0, 20.5738, 26.1581, 6.9984, 59.1518], [0.0, 0.0, 0.0, 23.7799, 158.4013, 0.0, 78.5764, 33.9772, 45.5818, 51.8959, 41.746, 46.1315, 0.0, 77.3256, 0.0, 42.5447, 44.0485, 52.1154, 37.0817, 0.0, 0.0, 31.9722, 3.8438, 0.0, 25.043, 33.2602, 9.9931, 0.0, 11.5085, 18.7278, 23.275], [0.0, 21.9331, 22.9917, 222.7373, 0.0, 80.5874, 0.0, 60.1054, 41.6084, 52.6162, 32.0284, 0.0, 62.2994, 48.577, 14.8018, 36.5765, 60.292, 34.7087, 61.0643, 0.0, 23.6386, 59.9833, 25.8086, 13.1947, 39.9281, 35.0566, 0.0, 50.855, 31.1684, 23.1035], [0.0, 86.9652, 179.8251, 108.7398, 193.8156, 0.0, 0.0, 66.7738, 15.0509, 17.2287, 97.7486, 184.3204, 146.1768, 72.6371, 30.38], [76.1813, 0.0, 92.8766, 10.7818, 89.2084, 20.2003, 82.3357, 24.0404, 102.4506, 90.6091, 0.0, 75.8814, 61.0564, 84.2026, 63.9969, 0.0, 0.0, 37.4693, 54.0634, 0.0, 91.1962, 29.8866, 27.3273, 18.8982, 53.1878, 28.5822, 28.3955], [331.6673, 0.0, 82.8218, 16.0853, 73.009, 13.2447, 27.0598, 15.5173, 5.2668, 45.5402, 30.1546, 0.0, 83.3417, 66.5028, 78.3829, 75.7275, 0.0, 6.9264, 6.3459, 29.9021, 6.5853, 63.2808, 6.8664, 57.0478, 26.4869, 44.2454, 36.5638, 61.1765], [21.9446, 28.3985, 0.0, 170.9434, 29.4941, 161.4356, 150.1517, 0.0, 103.6134, 0.0, 0.0, 139.7, 70.8778, 0.0, 35.255, 65.7384, 76.8624, 55.59, 0.0, 0.0, 60.0237, 26.1581, 0.0, 46.765, 80.3326, 16.4934, 0.0, 14.8522, 15.8294, 23.0545], [9.8246, 11.0893, 28.6935, 245.2666, 0.0, 76.491, 10.6652, 33.7953, 12.7865, 49.0892, 39.3666, 7.817, 111.0967, 39.6082, 11.4365, 83.0859, 54.0813, 38.8506, 74.6848, 7.2079, 7.7434, 33.104, 64.3968, 0.0, 70.9104, 63.9406, 42.9799, 16.277, 59.1754, 29.0281, 63.7245], [25.4242, 0.0, 0.0, 26.7985, 309.6026, 0.0, 89.0036, 35.0263, 56.251, 53.4369, 95.6921, 48.0808, 0.0, 79.1179, 27.6821, 0.0, 72.4284, 98.3209, 89.3407, 45.1628, 0.0, 0.0, 40.6221, 10.3834, 0.0, 40.4818, 39.5312, 52.7789, 37.5215, 40.2019, 33.3533, 40.5965], [6.0918, 8.0203, 29.3978, 258.7376, 0.0, 121.8493, 7.9261, 104.9609, 91.5883, 43.0181, 32.6017, 7.722, 67.3924, 78.78, 0.0, 77.6719, 42.042, 94.8459, 102.0562, 0.0, 0.0, 69.6032, 44.2541, 0.0, 133.3834, 40.9998, 19.9861, 18.4583, 72.8222, 63.184, 47.236], [0.0, 4.0784, 20.0099, 94.2474, 214.8405, 117.9018, 0.0, 92.2249, 44.9403, 193.5235, 46.3609, 9.4882, 122.9407, 111.504, 159.7772, 114.5644, 66.2191, 100.2315, 5.7866, 7.9032, 70.3308, 14.2771, 0.0, 60.8573, 44.4925, 93.8183, 53.4869, 94.0507, 76.3381, 41.8705], [7.1201, 63.1055, 246.6601, 0.0, 124.2326, 35.5508, 116.9708, 5.2062, 173.8647, 68.2609, 162.9142, 133.0776, 7.3234, 114.6321, 66.6939, 113.2488, 95.0179, 0.0, 19.5715, 50.7675, 50.2694, 7.6302, 95.9534, 34.9669, 51.3883, 7.4786, 80.7149, 92.5688, 72.471], [0.0, 38.7722, 255.7183, 0.0, 29.5686, 0.0, 130.0979, 55.0613, 269.3256, 75.5227, 0.0, 142.3057, 185.1936, 0.0, 116.5504, 74.2424, 171.3412, 143.5043, 0.0, 0.0, 52.9098, 4.0186, 0.0, 125.8435, 114.7438, 116.5534, 0.0, 46.5782, 27.2891, 0.0], [18.0996, 0.0, 32.886, 340.7254, 0.0, 115.9654, 7.9261, 72.0594, 86.0489, 195.316, 33.7483, 11.1038, 139.8184, 128.0842, 80.0591, 78.1599, 69.8892, 124.0837, 8.9845, 9.0043, 64.5507, 57.1584, 15.9894, 131.4984, 61.4401, 49.8683, 29.6946, 65.8238, 99.3911, 52.4055], [27.0031, 9.112, 394.842, 14.6885, 135.0322, 23.4286, 112.2786, 51.5211, 140.387, 19.3011, 0.0, 160.427, 137.9741, 7.9709, 125.4601, 91.9191, 99.3548, 109.8114, 32.7402, 41.807, 66.0867, 56.0352, 19.6101, 120.5477, 47.5486, 39.6812, 7.4603, 56.7259, 53.508, 69.3595]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

