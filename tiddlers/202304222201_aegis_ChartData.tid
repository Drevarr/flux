created: 20230422220129000
creator: Drevarr
modified: 20230705163526281
modifier: drevarr
tags: ChartData
title: 202304222201_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Zaylen Harker", "Drevarr Moonwillow", "Sygaldry Verdandi", "Jupi Jupi Jupi", "Yummy Kiwi", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 31.4541, 0.0, 37.9337, 43.1552, 1.936, 28.7894, 135.7214, 0.0, 41.3438, 51.9472, 57.0683, 56.682, 123.9764], [177.7572, 50.49, 21.2538, 37.4299, 165.5396, 74.6213, 235.8889, 14.6329, 56.3081, 7.1744, 59.4776, 59.696, 24.4739, 42.0088], [10.6434, 105.1579, 0.0, 5.5272, 332.0008, 60.2096, 0.0, 139.669, 57.4866, 36.4815, 28.7875, 48.3545, 139.8382, 18.6327, 84.5761, 6.0573, 30.7768, 2.457, 14.1109, 29.9667, 25.2204, 23.6973], [253.4986, 16.2855, 10.2648, 621.3368, 281.204, 0.0, 171.6957, 116.6409, 169.5375, 32.4012, 0.0, 223.0225, 39.7075, 156.4465, 26.7816, 57.2935, 2.6645, 81.2941, 20.8283, 46.4417, 42.3679], [594.5621, 56.3211, 184.3716, 1038.6672, 196.3104, 34.3728, 315.0645], [21.87, 379.4482, 0.0, 53.3309, 782.6784, 177.7248, 187.0732, 35.2179, 24.1065, 151.165, 115.3324, 179.0813, 66.5712, 185.5796, 14.735, 40.7459, 16.5875, 87.4104, 61.8323, 69.476, 101.9702], [38.7828, 387.445, 44.7183, 114.1959, 1129.8816, 193.9872, 0.0, 216.5563, 163.1893, 211.761, 72.3363, 2.053, 347.3845, 32.6525, 468.056, 169.6396, 58.4237, 1.8782, 105.0851, 76.0145, 49.2144, 92.2758], [30.4884, 426.8958, 43.5303, 94.752, 963.1456, 460.3808, 15.8351, 381.8929, 206.1572, 174.5865, 180.9938, 158.6645, 410.1182, 85.234, 403.886, 86.3681, 51.0338, 6.1261, 156.3274, 147.994, 113.7316, 118.7737]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

