created: 20230515002743000
creator: Drevarr
modified: 20230705163529989
modifier: drevarr
tags: ChartData
title: 202305150027_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Cuscuszera", "Roxy Willowmoon", "Artherwise", "Miphest\u00f6", "Binkety Bonk", "John John", "Tootsie Pop Rocks", "Slautorn", "Mistwalker Caelon", "Drogo Discourteous", "Lord Erin The Wise", "Aronorf Xideliesi", "Ikong Winnie Ilocos", "Tribal S", "Venomina The Fierce", "Blancooo Padreee"];
const professions = ["Tempest", "Firebrand", "Scrapper", "Druid", "Tempest", "Scrapper", "Holosmith", "Scrapper", "Weaver", "Vindicator", "Firebrand", "Weaver", "Firebrand", "Scrapper", "Druid", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.4612, 59.6279, 58.485, 0.0, 80.291, 64.7049, 32.319, 0.0, 19.3908, 26.1885, 56.9522, 44.9711, 32.6357, 32.5836, 25.52], [27.7212, 102.0357, 243.2605, 56.7151, 163.8067, 16.9317, 0.0], [98.7293, 116.4992, 352.2357, 81.7865, 11.0534, 121.8945, 15.9315], [483.7856, 266.2089, 122.7873], [56.1038, 307.4245, 141.6564, 105.1947, 44.5976, 8.8901, 44.574, 11.9672, 7.9993, 60.7253, 77.653, 107.6934, 0.0], [111.5088, 141.219, 293.1706, 421.2578, 50.3765, 221.49, 80.014], [124.1978, 128.5409, 315.289, 92.4008, 90.9606, 133.9923, 26.3625, 68.7199, 158.9603, 59.675, 12.6773, 115.0271, 46.112], [66.2407, 125.059, 399.1231, 119.9788, 132.5645, 185.6829, 35.7105, 0.0, 51.5151, 37.6719, 60.3434, 31.7486, 108.7762, 37.334], [57.6482, 205.7234, 370.4605, 241.3792, 202.9534, 180.0923, 18.3991, 82.1496, 58.4434], [115.0438, 418.991, 483.7856, 217.6867, 178.774, 186.691, 46.512, 20.9286, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [625.73, 748.2109, 125.8546, 0.0, 79.2773, 131.043], [11.2039, 289.7248, 281.8217, 245.3595, 107.9246, 176.3346, 56.772, 3.9847, 34.3824, 47.2387, 120.4679, 208.1464, 82.273, 156.6673], [167.9184, 365.0213, 493.395, 151.1581, 101.6302, 83.3099, 34.2285, 0.3811, 8.9076, 120.1025, 77.4632, 212.8249, 94.8763, 89.2359, 101.728], [538.8271, 714.9092, 126.7075, 180.5395, 332.048, 69.1695, 15.3846, 15.2256, 121.5611, 245.7902, 233.0667, 146.0659, 195.3542, 57.904], [563.2006, 777.3706, 447.4092, 391.7063, 253.6872, 58.7955, 27.4659, 139.464, 131.9038, 290.2307, 302.958, 111.6562, 168.6277, 59.158], [354.7346, 735.7007, 660.0691, 364.8645, 197.4267, 286.223, 108.8415, 26.2878, 0.0, 153.7165, 233.3468, 449.5198, 207.6413, 173.156, 143.968], [264.4574, 911.5376, 1082.3874, 824.2147, 357.7784, 517.3642, 174.7335, 27.5467, 165.2528, 447.2765, 251.7808, 184.5782, 218.5368, 47.784]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

