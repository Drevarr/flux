created: 20230625214256000
creator: Drevarr
modified: 20230705163535987
modifier: drevarr
tags: ChartData
title: 202306252142_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Latedoctor", "Xanvias Tsolice", "Govinda Ektar", "Melpomene Vandrish", "Blaze All Might", "Charr Surethang", "Wall Knot", "Hayuf", "No Reserv\u00e9", "Hayuf", "Drev Of The Dead", "Ateriuz", "Fluffy No Care Bear", "Vesnan", "Elonith Requiem", "Wall Knot", "Drevarr Moonwillow", "Elonith Requiem", "Koralia Danai", "Gamora Titus", "Jerryatric Reflexes", "Yngvar The Burdened", "Drumina", "Scythe User", "Tacitus Kilgore I", "Gestern Yesteryear", "Aronorf Xideliesi", "Booboo Hurts", "Ani Deasun"];
const professions = ["Reaper", "Weaver", "Vindicator", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Dragonhunter", "Reaper", "Berserker", "Berserker", "Scourge", "Scourge", "Dragonhunter", "Scrapper", "Reaper", "Firebrand", "Dragonhunter", "Berserker", "Scourge", "Druid", "Reaper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 7, 1, 2, 1, 1, 4, 4], [1, 10, 5, 4, 7], [11, 4, 8, 0, 0, 5, 1, 0], [1, 0, 1, 2, 3, 0, 1, 13, 4, 1, 4], [6, 0, 1, 0, 0, 1, 3, 1, 10, 4, 5], [0, 3, 1, 0, 6, 4, 0, 7, 4, 0, 3, 4], [2, 14, 9, 3, 6], [1, 13, 11, 2, 2, 5, 2], [7, 2, 1, 3, 0, 3, 4, 3, 10, 4], [0, 4, 0, 3, 0, 1, 5, 0, 11, 6, 7], [8, 15, 1, 2, 11], [1, 13, 11, 7, 8], [4, 2, 1, 2, 3, 3, 11, 6, 7, 3], [2, 0, 4, 1, 1, 9, 6, 7, 5, 1, 2, 0, 4], [7, 6, 5, 0, 6, 8, 1, 12, 3], [6, 4, 2, 0, 4, 7, 4, 14, 1, 2, 3, 0, 1, 2], [9, 3, 0, 3, 1, 7, 2, 2, 12, 5, 8, 4], [7, 4, 12, 18, 4, 3, 8], [9, 3, 1, 0, 6, 6, 2, 10, 8, 6, 10], [10, 4, 2, 4, 0, 4, 7, 3, 13, 9, 7, 5], [7, 8, 6, 10, 8, 11, 6, 2, 6, 4, 4, 2], [2, 9, 8, 3, 8, 11, 17, 2, 3, 12, 2, 0, 2], [6, 4, 2, 3, 4, 7, 1, 9, 5, 5, 6, 4, 10, 3, 2, 6, 2, 1, 4], [11, 10, 3, 4, 3, 8, 7, 4, 15, 6, 14], [6, 4, 0, 2, 1, 4, 7, 3, 9, 5, 2, 6, 13, 13, 5, 2, 5], [5, 3, 4, 0, 7, 4, 0, 11, 7, 5, 6, 11, 15, 0, 2, 5, 3, 3, 1], [5, 14, 6, 11, 9, 4, 17, 1, 3, 14, 3, 4, 5], [1, 4, 3, 9, 8, 4, 14, 8, 3, 8, 13, 13, 3, 2, 4, 4, 1, 5], [13, 6, 2, 11, 9, 5, 21, 10, 13, 13, 17, 43, 7, 3, 19]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

