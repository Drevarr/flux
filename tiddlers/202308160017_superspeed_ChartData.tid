created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Kayrin Willowroot", "Healdone", "Sakis Unleashed", "Pafema", "Charr Surethang", "P\u00edogre", "Fable Goes Brrrr", "Drevarr Moonwillow"];
const professions = ["Druid", "Scrapper", "Druid", "Druid", "Berserker", "Scrapper", "Holosmith", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.092, 0.872, 0, 0, 1.794, 1.373, 1.638, 3.117, 0.403, 0, 0, 2.547, 1.043, 0.37, 1.685, 0, 1.339, 0.917, 0.406, 1.922, 0.422], [2.85, 0.237, 4.933, 3.125, 1.705, 0.547, 0.73, 3.188, 0.707, 0.728, 0, 1.68, 1.466, 0, 1.601, 0.015, 0.516, 0, 0.051, 1.378], [0, 2.559, 1.125, 1.624, 0, 1.188, 0.881, 1.52, 0.942, 1.722, 1.235, 1.594, 1.082, 0, 0, 1.617, 0, 2.258, 0], [0, 7.463, 2.255, 3.301, 2.744, 3.128, 3.123, 3.225, 2.641, 6.283, 5.101, 3.263, 4.437, 1.159, 3.942, 1.39, 3.784, 3.982, 3.15], [0, 2.042, 1.823, 0, 0, 6.027, 0.726, 0, 6.219, 0, 0, 0, 0, 0, 0, 2.397, 5.391, 0.88, 4.132, 1.449, 0.923, 2.941, 0, 0, 2.685, 0, 0, 0, 0, 0.998, 2.802, 0, 0, 0, 0, 4.812, 0, 0, 0, 1.22, 0, 1.784, 1.583, 1.452, 4.516, 0, 3.448, 0.832, 0, 0.403], [4.132, 0.245, 0.39, 2.392, 1.321, 1.674, 3.826, 0.517, 0.74, 3.707, 3.648, 1.396, 0, 0, 0, 0.953, 2.705, 1.727, 1.285, 1.917, 0, 1.726, 0.384, 2.297, 1.312, 2.467, 0.944, 2.684, 0, 1.177, 2.239, 1.078, 0, 0, 1.213, 0, 1.21, 0, 2.239, 0.77, 0.255, 6.303, 6.171, 0.874, 2.3, 1.515, 0.265, 1.498, 0.791, 0.945, 1.976, 0, 0, 2.082, 1.944, 0, 2.549, 2.315, 0.874, 0.7, 4.193, 0, 0.436, 1.49, 0, 0, 2.339, 1.422, 0, 1.071, 1.001, 0.217, 1.084, 0, 0.638, 0, 1.329], [3.631, 3.643, 0, 6.477, 11.862, 3.947, 9.611, 6.794, 17.526, 8.133, 10.616, 21.341, 1.713, 1.317, 1.673, 0, 2.052, 11.962, 6.657, 6.152, 4.167, 5.569, 0, 0.776, 0, 4.646, 6.023, 11.087, 15.705, 3.635, 3.768, 7.918, 1.867, 5.83, 5.472, 3.869, 0, 6.862, 2.979, 0], [4.458, 2.898, 0, 4.611, 7.308, 6.421, 1.485, 1.684, 1.867, 1.38, 4.883, 2.574, 1.306, 2.735, 2.218, 2.969, 1.249, 4.99, 2.328, 5.309, 5.446, 5.458, 6.242, 2.06, 4.05, 3.622, 4.085, 3.389, 2.142, 5.653, 8.319, 3.439, 0, 5.088, 1.861, 2.084, 4.082, 5.568, 1.376, 4.34, 3.66, 5.862, 3.228, 4.758, 0, 2.141, 5.725, 4.032, 2.419, 5.735, 6.154, 4.73, 6.659, 6.741, 7.173, 3.918, 5.285, 4.405, 2.358, 4.007, 3.949, 2.633, 0.618, 4.65, 0, 4.508, 2.713, 0, 3.422, 4.191, 0.874, 6.154, 5.243, 4.858, 2.237, 3.509, 2.373, 1.251, 4.404, 4.153, 3.063, 4.139, 6.878, 4.896, 1.285, 2.477, 3.861]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

