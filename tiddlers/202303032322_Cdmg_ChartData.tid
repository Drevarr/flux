created: 20230303232222000
creator: Drevarr
modified: 20230705163521007
modifier: drevarr
tags: ChartData
title: 202303032322_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Hud Da Bu Dah", "Viral Marketing", "Seren\u00e1 Joy", "Tribal S", "Blanco Padre Guard", "Bella Sassy", "Koralia Danai", "Sofya De Nova", "Venomina The Siren", "Fruji", "Drevarr Moonwillow", "Eibh\u00ebar", "Theevildead", "Lil Cutt Throat", "Sumatra Satyricon", "High Sorcer Baradun", "Kosa\u00edr", "Blackchars", "Aronorf Xideliesi", "Ravioli Fetabringer", "Lord Erin The Wise", "Nelliel T", "Lucky Leipreach\u00e1n", "Cerys Fireblade", "Sp\u00edcy Cheese", "Seren Nightroad", "Rozaalyna", "Xanvias Tseli", "Morton Saltbringer", "Demon Sekhmet", "Panther B Me", "Legacy Of Mathus", "Smol Gluvs", "Heks Appeal"];
const professions = ["Chronomancer", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Firebrand", "Weaver", "Tempest", "Scrapper", "Scrapper", "Chronomancer", "Reaper", "Catalyst", "Soulbeast", "Tempest", "Scrapper", "Renegade", "Firebrand", "Firebrand", "Weaver", "Scourge", "Scrapper", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker", "Chronomancer", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.8654, 5.8515, 0.0, 19.9709, 3.1369, 0.0, 19.2966, 16.3256, 5.0444, 18.2919], [0.0, 0.0, 6.8421, 6.5659, 10.0296, 5.8235, 0.016, 31.4914, 2.6639, 13.5588, 4.4423, 6.047, 0.0, 5.1166, 0.0, 3.2308, 3.4464, 5.3489, 0.0, 2.0389, 0.3892], [2.0, 5.3725, 1.9216, 0.0, 7.2105, 1.4545, 2.9449, 2.9474, 8.1008, 7.2323, 7.0735, 3.576, 14.0205, 13.5378, 30.5588, 46.8462, 10.1262, 17.9302, 12.0801, 5.7798, 8.8718, 2.8036, 6.8955, 0.157, 4.9944, 3.373], [0.0, 6.7059, 13.1176, 4.4062, 20.3684, 0.5091, 0.8661, 9.0175, 1.2016, 6.9089, 0.0, 1.536, 19.0086, 4.6723, 7.2647, 19.4808, 7.2277, 4.7442, 4.8087, 2.4167, 0.1538, 9.3214, 13.8376, 7.5988, 6.0333, 6.2811], [0.0, 0.4804, 0.0, 0.0, 4.1316, 5.0545, 0.0, 4.7368, 6.1318, 50.8747, 3.0147, 0.0, 6.9401, 5.7647, 13.9412, 16.2885, 0.7871, 6.7674, 7.275, 0.631, 13.4615, 0.0, 6.3856, 0.0, 4.4278, 7.0216], [0.0, 1.6471, 4.2745, 0.0, 0.0, 0.0, 0.8346, 8.8246, 26.7054, 6.9704, 21.3235, 2.72, 24.0651, 0.7395, 36.9412, 12.3846, 9.8787, 7.949, 1.9881, 109.9231, 0.0, 5.2458, 1.0116, 0.0, 1.4865], [0.0, 31.7255, 0.0, 0.0, 0.0, 0.1091, 0.3543, 0.0, 0.0, 35.2506, 0.5588, 0.0, 25.7568, 3.1849, 0.0, 0.0, 6.8886, 0.0, 0.0, 0.0, 6.3444, 0.0], [0.0, 24.7712, 2.0, 178.6053, 94.8545, 17.6299, 162.193, 33.9457, 22.2597], [0.0, 6.2614, 0.0, 0.0, 36.7105, 0.0, 0.7244, 10.614, 30.9612, 13.082, 0.0294, 29.944, 3.7517, 21.8908, 27.3529, 15.4038, 17.0124, 0.0, 10.8816, 1.744, 0.0, 9.6483, 0.407, 2.9167, 5.7297], [5.2059, 14.732, 1.8627, 2.7895, 0.0, 0.7717, 13.2281, 12.1085, 7.5057, 11.7647, 22.52, 0.9846, 36.2185, 1.0, 0.0, 22.203, 17.6279, 5.6685, 5.1607, 18.5897, 0.0, 20.1582, 3.814, 5.2833, 2.0432], [0.0, 10.683, 7.7647, 0.0938, 84.8684, 5.5091, 2.4567, 27.0351, 3.5349, 6.9909, 18.0735, 4.784, 15.0753, 20.4454, 5.7647, 12.8269, 11.2203, 43.8837, 12.6393, 1.0238, 18.1795, 0.6607, 13.5551, 0.0, 1.6167, 4.3243], [11.5294, 8.6928, 13.0, 6.375, 13.1579, 2.7091, 2.685, 24.614, 6.9612, 4.082, 18.4706, 5.224, 13.4144, 21.9244, 57.1176, 25.7115, 10.2995, 12.9767, 11.4645, 4.1607, 34.2051, 2.8929, 13.9788, 0.4419, 6.0167, 14.3568], [27.1455, 9.7638, 52.8772, 18.6202, 26.6948, 38.6471, 15.656, 4.9503, 0.0, 5.7692, 4.5, 33.2232, 5.5407, 7.9944, 28.6973], [61.1597, 14.1471, 94.4926, 12.2791, 1.031, 10.369, 0.0, 16.3929, 20.5494], [0.0, 10.6699, 48.3684, 13.3818, 0.0236, 14.9271, 6.6765, 8.344, 42.0856, 32.3361, 20.9706, 16.6154, 7.4975, 59.0465, 45.4954, 3.7321, 0.0, 0.0, 8.0636], [0.8824, 11.4902, 0.0, 0.0, 2.6579, 6.3818, 0.0, 68.386, 40.1473, 2.1253, 0.0, 1.592, 27.7226, 20.6891, 0.0, 35.9808, 0.5965, 24.082, 6.7857, 9.1795, 0.0, 54.0989], [0.2059, 17.6765, 2.2727, 0.6491, 0.5814, 39.9795, 30.5, 8.84, 17.2414, 17.4202, 52.1471, 75.6923, 12.3391, 17.459, 5.5714, 106.7436, 0.0, 31.8701, 0.0, 15.5389, 14.4649], [0.8179, 0.7857, 3.4615, 55.4107, 114.1328, 0.0, 52.7944, 55.2432], [0.0, 17.8039, 0.8627, 0.0, 34.4737, 24.5455, 1.9055, 0.0, 14.2481, 29.7244, 37.4412, 26.424, 32.1473, 55.5462, 6.7353, 6.7885, 22.2698, 2.1163, 32.3206, 5.1905, 0.0, 0.0, 33.9477, 1.0233, 2.3722, 13.5351], [6.2059, 32.1111, 0.0, 0.0, 89.3947, 9.2182, 56.1969, 59.9298, 28.6822, 37.5262, 21.4559, 1.232, 55.6901, 3.9412, 1.2647, 115.1923, 20.4554, 47.0698, 52.2004, 31.4286, 116.3077, 3.1786, 26.4548, 0.0, 11.8167, 86.4486], [33.2124, 5.5686, 0.0, 109.4211, 21.4545, 14.8661, 135.6842, 1.0155, 52.1526, 19.3382, 74.496, 42.7414, 31.1176, 37.0882, 15.9808, 54.8812, 0.0, 16.6084, 27.6667, 89.8462, 0.0, 68.5777, 21.7209], [10.5294, 52.3562, 1.8431, 1.9062, 351.9211, 27.6909, 5.0787, 213.9298, 21.4806, 21.7631, 3.944, 35.6455, 95.084, 10.9118, 9.4038, 2.4109, 0.0, 76.4827, 19.0119, 0.0, 40.6667, 11.1512, 70.1111, 41.5027], [13.8529, 23.7745, 17.7255, 20.75, 0.0, 183.9123, 1.7597, 22.0774, 47.4265, 9.544, 74.9212, 39.6975, 65.2941, 135.1346, 68.1287, 2.907, 42.326, 16.5298, 95.7692, 0.0, 47.9124, 54.7791, 8.0389, 2.7027], [7.7647, 28.6013, 13.7843, 9.0, 42.7632, 22.9091, 0.0, 143.614, 11.5349, 64.9385, 22.8382, 1.632, 39.851, 167.0588, 64.7059, 0.0, 58.4059, 14.6744, 63.0692, 6.75, 0.0, 0.0, 49.8559, 0.0, 23.2, 0.0], [2.9706, 33.2712, 4.4211, 2.5818, 0.5669, 160.7193, 46.0638, 10.4706, 21.424, 71.6027, 28.7815, 0.0, 11.5577, 50.0668, 69.8907, 10.5298, 85.0256, 1.0179, 69.6596, 0.0, 0.8556], [4.4412, 15.9314, 0.8627, 0.0, 131.6842, 25.1455, 5.6457, 124.2632, 15.4961, 7.2255, 35.5441, 11.192, 71.6815, 112.605, 19.1176, 0.0, 61.0396, 0.2558, 47.8251, 10.4405, 4.4359, 5.9286, 79.4746, 29.5523, 12.1556, 41.6216], [2.5588, 40.1176, 1.5686, 200.7895, 34.6364, 13.8425, 215.5088, 3.6899, 65.836, 55.6765, 15.456, 121.4966, 90.2857, 11.3529, 2.2885, 38.2426, 0.0, 73.694, 2.869, 0.0, 53.9435], [0.0, 52.1699, 4.4902, 0.0, 42.2632, 0.0364, 2.937, 49.3509, 23.4961, 83.82, 22.0441, 63.712, 96.0154, 86.9748, 25.7941, 17.0385, 62.3837, 0.0, 84.7341, 13.4881, 0.0, 6.25, 66.3136, 3.2093, 58.3611, 6.5405], [0.0, 40.7288, 32.0588, 0.0, 8.0526, 5.2, 2.6772, 106.7719, 90.7519, 45.7995, 151.9589, 141.7395, 128.4118, 32.9808, 94.297, 39.5349, 51.1658, 17.2321, 197.8462, 0.0, 47.0791, 1.8372, 14.3833, 2.9189], [0.0, 62.3562, 32.9216, 0.0, 0.0, 1.3455, 0.622, 141.7193, 39.8682, 78.0888, 0.0, 39.36, 79.2534, 60.5798, 0.0, 0.0, 90.7277, 20.4186, 81.3588, 8.3393, 0.0, 2.0536, 102.1992, 0.4942, 16.6944, 28.5622], [34.5882, 24.1863, 28.902, 49.5, 243.4211, 18.8909, 0.7559, 33.8062, 55.2825, 72.5147, 24.048, 129.5702, 105.6218, 20.6765, 12.7115, 89.5074, 2.1163, 74.8215, 7.0952, 1.359, 21.0, 57.5904, 24.3605, 70.5389, 34.8378], [6.9706, 32.5719, 0.0, 2.8438, 138.9737, 28.0909, 2.4724, 68.2105, 42.9767, 132.3554, 44.9412, 22.896, 201.7705, 48.2773, 4.2647, 46.6346, 29.0767, 0.4186, 50.1202, 47.8512, 37.1282, 0.0, 47.8023, 3.6047, 35.6722, 2.7622], [12.7647, 84.5065, 18.6863, 0.5312, 109.3421, 13.7455, 4.2205, 150.4035, 55.1085, 61.2369, 260.6765, 42.144, 106.0017, 24.3277, 124.3529, 18.1154, 92.7599, 0.0, 77.9344, 9.2024, 93.1026, 2.8036, 61.2119, 0.0, 87.3, 66.7514], [0.0, 30.1373, 15.8431, 0.0, 40.0526, 61.6182, 0.811, 298.0702, 18.4109, 88.0456, 40.2353, 23.688, 129.2877, 94.9496, 30.8235, 25.6923, 38.4084, 0.6977, 136.5355, 13.9167, 78.2564, 3.3393, 79.137, 10.1279, 36.8, 17.9676]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

