created: 20230314004438000
creator: Drevarr
modified: 20230705163521996
modifier: drevarr
tags: ChartData
title: 202303140044_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "High Sorcer Baradun", "Legendary Hacker", "Sumatra Satyricon", "Veron Blackburn", "Seren Nightroad", "Daring Deathblade", "Sofya De Nova", "Cerys Fireblade", "Smol Gluvs", "Venomina The Siren", "Legendary Hacker", "Tootsie Pop Rock", "Etchery Howls", "Oo Dads Mad", "Cat Wigglebooty", "Hauzzy", "Minka Bringer", "Heartthrobb", "Smol Daddy Tika", "Blanco Padre Guard", "Fribble Bibble", "Xyntharos", "Rozaalyna", "Tegan Parker", "Morton Saltbringer", "Sygaldry Verdandi", "Black Raspberry Pie", "Whose Guardian", "Xanvias Tseli", "Rina Of Theros", "Sigmund Mistwalker", "Mac Chiato", "Ark Darkness", "Arcanophage Farra", "Primal Clone", "Koralia Danai", "Tribal S", "Ace Hammers", "Mistwalker Caelon", "Ravioli Fetabringer", "Pererek Ninja", "Drevarr Moonwillow", "Bella Sassy", "Sp\u00edcy Cheese", "Newtype Khan", "Zadie Miststep", "Eibh\u00ebar", "Johosh The Great", "Ryvalia Fazebringer"];
const professions = ["Weaver", "Tempest", "Herald", "Soulbeast", "Herald", "Scourge", "Reaper", "Weaver", "Berserker", "Scourge", "Tempest", "Vindicator", "Scrapper", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Vindicator", "Scourge", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Scourge", "Vindicator", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Druid", "Vindicator", "Vindicator", "Firebrand", "Dragonhunter", "Scrapper", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 25, 7, 0, 2, 0, 2, 0, 3, 0, 0, 2, 6, 0, 3, 0, 0, 6, 0, 6, 1, 4, 1, 0], [1, 0, 30, 3, 2, 0, 2, 0, 1, 0, 0, 3, 0, 3, 0, 2, 1, 2, 0, 1, 10, 2, 6, 2], [1, 36, 5, 1, 3, 4, 5, 0, 1, 0, 10, 4, 0, 5, 0, 6, 0], [0, 1, 27, 1, 0, 2, 0, 6, 0, 2, 1, 0, 10, 2, 3, 3, 1, 2, 4, 0, 4, 0, 3, 7, 1, 2, 1], [3, 3, 0, 4, 5, 2, 0, 2, 1, 0, 1, 18, 0, 3, 4, 6, 6, 0, 7, 0, 2, 7, 3, 5, 3], [1, 1, 57, 0, 0, 4, 1, 3, 4, 1, 0, 3, 4, 7, 8], [1, 3, 20, 4, 0, 4, 2, 3, 0, 3, 0, 0, 6, 2, 4, 4, 7, 4, 4, 0, 3, 0, 4, 9, 1, 5, 2], [0, 1, 32, 11, 0, 2, 3, 6, 0, 5, 1, 0, 1, 9, 2, 2, 1, 1, 2, 1, 4, 0, 1, 14, 0, 1, 3], [2, 0, 33, 7, 0, 2, 5, 8, 0, 5, 2, 0, 2, 11, 2, 3, 1, 0, 5, 0, 10, 0, 1, 8, 0, 3, 2], [1, 1, 29, 10, 1, 1, 1, 6, 0, 5, 4, 0, 1, 12, 2, 0, 1, 5, 3, 0, 9, 0, 3, 13, 5, 4], [0, 27, 10, 0, 4, 4, 5, 0, 3, 0, 0, 0, 11, 2, 5, 1, 4, 8, 0, 4, 0, 1, 11, 10, 10, 0], [10, 1, 4, 80, 18, 9], [1, 0, 35, 4, 1, 4, 3, 5, 3, 3, 0, 2, 9, 5, 1, 3, 2, 11, 2, 0, 0, 1, 21, 3, 4], [1, 1, 33, 8, 0, 3, 2, 13, 2, 0, 0, 0, 3, 2, 5, 1, 5, 14, 0, 6, 0, 1, 17, 8, 8], [2, 3, 32, 17, 0, 2, 4, 4, 6, 0, 0, 2, 3, 7, 5, 3, 7, 12, 0, 10, 1, 4, 19, 7, 6, 2], [0, 0, 49, 9, 0, 2, 5, 9, 9, 5, 0, 6, 7, 5, 7, 1, 4, 4, 0, 8, 0, 3, 18, 2, 6, 4], [1, 0, 30, 4, 0, 1, 1, 3, 0, 4, 9, 0, 1, 17, 7, 8, 3, 11, 2, 0, 17, 1, 5, 27, 1, 3, 7], [0, 47, 4, 1, 2, 2, 6, 0, 10, 2, 1, 5, 2, 3, 6, 9, 4, 3, 0, 16, 1, 3, 22, 7, 4, 3], [0, 11, 37, 2, 6, 4, 11, 0, 43, 1, 5, 31, 9, 9], [1, 6, 34, 14, 0, 3, 1, 9, 0, 6, 7, 0, 1, 24, 4, 3, 6, 7, 7, 0, 8, 0, 3, 16, 11, 3, 5], [1, 1, 46, 21, 1, 4, 5, 9, 0, 3, 1, 0, 2, 10, 7, 4, 3, 3, 12, 2, 8, 0, 2, 18, 5, 8, 7], [0, 1, 58, 15, 0, 4, 2, 10, 0, 5, 7, 0, 1, 12, 6, 4, 5, 8, 12, 0, 9, 0, 0, 15, 5, 7, 2], [2, 2, 44, 19, 0, 5, 3, 6, 0, 4, 1, 0, 1, 13, 4, 3, 2, 10, 12, 0, 13, 0, 4, 24, 9, 6, 3], [0, 0, 76, 17, 1, 3, 3, 13, 0, 8, 1, 0, 1, 10, 9, 0, 1, 5, 11, 0, 0, 0, 0, 19, 9, 14], [3, 2, 38, 18, 0, 4, 5, 11, 6, 1, 0, 1, 21, 11, 3, 0, 10, 17, 1, 17, 0, 7, 15, 4, 7, 3], [1, 1, 66, 15, 2, 5, 5, 4, 2, 0, 2, 22, 6, 8, 2, 7, 17, 0, 3, 26, 11, 9, 6], [2, 3, 42, 19, 2, 5, 7, 10, 4, 3, 0, 3, 22, 6, 6, 3, 10, 19, 0, 8, 0, 5, 33, 15, 10, 3], [0, 1, 50, 6, 0, 4, 1, 3, 0, 6, 0, 0, 0, 34, 6, 0, 2, 1, 0, 4, 33, 29, 57, 3], [3, 4, 51, 14, 3, 3, 7, 10, 1, 4, 1, 1, 1, 20, 7, 7, 3, 3, 17, 0, 21, 0, 3, 37, 12, 8], [2, 4, 65, 12, 1, 6, 4, 10, 0, 8, 4, 0, 4, 19, 4, 9, 2, 5, 15, 0, 24, 0, 5, 28, 15], [3, 2, 73, 18, 8, 5, 9, 0, 9, 4, 0, 1, 35, 3, 6, 5, 4, 9, 0, 6, 0, 4, 19, 13, 9, 5], [0, 1, 35, 9, 0, 5, 2, 4, 0, 6, 0, 0, 0, 24, 27, 4, 10, 15, 21, 0, 43, 0, 7, 27, 5, 2, 4], [2, 5, 63, 12, 0, 7, 7, 7, 0, 4, 7, 8, 26, 5, 10, 4, 5, 25, 2, 12, 0, 9, 19, 5, 7, 3], [5, 2, 77, 21, 2, 5, 3, 8, 0, 11, 5, 1, 5, 23, 7, 9, 4, 12, 21, 23, 1, 3, 14], [1, 3, 68, 16, 0, 6, 3, 6, 0, 6, 6, 0, 3, 28, 8, 4, 3, 6, 16, 0, 17, 0, 4, 37, 10, 10, 4], [1, 1, 60, 33, 4, 5, 8, 9, 0, 1, 5, 18, 8, 9, 4, 10, 31, 0, 28, 0, 3, 31, 12, 16, 4], [2, 0, 72, 22, 1, 6, 7, 13, 5, 6, 0, 4, 21, 6, 8, 5, 5, 15, 0, 26, 3, 41, 19, 15, 4], [3, 4, 75, 22, 1, 6, 11, 11, 0, 7, 3, 1, 4, 14, 4, 12, 3, 13, 24, 0, 13, 0, 5, 31, 16, 20, 10], [2, 3, 103, 29, 1, 8, 5, 30, 1, 6, 5, 0, 3, 24, 16, 9, 3, 4, 12, 2, 2, 25, 13, 5, 9], [8, 5, 69, 15, 1, 2, 5, 7, 0, 6, 5, 1, 0, 27, 7, 12, 5, 11, 43, 0, 15, 0, 6, 42, 14, 17, 9], [5, 2, 83, 24, 1, 6, 4, 14, 1, 6, 3, 1, 6, 40, 6, 8, 5, 14, 24, 3, 17, 0, 3, 26, 16, 18, 6], [4, 91, 15, 1, 4, 20, 9, 0, 14, 11, 1, 6, 10, 4, 6, 4, 6, 23, 0, 13, 1, 27, 49, 17, 13], [4, 5, 81, 23, 1, 5, 7, 21, 0, 9, 4, 1, 1, 27, 13, 12, 6, 13, 19, 1, 25, 0, 8, 35, 19, 16, 6], [4, 3, 89, 22, 2, 8, 6, 19, 0, 15, 12, 1, 4, 21, 10, 8, 9, 11, 18, 1, 24, 1, 5, 54, 21, 13, 9], [2, 3, 95, 30, 12, 6, 20, 1, 17, 7, 0, 4, 34, 15, 13, 3, 10, 8, 0, 27, 0, 12, 49, 11, 20, 8], [5, 6, 104, 23, 2, 7, 26, 25, 2, 12, 17, 1, 7, 33, 9, 19, 6, 2, 10, 0, 30, 1, 7, 36, 23, 13, 9], [2, 3, 83, 26, 2, 7, 15, 31, 0, 10, 7, 1, 7, 43, 13, 10, 5, 10, 24, 0, 22, 0, 9, 50, 30, 18, 8], [2, 7, 74, 19, 0, 9, 13, 16, 0, 8, 4, 1, 7, 52, 8, 14, 7, 17, 25, 0, 20, 0, 5, 97, 24, 29, 8], [4, 4, 123, 28, 1, 8, 13, 26, 0, 10, 13, 0, 4, 40, 12, 15, 7, 11, 25, 1, 42, 1, 8, 53, 30, 14, 9], [2, 5, 96, 20, 0, 6, 11, 16, 0, 13, 6, 1, 5, 33, 18, 12, 8, 20, 67, 0, 35, 1, 8, 68, 21, 24, 10]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

