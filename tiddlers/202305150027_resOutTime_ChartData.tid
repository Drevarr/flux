created: 20230515002743000
creator: Drevarr
modified: 20230705163530070
modifier: drevarr
tags: ChartData
title: 202305150027_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Tegan Parker", "Black Raspberry Pie", "Cuscuszera", "Skaven Seer", "Drogo Discourteous", "Zanos Engine", "Miphest\u00f6", "Hyde En Sikh", "Blancooo Padreee", "Kmpek", "Belvyn Brightblade", "Tika Mi", "Oo Dads Mad", "Red Omega Red", "Koralia Danai", "Crusader Siolith", "Evan Nightroad", "Venomina The Fierce", "Tootsie Pop Rocks", "Ark Darkness", "Morv\u00e4rth", "Ever Moore", "Aronorf Xideliesi"];
const professions = ["Vindicator", "Tempest", "Chronomancer", "Firebrand", "Catalyst", "Firebrand", "Mechanist", "Tempest", "Chronomancer", "Spellbreaker", "Vindicator", "Firebrand", "Tempest", "Spellbreaker", "Renegade", "Firebrand", "Dragonhunter", "Vindicator", "Spellbreaker", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 153.52, 0.0, 171.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [290.16, 165.68, 0.0, 0.0, 366.6, 0.0, 0.0, 0.0, 205.11, 0.0, 0.0, 0.0, 0.0], [0.0, 683.7, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 752.07, 0.0, 0.0, 0.0, 0.0], [364.65], [0.0, 1988.16, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 820.44, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 331.36, 284.31, 0.0, 733.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [168.48, 725.4, 497.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [224.64, 0.0, 0.0, 0.0, 0.0, 0.0, 171.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 763.84, 221.76, 0.0, 0.0], [112.32, 1886.04, 0.0, 0.0, 0.0, 91.65, 0.0], [56.16, 1450.8, 165.68, 0.0, 76.76, 0.0, 0.0, 0.0, 0.0, 0.0, 190.96, 36.96, 98.44, 0.0], [196.56, 1740.96, 165.68, 0.0], [1909.6, 0.0, 0.0, 0.0], [196.56, 0.0, 662.72, 0.0, 0.0, 0.0, 85.5, 0.0, 0.0, 0.0, 546.96, 0.0, 0.0, 0.0, 0.0], [140.4, 0.0, 0.0, 0.0, 0.0, 549.9, 313.5, 0.0, 0.0, 0.0, 0.0, 0.0], [280.8, 580.32, 0.0, 0.0, 0.0, 0.0, 28.5, 0.0, 0.0, 0.0, 0.0, 381.92, 110.88, 0.0, 0.0], [0.0, 1015.56, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1025.55, 1050.28, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 205.11, 2864.4, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2566.2, 171.0, 0.0, 0.0], [112.32, 2756.52, 0.0, 0.0, 0.0, 0.0, 0.0, 738.3, 0.0], [183.3, 171.0, 0.0, 683.7, 1241.24, 184.8, 98.44, 0.0], [0.0, 1450.8, 497.04, 0.0, 0.0, 183.3, 0.0, 0.0, 0.0, 0.0, 3691.98, 0.0, 36.96, 196.88, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

