created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Venomina The Sly", "Zaedy Zae", "Kities Got Claws", "Annabelle Bloodwell", "Darkandshadow", "Ryvalia Fazebringer", "Ttv Rodrigoapss", "Necrotic Windrunner", "Cat Bonum", "Rod Reaper", "Arcanophage Farra", "Rina Of Theros", "Be\u00eb", "Grasszanine", "Klavde\u00efa", "Elon Illusionblade", "Anita Strips", "Black Raspberry Pie"];
const professions = ["Druid", "Druid", "Druid", "Reaper", "Reaper", "Virtuoso", "Chronomancer", "Spellbreaker", "Reaper", "Spellbreaker", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.049, 0.027, 0.0672, 0.0921, 0.037, 0.0408, 0.042, 0.0263, 0.0375, 0.0, 0.0476, 0.1667, 0.0225, 0.0245, 0.0328, 0.0625, 0.0787, 0.0], [0.0, 0.0825, 0.027, 0.0252, 0.0395, 0.0494, 0.051, 0.0756, 0.0526, 0.0323, 0.025, 0.0, 0.0238, 0.1212, 0.0315, 0.0, 0.0335, 0.0112, 0.0408, 0.0328, 0.0625, 0.1011, 0.037, 0.0, 0.027, 0.0], [0.0, 0.0387, 0.027, 0.0462, 0.1053, 0.0, 0.037, 0.051, 0.0672, 0.0526, 0.0, 0.0625, 0.0417, 0.0357, 0.1212, 0.0472, 0.0119, 0.0335, 0.0674, 0.0299, 0.0164, 0.0375, 0.0899, 0.1111, 0.0556, 0.0541], [0.1658, 0.0, 0.175, 0.191, 0.3519, 0.3056, 0.2297], [0.1196, 0.2295, 0.4375, 0.2247, 0.3519, 0.4861, 0.1081, 0.0], [0.0444, 0.0722, 0.1387, 0.2237, 0.1975, 0.2449, 0.0924, 0.0, 0.0, 0.2125, 0.0, 0.2738, 0.0455, 0.0], [0.0667, 0.1108, 0.0541, 0.021, 0.1184, 0.0152, 0.037, 0.0714, 0.084, 0.0, 0.05, 0.0, 0.119, 0.1212, 0.1654, 0.131, 0.0574, 0.0562, 0.019, 0.082, 0.15, 0.0899, 0.037, 0.0417, 0.027, 0.0], [0.4545, 0.4882, 0.0714, 0.2727, 0.0562, 0.1277, 0.1967, 0.2, 0.4157, 0.0, 0.4583, 0.2432, 0.2121], [0.0, 0.1649, 0.0, 0.2101, 0.0987, 0.0, 0.0741, 0.0102, 0.0084, 0.0, 0.0, 0.175, 0.0, 0.0238, 0.2576, 0.0551, 0.1071, 0.2297, 0.1348, 0.038, 0.0, 0.3, 0.2921, 0.0185, 0.3056, 0.1486, 0.0], [0.6142, 0.5, 0.2057, 0.3146, 0.144, 0.3279, 0.4875, 0.6067, 0.4815, 0.6806, 0.2973], [0.0889, 0.1521, 0.027, 0.1471, 0.1776, 0.0303, 0.1605, 0.2245, 0.2689, 0.0, 0.0, 0.2375, 0.0417, 0.2143, 0.4394, 0.189, 0.3929, 0.3445, 0.1236, 0.1168, 0.0492, 0.125, 0.2247, 0.2407, 0.0694, 0.0135, 0.0], [0.0889, 0.0851, 0.0, 0.3403, 0.4145, 0.0, 0.4198, 0.2347, 0.2017, 0.3125, 0.0, 0.381, 0.8182, 0.3465, 0.3929, 0.4545, 0.0674, 0.2799, 0.2623, 0.45, 0.3146, 0.3333, 0.5694, 0.3514, 0.0], [0.1556, 0.2423, 0.2432, 0.3361, 0.5526, 0.0, 0.1852, 0.2449, 0.2521, 0.0, 0.0, 0.475, 0.0833, 0.2381, 0.4242, 0.6693, 0.2381, 0.311, 0.1348, 0.1984, 0.2295, 0.4, 0.4494, 0.4815, 0.1806, 0.3378, 0.0], [0.0222, 0.2448, 0.1081, 0.105, 0.625, 0.3333, 0.0714, 0.2269, 0.0, 0.0, 0.5625, 0.0, 0.4762, 0.8788, 1.063, 0.1071, 0.2967, 0.1236, 0.2174, 0.2951, 0.2875, 0.5843, 0.5741, 0.5278, 0.2838, 0.0152], [0.0222, 0.2912, 0.1622, 0.3992, 0.3684, 0.2593, 0.3469, 0.2857, 0.0, 0.5375, 0.3095, 0.6515, 0.7165, 0.4762, 0.5024, 0.2584, 0.106, 0.2951, 0.4125, 0.4607, 0.5, 0.3056, 0.2162, 0.1212], [0.4082, 0.5546, 0.0, 0.0, 0.875, 0.5595, 0.803, 0.874, 0.4643, 0.4737, 0.2247, 0.413, 0.5246, 1.025, 0.764, 0.7593, 0.5833], [0.2917, 0.9524, 0.8939, 1.3071, 0.7381, 0.9139, 0.427, 0.4402, 0.6557, 0.8125, 0.7079, 0.7037, 0.7222, 0.4054, 0.0909], [0.1333, 0.5954, 0.3243, 0.3992, 0.7697, 0.1061, 0.5926, 0.5408, 0.4454, 0.2368, 0.0968, 1.35, 0.125, 0.7619, 1.1212, 0.2598, 0.869, 0.2057, 0.3483, 0.3859, 0.8033, 0.8, 0.9888, 0.6667, 0.875, 0.7838], [0.1333, 0.6418, 0.4865, 0.584, 0.6382, 0.4321, 0.3469, 0.7563, 0.1842, 0.0, 1.2125, 0.0, 0.4048, 0.9091, 0.0787, 0.6071, 0.6699, 0.4944, 0.4647, 0.3443, 1.1125, 1.0225, 0.6852, 0.625, 0.7432, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

