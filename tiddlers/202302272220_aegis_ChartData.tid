created: 20230227222028000
creator: Drevarr
modified: 20230705163520332
modifier: drevarr
tags: ChartData
title: 202302272220_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Ryvalia Fazebringer", "Ark Darkness", "Drevarr Moonwillow", "Grumyaar Lordsbane", "Kahless The Drunk", "Gavann", "Zaylen Harker", "Sygaldry Verdandi", "Ravioli Fetabringer", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 10.3814, 22.0588, 0.0, 0.0, 7.411, 10.944, 5.083, 0.0, 4.2042, 0.0, 1.4426, 125.0304, 64.1743, 0.0, 0.0, 0.0, 0.0, 23.1748, 203.6304], [0.0, 70.9, 33.6307, 0.0, 27.7568, 8.8243, 9.867, 0.0, 1.617, 0.0, 3.183, 0.0, 93.9546, 0.0, 0.0, 38.8575, 0.0, 1.8556, 196.236, 0.0], [55.9908, 43.3944, 6.1072, 36.4954, 9.8192, 0.0, 21.7707, 0.0, 16.3386, 7.9565, 361.5573, 6.4691, 34.5416, 67.1175, 0.0], [10.6546, 25.7175, 20.1905, 22.3401, 12.9349, 6.0826, 0.7415, 2.6813, 5.4831, 0.0, 1.1603, 0.0, 266.3444, 15.6045, 0.0, 12.7876, 0.0, 15.3577, 431.7192, 22.1395], [841.2552, 31.0253], [28.1222, 133.542, 58.1606, 25.7152, 32.8004, 4.9306, 0.0, 1.9179, 5.1303, 6.7591, 5.5978, 95.1936, 136.318, 0.0, 0.0, 0.0, 0.0, 0.0, 407.8296, 0.0], [178.2283, 153.479, 20.974, 0.0, 9.9646, 75.2761, 51.7709, 9.2092, 44.4087, 11.3925, 93.6189, 8.185, 217.7376, 309.1273, 9.7036], [187.6205, 8.0762, 74.0753, 36.9331, 0.2153, 10.2969, 0.0, 85.8519, 1.4896, 133.2, 452.9952, 10.9712, 60.547, 0.0, 2.0924, 753.66, 0.0], [79.0757, 67.8327, 22.3602, 49.2205, 39.3193, 14.2848, 1.806, 2.9978, 12.0981, 59.8236, 10.3802, 58.9632, 492.4226, 6.9499, 7.7339, 41.6835, 90.9224, 749.6784, 30.2765], [252.5928, 137.553, 57.3168, 22.7017, 44.4314, 53.4067, 5.9441, 21.2454, 6.6885, 78.1442, 19.3491, 230.809, 697.9482, 34.0501, 0.0, 178.7445, 30.9987, 89.9354, 1481.1552, 72.7085], [144.8875, 290.3242, 36.2825, 49.4214, 52.4257, 46.3334, 16.3254, 33.8698, 20.5653, 154.6876, 25.1664, 121.8336, 650.5514, 46.5511, 0.0, 235.1232, 0.0, 60.4834, 1655.208, 177.9398], [177.8659, 142.2718, 29.2912, 108.4056, 33.6238, 25.7126, 0.3468, 1.2662, 9.3051, 213.6219, 17.3734, 375.8016, 741.5699, 193.0234, 79.8336, 209.7598, 85.1787, 142.207, 1556.8056, 79.897]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

