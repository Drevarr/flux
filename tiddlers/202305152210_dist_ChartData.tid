created: 20230515221048000
creator: Drevarr
modified: 20230705163530188
modifier: drevarr
tags: ChartData
title: 202305152210_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Mistwalker Caelon", "Tika Mi", "Black Raspberry Pie", "Smol Gluvs", "Artakama Nahid", "Rosetendril", "Solus Sanctus", "Newtype Khan", "Eibh\u00ebar", "Xanvias Einzbern", "Grasszanine", "Domitia Gravestorm", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Firebrand", "Vindicator", "Tempest", "Chronomancer", "Scourge", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Berserker", "Spellbreaker", "Spellbreaker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2148, 717, 594, 385, 461, 313, 271, 150, 940, 1331, 226, 399, 226, 285, 207, 261, 1334, 262, 1564, 229, 289, 269, 243, 286, 1343], [1175, 749, 3591, 324, 477, 470, 8236, 143, 849, 449, 354, 551, 261, 269, 305, 251, 594, 279, 546, 185, 270, 325, 2762, 291, 825], [468, 513, 347, 344, 287, 233, 155, 799, 259, 218, 298, 251, 296, 17286, 1243, 241, 1355, 349, 270, 206, 338, 282, 811], [31111, 171, 399, 306, 245, 94, 431, 440, 257, 320, 310, 289, 424, 235, 1475, 337, 11168, 260, 378, 372, 322, 613, 10134], [508, 769, 444, 408, 339, 315, 239, 177, 385, 241, 252, 360, 261, 238, 209, 18862, 2719, 361], [622, 440, 484, 309, 267, 238, 171, 355, 377, 266, 332, 329, 229, 252, 223, 1117, 340, 1602, 328, 339, 329, 283, 496, 850], [458, 521, 225, 322, 253, 224, 147, 318, 318, 250, 295, 329, 317, 292, 281, 1834, 264, 5822, 425, 296, 263, 283, 346, 5258], [793, 912, 338, 462, 361, 436, 169, 977, 455, 297, 485, 281, 259, 263, 247, 871, 290, 1629, 168, 269, 1137, 287, 662], [728, 436, 565, 240, 372, 311, 270, 144, 339, 226, 236, 224, 216, 226, 236, 213, 949, 336, 918, 216, 256, 263, 1491, 215, 830], [2085, 407, 802, 438, 449, 390, 266, 109, 1535, 695, 258, 204, 226, 247, 291, 211, 480, 255, 3226, 163, 217, 286, 258, 153, 781], [422, 480, 490, 222, 316, 271, 196, 87, 329, 382, 258, 341, 249, 278, 217, 233, 1069, 235, 6157, 169, 243, 216, 256, 267, 1501], [223, 212, 200, 220, 253, 258, 250, 1329, 264, 2814, 286, 231, 188, 274, 388, 6746], [303, 656, 2812, 266, 341, 337, 255, 97, 772, 282, 188, 345, 178, 171, 187, 187, 1286, 235, 1408, 140, 218, 285, 213, 187, 786], [471, 444, 490, 252, 319, 231, 217, 194, 735, 220, 194, 199, 179, 248, 204, 180, 1238, 198, 1549, 143, 197, 197, 233, 160, 791], [627, 329, 721, 183, 211, 201, 194, 65, 350, 167, 206, 188, 241, 209, 193, 169, 1299, 183, 1559, 211, 236, 186, 205, 162, 8991]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

