created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Free H\u00e4nd", "Free H\u00e4nd", "Charr Surethang", "Mother Ship", "Geradenil", "Emobilized", "Gestern Yesteryear", "Synomi\u00f1 Spyce", "Elonith Requiem", "Bae Ken"];
const professions = ["Vindicator", "Renegade", "Berserker", "Tempest", "Vindicator", "Vindicator", "Firebrand", "Scourge", "Scourge", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5632, 637, 5785, 2737, 9042, 11041, 0, 7859, 98, 16284, 3417, 31106, 310], [45889, 24158, 5152, 8573, 13827], [6799, 9838, 15004, 637, 0, 2548, 1879, 5428, 14396, 6934, 7463, 408, 30706, 0, 0, 0], [19152, 1849, 14066, 1845, 616, 0, 1962, 2510, 5850, 29213, 6766, 0, 0, 0, 18382, 0, 12205, 1227], [14488, 3344, 11238, 3045, 1582, 0, 4256, 13812, 3749, 7830, 17442, 0, 8876, 852, 17603, 0, 17346, 3824], [2469, 16957, 4256, 1486, 4588, 5620, 16476, 2013, 22621, 13666, 0, 4018, 0, 21761, 0, 16232, 8293], [33416, 6921, 12899, 1274, 1540, 1907, 1911, 5501, 2012, 22167, 9403, 0, 5251, 0, 43818, 325, 5266, 2962], [15202, 15310, 48076, 10643, 0, 3784, 384, 46397, 962, 21473, 6019], [21969, 11980, 73782, 42825, 16847, 915, 59635, 1847, 13550, 17794], [70650, 71323, 110703, 0, 5687, 41499, 32149, 62116, 7687, 182220, 57429, 0, 6611, 2541, 119409, 1469, 81775, 34883]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

