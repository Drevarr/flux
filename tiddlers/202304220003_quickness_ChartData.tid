created: 20230422000344000
creator: Drevarr
modified: 20230705163526218
modifier: drevarr
tags: ChartData
title: 202304220003_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Solo Bloodborn", "Kosair", "Laddy Lux", "Blancooo Padreee", "Aronorf Xideliesi", "Domina Flagbringer"];
const professions = ["Spellbreaker", "Spellbreaker", "Dragonhunter", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.86, 106.911, 0.0, 13.5516, 0.0, 11.6525, 8.9168, 11.088, 26.0949, 12.9367, 26.0064, 0.0, 0.0, 48.4684, 50.6196], [0.0, 20.306, 19.9293, 20.2392, 20.196, 36.2473, 5.0019, 18.9162, 0.0, 40.5, 0.0, 0.0, 8.5008, 0.0, 19.7165, 20.1503, 18.8602, 21.0682, 32.994, 41.2128, 0.0, 15.5015, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 472.6673, 0.0, 0.0, 0.0, 0.0, 0.0], [6.4688, 96.5991, 99.687, 171.6768, 17.8848, 64.2763, 58.04], [32.7281, 20.874, 21.8866, 20.7329, 0.0, 17.5242, 20.5946, 37.8743, 20.6716, 19.98, 53.613, 0.0, 12.7236, 24.636, 29.7158, 21.3742, 12.3341, 39.7761, 28.0238, 82.3392, 20.736, 20.8849, 13.9352, 5.1084], [26.5954, 56.4876, 23.0305, 54.9703, 0.0, 54.4414, 34.6817, 86.5458, 17.6684, 121.14, 0.0, 0.0, 30.1116, 36.378, 37.7395, 71.0288, 42.3034, 10.6221, 72.2526, 66.4462, 33.0048, 0.0, 63.7898, 0.0, 13.3902], [51.0048, 14.0296, 21.4036, 57.9674, 29.6208, 36.8114, 21.0795, 41.3478, 25.6239, 180.36, 55.755, 0.0, 12.3372, 30.0119, 28.1837, 27.887, 0.0, 75.1812, 48.927, 92.3616, 47.6928, 46.2452, 0.0, 33.0111]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

