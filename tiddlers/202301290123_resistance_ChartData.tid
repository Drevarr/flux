created: 20230129012318000
creator: Drevarr
modified: 20230705163518307
modifier: drevarr
tags: ChartData
title: 202301290123_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ele Otis", "\u00c2 R K", "Hyde En Sikh", "Aronorf Xideliesi", "Koralia Danai", "Bubble Teabringer", "Xanvias Einzbern", "Bella Lunabringer", "Venomina The Fierce", "Newtype Khan"];
const professions = ["Catalyst", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.6814, 40.6944, 40.0221, 16.9046, 18.4008, 36.7445, 3.119, 31.6234, 6.0996], [123.9963, 55.1555, 129.3102], [20.7346, 14.2713, 21.1896, 21.1758, 52.4144, 20.1164, 64.2002, 74.834, 7.1318, 13.512, 0.0, 15.0153, 26.1226, 0.0, 25.506], [19.6207, 17.6154, 39.1959, 37.5658, 44.608, 39.1088, 47.9552, 58.4188, 10.8854, 8.184, 0.0, 0.0, 16.3073, 19.082, 0.0, 23.544], [9.5676, 24.3978, 13.608, 63.3987, 59.6632, 37.9073, 83.9542, 25.4677, 22.8031, 30.456, 0.0, 40.4237, 20.3322, 5.4328, 12.6353], [27.2177, 21.9486, 37.9566, 57.7124, 63.7058, 35.6592, 67.8391, 93.1804, 14.3106, 12.312, 13.4076, 14.476, 0.0, 24.3288], [70.8002, 69.8493, 49.3776, 63.9133, 124.4145, 49.3027, 175.1861, 23.4158, 22.3026, 11.472, 3.9987, 19.2644], [33.7294, 44.4153, 46.3887, 52.6436, 99.3225, 38.2174, 102.9283, 71.6958, 37.1137, 7.608, 5.7326, 0.0, 30.2316, 64.6814, 0.0, 64.1182], [127.6207, 103.4504, 270.3168, 61.0742, 15.9997, 20.736, 44.0986, 102.5164, 0.0, 98.8063], [39.8412, 157.5495, 214.3989, 130.8885, 181.3594, 140.505, 380.003, 50.5733, 26.807, 14.16, 13.3549, 107.9496, 161.6706, 0.0, 121.801]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

