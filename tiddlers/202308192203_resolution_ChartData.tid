created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Minnie Darley", "Newtype Khan", "Milvia Rosalyn", "Lillith Bella", "Pr\u00e6tor Lightbringer", "Klengah", "Blancooo Padreee", "Belvyn Brightblade", "Zaedy Zae", "Mmathuss", "Sub Train", "Darks Na", "Crusader Siolith", "Gabe Malhorn", "Koralia Danai"];
const professions = ["Dragonhunter", "Spellbreaker", "Druid", "Dragonhunter", "Firebrand", "Druid", "Spellbreaker", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.675, 0.0, 38.9025, 0.0, 88.5846, 0.0, 0.0, 8.4178, 4.3791, 0.0, 100.3659, 0.0], [27.8205, 0.0, 0.0, 0.0, 0.0, 71.5491, 0.0, 0.0, 66.456, 71.6444, 35.8225, 51.8654, 16.8868], [0.0, 0.0, 97.1024, 89.7286, 33.7264, 0.0, 35.098, 120.0911, 16.6019], [24.6652, 0.0, 0.0, 0.0, 157.9759, 111.2659, 0.0, 55.0477, 40.9906, 0.0, 19.8411, 0.2331], [0.0, 347.0457, 79.254], [34.884, 40.1215, 46.1518, 0.0, 65.2743, 0.0, 64.2806, 86.8053, 0.0, 0.0, 0.0, 0.0, 130.3017, 0.0], [36.465, 0.0, 88.7437, 0.0, 67.158, 0.0, 190.7976, 28.3385, 0.0, 86.5131, 0.0, 83.4256, 58.6635], [122.706, 0.0, 340.8623, 3.3665, 36.5274, 17.7536, 330.4887], [42.2025, 0.0, 208.1282, 0.0, 70.2702, 30.5791, 184.097, 153.6842, 96.9704, 81.9812, 0.0, 186.9243, 37.9694], [74.5481, 209.9097, 58.7574, 366.2633, 77.737, 0.0, 373.8704, 378.6411, 0.0, 391.6013, 135.5088], [99.399, 0.0, 209.3996, 0.0, 303.7671, 11.8989, 157.0673, 178.5624, 0.0, 427.4228, 273.3386, 0.0, 394.386, 141.8543], [179.418, 15.08, 685.9203, 27.5469, 293.3658, 43.7416, 655.4125, 103.7487, 129.5892, 205.8696, 22.0972, 364.9143, 88.2931], [262.65, 0.0, 729.7836, 0.0, 310.2372, 0.0, 180.2356, 356.9458, 12.1452, 363.0713, 310.001, 72.0475, 517.8419, 138.2024], [249.594, 24.1135, 617.6461, 47.8429, 359.541, 81.2705, 671.0851, 344.1785, 0.0, 433.7362, 315.093, 710.1036, 150.9711], [320.8665, 36.221, 707.2798, 0.0, 402.948, 58.1045, 759.1019, 379.7359, 0.0, 434.7884, 430.5795, 565.2982, 108.7541]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

