created: 20230527220043000
creator: Drevarr
modified: 20230705163532036
modifier: drevarr
tags: ChartData
title: 202305272200_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Rx Medic", "Kaehln Lao", "Tegan Parker", "Sygaldry Verdandi", "Blanco Padre Guard", "Aronorf Xideliesi", "Crusader Siolith", "Koralia Danai", "Zadey Starbolt", "Drevarr Moonwillow", "Bella Sassy", "Lucas Ryn", "Johosh Of The North", "Newtype Khan", "Venomina The Fierce"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.5147, 30.375, 19.0209, 2.5907, 8.3462, 18.081, 8.7696, 17.5924, 0.0, 2.8907, 6.7258, 5.3361, 0.0, 5.5104], [0.7884, 10.287, 20.5588, 5.1624, 13.7365, 14.2002, 15.0066, 12.8338, 1.7542, 8.4864, 8.1542, 6.6452, 11.2959, 7.7104, 9.8112], [0.0, 4.633, 27.7628, 46.305, 24.192, 24.4419, 19.2381, 9.2736], [53.9791, 35.478, 15.9452, 3.7064, 1.6808, 28.4886, 3.6288, 7.5705, 0.0, 17.2115, 3.105, 0.0, 2.7373, 0.0, 3.4944], [11.826, 18.063, 27.034, 13.9367, 19.8223, 39.0726, 18.9, 28.9121, 0.0, 4.4023, 5.1981, 4.5587, 8.42, 7.5587, 15.5904], [2.2599, 11.3582, 4.7774, 6.78, 5.7165, 55.413, 7.4358, 9.2931, 9.4042, 13.9284, 19.683, 11.8982, 10.0223, 11.8818, 26.019, 9.9792, 7.5705], [4.7785, 5.6498, 9.1549, 4.8625, 0.78, 0.0, 20.2002, 1.9764, 13.0538, 30.0492, 14.6642, 18.792, 23.7964, 10.1358, 16.4606, 14.6412, 20.6388, 13.2664, 0.0, 15.8855, 6.5472, 4.1958, 6.93, 2.2752, 5.4208], [16.7832, 4.5625, 7.1224, 4.9795, 4.152, 7.707, 35.2128, 3.3858, 10.9926, 11.3879, 13.1926, 25.191, 28.329, 9.8521, 7.7666, 40.7484, 13.2678, 9.9498, 0.0, 2.4398, 0.7539, 3.6382, 5.0307, 14.2464], [0.0, 4.1894, 9.4111, 0.0, 0.816, 0.5614, 28.2174, 2.3328, 8.9677, 27.4778, 18.2383, 23.49, 22.2585, 11.9322, 20.1121, 33.7806, 16.8588, 13.1222, 0.1801, 5.4631, 4.7517, 6.93, 9.9603, 13.8432], [7.296, 0.7782, 5.7389, 2.1493, 4.032, 3.3686, 24.5232, 7.0956, 8.3891, 22.4083, 15.768, 26.568, 32.1332, 1.9288, 13.8524, 25.7544, 12.8142, 13.4827, 2.0477, 8.1682, 3.1645, 1.7388, 13.0977, 17.1651, 10.4384], [13.31, 4.797, 3.1086, 5.4583, 1.992, 2.7562, 22.2438, 8.0028, 14.7171, 40.482, 15.6103, 29.97, 32.2951, 5.0679, 16.9243, 31.4874, 15.8382, 43.8368, 0.5403, 8.619, 9.3942, 1.3457, 13.7907, 10.9715, 10.7968], [8.5082, 9.3168, 14.7742, 2.5004, 0.828, 13.9339, 53.6838, 2.3166, 24.0464, 32.5472, 27.3838, 48.924, 57.4674, 14.3716, 29.038, 54.1548, 25.8552, 18.6018, 1.8543, 4.2697, 4.8509, 5.6473, 6.8953, 13.1709, 28.896], [13.2168, 3.5285, 20.7351, 9.5015, 1.44, 12.6834, 53.3694, 5.022, 14.5002, 34.8248, 29.4862, 44.307, 42.8173, 11.6486, 35.7613, 43.3062, 29.4084, 33.3102, 9.358, 24.5575, 7.7178, 8.6335, 14.3451, 14.5107, 15.9488], [14.7552, 0.0, 0.0, 0.0, 7.68, 3.3686, 49.5966, 11.5182, 12.0774, 51.8698, 19.9202, 24.057, 57.7102, 3.5551, 41.6153, 71.9712, 31.2606, 59.9872, 0.0, 19.5452, 11.7949, 27.9626, 17.4432, 12.5888], [36.5734, 17.8486, 12.7999, 17.172, 7.7836, 56.3562, 5.9454, 14.0662, 64.0658, 14.7694, 78.813, 74.9504, 19.4584, 48.3386, 64.9152, 35.3808, 55.2286, 4.002, 21.4282, 13.5408, 5.3676, 28.3783, 14.1062, 27.5968], [0.0, 17.2044, 59.664, 143.0461, 18.9742, 123.444, 122.4622, 40.5241, 85.1432, 124.362, 40.8618, 102.9588, 6.2765, 40.3369, 23.3418, 16.7908, 48.1635, 58.0176, 57.7024]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

