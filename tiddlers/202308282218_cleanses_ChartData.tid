created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Legacy Nyx", "Solus Luxes", "Arcanophage Farra", "Darks Na", "Black Raspberry Pie", "Newtype Khan", "Chunky Meat Flapper", "Eibh\u00ebar", "High Sorcer Baradun", "Tootsie Pop Rocks", "Selandir", "Cat Wigglebooty", "My Birthday Girl", "Tegan Parker", "Venomina The Sly", "Arriasa", "Drevarr Moonwillow", "Spirita Demon", "Zaedy Zae"];
const professions = ["Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Spellbreaker", "Ranger", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Scrapper", "Scrapper", "Tempest", "Druid", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0263, 0.0693, 0.0441, 0.0, 0.0451, 0.0, 0.1008, 0.0, 0.0, 0.0892, 0.0889, 0.1857, 0.0534, 0.0213, 0.0157, 0.0685, 0.0, 0.1275, 0.0401, 0.0, 0.0, 0.0, 0.0], [0.0876, 0.1935, 0.0956, 0.1569, 0.1475, 0.0381, 0.3426], [0.0, 0.0105, 0.1059, 0.0, 0.0809, 0.0, 0.0164, 0.0, 0.0915, 0.0, 0.1224, 0.1455, 0.0667, 0.1429, 0.0119, 0.1489, 0.0846, 0.1096, 0.0, 0.1304, 0.1358, 0.0, 0.0, 0.0833, 0.0], [0.0, 0.0105, 0.102, 0.0, 0.2794, 0.0, 0.0574, 0.0381, 0.1225, 0.0, 0.1224, 0.0282, 0.0556, 0.1714, 0.0801, 0.0, 0.0282, 0.0, 0.0, 0.1285, 0.0741, 0.0, 0.0952, 0.0], [0.0, 0.0158, 0.0928, 0.0, 0.1397, 0.0392, 0.0246, 0.0476, 0.1302, 0.0098, 0.0204, 0.0939, 0.1333, 0.1, 0.0356, 0.0, 0.0533, 0.1233, 0.0, 0.1957], [0.0039, 0.1103, 0.1765, 0.1352, 0.019, 0.1473, 0.0588, 0.3571, 0.2676, 0.1111, 0.0, 0.0475, 0.3191, 0.1693, 0.137, 0.1587, 0.0731, 0.179, 0.0, 0.0, 0.0085], [0.0, 0.0211, 0.0902, 0.1774, 0.1544, 0.0, 0.0656, 0.0, 0.1132, 0.0098, 0.3061, 0.1643, 0.1111, 0.0286, 0.089, 0.0, 0.1034, 0.0274, 0.0, 0.2006, 0.0988, 0.0154, 0.125, 0.0, 0.0], [0.7857, 0.1335, 0.0426, 0.1787, 0.0822, 0.0, 0.2688, 0.392, 0.1538, 0.0, 0.0714, 0.0763], [0.1875, 0.0158, 0.0314, 0.2097, 0.1324, 0.1765, 0.2582, 0.1238, 0.0791, 0.0196, 0.449, 0.2535, 0.1889, 0.0, 0.1068, 0.0, 0.1661, 0.0, 0.0, 0.1423, 0.1667, 0.0, 0.0, 0.3452, 0.0339], [0.0625, 0.3737, 0.634, 0.7721, 0.0392, 0.3279, 0.0857, 0.2016, 0.1863], [0.0, 0.0737, 0.1974, 0.0809, 0.0, 0.2049, 0.0, 0.076, 0.0, 0.051, 0.1596, 0.0889, 0.6286, 0.0445, 0.1818, 0.0, 0.0, 0.4496, 0.3796, 0.0, 0.0, 0.0], [0.019, 0.231, 0.0392, 0.0816, 0.1362, 0.1333, 0.0571, 0.1573, 0.0426, 0.1536, 0.1781, 0.0, 0.7223, 0.2253, 0.1077, 0.0208, 0.2143, 0.0169], [0.0, 0.1895, 0.3935, 0.3382, 0.0, 0.1066, 0.1333, 0.3736, 0.0098, 0.3776, 0.277, 0.4111, 0.2759, 0.1918, 0.0317, 0.3735, 0.3704], [0.2083, 0.1105, 0.4131, 0.3871, 0.6324, 0.2157, 0.3607, 0.0381, 0.3783, 0.0098, 0.4184, 0.2113, 0.5, 1.1571, 0.2047, 0.0426, 0.1724, 0.1096, 0.0, 0.7006, 0.3241], [0.8163, 0.7371, 0.9778, 1.0714, 0.4659, 0.383, 0.5831, 0.3973, 0.0, 1.2895, 0.9383, 0.5077, 0.0, 0.4405, 0.0593], [0.0833, 0.1316, 0.0797, 0.9194, 0.4853, 0.1569, 0.3975, 0.2, 0.5302, 0.0098, 0.9388, 0.5869, 1.0111, 0.9571, 0.2789, 0.1489, 0.4608, 0.1918, 0.0, 0.7915, 0.8765, 0.6462, 0.0, 0.7381, 0.0169], [0.6357, 0.0588, 0.5918, 0.4883, 0.9889, 1.5857, 0.7211, 0.5643, 0.6438, 0.0, 1.669], [0.3333, 0.6579, 1.0641, 0.7258, 1.0441, 0.4314, 0.7254, 0.4095, 1.0791, 0.1667, 1.2245, 0.8451, 0.8667, 2.4, 0.822, 0.2553, 0.6959, 0.8219, 0.127, 1.419, 1.0525, 0.6462, 0.0, 0.7619, 0.1525], [0.1667, 0.5737, 1.1281, 0.8065, 0.8824, 0.2157, 0.6926, 0.3429, 1.2589, 0.0, 1.2041, 0.8732, 2.1333, 2.7714, 0.3501, 0.0638, 0.8464, 0.6712, 0.0159, 2.3577, 1.0123], [0.1667, 0.6947, 1.0196, 1.0806, 1.2647, 0.3922, 0.7172, 0.3524, 1.4744, 0.1373, 0.4286, 1.1315, 1.7111, 2.2286, 0.8042, 0.4468, 0.8871, 0.589, 0.0, 2.1779, 1.4846, 0.8923, 0.0, 1.0595, 0.1864]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

