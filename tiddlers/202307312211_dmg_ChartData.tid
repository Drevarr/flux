created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Sahan", "Arriasa", "Funkertron", "Smythe The Noble", "Luke The Ghastly", "Zaedy Zae", "Tribal S", "Cat Wigglebooty", "Klenga", "Belvyn Brightblade", "Isis Urd", "Tootsie Pop Rocks", "Etchery Howls", "Crusader Siolith", "Venomina The Sly", "Blanco Padre Guard", "Tegan Parker", "Ryvalia Fazebringer", "Koralia Danai", "Rahani Sunray", "Drevarr Moonwillow", "K\u00e2 \u00d4tik R\u00e6j", "High Sorcer Baradun", "Sygaldry Verdandi", "Ex Warcraft", "Darkandshadow", "Klikkin", "Rayla Shadowmoon", "Necrotic Windrunner", "Bella Sassy", "Sub Train", "Solus Sanctus", "Aira Draugr", "Newtype Khan", "Grasszanine", "Kisumaiasu", "Oo Dads Mad", "Arcanophage Farra", "Audens Silvermarker", "Black Raspberry Pie", "Daphne Agla\u00e9", "Name Is What", "Primal Clone", "Glorious Gluvs", "Rozaalyna", "Cedryn X", "Mister Jekyll", "Bee Nemesis", "Revitiel", "Marshall R", "Mort\u00e4rion", "Kary\u00edna", "Be\u00eb", "Legacy Of Mathus", "My Birthday Girl", "Eibh\u00ebar", "Mistwalker Cael", "Keypek The Drunk", "Xanvias Einzbern", "Mike The Archmagus"];
const professions = ["Firebrand", "Druid", "Herald", "Mechanist", "Scourge", "Druid", "Druid", "Scrapper", "Firebrand", "Firebrand", "Untamed", "Scrapper", "Druid", "Firebrand", "Druid", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Scrapper", "Berserker", "Tempest", "Firebrand", "Tempest", "Virtuoso", "Holosmith", "Herald", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Herald", "Spellbreaker", "Spellbreaker", "Scourge", "Berserker", "Spellbreaker", "Firebrand", "Chronomancer", "Scourge", "Scourge", "Chronomancer", "Berserker", "Scourge", "Berserker", "Scourge", "Berserker", "Vindicator", "Herald", "Scrapper", "Vindicator", "Scourge", "Berserker", "Scrapper", "Chronomancer", "Vindicator", "Scrapper", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.2357], [0.0, 5.8158, 6.8939, 0.0, 0.0, 0.0, 52.4571, 2.125, 32.1778, 48.0784, 4.5088, 27.303], [469.3, 199.2727], [480.675, 381.303], [3.5308, 690.5, 79.0606], [17.873, 22.3136, 3.3698, 0.0, 25.2083, 23.1509, 4.3201, 13.6143, 6.3036, 11.6, 29.3922, 3.6828, 0.0, 32.9091], [9.4603, 13.3884, 19.5225, 5.5583, 28.434, 44.3022, 22.5286, 54.0536, 42.3137, 4.6872, 0.0], [108.6508, 11.4683, 15.299, 3.377, 13.8167, 3.0943, 43.4245, 93.4286, 75.9821, 0.0, 4.9868, 10.775], [19.5397, 19.5482, 17.7074, 2.9836, 25.275, 11.1509, 15.0324, 10.5286, 174.0714, 0.0, 9.7843, 6.3084, 5.55, 44.1818], [160.4603, 11.7272, 57.6383, 0.0, 41.5278], [106.0492, 148.4917, 33.6038, 141.1259], [45.5873, 20.3536, 8.5514, 0.0, 62.25, 70.3583, 53.7374, 73.0429, 19.2143, 12.1333, 14.7647, 29.3084, 26.325], [33.4286, 30.7237, 24.1093, 38.4444, 34.275, 159.9057, 5.3201, 0.0, 50.2857, 19.2444, 31.9804, 31.5374, 24.425], [63.8254, 38.0191, 25.1801, 74.4583, 29.0566, 19.4856, 27.7571, 29.3214, 36.1556, 7.0392, 11.7445, 6.525, 7.6364], [48.4127, 39.1086, 38.2026, 0.0, 119.8889, 12.7583, 19.5647, 48.5429, 49.3571, 9.2444, 1.8039, 19.3238, 48.625], [57.3651, 44.066, 40.0113, 3.4262, 14.3611, 37.3333, 0.0, 21.2626, 49.4714, 97.2679, 25.1778, 15.3529, 5.0793, 29.475, 14.1212], [138.4286, 24.8584, 15.4164, 18.082, 5.8917, 131.3921, 2.6857, 209.5714, 18.4978, 0.8, 24.6061], [32.9365, 56.046, 50.0579, 0.0, 29.3889, 35.825, 17.9245, 3.1151, 34.3286, 117.75, 27.3333, 21.9608, 21.1256, 0.55], [18.5397, 42.9348, 117.8698, 0.0, 40.3667, 8.8113, 9.8885, 13.9143, 0.1429, 8.7556, 4.3546, 45.7], [43.2075, 165.2806, 115.3571, 48.6964, 108.9556, 162.7048, 172.025], [131.4921, 47.702, 44.746, 1.3115, 97.8889, 66.3833, 73.2264, 32.3273, 139.7714, 11.1429, 33.9556, 27.3922, 29.37, 82.8, 47.1212], [67.1765, 293.0485, 319.85], [193.127, 83.8106, 2.2154, 0.0, 130.3, 21.0863, 58.6143, 62.9216, 27.2489, 6.925, 150.2727], [44.6825, 69.2884, 52.7637, 3.0328, 4.3056, 38.275, 1.9057, 60.2626, 51.7571, 17.0893, 84.7556, 27.3529, 30.2841, 0.15, 23.1515], [182.3968, 101.6603, 57.3842], [333.4626, 160.375, 439.697], [19.175, 340.0755, 553.1978, 78.6429], [654.4762, 122.2398, 14.4277], [28.283, 166.6007, 225.3143, 327.1071, 46.6667, 44.8431, 154.3062, 882.1], [84.0, 93.232, 60.2154, 0.0, 36.0417, 30.717, 40.6835, 58.1571, 76.5714, 6.7333, 5.0784, 37.7863, 11.975], [164.2698, 94.4735, 36.8794, 0.0, 97.2667, 20.6038, 25.1871, 77.8571, 112.6071, 30.1556, 40.549, 83.6233, 26.525, 6.6364], [46.4921, 94.6455, 118.6656, 16.4754, 145.2333, 5.3774, 71.741, 5.3571, 50.3571, 77.1556, 48.2357, 145.35, 17.2121], [485.7143, 187.901, 225.8714, 0.0, 259.1667], [416.3175, 160.2745, 225.4437, 0.0, 84.6667, 63.725, 112.2264, 174.1079, 131.0714, 159.3393, 66.9556, 140.8431, 46.5308, 122.55, 134.4545], [299.254, 174.2945, 191.6125, 0.0, 90.9444, 206.6417, 103.4528, 146.1151, 102.5286, 50.25, 0.0, 108.8431, 129.2643, 386.575], [560.1429, 98.477, 234.8457, 0.0, 379.4444, 302.725, 403.7925, 219.0324, 6.0286, 370.1786, 187.2889, 19.4118, 119.2313, 244.225, 234.9697], [1408.0794, 257.4735, 323.5113, 0.0], [563.7778, 196.2954, 144.635, 82.0164, 411.75, 147.0755, 178.9065, 420.1143, 174.4643, 0.0, 0.0, 183.4119, 459.65, 0.0], [742.9048, 259.3858, 197.4469, 44.9672, 51.3611, 590.7583, 153.1698, 417.0576, 94.8143], [394.8571, 211.2198, 295.6222, 0.0, 493.8333, 73.1321, 175.464, 558.5143, 96.0714, 178.7111, 50.7059, 133.5815, 0.85], [283.3651, 262.2667, 246.6833, 17.4167, 247.4333, 275.4137, 148.9571, 48.4286, 228.5771], [730.4762, 316.6707, 204.6849, 0.0, 257.125, 77.5094, 67.0755, 164.3571, 188.6071, 415.0889, 0.0, 177.8392, 58.475, 58.3939], [436.873, 129.7376, 396.1206, 0.0, 372.0, 458.1083, 0.0, 167.1295, 111.2429, 87.2321, 160.3556, 352.9714, 149.225], [681.0159, 250.9044, 268.8119, 0.0, 292.7222, 221.5583, 257.4906, 238.7698, 272.5429, 147.375, 70.2, 90.4314, 192.9075, 651.9, 314.4242], [1217.5397, 277.8123, 373.1704, 0.0, 125.0556, 469.7583, 166.1367, 343.0571, 836.8393, 132.2667, 175.2549, 222.2026, 334.35, 31.6364], [1475.2857, 555.0443, 473.9582, 0.0, 305.1944, 0.0, 0.0, 217.4532, 242.0286, 222.8214], [1506.7778, 480.7602, 537.5177, 705.9417, 10.1887, 197.2878, 0.0, 203.4286, 474.022, 256.375, 17.5455], [1015.3968, 439.6838, 620.5257, 0.0, 1111.8, 17.7547, 546.6115, 437.3714, 478.8929, 176.9333, 233.7059, 460.4736, 576.55, 161.3636], [3401.1429, 570.6238, 244.1945, 0.0, 1172.7917, 27.0189, 701.2878, 406.9143, 344.3929, 247.1556, 265.4902, 360.8502, 419.775, 385.9697], [1776.9683, 864.4952, 693.5868, 236.4426, 1064.7833], [951.9206, 677.616, 936.6881, 211.4918, 880.3417, 566.2482, 650.9143, 368.375], [2755.3492, 628.2337, 607.9325, 113.7049, 553.6389, 875.025, 398.4151, 441.6259, 828.1571, 259.6607, 86.4, 130.5098, 444.2115, 407.15, 394.2121], [1643.3333, 778.7142, 685.5788, 0.0, 775.725, 484.1698, 501.6835, 688.3, 331.75, 414.3778, 219.4118, 553.6211, 1083.05, 69.6364], [1656.8571, 861.5074, 765.3344, 0.0, 0.0, 450.725, 151.8679, 475.7302, 560.8429, 334.2679, 228.0889, 26.1961, 597.5198, 241.925, 200.6667], [1573.7619, 869.0104, 631.6672, 0.0, 78.6111, 1440.8, 366.5935, 723.7714, 734.6964, 298.9333, 35.3725, 572.707, 348.8, 186.303], [1319.5556, 827.371, 765.3023, 52.0164, 493.3611, 723.7083, 478.5283, 532.3777, 385.9429, 281.3571, 126.2667, 239.6078, 619.163, 530.75, 390.0606], [3698.7937, 1287.5717, 1091.5193, 0.0, 291.2778, 1444.5, 655.9057, 55.3094, 464.6429, 960.3214, 683.2889, 240.7059, 1407.6189, 1457.775], [2427.7143, 1274.9374, 1030.7605, 338.8852, 6.3611, 1754.325, 627.5094, 783.4173, 543.9143, 775.3929, 417.5111, 271.8824, 1237.7841, 1004.825, 212.6667], [3695.127, 1761.3666, 1189.3312, 0.0, 2169.7167, 0.0, 921.8921, 200.2286, 302.1786, 456.8444, 922.152, 1366.2], [3586.4127, 1614.9887, 1289.9807, 0.0, 41.8333, 1341.8917, 0.0, 637.759, 362.9714, 1090.8393, 359.2, 1282.8524, 3557.875, 409.4848]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

