created: 20230625214748000
creator: Drevarr
modified: 20230705163536407
modifier: drevarr
tags: ChartData
title: 202306252147_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Oo Dads Mad", "Ateriuz", "Primal Clone", "Morton Saltbringer", "Imalou", "Raziel Umbra", "Air One Com", "Ryvalia Fazebringer", "Traidoruns Maximus", "Tacitus Kilgore I", "Riann Swordbreak", "Bellatrix Astra", "Koralia Danai", "Aronorf Xideliesi", "Bella Sassy", "Newtype Khan", "Tika Fiery", "Grasszanine", "Solus Sanctus", "Blancooo Padreee", "K\u00f4sair"];
const professions = ["Firebrand", "Spellbreaker", "Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[85.2634, 15.2712, 39.5213, 0.0, 56.8512, 63.2668, 52.0576, 52.8646, 0.0, 0.0, 0.0, 0.0, 51.675, 0.0, 0.0], [139.776, 56.1398, 56.8915, 0.0, 35.532, 60.7825, 86.8711], [91.728, 32.821, 1.9123, 0.0, 31.584, 0.0, 61.8184, 104.6336, 0.0, 0.0, 0.0, 0.0, 183.6185, 0.0, 0.0], [66.0824, 118.7564, 144.8984, 34.5811, 0.0, 24.7248, 0.0, 130.91, 5.7603, 18.2758], [62.2003, 15.0773, 22.9478, 6.9768, 48.7973, 43.7237, 107.0434, 99.4293, 32.2896, 33.66, 2.7588, 112.6515, 4.8538, 4.6209], [93.3005, 18.9557, 33.864, 6.372, 55.7458, 49.0235, 197.1682, 126.8203, 46.3512], [66.2189, 18.3739, 34.0234, 6.1344, 58.7462, 72.5416, 142.5077, 128.7377, 39.8933, 0.0, 21.2976, 4.5496, 133.3215, 0.0, 3.4527], [97.1443, 9.4051, 42.071, 4.6656, 60.1675, 66.0824, 157.7996, 136.6811, 31.6646, 0.0, 14.9328, 0.0, 127.8095, 18.9914], [90.6797, 24.0461, 46.7722, 7.3656, 54.4824, 54.8202, 144.1345, 130.6551, 56.5589, 0.0, 15.3, 7.623, 164.3265, 3.8158, 3.92], [179.4374, 32.627, 48.6845, 9.2016, 91.7515, 59.6232, 146.7374, 183.7936, 72.912], [511.6639, 96.1397, 19.1325, 0.0, 0.0, 590.1285, 0.0, 22.092], [156.025, 46.056, 41.2742, 15.66, 209.5598, 193.7754, 326.9868, 220.7715, 67.079], [129.2928, 19.392, 45.8957, 0.0, 72.8011, 164.6263, 316.9006, 239.1234, 89.161, 0.0, 26.316, 7.7198, 320.385, 14.0352, 0.0], [203.1994, 31.4635, 138.9619, 3.9096, 139.2854, 117.259, 389.1306, 217.2106, 74.2661, 0.0, 27.6624, 0.0, 412.711, 0.0, 12.9021], [273.4368, 50.3222, 94.4208, 9.3528, 211.9286, 228.7212, 491.619, 251.1755, 106.4515, 14.003, 94.6152, 0.0, 393.0745, 14.1222], [257.712, 66.1752, 112.4285, 5.0544, 145.9181, 139.2864, 419.0637, 324.0355, 105.7224, 0.0, 56.0592, 0.0, 583.2385, 15.5557, 29.0492], [248.976, 159.3053, 245.9722, 0.0, 197.4, 172.7417, 319.1782, 392.2391, 43.7472, 0.0, 21.7872, 20.691, 414.4335, 16.6376, 22.1179], [219.623, 47.2195, 80.6362, 8.0568, 120.335, 258.8641, 524.4803, 271.1709, 113.5344, 4.9821, 18.972, 0.0, 652.1385, 13.158, 53.1142], [322.5331, 190.7203, 129.0816, 106.3368, 242.2493, 119.5776, 427.8484, 200.5021, 81.0365, 27.328, 136.7208, 0.0, 550.1665, 0.0, 92.9887], [248.8013, 46.2014, 104.7792, 2.6352, 216.8242, 368.3389, 639.007, 362.3829, 135.3038, 11.6741, 147.8592, 31.7988, 649.3825, 0.0, 27.1282], [275.5334, 50.9525, 148.0454, 0.0, 315.2083, 319.6466, 711.8877, 341.5658, 49.7885, 0.0, 138.0672, 0.0, 781.6705, 44.5471, 0.0], [367.9603, 157.8509, 46.3738, 0.0, 315.5242, 265.3232, 709.2848, 565.8981, 101.1394, 0.0, 0.0, 1185.08, 0.0, 101.867]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

