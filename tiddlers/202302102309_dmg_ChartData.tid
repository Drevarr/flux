created: 20230210230955000
creator: Drevarr
modified: 20230705163518964
modifier: drevarr
tags: ChartData
title: 202302102309_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Sumatra Satyricon", "Warrior Husky", "Elonith Tenebris", "Newtype Khan", "Ace Hammers", "Rozaalyna", "Arcanophage Farra", "Oo Dads Mad", "Smol Gluvs", "Seren Nightroad", "Dark Sidiuz", "Burnhard Riemann", "Kyllarian", "Panther B Me", "Jeckyll Mbs", "Kary\u00edna", "Fungus", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Be\u00eb", "Jupi Jupi Jupi", "Kosa\u00edr", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Soulbeast", "Berserker", "Scourge", "Spellbreaker", "Vindicator", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Vindicator", "Scourge", "Berserker", "Berserker", "Weaver", "Scourge", "Dragonhunter", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[327.4865, 283.0303, 288.2714, 702.7174, 131.7188, 0.0], [297.3694, 305.7186, 119.6214, 289.0942, 107.2344, 21.1566, 18.1705, 147.1566, 183.8028, 880.0141], [1125.2523, 234.7143, 184.65, 234.413, 219.4844, 85.8283, 119.375, 184.8313, 121.2535], [183.0114, 686.2289, 413.8803, 2597.0704], [492.1171, 251.6234, 159.4286, 631.9348, 131.4531, 0.0, 141.3864, 188.241, 89.5634, 653.0563], [742.7027, 217.4632, 132.7143, 677.4783, 113.8594, 122.8283, 0.0, 77.9759, 121.4366, 381.2394], [352.6847, 551.8355, 141.3857, 1120.9348, 187.2812, 0.0], [481.4054, 325.0519, 164.9071, 717.2754, 90.6562, 0.0, 168.5682, 40.0361, 113.8451, 1137.3521], [733.027, 370.9481, 348.8286, 1293.2899, 134.1406, 0.0, 722.1364, 110.7108, 0.0], [771.0991, 528.8918, 239.9357, 879.1087, 140.5781, 53.3535, 84.75, 130.3012, 83.5141, 1141.1268], [705.6216, 432.7316, 374.0143, 963.9928, 192.1406, 0.0, 143.7159, 128.8193, 300.5775, 1727.5775], [1308.5405, 573.013, 619.9714, 1483.3261, 549.9844, 146.6869], [982.5856, 408.8398, 781.0786, 945.0507, 331.9688, 100.0202, 147.7159, 294.759, 310.5493, 2115.1831], [764.1802, 952.303, 616.8786, 1401.6594, 229.9219, 151.399, 166.6477, 575.4578, 165.0986, 265.5775], [1043.6486, 787.619, 579.5, 1551.4565, 326.7031, 95.2879, 434.9318, 326.9639, 487.338, 1021.9155], [1480.0541, 580.8658, 760.1786, 1419.6087, 0.0, 103.5202, 566.375, 139.6867, 430.8803, 1566.4366], [884.4595, 698.8701, 628.3857, 1502.3188, 437.375, 71.9798, 627.7045, 278.494, 603.5, 2141.4225], [1493.982, 561.7359, 583.4143, 1846.7174, 60.1719, 57.4242, 292.7045, 158.1084, 615.331, 2408.4648], [623.8288, 714.7446, 550.9571, 2167.0145, 337.4219, 39.303, 46.8182, 396.4096, 573.838, 2670.9437], [2173.0631, 1039.1558, 985.1571, 2805.971, 336.875, 66.5354, 180.3182, 168.8193, 0.0], [1515.3153, 933.4719, 1216.2714, 2630.442, 370.7344, 575.1465, 177.5909, 414.7349, 298.9225], [1446.8649, 995.1775, 865.1, 2221.6159, 582.125, 207.0051, 164.5909, 536.0964, 579.1549, 2335.4789], [1692.3243, 2047.4805, 576.2357, 1955.7464, 185.1719, 387.3939, 275.5795, 520.7229, 1112.1901, 1950.4507], [2431.1171, 1288.4502, 1852.5786, 3920.1087, 938.2812, 250.5909, 141.6364, 330.7831, 436.1901, 3389.9296], [2314.6757, 1720.1905, 1533.5857, 3739.7174, 770.0469, 383.3687, 286.2045, 413.3373, 1293.338, 1940.169], [2487.3063, 1539.0823, 1390.8786, 5320.3188, 390.0469, 396.7626, 1201.9886, 272.3012, 695.1408, 5181.8028]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

