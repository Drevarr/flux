created: 20230703220627000
creator: Drevarr
modified: 20230705163541338
modifier: drevarr
tags: ChartData
title: 202307032206_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Fribble Bibble", "Miphest\u00f6", "Gamora Titus", "Cpt Z Brannigan", "Morv\u00e4rth", "Artakama Nahid", "Smol Daddy Tika", "Tootsie Pop Rocks", "Erma Starr", "Be\u00eb", "Morvtron", "Mike The Archmagus", "\u00c4rt\u00ebm\u00edza", "Govinda Ektar", "Lucky Leipreach\u00e1n", "Rahani Sunray", "Demon Sekhmet", "Morton Saltbringer", "Primal Clone", "Zaylen Harker", "Drumina", "Necrotic Windrunner", "Oo Dads Mad", "Xanvias Einzbern", "Arriasa", "Ryvalia Fazebringer", "Sub Train", "Koralia Danai", "Black Raspberry Pie", "Grasszanine", "Lord Erin The Wise", "Gabe Malhorn", "Drevarr Moonwillow", "\u00c1rkantor", "Ateriuz", "Crusader Siolith", "Kary\u00edna", "Sister Elon\u00edth", "Tegan Parker", "Mmathuss", "Inedible Plant", "Arcanophage Farra", "Glorious Gluvs", "Eibh\u00ebar", "Johosh The Mighty", "Solus Sanctus", "Mike The Archmagus", "Mistwalker Cael", "Newtype Khan"];
const professions = ["Berserker", "Scrapper", "Tempest", "Dragonhunter", "Scrapper", "Reaper", "Tempest", "Spellbreaker", "Scrapper", "Guardian", "Reaper", "Scrapper", "Tempest", "Druid", "Vindicator", "Scrapper", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Reaper", "Berserker", "Berserker", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Weaver", "Firebrand", "Scrapper", "Vindicator", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Vindicator", "Spellbreaker", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Weaver", "Vindicator", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 5, 2, 6, 5, 2, 1, 4, 1], [6, 0, 0, 2, 0, 0, 6, 2, 4, 1, 0, 0, 2, 3, 1], [3, 2, 2, 5, 3, 3, 0, 2, 7], [4, 0, 4, 5, 3, 11], [1, 4, 3, 2, 1, 4, 3, 4, 6], [1, 7, 5, 5, 2, 3, 5, 0, 3], [0, 0, 2, 2, 4, 0, 0, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 4, 6, 2, 1, 2, 0, 1], [4, 0, 0, 0, 0, 7, 3, 2, 2, 0, 6, 4, 0, 3, 2, 3], [0, 1, 1, 1, 2, 2, 0, 0, 1, 3, 2, 1, 0, 2, 3, 1, 0, 2, 3, 1, 3, 2, 2, 3], [6, 0, 4, 0, 1, 0, 19, 0, 3, 0, 3], [2, 0, 2, 2, 4, 3, 5, 4, 5, 4, 2, 3], [4, 0, 0, 0, 21, 0, 3, 1, 0, 4, 2, 1, 4], [4, 2, 5, 3, 5, 6, 8, 2, 5], [5, 0, 2, 4, 0, 0, 18, 2, 3, 1, 1, 5, 3], [2, 2, 4, 3, 2, 5, 4, 5, 4, 3, 11], [2, 4, 4, 2, 1, 20, 1, 1, 1, 1, 1, 0, 1, 5, 2, 1, 2, 0], [2, 3, 2, 2, 5, 2, 4, 3, 1, 2, 5, 5, 4, 9], [1, 2, 2, 0, 0, 38, 1, 1, 1, 1, 1, 2, 1], [0, 0, 3, 0, 0, 10, 0, 0, 4, 1, 3, 3, 3, 4, 2, 2, 1, 7, 3, 2, 4], [3, 0, 3, 0, 12, 0, 0, 0, 0, 2, 3, 0, 0, 2, 1, 2, 2, 3, 3, 6, 1, 1, 2, 6], [0, 0, 0, 1, 24, 2, 0, 1, 1, 3, 0, 1, 1, 3, 2, 5, 0, 0, 3, 2, 4, 4, 2], [4, 0, 2, 0, 0, 12, 3, 0, 1, 0, 5, 0, 2, 4, 0, 0, 0, 3, 4, 1, 2, 3, 2, 4, 7], [1, 0, 2, 0, 2, 3, 0, 3, 2, 1, 4, 6, 4, 4, 6, 4, 5, 4, 4, 4], [2, 3, 3, 0, 0, 21, 2, 4, 0, 2, 3, 0, 3, 3, 3, 2, 1, 0, 3, 1, 6], [2, 2, 3, 1, 11, 0, 0, 0, 0, 3, 6, 2, 1, 1, 1, 6, 3, 3, 5, 3, 5, 5], [2, 2, 0, 3, 3, 1, 9, 1, 3, 2, 1, 3, 2, 2, 0, 1, 1, 2, 3, 4, 4, 5, 5, 3, 0, 3], [3, 1, 2, 3, 0, 1, 7, 1, 1, 0, 4, 4, 3, 2, 3, 2, 2, 4, 3, 7, 4, 5, 0, 3, 5], [4, 3, 1, 2, 0, 14, 2, 1, 0, 0, 5, 2, 1, 2, 0, 2, 3, 3, 3, 5, 3, 4, 2, 1, 7], [0, 0, 1, 3, 0, 1, 6, 2, 1, 0, 1, 1, 5, 0, 3, 4, 4, 3, 4, 3, 7, 4, 6, 5, 2, 7], [4, 1, 5, 3, 1, 27, 0, 1, 0, 3, 4, 0, 1, 3, 2, 1, 0, 3, 3, 1, 1, 2, 2, 5], [2, 1, 1, 4, 5, 0, 16, 0, 1, 1, 1, 2, 1, 1, 0, 3, 3, 6, 3, 9, 4, 4, 4, 2, 6], [9, 4, 3, 2, 38, 1, 2, 1, 2, 5, 2, 4, 4, 2, 2], [4, 0, 4, 6, 2, 1, 23, 2, 1, 1, 0, 3, 2, 0, 1, 0, 1, 2, 4, 4, 4, 4, 5, 0, 4, 9], [5, 0, 2, 4, 1, 1, 18, 0, 3, 2, 1, 2, 4, 3, 3, 4, 2, 1, 7, 1, 8, 4, 3, 3, 4, 6], [1, 0, 3, 0, 0, 0, 43, 0, 0, 0, 0, 10, 8, 3, 3, 5, 4, 3, 5, 4, 2], [1, 1, 2, 0, 0, 19, 1, 0, 0, 0, 5, 3, 2, 3, 5, 4, 6, 6, 6, 6, 2, 7, 5, 4, 9], [5, 0, 1, 5, 3, 0, 31, 5, 3, 1, 2, 2, 3, 2, 2, 1, 3, 3, 2, 8, 4, 1, 3, 2, 7], [3, 2, 1, 2, 0, 0, 33, 0, 6, 2, 1, 5, 4, 2, 2, 1, 1, 2, 1, 4, 6, 5, 2, 4, 2, 9], [1, 0, 1, 7, 1, 36, 1, 0, 1, 2, 6, 6, 2, 5, 2, 3, 3, 4, 4, 7, 4, 2, 1, 5, 3], [5, 3, 5, 4, 1, 46, 5, 9, 4, 2, 2, 3, 2, 2, 2, 3, 0, 2, 2, 2, 2, 3, 4, 3, 8], [5, 2, 4, 5, 1, 3, 33, 4, 4, 0, 3, 4, 2, 2, 2, 3, 4, 5, 4, 8, 7, 4, 4, 5, 7], [7, 3, 2, 1, 1, 19, 0, 1, 0, 1, 7, 4, 5, 5, 3, 2, 2, 6, 8, 11, 11, 3, 8, 5, 14], [8, 0, 5, 8, 1, 1, 47, 0, 4, 3, 1, 2, 5, 0, 3, 2, 1, 3, 5, 4, 7, 5, 5, 5, 5, 5], [10, 1, 2, 10, 4, 29, 4, 4, 4, 1, 6, 0, 3, 2, 4, 2, 3, 6, 3, 8, 7, 5, 5, 4, 14], [5, 1, 3, 5, 2, 1, 57, 6, 4, 3, 0, 4, 1, 3, 3, 2, 2, 5, 4, 2, 7, 5, 5, 5, 5, 13], [6, 1, 0, 2, 2, 51, 0, 0, 0, 0, 6, 8, 3, 4, 4, 4, 6, 7, 2, 6, 6, 9, 8, 5, 14], [8, 4, 7, 3, 3, 57, 6, 5, 3, 3, 3, 3, 4, 3, 4, 4, 2, 3, 4, 6, 4, 7, 4, 4, 8], [13, 2, 4, 9, 4, 74, 7, 9, 6, 3, 4, 3, 2, 2, 4, 17], [6, 2, 5, 9, 2, 1, 56, 4, 3, 0, 1, 7, 6, 5, 5, 3, 2, 5, 5, 5, 2, 8, 8, 3, 5, 18], [17, 5, 7, 15, 4, 5, 54, 6, 8, 4, 2, 4, 3, 3, 5, 3, 2, 2, 7, 4, 4, 5, 4, 6, 2, 15]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

