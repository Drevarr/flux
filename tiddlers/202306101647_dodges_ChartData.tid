created: 20230610164704000
creator: Drevarr
modified: 20230705163534847
modifier: drevarr
tags: ChartData
title: 202306101647_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Xanvias Einzbern", "Blackout Angel", "Be\u00eb", "Tika Fiery", "Traidoruns Maximus", "Imalou", "Axunar", "Zhavashian", "Sakis Ranger", "Morton Saltbringer", "Venomina The Siren", "Trolit\u00e1", "Koralia Danai", "Lord Erin The Wise", "Lindirine", "Sakuras Blossom", "Lucky Leipreach\u00e1n", "Blanco Padre Guard", "Seikers Sorrow", "Cat Wigglebooty", "Tomitigas", "Tootsie Pop Rocks", "Arriasa", "Zarandor Kel", "Tegan Parker", "Zayde Sunsabre", "Drevarr Moonwillow", "Melli Dragonswrath", "Little Heks", "Morv\u00e4rth", "Yngvar The Burdened", "Kary\u00edna", "Elonith Requiem", "Johosh The Mighty", "Arcanophage Farra", "Air One Com", "Aronorf Xideliesi", "Solus Sanctus", "Scintilla The Storm", "Eibh\u00ebar", "Gestern Yesteryear", "Rosie Sunray", "Smol Gluvs", "Duke Silvver", "Newtype Khan", "Mistwalker Cael", "Xyntharos"];
const professions = ["Chronomancer", "Berserker", "Reaper", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Tempest", "Druid", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Weaver", "Reaper", "Scourge", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Tempest", "Scrapper", "Druid", "Dragonhunter", "Tempest", "Spellbreaker", "Scrapper", "Berserker", "Reaper", "Reaper", "Scourge", "Vindicator", "Reaper", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Vindicator", "Reaper", "Vindicator", "Spellbreaker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0, 3, 5], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 6, 0, 0, 3, 0, 1, 3, 2], [0, 1, 0, 1, 2, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 11], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 0, 7, 0, 0, 1, 5], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 10, 0, 0, 5, 0, 1, 0, 0], [2, 1, 1, 2, 4, 0, 5, 5], [0, 3, 4, 6, 1, 4, 2], [0, 2, 2, 3, 4, 9], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 1, 7, 2, 1, 2, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 15, 0, 1, 1, 0], [1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 0, 6, 1, 1, 0, 3], [2, 1, 1, 0, 0, 3, 0, 0, 0, 0, 0, 10, 0, 0, 4, 1, 1, 1, 1], [7, 0, 1, 10, 0, 1, 5, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 1, 0, 12, 0, 0, 3, 3], [1, 0, 2, 4, 3, 0, 4, 0, 0, 1, 2, 1, 0, 11], [10, 0, 1, 4, 3, 6, 9, 4], [5, 7, 13, 12], [1, 0, 0, 1, 1, 0, 0, 1, 0, 17, 2, 3, 8, 4], [0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0, 1, 1, 0, 6, 0, 1, 15, 1, 1, 3, 7], [0, 1, 3, 2, 3, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 10, 1, 0, 7, 0, 1, 4, 5], [0, 0, 5, 2, 1, 0, 0, 0, 0, 0, 11, 0, 1, 12, 2, 2, 2, 4], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 4, 0, 0, 11, 1, 0, 15, 1, 2, 1, 4], [0, 0, 1, 0, 3, 8, 1, 0, 0, 0, 2, 0, 1, 0, 1, 8, 0, 0, 14, 0, 3, 2, 0], [1, 3, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 12, 1, 1, 11, 1, 2, 2, 1], [1, 0, 11, 2, 1, 16, 3, 4, 6, 4], [0, 2, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 3, 3, 1, 11, 2, 1, 11, 2, 1, 7, 2], [0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 8, 0, 0, 16, 3, 4, 7, 6], [0, 0, 0, 3, 3, 2, 3, 0, 0, 0, 0, 0, 0, 1, 10, 1, 1, 17, 4, 3, 3, 3], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 17, 0, 1, 22, 0, 2, 5, 2], [0, 0, 0, 1, 2, 1, 2, 2, 0, 1, 0, 1, 1, 1, 13, 1, 3, 11, 4, 4, 2, 5], [2, 3, 3, 2, 17, 2, 1, 17, 1, 1, 3, 6], [4, 4, 2, 1, 7, 2, 1, 18, 5, 3, 8, 6], [2, 2, 5, 6, 4, 2, 3, 3, 0, 0, 1, 2, 2, 2, 1, 7, 2, 0, 15, 0, 2, 1, 2], [0, 0, 0, 1, 2, 1, 4, 0, 3, 2, 3, 0, 2, 4, 11, 1, 0, 13, 3, 2, 8, 6], [0, 1, 3, 1, 2, 0, 4, 3, 2, 0, 1, 0, 0, 3, 18, 0, 1, 16, 2, 1, 9, 8], [1, 3, 3, 1, 3, 2, 2, 0, 0, 1, 3, 0, 1, 10, 2, 1, 23, 4, 3, 9, 5], [2, 2, 3, 2, 3, 2, 6, 1, 3, 0, 2, 5, 3, 1, 6, 1, 1, 18, 3, 4, 7, 6], [2, 1, 3, 5, 3, 3, 5, 2, 1, 1, 1, 5, 1, 1, 19, 2, 1, 18, 2, 3, 6, 7], [0, 1, 4, 4, 4, 1, 7, 1, 2, 1, 2, 4, 2, 1, 0, 14, 2, 0, 22, 4, 7, 8, 8], [1, 1, 2, 4, 2, 0, 6, 0, 2, 0, 0, 1, 0, 20, 3, 0, 32, 3, 5, 8, 9], [2, 3, 1, 1, 3, 2, 9, 1, 5, 0, 1, 0, 3, 0, 15, 2, 2, 23, 8, 7, 7, 8], [2, 0, 3, 3, 4, 1, 5, 1, 2, 2, 0, 2, 1, 4, 0, 20, 4, 2, 24, 5, 6, 9, 5], [0, 3, 3, 4, 6, 0, 7, 1, 0, 0, 1, 3, 1, 17, 3, 3, 25, 2, 6, 11, 10], [5, 2, 4, 4, 4, 1, 9, 3, 3, 0, 1, 2, 1, 1, 1, 8, 4, 1, 29, 3, 4, 8, 9], [2, 2, 6, 4, 6, 3, 7, 3, 7, 3, 2, 4, 3, 2, 1, 7, 4, 1, 28, 1, 1, 8, 6], [2, 3, 5, 3, 5, 4, 15, 3, 1, 2, 1, 2, 3, 4, 0, 13, 4, 1, 29, 5, 6, 11, 6], [2, 1, 10, 6, 7, 3, 10, 3, 4, 1, 2, 3, 3, 0, 19, 3, 1, 29, 1, 3, 7, 11], [4, 2, 5, 5, 4, 4, 12, 3, 6, 1, 4, 5, 4, 2, 22, 2, 1, 36, 2, 5, 12, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

