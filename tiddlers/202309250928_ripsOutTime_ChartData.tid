created: 20230925092820000
creator: Drevarr
tags: ChartData
title: 202309250928_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Dinosaur Kale", "Morv\u00e4rth", "Grasszanine", "Morton Saltbringer", "Hawaiian Supreme", "Necrotic Windrunner", "Elonith Requiem", "Drac Tepes", "Necrophagya", "Illusive Heart"];
const professions = ["Harbinger", "Reaper", "Spellbreaker", "Chronomancer", "Spellbreaker", "Reaper", "Reaper", "Scourge", "Reaper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.0526, 3.0, 7.9565, 6.8889, 0.0, 2.0, 0.0, 8.1558, 3.0147, 2.0488, 0.0, 6.3636, 0.0, 0.0, 8.0359, 0.0, 8.7841, 0.0, 0.0, 8.5549], [0.0, 27.3565, 19.2593, 0.0, 7.0741, 0.0, 14.461, 19.0294, 14.7317, 6.6923, 0.0, 21.443, 14.8052], [17.2037, 2.973, 21.963, 0.0, 17.5455, 18.3088, 14.6341, 1.0171, 25.962, 27.7403, 0.0, 49.7561, 1.9815], [0.0, 13.5517, 29.0526, 13.2424, 34.5565, 39.7037, 3.973, 17.5741, 0.9815, 5.1169, 18.8824, 26.4146], [0.0, 45.0877, 25.5368, 4.3939, 17.6496, 4.8571, 13.58, 8.7838, 21.6165, 0.0, 13.4557, 15.5903, 1.9808, 15.55], [0.0, 13.6456, 11.5455, 17.6098, 0.0, 7.897, 13.4714, 13.2222, 0.0, 0.0, 12.9146, 0.0, 7.7007, 0.0, 6.79, 9.1622, 13.3008, 0.0, 8.4114, 11.8056, 0.0, 5.8333], [6.7167, 14.5154, 28.4343, 1.9909, 0.0, 15.1463, 0.9828, 16.3684, 21.6842, 1.9697, 12.0949, 3.0, 11.61, 3.6486, 21.9624, 0.0, 9.5127, 15.8819, 2.9808, 7.0917], [1.0684, 5.7879, 12.9494, 31.1299, 0.0, 37.561, 5.0185, 5.869, 27.3, 15.1454, 25.7677, 0.0, 1.0, 28.8415, 20.8246, 24.1474, 5.9091, 5.2117, 9.8163, 11.35, 18.9023, 0.0, 14.9684, 4.3264, 0.0, 4.6167], [19.3966, 18.069, 12.6579, 13.553, 21.087, 16.8333, 0.973, 3.0741, 18.2778, 14.4091, 14.0735, 18.5, 0.0, 17.0633, 21.4156, 4.1026, 4.122, 3.963, 10.6006, 17.6667, 7.2115, 9.0707, 0.0, 0.0, 9.1037, 0.0, 18.2807, 36.5263, 0.9697, 9.5036, 5.6327, 16.51, 2.3243, 17.2857, 2.7879, 11.6899, 10.8889, 0.0, 11.5833], [0.0, 12.908, 23.5, 11.0606, 29.513, 21.037, 4.2162, 11.5926, 0.0, 17.8377, 27.3235, 19.8171, 7.8547, 0.0, 23.5949, 16.9481, 0.0, 72.0976, 3.963, 11.961, 7.5333, 14.2643, 18.1818, 0.0, 0.0, 23.7622, 35.193, 22.3053, 6.5758, 13.4599, 13.7551, 27.23, 64.1622, 27.2331, 0.0, 21.4557, 22.9444, 3.0192, 16.475]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

