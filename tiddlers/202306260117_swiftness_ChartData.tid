created: 20230626011754000
creator: Drevarr
modified: 20230705163538085
modifier: drevarr
tags: ChartData
title: 202306260117_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Yummy Kiwi", "Miphest\u00f6", "Mmathuss", "Be\u00eb", "Primal Clone", "Tegan Parker", "Rozaalyna", "Seiker Novus Terra", "Imalou", "Tribal S", "Cerys Fireblade", "Etchery Of Ascalon", "Black Raspberry Pie", "Elon The Archmagus", "Daddy Demon", "Warrior Constantine", "Air One Com", "Grasszanine", "Johosh The Mighty", "Zayde Sunsabre", "Xanvias Einzbern", "Blancooo Padreee", "Newtype Khan", "Traidoruns Maximus", "Mr Juebacca", "Arcanophage Farra", "Tika Fiery", "Kosair", "Koralia Danai", "Drevarr Moonwillow", "Gabe Malhorn", "Solus Sanctus", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Tempest", "Firebrand", "Reaper", "Chronomancer", "Tempest", "Reaper", "Tempest", "Firebrand", "Druid", "Berserker", "Tempest", "Chronomancer", "Tempest", "Tempest", "Spellbreaker", "Firebrand", "Spellbreaker", "Berserker", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Herald", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.8621, 8.4685, 0.0, 16.9168, 204.4224, 0.0, 86.2752, 7.9002, 35.3379, 59.8442, 0.0, 0.0, 36.11, 77.0584, 70.9932, 72.0765, 23.6102, 24.4203, 68.9807, 32.6398, 35.4, 13.8672, 0.0], [976.0, 11.6856, 25.6645], [41.2857, 16.1212, 0.0, 70.564, 233.1971, 145.7093, 1.4651, 47.8906, 35.3821, 167.998, 246.2, 51.2568, 0.0], [86.2439, 72.8557, 886.2, 87.2856, 6.5472], [48.9888, 95.5261, 19.4498, 26.1954, 35.5133, 96.0417, 18.6866, 40.618, 185.2322, 38.1681, 9.2683, 38.3572, 66.5511, 66.5317, 34.5276, 322.2, 18.5112, 0.0], [8.6508, 0.0, 0.0, 16.6698, 18.576, 25.5763, 8.5518, 259.686, 0.0, 99.6489, 87.8572, 4.057, 186.9698, 0.0, 0.0, 18.446, 217.0216, 0.0, 53.7309, 22.0833, 8.5042, 6.2426, 0.0, 124.0, 6.1128, 0.0], [0.0, 132.494, 142.4736, 0.5174, 29.4774, 14.3262, 49.599, 33.407, 73.7289, 99.7331, 136.4654, 58.4734, 0.0, 113.804, 22.0167, 15.8584, 22.9001, 58.9509, 95.9256, 0.0, 0.0, 141.2, 0.0, 0.0], [39.9735, 67.7942, 0.0, 79.6446, 80.6112, 12.6773, 10.4438, 23.7006, 30.4597, 3.6072, 43.0689, 40.4144, 51.6826, 171.7493, 184.3004, 0.0, 37.72, 23.14, 17.4783, 22.5498, 0.5214, 41.2336, 37.0954, 24.2935, 262.6, 28.2096], [42.2334, 16.1924, 0.0, 0.0, 184.8096, 102.8597, 96.1893, 77.6412, 0.0, 84.3183, 126.4227, 61.4017, 108.0568, 127.2986, 0.0, 0.0, 312.6, 36.3744, 0.0], [0.0, 0.0, 33.71, 117.504, 20.8824, 29.8558, 33.7932, 56.8134, 86.2196, 148.238, 169.6521, 99.7979, 139.0792, 127.2667, 116.058, 102.782, 72.3573, 81.1538], [18.2736, 0.0, 253.7325, 216.09, 36.1746, 0.0, 44.113, 18.1364, 78.098, 85.4314, 173.4789, 46.1776, 0.0, 53.866, 0.0, 18.1035, 25.4163, 19.0296, 41.8577, 0.0, 0.0, 461.2, 0.0, 0.0], [48.1869, 44.5292, 136.2906, 73.2236, 365.04, 33.8923, 112.7254, 21.8106, 33.2561, 99.724, 35.2903, 0.0, 0.0, 144.6806, 9.7727, 66.9859, 25.4482, 74.2193, 63.7423, 0.0, 45.2709, 508.0, 0.0, 51.0621], [73.2888, 53.0442, 61.218, 256.7149, 83.1168, 35.8882, 15.9685, 40.1814, 0.0, 116.9334, 42.7004, 134.0384, 290.7241, 117.2669, 127.7397, 78.8214, 147.246, 208.1475, 47.774, 66.8532], [7.047, 198.497, 35.2004, 235.1059, 67.6512, 1.9589, 29.8936, 46.683, 0.0, 98.3713, 90.8459, 54.9261, 77.4104, 478.4074, 114.7608, 0.0, 73.186, 176.9197, 26.2885, 8.918, 8.9004, 9.2064, 0.0, 7.5762, 195.0, 7.6032, 0.0], [83.727, 80.4943, 70.2652, 121.6327, 70.374, 120.7693, 312.3658, 271.4639, 0.0, 192.786, 42.4607, 119.0514, 77.8732, 66.9203, 76.0305, 29.2682, 9.0169, 292.8, 76.1616, 0.267], [0.0, 72.9125, 85.7052, 147.929, 120.7872, 55.3661, 48.0946, 15.0822, 16.4149, 228.0051, 52.9354, 113.5971, 57.1309, 342.6338, 48.6367, 14.406, 54.648, 38.5292, 3.6378, 14.4918, 61.3343, 37.5276, 0.0, 1.4904, 398.4, 47.088, 50.9731], [86.2164, 228.8345, 212.5091, 118.5408, 0.0, 18.6173, 35.154, 2.508, 147.5195, 97.7238, 90.7373, 83.6153, 495.0115, 350.5669, 0.0, 79.304, 8.3124, 148.7503], [30.0834, 7.4448, 0.0, 83.9664, 49.5936, 11.8272, 27.9638, 126.819, 0.0, 44.6391, 0.0, 92.3931, 295.5886, 230.8878, 131.974, 227.3559, 76.9614, 66.3754, 147.6194, 0.0, 1.0324, 0.0994, 613.6, 55.0368, 6.3098], [25.3206, 112.5561, 259.2099, 489.2278, 0.0, 59.4216, 0.0, 60.5709, 50.1924, 108.6038, 212.33, 332.4291, 91.2622, 39.494, 36.0483, 0.0, 0.0, 7.8122, 403.6, 16.6104, 31.9546], [43.6671, 79.5198, 125.0941, 232.3894, 237.8592, 83.16, 92.2161, 23.1714, 29.5066, 67.3344, 20.4291, 134.9746, 120.0883, 392.1003, 210.1216, 33.2367, 51.474, 157.7113, 65.5934, 0.7007, 9.7941, 73.1437, 26.5551, 29.6465, 192.6, 12.5928, 24.7547], [137.7567, 48.4377, 241.1564, 163.0368, 11.4206, 42.525, 48.096, 84.3364, 181.0844, 188.4183, 473.0456, 0.0, 28.75, 187.5911, 47.433, 45.4818, 9.161, 79.3854, 27.6835, 16.7794, 467.6, 49.4424, 31.5985], [15.6492, 53.463, 125.4163, 261.6541, 163.3824, 19.441, 74.4313, 25.137, 28.541, 191.1816, 85.7693, 115.2355, 90.8797, 288.3243, 162.3046, 10.681, 189.704, 270.3783, 39.9017, 29.6842, 79.5819, 29.1795, 0.0, 15.0779, 217.2, 63.7632, 43.071], [41.796, 122.1878, 310.4397, 318.0845, 146.3616, 23.6914, 27.8124, 56.8134, 39.802, 80.9365, 37.7057, 235.1523, 161.7825, 569.7302, 254.1132, 21.1151, 39.192, 140.1878, 41.7774, 31.9137, 70.756, 116.5619, 64.4188, 56.2502, 262.6, 47.8379], [66.8979, 169.881, 197.7503, 212.6326, 101.8656, 15.1166, 73.2204, 98.4312, 33.9393, 180.5383, 187.2076, 506.7728, 211.761, 0.0, 70.242, 261.3919, 73.8067, 52.4569, 117.5667, 202.735, 101.8504, 58.5603, 370.8, 18.1872, 60.2004], [129.3246, 211.8046, 183.8956, 696.3037, 86.0544, 57.3619, 5.6382, 51.7482, 32.9677, 86.8734, 180.5863, 379.0992, 241.0846, 172.6877, 83.5548, 173.42, 190.3993, 81.5938, 176.2261, 205.1552, 74.3141, 75.5595, 0.0, 662.8, 83.9592, 6.3494], [60.7986, 162.0175, 423.4513, 506.7619, 32.4, 157.7822, 46.127, 19.5804, 86.852, 91.3824, 51.6253, 352.1043, 248.4246, 605.0141, 193.0441, 151.2836, 43.976, 151.1962, 91.1998, 44.5581, 106.8416, 132.0488, 42.6177, 98.0435, 480.8], [110.4678, 68.0269, 201.2139, 493.0556, 137.0304, 65.0126, 48.3217, 105.462, 33.5069, 242.2836, 211.7417, 162.7497, 174.268, 703.0824, 335.2655, 69.276, 215.3366, 123.6838, 112.335, 82.9707, 100.9189, 145.8607, 23.2502, 447.0, 101.196, 10.9878], [67.9671, 85.0103, 408.0663, 341.4222, 7.9488, 52.3723, 23.3851, 32.0166, 0.0, 9.018, 13.3874, 288.674, 295.7184, 608.1274, 192.4976, 80.262, 167.716, 939.4158, 31.3757, 176.5445, 17.1304, 7.919, 38.7762, 64.6709, 650.4, 26.892, 6.5867], [47.9811, 285.9948, 61.4836, 420.7649, 212.9699, 261.289, 371.5397, 273.2768, 416.0079, 264.776, 443.3665, 93.0471, 151.2875, 142.294, 310.2075, 197.6743, 0.0, 685.0, 71.172], [84.6612, 23.0323, 625.5513, 369.2052, 212.976, 153.6058, 74.734, 101.493, 35.0199, 50.6837, 224.6196, 387.3547, 485.6717, 529.949, 136.4248, 94.576, 359.456, 24.6401, 18.5685, 117.5294, 5.3054, 96.2081, 730.4, 92.9232, 14.0141], [58.3929, 89.7098, 180.3514, 301.2912, 175.7376, 29.6789, 140.8026, 145.2654, 50.9249, 165.33, 104.9702, 140.6701, 234.4257, 1041.7381, 677.362, 208.0021, 109.802, 278.6907, 64.485, 60.5468, 194.9886, 48.2554, 65.4513, 18.481, 621.6, 45.4032, 24.7547], [47.2635, 85.8013, 169.3967, 745.4488, 233.3664, 49.1938, 14.8333, 121.2233, 248.5717, 81.2696, 765.0021, 617.3858, 0.0, 80.27, 479.4244, 61.6998, 124.0557, 187.5034, 65.7318, 93.1348, 6.682, 920.2, 113.9616, 0.0], [69.2793, 158.8534, 308.6676, 667.1624, 117.4176, 70.261, 76.2854, 114.4206, 0.0, 114.9044, 83.231, 257.2319, 130.3794, 975.3214, 593.6139, 80.4061, 187.358, 701.1639, 168.1043, 117.8769, 181.694, 67.8384, 28.692, 21.4618, 377.0, 105.084, 49.7566], [111.0024, 201.0096, 623.0543, 735.8173, 362.3616, 123.4094, 87.7888, 38.6694, 147.6334, 162.1737, 9.1296, 665.4326, 231.0205, 0.0, 295.6457, 138.277, 365.976, 726.4381, 191.4655, 247.6019, 159.6479, 126.2754, 121.0104, 34.5152, 814.8, 146.9016, 54.8994]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

