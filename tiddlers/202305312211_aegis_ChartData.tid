created: 20230531221142000
creator: Drevarr
modified: 20230705163532377
modifier: drevarr
tags: ChartData
title: 202305312211_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Crusader Siolith", "Brace Stonebrow", "Blanco Padre Guard", "Drevarr Moonwillow", "Gavann", "Tika Fiery", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[99.7815, 120.6259, 27.6912, 710.4236], [64.311, 74.3045, 51.3216, 369.607, 199.5319, 0.0, 10.4586, 0.0, 0.0, 0.0, 70.3402, 163.763, 211.8742, 0.0, 21.3784], [361.3025, 16.1671, 30.8798, 128.6712, 115.385, 104.2399, 15.3314, 149.5427, 303.3898, 29.2019, 0.0], [101.1075, 36.2693, 0.0, 386.7256, 68.5961, 0.0, 0.7213, 0.3552, 127.4875, 169.6611, 20.7928, 85.7806, 280.612, 52.4621, 175.2066], [186.966, 93.5938, 33.1776, 558.6902, 121.5514, 1.472, 10.9995, 26.9952, 173.43, 1.9289, 19.6084, 212.502, 512.2988, 12.1651, 0.0], [331.5, 69.2784, 6.264, 669.1832, 181.8802, 13.7306, 0.0, 44.7552, 30.4325, 70.2434, 11.844, 321.3334, 400.1618, 58.601, 114.8755], [408.7395, 164.5022, 66.096, 1190.5236, 187.2427, 10.3043, 139.4775, 153.9792, 151.105, 82.9418, 56.0616, 34.5187, 274.4121, 0.0, 0.0], [425.9775, 209.0578, 68.2128, 1188.1892, 334.0428, 0.0, 164.5871, 255.2112, 201.5125, 232.5908, 176.344, 422.3664, 511.7597, 154.6855], [547.638, 252.119, 58.3632, 1196.7486, 544.0764, 17.766, 84.4348, 435.4752, 143.9375, 222.9464, 195.6892, 321.3334, 404.0704, 83.1283, 159.5077], [809.8545, 436.4539, 98.2368, 2493.8746, 767.9633, 40.3542, 80.5129, 245.6208, 283.645, 0.0, 204.1917, 55.9821, 90.6038], [739.908, 398.8262, 201.8736, 2115.7083, 725.5097, 80.7592, 175.271, 489.0216, 393.625, 288.4479, 202.7956, 406.77, 614.5968, 67.3024, 226.9113]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

