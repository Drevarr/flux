created: 20230403221011000
creator: Drevarr
modified: 20230705163524351
modifier: drevarr
tags: ChartData
title: 202304032210_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Riazera", "Smol Gluvs", "Mike The Archmagus", "Fribble Bibble", "Seren Nightroad", "Your Boy Sheep", "Rozaalyna", "Ateriuz", "Tootsie Pop Rocks", "Your Arch Nemesis", "Sister Elon\u00edth", "Be\u00eb", "Zenek Tryst", "Il Dim Snail Il", "Xyntharos", "Lord Erin The Wise", "Etch\u00e9ry", "My Birthday Girl", "Jeckyll Mbs", "Mistwalker Caelon", "Xanvias Tlesel"];
const professions = ["Soulbeast", "Soulbeast", "Scourge", "Weaver", "Scrapper", "Scourge", "Reaper", "Scourge", "Berserker", "Scrapper", "Scrapper", "Dragonhunter", "Scourge", "Weaver", "Dragonhunter", "Vindicator", "Weaver", "Berserker", "Scrapper", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[232.2651, 207.3947, 408.2418, 150.8747, 62.66, 83.2857, 160.0119, 107.6866, 463.1017, 471.0116, 0.0, 206.3704, 300.2838, 102.1351, 685.5345, 335.0222, 488.0541, 0.0], [0.0, 61.914, 139.4066, 259.9136, 127.8288, 243.6797, 379.5476, 221.1373, 1360.0, 510.7674, 192.0217, 136.963, 519.9757, 0.0, 1208.9483, 357.7556, 380.6216, 170.7121], [456.3429, 613.8246, 762.022, 562.4095, 11.6551, 25.6061, 33.5923, 182.8925, 169.0847, 314.3372, 0.0, 62.4444, 16.5162], [20.9565, 184.5926, 1697.4541, 1823.7931, 2578.8444, 1424.7297, 0.0], [331.5331, 0.0, 0.0, 437.7911, 62.2333, 123.4892, 270.9732, 334.4299, 1137.2542, 64.2674, 0.0, 160.5185, 539.5, 112.8919, 1892.7069, 139.0444, 104.7568, 2.2424], [585.3343, 601.7333, 1061.4835, 684.8747, 22.7792, 36.9091, 77.497], [1454.2326, 0.0, 721.037, 1372.5378, 1780.1034, 3234.3556, 1391.5405, 0.0], [568.6657, 1149.9684, 1105.5934, 755.8022, 3.7072], [1375.0501, 60.8933, 254.0476, 466.6756, 573.8597, 1065.6102, 345.8372, 10.5, 430.2222, 828.9243, 374.3514, 2131.7241, 3108.1556, 275.4595, 0.0], [774.6427, 1283.8965, 589.2308, 720.8273, 97.5881, 250.6667, 265.1101, 300.8269, 2212.0169, 538.6279, 0.0, 747.4216, 0.0, 1724.1207, 533.1778, 229.7568, 342.0455], [792.4294, 871.6456, 920.337, 93.4739, 226.0043, 384.5952, 636.5612, 2138.2373, 763.4767, 0.0, 566.037, 1345.3595, 1992.2759, 538.3243, 44.7576], [121.8511, 417.355, 1122.2738, 1615.6388, 1694.4576, 1988.4535, 0.0, 572.6296, 1746.0514, 635.5946, 2717.7931, 3384.7556, 614.5135, 870.1818], [1147.6484, 1105.4754, 1256.8462, 969.7549, 115.4988, 113.7619, 382.9851, 439.0657, 1187.3559, 994.1628, 78.9565, 220.5556, 814.5622, 520.7027, 1460.1379, 773.2889, 509.4865], [1549.9337, 1968.2737, 3725.6374, 1727.4986], [1007.9654, 1025.5158, 786.1868, 884.1783, 170.2233, 200.8355, 428.6726, 752.7731, 1197.1525, 1012.3837, 48.9348, 389.6296, 1082.6784, 308.8378, 1960.931, 1897.3333, 720.1081, 241.2121], [1246.7781, 1494.1947, 2582.9341, 881.0919, 44.7221, 218.2381, 193.5268, 511.5045, 1218.7797, 706.5116, 91.1739, 174.1852, 898.5162, 0.0, 2356.8793, 1506.1111, 79.8378, 0.0], [1295.6484, 1975.7579, 2719.9011, 1389.5432, 84.6303, 319.6147, 225.8185, 847.1164, 1705.4237, 82.7558, 238.8889, 218.773, 476.6486, 1523.0345, 1320.1778], [1454.2939, 1671.7842, 1861.4176, 1702.4485, 79.0397, 130.5584, 302.7202, 414.4925, 1661.8136, 1197.8837, 175.963, 1267.5892, 202.6486], [928.1095, 1730.0842, 1792.7912, 1104.5404, 68.6129, 180.3506, 1280.0208, 348.7015, 1256.6949, 1014.7558, 0.0, 683.4074, 1092.7703, 264.6486, 2301.6207, 344.5556, 343.027, 114.8333], [1076.8242, 1538.6281, 2403.3626, 1607.1337, 99.1266, 158.697, 432.8423, 649.9224, 1774.8983, 816.6395, 58.2609, 501.5556, 884.6703, 742.0, 2164.9483, 1422.6444, 1326.4324, 144.2273], [1854.3862, 2597.0123, 2061.9341, 2213.0975, 182.5236, 233.4199, 669.1042, 1048.409, 3134.2712, 1566.4884, 34.9348, 415.8519, 1627.7676, 1114.6486, 3660.2414, 2185.7333, 1434.2703, 207.2879], [2706.0144, 3310.1684, 5060.9231, 3625.6156, 106.0918, 125.4502, 513.7887, 1209.3493, 4933.2712, 1813.8721, 0.0, 120.9259, 1395.7054, 43.7568, 2785.6897, 2736.7111, 1746.8378, 83.7879]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

