created: 20230603215001000
creator: Drevarr
modified: 20230705163533590
modifier: drevarr
tags: ChartData
title: 202306032150_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Yngvar The Burdened", "Black Raspberry Pie", "Sygaldry Verdandi", "Hyde En Sikh", "Blanco Padre Guard", "Crusader Siolith", "Xanvias Einzbern", "Newtype Khan", "Aronorf Xideliesi", "Grasszanine", "Koralia Danai", "Tika Fiery"];
const professions = ["Scourge", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 9.2443, 0.0, 14.6583, 9.0614, 3.6183, 10.8147, 15.4816, 11.6506, 2.2932, 5.7283], [0.0, 8.938, 12.4948, 4.5347, 15.5072, 16.048, 12.5911, 7.4474, 5.6581], [3.9928, 36.1468, 23.364, 14.1081, 6.2899, 6.9498], [21.4623, 36.5304, 12.8227, 4.4211, 8.2426, 6.8986, 13.7959, 7.1847, 23.6857, 3.2378, 1.9768, 19.8331, 26.0072, 12.5911, 7.4038, 4.5209], [61.2864, 7.2653, 7.2403, 0.0, 37.9035, 8.022, 30.9702, 5.3673, 6.7806, 20.5768, 96.929, 69.2424, 42.8704, 12.9511, 34.5805], [68.0874, 37.9378, 16.9632, 0.0, 26.5248, 0.0, 16.0717, 7.995, 21.9875, 49.74, 7.0632, 80.3587, 78.2104, 56.3414, 3.145, 4.0856], [129.1103, 95.64, 29.9136, 0.0, 31.6397, 47.094, 0.0, 0.0, 18.2782, 0.0, 0.0, 82.8149, 69.0064, 46.8146, 24.6792, 13.338], [16.1472, 66.2688, 46.7309, 0.0, 117.1066, 0.0, 103.1571, 0.0, 0.0, 0.0, 26.588, 83.2182, 82.0336, 62.3487, 47.917, 5.3212], [63.2432, 100.9023, 72.0115, 0.0, 58.4928, 0.0, 7.1497, 7.1036, 59.7952, 21.0564, 5.6327, 14.739, 127.5768, 57.2536, 43.6289, 23.7401, 27.1253], [82.1165, 0.0, 93.5194, 0.0, 104.4863, 0.0, 42.2767, 0.0, 0.0, 0.3584, 196.6442, 133.2928, 30.3097, 13.9558, 0.0], [47.2306, 112.5896, 65.5181, 5.9699, 87.5578, 9.0354, 38.9508, 11.8304, 33.5175, 37.0714, 0.0, 79.6988, 105.1616, 74.1813, 5.2853, 11.5268], [76.7665, 132.9047, 80.2195, 10.3347, 18.4032, 8.022, 29.0419, 8.022, 72.7106, 30.8349, 1.7896, 5.8031, 39.9961, 99.0728, 58.7989, 68.3155, 36.9954]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

