created: 20230426221022000
creator: Drevarr
modified: 20230705163526747
modifier: drevarr
tags: ChartData
title: 202304262210_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Daddys Lil Orchid", "Grasszanine", "Newtype Khan", "Mistwalker Caelon", "Seren Nightroad", "High Sorcer Baradun", "Blancooo Padreee", "Zaylen Harker", "Black Raspberry Pie", "Primal Clone", "Kmpek", "Tika Rucola", "Miphest\u00f6", "Eibh\u00ebar", "Jupi Jupi Jupi", "Permanent Dawn", "Sygaldry Verdandi", "Zadie Miststep", "Drevarr Moonwillow", "Lucas Ryn", "Necrotic Windrunner", "Freylk Nasferatu", "Johosh The Great", "Ryvalia Fazebringer", "Bella Sassy", "Al Darasuum", "Tegan Parker", "P\u00edogre", "Koralia Danai", "Venom The Ferocious", "Sassy Daddy Demon", "Leana Deeb", "Mac Adaymia", "Oo Dads Mad", "\u00c1rkantor", "Xyntharos", "Aira Draugr", "Skylar Shadowmoon", "Etch\u00e9ry", "Raelyn Sunray", "Zefirokai", "Sister Elon\u00edth", "Long Poke", "Leana Deeb", "Sub Train", "Rey Peltrow", "Viral Marketing", "Ark Darkness", "Etch\u00e9ry", "The Incredible Mr E"];
const professions = ["Vindicator", "Spellbreaker", "Spellbreaker", "Vindicator", "Scourge", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Chronomancer", "Vindicator", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Scourge", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Dragonhunter", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Vindicator", "Weaver", "Vindicator", "Spellbreaker", "Vindicator", "Vindicator", "Herald", "Scrapper", "Berserker", "Firebrand", "Tempest", "Firebrand", "Reaper", "Catalyst", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[323.8548, 238.7746, 325.9231, 179.0977, 79.7795, 95.3971, 238.6054, 243.6491, 174.2906, 620.2153, 142.24, 303.0058, 89.4314, 37.6842, 94.8269, 372.7027], [289.1739, 337.7682, 135.3077, 9.5528, 38.9592, 166.0897, 263.7032, 110.4514, 496.4839, 22.6667, 368.9865, 97.0667, 0.0, 703.0781, 366.9835], [272.9388, 272.3491, 45.2, 42.024, 232.7164, 68.015, 222.5581, 163.6598, 577.6411, 82.3415, 403.8671, 139.1306, 20.1951, 556.8571, 388.1017], [78.4839, 248.9717, 284.039, 26.782, 18.1111, 31.0132, 127.0403, 285.1894, 102.6837, 472.9754, 155.5161, 433.0809, 117.551, 23.7895, 312.5263, 360.9767], [178.2031, 426.3427, 290.3718, 28.1495, 120.0, 42.7, 374.3396, 431.8945, 247.2737, 1396.1707], [30.0328, 310.2604, 224.5647, 366.3524, 46.2846, 59.614, 135.6096, 181.6239, 97.462, 496.7683, 61.6829, 638.8864, 78.583, 6.7778, 375.7294, 359.709], [115.0517, 292.5091, 235.6266, 19.9769, 80.9024, 306.7164, 323.4855, 183.3446, 189.9948, 474.0752, 30.075, 337.1618, 92.5168, 2.3421, 538.3167, 379.228], [36.6393, 295.4162, 287.026, 339.4404, 1.1138, 37.2143, 78.5556, 161.9034, 221.1135, 455.8603, 94.8214, 430.4162, 93.3028, 0.0, 732.4839, 376.5704], [59.35, 305.1284, 277.974, 30.2784, 32.5902, 79.56, 233.4765, 213.2621, 113.6392, 459.8225, 141.5238, 430.4205, 81.6163, 0.0, 298.0896, 374.3228], [38.7667, 222.3248, 187.013, 46.6641, 0.0, 238.6053, 34.2292, 216.2616, 201.5473, 501.871, 113.6744, 424.289, 86.0776, 2.3947, 612.6418, 340.1293], [371.923, 164.5128, 497.2123, 36.1395, 432.1462, 132.2612, 6.4054, 350.8471, 526.5489], [58.2063, 255.0656, 158.7672, 102.6641, 80.9248, 63.0, 58.9726, 193.1957, 163.1522, 467.0594, 21.561, 301.6034, 112.249, 0.0, 481.4928, 402.3841], [76.3725, 274.7165, 279.0086, 123.5189, 12.6508, 65.875, 191.3704, 160.7356, 91.8587, 539.3052, 111.9286, 389.267, 75.5021, 0.0, 583.6462, 304.6336], [99.9836, 222.1957, 203.5065, 192.9189, 34.512, 201.5789, 106.7785, 238.1206, 119.16, 402.2079, 24.5, 357.5607, 76.3959, 0.8108, 486.3516, 345.865], [13.6885, 175.033, 176.787, 66.0092, 17.6829, 64.5333, 109.3, 243.1363, 79.8407, 360.8184, 131.6098, 307.1257, 67.6255, 0.0, 697.9403, 313.4337], [304.301, 663.7887, 121.4375, 553.948, 43.5476, 0.0, 620.0274, 588.1924], [0.0, 149.1673, 233.6667, 29.5048, 0.0, 48.4464, 166.2044, 207.3176, 118.7717, 392.7525, 218.8293, 385.5405, 95.9795, 0.0, 544.3043, 280.3184], [28.2881, 168.629, 157.3707, 78.0752, 23.104, 349.6892, 151.3333, 143.9761, 122.9026, 497.151, 161.0667, 335.341, 92.1592, 0.0, 365.6875, 280.4311], [10.2419, 189.2638, 229.2833, 211.1062, 57.3361, 118.0253, 69.5753, 244.1677, 127.3949, 350.4403, 7.0, 235.25, 45.2041, 2.1707, 396.1014, 285.5131], [0.0, 0.0, 254.0882, 44.1862, 252.7352, 128.5949, 455.032, 100.4524, 345.1218, 58.0571, 0.0, 321.17, 516.5335], [180.1134, 648.7284, 172.9767, 484.4104, 164.6, 6.0, 521.6771, 489.8675], [93.0952, 392.0938, 347.8571, 101.7778, 80.6535, 8105.8182, 241.8428, 346.1734], [52.7167, 144.4289, 111.3377, 84.8067, 1.5635, 35.3929, 39.5655, 199.6328, 103.0884, 321.1592, 150.4419, 340.6645, 79.9588, 8.0263, 601.8235, 331.2954], [73.2034, 212.5066, 303.5631, 36.3615, 26.8455, 156.9697, 187.7181, 175.8198, 93.398, 287.6377, 47.8837, 238.2353, 50.8776, 3.2368, 266.4468, 279.8181], [23.25, 133.7871, 240.8371, 63.6273, 20.5113, 142.7794, 66.184, 140.0095, 138.7449, 488.2562, 24.9048, 247.4327, 81.7878, 0.0, 330.6761, 257.0468], [151.8564, 539.0035, 42.5349, 527.2286, 118.177, 0.0, 722.9091, 514.9561], [52.431, 204.8345, 120.9032, 71.5963, 44.1148, 65.9559, 36.9012, 122.9374, 116.1905, 494.0682, 174.0645, 194.3678, 40.249, 0.0, 398.6809, 227.9175], [177.3878, 694.3045, 140.3824, 690.7457, 134.2828, 0.0, 398.14, 335.896], [27.3621, 154.4396, 250.5093, 52.3619, 3.3361, 36.64, 43.0063, 157.9761, 81.0718, 266.3317, 185.8788, 276.4682, 71.8898, 0.0, 565.6721, 212.8585], [177.8722, 558.4604, 77.7308, 395.7879, 55.1481, 0.0, 578.4222, 415.4446], [50.8852, 361.433, 415.837, 971.6593, 75.1575, 147.7838, 175.5244, 215.1983], [301.5253, 155.2162, 601.1762, 248.2121, 603.4138, 178.4046], [60.8305, 119.9498, 140.9142, 49.7008, 21.1203, 75.7595, 93.2349, 173.8556, 108.4022, 304.7945, 94.0645, 155.341, 57.0332, 0.0, 477.9836, 207.9927], [31.0656, 403.4014, 243.3476, 182.7091, 55.9365, 85.3636, 115.6159, 240.1663], [6.7424, 166.0904, 89.308, 106.1092, 10.4538, 21.859, 45.4354, 97.4129, 103.0052, 253.8479, 150.5294, 212.4343, 50.5381, 0.0, 417.209, 158.8516], [65.6066, 241.9987, 295.1064, 55.1651, 3.6429, 83.6974, 84.6918, 247.053, 263.1173], [26.6667, 239.9059, 185.3839, 85.1912, 26.9492, 158.9857, 103.3899, 305.9238], [205.6102, 329.9166, 383.9217, 71.6165, 80.065, 265.0882, 212.7914, 89.3424], [176.8222, 115.0122, 419.9765, 520.7235], [325.4737, 137.7037, 77.4128, 4.0873, 141.7465, 122.2683, 211.6582, 100.9783], [25.8922, 163.5, 606.7069, 67.1811, 480.5538, 404.7861], [82.6631, 348.0051, 36.7667, 337.3851, 62.3372, 0.0, 293.0353, 304.5471], [378.9472, 573.342, 27.7692], [291.2834, 427.6104, 113.5769, 34.3445, 161.6375, 200.7902], [43.7705, 13.254, 123.9615, 73.0207, 242.9397], [228.3771, 208.2017, 73.9667], [59.5956, 7.64, 41.129, 50.1056, 200.3556], [525.2787], [312.5], [13.7576]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

