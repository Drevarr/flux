created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Tikonis", "Bearah", "Starla Rayn", "Traidoruns Maximus", "Mort\u00e4rion", "Fourty Eighth", "Deffray N", "Sygaldry Verdandi", "Xanvias Einzbern", "Itty Bitty Mew", "Pr\u00e6tor Lightbringer", "Sofya De Nova", "Krytsmancer", "Fqa Rev", "Glorious Gluvs", "Konoko K", "Bella Sassy", "Tegan Parker", "Koralia Danai", "Keypek The Drunk", "Christie Raskae", "Gabe Malhorn", "Charr Surethang", "Drevarr Moonwillow", "Melody Phoenixstorm", "Zenady", "Mistwalker Cael", "Be\u00eb", "Zatoshin", "\u00c4rt\u00ebmiza", "Govinda Ektar", "Hyde En Sikh", "Belvyn Brightblade", "Philip Poundhouse", "Latedoctor", "Tootsie Pop Rocks", "Venomina The Fierce", "Nsidejob", "Rhaevynn", "Seiker Novus Terra", "No Reserv\u00e9", "Kos\u00e1ir", "Matrim The Mad", "Lord Erin The Wise", "Serene Azura", "Crusader Siolith", "Rina Of Theros", "High Sorcer Baradun", "F\u00e4dscelsior"];
const professions = ["Willbender", "Holosmith", "Firebrand", "Reaper", "Firebrand", "Scrapper", "Scourge", "Scourge", "Firebrand", "Berserker", "Catalyst", "Firebrand", "Tempest", "Reaper", "Herald", "Berserker", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Willbender", "Firebrand", "Berserker", "Scrapper", "Scrapper", "Berserker", "Herald", "Reaper", "Vindicator", "Spellbreaker", "Vindicator", "Chronomancer", "Firebrand", "Herald", "Reaper", "Scrapper", "Spellbreaker", "Catalyst", "Reaper", "Tempest", "Vindicator", "Virtuoso", "Catalyst", "Weaver", "Dragonhunter", "Firebrand", "Reaper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20, 0, 0, 0], [11, 5, 0, 1, 3], [0, 23, 0, 0, 0], [7, 16, 0, 0, 0], [14, 0, 0, 0, 0, 10], [0, 24, 0, 0, 0, 1], [0, 0, 23, 0, 0, 2], [25, 0], [0, 2, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0], [0, 10, 0, 0, 0, 6, 0, 0, 0, 0, 4, 11, 0, 0, 0, 0], [30, 0, 0, 0, 4], [22, 0, 0, 0, 7, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0], [0, 0, 0, 0, 18, 21, 0, 0, 0, 0], [39, 0, 0, 0, 0], [41], [0, 0, 0, 14, 0, 0, 0, 7, 26, 0, 0, 0, 0], [46, 0, 0, 0, 3], [0, 15, 0, 0, 0, 16, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0], [0, 5, 0, 0, 0, 25, 0, 0, 0, 0, 18, 3, 0, 0, 0, 0], [0, 0, 0, 11, 23, 9, 9], [43, 3, 3, 0, 5], [0, 21, 0, 0, 0, 13, 0, 0, 0, 0, 18, 12, 0, 0, 0, 0], [44, 0, 0, 0, 20], [0, 5, 0, 0, 0, 20, 0, 0, 0, 0, 8, 32, 0, 0, 0, 0], [0, 18, 48, 0, 0], [1, 0, 0, 0, 33, 0, 0, 0, 1, 1, 28, 0, 0, 0, 6], [0, 23, 10, 10, 0, 8, 0, 0, 0, 0, 4, 13, 3, 0, 0, 0], [0, 13, 0, 0, 0, 50, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0], [34, 0, 0, 0, 0, 3, 19, 20, 0, 0], [0, 82], [7, 0, 0, 0, 25, 0, 0, 0, 0, 22, 28, 0, 0, 0, 0], [0, 29, 7, 0, 0, 23, 0, 0, 0, 0, 5, 20, 0, 0, 0, 0], [0, 81, 0, 0, 0, 5], [0, 0, 0, 23, 8, 56], [0, 24, 0, 0, 0, 8, 0, 0, 0, 0, 14, 30, 22, 0, 0], [0, 3, 0, 0, 0, 28, 0, 0, 0, 0, 26, 0, 43], [23, 0, 0, 5, 0, 0, 0, 29, 6, 38, 0, 0, 0], [18, 0, 0, 0, 18, 0, 0, 0, 7, 30, 21, 11, 0, 0, 0], [56, 0, 0, 0, 5, 0, 0, 0, 0, 18, 28, 0, 0, 0, 0], [0, 1, 21, 0, 6, 38, 0, 0, 0, 0, 44], [4, 0, 0, 0, 17, 0, 0, 0, 19, 25, 54], [0, 23, 0, 2, 0, 0, 0, 42, 44, 9, 0, 0, 0, 0], [19, 0, 0, 0, 20, 7, 74, 0, 0], [5, 0, 0, 27, 0, 0, 0, 32, 16, 24, 20, 0, 0, 0], [18, 0, 0, 0, 38, 0, 0, 0, 0, 65, 10, 0, 0, 0, 0], [0, 10, 38, 0, 0, 52, 0, 0, 0, 12, 13, 8, 0, 0], [0, 9, 0, 0, 0, 10, 0, 0, 0, 0, 52, 43, 20, 0, 0], [31, 0, 0, 13, 41, 59, 0, 0, 0, 0], [20, 0, 0, 43, 17, 79]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

