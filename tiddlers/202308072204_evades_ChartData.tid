created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Daphne Agla\u00e9", "Necrotic Windrunner", "Leo Vala", "Tootsie Pop Rocks", "Jimbo One Eye", "Bella Sassy", "Morton Saltbringer", "Mort\u00e4rion", "Jmbrage Gaurdian", "Rina Of Theros", "Aira Draugr", "Newtype Khan", "Zaylen Harker", "Dark Angel Hela", "Luke The Ghastly", "Belvyn Brightblade", "\u00c1rk\u00e1ntor", "Keypek The Drunk", "Zefirokai", "Tegan Parker", "Jimbo The Pleb", "Jmbrage Rev", "Klengah", "Govinda Ektar", "Rahani Sunray", "Sub Train", "Legacy Of Mathus", "Tribal S", "Glorious Gluvs", "Be\u00eb", "Amiti\u00e9l", "Venomina The Sly", "Solus Sanctus", "Black Raspberry Pie", "Koralia Danai", "Arriasa", "Xenryeth", "Drevarr Moonwillow", "Xanvias Einzbern", "Zaedy Zae", "Blancooo Padreee", "Lord Erin The Wise", "K\u00e2 \u00d4tik R\u00e6j", "Arcanophage Farra", "Eibh\u00ebar", "Mistwalker Cael", "Inedible Plant", "Ryvalia Fazebringer", "Rockdemon", "Mike The Archmagus"];
const professions = ["Scourge", "Scourge", "Berserker", "Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Scourge", "Herald", "Spellbreaker", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Scourge", "Scrapper", "Catalyst", "Tempest", "Berserker", "Vindicator", "Druid", "Vindicator", "Chronomancer", "Firebrand", "Berserker", "Druid", "Berserker", "Scourge", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Tempest", "Scrapper", "Berserker", "Druid", "Spellbreaker", "Weaver", "Berserker", "Spellbreaker", "Chronomancer", "Vindicator", "Vindicator", "Chronomancer", "Daredevil", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 3, 4, 0, 0, 7, 0, 0, 0, 1, 0, 1, 1, 5, 2, 0, 0, 20], [0, 0, 1, 6, 0, 0, 4, 0, 0, 0, 4, 0, 3, 1, 12, 1, 0, 0, 23], [0, 11, 45], [0, 0, 3, 5, 0, 0, 15, 1, 4, 3, 0, 0, 2, 0, 7, 0, 2, 0, 16], [0, 0, 3, 1, 0, 0, 14, 13, 11, 0, 19], [0, 0, 0, 0, 0, 0, 5, 0, 0, 8, 6, 0, 0, 9, 0, 1, 0, 0, 6, 29], [0, 0, 1, 1, 0, 0, 0, 13, 12, 0, 0, 10, 19, 1, 1, 0, 3, 3], [0, 0, 0, 10, 0, 3, 14, 1, 5, 14, 1, 0, 4, 15], [27, 26, 15, 1, 0], [0, 0, 1, 0, 0, 0, 3, 4, 3, 0, 10, 0, 3, 5, 0, 0, 0, 25, 17], [0, 0, 0, 23, 0, 1, 24, 30], [0, 1, 4, 3, 0, 3, 1, 2, 0, 1, 2, 0, 0, 2, 18, 9, 0, 1, 19, 13], [0, 0, 0, 11, 0, 0, 7, 6, 0, 0, 5, 0, 4, 0, 4, 9, 0, 0, 0, 33], [9, 0, 29, 46], [4, 2, 14, 0, 8, 11, 0, 5, 0, 7, 34], [0, 0, 5, 0, 3, 9, 25, 17, 27], [0, 0, 0, 0, 0, 3, 0, 2, 1, 30, 0, 0, 1, 20, 3, 4, 0, 7, 17], [0, 0, 0, 3, 0, 1, 5, 4, 1, 0, 2, 0, 0, 27, 20, 1, 1, 0, 0, 8, 16], [2, 93, 6, 2], [0, 0, 2, 12, 0, 0, 11, 22, 5, 0, 11, 2, 5, 1, 27, 6, 0], [6, 0, 8, 15, 4, 20, 0, 23, 37], [59, 0, 1, 65, 0], [0, 0, 6, 2, 0, 0, 3, 12, 7, 6, 17, 0, 2, 4, 16, 0, 0, 0, 0, 52], [15, 2, 0, 17, 20, 50, 0, 23], [0, 0, 7, 9, 1, 1, 22, 0, 18, 19, 2, 5, 28, 0, 3, 14], [0, 0, 1, 0, 0, 0, 0, 16, 0, 17, 0, 0, 2, 12, 15, 2, 22, 16, 0, 6, 22], [0, 0, 2, 0, 20, 0, 19, 20, 0, 3, 14, 14, 10, 3, 26], [0, 0, 0, 3, 0, 0, 12, 3, 0, 13, 42, 0, 0, 6, 1, 15, 1, 1, 0, 0, 42], [0, 0, 3, 5, 0, 5, 11, 10, 0, 10, 7, 0, 8, 14, 6, 4, 14, 15, 0, 12, 17], [0, 0, 0, 11, 0, 0, 5, 1, 2, 13, 23, 0, 0, 9, 15, 4, 9, 51], [3, 0, 15, 32, 16, 8, 18, 18, 10, 4, 0, 11, 9], [4, 0, 1, 5, 0, 0, 1, 3, 5, 15, 4, 0, 12, 24, 4, 22, 0, 18, 0, 25, 8], [0, 0, 3, 10, 0, 0, 13, 7, 5, 6, 13, 0, 2, 18, 6, 18, 12, 17, 0, 15, 14], [1, 0, 1, 9, 0, 0, 1, 20, 0, 3, 8, 0, 0, 30, 11, 1, 10, 0, 35, 32], [0, 0, 0, 6, 0, 0, 9, 7, 2, 0, 29, 0, 0, 4, 8, 4, 19, 17, 0, 37, 23], [0, 0, 2, 2, 0, 0, 3, 1, 13, 16, 50, 0, 7, 7, 22, 31, 3, 0, 10, 0], [0, 0, 4, 11, 0, 4, 16, 13, 0, 8, 11, 2, 16, 14, 1, 8, 22, 18, 22], [0, 0, 1, 5, 0, 0, 0, 9, 0, 1, 22, 0, 0, 8, 23, 54, 7, 19, 0, 9, 15], [0, 0, 2, 0, 0, 4, 18, 13, 6, 32, 31, 0, 3, 18, 9, 10, 0, 1, 27], [0, 0, 1, 9, 0, 2, 1, 6, 4, 18, 45, 0, 0, 18, 8, 22, 0, 8, 0, 6, 35], [0, 0, 10, 5, 0, 2, 7, 17, 1, 24, 40, 6, 11, 36, 0, 2, 24, 0, 0, 6], [8, 0, 0, 11, 0, 0, 10, 11, 1, 24, 35, 0, 9, 3, 24, 4, 46, 27, 30, 2], [0, 0, 0, 25, 0, 10, 25, 19, 1, 23, 21, 0, 5, 19, 35, 32, 3, 0, 32, 29], [4, 3, 12, 2, 9, 11, 62, 7, 36, 14, 1, 8, 52, 11, 0, 8, 28, 0, 17, 0], [0, 0, 1, 22, 0, 3, 12, 14, 0, 6, 32, 0, 6, 12, 8, 122, 33, 13, 0, 42, 34], [1, 1, 7, 15, 4, 4, 23, 42, 10, 39, 33, 0, 2, 16, 23, 62, 59, 54, 11, 20], [0, 0, 5, 45, 6, 7, 24, 54, 3, 38, 53, 2, 7, 47, 40, 11, 0, 43, 48, 34], [1, 1, 1, 31, 0, 2, 10, 41, 16, 74, 92, 30, 56, 7, 31, 13, 30, 55, 31], [62, 35, 59, 62, 112, 2, 105, 0, 45, 49], [1, 0, 2, 24, 0, 9, 13, 16, 0, 32, 46, 0, 7, 34, 31, 63, 81, 29, 16, 181]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

