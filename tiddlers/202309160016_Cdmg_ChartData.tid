created: 20230916001624000
creator: Drevarr
tags: ChartData
title: 202309160016_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Legendary Sakis", "Bella Sassy", "Gamora Titus", "Mistwalker Cael", "Brutal Araden", "Amiti\u00e9l", "Drevarr Moonwillow", "Koralia Danai", "Kosa\u00efr", "Emerald Vermilion", "Mort\u00e4rion", "Solus Luxes", "Sub Train", "Necrocorruption", "Rod Reaper", "Sister Elonith", "Necrophagya", "Be\u00eb", "Keypek The Drunk", "Hey Yey Yeah Ah Ah", "Unbreakable Nemesis", "Mister Jekyll", "Rina Of Theros", "Cedryn X", "Trinavartha", "Lord Erin The Wise", "Do Pie", "Glorious Gluvs", "Charr Surethang", "K\u00e2 \u00d4tik R\u00e6j", "Legoh Brave", "Brutal Araden", "Mike The Archmagus", "Jimbo The Pleb", "Xanvias Einzbern"];
const professions = ["Druid", "Firebrand", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Reaper", "Berserker", "Scourge", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Reaper", "Berserker", "Catalyst", "Weaver", "Firebrand", "Berserker", "Berserker", "Berserker", "Tempest", "Renegade", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 3.9343, 0.0, 0.0, 0.0, 3.8491, 0.0, 0.0, 19.6377, 5.2025, 3.8333, 23.3333, 1.9805, 0.0, 4.0652, 6.05, 3.9394, 6.361, 11.738, 11.8205], [8.7664, 3.2466, 11.8102, 42.1224, 0.9143, 10.234, 15.717, 1.4113, 10.6757, 2.4493, 5.4684, 7.5379, 9.6667, 6.1948, 0.0, 1.7078, 0.0, 0.0, 0.0, 0.0, 1.9668, 1.8996, 6.4203, 10.6788], [34.3077], [8.6591, 0.0, 3.4026, 0.0, 10.7792, 35.8261, 19.9783, 0.0, 0.0, 0.444, 7.6157, 1.2029, 18.5857], [0.0, 13.7943, 10.0811, 12.6135, 13.4937, 33.4242, 28.6944, 24.2857, 9.1897, 29.1981, 46.0725], [4.635, 18.1735, 9.8429, 5.8085, 107.7736, 3.0851, 7.2072, 7.7005, 6.6962, 9.4545, 7.8056, 6.7792, 3.7241, 2.8734, 0.0, 5.3043, 0.0, 0.0, 2.1037, 9.6223, 6.9565], [12.3785, 13.6164, 11.146, 23.5816, 7.2429, 35.4681, 22.6604, 8.4184, 3.9099, 6.6667, 6.9241, 16.9167, 39.75, 6.1299, 0.0, 3.0812, 0.3043, 13.3261, 13.525, 0.0, 1.5851, 0.7052, 12.4058, 11.1053], [1.0327, 106.3973, 14.3139, 25.5816, 11.4143, 0.0, 46.5, 20.3121, 4.7928, 2.9517, 0.0, 4.3561, 19.5, 1.1429, 4.6724, 14.3734, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8712, 0.0, 4.8934], [3.8505, 59.5342, 26.6204, 10.7143, 43.6857, 47.2358, 9.8652, 14.3964, 0.2319, 0.0, 42.9697, 0.0, 17.8701, 0.0, 1.3279, 0.0, 0.0, 0.0, 0.0, 0.2009, 5.9042], [9.6215, 35.9178, 14.0438, 28.7755, 14.9714, 34.5957, 39.3491, 2.7234, 3.5766, 14.7101, 5.9873, 22.3258, 24.6667, 12.7403, 2.3276, 6.5195, 1.9855, 6.6087, 20.25, 0.0, 0.0, 11.4896, 3.7358], [14.0234, 16.3151, 33.3723, 22.0306, 53.0429, 29.5745, 18.9245, 1.2837, 6.7387, 1.6184, 0.0, 19.1439, 60.3889, 41.6883, 7.3621, 4.8442, 38.3913, 5.1304, 2.4125, 0.0, 2.1515, 6.166, 1.9672], [19.5607, 19.3836, 24.7518, 19.1939, 9.9, 34.6383, 0.0, 17.8156, 24.2252, 0.9034, 7.8734, 20.5303, 0.0, 0.7662, 20.3448, 8.0649, 46.1304, 0.0, 8.8, 0.5975, 5.6987, 6.3043, 13.2294], [6.4439, 14.411, 49.9854, 17.1531, 63.3857, 10.3404, 13.4906, 11.6738, 16.4144, 6.256, 4.4051, 18.6667, 34.5278, 13.5455, 0.0, 0.4675, 0.0, 3.3817, 3.3515, 20.8551, 15.4359], [13.1262, 31.6986, 19.9781, 18.3673, 2.0857, 40.5957, 23.0755, 22.0142, 2.7928, 34.1739, 0.0, 3.197, 113.0833, 10.8182, 0.0, 3.2922, 6.9275, 4.2609, 5.1375, 5.6017, 14.0961, 4.695], [14.1898, 31.6633, 9.1714, 18.6809, 44.566, 37.2979, 0.5766, 7.7729, 7.7595, 38.0606, 11.8889, 6.4286, 9.3448, 5.3442, 4.3043, 8.6522, 13.325, 0.0, 0.0, 3.0456, 13.1594, 9.0, 13.1039], [16.1125, 5.2905, 39.8406, 2.087, 55.9757], [0.0, 85.3684], [9.3505, 11.3425, 58.0292, 20.4388, 34.1, 79.0283, 26.4823, 7.1712, 31.2464, 0.0, 48.803, 25.0833, 39.3766, 0.0, 22.2662, 33.1304, 23.3913, 22.9625, 0.0, 0.0, 12.9793, 13.9301], [10.0234, 13.4247, 39.4599, 25.6735, 0.8857, 4.3617, 0.2453, 29.227, 10.7387, 18.8889, 5.2785, 53.0682, 39.3333, 30.013, 1.9828, 13.3182, 7.1884, 26.0435, 11.6875, 0.0, 0.0, 9.2988, 12.0175, 3.7101, 27.6721], [0.5045, 6.2415, 34.4051, 188.7803, 0.0, 0.0909, 60.8103, 1.7468, 60.0435, 89.9783, 30.5875, 4.64, 20.3939, 8.8797, 12.5917, 6.8551, 31.6167], [21.1461, 46.3623, 77.6522, 42.525, 140.72, 0.0, 19.3195, 18.9978, 22.6087, 59.7598], [2.9486, 38.4521, 31.9197, 33.5204, 58.6857, 34.7447, 50.1604, 19.3121, 12.5063, 65.5303, 27.5556, 13.1688, 0.0, 11.7987, 0.0, 62.9565, 14.6, 8.28, 0.9091, 14.5975, 11.2074, 5.9565, 36.7045], [20.6542, 24.3973, 35.1971, 24.449, 23.7143, 113.4255, 39.5094, 14.1489, 17.8288, 20.4348, 2.0253, 65.4167, 58.6667, 83.0649, 1.5862, 6.2468, 23.087, 3.0217, 10.7, 9.44, 0.0, 14.834, 17.8603, 20.8986, 21.3077], [20.5748, 0.0, 128.3139, 33.6735, 124.6714, 184.617, 97.9717, 71.1064, 12.1441, 1.5024, 0.0, 25.5909, 95.6667, 83.4416, 0.1552, 38.5227], [41.4545, 26.6461, 178.1739, 155.2826, 15.7375, 10.92, 0.0, 24.1203, 0.0, 74.0904], [36.4673, 43.3014, 84.1606, 91.1735, 48.9571, 198.2766, 96.6887, 51.8085, 14.2613, 33.4783, 0.5443, 47.4697, 63.6389, 35.2078, 28.4138, 26.5065, 0.0, 20.8261, 18.5625, 11.1286, 5.369], [14.8972, 2.0548, 130.6642, 52.2959, 69.3, 66.8085, 2.5566, 14.0638, 25.7568, 3.5556, 23.0, 78.5, 0.8442, 0.1379, 33.8084, 41.1522, 39.5125, 14.56, 30.4242, 24.1701, 13.3712, 39.2901], [79.6916, 339.2466, 85.3869, 52.5408, 1.5, 351.6809, 14.4528, 11.4255, 0.0, 19.2271, 0.0, 64.1667, 0.0, 21.7013, 3.2069, 0.0, 0.0, 6.7174, 0.0, 10.48, 0.9697, 0.7469, 0.9541, 3.4638, 14.22], [44.2009, 280.8219, 237.5474, 225.0612, 160.9429, 249.5532, 164.1226, 0.5603], [41.8364, 203.726, 100.1898, 165.5408, 174.9571, 159.5957, 96.1887, 19.3262, 17.5586, 1.1594, 0.557, 125.0455, 0.0, 194.6104, 0.0, 0.0, 1.8696, 0.0, 0.0, 13.8506, 21.4279, 3.8406], [155.6809, 31.8919, 0.8841, 14.2278, 43.2652, 105.5556, 22.8052, 0.0, 14.9773, 65.5, 94.5, 31.6667, 71.3444, 14.5786, 76.4008], [52.0514, 83.6301, 54.0292, 5.5612, 40.6857, 74.5532, 0.0, 29.75, 58.24, 14.5758, 53.5477, 24.8865, 44.913, 96.5574], [41.9393, 114.1644, 41.7591, 28.3469, 161.6714, 165.383, 122.1132, 37.0851, 25.991, 54.7198, 17.9241, 77.2727, 115.8889, 120.2727, 3.5345, 39.2045, 12.3623, 1.4565, 4.7, 0.0, 0.0, 15.7884, 43.0022, 0.0, 30.3401], [111.8458, 195.1918, 151.2701, 21.4286, 134.9714, 90.1915, 3.7642, 50.0426, 55.2973, 89.8696, 2.7848, 22.5455, 8.2778, 206.0519, 0.5345, 12.2955, 163.6522, 34.3478, 8.3125, 0.0, 0.0, 76.8091, 53.0546, 0.0, 103.865], [24.4579, 353.2192, 204.1387, 259.9388, 322.0857, 264.0, 97.1321, 235.5674, 17.0541, 155.0966, 53.7722, 199.3636, 469.5, 567.8831, 1.8621, 139.461, 30.3768, 0.9348, 99.275, 0.0, 27.8091, 42.8581, 144.5884]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

