created: 20230603215001000
creator: Drevarr
modified: 20230705163533470
modifier: drevarr
tags: ChartData
title: 202306032150_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Govinda Ektar", "Sarena Shadow Heart", "Arriasa", "Tootsie Pop Rocks", "Aronorf Xideliesi", "Lord Erin The Wise", "Tribal S", "Newtype Khan", "Zadey Starbolt", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Renegade", "Virtuoso", "Druid", "Scrapper", "Firebrand", "Weaver", "Druid", "Spellbreaker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 109.2241, 47.497, 52.583, 16.2759, 24.8125, 5.2399, 19.3955, 15.45, 0.0], [100.776, 0.0, 39.3811, 33.3921, 10.6809, 17.0363, 0.0, 13.6292, 47.0348, 71.8856, 27.7308, 9.2602, 16.5812], [83.3599, 136.2701, 72.0662, 60.009, 61.4477, 19.9756, 28.2967], [72.085, 48.7187, 0.0, 22.831, 141.6542, 115.404, 92.5977, 36.5602, 6.669], [27.5848, 178.0017, 64.4419, 0.0, 48.3322, 36.8159, 15.9899, 64.7558, 8.2357, 0.0, 9.1093, 71.6703, 37.1936, 11.8933, 13.1695, 3.9874], [49.9218, 90.9895, 118.8701, 0.0, 60.9638, 10.4396, 47.6512, 0.0, 14.3455, 10.626, 0.0, 8.6122, 114.7458, 115.0264, 12.045, 0.0, 3.8189], [39.9643, 252.8371, 66.3024, 19.0643, 44.2541, 32.7106, 45.1942, 70.8202, 86.5645, 17.0146, 11.2369, 8.1729, 97.039, 75.1896, 24.6361, 8.2774, 42.9343], [254.9912, 342.4804, 82.0253, 0.0, 56.4365, 50.9035, 54.8815, 68.7134, 123.7466, 51.4566, 0.0, 126.367, 111.0616, 61.8026, 27.2563, 0.0], [212.2011, 370.3831, 87.935, 82.5088, 72.3341, 79.2673, 109.481, 75.1148, 102.6529, 48.1971, 0.0, 114.1959, 98.7896, 84.4059, 0.0, 0.0], [230.0976, 448.8898, 174.721, 120.649, 82.0024, 122.4109, 89.6192, 156.6831, 77.9672, 12.3848, 27.1891, 199.1738, 18.5024, 116.4753, 6.6175, 11.4145], [197.1977, 610.4926, 150.7536, 69.9494, 124.969, 143.1012, 185.9728, 143.5311, 134.7404, 62.2565, 29.2758, 28.4607, 262.5223, 203.2432, 161.0447, 78.7769, 9.2945]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

