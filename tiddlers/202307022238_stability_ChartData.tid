created: 20230702223827000
creator: Drevarr
modified: 20230705163541196
modifier: drevarr
tags: ChartData
title: 202307022238_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Lil Mes Robin", "Kardknight", "Zayde Sunsabre", "Artakama Nahid", "Aezlenne", "Amiti\u00e9l", "Aronorf Xideliesi", "Tuandha Lan", "Sarette Fay", "Thalia Mavren", "Jmbrage Rev", "Pixzil", "Bella Sassy", "K\u00e2 Otik", "Tika Fiery", "Silvyrs", "Thats Not Nice"];
const professions = ["Chronomancer", "Renegade", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Herald", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 10.0456, 0.0, 0.0, 2.4294, 4.4344, 6.7133, 2.613, 6.4865, 15.9104, 2.7931, 0.0, 6.5318, 3.7281, 7.0418, 3.258], [3.1311, 2.0869, 22.0498, 2.8922, 0.0, 0.0, 3.4532, 9.324, 0.0, 0.0, 4.3243, 9.4682, 4.1404, 5.1968, 3.4214, 7.0167, 9.8584, 2.682], [3.9655, 1.8147, 3.8179, 1.6928, 2.9495, 1.62, 1.3595, 1.2789, 1.6809, 1.7702, 3.042, 0.0, 6.3504, 0.0, 4.7502, 6.8695, 0.0, 0.0, 0.0, 0.6882, 2.6568, 1.0962, 1.7417, 0.0, 7.1811, 7.4923, 3.9204, 0.0, 3.8408, 2.0507, 0.0, 0.882, 1.7937, 1.0741, 0.0, 0.0, 1.3665, 0.0, 1.5096, 1.7405, 0.0, 1.6723, 5.7002, 1.9522, 0.0, 1.7302, 0.0, 6.9479, 1.692], [2.1059, 3.1799, 2.9446, 4.4083, 1.001, 7.5537, 3.132, 2.3306, 1.3236, 1.3009, 1.8774, 2.395, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9694, 2.3035, 0.5951, 1.5792, 3.117, 3.3696, 1.5498, 1.613, 0.5127, 4.4793, 2.5542, 7.3656, 0.5865, 2.0197, 4.5441, 2.0286, 1.364, 3.0326, 0.9361, 1.2779, 0.7252, 1.4152, 2.6107, 1.2096, 0.5749, 4.3243, 4.7829, 1.4787, 1.688, 1.3802, 0.0, 3.4739, 0.918], [2.6187, 1.712, 3.4243, 1.737, 4.9639, 0.0, 1.3919, 0.0662, 1.5063, 2.9851, 5.1106, 0.0, 0.9576, 0.0, 8.19, 10.1581, 0.0, 0.0, 2.3352, 3.2384, 3.1104, 1.7388, 0.8666, 0.0, 1.8486, 0.0, 6.1776, 1.5196, 1.9535, 10.7712, 1.2789, 0.0, 5.5598, 0.0, 0.0, 0.0, 0.0, 1.927, 0.0, 0.0, 4.3735, 8.9801, 2.5959, 0.0, 1.3997, 0.0, 4.1312, 0.81], [2.8806, 2.5338, 5.2742, 0.1619, 12.014, 7.236, 3.5607, 1.3791, 3.9249, 2.7287, 4.1999, 2.6161, 0.0, 3.1752, 0.1938, 5.9787, 8.1119, 2.5032, 1.8621, 3.8232, 3.6666, 1.0039, 0.917, 3.1995, 1.7028, 8.6724, 0.0, 2.5826, 11.3603, 2.5578, 2.046, 7.0762, 0.0, 0.0, 0.0, 3.4991, 1.9813, 6.0295, 0.0, 3.423, 5.5528, 10.249, 3.3681, 0.0, 2.4106, 1.6931, 5.7273], [5.9108, 1.8832, 7.3603, 0.3974, 10.3594, 0.378, 2.6867, 0.2148, 4.6305, 5.3483, 4.3735, 2.7986, 2.9232, 0.4707, 4.5045, 9.6466, 2.2355, 0.3058, 2.8728, 2.8336, 2.2032, 0.6804, 2.7542, 0.711, 2.5542, 10.5732, 0.7332, 5.1983, 2.3979, 7.6576, 4.8069, 0.0, 8.9716, 2.024, 0.0, 0.0, 3.1002, 3.34, 4.0404, 2.9788, 9.8771, 11.0299, 1.9552, 0.0, 2.5466, 0.2442, 7.7929, 4.428], [2.7683, 0.4109, 3.1882, 4.9606, 16.1865, 5.616, 0.0971, 0.0069, 1.1466, 5.4793, 6.3172, 1.4602, 0.3024, 7.3584, 4.5689, 5.6511, 5.6272, 0.0, 2.8938, 3.1584, 1.3763, 10.4976, 3.2508, 2.7284, 2.465, 5.1903, 0.0, 4.3189, 3.9401, 1.4431, 2.4404, 1.4553, 1.1662, 11.1829, 1.3282, 4.0356, 1.1365, 3.6623, 3.3211, 5.1593, 1.0541, 4.8079, 7.5184, 2.245, 0.3122, 2.3018, 2.1967, 0.5698, 7.4173, 1.908], [4.6465, 3.554, 8.6285, 10.9421, 4.9312, 8.6328, 1.782, 4.9202, 0.0, 3.6162, 2.7069, 3.5751, 6.0536, 0.0, 5.6952, 5.898, 8.9271, 8.0388, 0.0, 1.26, 0.0, 3.8232, 1.4742, 0.0, 0.0, 5.4036, 4.7678, 11.9988, 0.0, 4.0725, 0.0, 2.6086, 3.7044, 1.8141, 6.1285, 0.0, 0.0, 1.8536, 0.0, 0.0, 5.2836, 0.0, 5.6441, 2.8993, 3.1235, 4.2061, 0.0, 1.2636, 3.1095, 10.7973, 1.476], [7.7183, 6.7338, 12.977, 15.2717, 1.369, 11.2946, 7.452, 2.1364, 6.3283, 5.6321, 7.0461, 5.7798, 0.0, 7.308, 0.1661, 13.2678, 15.2737, 1.1135, 5.0736, 6.072, 6.2208, 6.2748, 4.6418, 0.0, 11.376, 9.2803, 21.5028, 0.0, 7.5822, 15.4836], [8.5669, 4.1088, 6.9274, 4.0922, 11.942, 2.97, 1.5861, 1.4899, 2.6239, 6.0906, 0.9372, 2.7682, 2.2831, 6.1488, 9.2485, 19.5741, 14.1775, 0.0, 1.8144, 4.4528, 2.6568, 4.0824, 0.0, 7.6788, 12.771, 20.79, 1.173, 3.5428, 0.0, 14.1372, 1.9845, 0.9207, 5.8126, 1.9987, 0.9416, 2.3136, 2.3025, 1.3775, 1.2432, 0.0, 6.4802, 7.5676, 6.7351, 1.758, 0.0, 0.8554, 0.4558, 8.6379, 0.612], [4.9755, 4.5882, 7.0454, 9.568, 4.266, 5.6324, 0.4227, 9.0846, 5.9378, 6.6296, 6.5099, 0.4234, 5.7456, 4.2366, 8.9271, 9.2812, 3.723, 5.2248, 4.4933, 9.4608, 2.646, 0.2059, 0.0, 7.1811, 2.2988, 13.1868, 2.0928, 4.4036, 1.7251, 16.9142, 4.1454, 8.4029, 0.2242, 3.2815, 4.0193, 8.5781, 1.8552, 11.4005, 15.6176, 5.035, 3.0932, 13.8957, 5.544], [9.2403, 8.7312, 13.5792, 0.5741, 18.2008, 10.692, 3.237, 0.0, 4.5202, 7.2694, 5.1371, 6.8445, 0.1966, 10.5336, 1.7168, 21.9492, 14.3237, 2.8305, 3.948, 6.4363, 11.5992, 4.9518, 4.4015, 11.376, 10.5574, 23.4036, 0.2133, 6.7213, 12.7908, 7.5411, 2.3597, 12.6992, 3.0107, 2.5783, 0.46, 5.2214, 6.4535, 11.0023, 0.2074, 4.1024, 12.2359, 14.2511, 5.5369, 0.0, 7.5038, 0.5861, 19.4352], [9.3899, 5.992, 13.3824, 0.4416, 21.7978, 3.456, 3.7225, 7.2765, 4.0604, 8.9899, 5.0497, 0.0, 4.6872, 2.5752, 19.1646, 12.8621, 1.5725, 0.2129, 5.1408, 6.6792, 7.3872, 6.2748, 3.2432, 7.7499, 10.8128, 22.3344, 1.6129, 6.2578, 1.4756, 22.8047, 6.7473, 2.1483, 12.7624, 1.6319, 0.0, 8.1766, 8.7746, 11.9969, 0.3629, 7.9958, 15.8231, 21.1814, 5.2412, 0.4706, 8.437, 1.5466, 22.2519], [5.3903, 11.3352, 10.2378, 13.8941, 6.5946, 24.3877, 10.53, 7.1538, 1.3236, 6.5488, 5.261, 8.3651, 7.4529, 4.7174, 9.0216, 4.4581, 22.7682, 18.6354, 4.0824, 6.5578, 5.7024, 9.4122, 3.1403, 0.0, 9.8829, 13.963, 0.0, 1.1064, 6.622, 3.1574, 17.7556, 8.2908, 0.0, 9.2875, 2.7324, 0.0, 0.0, 6.0192, 3.8117, 9.1997, 4.009, 3.3969, 14.4472, 16.6913, 6.8513, 1.5345, 6.2986, 4.3793, 11.924, 4.482], [4.3663, 10.6244, 14.0042, 19.4045, 3.3414, 18.4886, 7.83, 7.1538, 0.0, 5.2699, 7.0293, 7.1155, 5.9319, 10.2312, 3.7382, 18.5913, 17.32, 0.0819, 4.4184, 7.6102, 10.1088, 8.9586, 2.1021, 0.0099, 13.0824, 16.9429, 30.5316, 2.9859, 6.9531, 3.8192, 21.7107, 4.7628, 15.9214, 2.5335, 0.2841, 7.1795, 7.8688, 16.721, 0.2074, 2.7175, 15.2825, 24.5001, 6.4241, 0.0, 6.3763, 2.8002, 15.7735], [3.0676, 2.3968, 4.8413, 0.0, 3.8128, 1.35, 1.2948, 0.0, 0.9922, 2.7942, 2.0826, 2.1294, 0.0, 2.8224, 0.0, 4.4226, 4.9694, 0.0, 0.5712, 2.1454, 3.3696, 0.9072, 3.1918, 0.0, 5.5458, 0.0, 11.7612, 0.2933, 2.3177, 2.1483, 10.6871, 3.7044, 5.2439, 0.0, 0.0, 0.0, 0.0, 2.4531, 0.9324, 0.0, 72.2358, 179.4072, 51.163, 14.3527, 82.134, 49.9796, 169.7531]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

