created: 20230513000456000
creator: Drevarr
modified: 20230705163529879
modifier: drevarr
tags: ChartData
title: 202305130004_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaidy Sagemist", "Tegan Parker", "Venomina The Techie", "Lookin Boi", "Newtype Khan", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Vindicator", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 22.442, 71.9678, 97.1376, 25.1389, 27.3048, 106.9056, 19.11, 38.2704, 4.778, 148.4749, 6.425, 4.8562, 127.995, 128.6208, 32.4648, 74.2458, 0.0, 52.0205, 68.3021, 12.9886, 157.5252, 0.0, 0.0, 0.0], [38.7763, 0.0, 231.7798, 427.2957, 45.715, 48.1352, 0.0, 0.0, 56.9088, 0.0, 55.1667, 0.0, 0.0, 79.58, 31.6915, 0.0, 23.764, 0.0, 31.751, 93.2803, 0.0, 91.5146, 0.0, 0.0, 0.0], [79.2806, 0.0, 398.5562, 366.7023, 3.5165, 82.1333, 0.0, 0.0, 72.5184, 0.0, 44.1574, 5.3102, 0.0, 72.2775, 51.4483, 0.0, 41.4192, 0.0, 0.0, 0.0, 112.5667, 0.0, 88.7821, 5.3505, 0.0], [395.3779, 58.1256, 319.2031, 0.0, 83.6832, 0.0, 316.7674, 387.9192, 0.0, 10.1266], [243.8899, 281.9981, 413.658, 742.3814, 14.915, 248.4815, 0.0, 0.0, 215.712, 77.6206, 187.8195, 104.4563, 193.775, 346.752, 0.0, 103.5145, 0.0, 28.7482, 0.0, 206.0822, 209.2835, 130.5, 0.0, 0.0], [132.1574, 499.4842, 649.2133, 1803.4391, 180.3743, 292.8005, 0.0, 63.5376, 207.9936, 21.3486, 30.0058, 22.2037, 244.3699, 35.7335, 73.9225, 249.1475, 335.0592, 72.7488, 81.4287, 8.4629, 73.2173, 95.7375, 165.1574, 86.2374, 201.0857, 0.0, 38.6509, 0.0], [333.2621, 595.2845, 1336.6735, 3510.8265, 241.368, 630.1802, 116.4561, 183.8126, 268.3584, 114.2123, 46.4684, 14.639, 508.713, 32.1167, 145.5914, 528.0225, 630.5242, 194.8752, 209.8484, 280.3277, 144.7385, 367.8528, 37.594, 450.2327, 88.6878, 114.9065, 59.9422]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

