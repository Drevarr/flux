created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Gamora Titus", "Arcanophage Farra", "Chocolate Teapot", "Grasszanine", "Newtype Khan", "Aronorf Xideliesi", "Tika Fiery", "Bella Sassy", "Solus Sanctus"];
const professions = ["Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[90.3602, 10.5109, 14.85, 29.9497], [15.1866, 11.051, 113.2156, 43.1122], [105.1711, 64.2751, 41.4788, 11.7963], [0.0, 124.9253, 103.325], [38.9475, 0.0, 70.5024, 41.9241, 115.0063, 37.6388, 19.1032, 12.4537, 22.2156, 54.0355, 29.0002, 0.0, 13.7808, 13.3596, 41.9085, 41.2368, 14.5539, 102.8281, 63.9144, 80.2138, 0.0, 105.002, 50.4609, 0.0, 64.2695, 92.2144, 29.2547], [38.507, 0.0, 38.4962, 79.476, 14.5688, 0.0, 141.519, 36.6214, 37.125, 22.4451, 113.9466, 15.3014, 0.0, 53.5788, 0.0, 113.6655, 14.6362, 32.1669, 92.4736, 71.8027, 76.4122, 0.0, 76.9811, 50.4102, 0.0, 65.7534, 108.0607, 14.4144], [57.383, 6.1334, 71.6118, 110.1875, 122.3165, 7.6121, 211.1575, 93.5972, 76.6462, 73.8072, 156.231, 53.2526, 7.7648, 84.8826, 6.0804, 162.2673, 38.2166, 44.8205, 130.865, 112.955, 76.9349, 43.9582, 87.0104, 83.4419, 12.32, 111.1412, 88.9687, 49.3038], [63.8638, 3.913, 90.6934, 80.6044, 88.2367, 16.8953, 138.5976, 83.8371, 70.1663, 26.4843, 198.3229, 71.82, 0.0, 71.8146, 17.712, 140.8608, 49.5616, 73.6038, 181.841, 133.1035, 143.2253, 61.6902, 119.0891, 60.1015, 15.55, 96.0973, 153.7542, 59.4594], [124.5187, 11.739, 124.9184, 59.2721, 85.1994, 18.2381, 227.6669, 95.4742, 76.2075, 69.1254, 258.3302, 58.5144, 2.0148, 125.6904, 36.0612, 171.4329, 72.7162, 84.7742, 158.1052, 136.8101, 97.8437, 63.6636, 105.538, 71.036, 17.71, 115.593, 158.0181, 47.7641], [95.8272, 0.9919, 96.074, 112.973, 176.3705, 16.8953, 237.2465, 131.5533, 89.2012, 13.4257, 221.9213, 66.5582, 17.7008, 95.04, 15.7356, 197.1207, 50.9942, 63.5922, 163.0436, 130.2048, 150.0206, 60.2888, 110.9354, 85.1417, 21.57, 131.3534, 135.6805, 72.2358]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

