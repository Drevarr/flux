created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Pr\u00e6tor Lightbringer", "Mike The Archmagus", "Mike The Archmagus", "Sister Elon\u00edth", "Tegan Parker", "Tootsie Pop Rocks", "Klengah", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Tempest", "Weaver", "Firebrand", "Tempest", "Scrapper", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[230.6018, 280.089, 151.0282, 34.253, 18.4522, 24.9263, 8.7778, 8.459, 2.5736, 149.4167, 84.0], [1704.5352, 529.8193, 296.2, 338.0, 94.5], [3.2881, 45.4204, 505.4491, 0.0, 0.0, 5.875, 0.0, 32.4182, 4.4536, 0.0, 14.6531, 2.7195, 0.0, 0.0], [130.2965, 683.3945, 623.7113, 139.3253, 121.5565, 147.1474, 33.7419, 67.0, 66.6393, 6.186, 261.4583, 314.7586, 314.2545, 369.4227, 0.3214, 487.6, 69.5306, 208.3293, 36.434, 2.7647], [37.3729, 589.0133, 1296.6327, 1444.5211, 239.1205, 122.8435, 4.8526, 5.8387, 5.6557, 218.6667, 229.5862, 671.6727, 1055.3299, 4.6786, 1026.6667, 63.4898, 744.8293, 4.3208, 0.0], [69.6949, 0.0044, 1360.7432, 1485.3028, 124.988, 32.2087, 134.7684, 8.5806, 252.9016, 0.0, 990.25, 1332.0, 324.8727, 1333.2784, 0.0, 919.5, 277.8571, 731.0732, 4.0189, 4.4118], [228.4576, 1648.0619, 2193.6915, 1567.8944, 282.4578, 288.2609, 129.0842, 6.0645, 269.7037, 301.7377, 1.845, 1026.5417, 1525.2069, 1197.6545, 1996.9278, 0.0, 1089.3444, 471.2245, 1423.6341, 3.7925, 176.7353], [722.1864, 2261.7478, 2752.4175, 2310.2324, 384.1807, 432.0696, 462.3789, 41.1935, 2.4074, 598.2787, 117.9302, 1764.1458, 2337.069, 2203.6, 3031.8144, 52.2143, 1344.9444, 533.6939, 1262.7561, 151.2075, 318.4412], [491.9661, 2167.1372, 3307.2138, 3473.5282, 398.7108, 252.5913, 369.4632, 19.1111, 192.0164, 34.1163, 1678.9375, 1368.4828, 1876.1818, 2621.7732, 1829.5333, 176.2449, 1497.4756, 56.3962, 100.6471]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

