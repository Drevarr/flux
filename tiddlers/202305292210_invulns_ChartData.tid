created: 20230529221000000
creator: Drevarr
modified: 20230705163532262
modifier: drevarr
tags: ChartData
title: 202305292210_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Crusader Siolith", "Nova Keenway", "Scarlet Nighttshade", "Oo Dads Mad", "Riann Swordbreak", "Roynec", "Cat Wigglebooty", "Lord Erin The Wise", "Inedible Plant", "Legionstorm", "Cyclotechnist Farra", "Belvyn Brightblade", "Rosie Sunray", "Kary\u00edna", "Crusader Siolith", "Venomina The Siren", "Primal Clone", "Tribal S", "Artakama Nahid", "Rozaalyna", "Tootsie Pop Rocks", "Black Raspberry Pie", "Blanco Padre Guard", "Sumatra Satyricon", "Zadey Starbolt", "\u00c4big\u00e4il", "Mawsmer", "Miphest\u00f6"];
const professions = ["Berserker", "Firebrand", "Soulbeast", "Willbender", "Spellbreaker", "Spellbreaker", "Reaper", "Scrapper", "Weaver", "Vindicator", "Soulbeast", "Scrapper", "Firebrand", "Vindicator", "Vindicator", "Dragonhunter", "Tempest", "Chronomancer", "Druid", "Tempest", "Scourge", "Scrapper", "Chronomancer", "Firebrand", "Soulbeast", "Scrapper", "Reaper", "Virtuoso", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 13], [0, 10, 0, 0, 18, 0, 0], [0, 21, 0, 0, 11, 0], [0, 36, 0, 0, 0, 0, 0], [0, 26, 0, 0, 4, 0, 0, 9], [0, 31, 0, 0, 0, 0, 0, 0, 0, 9], [0, 29, 0, 0, 15, 0, 0], [0, 9, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0], [0, 8, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 8, 0, 25], [0, 0, 0, 0, 0, 10, 0, 19, 0, 9, 0, 0, 10, 0, 0], [0, 18, 0, 5, 26], [0, 10, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 23, 0, 0], [0, 25, 0, 0, 0, 0, 0, 27], [0, 0, 11, 0, 23, 0, 0, 20, 0, 0], [0, 10, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 32, 0, 0], [0, 48, 0, 0, 9, 2, 6, 0], [0, 0, 0, 0, 0, 0, 58, 0, 16], [0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 5], [0, 39, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 20, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 43, 0, 0], [0, 29, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 34, 0, 0], [0, 35, 0, 0, 0, 0, 0, 17, 0, 13, 0, 0, 22, 0, 0], [0, 14, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 41, 0, 0], [0, 30, 0, 0, 0, 0, 0, 9, 0, 14, 0, 0, 44, 0, 0], [0, 16, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 78, 0, 0], [0, 68, 0, 0, 0, 0, 0, 6, 0, 8, 0, 0, 24, 0, 0], [0, 75, 0, 0, 0, 0, 0, 17, 0, 31, 16], [0, 0, 23, 0, 0, 2, 0, 51, 0, 0, 80], [0, 124, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 25, 0, 23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

