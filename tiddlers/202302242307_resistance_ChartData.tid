created: 20230224230708000
creator: Drevarr
modified: 20230705163520151
modifier: drevarr
tags: ChartData
title: 202302242307_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Arka\u00f1", "Primal Clone", "Kosair", "Kahless The Drunk", "Black Raspberry Pie", "Ryvalia Fazebringer", "Air One Com", "Gavann", "Burnhard Riemann", "Jeckyll Mbs", "Smol Daddy Tika", "Koralia Danai", "Newtype Khan", "Blanco Padre Guard", "Zaylen Harker", "Aronorf Xideliesi", "Bella Sassy", "Arcanophage Farra", "Xanvias Tseli", "Ravioli Fetabringer"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Berserker", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 21.0278, 0.0, 41.9043, 0.0, 29.1589, 16.2716, 0.0, 1.5758, 0.0, 0.0, 72.4042, 0.0, 0.0, 0.0, 14.8651, 0.0, 26.111, 0.0, 0.0, 0.0, 0.0, 54.9584, 28.8693, 55.4739, 0.0], [30.4094, 22.1707, 12.9178, 19.5005, 12.8688, 32.4547, 14.624, 18.4338, 11.0848, 0.0, 6.421, 6.5338, 37.8259, 4.773, 6.48, 5.4313, 19.9094, 19.38, 10.0819, 36.0013, 9.5697, 6.4896, 12.949, 25.9504, 19.3104, 19.1659, 19.3996, 6.5405], [16.0436, 20.6856, 17.1494, 13.1779, 10.1808, 27.6973, 12.9438, 13.4064, 7.9407, 0.0, 6.4915, 6.6125, 0.0, 34.1006, 0.0, 13.104, 6.5354, 22.811, 26.1057, 10.5634, 27.1578, 13.033, 12.1598, 9.7944, 39.1216, 26.0064, 34.3539, 26.1508, 6.6096], [99.6621, 12.3039, 28.761, 0.0, 86.24, 56.5056, 84.3177, 60.3543, 35.6965], [26.949, 13.5782, 20.3232, 12.1123, 12.3984, 33.1715, 15.9309, 41.9788, 18.7731, 0.0, 6.7973, 6.9405, 0.0, 30.9485, 0.0, 5.148, 6.8653, 17.2757, 39.4574, 13.4803, 29.6038, 6.6228, 6.6189, 6.4363, 37.7888, 27.864, 25.1326, 40.792, 13.6568], [34.3941, 25.5653, 27.1162, 14.0304, 14.8176, 35.1266, 27.6924, 12.3171, 13.8848, 0.0, 3.7397, 6.2582, 41.2646, 0.0, 7.02, 6.7892, 22.3646, 24.4616, 13.8485, 38.2592, 10.4203, 13.9924, 12.2621, 39.3568, 27.6048, 26.338, 20.0503, 6.7478], [29.99, 21.216, 21.6038, 12.7517, 14.9184, 38.2548, 28.6258, 36.0297, 13.5405, 7.5289, 6.9149, 6.4157, 0.0, 53.2046, 0.0, 5.976, 7.4998, 26.0251, 29.9418, 19.9373, 41.6461, 10.2684, 15.0489, 7.4539, 33.0848, 25.9632, 34.1128, 20.579, 7.5769], [45.6141, 20.1552, 16.1472, 7.6368, 24.7632, 30.8906, 20.4114, 16.4228, 17.1437, 19.6465, 4.9392, 5.025, 50.6256, 0.0, 18.468, 4.9745, 31.873, 28.5469, 23.9021, 56.009, 12.5166, 19.9646, 4.9862, 47.1968, 24.7536, 56.1114, 28.835, 26.3694], [33.4503, 53.7826, 48.6643, 37.1894, 12.6336, 52.136, 12.5082, 42.9843, 12.5996, 7.0537, 6.8914, 5.2742, 73.4549, 6.948, 6.8018, 46.381, 27.949, 13.8485, 37.5693, 14.0052, 6.9854, 41.3146, 41.0032, 28.3269, 19.1149, 6.8169], [67.1104, 97.4875, 23.9424, 0.0, 7.9632, 47.9651, 37.7114, 12.2333, 0.0, 7.9262, 8.0819, 0.0, 69.6341, 0.0, 23.832, 0.0, 15.9365, 18.533, 44.689, 2.007, 40.1927, 34.0864, 49.9133, 13.8768, 49.2048, 27.905, 52.0169, 9.5344], [57.673, 27.1565, 78.5088, 19.536, 0.0, 0.0, 19.7269, 47.1738, 26.5302, 0.0, 33.4219, 0.0, 0.0, 139.3637, 0.0, 6.012, 21.3953, 37.0958, 29.7924, 42.7632, 101.0419, 42.289, 31.9088, 43.9349, 55.8208, 43.6752, 50.446, 68.0002, 28.2578], [29.7802, 138.0101, 34.6886, 23.5853, 0.0, 76.7051, 46.8592, 20.0258, 12.416, 32.5067, 25.0723, 8.6198, 0.0, 124.9402, 0.0, 3.636, 0.0, 0.0, 51.763, 14.3016, 79.2154, 45.6915, 38.4846, 57.5962, 76.9888, 40.824, 24.3491, 53.0337, 12.9198], [74.2409, 37.9766, 57.4061, 13.1069, 50.9712, 47.6393, 40.3873, 61.1667, 7.4588, 6.1622, 17.3053, 60.3686, 0.0, 24.768, 6.8653, 71.0222, 127.2403, 34.0123, 115.9066, 25.823, 7.3735, 7.3267, 84.9072, 58.8816, 104.2068, 35.0982, 7.7151], [37.3302, 69.4824, 38.0851, 40.031, 37.968, 34.6704, 52.771, 156.4359, 31.0743, 14.3599, 37.7966, 19.2733, 0.0, 92.1768, 0.0, 38.16, 19.0477, 58.3891, 78.2174, 19.4558, 78.3373, 17.4989, 19.6196, 19.5888, 89.376, 30.24, 55.5689, 58.7275, 0.0], [76.6527, 106.08, 49.4438, 9.0576, 14.1456, 82.8311, 60.9232, 74.4893, 15.6749, 7.3359, 18.1339, 0.0, 35.2469, 6.9845, 50.112, 7.3094, 64.5048, 42.9947, 75.1896, 106.185, 29.1344, 7.0932, 7.0723, 91.8064, 62.0352, 104.8698, 76.0122, 15.4992], [82.0005, 107.9894, 57.9629, 38.1485, 59.3376, 62.9542, 43.9344, 92.169, 37.5692, 6.7973, 0.0, 110.8987, 0.0, 22.32, 6.548, 69.817, 104.9707, 27.4138, 84.4838, 48.5472, 6.8776, 6.8688, 133.7504, 68.1696, 105.8341, 65.6007, 28.6954], [90.0747, 86.137, 48.553, 86.7754, 70.9632, 88.6312, 45.988, 88.7336, 26.2777, 5.2123, 14.8176, 27.4995, 5.952, 111.2808, 19.764, 17.1315, 91.9138, 114.5362, 72.0461, 63.7235, 61.3676, 33.4396, 6.9197, 152.8016, 83.592, 131.3886, 47.0145, 15.4301], [119.855, 156.468, 78.7872, 73.9882, 45.3936, 110.3328, 62.6656, 86.8064, 35.5037, 0.0, 7.7851, 41.6429, 9.728, 75.2698, 5.8231, 1.98, 7.5759, 109.8144, 93.7114, 46.2749, 127.8861, 29.2256, 51.7224, 15.9, 138.4544, 59.4, 61.4754, 68.773, 62.204], [53.3737, 30.6571, 0.0, 53.5642, 0.0, 179.7389, 121.7219, 155.1791, 33.5759, 0.0, 0.0, 30.0579, 92.776, 277.6766, 0.0, 0.0, 0.0, 158.2042, 113.7391, 86.3194, 214.4397, 0.0, 0.0, 0.0, 104.1936, 0.0, 118.8377], [278.5082, 198.1574, 137.5853, 37.6512, 21.9072, 89.4132, 60.6743, 76.7516, 37.9363, 0.0, 17.8282, 14.3139, 0.0, 161.1422, 0.0, 20.016, 23.9587, 72.6293, 115.7319, 50.5229, 133.28, 61.8841, 48.0788, 41.4672, 102.5472, 110.9808, 102.0974, 51.1629, 17.2264], [169.3489, 168.5611, 28.8422, 78.1085, 113.2992, 149.6955, 86.3752, 126.4391, 51.5686, 30.0267, 16.6286, 42.64, 7.552, 131.6266, 11.0893, 24.3, 17.8041, 89.9942, 99.7895, 59.1888, 165.3299, 65.4081, 38.7864, 5.8258, 189.4928, 141.3504, 169.8409, 93.0123, 15.6604]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

