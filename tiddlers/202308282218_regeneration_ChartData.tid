created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "High Sorcer Baradun", "Selandir", "Tegan Parker", "Cat Wigglebooty", "Crusader Siolith", "My Birthday Girl", "Tootsie Pop Rocks", "Venomina The Sly", "Arriasa", "Zaedy Zae", "Spirita Demon", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Druid", "Druid", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.1688, 66.9256, 170.312, 0.1345, 52.3029, 51.3958, 149.1596, 163.4881, 327.2601, 19.6911, 27.981, 140.6993, 5.0274, 0.0, 184.6153, 42.5533, 39.7219, 56.8509, 72.3769, 62.8452], [37.932, 207.9474, 517.2088, 206.8138, 75.9201, 286.4145, 63.3003, 410.3361, 171.2988], [60.9977, 287.2056, 38.4642, 51.7058, 96.4123, 32.0544, 34.8558, 208.3806, 26.9719, 151.0274, 82.1367, 21.5107, 385.7238, 329.7413, 43.9075, 0.0, 52.201, 90.8222], [126.3357, 172.1509, 125.9496, 96.2899, 465.7407, 67.0906, 278.3339, 137.1071, 0.0, 399.8412, 480.5698, 148.512, 4.0704, 40.777, 50.2114], [17.4974, 128.0163, 462.0064, 193.6545, 6.5438, 49.7199, 26.7739, 348.6225, 5.4621, 77.2005, 122.671, 51.1812, 223.4531, 43.3518, 4.9896, 770.0814, 181.0512], [0.1392, 140.7406, 404.9221, 32.2293, 54.3594, 182.473, 131.251, 436.4457, 10.3734, 46.354, 148.6357, 73.899, 6.0802, 260.6931, 51.057, 293.4928, 18.3011, 125.5716, 220.4136, 94.945, 79.3065, 51.1642, 7.0694, 147.6605], [30.1229, 97.1546, 516.8952, 54.2965, 79.235, 43.3801, 317.527, 2.8896, 678.5529, 2.3868, 91.6124, 127.276, 105.3864, 193.844, 296.196, 16.3466, 149.6238, 18.6705, 0.0, 1482.7824, 327.7454], [16.6344, 222.4995, 414.9589, 109.5126, 24.1266, 306.0224, 43.3892, 354.5565, 45.2115, 64.6006, 389.4705, 73.4454, 177.2288, 266.6344, 364.5149, 20.7524, 15.7172, 1660.3884, 376.2158, 67.613, 0.0, 43.0322], [92.7629, 90.2652, 495.2533, 234.7531, 205.5871, 63.648, 590.9363, 308.3294, 985.044, 614.7846, 325.4051, 397.4069, 260.7822, 88.795, 882.6468, 207.2714, 913.4629, 1.3096, 396.9504, 290.5452, 540.0173, 119.8925, 8.6323, 313.4477, 511.9265], [1252.9641, 824.7312, 424.8555, 1294.6097, 493.2144, 199.1115, 2043.231, 1488.0967, 318.0026, 0.0, 3427.3404], [122.2594, 1209.3709, 4354.7166, 369.37, 840.5262, 254.1345, 1927.8708, 596.883, 3482.0712, 878.8014, 302.9023, 1660.859, 450.2358, 219.7902, 1729.0661, 254.9374, 1689.9344, 399.1319, 427.8028, 2910.006, 2914.6392, 462.6213, 0.0, 584.5056, 515.3249], [94.0296, 1701.7521, 4907.9952, 174.0755, 968.6627, 154.0878, 1522.0086, 626.3208, 4095.0534, 302.6187, 713.8095, 1060.9274, 472.4244, 351.1466, 793.6721, 177.5345, 2085.89, 267.4647, 120.7483, 6690.2814, 2476.4098], [119.1274, 1074.8167, 4606.2639, 330.3149, 824.3001, 149.7916, 1228.1911, 462.7875, 4065.3834, 385.0092, 839.3024, 1208.0934, 500.2452, 616.7791, 2114.8165, 259.9631, 1811.7669, 423.9475, 195.925, 7808.2884, 2330.0006, 355.9692, 18.7392, 463.4112, 417.5784]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

