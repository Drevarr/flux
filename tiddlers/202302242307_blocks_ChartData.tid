created: 20230224230708000
creator: Drevarr
modified: 20230705163520057
modifier: drevarr
tags: ChartData
title: 202302242307_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Burnockholmes", "Arriasa", "Burnhard Riemann", "Lord Erin The Wise", "Dark Sidiuz", "Kosair", "R\u00fana Bierdna", "Akira Moonbright", "Kosair", "Smol Gluvs", "Ez Mode Mathus", "Luck Engi", "Nazhul Naxxremis", "Sassy Daddy Demon", "Daring Deathblade", "Jeckyll Mbs", "Ace Hammers", "Blanco Padre Guard", "Panther B Me", "Project Jupiter", "Zadie Miststep", "Sp\u00edcy Cheese", "Mike The Archmagus", "Newtype Khan", "Rina Of Theros", "Rozaalyna", "Smol Daddy Tika", "Arcanophage Farra", "Elonith Tenebris", "Gavann", "Air One Com", "Venomina The Siren", "Kahless The Drunk", "Koralia Danai", "Aronorf Xideliesi", "Tegan Parker", "Zaylen Harker", "Husky Guard", "Xanvias Tseli", "Black Raspberry Pie", "Primal Clone", "Mistwalker Caelon", "Ravioli Fetabringer", "Whose Guardian", "Viral Marketing", "Drevarr Moonwillow", "Arka\u00f1", "Bella Sassy", "Ryvalia Fazebringer"];
const professions = ["Tempest", "Scrapper", "Druid", "Berserker", "Weaver", "Scourge", "Firebrand", "Spellbreaker", "Vindicator", "Dragonhunter", "Scourge", "Scourge", "Scrapper", "Scourge", "Vindicator", "Scourge", "Berserker", "Vindicator", "Firebrand", "Scourge", "Druid", "Tempest", "Berserker", "Tempest", "Spellbreaker", "Scourge", "Scourge", "Berserker", "Spellbreaker", "Scourge", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Dragonhunter", "Berserker", "Chronomancer", "Chronomancer", "Vindicator", "Firebrand", "Dragonhunter", "Willbender", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 10, 10, 2, 3, 10, 7, 2, 6, 1, 1], [1, 27, 0, 2, 2, 8, 22, 0, 2, 2, 0], [1, 2, 14, 0, 3, 1, 3, 8, 2, 5, 1, 3, 0, 9, 7, 6, 1, 2], [2, 5, 3, 0, 2, 5, 5, 5, 2, 1, 1, 0, 5, 0, 1, 0, 6, 5, 4, 5, 3, 1, 0, 1, 3, 6, 5, 2], [2, 3, 1, 3, 1, 9, 4, 2, 4, 1, 0, 0, 15, 0, 2, 1, 4, 9, 1, 6, 3, 0, 1, 5, 2, 1, 1, 3], [2, 4, 1, 1, 4, 4, 6, 9, 1, 0, 1, 0, 10, 0, 2, 0, 4, 3, 6, 2, 2, 1, 6, 5, 6, 4, 1], [27, 12, 2, 3, 15, 15, 17, 9, 4], [5, 0, 11, 3, 0, 1, 10, 0, 1, 0, 7, 7, 4, 16, 2, 1, 1, 15, 7, 9, 6, 2], [7, 0, 4, 0, 23, 14, 4, 31, 4, 0, 0, 3, 8, 6, 6, 2], [6, 11, 1, 8, 6, 41, 8, 13, 9, 1, 2, 1, 6], [6, 4, 5, 2, 2, 7, 5, 9, 2, 0, 0, 0, 0, 6, 0, 1, 1, 9, 8, 7, 9, 5, 1, 2, 7, 7, 7, 3, 3], [1, 4, 4, 4, 1, 2, 3, 9, 0, 0, 0, 7, 0, 0, 2, 3, 3, 2, 10, 1, 4, 1, 18, 18, 14, 12, 2], [8, 0, 3, 0, 8, 4, 4, 12, 2, 12, 0, 11, 33, 14, 14, 2], [2, 12, 2, 2, 3, 8, 11, 10, 6, 0, 1, 0, 13, 0, 2, 1, 9, 3, 1, 14, 3, 1, 1, 7, 4, 8, 5, 2], [1, 8, 17, 4, 3, 6, 2, 2, 6, 0, 2, 0, 12, 0, 1, 1, 7, 4, 3, 14, 3, 4, 1, 11, 7, 5, 8, 1], [0, 11, 0, 0, 6, 17, 2, 20, 6, 2, 7, 20, 15, 16, 13, 3], [2, 7, 8, 3, 6, 0, 5, 9, 8, 1, 0, 0, 0, 10, 0, 2, 1, 8, 7, 3, 17, 3, 0, 4, 8, 6, 11, 9, 1], [7, 4, 5, 3, 3, 4, 9, 10, 4, 0, 0, 0, 10, 0, 2, 1, 10, 10, 5, 8, 3, 2, 0, 10, 10, 15, 4, 2], [8, 4, 8, 6, 5, 8, 5, 8, 4, 1, 1, 0, 3, 1, 5, 1, 10, 9, 4, 13, 3, 2, 1, 11, 5, 8, 6, 1], [10, 8, 15, 5, 3, 8, 5, 13, 6, 0, 0, 1, 0, 8, 0, 3, 2, 10, 7, 3, 6, 2, 0, 2, 9, 2, 9, 5, 2], [3, 1, 1, 2, 1, 5, 3, 6, 3, 0, 1, 0, 10, 0, 1, 0, 2, 6, 1, 20, 7, 1, 1, 19, 23, 14, 12, 3], [3, 1, 10, 5, 2, 7, 14, 7, 2, 1, 0, 0, 14, 0, 1, 0, 6, 13, 3, 18, 3, 3, 0, 19, 3, 11, 5, 1], [7, 1, 0, 6, 2, 9, 8, 10, 5, 1, 1, 2, 0, 33, 0, 5, 3, 7, 6, 3, 4, 4, 1, 2, 10, 10, 9, 4], [5, 6, 7, 4, 5, 7, 5, 5, 6, 0, 0, 2, 0, 18, 0, 1, 1, 11, 11, 1, 19, 2, 1, 2, 10, 12, 8, 6, 2], [6, 4, 6, 4, 1, 3, 10, 17, 3, 1, 0, 0, 0, 13, 0, 1, 0, 8, 12, 5, 14, 3, 3, 0, 8, 11, 15, 8, 3], [4, 6, 5, 5, 4, 12, 3, 9, 3, 1, 2, 0, 0, 13, 1, 2, 1, 8, 7, 5, 18, 2, 1, 1, 12, 16, 12, 7, 3], [10, 11, 10, 4, 2, 8, 11, 14, 1, 0, 1, 2, 7, 2, 0, 11, 17, 10, 25, 2, 2, 2, 17], [5, 9, 9, 6, 2, 11, 8, 3, 6, 1, 1, 1, 0, 18, 0, 2, 4, 3, 10, 2, 8, 5, 3, 1, 17, 9, 12, 9, 4], [6, 3, 1, 6, 3, 8, 11, 8, 2, 0, 3, 0, 1, 16, 0, 3, 1, 13, 13, 7, 24, 3, 6, 3, 15, 10, 10], [5, 10, 8, 5, 3, 15, 5, 9, 2, 3, 1, 2, 0, 16, 0, 3, 0, 9, 7, 3, 7, 2, 2, 2, 7, 15, 23, 8, 7], [11, 13, 15, 4, 3, 14, 9, 10, 10, 3, 1, 1, 15, 4, 1, 8, 10, 3, 14, 3, 1, 3, 5, 14, 5, 4], [7, 4, 3, 2, 3, 10, 9, 2, 6, 2, 2, 3, 18, 0, 4, 3, 12, 9, 8, 22, 2, 3, 1, 14, 13, 15, 5, 6], [12, 8, 5, 5, 5, 12, 6, 11, 11, 1, 1, 2, 14, 1, 1, 0, 5, 12, 4, 12, 4, 2, 16, 16, 11, 12], [9, 11, 12, 4, 3, 10, 10, 13, 11, 1, 1, 1, 0, 10, 1, 2, 1, 6, 10, 4, 24, 2, 3, 2, 13, 13, 6, 8, 4], [9, 11, 9, 8, 4, 10, 10, 13, 4, 1, 3, 18, 0, 4, 1, 11, 10, 3, 18, 5, 2, 1, 15, 13, 15, 9, 4], [8, 12, 12, 7, 7, 11, 5, 11, 9, 2, 1, 1, 3, 16, 4, 1, 7, 11, 5, 11, 7, 3, 1, 11, 13, 14, 13, 5], [10, 12, 13, 7, 5, 10, 6, 11, 5, 0, 0, 3, 20, 1, 9, 1, 10, 3, 14, 11, 3, 2, 14, 19, 13, 9, 2], [11, 10, 11, 9, 5, 12, 8, 16, 10, 2, 0, 17, 0, 3, 4, 9, 16, 3, 21, 5, 2, 1, 13, 10, 12, 6, 3], [8, 25, 8, 8, 6, 13, 9, 7, 3, 1, 1, 3, 0, 14, 0, 14, 3, 9, 9, 19, 17, 3, 2, 1, 7, 18, 14, 2, 4], [9, 15, 18, 6, 4, 10, 7, 5, 6, 1, 1, 2, 0, 15, 1, 2, 1, 15, 12, 4, 23, 8, 2, 2, 21, 13, 16, 9, 4], [6, 12, 25, 22, 3, 13, 8, 4, 19, 0, 2, 2, 13, 0, 2, 1, 11, 13, 9, 31, 5, 4, 2, 13, 19, 11, 6, 2], [8, 8, 8, 4, 6, 37, 6, 3, 16, 1, 1, 1, 0, 9, 0, 12, 0, 9, 28, 3, 31, 7, 3, 1, 22, 24, 11, 17, 2], [14, 10, 10, 6, 3, 8, 3, 6, 3, 1, 1, 1, 2, 16, 1, 0, 4, 17, 11, 17, 39, 3, 4, 3, 25, 31, 29, 12, 5], [14, 14, 0, 4, 7, 16, 9, 13, 13, 2, 1, 5, 1, 39, 2, 3, 1, 10, 15, 9, 25, 10, 2, 1, 12, 23, 23, 17, 4], [8, 9, 10, 3, 8, 11, 40, 24, 30, 1, 1, 2, 1, 36, 0, 4, 1, 12, 14, 7, 30, 10, 4, 2, 13, 8, 13, 7, 5], [10, 4, 23, 8, 6, 20, 16, 11, 9, 1, 0, 5, 20, 2, 4, 9, 6, 8, 21, 20, 1, 1, 25, 28, 36, 15, 6], [9, 14, 21, 7, 5, 10, 20, 16, 11, 1, 4, 2, 0, 24, 1, 6, 3, 21, 19, 10, 28, 7, 4, 5, 18, 20, 25, 11, 9], [11, 15, 6, 4, 3, 31, 9, 21, 13, 0, 3, 2, 15, 0, 2, 2, 19, 16, 14, 54, 3, 1, 5, 18, 23, 22, 17, 3], [16, 13, 16, 8, 4, 17, 14, 20, 14, 1, 4, 1, 0, 48, 3, 3, 4, 20, 26, 11, 35, 7, 4, 1, 23, 15, 23, 19, 8], [8, 14, 23, 9, 7, 18, 18, 21, 9, 1, 3, 1, 0, 37, 0, 8, 3, 25, 27, 6, 68, 9, 4, 6, 36, 25, 37, 14, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

