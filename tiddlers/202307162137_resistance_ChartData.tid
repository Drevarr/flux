created: 20230716213730000
creator: Drevarr
tags: ChartData
title: 202307162137_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Gun Breaker", "Sakis Ranger", "Vampguard", "Urilstormwalker", "Johosh The Mighty", "Alarics Clone", "Grootsmaid", "Tribal S", "Koralia Danai", "Scarlet Merc\u00fcry"];
const professions = ["Berserker", "Druid", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[80.1209, 42.1067, 23.8577], [0.0, 0.0, 0.0, 26.5012, 32.2284, 41.3217, 0.0, 28.6675, 0.0, 0.0, 0.0, 0.0, 0.0, 20.5128, 35.6081], [103.7685, 7.1808, 26.3092, 26.668, 86.9828, 63.3402, 24.8522], [25.1576, 0.0, 44.37, 49.8069, 23.2798, 34.7108, 17.3365, 127.0198, 37.895, 28.3826, 28.006, 19.3884], [39.0817, 25.6001, 2.4279, 75.7555, 125.856, 54.1878, 0.0, 60.4652, 50.962, 56.327, 2.5836], [8.1972, 19.7396, 13.0606, 24.435, 7.9398, 39.7242, 6.4944, 3.2796, 12.7725, 42.0084, 80.2655, 11.6381, 7.6471, 12.0384, 20.1748, 37.2645, 0.0, 34.0243, 45.0585, 6.7837, 6.716, 13.4283, 26.7775, 21.8711, 8.6588], [187.5015, 56.8555, 20.9152, 29.6362, 24.5404, 73.0296, 0.0, 69.4138, 120.9255, 12.425, 0.0, 8.6756, 65.0916, 75.4123, 8.6156], [8.0784, 57.9004, 18.6466, 28.035, 23.9778, 95.6565, 0.0, 25.8884, 10.814, 48.1572, 110.8697, 35.2901, 0.0, 22.0077, 23.8022, 48.5982, 9.3542, 78.3475, 65.1795, 0.0, 24.82, 26.2908, 26.213, 51.476, 30.5382], [51.6318, 82.3175, 38.5035, 59.145, 88.5258, 177.0624, 58.5288, 80.6183, 65.1057, 107.6544, 459.2253, 53.1749, 42.3043, 48.3626, 42.4522, 89.0599, 116.0179, 115.4535, 19.8941, 43.4058, 7.8835, 62.0399, 46.2785, 60.1577], [3.432, 98.427, 88.2854, 94.92, 81.8757, 10.1128, 47.8516, 61.7848, 248.3964, 437.8265, 108.6566, 42.0101, 97.4776, 50.5896, 132.5866, 0.0, 150.6643, 209.6745, 8.5245, 31.4922, 40.549, 90.2462, 111.9472, 50.6448]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

