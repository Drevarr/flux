created: 20230529221000000
creator: Drevarr
modified: 20230705163532157
modifier: drevarr
tags: ChartData
title: 202305292210_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Scarlet Nighttshade", "Belvyn Brightblade", "Legacy Of Mathus", "Rx Medic", "\u00c4big\u00e4il", "Tuandha Lan", "Riann Swordbreak", "Aira Draugr", "Mawsmer", "Crusader Siolith", "Oo Dads Mad", "Pamtastic", "Sire Nighthawk", "Rosie Sunray", "Sister Elonith", "Riann Swordbreak", "Gabe Malhorn", "Smol Bee", "Kary\u00edna", "Inedible Plant", "Koralia Danai", "Blanco Padre Guard", "Sumatra Satyricon", "Venomina The Siren", "Lucas Ryn", "Sygaldry Verdandi", "Fribble Bibble", "Bella Sassy", "Black Raspberry Pie", "Solus Sanctus", "Tika Fiery", "Cat Wigglebooty", "No Reserv\u00e9", "Tegan Parker", "Zadey Starbolt", "Tribal S", "Johosh Of The North", "Jeckyll Mbs", "Artakama Nahid", "Mistwalker Cael", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Primal Clone", "Smol Gluvs", "Lord Erin The Wise", "Miphest\u00f6", "Drevarr Moonwillow", "Xanvias Einzbern", "Cyclotechnist Farra", "Rozaalyna"];
const professions = ["Willbender", "Firebrand", "Berserker", "Firebrand", "Reaper", "Renegade", "Berserker", "Herald", "Virtuoso", "Firebrand", "Spellbreaker", "Tempest", "Vindicator", "Vindicator", "Berserker", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Soulbeast", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Druid", "Tempest", "Berserker", "Tempest", "Vindicator", "Scrapper", "Chronomancer", "Chronomancer", "Scourge", "Weaver", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.3053, 0.0, 0.0, 0.1049, 0.0345, 0.2569], [0.0133, 0.2521, 0.0, 0.0, 0.0926, 0.0, 0.2202, 0.4308], [0.0, 0.2507, 0.0217, 0.0, 0.1358, 0.0, 0.2294, 0.3769, 0.0517], [0.0133, 0.1218, 0.0652, 0.0, 0.0926, 0.0345, 0.1835, 0.1077, 0.344], [0.0, 0.1036, 0.0217, 0.0556, 0.2901, 0.069, 0.0642, 0.4077, 0.1609, 0.2564, 0.034], [0.0217, 0.0, 0.1543, 0.0, 0.367, 0.3692, 0.3161, 0.4672, 0.0455, 0.1138, 0.0079], [0.0, 0.0732, 0.5157, 0.1429, 0.332], [0.0133, 0.4244, 0.0, 0.0, 0.1914, 0.0, 0.2385, 0.3615], [0.0652, 0.0278, 0.1296, 0.0, 0.2018, 0.4769, 0.0402, 0.5726, 0.0227, 0.1138, 0.212], [0.092, 0.265, 0.0227, 0.0894, 0.4058, 0.0429, 0.284], [0.0, 0.4342, 0.0217, 0.0278, 0.1358, 0.0345, 0.1651, 0.5385], [0.1957, 0.0833, 0.1605, 0.1379, 0.1835, 0.5462, 0.1322, 0.6325, 0.0, 0.1138, 0.3272], [0.0, 0.2294, 0.3385, 0.1724, 0.5185, 0.0455, 0.065, 0.178, 0.1429, 0.33], [0.0, 0.2661, 0.4769, 0.1322, 0.5299, 0.0455, 0.1138, 0.1204, 0.2, 0.32], [0.1437, 0.4359, 0.0, 0.0894, 0.5654, 0.1429, 0.354], [0.0133, 0.43, 0.1522, 0.0, 0.1852, 0.0, 0.2569, 0.6, 0.0862, 0.5185], [0.3025, 0.0, 0.0833, 0.0864, 0.0, 0.3394, 0.2923, 0.1034, 0.5869, 0.0, 0.122, 0.3272, 0.0429, 0.008], [0.0, 0.1345, 0.0652, 0.0556, 0.1358, 0.0, 0.2477, 0.5615, 0.2069, 0.5185, 0.0227, 0.1301, 0.1702, 0.1571, 0.336], [0.0, 0.3011, 0.0217, 0.0, 0.0926, 0.0, 0.2294, 0.4538, 0.0977, 0.1254, 0.0455, 0.1057, 0.4084, 0.2429, 0.302], [0.0133, 0.112, 0.0217, 0.1667, 0.1667, 0.2931, 0.1651, 0.4077, 0.3563, 0.3561, 0.0682, 0.0732, 0.3953, 0.1143, 0.33], [0.0133, 0.3193, 0.0217, 0.0617, 0.0, 0.2018, 0.3462, 0.0345, 0.4444, 0.0, 0.1138, 0.3534, 0.0429, 0.214], [0.0, 0.4048, 0.0, 0.0, 0.0741, 0.0, 0.1927, 0.1077, 0.2299, 0.3932, 0.0227, 0.0894, 0.178, 0.0714, 0.304], [0.0, 0.2661, 0.0435, 0.0, 0.1481, 0.0, 0.2844, 0.3923, 0.069, 0.2336, 0.0, 0.0894, 0.5026, 0.1, 0.32], [0.3211, 0.5692, 0.0977, 0.7179, 0.0, 0.1138, 0.4372, 0.1571, 0.384], [0.0, 0.3305, 0.1522, 0.0, 0.0741, 0.0345, 0.1284, 0.4077, 0.1207, 0.5385, 0.0227, 0.0976, 0.2513, 0.0429, 0.244], [0.0, 0.3375, 0.1522, 0.0, 0.1235, 0.0, 0.2018, 0.3077, 0.0805, 0.4644, 0.0227, 0.1138, 0.3874, 0.1, 0.26], [0.0133, 0.3179, 0.1522, 0.0556, 0.0864, 0.0, 0.211, 0.3615, 0.0805, 0.5698, 0.0227, 0.122, 0.3325, 0.1857, 0.266], [0.0, 0.3137, 0.3043, 0.0, 0.1049, 0.0, 0.1376, 0.4692, 0.1724, 0.5584, 0.0455, 0.1382, 0.322, 0.0571, 0.258], [0.0133, 0.3571, 0.0435, 0.0, 0.1481, 0.1207, 0.3486, 0.2462, 0.1207, 0.1909, 0.0227, 0.0976, 0.5209, 0.1143, 0.33], [0.0, 0.3501, 0.0217, 0.0278, 0.1605, 0.1207, 0.2752, 0.3462, 0.0575, 0.4758, 0.0227, 0.0894, 0.3848, 0.1429, 0.28], [0.0133, 0.2647, 0.0652, 0.0278, 0.1049, 0.0345, 0.2202, 0.5154, 0.2356, 0.567, 0.0682, 0.1301, 0.4581, 0.0571, 0.282], [0.0, 0.2269, 0.0652, 0.1111, 0.1481, 0.0, 0.2936, 0.7231, 0.069, 0.584, 0.0227, 0.0813, 0.4136, 0.2286, 0.388], [0.388, 0.1957, 0.0, 0.179, 0.0345, 0.3761, 0.3846, 0.2471, 0.433, 0.0909, 0.1626, 0.3115, 0.1714, 0.322], [0.0, 0.3529, 0.0, 0.0, 0.1111, 0.0345, 0.3119, 0.4923, 0.0287, 0.5869, 0.0455, 0.1545, 0.4215, 0.1286, 0.312], [0.0, 0.3319, 0.1087, 0.0278, 0.179, 0.0517, 0.1468, 0.6692, 0.1264, 0.2678, 0.0227, 0.1463, 0.6152, 0.1286, 0.348], [0.0, 0.4286, 0.0652, 0.0556, 0.142, 0.0, 0.3119, 0.3308, 0.0862, 0.4786, 0.0, 0.1951, 0.4346, 0.0857, 0.31], [0.0267, 0.3655, 0.0652, 0.0278, 0.1049, 0.2759, 0.1743, 0.4385, 0.2299, 0.5954, 0.0455, 0.1789, 0.3586, 0.0857, 0.32], [0.0267, 0.3852, 0.3913, 0.0, 0.1481, 0.0, 0.3028, 0.5615, 0.1494, 0.5556, 0.0909, 0.0488, 0.4346, 0.0857, 0.266], [0.0, 0.3838, 0.1087, 0.0278, 0.0926, 0.0517, 0.1927, 0.4538, 0.2184, 0.5556, 0.0227, 0.1626, 0.4346, 0.0714, 0.338], [0.0, 0.4608, 0.0652, 0.0, 0.3025, 0.0, 0.3028, 0.6846, 0.1379, 0.5869, 0.1364, 0.122, 0.1466, 0.2143, 0.308], [0.0, 0.3095, 0.0652, 0.0, 0.2346, 0.0172, 0.3394, 0.1923, 0.1782, 0.5954, 0.0455, 0.0813, 0.5393, 0.1571, 0.408], [0.0, 0.3922, 0.3261, 0.0, 0.2099, 0.0345, 0.2294, 0.5385, 0.1954, 0.5726, 0.0909, 0.1138, 0.3979, 0.1857, 0.364], [0.0, 0.3936, 0.1304, 0.0, 0.1235, 0.0, 0.2477, 0.3615, 0.046, 0.7208, 0.0227, 0.2114, 0.5445, 0.2286, 0.302], [0.0, 0.4482, 0.0217, 0.0556, 0.2099, 0.0, 0.2936, 0.7231, 0.1034, 0.5214, 0.0909, 0.0976, 0.4319, 0.1286, 0.374], [0.0, 0.4538, 0.1087, 0.1667, 0.2407, 0.0172, 0.1927, 0.4769, 0.0517, 0.661, 0.0227, 0.0976, 0.4791, 0.1286, 0.352], [0.0, 0.4104, 0.0, 0.0, 0.1914, 0.1897, 0.3028, 0.3923, 0.3563, 0.5014, 0.0227, 0.0894, 0.6073, 0.1857, 0.332], [0.0667, 0.4146, 0.2174, 0.0, 0.1975, 0.0, 0.2936, 0.5538, 0.2644, 0.567, 0.0909, 0.1626, 0.5079, 0.2, 0.336], [0.0, 0.4538, 0.087, 0.0833, 0.2531, 0.0, 0.211, 0.7154, 0.1092, 0.6353, 0.0, 0.0976, 0.5, 0.1571, 0.312], [0.0, 0.4314, 0.0435, 0.0, 0.2654, 0.0, 0.2018, 0.4538, 0.2011, 0.4302, 0.0, 0.2276, 0.5733, 0.1714, 0.474], [0.0, 0.4874, 0.0217, 0.0, 0.1852, 0.0517, 0.1101, 0.3846, 0.0575, 0.6382, 0.0227, 0.1382, 0.6466, 0.1571, 0.374]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

