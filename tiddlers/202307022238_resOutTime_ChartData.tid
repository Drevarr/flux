created: 20230702223827000
creator: Drevarr
modified: 20230705163541151
modifier: drevarr
tags: ChartData
title: 202307022238_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Valaria Emberstorm", "Synomi\u00f1 Spyce", "Tantai Jin", "Es Onlegaym", "Trap User", "Holten Mcgroins", "Hyvand", "Newtype Khan", "Zayde Sunsabre", "Snowe Shadowcharm", "Aezlenne", "Kittendoo", "Disciple Of Phoenix", "Ima Lou", "Tacomelon M", "Morzig Shadowclaw", "Tootsie Pop Rocks", "Kayrin Willowroot", "Smol Gluvs", "Tuandha Lan", "Tika Fiery", "Amiti\u00e9l", "Koranthin", "Thalia Mavren", "Lucky Leipreach\u00e1n", "St\u00e1rless", "Grasszanine", "Bella Sassy", "K\u00e2 Otik", "Aronorf Xideliesi", "Thats Not Nice", "Morv\u00e4rth"];
const professions = ["Tempest", "Scourge", "Reaper", "Daredevil", "Dragonhunter", "Daredevil", "Berserker", "Spellbreaker", "Spellbreaker", "Reaper", "Chronomancer", "Firebrand", "Vindicator", "Druid", "Virtuoso", "Reaper", "Scrapper", "Druid", "Reaper", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.37, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 292.32, 0.0, 0.0, 0.0, 0.0, 0.0, 75.6, 0.0, 0.0, 0.0, 0.0, 118.8, 0.0, 33.11, 0.0, 168.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 62.16, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 151.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 845.01, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 124.32, 0.0, 0.0, 540.54, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 78.72, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 152.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 757.35, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 365.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 132.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 147.42, 0.0, 0.0, 0.0, 469.45, 0.0], [595.98, 0.0, 0.0, 0.0, 0.0, 841.5, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 34.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 40.48, 1036.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 302.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 310.8, 0.0, 0.0, 245.7, 0.0, 0.0, 0.0, 58.32, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 143.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 584.64, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 103.68, 0.0, 491.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 526.24, 0.0, 264.6, 0.0, 0.0, 595.98, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 71.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 819.0, 292.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 284.4, 0.0, 0.0, 0.0, 0.0, 168.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 435.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 151.2, 0.0, 0.0, 0.0, 2043.36, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 403.2, 0.0, 655.2, 584.64, 0.0, 0.0, 0.0, 0.0, 0.0, 37.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 336.6], [0.0, 143.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.4, 0.0, 81.9, 0.0, 0.0, 0.0, 0.0, 907.2, 226.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 589.05], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 81.9, 219.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2213.64, 0.0, 0.0, 0.0, 0.0, 168.3], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2338.56, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 851.76, 0.0, 252.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1326.78, 0.0, 0.0, 0.0, 248.64, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 155.52, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 163.8, 1461.6, 0.0, 0.0, 0.0, 302.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 252.45, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 62.16, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 93.89, 0.0], [0.0, 68.48, 0.0, 0.0, 71.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 327.6, 950.04, 42.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 71.1, 0.0, 0.0, 0.0, 0.0, 336.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 147.42, 0.0, 0.0, 0.0, 19.44, 0.0, 0.0, 54.0], [0.0, 0.0, 205.44, 78.72, 0.0, 143.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 60.84, 0.0, 252.0, 0.0, 327.6, 73.08, 0.0, 0.0, 0.0, 189.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 168.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 310.8, 17.28, 0.0, 0.0, 390.44, 0.0, 0.0, 0.0, 32.56, 0.0, 0.0], [0.0, 34.24, 0.0, 0.0, 143.88, 0.0, 0.0, 0.0, 0.0, 0.0, 34.71, 243.36, 0.0, 0.0, 0.0, 245.7, 438.48, 0.0, 0.0, 0.0, 75.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 198.66, 336.6, 0.0, 0.0, 126.36, 0.0, 0.0, 0.0, 0.0, 0.0, 124.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 657.23], [105.84, 0.0, 0.0, 163.8, 438.48, 0.0, 0.0, 0.0, 0.0, 259.2, 642.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.11, 86.8, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 129.48, 66.15, 0.0, 0.0, 0.0, 0.0, 201.6, 0.0, 655.2, 146.16, 0.0, 0.0, 0.0, 388.8, 113.4, 0.0, 0.0, 0.0, 340.56, 237.6, 0.0, 264.88, 168.3], [0.0, 68.48, 118.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 60.84, 0.0, 100.8, 0.0, 163.8, 803.88, 0.0, 113.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 297.99, 54.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 497.28, 0.0, 0.0, 390.44, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 504.0, 27.69, 1310.4, 1461.6, 0.0, 0.0, 0.0, 0.0, 151.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 62.16, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 415.8, 0.0, 0.0, 0.0, 1702.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 683.76, 0.0, 0.0, 147.42, 780.88, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 136.96, 0.0, 0.0, 359.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 75.6, 0.0, 0.0, 409.5, 730.8, 0.0, 0.0, 0.0, 259.2, 226.8, 0.0, 0.0, 0.0, 0.0, 0.0, 33.11, 673.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 124.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 77.76, 0.0, 469.45], [0.0, 205.44, 0.0, 0.0, 575.52, 0.0, 32.37, 0.0, 0.0, 0.0, 0.0, 0.0, 100.8, 0.0, 409.5, 1680.84, 0.0, 0.0, 0.0, 0.0, 0.0, 340.2, 0.0, 0.0, 0.0, 0.0, 0.0, 66.22, 0.0, 168.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 51.84, 0.0, 147.42, 97.61, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 34.24, 0.0, 0.0, 71.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 327.6, 73.08, 0.0, 0.0, 0.0, 0.0, 0.0, 113.4, 0.0, 0.0, 2469.06, 0.0, 0.0, 132.44, 0.0, 336.6, 0.0, 0.0, 63.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 98.28, 1268.93, 0.0, 0.0, 0.0, 0.0, 0.0, 54.0], [0.0, 136.96, 0.0, 0.0, 71.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 90.72, 453.6, 0.0, 245.7, 219.24, 0.0, 0.0, 0.0, 0.0, 75.6, 0.0, 0.0, 213.3, 2043.36, 712.8, 0.0, 629.09, 0.0, 252.45, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 49.14, 0.0, 0.0, 0.0, 0.0, 32.56, 0.0], [0.0, 118.08, 0.0, 3956.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1461.6, 0.0, 0.0, 0.0, 0.0, 529.2, 0.0, 0.0, 426.6, 356.4, 0.0, 231.77, 673.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

