created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Lord Erin The Wise", "Tootsie Pop Rocks", "Fribble Bibble", "Black Raspberry Pie", "Arriasa", "Xanvias Einzbern", "Ateriuz", "Drevarr Moonwillow"];
const professions = ["Tempest", "Weaver", "Scrapper", "Scrapper", "Chronomancer", "Druid", "Berserker", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.9641, 27.5652, 17.0993, 12.9956, 0.0, 34.9747, 19.1268, 44.0899, 15.642, 8.7462, 17.2138, 0.0], [12.0411, 27.0785, 41.7139, 27.6696, 0.0, 0.0, 42.1999, 55.6373, 33.282, 48.5312, 36.5173, 7.9771], [41.7537, 28.211, 33.1459, 27.7943, 27.7517, 48.1853, 32.2812, 59.2013, 31.392, 10.4751, 26.0683, 8.5012], [71.6346, 15.7342, 99.8906, 28.2593, 107.0516, 56.6438, 61.6745, 77.3712, 66.555, 8.2784, 49.2419, 0.0], [45.9612, 64.35, 29.3026, 15.4451, 60.26, 36.733, 87.9228, 76.0752, 34.425, 64.3761, 62.3225, 73.4315], [59.9148, 104.7249, 68.7222, 103.8312, 153.0598, 115.0589, 79.605, 192.2537, 129.4592, 44.2424], [69.4773, 27.481, 57.271, 58.0608, 72.3488, 145.728, 100.1851, 152.941, 147.033, 135.8305, 79.1028, 77.7559], [120.6252, 117.936, 51.1265, 64.5019, 47.9216, 117.2477, 85.2466, 116.7048, 85.716, 175.2088, 110.4188, 55.5773], [165.7755, 98.748, 143.514, 98.2838, 159.0071, 185.0112, 133.933, 149.1048, 145.71, 158.7334, 120.2022, 124.488]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

