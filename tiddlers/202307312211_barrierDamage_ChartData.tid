created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Solus Sanctus", "High Sorcer Baradun", "Oo Dads Mad", "Kary\u00edna", "Arriasa", "Cat Wigglebooty", "Ex Warcraft", "Tegan Parker", "Mistwalker Cael", "Venomina The Sly", "Audens Silvermarker", "Cedryn X", "Sub Train", "Primal Clone", "Bella Sassy", "Sygaldry Verdandi", "Legacy Of Mathus", "Blanco Padre Guard", "Bee Nemesis", "Marshall R", "Klenga", "Ryvalia Fazebringer", "Crusader Siolith", "Glorious Gluvs", "Eibh\u00ebar", "Etchery Howls", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Mike The Archmagus", "Daphne Agla\u00e9", "Grasszanine", "Newtype Khan", "Rozaalyna", "Arcanophage Farra", "Kisumaiasu", "Name Is What", "Be\u00eb", "Mister Jekyll", "Mort\u00e4rion", "My Birthday Girl", "Keypek The Drunk"];
const professions = ["Chronomancer", "Firebrand", "Tempest", "Berserker", "Vindicator", "Druid", "Scrapper", "Tempest", "Tempest", "Vindicator", "Druid", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Berserker", "Herald", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Chronomancer", "Druid", "Scrapper", "Scrapper", "Weaver", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[421, 14275, 6617, 0, 0, 0, 866, 0, 0, 0, 0, 3369, 0], [316, 18492, 3229, 0, 0, 0, 1936, 0, 0, 0, 1729, 689, 0], [0, 20283, 1380, 0, 0, 2758, 0, 0, 1973, 0, 0], [0, 20464, 6131, 0], [0, 17109, 7040, 0, 0, 261, 0, 1827, 0, 0, 0, 0, 698, 0, 0], [0, 14890, 5683, 0, 0, 0, 0, 0, 0, 0, 6874, 0], [879, 6799, 7795, 319, 960, 0, 854, 465, 0, 0, 9561, 0], [0, 22246, 5585], [1677, 16343, 0, 0, 148, 748, 3616, 0, 6087, 0, 0], [0, 10417, 11103, 0, 0, 0, 0, 0, 0, 421, 0, 0, 6730, 0], [0, 10130, 9707, 0, 0, 226, 4747, 451, 0, 0, 0, 3639, 0], [421, 26231, 602, 0, 0, 0, 0, 1740, 387], [0, 11973, 14213, 0, 0, 0, 0, 1446, 2551, 0], [2433, 15764, 8878, 0, 0, 0, 0, 0, 0, 0, 0, 3700, 0, 0], [1505, 3412, 10521, 0, 0, 0, 0, 0, 0, 0, 0, 14504, 844], [1754, 11768, 8996, 0, 0, 0, 1619, 0, 0, 0, 0, 6787, 0], [0, 19521, 4123, 0, 0, 0, 0, 1181, 0, 0, 0, 0, 7248, 0, 0], [116, 11081, 5896, 0, 0, 0, 0, 5275, 0, 0, 0, 0, 10189, 0, 0], [72, 21208, 4984, 0, 0, 78, 0, 3000, 275, 0, 0, 0, 4623, 0, 0], [0, 15806, 8976, 0, 107, 0, 2812, 0, 1669, 0, 0, 5147, 0, 0], [0, 20806, 14081, 0, 0], [1416, 17509, 10380, 0, 505, 0, 1221, 0, 121, 0, 0, 5042, 0, 0], [522, 21923, 7549, 0, 0, 0, 0, 736, 0, 0, 0, 0, 7841, 0], [692, 18523, 9774, 63, 0, 2228, 0, 0, 0, 0, 7540, 0, 0], [0, 23771, 6398, 0, 0, 528, 0, 1607, 0, 2552, 0, 0, 7079, 0, 0], [594, 21233, 8624, 0, 0, 0, 0, 3046, 0, 0, 0, 0, 9555, 421, 0], [0, 29964, 5047, 0, 827, 0, 4458, 0, 0, 0, 0, 5086, 0], [1208, 28969, 7659, 0, 0, 751, 0, 3887, 0, 0, 80, 0, 7502, 40, 0], [844, 23990, 17507, 0, 0, 1934, 3900, 223, 573, 0, 0, 8352, 50], [0, 35861, 9706, 0, 0, 1938, 0, 5364, 270, 0, 0, 5254, 990, 0], [931, 42919, 28231, 0, 1105, 1344, 2049, 0, 6894], [0, 42550, 22021, 0, 0, 0, 0, 1718, 2574, 0, 0, 0, 19691, 0], [1503, 43769, 23425, 0, 0, 1156, 0, 2167, 0, 269, 0, 0, 15598, 1542, 0], [5722, 50098, 17060, 0, 0, 2389, 2615, 0, 0, 0, 0, 15067, 0, 0], [1958, 53101, 22304, 0, 304, 0, 5113, 1494, 0, 0, 0, 20427, 421, 0], [1073, 46523, 44871, 0, 563, 413, 442, 9185, 0, 1468, 0, 0, 25401, 0, 0], [7943, 73807, 29685, 0, 1298, 0, 5637, 4297, 0, 0, 0, 40422, 0, 0], [7778, 121375, 37037, 0, 3854, 0, 4927, 2785, 1498, 0, 0, 23562, 2557, 0], [6464, 119558, 58637, 1969, 168, 7586, 1733, 6521, 45362, 3033, 0], [8266, 184460, 81500, 0, 5302, 8456, 2289, 0], [24695, 221441, 77047, 0, 205, 15851, 15685, 4875, 3861, 3, 0, 47007, 0, 0], [17611, 229700, 64232, 3283, 0, 5786, 0, 25502, 164, 30446, 2785, 0, 95398, 1577, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

