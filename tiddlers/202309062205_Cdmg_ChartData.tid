created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Jimbo The Pleb", "Black Raspberry Pie", "Melody Phoenixstorm", "Venomina The Fierce", "Daphne Agla\u00e9", "Mort\u00e4rion", "Darks Na", "Oo Dads Mad", "Eibh\u00ebar", "Bella Sassy", "Belvyn Brightblade", "Koralia Danai", "Rafaellagabriela", "Crusader Siolith", "Mistwalker Cael", "Drevarr Moonwillow", "Jmbrage Gaurdian", "Necrotic Windrunner", "Jamaass", "Darks Na", "Lord Erin The Wise", "Solus Luxes", "Rozaalyna", "Rina Of Theros", "Fourty Eighth", "Xanvias Einzbern", "Smol Gluvs", "Jamaass", "Sygaldry Verdandi", "Alarics Bane", "Be\u00eb", "Cedryn X", "Charr Surethang", "Sister Elonith"];
const professions = ["Berserker", "Chronomancer", "Scrapper", "Spellbreaker", "Reaper", "Scrapper", "Dragonhunter", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Herald", "Scrapper", "Firebrand", "Reaper", "Reaper", "Firebrand", "Weaver", "Firebrand", "Reaper", "Reaper", "Scourge", "Berserker", "Reaper", "Scourge", "Firebrand", "Reaper", "Reaper", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.2273, 44.0909, 0.0, 24.1774, 55.0, 51.0833], [0.0, 5.6484, 0.0, 3.7761, 5.4248, 0.0, 0.0, 0.5723, 3.9916, 1.1613, 0.0, 8.3374, 0.0, 5.2696, 1.5118, 0.0, 24.375, 0.0, 9.79, 14.8864, 4.3226, 0.0, 0.0, 5.4, 0.0, 0.1091, 0.0, 24.871, 0.0, 0.0], [14.6765, 5.2692, 7.6949, 0.8358, 15.8053, 0.0, 2.7714, 10.0661, 13.7155, 0.7419, 29.35], [4.8676, 0.3022, 16.6695, 0.0, 4.6504, 0.0, 0.0, 1.0517, 2.1381, 0.0, 0.0, 14.4707, 68.55, 0.5478, 2.4173, 6.5441, 5.0875, 0.0, 9.8182, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5781, 0.0, 0.0, 1.1944], [43.5735, 23.5604, 1.7797, 23.9403, 7.6416, 0.0, 0.0, 5.345, 6.0251, 17.1152], [32.4412, 45.2967, 2.8136, 18.8806, 16.4204, 0.0, 0.4571, 7.4153, 16.8912, 62.6], [48.35, 81.4261, 12.8268, 49.6544, 30.3375, 23.2593, 61.3448, 11.3214, 15.8857], [105.9706, 71.2088, 17.2797, 0.0, 17.4115, 0.0, 4.8099], [11.0735, 20.4945, 21.0847, 22.0896, 14.3584, 0.0, 5.7335, 2.841, 0.0, 0.2, 6.0949, 10.3421, 22.6, 6.3478, 21.189, 1.3088, 4.2, 8.2963, 15.3, 9.2841, 14.9785, 6.2931, 0.0, 1.4857, 0.0, 28.3636, 0.0, 6.8065, 0.0, 6.3958], [11.3678, 48.2845, 1.15, 22.2848, 0.0526, 0.0, 16.3043, 7.9134, 4.4706, 11.5125, 3.3333, 2.04, 0.0795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0364, 0.8594, 0.0, 0.9811, 0.875], [0.0, 31.3736, 9.9492, 22.1343, 41.4292, 0.0, 10.7143, 12.8223, 9.3138, 0.0, 0.0, 15.5697], [121.0147, 34.2033, 11.0, 1.194, 11.615, 0.0, 0.0, 13.1322, 6.1715, 0.0, 4.35, 16.0727, 0.0, 1.113, 8.5276, 6.8456, 0.4125, 0.0, 0.12, 0.1705, 0.0, 9.931, 0.0, 0.0, 0.0, 5.4219, 9.2419, 0.0, 0.0], [48.8644, 3.0448, 18.3584, 0.0, 12.8264, 33.6987, 8.2903, 51.35, 13.4303, 162.6053, 0.0, 0.1565, 9.9055, 23.6176, 2.9875, 0.0], [2.1912, 17.8956, 29.6949, 1.7463, 12.3274, 0.0, 0.0, 7.0537, 4.7364, 0.0, 19.4, 37.604, 3.3158, 17.4348, 9.315, 2.0588, 13.625, 29.7037, 35.85, 6.8523, 9.1828, 5.3103, 0.0, 13.2286, 44.8387, 0.0, 0.5903], [25.7941, 25.4945, 14.5339, 5.0299, 29.6947, 0.0, 40.4, 8.1116, 15.1297, 0.0, 29.5333, 34.3158, 17.8, 5.8261, 47.6142, 15.0441, 0.0375, 0.0], [11.1324, 30.1319, 14.1695, 7.2836, 17.8053, 12.0, 0.0, 9.3368, 13.7782, 0.0, 0.0, 18.602, 19.1316, 29.45, 16.5217, 40.9449, 12.6618, 7.275, 1.9259, 3.87, 48.4432, 14.2258, 21.2759, 2.8214, 0.0, 0.0, 10.6364, 0.0, 22.8871, 1.8679, 0.6875], [1.194, 6.2965, 0.0, 0.0, 5.0517, 10.8452, 23.9355, 84.0162, 0.0, 9.9565, 10.5984, 7.1544, 5.475, 15.8519], [13.9265, 29.3571, 49.678, 39.0, 19.9602, 0.0, 0.0, 24.7913, 11.0126, 0.0, 10.15, 19.6788, 0.0526, 0.0, 9.7826, 24.4567, 1.7279, 4.325, 2.5185, 12.55, 5.6818, 2.9247, 5.1724, 1.9286, 47.6857, 56.0364, 2.6562, 26.3387, 0.1321, 0.4028], [1.7742, 51.9, 62.1374, 25.8684, 28.65, 43.2609, 50.7008, 51.8971, 53.3875, 22.0741, 9.1379, 1.75, 29.3429], [20.7353, 55.5879, 17.4576, 20.4478, 41.5708, 0.0, 0.0, 21.2045, 46.4059, 0.0, 26.3232, 0.0], [69.8644, 0.4179, 34.1106, 0.0, 74.3429, 26.7645, 69.5146, 53.0, 7.3697, 78.8158, 79.1, 9.1565, 26.1654, 29.5956, 38.3125, 0.4074], [13.7794, 28.6538, 17.1695, 3.0746, 30.8496, 38.2456, 17.6963, 37.9874, 90.5806, 24.1798, 24.4474, 0.0, 5.0348, 1.4803, 100.2279, 1.725, 4.7407, 1.36, 33.0682, 17.1075, 7.8448, 0.0, 1.5143, 11.5455, 0.0, 0.0, 0.4839, 3.3019, 32.9444], [66.5, 86.1703, 34.8136, 35.0, 23.0088, 0.0, 0.0, 11.4442, 29.2678, 0.0, 0.0, 20.6465, 7.7105, 0.0, 23.6348, 47.8268, 6.1912, 19.525, 23.963, 16.39, 11.2386, 27.0538, 1.9655, 3.9286, 0.5429, 0.0, 21.6364, 2.0312, 42.8548, 27.4906, 6.8333], [28.5147, 79.3132, 46.678, 1.5224, 61.177, 0.0, 0.0, 13.1033, 15.1172, 0.0, 1.65, 25.9051, 31.1316, 28.3826, 33.0079, 17.875, 33.55, 0.4444, 25.6207, 0.0, 3.6571, 0.0, 45.1091, 2.9375, 5.871, 20.8302, 10.4167], [5.318, 100.2581, 33.8, 16.4424, 581.6316, 123.75, 58.9391, 85.7638, 37.0368, 298.275, 30.2593], [69.2353, 316.0989, 92.9661, 224.403], [20.0588, 49.4286, 62.6017, 25.7015, 39.292, 0.0, 0.0, 4.1116, 31.7824, 34.1, 25.9232, 40.0263, 54.15, 28.0, 65.2677, 42.9118, 50.8625, 1.2222, 29.37, 15.2273, 53.6559, 5.8966, 0.0, 22.8571, 5.5455, 17.9091, 11.0469, 59.871, 11.2264, 1.0833], [194.3182, 776.7455, 300.9531, 272.2258, 75.8868, 43.8542], [39.6029, 92.1703, 1.5847, 3.9552, 69.2566, 24.3509, 25.6529, 37.0711, 56.3111, 0.0, 15.087, 42.7874, 27.5662, 13.7875, 15.8889, 0.0, 0.0, 0.0, 0.0, 170.6182, 0.0625, 91.6129, 13.7358, 21.9583], [74.4118, 76.4505, 77.6102, 42.7164, 62.5133, 57.9143, 18.4814, 50.682, 30.8387, 19.15, 63.8545, 50.8421, 32.3, 65.3565, 65.3465, 40.0662, 39.9125, 15.3333, 29.38, 62.7045, 37.2151, 15.3621, 85.7143, 95.6, 0.4545, 183.1273, 42.7812, 62.3065, 53.6981, 12.6944], [61.2794, 82.3022, 103.9576, 14.8657, 63.4779, 10.7193, 15.5429, 45.1488, 64.9414, 2.3548, 5.65, 99.7899, 93.6316, 90.65, 29.8435, 14.2126, 14.625, 42.3, 2.4074, 52.7, 22.4318, 94.0645, 22.3103, 0.0, 60.1429, 41.2727, 48.0364, 19.3906, 81.7903, 32.0189, 24.3819], [260.8971, 43.0495, 117.0847, 12.7761, 54.9425, 0.0, 0.0, 19.6322, 61.8201, 115.5806, 95.8, 151.5354, 3.2368, 10.3, 27.4, 17.4331, 33.8088, 26.325, 0.0, 299.57, 136.6364, 199.0, 49.0862, 6.0357, 0.0, 59.2182, 0.0, 62.3019, 49.9931], [209.7611, 0.0, 66.314, 123.8661, 0.1, 115.4101, 164.7895, 0.0, 273.6435, 193.0945, 163.4706, 147.3375, 99.4444], [84.3382, 152.4835, 5.7895, 0.0, 52.5083, 104.9163, 0.0, 229.1859, 0.0, 146.811, 85.4191, 62.025, 61.1481, 292.42, 0.0, 0.0, 57.569, 0.0, 45.2571, 0.0, 97.8727, 1.0, 15.4194, 104.8868, 39.8403]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

