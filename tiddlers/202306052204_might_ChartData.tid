created: 20230605220452000
creator: Drevarr
modified: 20230705163533839
modifier: drevarr
tags: ChartData
title: 202306052204_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Stoic Rapidfire", "Miphest\u00f6", "Koralia Danai", "Zaylen Harker", "Ak\u00e1nt\u00f3r", "Gabe Malhorn", "Blanco Padre Guard", "Sygaldry Verdandi", "Etchery", "Drevarr Moonwillow", "Solus Sanctus", "Crusader Siolith", "Bella Sassy", "Venomina The Siren", "Johosh Of The North", "Newtype Khan", "Artakama Nahid", "Zayde Sunsabre"];
const professions = ["Scrapper", "Druid", "Tempest", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 88.7615, 1.092, 24.1823, 0.2451, 2.0812, 0.583, 1.6546, 11.5133, 7.8711, 2.7434, 0.6624, 30.888, 22.4773, 3.8822, 1.7617], [2.88, 147.0235, 8.8452, 58.9298, 0.0, 2.7806, 0.0, 3.0056, 1.1371, 5.1929, 0.0, 0.0, 15.756, 17.5028, 6.6552, 0.0], [0.0, 9.6314, 96.9641, 0.0, 4.5454, 0.649, 1.5939, 14.214, 17.9303, 1.0217, 5.6304, 63.024, 42.9279, 4.1318, 8.1203], [0.0, 81.7232, 3.8438, 51.6516, 5.3535, 0.0, 0.0, 0.0, 9.2865, 8.8182, 8.7978, 5.0342, 34.164, 59.878, 12.0348, 4.7992], [0.0, 91.4987, 1.2012, 58.4602, 0.0387, 0.1831, 0.0, 22.9319, 7.7078, 2.4028, 3.5549, 40.092, 58.4041, 11.0365, 9.5175], [3.8448, 119.2611, 1.0046, 66.208, 2.1543, 0.6826, 1.133, 0.0, 2.9849, 5.3889, 8.9681, 4.0186, 35.568, 48.6394, 0.0, 10.3882], [0.0, 77.422, 8.9544, 62.921, 6.9015, 0.0, 0.0, 2.6869, 14.7826, 8.9815, 0.0, 6.9331, 43.212, 60.615, 21.879, 7.0065], [0.0, 113.0048, 0.0, 66.4427, 6.3597, 7.0596, 6.435, 0.0, 17.7675, 9.9286, 0.6622, 6.2486, 60.684, 37.2165, 9.7055, 9.3555], [0.0, 128.6456, 5.5255, 76.0687, 6.5403, 2.4642, 0.693, 0.0152, 13.9771, 9.896, 6.1868, 3.4666, 46.488, 52.5084, 13.0886, 9.072], [6.264, 151.3247, 11.2913, 84.9904, 0.7224, 3.1468, 1.507, 1.4725, 19.2363, 15.9054, 4.5597, 3.4886, 43.836, 51.403, 0.0, 3.5842], [1.4688, 159.1451, 11.7936, 97.1989, 1.1481, 5.7942, 1.65, 4.888, 15.3511, 10.2879, 2.7245, 6.4474, 51.636, 43.8491, 11.0643], [6.3216, 142.3313, 7.2946, 88.7468, 7.9851, 6.1605, 2.2, 8.9866, 24.7797, 14.7297, 6.8301, 5.4979, 54.444, 33.3474, 10.1492, 4.698], [5.0688, 132.1648, 1.8346, 93.4424, 7.4304, 0.0, 5.17, 0.0, 16.962, 24.7236, 1.0406, 10.0685, 53.976, 92.6727, 3.6326, 6.8445], [11.0736, 199.0292, 9.0418, 104.7119, 7.3401, 8.5248, 1.606, 8.6222, 30.9391, 16.6893, 7.568, 11.6582, 79.092, 123.0723, 13.6709, 7.1482], [0.0, 331.976, 0.1966, 186.1805, 0.0, 0.2164, 0.0, 0.0, 15.7775, 40.2698, 4.5219, 14.904, 80.184, 74.2487, 24.2915, 13.0207], [0.0, 328.4568, 23.0412, 222.8062, 0.0, 0.5494, 0.0, 5.4344, 19.4732, 29.3287, 0.0, 10.8192, 142.896, 76.6438, 0.0, 0.0], [12.4272, 299.5213, 20.333, 183.8327, 12.0486, 5.0283, 12.111, 1.8823, 31.8394, 21.425, 16.0252, 13.0051, 113.256, 139.6539, 14.8078, 10.611], [0.0, 469.615, 10.8982, 211.7716, 0.0, 12.3876, 0.451, 7.6204, 15.9197, 29.7859, 17.8226, 12.2986, 116.22, 126.2044, 12.8113, 6.7027], [11.9088, 414.0902, 39.0499, 336.4397, 14.7834, 14.9517, 10.23, 18.4285, 51.8811, 43.1112, 18.8632, 26.8714, 212.94, 133.3898, 24.0419, 21.141]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

