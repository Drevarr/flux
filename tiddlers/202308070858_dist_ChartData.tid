created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Rockdevil", "Unbreakable Nemesis", "Hawaiian Supreme", "Surethang Blind", "Forever Dreaming", "Aloe Pen", "Mom Tapper", "Liza Hexx", "Xuerreux", "Alarics Bane", "Dragon Deezz", "Vee U", "Drevarr Moonwillow", "Crabbedmermaid", "Xanvias Tsolea"];
const professions = ["Weaver", "Firebrand", "Berserker", "Vindicator", "Harbinger", "Vindicator", "Spellbreaker", "Scourge", "Berserker", "Reaper", "Firebrand", "Tempest", "Scrapper", "Dragonhunter", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[346, 649, 750, 368, 9778, 701, 1454, 817, 593, 361, 1293, 657, 3208, 545, 597, 1307, 623, 795, 554, 372, 10738, 2451, 10241, 507, 747, 1017, 1222, 846, 508, 1045, 2276, 1131], [3443, 967, 324, 329, 265, 715, 3130, 4379, 620, 441, 303, 11628, 8318, 744, 1436, 513, 402, 524, 185, 243, 262, 284, 8218, 628, 586, 1480], [7368, 404, 347, 313, 3462, 1464, 108, 1873, 1188, 378, 351, 6306, 3270, 9172, 2480, 7892, 404, 514, 337, 1040, 5289, 627, 505, 1706, 800, 510, 548, 3896, 457, 397, 660, 306, 869, 1040], [290, 298, 604, 3475, 12867, 4633, 357, 307, 351, 320, 8699, 1396, 563, 1416, 762, 254, 226, 300, 368, 13362, 453, 426, 601, 458], [8218, 3784, 275, 292, 372, 9645, 532, 790, 416, 910, 4818, 757, 5889, 3794, 871, 2179, 453, 511, 413, 443, 817, 5586, 663], [194, 385, 1391, 1371, 490, 862, 255, 191, 301, 7384, 11468, 663, 470, 364, 838, 4842, 1016, 592, 1384, 576, 2755, 770, 4539, 3478, 485, 866, 292, 4161, 2064], [412, 221, 307, 444, 3634, 602, 606, 829, 674, 1980, 1604, 597, 1255, 2747, 2295, 1232, 602, 963, 783, 847, 850, 826, 660], [315, 5668, 2174, 411, 4809, 1288, 497, 783, 6651, 182, 365, 266, 240, 12659, 349, 282, 300, 1309, 4517, 851, 2720, 703, 1452, 301, 643, 234, 1286, 357, 661, 307, 1112, 1095], [781, 2170, 703, 1441, 739, 411, 862, 219, 264, 373, 7535, 523, 347, 400, 1342, 430, 849, 614, 698, 510, 387, 448, 513, 450, 411, 660, 247, 1116, 676], [3256, 1491, 451, 638, 506, 1587, 285, 286, 318, 3423, 552, 379, 619, 1826, 5564, 864, 712, 1531, 1659, 445, 697, 722, 409, 444, 981, 667, 1281, 646], [230, 492, 194, 323, 186, 661, 665, 529, 277, 338, 339, 6181, 343, 2860, 1214, 511, 436, 7188, 204, 184, 228, 298, 10438, 1225, 360, 658, 1943, 4472, 804, 456, 973, 396, 2567], [3512, 226, 260, 788, 439, 5408, 374, 259, 391, 353, 1275, 574, 504, 1263, 3892, 341, 496, 297, 203, 247, 316, 1296, 594, 434, 376, 624, 609], [716, 671, 174, 210, 190, 970, 349, 708, 263, 202, 393, 2433, 388, 1632, 541, 1667, 317, 589, 516, 211, 123, 244, 239, 8851, 292, 323, 345, 1252, 311, 435, 689, 798], [288, 484, 143, 209, 118, 3686, 4504, 4094, 277, 215, 194, 2705, 2760, 2788, 7468, 1240, 325, 314, 6916, 203, 180, 253, 202, 8335, 246, 325, 318, 1571, 4911, 296, 7770, 541, 555, 4358, 2127, 2531, 373, 258, 915, 3024], [286, 266, 275, 7404, 536, 2492, 1015, 1601, 393, 348, 7687, 169, 143, 202, 234, 9674, 271, 218, 279, 276, 5169, 534, 464, 337, 475, 273, 227, 288, 464, 332, 454, 270, 818, 784]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

