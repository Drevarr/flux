created: 20230510220110000
creator: Drevarr
modified: 20230705163529466
modifier: drevarr
tags: ChartData
title: 202305102201_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Mistwalker Caelon", "Xanvias Einzbern", "Etchery Howls", "Demon Sekhmet", "Lord Erin The Wise", "Permanent Dawn", "Dimsnail", "River No Hug", "Tika Fiery", "Husky Guard", "Tribal S", "Sumatra Satyricon", "No Reserv\u00e9", "Venomina The Siren", "Blancooo Padreee", "Black Raspberry Pie", "Roxy Willowmoon", "Lucas Ryn", "Miphest\u00f6", "Johoshua", "Aira Draugr", "Mac Aaroni", "Primal Clone", "Rozaalyna", "Sub Train", "Belvyn Brightblade", "Tegan Parker", "Drevarr Moonwillow", "Ark Darkness", "Pymmera", "Artakama Nahid", "Bella Sassy", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Solus Sanctus", "Gavann", "Zaidy Sagemist", "Koralia Danai", "Pyraliis", "Jeckyll Mbs", "Raelyn Sunray", "Spreadflamesoflight", "Grilo Gringo", "Grasszanine", "Binkety Bonk", "Xkaet", "Astrid X Dragon", "Be\u00eb", "Aetius Wildaxe"];
const professions = ["Scourge", "Vindicator", "Berserker", "Druid", "Spellbreaker", "Weaver", "Weaver", "Vindicator", "Scourge", "Firebrand", "Dragonhunter", "Druid", "Soulbeast", "Herald", "Tempest", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Tempest", "Scrapper", "Herald", "Tempest", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Weaver", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Berserker", "Firebrand", "Willbender", "Dragonhunter", "Spellbreaker", "Scrapper", "Tempest", "Dragonhunter", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[247.2174, 201.1905, 361.0245, 123.7871, 111.3951, 256.7587, 228.4211, 0.0, 10.5172, 1325.6, 125.0779, 85.5368, 135.5825, 374.3171, 121.5597], [45.6, 105.0, 218.9945, 107.8035, 198.3971, 161.0067, 260.5072, 579.5946, 395.5, 29.6154, 773.9444, 467.7288, 167.5126, 9.3364, 271.9412, 235.4087], [72.48, 150.6047, 418.5877, 95.4912, 68.9036, 322.4621, 0.0, 555.5263, 0.0, 399.3714, 253.4789, 94.7536, 28.2095, 150.0541, 103.2122], [5.7959, 517.9647, 233.886, 122.5, 280.7506, 94.1159, 208.0, 0.7857, 479.8857, 200.6154, 64.431, 86.3656], [79.4, 66.8298, 168.5305, 258.9891, 76.7927, 203.9696, 29.6638, 322.6579, 141.6923, 0.7222, 824.75, 953.623, 64.3262, 65.1122, 250.7778, 158.6899], [132.4, 7.5143, 185.9194, 235.7854, 93.4767, 286.8, 0.0, 550.0, 455.7, 283.9519, 153.4516, 278.0476, 168.0668, 69.5146, 375.8605, 45.4029], [61.7955, 347.3051, 168.2015, 44.4096, 200.4475, 46.5946, 421.4167, 0.0, 72.4103, 759.3143, 346.9836, 115.2695, 202.0962, 79.9688], [150.2692, 74.5532, 310.4402, 87.8253, 72.6795, 244.9257, 7.0593, 137.3889, 0.0, 324.2059, 176.8082, 180.5887, 92.2736, 365.0, 94.7164], [204.0, 63.6279, 325.6152, 204.3957, 103.8193, 313.8041, 22.7763, 352.2162, 0.0, 14.6699, 138.25, 222.6716, 88.8629, 38.8224], [6.0385, 84.3488, 259.4738, 160.0912, 74.0741, 159.9865, 0.0, 289.8158, 0.0, 22.0179, 1508.5882, 107.4783, 81.5829, 6.6381, 1096.4773, 55.0655], [0.0, 336.888, 26.7917, 177.6707, 213.5702, 33.8627, 300.1622, 0.0, 537.4286, 228.4058, 72.3511, 131.3571, 291.0976, 131.6147], [105.375, 66.6596, 293.7203, 166.2788, 31.3086, 177.7073, 3.7372, 89.8421, 227.4667, 71.7317, 887.5294, 257.918, 113.3988, 5.6222, 307.075, 123.6125], [0.0, 0.0, 234.0323, 67.2762, 186.1395, 219.6415, 0.0, 36.0789, 635.4194, 0.0, 409.0417, 467.2254, 150.3507, 76.8, 158.2571, 51.7875], [110.24, 95.5, 292.4473, 54.1818, 74.2439, 266.5062, 14.4058, 432.6579, 0.0, 62.45, 309.3429, 240.9054, 90.9528, 29.6095, 80.1111, 73.584], [85.6883, 161.0717, 113.7805, 348.4856, 42.4722, 184.1944, 0.0, 406.1176, 691.0161, 87.3603, 151.3421, 112.9121], [64.0909, 48.6279, 198.7626, 213.6386, 64.0361, 179.6366, 0.0, 323.0556, 0.0, 9.8095, 311.5625, 391.9839, 149.9694, 203.5435, 32.5, 39.7664], [101.96, 95.0789, 300.0352, 124.8233, 109.4595, 247.7268, 40.5036, 504.5, 0.0, 27.6364, 798.5, 195.9577, 40.7018, 27.7667, 57.3125, 24.9803], [58.4783, 19.575, 299.2248, 318.7036, 118.1333, 355.2868], [13.6522, 326.2558, 183.1479, 40.8333, 143.8239, 0.0, 194.0, 0.0, 4.2727, 646.1212, 226.3973, 82.7464, 0.0, 72.2703, 78.7037], [94.0488, 152.2732, 334.0192, 75.0241, 154.1828, 0.0, 150.3421, 0.0, 312.4571, 212.902, 87.5737, 0.0, 188.2178], [68.5833, 81.9565, 298.7849, 194.7593, 118.5195, 212.761, 9.137, 263.9189, 0.0, 87.1786, 171.0857, 161.0333, 80.4502, 18.2667, 67.7838, 67.8956], [0.0, 16.7436, 409.5368, 116.1965, 144.0127, 318.75], [127.125, 89.0698, 200.519, 151.5858, 37.6588, 218.1009, 55.7453, 120.3947, 142.3846, 10.1475, 262.4, 378.9155, 116.905, 67.037, 0.0, 45.7636], [0.0, 6.8696, 308.9377, 236.4146, 41.7895, 130.1171, 0.0, 151.8649, 0.0, 0.0, 105.8, 79.9306, 94.3133, 58.5, 101.8056, 28.9689], [5.5, 255.9567, 7.9494, 336.2989, 0.0, 212.2222, 0.0, 0.0, 1307.4444, 256.0462], [21.88, 128.1203, 244.9132, 37.5325, 213.4645, 0.0, 292.5135, 0.0, 0.0, 191.6, 116.9677, 71.4683, 42.64, 50.8097], [66.125, 99.4872, 188.5142, 182.8989, 182.9726, 297.5802], [8.7619, 239.9118, 138.1019, 25.1212, 171.068, 0.0, 129.3684, 5.0306, 96.5294, 73.9636, 120.6085, 14.9894, 0.0, 56.0912], [88.24, 8.1458, 234.858, 147.305, 35.1977, 178.9465, 15.1918, 172.7632, 164.3, 33.4048, 230.2222, 192.6389, 50.9373, 45.7826, 155.9512, 34.1328], [170.6543, 176.8269, 70.4819, 195.8799, 192.7872, 32.68, 0.0, 39.0, 278.0556, 165.7667, 65.0952, 40.9545], [0.0, 19.8084, 11.7941, 1310.8108, 0.0, 0.0, 760.6923, 244.6825, 283.1876, 129.25, 125.8788, 120.1778], [56.3333, 13.9118, 175.193, 107.6642, 45.7108, 180.4, 0.0, 182.5676, 0.0, 51.7857, 463.1667, 186.375, 80.4883, 53.4381, 67.6111, 29.957], [12.44, 0.0, 247.6092, 35.1704, 60.0667, 154.2966, 0.0, 177.0, 15.1071, 785.7879, 119.1884, 80.2607, 21.3125, 39.8684, 17.4062], [76.5769, 3.5106, 200.7824, 81.7972, 33.9744, 176.9927, 16.0507, 513.7568, 16.5714, 0.0, 424.1111, 242.1667, 51.7278, 16.0, 120.975, 13.0935], [58.4103, 198.0191, 48.5261, 114.0137, 152.0116, 0.0, 137.1316, 14.7727, 252.2, 171.9643, 57.875, 46.3378, 134.875, 6.9544], [19.3333, 15.0417, 74.1165, 184.2288, 41.759, 149.2965, 0.0, 231.3889, 82.6, 16.4608, 105.9444, 246.2273, 83.0571, 3.9756, 19.1429, 11.0441], [0.0, 224.0, 0.0, 1.6633, 632.7273, 409.5556, 150.1478, 33.3333, 77.4062, 787.7], [0.0, 12.7381, 155.2088, 120.2378, 17.3134, 111.0586, 49.68, 9.5946, 144.9143, 45.0333, 60.1452, 25.1304, 22.6061, 17.8759], [46.1364, 64.1429, 263.593, 50.0745, 50.6282, 103.8727, 0.0, 62.9167, 0.0, 0.0, 170.875, 85.9167, 49.4754, 26.9643, 27.5833, 19.1738], [90.84, 42.1111, 478.7596], [17.6, 882.4286, 454.4324, 140.7636, 56.5, 244.275, 63.4711], [175.4458, 8.3469, 80.5429, 0.0, 32.3902, 58.1143, 126.6393, 71.3794, 32.4091, 71.4571, 82.3409], [183.9518], [0.1875, 2826.1667], [88.0142], [79.9474, 47.4108], [0.0, 139.7436, 374.4], [14.8871], [27.619], [61.5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

