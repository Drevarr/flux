created: 20230510220110000
creator: Drevarr
modified: 20230705163529556
modifier: drevarr
tags: ChartData
title: 202305102201_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Raelyn Sunray", "Black Raspberry Pie", "Ark Darkness", "Tika Fiery", "Johoshua", "Sygaldry Verdandi", "Miphest\u00f6", "Drevarr Moonwillow", "Solus Sanctus", "Sub Train", "Koralia Danai", "Tegan Parker", "Venomina The Siren", "Mac Aaroni", "Bella Sassy", "Lucas Ryn", "Artakama Nahid", "Demon Sekhmet", "Blancooo Padreee"];
const professions = ["Druid", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.8361, 0.0, 24.956, 21.2073, 9.9144, 33.663, 10.0685, 0.0, 0.0, 0.0, 1.2176, 6.3445, 19.1139, 0.0, 0.0, 14.0549], [39.2735, 8.0813, 1.4414, 0.0, 9.1022, 9.0209, 8.5613, 41.1365, 11.3506, 0.5645, 20.915], [0.0, 4.2192, 18.5335, 17.7646, 0.0, 28.2769, 7.6176, 5.0918, 2.8971, 6.1916, 2.5725, 5.3126, 17.2441, 12.8914, 4.7628, 16.732], [25.8735, 24.9255, 0.0, 40.8444, 5.8954, 1.9469, 2.8542, 8.3084, 1.3034, 13.721, 44.2529, 5.9064], [0.8611, 0.0, 33.9475, 25.6141, 4.8144, 49.148, 1.8547, 0.0, 0.0, 6.6679, 1.0461, 0.5351, 26.5933, 0.0, 4.4629, 27.9424], [4.2775, 7.6652, 43.673, 33.739, 16.116, 53.1875, 4.7693, 4.4928, 2.5001, 2.646, 1.9723, 5.0833, 28.8786, 11.4533, 3.1752, 24.4287], [5.898, 48.2605, 34.0144, 5.4264, 71.1411, 10.9958, 2.9016, 6.5092, 5.6766, 8.0262, 37.8123, 7.1904, 1.6052, 38.6509], [1.0824, 27.7085, 40.2113, 11.5872, 59.4713, 16.8912, 5.616, 18.0986, 4.4076, 12.1157, 81.8574, 9.7584, 20.5804], [8.892, 10.1614, 40.1865, 62.9335, 19.5024, 70.6923, 11.2608, 5.6534, 1.7383, 14.5001, 6.7571, 6.4592, 66.8987, 7.6526, 7.5323, 29.9503], [4.2307, 4.2855, 37.434, 44.8935, 16.8912, 92.0122, 11.7907, 6.3086, 1.2876, 8.6789, 4.2017, 10.3958, 68.353, 23.112, 4.2512, 46.013], [0.0, 36.8835, 73.6749, 18.0336, 78.0982, 17.6198, 3.8376, 1.5666, 5.5037, 11.4391, 9.7079, 59.0038, 13.3022, 57.7254], [0.0, 0.0, 63.491, 52.4675, 9.9552, 78.9958, 22.1242, 3.2386, 1.1052, 19.9508, 8.2835, 6.5356, 67.9375, 16.8461, 0.8644, 40.4914], [9.2336, 59.2705, 49.9887, 0.0, 103.0088, 48.289, 6.4397, 23.0202, 1.5607, 0.0, 65.0289, 31.4323, 0.0, 91.524], [169.554, 23.6861, 0.0, 109.0681, 20.2694, 0.0, 10.6898, 1.8179, 6.8796, 92.8687, 17.0002, 71.111], [0.0, 0.0, 82.0245, 61.8318, 31.2528, 140.2625, 19.2096, 19.6186, 0.0, 4.7628, 0.2058, 14.1414, 91.6222, 45.2482, 0.0, 21.417], [3.2947, 0.0, 88.814, 86.4819, 18.0744, 117.3717, 25.3699, 4.9982, 15.3468, 2.4353, 17.887, 118.4232, 28.813, 5.6801, 61.0718], [3.7111, 77.804, 96.8101, 18.1968, 118.9426, 27.0259, 5.4475, 2.1567, 27.9418, 10.4101, 15.0587, 138.1604, 23.3688, 2.7695, 67.2626], [4.8766, 0.0, 162.3975, 159.7436, 42.7584, 155.7475, 36.432, 22.5763, 0.1395, 3.0164, 16.6183, 7.988, 177.6348, 14.8944, 0.0, 113.1083], [17.8308, 6.2515, 171.2055, 138.3985, 42.1872, 79.8935, 27.6221, 23.9803, 8.0797, 28.8414, 15.4178, 36.0032, 238.924, 74.0098, 15.9642, 61.9084], [23.0537, 26.7289, 217.264, 196.6499, 45.0024, 311.9438, 77.567, 19.4314, 1.4807, 35.2976, 20.923, 40.3221, 228.3282, 39.085, 2.7342, 116.9567]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

