created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Surethang Smarts", "Drac Tepes", "Necrotic Windrunner", "Flick Embermage", "Legoh Brave", "Vesnan", "Big Boy Belkins", "Drevarr Moonwillow", "Dizzy Bunnyhopper", "Wren Duskbloom", "Unbound Serenity", "Tridogen", "Elonith Requiem", "Latedoctor", "Tridoren", "Big Boy Belkins", "Charr Surethang", "Xanvias Tsolice"];
const professions = ["Holosmith", "Scourge", "Reaper", "Weaver", "Tempest", "Reaper", "Scrapper", "Scrapper", "Holosmith", "Reaper", "Reaper", "Scrapper", "Reaper", "Reaper", "Reaper", "Holosmith", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[133.9348, 238.8333, 375.3506, 0.0, 0.0, 1587.4416, 692.3046, 950.8305, 10.2703, 1457.3571], [35.0476, 0.0, 652.8333, 419.3464, 103.3196, 339.125, 335.3421, 0.0, 202.0455, 300.6806, 379.1495, 190.684], [1128.3939, 500.2281, 346.5425, 173.6907, 152.8571, 669.3947, 0.0, 192.9545, 694.3125, 101.3256, 293.3704], [559.6296, 503.9253, 1187.3607, 249.6286, 76.5738, 764.5909, 489.5294, 107.3529, 110.1944, 0.0, 1012.7273, 178.0317, 879.0219, 584.0654], [522.1271, 0.0, 315.6429, 189.0741, 609.8161, 988.5492, 295.1714, 53.459, 446.6477, 0.0, 263.5294, 183.2222, 4.4231, 1309.7273, 104.4444, 0.0, 580.5702, 465.8954, 320.8969, 655.0357], [0.0, 955.477, 885.9426, 1250.3429, 808.5455, 624.5588, 20.3824, 367.0694, 456.6346, 419.4394, 174.6009, 314.1765, 417.567, 1442.8571, 591.1579, 514.8864, 403.0417, 42.0266, 213.7852], [5598.6885, 1611.4444], [2121.7174, 1282.4405, 752.5455, 249.6667, 104.9197, 2730.1429, 1098.198, 803.661, 14.9054, 137.8095, 68.8148, 63.1552, 169.8033, 290.8286, 40.2787, 152.6591, 0.0, 3.9706, 73.4167, 50.9038, 160.9697, 13.5079, 106.5, 130.7807, 87.9346, 81.8351, 208.0, 185.5789, 43.55, 189.8409, 189.3194], [168.2623, 214.9429, 252.9836, 919.9545, 0.0, 261.8235, 392.375, 0.0, 623.0, 197.5556, 434.943, 394.0523, 705.7423, 22.1607, 1186.0263, 180.5682, 1618.1458, 1392.3987, 383.1951], [272.2963, 1014.2241, 320.3033, 1348.0, 0.0, 1273.4886, 239.6765, 839.125, 80.8077, 1154.6364, 991.1111, 1928.0439, 783.3791, 970.732, 995.7143, 1693.3158, 1656.5682, 1094.4306], [584.4195, 1612.4016, 1488.1429, 356.1475, 1331.3182, 0.0, 325.0588, 404.1667, 100.6346, 3548.697, 363.3492, 0.0, 1489.9167, 753.0261, 545.8247, 909.7679, 975.1842, 227.0909, 1879.3819], [62.0811, 1880.2857, 937.0, 1964.5747, 3344.582, 1658.9143, 2227.1475, 1963.0341, 470.1176, 1142.6471, 1231.9167, 366.6538, 2083.0909, 1371.6825, 662.5, 383.8728], [185.1757, 1623.7619, 416.7037, 1480.4138, 2499.6393, 463.6571, 337.6557, 2288.6932, 873.3235, 542.7059, 743.0556, 685.8654, 2228.0152, 1145.5714, 0.0, 2147.8728, 1391.7582, 1060.9072, 2606.6786, 1409.8947], [1648.8696, 141.3214, 55.1558, 0.0, 380.8175, 890.8701, 493.9746, 1298.8305, 194.7838, 1481.0476, 984.0741, 574.092, 1662.5738, 1285.6571, 770.2623, 1135.6818, 1120.4706, 625.8529, 896.6944, 78.7692, 2000.1061, 707.3175, 979.4956, 1229.1961, 810.6186, 1456.0357, 1174.5, 13.65, 1195.7273, 1804.6528], [1100.5219, 1423.3529, 1260.7835, 4562.3393, 2677.3684, 290.5, 1124.4091, 2119.5625, 2665.8173, 492.3383], [2059.339, 0.0, 2997.2619, 2465.0741, 2243.3046, 893.9714, 0.0, 2007.9773, 0.0, 584.3472, 666.3846, 108.1429, 3210.2588, 0.0, 2493.8036, 2132.3684, 324.7, 1302.0, 2812.6736], [1918.3333, 2210.7701, 2170.5984, 812.4286, 40.7705, 2338.3409, 403.0, 0.0, 968.8611, 0.0, 34.5556, 3231.6974, 2788.3464, 1769.2165, 1753.3929, 1262.7895, 1917.4318, 3080.0625], [4542.2609, 3463.7024, 4353.974, 0.0, 0.0, 2685.6234, 2386.4975, 2819.1017, 96.6216, 3987.9286, 1964.7037, 2950.0517, 4796.0574, 4035.8571, 1235.5738, 3612.7045, 3734.7353, 735.2353, 1341.0833, 0.0, 7081.803, 1121.0317, 0.0, 2739.3904, 2677.3333, 3618.2784, 1400.8214, 4223.3158, 98.1, 4669.8864, 4754.5, 3456.4385, 1704.6469]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

