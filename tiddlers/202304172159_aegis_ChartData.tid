created: 20230417215912000
creator: Drevarr
modified: 20230705163525679
modifier: drevarr
tags: ChartData
title: 202304172159_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Chioguard", "Mettrik Milliohm", "Cat Wigglebooty", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Sub Train", "Ark Darkness", "Gavann", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Guardian", "Firebrand", "Scrapper", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[115.2201, 72.1829, 44.7802, 57.5813, 67.643, 27.5625], [0.0, 0.0, 134.4785, 0.0, 24.8018, 8.742, 16.6463, 0.0, 26.8285, 1.2613, 0.0, 46.843, 28.0699, 31.6315, 42.8064, 33.8698, 24.9601, 0.0, 0.0, 21.2609, 5.8157, 0.0, 43.3541], [0.0, 5.031, 63.407, 73.4373, 0.0, 19.0483, 0.0, 5.6664, 0.0, 33.104, 35.4874, 0.0, 10.7428, 57.1389, 5.0333, 47.3134, 5.0261, 105.0516, 10.0838, 0.0, 35.2757, 0.0, 33.3749, 0.0, 0.0, 0.3567, 4.0915], [0.0, 27.8256, 3.0521, 35.5358, 61.2226, 48.7221, 21.8971, 0.0, 22.7233, 41.3158, 1.2118, 53.9494, 12.6048, 3.1546, 16.7212, 23.0168, 14.5981, 21.7253, 0.0, 36.0142, 15.6, 0.0, 47.7523, 6.4695, 18.2721, 0.0, 0.0, 18.4157, 4.0425], [0.0, 0.0, 0.0, 8.5695, 106.8396, 45.3583, 16.2601, 25.2487, 5.2062, 69.0371, 1.8346, 8.0546, 24.9908, 14.7864, 27.88, 34.7802, 43.045, 37.8638, 0.0, 0.0, 45.5533, 9.2352, 17.6904, 46.2264, 29.0134, 41.0071, 12.4094, 31.5706, 14.5363, 5.243], [0.0, 73.7209, 206.9437, 0.0, 107.7726, 8.5089, 30.3878, 0.0, 43.0759, 29.3147, 75.6832, 39.899, 0.0, 13.5137, 23.0275, 35.7573, 32.585, 0.0, 0.0, 7.3969, 16.848, 0.0, 39.0456, 1.8257, 14.2296, 42.1223, 18.5846, 34.5127, 6.223], [128.9043, 0.0, 139.8734, 0.0, 36.4766, 13.7861, 62.1565, 15.3644, 37.1309, 39.7051, 0.0, 24.7254, 74.8157, 63.9122, 19.3555, 0.0, 0.0, 23.2819, 19.0445, 0.0, 63.7296, 43.8971, 52.5202, 0.0, 26.555, 21.2694, 20.0655], [561.6047, 0.0, 121.03, 81.0675, 18.1545, 52.5623, 56.0276, 51.9792, 25.5103, 88.7116, 45.7651, 0.0, 53.4154, 204.477, 18.7699, 92.6717, 0.0, 38.5747, 16.6935, 44.7283, 0.0, 44.2517, 84.3016, 110.7322, 13.2709, 6.5318, 14.0013, 5.88], [7.1346, 0.0, 375.5644, 13.0332, 227.4619, 170.1776, 173.948, 64.0577, 67.5916, 13.6445, 15.7925, 61.1743, 73.3502, 26.749, 37.1734, 111.2202, 81.1092, 81.658, 0.0, 26.3914, 49.7166, 15.6499, 28.917, 68.4869, 59.019, 111.67, 22.9675, 47.0837, 66.3053, 26.95], [23.7429, 39.8152, 82.9444, 696.3155, 16.5946, 220.1629, 48.7221, 79.1536, 64.4742, 94.3622, 23.9257, 30.8167, 82.0789, 52.3584, 43.8236, 164.7282, 102.3958, 111.8969, 0.0, 38.2373, 94.502, 68.1408, 52.0749, 68.0381, 68.4653, 116.0683, 35.7068, 73.7942, 95.0659, 76.685], [40.7021, 50.5362, 179.8843, 79.5737, 575.308, 227.6109, 89.9843, 135.0136, 86.5904, 69.7309, 183.2267, 6.4469, 32.2749, 89.3486, 28.7753, 293.3385, 115.5557, 101.6652, 37.6639, 108.6202, 79.1424, 1.2979, 0.0, 81.6816, 87.5164, 50.4827, 100.5767, 50.2718, 106.5701, 16.8805], [81.9743, 181.3574, 29.4314, 514.2236, 0.0, 180.614, 11.5977, 21.5061, 101.5011, 38.3925, 15.6702, 48.1219, 84.6846, 127.3085, 62.9918, 33.763, 306.0466, 142.5047, 147.8707, 151.5186, 69.0864, 90.945, 50.5939, 151.8993, 77.9117, 99.7013, 91.7486, 56.823, 28.9656, 103.4042, 30.527], [32.93, 192.6923, 67.1303, 564.6241, 34.5686, 141.512, 81.592, 77.813, 108.2484, 50.1878, 156.7402, 61.1978, 110.0308, 107.0923, 29.412, 22.7218, 169.8879, 160.0688, 162.7295, 40.8618, 76.1549, 99.7566, 59.28, 53.9946, 217.309, 117.0061, 110.0207, 44.5419, 37.7525, 128.4192, 37.583]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

