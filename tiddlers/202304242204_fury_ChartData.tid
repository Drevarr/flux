created: 20230424220408000
creator: Drevarr
modified: 20230705163526576
modifier: drevarr
tags: ChartData
title: 202304242204_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Cedryn X", "Zefirokai", "Etch\u00e9ry", "Cyclotechnist Farra", "Xanvias Tsoli", "Daddys Lil Orchid", "Lord Erin The Wise", "Tootsie Pop Rocks", "Mike The Archmagus", "Tribal S", "Arka\u00f1tor", "Arriasa", "Cat Wigglebooty", "Leana Deeb", "Fribble Bibble", "Blancooo Padreee", "Solo Bloodborn", "Drevarr Moonwillow"];
const professions = ["Tempest", "Berserker", "Tempest", "Berserker", "Scrapper", "Holosmith", "Vindicator", "Weaver", "Scrapper", "Weaver", "Druid", "Scrapper", "Druid", "Scrapper", "Weaver", "Scrapper", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[113.6016, 0.0, 23.6372, 23.4701, 31.5034, 26.633, 33.7978, 19.4765, 31.4899, 24.5123, 10.3194, 30.5058, 23.82], [78.2189, 65.3453, 0.0, 0.0, 0.0, 0.0, 117.9675, 0.0, 108.9275, 53.82], [8.3597, 47.7595, 50.5574, 115.4765, 3.408, 46.2315, 78.7626, 84.6832, 137.1], [50.174, 0.0, 73.1141, 127.6132, 89.2416, 0.0, 0.0, 36.1248, 75.3743, 75.1464, 18.1355, 90.12], [301.7543, 15.925, 47.1814, 82.7255, 36.1536, 37.3053, 52.1318, 24.4694, 67.0687, 51.4206, 58.759, 101.58], [329.6813, 15.925, 17.7434, 53.6779, 30.697, 28.5003, 35.9414, 55.7568, 56.9818, 55.8967, 45.0702, 86.0959, 97.68], [407.0724, 38.759, 51.0007, 33.7344, 26.4967, 21.9101, 43.008, 11.1442, 44.1, 74.3967, 65.2496, 101.64], [525.1707, 11.9315, 66.5999, 23.8717, 54.1901, 16.6559, 43.9315, 57.7843, 40.044, 67.0687, 65.0034, 84.4542], [297.0208, 0.0, 51.9895, 77.2818, 47.5776, 13.6709, 48.1075, 64.6042, 69.421, 99.813, 42.4683, 150.5056, 142.92], [589.3083, 15.974, 67.7787, 101.9567, 62.2541, 22.1079, 39.0038, 63.8054, 54.5621, 59.4248, 68.1345, 54.941, 87.36], [526.1174, 44.786, 60.9233, 109.2298, 55.0771, 4.2798, 34.2989, 39.2294, 68.6712, 55.0883, 66.2382, 89.7994, 147.48], [467.6599, 28.469, 80.8071, 85.6704, 62.6304, 63.7611, 33.7978, 107.1514, 77.8728, 81.1072, 56.3598, 72.1602, 91.86], [789.0578, 35.0105, 99.326, 116.9044, 76.9843, 9.9908, 40.2566, 87.552, 66.3197, 89.7802, 152.1009, 114.1582, 149.46], [842.0719, 13.916, 124.8865, 187.761, 89.6717, 0.0, 62.0832, 105.3389, 103.7395, 101.5403, 119.2023, 157.7598, 0.0], [655.3392, 37.3625, 101.1252, 157.8656, 89.9674, 56.9598, 130.0128, 52.1626, 127.9363, 94.7048, 150.5574, 161.7687, 324.54], [1036.1413, 40.915, 158.171, 84.1087, 116.0141, 38.2867, 88.8653, 116.6438, 99.6499, 98.4165, 137.8125, 115.7236, 225.0], [829.5284, 56.1785, 143.4365, 133.1461, 105.3158, 21.0447, 128.8992, 69.4886, 179.6357, 74.0145, 158.8482, 172.7263, 294.0], [1175.7766, 155.134, 210.905, 110.4791, 100.585, 47.8958, 148.3037, 227.543, 70.1707, 194.187, 241.9767, 155.3162, 296.7], [1589.2391, 108.8045, 203.243, 242.1081, 144.9638, 84.5878, 104.8454, 134.0314, 212.6251, 135.5708, 240.345, 194.9853, 353.76]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

