created: 20230401222944000
creator: Drevarr
modified: 20230705163524004
modifier: drevarr
tags: ChartData
title: 202304012229_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Svess", "Slingsshot", "Tootsie Pop Rocks", "Cat Wigglebooty", "Mmathuss", "Newtype Khan", "Aluin Ellesmera", "Hyde En Sikh", "Macette", "Aronorf Xideliesi", "Tribal S", "Zadie Miststep", "Gabe Malhorn", "Drevarr Moonwillow", "Astraea Lumena", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi", "Johosh The Great"];
const professions = ["Tempest", "Druid", "Untamed", "Scrapper", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 17.9098, 99.2006, 71.0183, 0.0, 0.0, 20.1894, 0.0, 18.7368, 31.334, 0.0, 15.8414, 18.4486, 21.904, 14.2287, 94.08, 0.0, 64.1421, 0.0, 74.6259, 37.1589, 0.0, 0.0, 13.1315, 0.0, 18.4253, 38.6607, 24.6517], [21.168, 38.8692, 62.073, 50.8014, 352.336, 20.0801, 40.833, 5.1027, 25.9842, 0.0, 38.4826, 113.6661, 32.5125], [92.1043, 80.8653, 27.7477, 162.7039, 0.0, 56.5216, 33.0704, 29.2068, 16.4346, 18.7763, 23.5775, 51.7378, 50.3971, 12.5518, 19.8642, 38.201, 94.416, 0.0], [36.5165, 100.2675, 48.279, 167.3641, 0.0, 24.3264, 46.5161, 55.8201, 0.0, 78.4107, 31.9447, 0.0, 28.8807, 41.5735, 0.0, 0.0, 10.5028, 19.0176, 0.0, 53.0149, 0.0, 236.816, 22.6171, 2.6275, 2.3837, 0.0, 0.0, 6.9482, 22.5709], [7.6099, 96.7398, 45.9592, 27.5709, 8.2508, 57.5457, 0.0, 21.1459, 60.9198, 54.1318, 18.2801, 21.2332, 27.0936, 70.6272, 55.3599, 12.5324, 225.7261, 25.6802, 15.2802, 66.4496, 16.031, 16.533, 75.5453, 56.833, 28.4087], [50.207, 0.0, 41.716, 135.0048, 0.0, 160.0104, 0.0, 539.9405, 54.3616, 63.7299, 28.7123, 26.6115, 12.7413, 18.1315, 81.1964, 41.7316], [78.4291, 220.073, 94.9318, 133.8305, 5.1292, 50.2985, 39.2496, 41.6955, 34.3114, 61.51, 6.8947, 45.6491, 70.2605, 0.0, 23.451, 30.1587, 53.5584, 16.3188, 58.1647, 10.4394, 376.8262], [29.3462, 180.8614, 19.6165, 87.1266, 0.0, 19.3377, 0.0, 100.9071, 0.0, 91.0549, 16.2307, 67.9315, 0.0, 82.2442, 24.0926, 39.0576, 47.2978, 79.5648, 15.8976, 153.0674, 0.0, 171.6627, 31.8063, 24.5583, 13.3851, 0.0, 5.3559, 19.4698, 73.5355, 77.452], [88.4822, 114.7853, 49.4479, 184.2829, 2.2481, 57.653, 46.4365, 35.4312, 13.6675, 54.708, 31.4662, 11.6041, 47.6353, 34.6378, 0.0, 37.2094, 23.5224, 86.688, 0.0, 63.4984, 26.8478, 219.257, 43.2541, 41.6286, 19.7254, 27.0297, 0.0, 21.8035, 74.2927, 63.6089], [98.2397, 181.6755, 77.6021, 113.2646, 15.7753, 42.4298, 47.4708, 9.4563, 11.2191, 54.875, 0.0, 11.9119, 44.3142, 45.103, 0.0, 0.0, 37.3855, 76.5408, 16.686, 45.2903, 34.1863, 300.583, 54.7329, 33.6492, 33.7198, 34.8361, 37.1151, 31.416, 67.8344, 49.6502], [74.3356, 96.159, 22.4718, 76.4494, 5.2061, 31.0262, 38.3231, 179.509, 58.0835, 30.2275, 0.0, 187.5552, 0.0, 126.1231, 30.1036, 591.0003, 61.4159, 0.0, 69.3627, 27.9218, 0.0, 97.3978, 132.2393, 70.4582], [125.2944, 291.712, 52.2938, 67.7764, 54.5999, 82.4423, 53.8886, 62.2839, 22.1867, 121.3926, 14.3743, 47.4725, 158.045, 0.0, 32.4727, 22.5382, 85.344, 0.0, 79.0396, 0.0, 492.3462, 34.1268, 12.3786, 69.2104, 0.0, 21.0573, 25.0349, 29.1292, 74.273], [167.4288, 205.5552, 188.5422, 125.1179, 18.889, 39.4468, 30.3654, 32.2791, 3.8571, 39.4766, 9.4743, 0.0, 52.7472, 52.4491, 165.1104, 21.5891, 22.3835, 106.6464, 18.9648, 57.383, 139.5877, 254.8371, 29.4858, 10.7195, 33.93, 57.7665, 56.4346, 153.084, 57.6266], [234.9178, 567.6851, 121.7139, 579.2906, 24.3284, 139.6324, 41.8751, 95.1615, 22.0693, 125.8994, 24.2695, 16.7751, 76.0276, 158.8658, 21.9445, 22.2463, 15.9159, 213.9648, 0.0, 213.3012, 23.4627, 785.767, 102.2876, 30.0222, 84.0806, 23.4192, 23.2452, 23.3376, 64.3158, 74.0129], [135.6432, 558.1875, 146.6157, 404.4295, 57.1322, 157.4272, 60.8369, 105.1764, 52.1715, 210.4861, 39.0456, 85.63, 164.135, 149.796, 16.0477, 59.6336, 53.9482, 250.4544, 113.2487, 35.1424, 789.9258, 95.914, 29.0745, 43.1446, 53.4599, 52.767, 63.0768, 132.5956, 71.4697], [186.1306, 305.9584, 102.0974, 595.6015, 29.0571, 192.2968, 110.8536, 86.4234, 136.8432, 249.0029, 69.5356, 18.3449, 113.0483, 283.2581, 46.4162, 30.7067, 52.1345, 308.1792, 200.4728, 44.0572, 813.4918, 122.6462, 51.1641, 78.7494, 71.5261, 17.8299, 35.8224, 181.5896], [296.4931, 509.8854, 244.4442, 550.8225, 37.6876, 91.1854, 151.2436, 145.8345, 32.5673, 44.2338, 36.2129, 69.9014, 123.5978, 132.354, 105.2158, 52.5285, 56.6056, 276.864, 16.1352, 211.462, 88.2694, 979.1475, 172.6761, 64.5372, 101.8259, 32.0899, 72.4482, 28.3315, 175.2204, 103.2597], [398.5027, 811.5021, 244.2409, 616.674, 36.3569, 180.0564, 150.448, 105.2961, 86.399, 247.6675, 88.178, 123.5509, 76.4183, 230.3986, 140.5544, 100.334, 31.396, 226.1952, 0.0, 113.2947, 104.7812, 923.2358, 154.3906, 17.9712, 117.6672, 0.0, 30.2049, 118.4669, 117.1402, 144.5867], [203.0582, 527.5238, 199.9259, 638.8609, 84.148, 257.7157, 160.2604, 132.1488, 15.1265, 163.7068, 37.9546, 48.6016, 220.7242, 258.4699, 205.2508, 78.827, 139.0112, 380.2848, 0.0, 182.9084, 116.28, 1245.7677, 110.3011, 86.8257, 127.2253, 119.3822, 31.0761, 28.9517, 216.8653, 192.0983], [360.9514, 681.5206, 228.2834, 604.5168, 30.4783, 315.7802, 138.62, 129.2361, 74.442, 247.9597, 94.8004, 123.2123, 22.1734, 236.2673, 28.0098, 115.9406, 97.2108, 254.4192, 238.8661, 78.7603, 1492.2874, 208.8759, 22.3938, 121.3229, 87.3062, 31.1256, 125.1254, 203.6369, 258.4816]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

