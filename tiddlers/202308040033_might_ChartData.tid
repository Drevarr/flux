created: 20230804003338000
creator: Drevarr
tags: ChartData
title: 202308040033_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Surethang", "Eternal Depravity", "Gwyn Ghosthouse", "K\u00e2 \u00d4tik R\u00e6j", "Scarlet Merc\u00fcry", "Tirluka", "Squishy Jellyfish", "Astraea Lumena", "Sister Elon\u00edth", "World Devourerer", "Jimbo The Pleb", "Rafaellagabriela", "Drevarr Moonwillow", "Jerryatric Reflexes"];
const professions = ["Firebrand", "Scrapper", "Scourge", "Berserker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Dragonhunter", "Guardian", "Berserker", "Firebrand", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.6384, 1.4256, 8.7912, 0.576, 5.3546, 6.8288], [2.1879, 2.0709, 1.188, 5.2272, 0.0, 3.2537, 2.2067, 3.468, 3.5346, 0.4819, 1.9215, 3.8167, 1.2415, 0.0, 0.2632, 0.264, 1.6957], [0.0, 0.0, 0.3744, 3.2076, 0.0, 5.0728, 6.2622, 3.0192, 4.5669, 3.4655, 0.0, 0.6026, 2.0691, 0.0, 2.709, 0.0, 0.0, 1.124, 1.0584, 0.0], [1.2129, 3.9312, 14.9094, 5.8157, 8.7373], [4.9835, 0.8385, 0.0, 17.5824, 7.3529, 4.2941, 0.0], [0.0, 0.0, 18.2952, 3.1256, 0.7753, 4.4676, 0.8758, 0.0, 0.0, 8.1914, 0.0218, 0.0, 1.6564, 0.0, 0.0, 4.3411, 0.0], [11.73, 11.167, 1.0021, 7.8068, 6.8299, 7.1003, 0.0, 0.0, 0.0, 0.4845], [12.7704, 6.1934, 0.0, 0.9004, 7.6334, 9.9752, 4.8255, 3.901, 0.0, 5.5814, 1.1886], [2.9887, 1.3572, 4.0536, 22.0374, 5.7645, 4.0853, 6.1812, 9.603, 1.4, 4.6885, 8.2584, 6.2291, 2.1956, 2.4613, 1.7797, 2.5014, 2.3547, 12.731, 1.8585], [4.862, 0.1482, 2.232, 19.899, 0.0, 8.2496, 12.4648, 7.0788, 10.7603, 3.0218, 2.9097, 8.7941, 2.1562, 3.0762, 2.8328, 0.3367, 2.8908, 3.188, 2.331, 21.2587, 1.967], [6.6924, 2.7105, 3.4848, 28.6308, 2.61, 17.0117, 20.8144, 6.5484, 18.1737, 1.8207, 6.7637, 8.5709, 4.8352, 1.8266, 3.127, 1.3949, 1.0032, 3.2752], [0.0, 0.0, 5.3496, 48.3516, 0.0, 5.2777, 5.636, 0.0, 16.5471, 0.0, 1.4603, 17.2087, 6.2944, 6.8484, 6.6719, 0.0, 7.2666, 0.0, 0.6594, 15.876, 0.0], [7.293, 7.7544, 43.8966, 0.8595, 7.5067, 9.4529, 12.5052, 10.385, 3.8173, 3.272, 14.9544, 15.9212, 2.3562, 3.1889, 0.404, 0.8184, 5.3101, 1.239, 20.1096, 0.0], [233.442, 10.6245, 48.9086, 43.0303]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

