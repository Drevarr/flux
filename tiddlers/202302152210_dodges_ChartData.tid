created: 20230215221053000
creator: Drevarr
modified: 20230705163519319
modifier: drevarr
tags: ChartData
title: 202302152210_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Kosair", "Fribble Bibble", "Kosair", "Call Me Ever", "Sister Elon\u00edth", "Be\u00eb", "F\u00f9gly", "Daring Deathblade", "Veron Blackburn", "Johosh The Great", "Sygaldry Verdandi", "Jeckyll Mbs", "Rozaalyna", "Arka\u00f1", "Oo Dads Mad", "Tribal S", "Smol Daddy Tika", "Rina Of Theros", "Husky Guard", "Drevarr Moonwillow", "Nekro Atsume", "Lord Charrior", "Raziel Umbra", "K\u00e2 \u00d4tik R\u00e6j", "Skye Nightroad", "Sp\u00edcy Cheese", "Ark Darkness", "Primal Clone", "Grasszanine", "Mac Chiato", "Belvyn Brightblade", "Xanvias Tseli", "Dark Sidiuz", "\u00c9\u00efbhear", "Lord Erin The Wise", "Sister Elon\u00edth", "Etchery Howls", "Ryvalia Fazebringer", "Legacy Of Mathus", "Ace Hammers", "My Birthday Girl", "Domina Flagbringer", "Tegan Parker", "Bambiae", "Sassy Daddy Demon", "Newtype Khan", "Xyntharos", "Smol Gluvs", "Ravioli Fetabringer"];
const professions = ["Scrapper", "Dragonhunter", "Scrapper", "Firebrand", "Firebrand", "Dragonhunter", "Scourge", "Tempest", "Scourge", "Herald", "Firebrand", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Spellbreaker", "Druid", "Berserker", "Scourge", "Dragonhunter", "Scrapper", "Scourge", "Berserker", "Chronomancer", "Berserker", "Scrapper", "Berserker", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Scourge", "Scrapper", "Weaver", "Firebrand", "Druid", "Chronomancer", "Berserker", "Vindicator", "Scrapper", "Spellbreaker", "Tempest", "Chronomancer", "Vindicator", "Spellbreaker", "Vindicator", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21, 29, 0, 0, 1, 2], [17, 34, 0, 5], [11, 1, 2, 5, 1, 2, 2, 1, 6, 3, 0, 3, 3, 6, 0, 0, 0, 1, 5, 3, 1], [6, 4, 2, 7, 5, 1, 7, 1, 0, 3, 3, 12, 1, 3, 0, 4], [6, 10, 12, 1, 2, 5, 1, 10, 4, 7, 2], [31, 30], [1, 0, 0, 0, 1, 1, 6, 0, 6, 3, 0, 7, 5, 7, 2, 1, 4, 4, 12, 3, 0, 4], [26, 20, 5, 12, 5], [4, 1, 6, 3, 1, 4, 11, 0, 5, 1, 1, 5, 4, 10, 3, 6, 1, 2], [21, 31, 0, 6, 3, 4, 4], [4, 9, 0, 1, 0, 1, 0, 4, 1, 8, 1, 1, 1, 7, 6, 1, 1, 1, 1, 9, 2, 7, 2, 2], [7, 8, 0, 1, 0, 1, 0, 3, 1, 5, 2, 0, 4, 7, 3, 8, 0, 2, 7, 1, 4, 2, 3, 1], [10, 20, 0, 5, 2, 0, 0, 0, 0, 3, 1, 0, 3, 8, 11, 9, 3, 1, 2], [18, 51, 3, 7], [35, 38, 3, 3], [42, 34, 1, 6], [9, 12, 0, 2, 1, 2, 1, 1, 0, 0, 4, 1, 2, 7, 0, 11, 1, 1, 4, 2, 10, 3, 8, 0, 2], [6, 17, 0, 3, 4, 1, 1, 2, 0, 5, 2, 0, 1, 10, 0, 7, 0, 2, 2, 1, 11, 5, 0, 5], [7, 13, 0, 5, 1, 3, 2, 2, 1, 5, 3, 0, 3, 8, 1, 8, 0, 0, 1, 0, 12, 2, 5, 1, 4], [4, 8, 3, 8, 2, 9, 6, 0, 7, 7, 8, 3, 3, 3, 2, 8, 3, 4], [9, 11, 0, 6, 0, 2, 0, 3, 1, 3, 3, 0, 4, 5, 2, 9, 3, 1, 5, 0, 10, 4, 6, 2], [7, 7, 4, 4, 2, 10, 6, 0, 0, 9, 1, 10, 0, 1, 6, 2, 9, 2, 5, 4], [6, 2, 10, 5, 2, 8, 8, 0, 14, 3, 3, 6, 2, 13, 1, 4, 0, 5], [0, 5, 4, 4, 1, 6, 1, 6, 4, 1, 4, 7, 1, 12, 3, 3, 4, 2, 13, 4, 4, 1, 4], [6, 6, 3, 7, 1, 16, 6, 0, 6, 12, 9, 3, 2, 5, 2, 7, 2, 5], [18, 14, 0, 5, 1, 6, 3, 1, 1, 5, 0, 5, 7, 0, 11, 5, 2, 3, 0, 8, 4, 0, 2], [5, 2, 10, 4, 2, 0, 2, 2, 10, 5, 0, 3, 11, 0, 10, 2, 3, 7, 0, 10, 4, 6, 2, 4], [7, 19, 0, 5, 4, 1, 2, 2, 0, 7, 5, 0, 6, 8, 1, 9, 2, 1, 5, 2, 12, 6, 0, 4], [12, 5, 0, 1, 1, 3, 2, 5, 2, 11, 4, 2, 5, 9, 0, 12, 2, 3, 7, 5, 15, 1, 1, 0, 1], [25, 20, 0, 4, 0, 11, 1, 3, 0, 3, 4, 0, 1, 7, 6, 3, 1, 6, 2, 11, 0, 3, 0, 5], [26, 25, 2, 10, 4, 1, 0, 3, 6, 4, 1, 1, 9, 11, 2, 1, 4, 1, 8], [39, 66, 5, 11], [22, 31, 2, 1, 3, 7, 1, 1, 2, 3, 1, 0, 6, 10, 9, 2, 2, 4, 1, 7, 1, 5, 0, 5], [10, 39, 0, 7, 8, 6, 2, 0, 0, 0, 0, 0, 0, 13, 12, 2, 3, 6, 2, 9, 3, 5, 0, 1], [11, 28, 0, 7, 5, 5, 0, 7, 0, 6, 2, 4, 4, 11, 4, 1, 0, 6, 3, 10, 4, 12, 1, 4], [25, 34, 2, 7, 4, 11, 2, 4, 1, 2, 4, 3, 2, 8, 0, 12, 0, 2, 0, 3, 10], [1, 7, 12, 17, 5, 4, 2, 9, 5, 1, 5, 11, 13, 2, 2, 5, 3, 15, 4, 8, 0, 5], [17, 34, 1, 10, 6, 7, 4, 5, 2, 7, 6, 1, 13, 11, 0, 10, 1, 0, 5, 2, 10, 4, 1, 0], [20, 29, 0, 9, 3, 7, 2, 5, 2, 10, 6, 3, 9, 15, 10, 3, 3, 3, 5, 9, 3, 8, 0, 4], [31, 48, 0, 3, 6, 9, 3, 5, 2, 1, 3, 2, 2, 11, 5, 3, 2, 7, 2, 14, 2, 4, 1, 4], [19, 48, 4, 0, 2, 14, 9, 9, 1, 17, 6, 3, 5, 7, 14, 0, 0, 3, 3, 4, 3, 0, 4], [38, 39, 1, 9, 4, 4, 2, 7, 2, 2, 4, 3, 7, 10, 12, 5, 3, 1, 4, 7, 3, 7, 2], [33, 42, 1, 6, 4, 8, 2, 4, 2, 5, 4, 1, 9, 13, 9, 4, 1, 5, 3, 12, 4, 5, 1], [34, 57, 3, 8, 11, 11, 2, 4, 5, 4, 2, 10, 11, 0, 6, 4, 2, 6, 4, 9, 4, 4, 3], [41, 46, 1, 5, 7, 10, 2, 9, 1, 7, 3, 2, 8, 16, 2, 16, 4, 4, 4, 0, 14, 3, 3, 1, 5], [38, 49, 4, 17, 9, 9, 4, 6, 1, 14, 7, 1, 12, 6, 1, 12, 2, 2, 4, 4, 13, 4, 10, 1, 5], [60, 76, 3, 20, 5, 15, 1, 4, 5, 3, 3, 8, 5, 0, 13, 4, 3, 8, 4, 12, 4, 8, 3, 2], [58, 105, 6, 19, 15, 30, 7, 11, 0, 13, 5, 1, 13, 2, 9, 2, 6], [55, 84, 4, 18, 10, 5, 4, 11, 2, 9, 8, 2, 6, 18, 13, 6, 4, 7, 3, 14, 4, 8, 4, 4], [54, 92, 5, 14, 14, 20, 5, 8, 2, 8, 6, 3, 12, 16, 0, 13, 4, 3, 7, 3, 16, 5, 10, 5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

