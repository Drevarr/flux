created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Amiti\u00e9l", "Demons Vengence", "Tootsie Pop Rocks", "Smol Gluvs", "Aira Draugr", "Necrotic Windrunner", "Elementsofmathus", "Zaedy Zae", "Pope On Cope", "Belvyn Brightblade", "K\u00e2 \u00d4tik R\u00e6j", "Darks Na", "Jmbrage Warrior", "Rafaellagabriela", "Kosa\u00edr", "Rina Of Theros", "Darkened Sword", "Air One Com", "Drevarr Moonwillow", "Be\u00eb", "Daphne Agla\u00e9", "Sonja Wintersong", "Black Raspberry Pie", "A \u00da R A", "Crusader Siolith", "Mort\u00e4rion", "Kylo Milan", "Glorious Gluvs", "Xanvias Einzbern", "Morv\u00e4rth", "Koralia Danai", "Sub Train", "Hyde En Sikh", "Selandir", "Gamora Titus", "Darth Sammy", "Tegan Parker", "Lucky Luprac\u00e1n", "Glass Tingle", "Glizzy Gobbl\u00e9r", "Newtype Khan", "Rhaevynn", "Mistwalker Cael", "Lord Erin The Wise", "Blaize Harlot", "Nose Llama", "Jimbo The Pleb", "Venomina The Fierce", "Dancing In The Mist"];
const professions = ["Berserker", "Firebrand", "Druid", "Scrapper", "Reaper", "Herald", "Reaper", "Tempest", "Druid", "Renegade", "Firebrand", "Berserker", "Dragonhunter", "Berserker", "Firebrand", "Holosmith", "Reaper", "Spellbreaker", "Firebrand", "Scrapper", "Reaper", "Reaper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Berserker", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Weaver", "Firebrand", "Reaper", "Tempest", "Scrapper", "Chronomancer", "Reaper", "Spellbreaker", "Reaper", "Herald", "Weaver", "Scourge", "Tempest", "Berserker", "Spellbreaker", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 3, 7, 2, 0, 0, 0], [0, 6, 4, 0, 4, 0, 0], [3, 0, 1, 0, 2, 0, 0, 3, 0, 0, 0, 5], [0, 5, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 3, 3, 2, 0, 0, 3], [0, 9, 0, 3, 6, 1, 0], [0, 4, 10, 6, 0, 0, 0], [1, 3, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 1, 6], [0, 0, 3, 0, 0, 7, 1, 1, 0, 6, 0, 1, 0, 2, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 10, 0, 2, 0, 6], [0, 1, 13, 0, 2, 2, 0, 1, 0, 0, 0, 0, 5], [1, 2, 5, 6, 8, 0, 3], [0, 6, 5, 6, 10, 0], [3, 2, 8, 2, 2, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3], [0, 0, 3, 1, 3, 0, 0, 0, 0, 2, 0, 0, 2, 1, 0, 0, 3, 2, 1, 0, 0, 10], [0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 3, 2, 0, 0, 3, 10], [1, 11, 7, 8, 1, 0, 0], [0, 6, 1, 1, 4, 0, 0, 0, 0, 0, 1, 0, 3, 0, 2, 0, 4, 0, 1, 1, 2, 4], [0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 11], [2, 0, 0, 1, 0, 0, 0, 3, 3, 0, 0, 0, 2, 0, 5, 0, 7, 0, 3, 8], [0, 0, 0, 4, 0, 0, 0, 0, 2, 4, 4, 1, 0, 0, 0, 0, 8, 0, 1, 0, 1, 12], [0, 4, 1, 1, 4, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 6, 0, 0, 0, 0, 18], [2, 2, 4, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 7, 0, 0, 7, 0, 0, 0, 9, 2], [0, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 3, 0, 3, 0, 0, 0, 1, 5], [1, 3, 1, 2, 1, 0, 0, 0, 0, 16, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 2, 9], [0, 1, 0, 0, 0, 4, 2, 4, 0, 3, 0, 10, 5, 9], [0, 4, 3, 0, 0, 0, 0, 0, 0, 8, 0, 0, 4, 3, 2, 0, 3, 0, 2, 0, 4, 7], [0, 11, 17, 1, 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 3, 0], [9, 0, 0, 0, 2, 0, 10, 0, 2, 1, 0, 0, 0, 9, 2, 5, 0, 1], [0, 0, 8, 0, 0, 3, 3, 4, 0, 7, 0, 5, 0, 2, 11], [1, 9, 3, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 10, 2, 4, 0, 7], [0, 0, 0, 15, 0, 1, 0, 0, 0, 0, 8, 0, 11, 0, 11], [0, 9, 5, 5, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 4, 0, 8, 0, 0, 0, 3, 8], [0, 1, 2, 2, 0, 1, 0, 0, 2, 7, 0, 0, 5, 3, 0, 0, 12, 0, 7, 0, 2, 4], [0, 1, 1, 1, 0, 0, 0, 0, 0, 8, 0, 3, 4, 19, 0, 0, 0, 0, 2, 3, 8], [1, 0, 12, 5, 3, 2, 0, 0, 1, 3, 0, 1, 0, 5, 2, 0, 5, 1, 7, 0, 2, 5], [6, 0, 0, 6, 7, 3, 0, 10, 8, 3, 0, 7, 5], [0, 14, 0, 3, 8, 0, 0, 0, 4, 0, 4, 0, 0, 0, 1, 10, 0, 3, 0, 6, 4], [1, 3, 0, 2, 7, 1, 0, 0, 6, 6, 0, 0, 1, 2, 2, 5, 8, 1, 0, 1, 13], [4, 13, 7, 0, 0, 0, 0, 0, 1, 10, 1, 7, 4, 0, 0, 0, 2, 0, 4, 0, 0, 7], [0, 5, 6, 2, 3, 0, 0, 0, 1, 5, 0, 0, 0, 0, 4, 0, 1, 3, 0, 0, 4, 27], [1, 7, 2, 4, 3, 0, 1, 0, 0, 3, 10, 0, 2, 1, 3, 0, 11, 0, 0, 0, 3, 14], [1, 9, 9, 0, 1, 4, 0, 0, 9, 4, 0, 0, 0, 1, 0, 0, 7, 0, 3, 1, 0, 18], [0, 13, 13, 1, 9, 0, 0, 2, 0, 2, 3, 0, 0, 0, 0, 0, 0, 7, 0, 8, 12], [4, 3, 2, 12, 3, 0, 0, 0, 3, 13, 0, 4, 0, 0, 0, 9, 0, 2, 0, 1, 18], [0, 14, 9, 5, 0, 4, 0, 0, 0, 6, 0, 1, 8, 4, 3, 0, 3, 2, 8, 0, 4, 3], [0, 2, 6, 8, 5, 0, 1, 0, 0, 6, 0, 2, 2, 2, 4, 0, 5, 0, 5, 0, 15, 11], [6, 2, 9, 3, 0, 0, 0, 2, 11, 0, 0, 0, 2, 1, 0, 15, 0, 9, 0, 5, 11], [0, 0, 3, 2, 8, 4, 0, 0, 2, 3, 0, 0, 6, 1, 0, 0, 15, 0, 11, 0, 7, 16], [0, 6, 12, 7, 9, 1, 0, 1, 0, 5, 0, 0, 11, 1, 6, 0, 6, 0, 9, 0, 3, 22], [2, 21, 7, 10, 3, 0, 0, 0, 3, 11, 0, 0, 7, 4, 2, 0, 8, 0, 11, 0, 6, 15]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

