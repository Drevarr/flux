created: 20230702223827000
creator: Drevarr
modified: 20230705163540926
modifier: drevarr
tags: ChartData
title: 202307022238_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Kreita Risingclaw", "Ggclaudx", "Verna Mae", "Pixzil", "Thats Not Nice", "Amiti\u00e9l", "Artakama Nahid", "Skurrtskurrt", "Elonith Requiem", "Silvyrs", "K\u00e2 Otik", "Zenady", "Kardknight", "Trap User", "Holten Mcgroins", "Tika Fiery", "Beans Lasus", "Grothez", "Synomi\u00f1 Spyce", "Hyvand", "Wild Doggy"];
const professions = ["Firebrand", "Harbinger", "Holosmith", "Renegade", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scourge", "Scourge", "Firebrand", "Firebrand", "Berserker", "Renegade", "Dragonhunter", "Daredevil", "Firebrand", "Dragonhunter", "Tempest", "Scourge", "Berserker", "Guardian"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.907, 61.5421, 35.0244, 0.5435, 13.9908, 1.037, 17.7952, 0.0, 17.0635, 64.2373, 8.8427, 12.4231, 27.9921, 0.0, 7.2762, 54.601, 0.0, 0.0, 6.8, 0.0, 14.5833, 2.2381, 51.1364, 5.4051, 0.1414, 5.4205, 23.4516, 3.2208, 6.0968, 7.8128, 28.6429, 0.0, 39.179, 0.0, 5.1695, 0.0, 17.1224, 13.0784, 1.9392, 5.8955, 42.0427, 3.5815, 12.7547, 0.0, 11.4815, 2.0, 8.7991, 30.6667], [30.4776, 47.0085, 62.8326, 0.0, 0.0, 22.9444, 57.4545, 230.4934, 0.0], [47.7619, 0.0, 38.6848, 42.7917, 86.3452, 132.7727, 0.0, 12.4937, 21.4949, 53.8826, 53.6452, 52.5065, 445.129, 119.7326], [39.969, 2.5327, 20.5854, 5.2174, 58.2936, 2.6667, 12.3614, 6.2381, 6.4831, 36.0897, 0.0, 7.6825, 0.3099, 8.5333, 2.6059, 1.4, 20.6739, 32.1944, 41.6667, 0.0, 0.0, 1.0606, 10.1591, 0.0, 15.6104, 27.8065, 0.2246, 5.6587, 0.9091, 75.7099, 0.4407, 51.2927, 19.3469, 108.7059, 56.9595, 0.0, 6.7313, 34.641, 0.5507, 8.1613, 17.2727, 21.5546], [2.876, 58.243, 48.5122, 7.2936, 21.5852, 3.4578, 0.0, 19.6825, 29.6102, 29.6854, 55.2692, 0.0, 12.3571, 0.0, 24.5095, 34.9064, 0.0, 0.0, 14.0543, 5.3264, 0.0, 219.5909, 0.0, 12.1139, 0.0, 9.1742, 3.1613, 78.974, 0.0, 33.2299, 10.754, 38.3086, 5.4237, 13.2653, 36.3137, 22.5473, 0.0, 0.2821, 2.9692, 29.3333, 0.0, 16.5808, 13.0167], [4.6589, 10.5981, 36.3496, 0.0, 62.3394, 4.5111, 22.5301, 7.9697, 56.9524, 52.4407, 50.2809, 24.0256, 0.0, 11.4286, 8.169, 47.2143, 43.7734, 33.3824, 0.0, 9.413, 1.3403, 0.0, 67.9545, 0.0, 5.1392, 0.0, 27.4205, 6.4516, 27.6364, 0.0, 31.9733, 6.6111, 5.716, 3.4545, 0.0, 0.0, 23.8367, 21.4314, 23.3514, 0.0, 3.1282, 0.0, 0.0, 0.0, 0.0, 0.0, 4.2926], [67.9845, 25.8037, 47.748, 0.0, 67.6101, 0.0, 2.0602, 0.0, 62.8571, 14.3051, 20.3258, 64.7564, 0.0, 16.6587, 0.0, 18.0238, 25.0197, 0.0, 12.4783, 9.4375, 11.4405, 44.9091, 0.0, 0.0, 9.6667, 1.8523, 6.7419, 9.4805, 36.9198, 20.2937, 1.7273, 11.8889, 0.0, 8.5424, 0.0, 43.551, 33.6863, 11.2703, 0.0, 0.0597, 19.5641, 12.6035, 1.6604, 0.0, 2.4259, 0.0, 9.1354], [44.6398, 25.0078, 6.2243, 70.374, 0.0, 39.0826, 0.0, 17.6627, 0.0, 74.8254, 7.1186, 9.427, 10.0513, 0.0, 1.381, 0.0, 21.9048, 26.9409, 42.9118, 1.0952, 0.0, 17.413, 12.6181, 0.0, 95.5909, 0.0, 1.7848, 6.9293, 16.3447, 7.5161, 3.1299, 32.6043, 19.9841, 20.5455, 6.537, 0.0, 0.0, 0.0, 5.4314, 1.8784, 0.0, 1.2687, 27.5641, 21.1366, 72.4906, 0.0, 0.0, 0.0, 16.0349, 27.7167], [130.6667, 60.75, 402.3043, 307.4306, 41.4048], [64.1111, 118.2273, 180.179, 12.2909, 2.5932, 2.0, 109.7755, 47.9216, 34.8649, 13.6875, 6.194, 45.2564, 34.3656, 44.9811, 49.5806, 118.4444, 5.75, 70.6812, 236.1], [77.0807, 71.8915, 18.9626, 54.4553, 0.0, 15.5275, 2.437, 0.0, 0.0, 16.6984, 3.0508, 0.2921, 47.2821, 14.0397, 1.1549, 5.2524, 129.8325, 0.0, 26.9, 33.8152, 27.3819, 9.6786, 10.4545, 0.0, 9.9557, 0.7121, 15.2424, 0.0, 12.2857, 0.0, 35.8556, 11.6111, 10.2037, 12.4407, 3.1463, 6.3878, 0.0, 6.6554, 0.0, 11.7612, 0.4701, 4.1189, 8.6604, 0.0, 34.7222, 0.0, 46.7249], [18.3488, 12.7944, 39.4228, 4.6087, 17.6835, 0.0, 29.6386, 48.6032, 114.1695, 10.5955, 123.9872, 0.0, 10.6508, 0.0, 25.6857, 75.2562, 0.0, 0.0, 11.725, 43.2717, 24.7986, 16.9524, 0.0, 6.0316, 11.7677, 49.0265, 0.0, 32.8312, 37.2903, 18.6578, 21.7222, 0.0, 42.1296, 0.0, 2.2881, 47.1633, 10.451, 13.527, 0.0, 1.3134, 17.1966, 6.9956, 53.1887, 0.0, 16.7037, 0.5227, 14.0524], [0.9032, 209.013, 0.3871, 194.0, 178.6914, 0.6441, 0.0, 203.3265, 328.0784, 65.0068], [123.246, 0.0, 129.2407, 193.1864, 3.8537, 14.8571, 82.5882, 66.027, 0.0, 0.0, 28.453, 89.7577, 167.0, 0.0, 144.1481, 7.8864, 57.9214, 97.35], [47.8095, 19.1831, 76.0148, 0.0, 0.0, 57.4367, 20.3131, 82.9697, 0.0645, 27.6104, 7.5161, 75.3422, 71.2302, 14.5, 50.4198, 4.7627, 0.0, 29.2041, 30.8039, 9.973, 0.0, 5.0299, 52.3162, 59.7137, 3.3519, 11.4545, 36.8908, 6.5833], [68.8687, 115.125, 3.1613, 86.2078, 35.0, 156.2406, 0.0, 14.3433, 145.4017, 141.9471, 0.0], [48.4037, 43.6822, 19.3832, 24.1951, 0.0, 78.2523, 16.7037, 34.1687, 0.0, 36.7778, 22.1864, 5.6854, 81.5256, 10.4524, 40.2381, 6.4085, 27.7857, 71.3793, 73.125, 30.4239, 35.3819, 5.1905, 224.3182, 0.0, 4.8481, 29.2828, 0.0, 3.1935, 34.987, 0.0, 23.2781, 50.2937, 134.7273, 98.1605, 0.0, 17.2881, 0.0, 2.4286, 8.0588, 47.4392, 0.0, 0.0, 15.2991, 15.8811, 48.8679, 0.0, 6.3889, 20.9318, 14.8428, 50.3667], [20.6899, 465.514, 379.6016, 36.6957, 29.4633, 76.3185, 0.0, 623.8413, 385.3205], [5.4921, 140.5, 341.142, 24.8545, 246.2542, 110.7551, 272.549, 370.8311, 0.0, 84.7463, 333.4444, 72.6344, 0.0, 157.3889, 6.3182, 160.2882, 168.25], [0.0, 64.0482, 357.5556, 260.4237, 249.9438, 261.3462, 20.8095, 20.9365, 0.0, 72.0, 43.9212, 21.2941, 22.375, 94.9674, 141.1042, 0.131, 268.8182, 0.0, 9.1329, 32.1919, 108.6364, 0.0, 45.4416, 0.0, 137.3155, 41.746, 68.9091, 95.8519, 0.9455, 3.0339, 0.0, 95.9796, 58.6275, 38.1149, 0.0, 19.2388, 230.3419, 130.0705, 62.7963, 0.0, 42.0524, 214.9833], [403.5969, 492.8879, 608.7317, 8.8043, 226.3211, 160.763, 140.1205, 114.4127, 71.4576, 217.6404, 271.9744, 0.0, 213.6587, 0.0, 86.681, 35.9409, 70.7647, 0.0, 0.0, 9.25, 64.0139, 0.0, 590.2727, 0.0, 5.1772, 107.9444, 44.7386], [484.1613, 725.492, 508.4048, 0.0, 756.6481, 31.4182, 28.5424, 90.3902, 606.0, 131.6892, 99.625, 503.735, 551.2687, 513.4528, 0.0, 244.6667, 17.6818, 110.1135, 681.8167]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

