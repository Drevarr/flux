created: 20230306221045000
creator: Drevarr
modified: 20230705163521333
modifier: drevarr
tags: ChartData
title: 202303062210_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Newtype Khan", "Legacy Of Mathus", "Xanvias Tseli", "My Birthday Girl", "Lord Erin The Wise", "Tootsie Pop Bringer", "Smol Daddy Tika", "Veron Blackburn", "Mistwalker Caelon", "Xyntharos", "Sofya De Nova", "Estryl", "Tribal S", "Cat Wigglebooty", "Fribble Bibble", "Arcanophage Farra", "Demon Sekhmet", "Drevarr Moonwillow"];
const professions = ["Tempest", "Spellbreaker", "Berserker", "Berserker", "Scrapper", "Weaver", "Scrapper", "Berserker", "Herald", "Vindicator", "Vindicator", "Weaver", "Spellbreaker", "Druid", "Scrapper", "Scrapper", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[46.7925, 31.5011, 0.0, 31.6462, 0.0, 31.4275, 0.0, 16.7952, 31.483, 0.0, 31.5168, 17.6599, 30.1786, 37.3914, 57.8239, 24.2501, 8.1948, 19.8202, 46.7107, 31.583, 3.587, 30.6711, 0.0, 28.2672, 40.297, 58.3666, 51.4321, 29.4441, 59.6054, 57.3876, 31.4545], [91.8716, 34.7939, 0.0, 0.0, 0.0, 0.0, 20.6682, 33.4988, 0.0, 29.9488, 0.0, 53.776, 25.1066, 25.2737, 38.4042, 36.4888, 0.0, 160.5946, 53.9477, 0.0, 58.6015, 59.1552, 21.9456, 91.8859, 81.2278, 25.047, 0.0, 48.7692, 0.0], [163.5762, 99.6072, 0.0, 0.0, 0.0, 0.0, 60.2324, 0.0, 64.4997, 24.0125, 0.0, 75.5776, 33.8404, 57.8078, 40.6136, 42.6888, 0.0, 0.0, 68.2712, 35.0227, 86.5066, 0.0, 94.7491, 0.0, 34.5778, 0.0, 61.8509, 51.8054, 3.313, 77.221, 0.0, 0.0, 0.0, 17.9847], [67.3549, 71.6184, 0.0, 54.1769, 0.0, 0.0, 0.0, 0.0, 0.0, 65.9898, 0.0, 48.6864, 47.2779, 61.1873, 36.7872, 0.0, 0.0, 0.0, 0.0, 0.0, 127.8547, 0.0, 0.0, 22.6051, 2.4139, 29.9713, 59.305, 0.0, 160.8734, 51.3592, 134.5859, 43.9282, 77.2236, 32.809], [125.4831, 58.996, 31.8181, 0.0, 0.0, 57.872, 0.0, 43.757, 16.0083, 44.5567, 48.0592, 62.318, 103.4611, 83.5097, 0.0, 40.5818, 0.0, 21.9819, 0.0, 187.1251, 0.0, 74.0678, 16.0627, 68.4559, 0.0, 54.9245, 33.2813, 143.5291, 96.4534, 69.7976, 19.895, 60.1236, 43.4192], [163.3126, 123.041, 27.2173, 41.3349, 0.0, 21.7676, 60.8654, 0.0372, 102.7496, 65.6526, 84.4368, 33.1007, 55.9105, 0.0, 59.7158, 88.0427, 29.065, 43.1332, 35.9107, 46.8518, 0.0, 12.0506, 166.813, 27.2976, 74.6951, 6.9268, 36.3168, 46.8634, 199.2648, 38.6834, 23.4329, 3.979], [317.6621, 29.1962, 0.0, 50.4504, 0.0, 0.0, 74.1322, 0.0, 71.3518, 29.1707, 0.0, 139.944, 104.6647, 111.4652, 131.3734, 0.0, 33.1583, 100.109, 67.8728, 0.0, 29.016, 43.6493, 112.933, 78.6051, 97.3493, 106.6372, 33.858, 54.8573], [186.5112, 114.0955, 0.0, 83.8738, 0.0, 0.0, 67.969, 0.0, 63.159, 63.1439, 0.0, 99.4896, 48.9422, 0.0, 147.3503, 0.0, 62.2584, 76.5767, 0.0, 203.3539, 0.0, 0.0, 51.8635, 5.1437, 114.6958, 0.0, 24.1488, 0.0, 133.2005, 109.0564, 76.3099, 66.7676, 0.0, 45.3005], [0.0, 251.4905, 144.5309, 808.0531, 62.7912, 564.647, 174.4114], [192.838, 56.3069, 43.1926, 39.787, 18.0457, 7.7863, 22.2047, 73.5221, 28.3396, 102.3345, 81.708, 107.3296, 44.4424, 91.603, 95.7945, 50.2564, 34.7915, 5.9821, 43.0225, 22.5907, 249.0768, 15.276, 5.9623, 102.8453, 0.0, 55.5111, 6.0385, 35.5306, 53.6371, 171.6893, 93.1023, 53.8789, 127.1688, 104.2416, 75.9272], [243.0576, 103.6134, 20.7643, 66.6175, 23.4573, 17.7606, 52.4083, 90.5005, 49.0823, 121.9595, 68.8886, 105.2128, 47.8943, 116.5641, 121.9081, 110.5543, 32.0695, 60.8516, 24.793, 278.712, 5.9189, 168.0955, 21.0936, 108.7481, 9.1098, 71.6602, 55.8144, 208.2293, 20.7622, 109.2606, 131.8641, 82.3536, 83.7532], [61.0814, 27.7165, 84.1604, 0.0, 36.9112, 85.016, 104.0834, 77.422, 111.4059, 95.1497, 155.8592, 71.5332, 95.1604, 157.487, 129.9098, 91.2101, 12.7472, 48.8917, 80.7725, 317.6611, 3.9398, 2.2478, 188.9371, 14.1, 103.7335, 16.0461, 88.8826, 68.4634, 266.5958, 191.8869, 76.5325, 142.9257, 155.952, 119.7228], [284.3142, 109.8698, 71.4269, 68.3947, 95.2878, 206.1513, 158.8967, 100.5127, 97.1984, 25.7033, 147.4503, 103.4342, 264.8822, 28.7462, 227.0933, 40.405, 202.9771, 56.5393, 91.3536, 106.2374, 223.3325, 257.3062, 187.7968, 224.4952, 206.7048, 178.5683], [294.1999, 178.799, 38.0154, 102.9647, 39.8429, 39.8841, 39.2079, 170.4538, 77.7571, 164.174, 138.3373, 135.4752, 96.2817, 153.0868, 147.686, 130.9285, 71.0181, 4.1551, 81.4493, 84.6442, 310.7462, 24.2774, 8.6033, 190.6205, 29.7792, 147.6992, 2.9011, 90.9043, 85.847, 266.2061, 183.3635, 113.9917, 234.1244, 175.7196, 129.0538], [363.7956, 240.0451, 28.5855, 254.1439, 26.9284, 113.7771, 176.422, 68.5216, 211.6653, 63.7857, 145.9808, 55.137, 161.7431, 253.013, 97.214, 46.7681, 6.6607, 108.193, 63.2256, 394.1482, 19.38, 309.4176, 0.0, 295.8066, 173.2723, 118.4026, 310.0541, 345.309, 240.1172, 283.3844, 283.9284, 162.6905], [470.8253, 209.7514, 60.7212, 215.7328, 0.0, 60.4761, 163.2131, 201.684, 177.9327, 241.0139, 139.8308, 310.6992, 184.5502, 294.8492, 400.8332, 91.7324, 75.0763, 233.1077, 141.4406, 432.3917, 75.4133, 0.0, 352.8643, 92.5862, 291.7249, 20.9601, 198.9936, 122.5843, 386.8368, 372.4092, 160.0225, 328.1879, 326.1312, 241.402], [568.6283, 338.445, 72.2035, 222.3831, 80.7422, 152.2856, 255.8608, 121.5886, 301.8454, 139.8308, 332.3376, 126.2079, 207.515, 292.6197, 241.2887, 142.0363, 130.8947, 199.9066, 578.3098, 27.7613, 325.9306, 157.6267, 278.4886, 0.5009, 188.3981, 115.6032, 415.2893, 307.5727, 291.1018, 312.829, 305.6796, 146.286], [756.5894, 229.0691, 226.5108, 155.5202, 267.3856, 124.3444, 370.0882, 127.447, 218.344, 93.4154, 174.2533, 207.1632, 232.5084, 163.7129, 108.4194, 135.2135, 159.5558, 511.7011, 397.5134, 57.6859, 284.5528, 58.1081, 143.7322, 181.8202, 584.5426, 331.2489, 366.9107, 335.0318, 422.3016, 235.2315], [615.0255, 205.8, 23.2604, 218.8859, 35.4231, 14.5688, 219.6428, 102.9514, 133.7661, 345.8386, 240.8923, 282.9456, 194.1352, 339.8503, 337.3954, 331.5658, 111.6494, 14.7204, 258.4672, 95.5843, 723.0989, 46.3661, 401.4413, 83.2238, 332.7169, 9.7335, 253.7309, 235.8029, 505.9085, 427.9209, 187.2959, 357.4734, 334.6812, 289.7878]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

