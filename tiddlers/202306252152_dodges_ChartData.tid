created: 20230625215204000
creator: Drevarr
modified: 20230705163536568
modifier: drevarr
tags: ChartData
title: 202306252152_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Oo Dads Mad", "Sygaldry Verdandi", "Pale Pam", "Tika Fiery", "High Sorcer Baradun", "Primal Clone", "Raelyn Sunray", "Tegan Parker", "Xanvias Tsolice", "Rozaalyna", "Hulk N Wall", "Drumina", "Tootsy Pop Star", "Rina Of Theros", "Miphest\u00f6", "Koralia Danai", "My Birthday Girl", "Lord Erin The Wise", "Black Raspberry Pie", "Drevarr Moonwillow", "Johosh The Mighty", "No Reserv\u00e9", "Irish Necroman", "Grasszanine", "Necrotic Windrunner", "Fribble Bibble", "Blancooo Padreee", "Zayde Sunsabre", "Swithblight", "Demon Maddx", "Gabe Malhorn", "Arriasa", "Ryvalia Fazebringer", "Crusader Siolith", "Imalou", "Shaca Booey", "Mister Jekyll", "Gavann", "Sister Elon\u00edth", "Eibh\u00ebar", "Newtype Khan", "Traidoruns Maximus", "Gestern Yesteryear", "Arcanophage Farra", "Smol Gluvs", "Mistwalker Cael", "Solus Sanctus", "Xyntharos", "Elon The Mender"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Druid", "Firebrand", "Tempest", "Chronomancer", "Dragonhunter", "Tempest", "Weaver", "Reaper", "Dragonhunter", "Druid", "Reaper", "Scourge", "Tempest", "Firebrand", "Scrapper", "Weaver", "Chronomancer", "Scrapper", "Berserker", "Vindicator", "Reaper", "Spellbreaker", "Scourge", "Scrapper", "Spellbreaker", "Berserker", "Reaper", "Reaper", "Firebrand", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Reaper", "Firebrand", "Dragonhunter", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Reaper", "Vindicator", "Firebrand", "Vindicator", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 3, 2, 0, 0, 0, 0, 5, 3, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 7, 2, 0, 0, 0, 0, 4, 1], [2, 0, 0, 2, 1, 0, 0, 2, 6, 3, 0, 0, 0, 0, 0, 0, 0], [6, 2, 3, 5, 1], [1, 0, 0, 4, 2, 0, 1, 0, 0, 4, 5, 0, 0, 0, 0, 0, 1, 0], [4, 2, 0, 6, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 4, 0], [1, 0, 0, 4, 2, 0, 1, 0, 1, 4, 2, 1, 0, 0, 1, 3, 0, 0], [3, 3, 0, 1, 8, 3, 2], [1, 3, 1, 1, 5, 5, 5], [1, 2, 0, 3, 1, 0, 1, 0, 0, 3, 3, 0, 2, 1, 1, 2, 2, 0], [2, 7, 3, 1, 1, 1, 3, 5, 0, 0], [1, 2, 5, 9, 6, 0, 2, 0, 1], [0, 2, 0, 7, 1, 0, 2, 1, 2, 1, 3, 0, 2, 0, 1, 3, 0, 2], [1, 0, 3, 6, 1, 1, 1, 4, 0, 0, 1, 1, 0, 0, 4, 5, 0], [1, 1, 2, 2, 2, 0, 1, 1, 4, 9, 3, 0, 1, 0, 1, 1, 0, 0], [2, 4, 1, 5, 1, 0, 0, 1, 5, 3, 2, 2, 0, 1, 3], [1, 2, 3, 3, 2, 0, 1, 0, 3, 11, 4, 3, 2, 0, 0, 1, 0, 0], [1, 0, 1, 5, 5, 0, 3, 0, 2, 6, 4, 0, 2, 2, 1, 3, 0, 1], [1, 2, 3, 5, 4, 3, 1, 3, 11, 0, 0, 4, 0], [0, 1, 2, 8, 5, 0, 2, 0, 3, 10, 2, 0, 1, 0, 0, 2, 2, 0], [0, 3, 2, 6, 3, 0, 1, 2, 3, 6, 5, 2, 1, 0, 2, 1, 1, 1], [0, 3, 3, 2, 6, 0, 1, 1, 1, 9, 5, 0, 0, 0, 0, 4, 2, 2], [3, 6, 1, 4, 4, 0, 0, 0, 3, 8, 2, 1, 1, 1, 0, 2, 2, 1], [2, 1, 4, 6, 4, 0, 1, 1, 0, 6, 2, 0, 4, 0, 1, 2, 5, 0], [1, 1, 2, 4, 5, 0, 1, 1, 1, 11, 3, 0, 1, 0, 0, 6, 0, 2], [9, 6, 0, 1, 0, 0, 13, 4, 1, 0, 0, 1, 2, 2, 2], [1, 4, 1, 5, 1, 0, 1, 0, 3, 10, 0, 2, 0, 1, 0, 3, 6, 4], [2, 2, 2, 9, 5, 2, 4, 6, 0, 0, 2, 1, 0, 4, 2, 2], [6, 5, 2, 6, 3, 0, 0, 2, 2, 4, 5, 0, 2, 2, 0, 5, 3, 0], [2, 6, 13, 8, 0, 4, 2, 5, 4, 3], [4, 2, 2, 10, 7, 0, 2, 1, 5, 3, 5, 1, 1, 0, 0, 2, 2, 1], [2, 7, 4, 4, 3, 1, 1, 2, 4, 11, 2, 1, 1, 0, 2, 3, 1], [1, 3, 3, 4, 5, 0, 3, 0, 4, 7, 4, 5, 0, 2, 1, 4, 4], [0, 4, 0, 7, 4, 0, 5, 1, 3, 11, 5, 1, 2, 1, 1, 2, 4, 4], [2, 2, 1, 9, 7, 0, 2, 2, 3, 12, 3, 4, 0, 2, 2, 3, 3, 1], [2, 8, 5, 10, 7, 0, 5, 4, 11, 6], [9, 0, 2, 1, 2, 16, 5, 7, 2, 0, 0, 7, 7, 2], [3, 2, 4, 7, 3, 0, 14, 5, 3, 4, 1, 2, 6, 5, 2], [0, 2, 6, 12, 4, 3, 1, 4, 4, 10, 1, 4, 0, 0, 5, 3, 4], [3, 7, 5, 9, 7, 1, 1, 3, 11, 3, 1, 1, 1, 4, 6, 1, 1], [3, 3, 6, 9, 8, 0, 1, 1, 4, 6, 5, 4, 2, 1, 2, 9, 3, 1], [3, 5, 5, 11, 7, 0, 4, 2, 5, 3, 2, 1, 4, 2, 1, 3, 7, 4], [17, 7, 2, 3, 1, 5, 12, 7, 0, 4, 0, 2, 6, 2, 4], [3, 3, 5, 13, 6, 1, 3, 1, 6, 12, 4, 3, 2, 1, 2, 5, 5, 1], [3, 4, 5, 11, 4, 1, 3, 2, 4, 13, 6, 2, 2, 3, 4, 7, 6], [3, 6, 5, 11, 5, 1, 3, 0, 6, 12, 2, 2, 5, 0, 5, 4, 9, 2], [2, 7, 5, 10, 7, 1, 4, 0, 5, 15, 7, 2, 5, 2, 1, 10, 3, 0], [6, 4, 3, 10, 9, 2, 4, 1, 4, 15, 8, 1, 6, 2, 1, 3, 8, 3], [3, 10, 8, 15, 10, 1, 3, 2, 8, 21, 5, 3, 5, 3, 1, 7, 6, 7], [5, 9, 7, 12, 7, 2, 3, 3, 6, 18, 4, 7, 6, 3, 8, 8, 9, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

