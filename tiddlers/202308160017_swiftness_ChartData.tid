created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Alarics Clone", "Jimbo The Pleb", "Explorer Theodora", "Absern", "Vera Khin", "Eloraaaaaaaaa", "Chocolate Teapot", "Pafema", "Sister Seraphena", "Gamora Titus", "Xanvias", "Bella Sassy", "P\u00edogre", "N\u00e8yp\u00e4", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Reaper", "Firebrand", "Scrapper", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 49.469, 23.5026, 50.545, 96.2957, 53.8877, 119.1984, 31.1278, 36.7744], [2.4103, 9.3522, 8.3174, 0.0, 0.0, 126.0598, 10.892, 33.216, 0.0, 0.0, 0.0, 0.0, 8.2685, 14.9344, 16.5026, 8.2836, 44.1098, 2.6098, 0.0, 0.0, 8.2536, 8.279, 14.1822, 0.0, 16.5291, 45.6077, 0.0, 0.0, 17.579, 8.2835, 0.0, 21.398, 4.6389, 0.0, 16.5741, 136.1403], [82.7764, 9.8358, 34.5488, 48.3184, 28.9965, 45.0506, 54.4365, 9.9117, 55.1304, 137.3914, 0.0, 79.728], [0.0, 0.0, 4.3504, 0.0, 0.0, 0.0, 0.0, 7.9267, 0.0, 7.7423, 0.0, 0.0, 0.0, 13.26, 11.8239, 11.1629, 0.0, 59.475, 8.8687, 0.0, 149.8566, 19.0365, 0.0, 63.3718, 13.9065, 13.7151, 0.0, 0.0, 103.5354, 57.3611, 12.5843, 0.0, 0.0, 0.0, 8.8736, 38.1063], [43.175, 0.0, 25.8412, 66.5747, 23.987, 49.3696, 35.0829, 68.9112, 0.0, 26.4709, 87.9075, 160.5922, 44.5824, 0.0], [0.0, 0.0, 4.015, 0.0, 23.178, 0.0, 19.9788, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.9597, 62.1277, 0.0, 0.0, 0.0, 0.0, 0.1026, 9.7038, 0.0, 0.0, 0.0, 0.0, 42.5174, 0.0, 28.8561, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.0628, 9.1366, 8.1216, 4.0071, 10.93, 3.4568, 31.4685, 14.553, 0.0, 8.9866, 7.956, 2.3296, 23.1455, 106.209, 4.9056, 36.7314, 18.6032, 40.0824, 0.1453, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.1278, 31.9134, 2.8728, 46.5977, 0.0, 0.0, 0.0, 0.0, 4.0115, 19.0237, 6.4085, 0.399, 0.0, 0.0, 6.2463, 46.6469, 85.0008], [65.52, 176.6261, 78.088, 167.5323, 14.8408, 30.59, 4.2541, 0.0, 321.1362], [0.0, 28.3516, 0.0, 16.8311, 5.586, 0.0, 0.0, 0.0, 8.4966, 5.2829, 11.2904, 71.9661, 0.0, 44.6016, 0.0, 27.5839, 0.0, 40.0442, 50.0779, 21.5873, 126.2118, 57.6458, 21.6059, 0.0, 0.0, 100.328, 22.1728, 0.0, 27.8271, 49.2814, 268.6813, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.4745, 73.0382, 66.7005, 11.7395, 17.2659], [62.205, 12.5008, 67.6158, 82.9148, 89.6808, 10.0906, 6.0957, 140.5613, 68.2842, 0.1529, 33.573, 257.4363, 99.3317, 24.5664, 55.107, 28.9417, 123.9326, 41.1427, 16.8719], [57.2088, 3.7362, 18.978, 27.8087, 8.0812, 304.5827, 0.0, 245.0787, 33.3502, 26.9952, 51.9129, 0.0, 0.0, 0.0, 35.7549, 69.6388, 42.9624, 0.0, 9.6432, 163.1916, 92.0667, 113.4926, 56.2704, 0.0, 33.9231, 25.2484, 22.5326, 7.599], [0.0, 300.8016, 6.5352, 141.777, 11.6794, 0.0, 0.0, 0.0, 6.4627, 0.0, 44.5497, 33.7176, 0.0, 41.4557, 0.0, 6.4749, 19.0266, 11.1213, 21.8557, 38.1283, 0.0, 0.0, 0.0, 78.0019, 67.0658, 0.0, 138.3525, 0.0, 0.0, 6.4324, 41.9898, 0.0, 447.5451], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.6202, 123.7892, 64.4513, 66.2731, 39.5534, 63.8502, 107.16, 38.6835, 27.7912, 30.599, 29.0763, 36.44, 26.6314, 39.9722, 37.8222, 21.0528, 12.0791, 35.055, 294.6573, 63.2576, 85.4482, 74.8194, 25.0952, 0.0, 38.8144, 21.525, 62.1403, 51.8903, 45.6988, 82.8468, 12.7824, 32.6536, 0.0, 75.1134, 83.809, 56.5782, 52.4278, 48.771, 38.4192, 42.1005, 82.0512, 0.0, 26.9775, 96.8113, 81.2115, 1.4541, 13.1872, 35.4404, 32.161, 69.2658, 497.2944], [0.0, 329.7833, 122.0002, 52.0853, 92.4891, 38.2755, 21.9051, 67.9084, 53.5095, 102.7782, 382.1331, 144.6865, 150.0429, 20.6062, 278.8318, 122.4106, 175.9296, 131.6575, 50.5152, 177.5923, 97.4908, 138.159, 275.0314, 47.3273, 343.4474, 11.2048, 113.7195, 77.796], [88.7128, 133.7018, 52.6149, 18.6061, 0.0, 0.0, 11.7971, 65.4391, 11.5138, 53.6765, 13.3782, 141.6193, 25.2823, 0.0, 20.8395, 0.0, 146.2618, 104.8257, 0.0, 97.9944, 0.0, 34.0452, 42.9944, 0.0, 26.8163, 179.383, 52.5683, 114.4085, 0.0, 36.5333, 70.3571, 33.3777, 0.0, 0.0, 10.4155, 6.0654, 35.815, 13.6915, 23.4881, 10.9902, 0.0, 29.754, 1.62, 366.6336, 23.0104, 137.1821, 56.7829, 22.3744, 131.1133, 67.9864, 0.0, 15.539, 0.0, 46.816, 73.6236, 0.0, 76.44, 43.0287, 9.3288, 41.6043, 19.2717, 7.3845, 51.6639, 39.127, 0.0, 0.0, 18.1866, 250.2502, 0.0, 53.865, 142.0, 53.1549, 0.8824, 0.3588, 20.8891, 0.0, 812.0754], [145.8485, 114.653, 168.7748, 258.072, 98.5408, 335.83, 25.4016, 334.1282, 158.7062, 176.9592, 168.1981, 141.804, 57.4448, 115.7363, 122.3695, 78.4083, 243.8397, 64.0968, 65.2922, 185.9317, 124.0947, 19.9211, 0.0, 82.3446, 320.7578, 69.4883, 287.9289, 96.4702, 111.869, 59.6206, 372.1746, 39.0922, 123.6744, 206.3338, 45.6622, 96.2498, 103.0358, 196.7134, 167.7795, 205.2509, 10.6893], [0.0, 24.7863, 0.0, 13.8592, 0.0, 0.0, 39.9575, 7.7193, 0.0, 10.4839, 17.2279, 0.0, 10.5616, 0.0, 0.0, 0.0, 21.152, 7.3935, 188.7954, 107.6875, 100.7495, 16.7046, 27.2677, 92.2716, 121.3557, 70.917, 49.7312, 214.0922, 18.8393, 124.5972, 10.1616, 91.1635, 0.0, 138.7239, 64.9686, 92.0592, 121.1622, 254.0523, 125.6895, 71.1034, 43.5574, 146.7307, 71.8912, 72.8937, 8.474, 14.9014, 20.0466, 19.734, 55.02, 9.6163, 8.0995, 74.6928, 26.6493, 62.647, 30.4462, 767.905, 24.0464, 98.0979, 138.7355, 167.5648, 54.9729, 131.4576, 2.7804, 63.624, 27.0963, 78.0763, 112.2228, 0.0, 141.757, 98.1695, 71.5599, 72.0384, 103.6488, 40.7915, 26.0794, 43.0032, 198.983, 71.3852, 131.9625, 151.8534, 175.6464, 104.2457, 109.668, 94.9635, 98.4485, 123.8513, 1917.6816]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

