created: 20230417215912000
creator: Drevarr
modified: 20230705163525777
modifier: drevarr
tags: ChartData
title: 202304172159_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Mettrik Milliohm", "Solus Sanctus", "Johosh The Great", "Tootsie Pop Rocks", "Daddy Demon", "Etchery Howls", "Demon Staph", "Mac Chiato", "Tribal S", "Zadie Miststep", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Druid", "Druid", "Tempest", "Druid", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.4839, 210.5641, 267.7658, 275.4276, 33.8629, 506.1754, 78.9882, 639.9068, 42.3718, 806.6508, 432.3861, 498.1264, 135.8051, 691.7944, 563.9323, 5.5833, 54.6486, 90.7674, 466.7308, 26.7222, 180.2781], [0.0, 280.7996, 126.4474, 4.8871, 425.8421, 231.6706, 1064.1186, 37.859, 314.754, 545.8515, 1300.2184, 80.2923, 445.1308, 639.5639, 19.6759, 12.973, 172.4767, 996.6923, 27.0185, 469.3743, 138.5679, 728.0758, 180.4359, 730.9012, 503.8022, 1571.18], [120.7634, 114.1282, 356.097, 0.0, 315.2368, 44.7984, 455.3333, 65.0471, 1135.0763, 57.0513, 67.5909, 763.2778, 541.8317, 1155.1494, 169.0718, 479.6916, 546.3684, 13.963, 18.027, 67.1512, 525.0769, 27.9444, 323.738, 502.7654, 635.0303, 130.8205, 830.7901, 498.5275, 729.3], [0.0, 0.0, 2.8065, 26.7436, 307.038, 0.0, 380.7303, 0.3226, 1486.9035, 5.8118, 1746.6356, 118.9359, 0.0, 92.1032, 787.9505, 1670.6552, 31.3077, 850.4673, 699.6165, 0.0, 6.1622, 108.0, 666.5, 329.0802, 717.8025, 540.0, 32.9744, 1025.6049, 526.0, 1505.62], [470.6205, 1324.972, 2169.6767, 2.713, 1.2162, 894.0233, 814.1923, 616.3209, 1310.5926, 2050.2121, 1099.0513, 1923.0494, 1479.5824, 2910.66], [664.9198, 0.0, 457.8882, 10.0968, 681.4737, 91.8235, 2069.5169, 179.0385, 0.0, 958.2778, 432.4554, 1418.6782, 343.6513, 1691.4019, 492.0451, 16.7963, 28.0, 67.5465, 4467.3846, 15.8519, 952.1283], [12.0233, 257.6364, 165.5591, 144.2821, 1314.2025, 1186.8026, 201.621, 1299.7368, 747.6824, 3427.8305, 651.2051, 22.0909, 2040.8413, 1808.4554, 3195.5287], [7.5054, 18.359, 678.3101, 725.9013, 48.9113, 565.3158, 24.3647, 2699.5932, 0.0, 0.0, 1661.6984, 1778.5149, 1653.7586, 374.1282, 1866.3458, 1242.6692, 28.4324, 386.2442, 67.0385, 1210.6898, 1054.7778, 954.8939, 984.3846, 1885.6049, 904.7253, 720.06], [1247.8418, 0.0, 732.9013, 65.6935, 1301.8684, 398.7647, 1241.0932, 434.7949, 21.5455, 338.8571, 2216.7327, 3787.931, 429.159, 1850.5701, 1657.4737, 39.1944, 0.0, 501.0465, 1386.6731, 0.0741, 767.7166, 1161.0988, 765.9242, 1141.5641, 1997.3457, 1244.3626, 2300.68], [33.9535, 646.7727, 23.9785, 80.0256, 1201.5443, 914.8882, 46.8871, 1487.7982, 281.1529, 2686.2966, 125.2051, 1652.9524, 1439.8812, 3089.9195, 667.6205, 2532.7944, 2041.9474, 0.0, 33.0811, 530.7326, 1479.9615, 18.7037, 971.3102, 512.716, 893.4848, 879.9487, 2284.284, 1661.5165, 3131.06], [255.0233, 179.7727, 194.8387, 242.9487, 1207.5802, 831.4211, 137.6855, 1627.8158, 345.7176, 4239.8136, 114.1538, 81.9545, 1823.1032, 1963.6337, 4211.3218, 483.4308, 2216.243, 2507.7368, 25.7222, 67.2973, 486.6279, 1981.6154, 57.7407, 1500.2727, 1082.7531, 930.0152, 802.8974, 2546.4691, 834.1099, 2237.1], [14.4651, 297.0909, 205.3656, 365.5641, 1474.7468, 0.0, 971.3816, 64.75, 1559.4737, 51.1647, 1683.1356, 477.7436, 433.7727, 4178.1032, 2322.1683, 14.8333, 5950.1954, 628.6051, 2439.0467, 1630.9248, 75.5926, 198.1351, 668.6279, 1708.7308, 56.9815, 1806.4118, 1271.9259, 2023.3636, 480.8718, 1863.2716, 1536.8022, 4505.44]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

