created: 20230215221053000
creator: Drevarr
modified: 20230705163519398
modifier: drevarr
tags: ChartData
title: 202302152210_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Bambiae", "Jeckyll Mbs", "Kira Dragonblaze", "Domina Flagbringer", "Call Me Ever", "Smol Daddy Tika", "Kosair", "Sassy Daddy Demon", "Xanvias Tseli", "Ark Darkness", "Black Raspberry Pie", "Ryvalia Fazebringer", "Zaylen Harker", "Xyntharos", "Sister Elon\u00edth", "Veron Blackburn", "Ace Hammers", "Sygaldry Verdandi", "Blanco Padre Guard", "Bella Sassy", "Ravioli Fetabringer", "Johosh The Great"];
const professions = ["Chronomancer", "Berserker", "Dragonhunter", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Herald", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9925, 1.0854, 7.727, 2.904, 8.7381, 0.9812, 7.8144, 1.6444, 4.5209], [6.028, 13.112, 0.0, 0.2362, 0.9702, 2.8812, 0.7219, 1.7747, 0.738, 1.3754, 0.732, 0.987, 2.8627, 2.8267, 2.4442, 2.7531, 0.0, 0.9768, 0.0], [16.577, 24.436, 1.2053, 1.1808], [12.9602, 8.344, 0.0, 0.0, 0.0, 0.0, 1.8499, 1.8856, 0.0, 3.5282, 1.7568, 0.0, 2.999, 5.5085, 3.5376, 1.4175, 1.6524, 3.9154, 0.847, 4.4888, 0.0, 0.4884, 0.0], [7.5658, 11.0894, 10.0982, 0.45, 1.9926, 5.648, 1.606, 8.8578, 0.4906, 7.6679, 2.8829], [9.9462, 18.476, 0.0, 2.952, 3.1262, 1.029, 1.0603, 1.9966, 1.845, 1.6744, 0.6442, 1.3028, 2.113, 3.624, 0.0, 2.9587, 0.5175, 1.0368, 2.1136, 0.0, 2.5137, 2.1001, 1.0346, 0.7535], [5.6212, 5.0362, 0.0, 7.7702, 8.6251, 0.17, 9.9053, 1.8675, 1.9278, 4.7817, 1.661, 10.2942, 1.2862, 7.5214, 0.0, 3.8984], [12.3574, 30.396, 1.8302, 0.7085, 0.0, 9.9813, 0.0, 0.3328, 0.0, 1.2558, 0.4099, 0.0, 1.9085, 0.0, 0.0, 6.3677, 0.0, 0.0, 2.4948, 0.407, 2.8728, 0.2122, 1.1722, 0.0, 0.3276], [13.563, 25.628, 0.8928, 2.8339, 3.9886, 3.9102, 0.9926, 1.4974, 0.0, 1.6146, 1.9618, 0.0, 2.8627, 3.9139, 3.4733, 0.99, 0.972, 1.8711, 0.0, 3.0523, 0.9149, 2.6374, 0.9692, 0.3931], [11.7546, 30.396, 0.0, 8.3837, 0.0, 2.4696, 2.053, 4.6032, 0.0, 5.3222, 4.0406, 0.0, 7.4294, 6.2333, 0.187, 7.6541, 1.89, 0.0, 1.6285, 1.276, 7.1221, 2.3443, 0.0, 1.507], [0.0, 0.0, 0.0, 3.1262, 11.319, 1.7371, 7.6535, 2.6014, 6.578, 5.8267, 0.0, 10.9738, 7.393, 12.9283, 2.745, 2.9484, 5.7519, 2.42, 12.9276, 1.7636, 4.8352, 2.5047, 1.4414], [10.2476, 34.568, 0.0, 5.5498, 3.3418, 9.0552, 0.0, 0.0, 0.0, 4.186, 2.5474, 0.0, 10.0877, 8.5526, 7.3968, 1.215, 3.3048, 4.9549, 0.0, 7.8403, 0.3315, 2.5885, 0.0, 2.9484], [26.8246, 73.308, 4.1962, 14.4058], [27.7288, 69.136, 4.0622, 10.6272, 11.9658, 16.464, 1.1506, 3.4385, 0.0, 8.4916, 3.3965, 1.2436, 1.7955, 0.9282, 2.5397, 0.49, 0.2785], [3.7051, 17.0035, 10.6722, 15.9495, 5.0309, 6.5443, 2.2878, 8.4318, 5.7682, 2.1517, 10.2922, 15.5107, 13.8931, 2.385, 3.2238, 9.5981, 3.179, 14.9027, 1.1801, 7.2283, 2.1236, 3.9476], [47.6212, 88.804, 0.0, 0.1181, 10.4566, 18.2133, 2.0304], [9.3434, 82.248, 4.8211, 17.1216, 23.716, 18.2133, 0.8573, 3.1612, 2.3985, 2.8704, 1.9618, 0.0, 8.5882, 13.8437, 4.0522, 3.465, 3.5478, 1.8018, 0.0, 4.0698, 6.9841, 2.6898, 0.131], [47.3198, 67.944, 5.1336, 11.0995, 6.2524, 12.348, 4.3766, 9.04, 1.0701, 8.073, 4.919, 0.0, 10.5648, 12.684, 0.0, 14.6006, 0.5175, 1.62, 7.9695, 2.618, 8.7381, 2.1481, 10.8425, 2.1622], [46.717, 106.684, 5.6246, 16.177, 10.241, 14.0973, 1.9402, 9.1509, 0.1661, 2.392, 5.651, 0.0, 3.8851, 8.7701, 0.289, 4.6954, 2.295, 2.3328, 7.0686, 1.562, 7.4214, 3.0233, 7.2772, 1.294], [53.0464, 98.34, 3.973, 24.7968, 8.5162, 22.5351, 6.4973, 9.0954, 1.1254, 10.2258, 8.3741, 14.1091, 13.0464, 11.9635, 4.4325, 3.0942, 8.0388, 1.947, 14.0647, 9.475, 0.1633, 4.4554], [61.1842, 107.876, 4.7318, 12.1622, 8.085, 16.5669, 6.565, 9.65, 1.3099, 12.4384, 6.8222, 0.0, 14.1773, 15.3658, 0.969, 15.7584, 2.52, 0.972, 7.727, 1.76, 17.7156, 1.9625, 6.0073, 2.9156], [63.8968, 116.22, 4.2854, 20.3098, 19.404, 20.7858, 4.9406, 10.4819, 3.1181, 10.6444, 8.4912, 2.1714, 15.5405, 15.8006, 15.1795, 3.7125, 1.863, 9.0783, 2.97, 14.6632, 2.5592, 9.8657, 1.0019, 3.8984]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

