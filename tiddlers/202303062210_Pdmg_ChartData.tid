created: 20230306221045000
creator: Drevarr
modified: 20230705163521366
modifier: drevarr
tags: ChartData
title: 202303062210_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Morv\u00e4rth", "Baidu Leohunt", "Smol Gluvs", "King Squid", "Husky Guard", "Rozaalyna", "Dark Sidiuz", "Ace Hammers", "Cerys Fireblade", "My Birthday Girl", "Lord Erin The Wise", "Smol Daddy Tika", "Be\u00eb", "Legacy Of Mathus", "Xyntharos", "Mistwalker Caelon", "Sofya De Nova", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scourge", "Dragonhunter", "Scourge", "Reaper", "Dragonhunter", "Scourge", "Scourge", "Vindicator", "Berserker", "Scrapper", "Weaver", "Berserker", "Scourge", "Berserker", "Vindicator", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[256.052, 104.8839, 30.7674, 41.2308, 0.0, 299.2473, 0.0, 515.0395, 139.1074, 37.7165, 493.1438, 843.8209, 829.843, 651.1022, 49.0808, 446.4059, 83.708, 43.9459, 391.6735, 0.0, 341.2575, 28.0, 553.9244, 0.0, 645.8333, 329.4306, 508.8621, 386.4, 150.3884, 442.237, 150.3289, 213.6571], [475.539, 509.5268, 225.9302, 415.6068, 0.0, 49.8788, 1104.8495, 129.5714, 880.8158, 427.6777, 166.9685, 399.1313, 651.4776, 1598.1488, 1482.6569, 529.5758, 908.5743, 111.6111, 1009.3451], [251.5428, 710.7946, 268.7442, 412.4103, 83.7755, 418.7273, 226.6452, 76.9524, 259.0526, 546.843, 143.9055, 10.5062, 426.6418, 568.5946, 66.3231, 114.0, 938.3353, 370.0, 1041.6723, 876.2381, 1102.1667, 606.2917, 340.931, 839.7484, 269.0579, 303.2081, 351.4145, 608.76], [324.5167, 153.6429, 42.6977, 9.3504, 0.0, 35.3939, 736.6237, 0.0, 645.7763, 375.562, 20.0, 556.3625, 231.5075, 1222.8264, 909.7445, 131.8788, 759.7525, 43.0556, 815.8496, 546.6081, 312.2925, 39.0833, 0.0, 688.3713, 73.25, 1038.4286, 179.4286, 933.5128, 689.3056, 495.0197, 633.0065, 139.1818, 260.422, 157.2697, 356.6114], [453.3457, 371.8929, 131.3023, 557.1197, 47.4545, 409.3548, 171.2, 1951.2105, 599.9835, 208.5748, 647.3188, 1607.0746, 1985.2066, 1340.6496, 339.7475, 1002.7822, 35.2222, 825.2297, 242.3844, 183.7083, 365.5714, 132.7186, 654.5208, 1447.7983, 458.5238, 569.0972, 294.3547, 74.5935], [545.0297, 255.9375, 0.0, 607.5641, 0.0, 94.2727, 1185.914, 120.019, 967.5921, 418.2066, 114.4094, 470.1, 583.597, 1146.281, 612.9124, 476.1414, 1014.6238, 0.0, 170.177, 666.6486, 368.7109, 144.875, 858.3234, 287.2083, 677.5882, 27.4762, 610.5769, 545.8611, 306.2857, 405.9161, 165.0496, 644.3815, 216.0789, 432.0514], [519.881, 298.7321, 0.0, 449.453, 0.0, 11.303, 524.5591, 9.3905, 2031.0921, 273.0496, 18.9291, 868.8125, 1887.6866, 1252.3719, 1038.1168, 338.2626, 838.7822, 253.7611, 64.4054, 836.1429, 109.9583, 704.4371, 45.2292, 1025.7647, 0.0, 889.9872, 960.4028, 773.8227, 604.5161, 101.719, 951.6185, 19.6645], [157.4381, 1397.4737, 406.1818, 97.6614, 289.0875, 1073.7015, 1409.4711, 1013.0219, 675.1717, 998.8119, 0.6667, 1528.7522, 1072.8514, 990.9694, 66.6667, 516.5714, 1379.8503, 694.3333, 1418.3025, 240.5238, 317.0897, 440.3333, 996.8867, 964.3548, 131.8182, 207.1561, 212.4145, 509.52], [360.3792, 315.2411, 23.5581, 579.453, 112.1429, 373.2424, 1108.4301, 82.8571, 1429.4079, 318.6694, 123.2835, 814.6812, 1817.5075, 1087.0083, 688.4307, 461.6768, 1303.0396, 0.0, 739.0265, 882.7568, 388.2687, 307.2083, 530.2857, 99.2455, 186.125, 1411.2941, 771.0, 1349.0256, 992.6389, 257.1232, 1108.9548, 512.8678, 1021.9884, 160.8618, 526.0171], [605.3643, 522.1696, 183.907, 1481.8718, 36.6122, 177.6364, 0.0, 2.5333, 3407.7105, 449.7521, 180.0472, 952.3312, 1205.5373, 1192.8347, 2654.3723, 469.8283, 634.3762, 1032.8761, 908.3919, 1381.9456, 118.25, 1731.8323, 736.0208, 290.4706, 419.0952, 1609.9487, 1252.5972, 454.8079, 958.3548, 690.0826, 392.6936, 1021.125, 450.5429], [1104.4461, 379.2411, 258.0427, 0.0, 324.6667, 1272.5699, 117.3333, 2210.7632, 869.7934, 318.4646, 88.1125, 3578.6716, 2762.5702, 1616.6569, 344.0101, 1480.9604, 496.5556, 1895.531, 641.8378, 1795.8231, 633.7917, 2108.4671, 114.4792, 1045.9244, 739.3333, 1266.0641, 672.3056, 1150.1576, 1070.3032, 442.8926, 117.7977, 674.3882, 248.9314], [634.3643, 1320.7321, 234.2093, 758.8462, 0.0, 1011.1398, 399.5238, 56.4737, 1115.314, 255.8583, 611.0375, 2481.597, 1907.5207, 1983.365, 1236.2222, 3775.0693, 2630.4167, 987.0265, 3875.527, 479.0714, 0.0, 215.8095, 1893.1018, 666.6458, 1579.9664, 463.381, 1798.6154, 1064.0833, 2371.2463, 655.929, 64.1983, 134.6647], [611.5502, 128.0714, 261.7907, 543.7863, 120.4082, 128.1818, 527.8495, 0.0, 3572.2105, 761.6529, 115.3543, 1628.2062, 3575.209, 37.9174, 1662.5036, 525.7172, 1533.3267, 1109.0442, 34.2568, 1745.381, 100.125, 0.0, 1222.8503, 911.0208, 2233.0, 304.3333, 1588.9487, 845.4583, 1375.8473, 1916.7355, 884.4463, 1863.9075, 297.6382, 787.0], [773.8141, 408.5536, 156.5116, 1329.6752, 122.9184, 123.0303, 1432.3656, 35.781, 1942.3816, 1204.1818, 355.6772, 962.8687, 2325.3134, 2400.2479, 2022.0511, 120.6162, 1786.9604, 54.1389, 1943.3186, 735.7432, 1559.3401, 302.6667, 0.0, 1588.1437, 592.4792, 1962.1765, 84.4286, 1854.5769, 1312.4444, 1223.8818, 1370.5806, 708.3223, 1048.1098, 772.0, 690.2571], [1280.8662, 430.1696, 275.2326, 867.2991, 100.0, 165.3939, 2011.6344, 23.3429, 2138.6053, 1453.4711, 101.7795, 1504.125, 4869.0746, 3453.5868, 2739.8613, 1610.1919, 2555.901, 149.1944, 1499.5221, 1550.1081, 822.7347, 86.8333, 1540.8383, 75.4583, 3415.1261, 106.4286, 1057.4103, 1974.5694, 1585.1527, 1932.2129, 365.8347, 107.289, 903.2632, 984.8], [1038.1487, 686.1786, 309.9535, 1179.906, 319.3061, 514.0, 953.4301, 269.4095, 2563.4211, 1165.5041, 131.2283, 1220.4875, 2309.9104, 4226.6694, 2373.9416, 1867.5657, 389.3267, 2511.5044, 217.1216, 1608.6837, 243.0, 2040.1198, 616.125, 1884.2269, 310.7619, 3221.9744, 1341.5, 2285.2365, 182.7484, 585.4132, 2146.341, 705.7961, 1687.48], [1242.3011, 671.6964, 660.7442, 2151.265, 0.0, 748.2121, 1052.2581, 227.419, 4335.4605, 1570.5537, 191.8504, 1930.8125, 2679.2388, 4502.9256, 4726.4818, 1437.8687, 3167.7228, 128.4444, 2043.9381, 1809.1757, 2547.1463, 226.5833, 1.381, 2588.1317, 409.875, 4560.0672, 461.381, 3193.7949, 1863.7361, 2945.335, 2657.1806, 955.1322, 2557.5896, 1121.5197, 1957.6114], [46.8929, 191.3721, 1965.8632, 0.0, 994.8182, 4821.086, 315.0476, 6886.75, 1754.3471, 421.1654, 1567.325, 5288.6866, 5108.405, 5479.0584, 2643.7273, 5332.0198, 272.5, 4641.9823, 5652.1351, 3939.9626, 132.9167, 994.1905, 2391.0719, 1852.7708, 3482.4454, 138.7619, 3244.2564, 1490.6389, 3240.0296, 3667.0968, 1391.5785, 2112.711, 2110.9408, 1299.0743], [1604.1413, 1219.7589, 537.1395, 4311.1453, 190.3061, 291.8182, 1339.1075, 69.8762, 1978.1711, 1228.4711, 81.3465, 2458.6937, 3840.2388, 5171.8512, 5610.9927, 1620.5253, 4795.0495, 70.6389, 4914.2212, 2821.2568, 4161.1633, 211.7083, 193.7619, 3757.7665, 368.9375, 3585.2941, 5466.3846, 3433.9583, 3800.0197, 4500.8516, 1976.1074, 3091.1561, 2632.9408, 1906.8171]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

