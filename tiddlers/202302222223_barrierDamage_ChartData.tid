created: 20230222222328000
creator: Drevarr
modified: 20230705163519924
modifier: drevarr
tags: ChartData
title: 202302222223_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "One Whole Keg", "Mustache Bloodclaw", "Ryvalia Fazebringer", "Jeckyll Mbs", "Eibh\u00ebar", "Forever Broke", "Cat Wigglebooty", "Koralia Danai", "Ace Hammers", "Sp\u00edcy Cheese", "Mike The Archmagus", "Fribble Bibble", "Mistwalker Caelon", "Drevarr Moonwillow", "Lord Erin The Wise", "Tribal S", "Rina Of Theros", "Smol Daddy Tika", "Smol Gluvs", "Zaylen Harker", "Mac Aaroni", "Ravioli Fetabringer", "Acme Corporation", "Primal Clone", "Black Raspberry Pie", "Xanvias Tseli", "Newtype Khan", "Panther B Me", "Tootsie Pop Bringer", "Arcanophage Farra", "Dark Sidiuz", "Elonith Tenebris", "\u00c1rk\u00e1ntor", "Skye Nightroad", "My Birthday Girl"];
const professions = ["Spellbreaker", "Berserker", "Herald", "Chronomancer", "Berserker", "Chronomancer", "Scourge", "Scrapper", "Firebrand", "Vindicator", "Berserker", "Tempest", "Scrapper", "Vindicator", "Scrapper", "Weaver", "Druid", "Scourge", "Berserker", "Scourge", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Berserker", "Spellbreaker", "Scourge", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1244, 0, 82024], [0, 0, 53269, 0, 4927, 0, 2453, 3710, 4527, 4391, 7542, 5071], [82250, 247, 0, 0, 3011, 0, 269, 4952], [0, 0, 68960, 895, 1896, 2462, 0, 1863, 3266, 1248, 4731, 1828, 3778], [0, 0, 67744, 921, 2465, 0, 3905, 0, 9330, 655, 3017, 3772], [105, 0, 66109, 0, 696, 3713, 739, 267, 7005, 7588, 2930, 6608, 5490], [107296], [28, 245, 74252, 192, 0, 30, 0, 271, 2733, 17337, 4612, 5899, 3431], [1448, 193, 95682, 0, 0, 0, 599, 1775, 0, 7290, 0, 1063, 4708], [0, 0, 98967, 737, 148, 0, 0, 0, 5940, 5364, 2465, 301, 1310], [1248, 0, 89588, 0, 0, 2645, 0, 2059, 10812, 5558, 2459, 3278], [0, 1248, 116987, 69, 0, 3824, 1248, 1248, 1553, 1098, 0, 1468, 915], [40, 1416, 91172, 147, 27, 1328, 1983, 2399, 3459, 19049, 1484, 6756, 2127], [0, 1177, 124932, 1454, 2248, 0, 5268, 2459, 0, 1650, 8124, 0, 275], [111078, 122, 297, 2887, 815, 1360, 10869, 6641, 6355, 6372, 7696], [1248, 3448, 129680, 0, 967, 3448, 0, 1248, 1630, 4566, 2576, 4779, 2712], [0, 0, 118026, 2510, 0, 2465, 5668, 0, 8352, 6190, 3690, 8072, 5835], [4685, 1191, 87612, 0, 1146, 5222, 1227, 1540, 16161, 26689, 3208, 2495, 15084], [0, 0, 134022, 0, 1180, 7150, 1143, 3672, 0, 7415, 6856, 4990, 0], [0, 2448, 96213, 0, 11594, 0, 5939, 13107, 15862, 7709, 9945, 8274], [3713, 0, 127860, 0, 4554, 0, 1248, 2465, 8362, 5186, 8057, 11879], [2129, 160, 151319, 1412, 0, 0, 2304, 3441, 11450, 2526, 0, 0, 0], [2465, 0, 132553, 0, 513, 2464, 2607, 4890, 2928, 15693, 1606, 5981, 3543], [0, 17825, 15336, 17077, 9581, 19969, 11592, 94046, 11894], [2465, 0, 159328, 143, 0, 0, 2465, 2407, 4946, 17086, 2065, 2804, 6723], [0, 0, 169364, 0, 0, 2235, 5223, 3706, 4048, 9309, 3314, 3220, 4773], [94, 0, 176909, 0, 2250, 0, 2885, 3394, 6868, 7800, 21, 2522, 2495], [1250, 0, 162809, 587, 0, 5057, 3117, 6206, 6886, 21650, 7094, 1288, 8121], [4500, 3472, 161001, 3026, 1148, 6899, 2454, 3474, 8591, 15534, 2796, 18597, 5360], [15, 0, 231773, 3446, 240, 5645, 6908, 14418, 24354, 27619, 16401, 1836, 16245], [2901, 3063, 295531, 1067, 0, 4198, 4467, 3257, 13416, 18497, 7729, 8434, 3507], [3263, 269288, 0, 17976, 18811, 15034, 30983, 13220], [7187, 3448, 329955, 2954, 0, 7187, 12139, 7191, 10488, 20548, 12086, 17818, 19583], [677, 0, 340301, 469, 0, 11526, 12877, 6218, 20330, 34092, 12324, 10473, 9985], [2627, 127, 509636], [7840, 3546, 583591, 496, 1004, 18857, 9205, 21866, 22855, 32493, 15684, 46956, 13727]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

