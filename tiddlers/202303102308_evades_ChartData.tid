created: 20230310230833000
creator: Drevarr
modified: 20230705163521605
modifier: drevarr
tags: ChartData
title: 202303102308_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Elisha Raskae", "Dark L\u00e1la", "Ark Darkness", "K\u00f4sair", "Cat Wigglebooty", "Zadie Miststep", "Kiloak", "Nano", "Oo Dads Mad", "Rayge Storm", "Sumatra Satyricon", "Raelyn Sunray", "Be\u00eb", "K\u00f4sair", "Legacy Of Mathus", "Zaylen Harker", "Blanco Padre Guard", "Raimaru Hanzo", "Drevarr Moonwillow", "Koralia Danai", "Sofya De Nova", "R\u00fana Bierdna", "Rozaalyna", "Tegan Parker", "Dark Sidiuz", "Xanvias Tseli", "Smol Gluvs", "Morton Saltbringer", "Mac Chiato", "Aronorf Xideliesi", "Primal Clone", "Viral Marketing", "Cerys Fireblade", "Arcanophage Farra", "Black Raspberry Pie", "Zefirokai", "Sp\u00edcy Cheese", "Ryvalia Fazebringer", "Demon Sekhmet", "Lord Erin The Wise", "Venomina The Siren", "Ace Hammers", "Kmpek", "High Sorcer Baradun", "Akira Moonbright", "Riann Swordbreak", "\u00c1rkantor", "Mistwalker Caelon"];
const professions = ["Firebrand", "Virtuoso", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Tempest", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Soulbeast", "Firebrand", "Scourge", "Berserker", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Weaver", "Spellbreaker", "Scourge", "Tempest", "Scourge", "Berserker", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Spellbreaker", "Chronomancer", "Tempest", "Berserker", "Chronomancer", "Berserker", "Weaver", "Tempest", "Vindicator", "Vindicator", "Tempest", "Herald", "Spellbreaker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 4, 5, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 13, 0, 5, 2, 13, 0, 0, 1, 2, 0, 1, 14], [1, 2, 16, 0, 9, 48, 3], [0, 13, 11, 0, 9, 5, 4, 0, 4, 6, 0, 2, 0, 12, 0, 7, 7], [29, 0, 5, 11, 0, 0, 13, 0, 0, 17, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 2, 0, 1, 1], [0, 18, 0, 13, 0, 1, 2, 0, 1, 0, 0, 0, 8, 0, 19, 2, 16, 5, 0, 0, 1, 0, 3, 5], [59, 0, 7, 2, 1, 1, 12, 5, 0, 2, 0, 0, 0, 0, 4, 1, 0, 4, 0, 1, 0], [22, 6, 0, 0, 0, 43, 0, 16, 0, 0, 5, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 2, 0, 0, 0], [4, 5, 0, 0, 5, 44, 0, 0, 2, 0, 6, 2, 7, 1, 3, 1, 0, 0, 0, 10, 0, 2, 0, 0, 0, 0, 0, 0, 1, 3, 8], [4, 27, 3, 3, 11, 60], [10, 4, 0, 6, 2, 57, 0, 7, 9, 1, 13, 0], [23, 0, 18, 70], [2, 6, 3, 0, 1, 56, 0, 2, 1, 0, 0, 0, 1, 0, 7, 2, 0, 0, 0, 13, 0, 8, 1, 4, 1, 0, 4, 4], [3, 9, 5, 6, 0, 61, 0, 0, 0, 0, 0, 0, 1, 4, 2, 0, 1, 0, 2, 8, 0, 7, 5, 0, 0, 2, 2, 1, 1], [4, 14, 7, 3, 13, 56, 0, 5, 0, 0, 0, 4, 0, 4, 1, 0, 1, 0, 0, 0, 1, 4, 2, 1, 0, 0, 4, 0, 0, 4], [6, 2, 9, 7, 3, 102], [0, 25, 7, 1, 3, 34, 0, 18, 2, 1, 4, 4, 6, 0, 1, 1, 0, 1, 0, 2, 0, 1, 1, 9, 2, 1, 0, 1, 2, 4, 11], [5, 7, 0, 0, 9, 63, 0, 7, 1, 2, 4, 4, 0, 0, 2, 0, 0, 4, 3, 8, 4, 1, 1, 1, 2, 0, 6, 9, 5], [12, 8, 15, 0, 13, 39, 1, 15, 3, 1, 4, 1, 2, 0, 3, 0, 0, 0, 0, 11, 0, 7, 0, 0, 0, 0, 0, 2, 8, 2, 1], [2, 0, 11, 3, 0, 4, 0, 23, 0, 14, 3, 15, 5, 4, 6, 2, 21, 0, 39], [5, 12, 23, 0, 7, 47, 0, 8, 6, 1, 5, 11, 5, 0, 1, 0, 0, 0, 3, 9, 0, 0, 0, 5, 0, 0, 1, 1, 0, 2, 2], [8, 6, 14, 0, 6, 44, 0, 3, 3, 0, 2, 5, 1, 0, 7, 0, 0, 8, 7, 0, 17, 0, 4, 0, 0, 1, 11, 4, 0, 5], [3, 9, 11, 0, 2, 72, 0, 9, 3, 0, 2, 4, 5, 0, 1, 0, 0, 1, 0, 4, 0, 5, 10, 7, 1, 4, 0, 0, 1, 4, 5], [20, 7, 3, 0, 8, 71, 5, 7, 0, 7, 32, 0, 0, 3, 0, 0, 2], [7, 13, 14, 1, 7, 45, 0, 6, 2, 0, 9, 11, 7, 0, 1, 0, 0, 0, 0, 15, 0, 1, 2, 5, 3, 0, 0, 0, 9, 5, 7], [10, 17, 0, 2, 8, 43, 0, 25, 5, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0, 0, 16, 1, 1, 1, 2, 0, 5, 16, 13, 0], [5, 1, 7, 2, 4, 102, 1, 2, 3, 1, 3, 13, 3, 4, 19], [8, 12, 11, 0, 23, 42, 0, 5, 1, 0, 8, 6, 1, 0, 7, 2, 0, 6, 0, 7, 0, 4, 17, 5, 3, 4, 1, 0, 1, 0, 6], [0, 7, 16, 4, 7, 64, 0, 7, 6, 0, 7, 0, 6, 0, 5, 0, 0, 1, 0, 7, 0, 3, 8, 5, 3, 1, 4, 1, 5, 4, 10], [5, 24, 17, 4, 9, 81, 0, 0, 8, 0, 0, 8, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 25, 9, 0, 0, 2, 2, 0, 3], [0, 21, 4, 7, 94, 0, 12, 2, 0, 13, 4, 2, 2, 3, 2, 1, 0, 7, 1, 1, 6, 0, 4, 2, 2, 0, 1, 3, 10], [8, 18, 10, 3, 3, 74, 1, 5, 4, 3, 3, 7, 5, 0, 1, 4, 0, 5, 0, 12, 0, 2, 3, 11, 3, 0, 1, 1, 10, 1, 7], [9, 25, 11, 4, 10, 65, 0, 9, 11, 0, 3, 7, 1, 0, 5, 3, 0, 0, 0, 3, 2, 0, 4, 9, 3, 6, 0, 3, 5, 7, 11], [7, 19, 12, 4, 13, 95, 0, 1, 9, 0, 4, 5, 8, 0, 0, 0, 0, 0, 1, 2, 0, 5, 5, 3, 3, 0, 1, 0, 0, 0, 21], [4, 15, 15, 1, 13, 72, 0, 15, 13, 0, 6, 5, 6, 2, 6, 0, 0, 1, 0, 5, 1, 2, 14, 2, 4, 8, 1, 0, 4, 3, 4], [8, 18, 17, 0, 2, 108, 0, 5, 5, 1, 4, 1, 0, 2, 0, 1, 0, 8, 5, 9, 3, 4, 5, 7, 9, 6, 1, 0, 1], [37, 18, 8, 1, 8, 82, 0, 1, 5, 0, 0, 0, 1, 0, 10, 0, 0, 0, 0, 12, 0, 12, 2, 26, 0, 4, 1, 0, 0, 4, 5], [7, 6, 14, 1, 21, 97, 0, 10, 0, 1, 9, 7, 1, 0, 3, 0, 0, 0, 3, 4, 1, 15, 1, 24, 2, 2, 14], [2, 9, 16, 0, 9, 104, 0, 10, 8, 1, 12, 13, 6, 0, 1, 12, 0, 1, 0, 8, 0, 6, 1, 14, 6, 0, 2, 1, 1, 1, 9], [4, 26, 12, 1, 16, 49, 0, 3, 5, 2, 1, 15, 7, 0, 10, 2, 0, 0, 0, 29, 1, 12, 20, 6, 5, 7, 3, 1, 0, 14, 24], [9, 25, 12, 6, 1, 126, 0, 11, 6, 0, 9, 17, 4, 0, 7, 1, 0, 2, 21, 1, 8, 12, 12, 4, 9], [12, 23, 25, 6, 16, 44, 0, 3, 8, 0, 36, 4, 1, 2, 11, 0, 0, 41, 0, 23, 0, 38, 4, 0, 24, 1, 2, 1, 2], [22, 12, 20, 1, 9, 111, 0, 5, 10, 3, 3, 1, 0, 0, 34, 2, 0, 5, 0, 19, 0, 20, 2, 10, 5, 9, 0, 2, 9, 0, 27], [0, 0, 56, 4, 18, 101, 8, 7, 4, 2, 2, 23, 4, 0, 43, 0, 1, 6, 0, 0, 34, 16, 15, 4, 6, 8, 8, 0, 0, 6], [19, 48, 34, 9, 4, 69, 5, 1, 19, 2, 5, 5, 1, 18, 1, 0, 52, 3, 18, 40, 7, 5, 1, 5, 5, 17, 22, 21, 30], [38, 44, 39, 12, 3, 154, 0, 3, 12, 0, 33, 26, 0, 22, 0, 0, 0, 5, 51, 9, 1, 2, 7, 3, 3, 23], [21, 40, 49, 4, 11, 167, 8, 14, 14, 6, 5, 20, 14, 2, 11, 0, 0, 26, 3, 72, 2, 13, 7, 3, 14, 0, 1], [16, 34, 21, 7, 30, 143, 0, 16, 21, 4, 6, 11, 18, 3, 15, 0, 0, 5, 0, 40, 0, 13, 21, 16, 2, 12, 6, 3, 20, 7, 48], [37, 25, 50, 6, 25, 210, 0, 15, 10, 6, 12, 11, 5, 2, 9, 1, 0, 3, 1, 30, 0, 15, 48, 10, 5, 6, 2, 14, 24, 10, 24], [44, 42, 35, 10, 16, 245, 2, 24, 2, 4, 6, 8, 20, 2, 7, 2, 0, 11, 3, 53, 0, 33, 28, 13, 6, 5, 5, 3, 22, 14, 36]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

