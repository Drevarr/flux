created: 20230524221126000
creator: Drevarr
modified: 20230705163531423
modifier: drevarr
tags: ChartData
title: 202305242211_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Bura Beignetbringer", "Demon Maddx", "Bubble Teabringer", "Inedible Plant", "Xkaet", "Morton Saltbringer", "Morv\u00e4rth", "Xanvias Einzbern", "Brioche Bunbringer", "Hauzzy", "Grasszanine", "Johosh Of The North", "Soxx", "Newtype Khan", "Band Aidbringer", "Bella Lunabringer"];
const professions = ["Firebrand", "Scourge", "Firebrand", "Vindicator", "Tempest", "Chronomancer", "Reaper", "Berserker", "Chronomancer", "Berserker", "Spellbreaker", "Tempest", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[246, 636, 371, 334, 319, 286, 169, 544, 259, 450, 267, 393], [238, 288, 388, 229, 234, 546, 172, 1124, 363, 561, 446, 521], [210, 572, 314, 296, 303, 423, 153, 361, 357, 471, 366, 918], [223, 419, 360, 274, 232, 342, 169, 695, 328, 559, 391, 1415], [307, 234, 325, 248, 297, 224, 1911, 230, 421, 303, 656], [240, 315, 282, 225, 159, 1572, 344, 622, 362, 8305], [232, 253, 329, 321, 257, 1012, 309, 481, 714], [225, 353, 230, 242, 265, 307, 251, 478, 241, 445, 242, 1891], [187, 287, 312, 276, 241, 260, 128, 545, 236, 394, 270, 651], [224, 333, 310, 230, 274, 267, 700, 397, 191, 369, 210, 629], [290, 428, 223, 183, 296, 248, 146, 355], [238, 287, 203, 242, 240, 229, 112, 356, 298, 392, 254, 391], [194, 278, 343, 245, 248, 261, 130, 545, 233, 347, 309, 721], [203, 227, 258, 226, 216, 188, 1639, 212, 405, 305, 362], [203, 590, 388, 220, 205, 224, 126, 426, 257, 337, 209, 339], [190, 276, 335, 190, 180, 189, 150, 258, 259, 301, 220, 393]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

