created: 20230501220820000
creator: Drevarr
modified: 20230705163527953
modifier: drevarr
tags: ChartData
title: 202305012208_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Raevarae", "Blancooo Padreee", "Morv\u00fcs", "Svix", "Primal Clone", "Newtype Khan", "Smol Gluvs", "Black Raspberry Pie", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Reaper", "Spellbreaker", "Spellbreaker", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0095, 0.0, 0.0, 0.102, 0.1257, 0.1694, 0.1897], [0.022, 0.019, 0.0, 0.0, 0.3061, 0.1675, 0.1564, 0.1724, 0.0421, 0.0, 0.0, 0.0, 0.0, 0.0979], [0.0, 0.0, 0.5102, 0.0838, 0.3602], [0.1482, 0.0569, 0.0138, 0.0, 0.2245, 0.2356, 0.3033, 0.5, 0.1008, 0.0545, 0.0172, 0.0635, 0.0256], [0.1941, 0.0047, 0.0138, 0.0455, 0.3878, 0.2565, 0.3614, 0.569, 0.1459, 0.0727, 0.4483, 0.0, 0.0, 0.3351], [0.238, 0.0142, 0.0, 0.0, 0.3061, 0.267, 0.4111, 0.7414, 0.1549, 0.0, 0.4483, 0.0], [0.2228, 0.019, 0.0138, 0.0, 0.1633, 0.1937, 0.4597, 1.0172, 0.1308, 0.0727, 0.0259, 0.0, 0.0513, 0.3041], [0.3728, 0.0332, 0.0414, 0.0909, 0.551, 0.267, 0.4656, 0.7069, 0.3218, 0.0364, 0.0086, 0.0, 0.0, 0.3763], [0.3098, 0.0379, 0.0138, 0.0, 0.551, 0.3351, 0.7026, 2.2414, 0.2872, 0.0727, 0.0603, 0.0, 0.0256, 0.4278], [0.5067, 0.0995, 0.0414, 0.0455, 0.3469, 0.3927, 0.622, 1.069, 0.4617, 0.0909, 0.5948, 0.0, 0.1795, 0.5979]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

