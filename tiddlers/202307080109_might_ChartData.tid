created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Venomina The Siren", "Mike The Archmagus", "Etchery Howls", "Xanvias Einzbern", "Johosh The Mighty", "Zaedy Zae", "Eibh\u00ebar", "Mother Ship", "Melli Dragonswrath", "Ateriuz", "Black Raspberry Pie", "Gestern Yesteryear", "Air One Com", "Aronorf Xideliesi", "Tika Fiery", "Tegan Parker", "Bella Sassy", "Arriasa", "Koralia Danai", "Newtype Khan", "Solus Sanctus", "Drevarr Moonwillow", "Arcanophage Farra", "Grasszanine", "K\u00f4sair"];
const professions = ["Druid", "Tempest", "Weaver", "Druid", "Berserker", "Berserker", "Druid", "Chronomancer", "Tempest", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.7152, 4.794, 6.8714, 20.5632, 4.1496, 11.5538, 7.0762, 1.8576, 3.9456, 3.1363, 2.9775, 29.845, 0.2495, 6.498, 5.0184, 5.3392, 3.0246, 8.6986, 23.2783, 29.3319, 0.0, 1.8603, 9.555, 5.8731, 2.4576, 8.8099, 1.5444, 3.6708, 1.764, 12.1628, 0.0], [4.2417, 14.8896, 16.3635, 20.0246, 1.3104, 0.0, 10.1338, 32.3919, 1.8377, 0.0, 2.5058, 0.0, 4.0194, 3.9758, 0.0, 2.4026, 1.991, 2.5815, 1.8009, 16.5945, 19.2602, 0.1404, 10.8473, 0.2187, 0.5779, 0.0, 0.0, 0.5148, 3.3649, 0.0, 5.3714, 1.008, 62.8555, 0.0], [3.7506, 8.178, 4.0589, 5.3856, 4.0872, 5.85, 5.7658, 3.5604, 2.6484, 3.1882, 3.685, 12.455, 1.885, 5.0872, 0.5117, 2.7697, 1.4906, 3.7039, 7.5371, 8.5215, 2.7306, 4.3173, 5.3258, 2.8741, 2.2714, 3.4644, 2.8207, 4.2768, 3.1814, 4.221, 6.9149, 2.212, 71.9212, 5.3509, 32.8569], [15.047, 22.56, 7.3828, 18.9965, 2.8704, 4.2705, 13.7592, 10.1394, 6.8103, 5.184, 4.4515, 23.8525, 4.0471, 15.732, 0.433, 10.4782, 0.0, 6.9589, 12.9398, 23.5911, 12.8239, 11.7234, 11.3172, 0.0, 4.5696, 6.9583, 7.7666, 4.554, 6.0568], [8.037, 7.2756, 1.598, 4.1126, 3.9312, 8.4532, 8.2555, 3.9474, 8.5399, 1.1923, 2.4468, 9.5175, 1.5246, 12.6113, 2.8733, 1.2347, 1.3709, 8.2496, 11.2723, 12.9168, 4.681, 9.828, 7.8712, 1.4683, 0.2688, 5.1521, 6.221, 15.246, 7.7699, 2.772, 11.0515, 2.968, 90.657], [7.5905, 8.7984, 3.9311, 5.6794, 4.0248, 5.1772, 6.5083, 4.4892, 0.4864, 4.2768, 3.4197, 15.98, 2.9938, 14.7487, 2.3813, 7.4081, 1.4144, 5.3314, 17.2753, 13.0065, 1.9504, 11.934, 8.7327, 3.124, 1.129, 8.0835, 3.4776, 9.2664, 2.9366, 3.5595, 5.9888, 1.33, 126.9198, 0.0, 2.0257], [1.5628, 0.0, 4.2507, 13.415, 5.0544, 3.159, 1.092, 3.3282, 5.8374, 2.4365, 0.8844, 11.045, 0.8316, 15.1335, 0.1574, 0.0, 0.0, 10.2138, 14.4739, 11.4816, 0.7314, 0.9477, 2.702, 6.3105, 0.0, 0.0, 1.507, 3.2076, 3.1814, 1.6695, 7.2853, 2.8, 137.7986, 1.9883, 0.0, 24.6786, 30.3226], [7.5012, 8.6292, 4.3785, 4.847, 3.7128, 3.9195, 5.0232, 4.5402, 1.9958, 4.6284, 24.0875, 4.4075, 12.6967, 2.4206, 0.8343, 10.0455, 15.6078, 20.7207, 1.1215, 5.9319, 10.4949, 4.6235, 0.3494, 4.175, 5.1391, 5.2668, 6.791, 3.402, 6.8531, 5.306, 94.8877, 2.4562, 23.8177, 28.819], [3.7506, 0.0, 0.0, 35.496, 0.2184, 0.0, 12.2741, 0.0, 7.2968, 0.1814, 2.7122, 2.7025, 4.7956, 29.583, 0.0, 1.3682, 0.0979, 12.7392, 4.002, 7.176, 0.0, 0.0, 1.5272, 21.1495, 0.0, 0.9179, 2.0866, 0.0, 0.8565, 0.0, 0.0, 0.014, 71.9212, 0.0, 35.87, 112.1435], [8.2603, 27.1284, 7.8622, 10.7222, 3.8064, 3.7733, 7.6003, 5.9211, 14.7016, 3.4474, 7.37, 12.69, 2.8829, 10.431, 2.6568, 3.4371, 1.6102, 3.8162, 7.8706, 5.2923, 5.5099, 4.5981, 5.7565, 3.2802, 1.0618, 3.0202, 1.932, 5.0688, 3.7932, 2.2995, 5.6183, 0.0, 98.5139, 9.0059, 3.2542, 42.9005, 36.8382], [8.4835, 8.7984, 5.2095, 6.3158, 3.2448, 1.7257, 9.9154, 4.1796, 3.4592, 2.7734, 12.7648, 16.0975, 1.1642, 6.7973, 1.8302, 2.703, 1.3818, 10.1016, 7.4037, 20.4516, 6.1438, 12.4254, 8.3411, 6.9665, 1.9891, 2.3688, 6.4915, 8.0388, 10.6453, 4.1265, 11.2367, 3.024, 114.8322, 4.4737, 33.0004, 31.0744], [7.8137, 8.7984, 5.4332, 6.5117, 6.5832, 2.691, 9.3475, 0.9675, 6.0536, 2.255, 4.9526, 17.86, 2.0513, 12.2265, 2.7158, 4.2714, 1.3165, 6.3416, 11.9393, 16.146, 3.5595, 4.3875, 6.5789, 3.6863, 1.9354, 2.6353, 5.8346, 2.97, 5.6897, 6.5205, 7.6558, 2.562, 139.0074, 4.4737, 1.1248, 37.1613, 37.3394], [20.2711, 10.9416, 10.0035, 10.8691, 0.0, 21.6743, 1.5725, 15.9444, 7.2968, 0.0, 2.8301, 22.6775, 0.2495, 0.0, 0.4133, 2.2024, 6.2854, 2.6013, 11.1228, 10.4834, 1.7901, 0.3524, 9.5282, 3.4406, 0.0, 2.898, 6.732, 9.177, 10.4265, 7.5323, 0.252, 106.3709, 8.6258, 42.3266, 55.2573], [6.251, 8.0652, 0.1278, 5.3856, 0.0, 0.0, 7.2509, 8.4753, 5.8374, 0.3888, 0.5601, 0.0, 0.0554, 8.4217, 0.059, 5.0722, 6.0048, 8.004, 13.2756, 11.8487, 2.7027, 3.9552, 3.5926, 0.0, 2.0431, 4.0958, 2.0196, 4.8332, 4.41, 3.5809, 2.982, 177.6877, 3.5965, 60.8355, 52.1248], [10.582, 8.4036, 4.0589, 3.5741, 0.3744, 0.936, 9.5659, 7.8948, 11.2964, 1.8662, 1.1202, 35.485, 1.7741, 7.695, 1.4366, 1.6351, 7.015, 7.2036, 15.6975, 9.4594, 2.8782, 4.2684, 2.4055, 0.7661, 1.8654, 6.0665, 4.95, 7.7087, 14.3955, 1.3583, 1.344, 162.5782, 9.1521, 0.0, 35.583, 34.4575], [9.0193, 19.4016, 2.7805, 4.7002, 0.0, 3.4807, 4.5427, 11.8035, 9.2426, 1.3478, 2.7122, 13.0425, 2.273, 5.13, 3.2866, 5.139, 4.209, 12.1394, 11.2125, 5.5586, 3.2292, 4.5426, 13.2458, 0.0, 4.0566, 1.7388, 2.4948, 13.1537, 10.71, 4.1366, 0.0, 157.1388, 8.2749, 0.0, 46.631, 52.626], [29.3797, 29.6664, 0.0, 2.6438, 0.0, 3.9488, 4.6738, 12.9645, 9.783, 0.0, 0.0, 25.0275, 0.0, 6.7973, 0.0, 0.0, 1.3469, 14.2071, 2.9601, 10.8247, 4.8087, 5.3258, 0.0, 1.5053, 5.6851, 0.8887, 0.0, 3.2425, 12.1275, 2.4696, 0.0, 144.4468, 0.0, 0.0055, 72.4574, 59.0163], [8.225, 7.935, 5.6045, 6.5438, 1.5456, 7.2072, 7.3416, 12.537, 10.4958, 0.756, 247.7958, 6.4328, 1.3923, 70.5922, 72.674], [1.4735, 15.51, 8.2776, 12.3379, 6.4896, 2.7495, 5.1979, 0.0, 1.3513, 2.2032, 1.3561, 14.805, 0.9979, 10.431, 1.0824, 3.9043, 1.5885, 5.0508, 2.001, 29.6907, 12.1412, 5.2299, 4.4642, 1.8744, 0.0, 0.5626, 5.5642, 6.2568, 2.4472, 4.284, 6.1123, 0.77, 190.9841, 0.0, 0.0, 63.4182, 40.096], [14.0201, 12.2952, 4.762, 20.1226, 1.4976, 1.4917, 1.4851, 6.8499, 10.81, 0.648, 0.7075, 23.735, 2.2453, 2.9925, 2.4797, 4.3047, 3.76, 5.0692, 12.558, 17.5048, 1.2285, 6.618, 4.8422, 3.1979, 1.932, 1.98, 5.3227, 6.7095, 9.1375, 1.162, 180.7096, 11.8422, 62.7008, 54.7561], [23.1733, 44.6688, 22.6596, 24.0883, 22.7136, 26.8515, 23.5435, 5.9985, 8.1075, 6.6614, 2.7416, 25.38, 3.8808, 12.2265, 2.1648, 5.8731, 1.9584, 8.0813, 18.1424, 17.8503, 9.947, 10.5651, 2.937, 15.5575, 2.7955, 4.708, 7.1484, 5.8212, 6.3015, 5.418, 7.9645, 4.214, 212.1374, 7.8071, 1.911, 50.0745, 78.5631], [28.0849, 13.4796, 9.8117, 23.8925, 13.8216, 6.2595, 6.2899, 25.7355, 16.3231, 0.9331, 3.007, 39.1275, 1.1088, 14.9197, 1.0824, 8.1423, 6.1037, 6.566, 9.4047, 14.2623, 8.0942, 5.3001, 4.8558, 8.4348, 8.064, 4.8264, 3.2458, 3.7224, 10.4006, 12.1275, 14.5089, 1.428, 291.9155, 20.2633, 98.5708, 73.927], [16.7884, 15.7356, 10.5788, 19.2902, 10.764, 8.9212, 9.959, 2.4768, 9.9452, 5.7283, 1.3856, 41.595, 6.1538, 18.9383, 6.5141, 5.2391, 9.821, 13.7402, 33.8169, 15.3594, 10.9161, 9.9075, 8.3723, 5.9516, 8.0758, 3.7224, 5.7509, 9.261, 20.9916, 0.616, 312.4645, 6.3743, 2.113, 93.9794, 66.7849], [20.3158, 31.1892, 21.2854, 44.3578, 12.2304, 11.9047, 30.445, 8.3205, 30.8625, 21.8765, 23.7314, 49.7025, 15.5786, 23.3843, 6.5731, 20.9564, 29.3508, 52.6263, 66.6471, 23.4536, 25.0263, 31.9546, 7.5913, 11.0342, 17.3218, 19.2427, 23.1264, 28.6934, 31.311, 35.624, 8.442, 659.3786], [35.739, 7.1635, 36.1731, 7.4854, 26.657, 64.5656, 101.5404, 28.0858, 34.398, 31.7979, 21.868, 7.177, 26.6786, 12.8285, 27.522, 26.3686, 24.759, 38.3405, 7.294, 902.3393, 26.0236, 10.2976, 264.7206], [32.907, 54.3132, 16.2676, 21.8362, 38.4696, 12.4605, 30.7507, 28.9476, 38.9701, 27.9677, 12.2932, 130.7775, 10.6445, 40.698, 11.3554, 8.843, 23.7949, 50.9588, 97.3245, 8.9231, 24.1137, 26.3547, 21.3994, 9.2333, 12.8507, 24.3432, 30.0168, 38.8493, 26.523, 42.4771, 13.902, 619.4895, 26.199, 194.5589, 135.324]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

