created: 20230625215649000
creator: Drevarr
modified: 20230705163536816
modifier: drevarr
tags: ChartData
title: 202306252156_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Rina Of Theros", "Imalou", "Grimdox", "Fiorela Marina", "Euljian", "Raelyn Sunray", "Mammary Mission", "Sumatra Satyricon", "Lord Erin The Wise", "Elonith Requiem", "Tribal S", "Etchery Howls", "Grasszanine", "Momomeko", "Jacob Pine", "Inedible Plant", "Cedryn X", "Mmathuss", "Demon Staph", "Blancooo Padreee", "Koralia Danai", "Mistwalker Cael", "Tootsy Pop Star", "Sygaldry Verdandi", "Bella Sassy", "Solus Sanctus", "Xanvias Einzbern", "Rozaalyna", "Cerys Fireblade", "Smol Gluvs", "Tika Fiery", "Drevarr Moonwillow", "Raziel Umbra", "Johosh The Mighty", "Mister Jekyll", "Artakama Nahid", "Tegan Parker", "Crusader Siolith", "Primal Clone", "Irish Mini Rev", "Elon The Mender", "Ryvalia Fazebringer", "Black Raspberry Pie", "Newtype Khan", "Miphest\u00f6", "Arcanophage Farra", "High Sorcer Baradun", "Eibh\u00ebar", "Zayde Sunsabre"];
const professions = ["Reaper", "Scourge", "Firebrand", "Firebrand", "Reaper", "Willbender", "Firebrand", "Scourge", "Soulbeast", "Weaver", "Reaper", "Druid", "Druid", "Spellbreaker", "Chronomancer", "Reaper", "Vindicator", "Berserker", "Firebrand", "Druid", "Spellbreaker", "Firebrand", "Vindicator", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Reaper", "Berserker", "Reaper", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Reaper", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Herald", "Druid", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.7561, 0.119, 0.069, 1.2889, 0.9759, 0.1609, 0.3409, 0.286], [0.0377, 0.012, 0.1106, 0.1266, 0.3227, 0.1769, 0.0493, 0.0351, 0.025, 0.4767, 0.1981, 0.219, 0.0], [0.0755, 0.012, 0.0625, 0.1266, 0.2687, 0.1497, 0.0428, 0.2544, 0.2209, 0.4057, 0.7905, 0.0714], [0.3684, 0.025, 0.5116, 0.2736, 0.3524, 1.2439, 0.3571, 0.0, 0.8, 0.6506, 0.0172, 0.5909, 0.174], [0.0755, 0.1138, 0.024, 0.2532, 0.5723, 0.1293], [0.0481, 0.038, 0.1431, 0.0407, 0.4474, 0.0, 0.2791, 0.5377, 0.5619, 0.0357, 0.439, 0.2619, 0.0, 0.1778, 0.6988, 0.1092, 0.5909, 0.112], [0.981, 0.0, 0.8049, 0.619, 0.0, 0.6889, 0.5422, 0.569, 0.3409, 0.33], [0.0814, 0.4912, 0.0, 0.6279, 0.5377, 1.0095, 0.1429, 0.7805, 0.7857, 0.0, 0.4889, 0.8072, 0.2471, 0.6136], [0.0755, 0.012, 0.0529, 0.2152, 0.2766, 0.0476, 0.0471, 0.0877, 0.025, 0.3953, 0.5189, 0.381, 0.0, 0.0, 0.4762, 0.2889, 0.3735, 0.2529, 0.5682, 0.122], [0.0377, 0.0, 0.0529, 0.1266, 0.3418, 0.1429, 0.0642, 0.1228, 0.0, 0.4767, 0.1604, 0.3619, 0.7805, 0.619, 0.0, 0.0, 0.3556, 0.241, 0.2759, 0.5682, 0.022], [0.3421, 0.0125, 0.4767, 0.5377, 0.5143, 0.1786, 0.4146, 0.5952, 0.0, 0.2069, 0.7778, 0.747, 0.4023, 0.5682, 0.286], [0.1404, 0.0, 0.314, 0.3868, 0.8095, 0.0714, 0.7317, 0.6905, 0.02, 0.069, 0.7333, 1.0723, 0.3908, 0.6364, 0.276], [0.0588, 0.034, 0.0899, 0.3772, 0.0, 0.2209, 0.3208, 0.5143, 0.0, 1.0, 0.7143, 0.1034, 1.0, 0.9639, 0.2644, 0.9545, 0.22], [0.0621, 0.307, 0.025, 0.4186, 0.5189, 0.5429, 0.0714, 1.2439, 0.8095, 0.04, 0.069, 0.8444, 0.9518, 0.4828, 0.3409, 0.31], [0.006, 0.0913, 0.038, 0.2321, 0.2177, 0.0385, 0.3246, 0.0, 0.186, 0.434, 0.619, 0.0357, 0.2683, 0.381, 0.069, 0.5111, 0.8313, 0.2931, 0.5455, 0.196], [0.045, 0.5965, 0.0125, 0.5116, 0.5849, 0.981, 0.1071, 0.5854, 1.0476, 0.0, 0.0345, 1.0444, 0.5783, 0.4655, 1.0227, 0.222], [0.1698, 0.024, 0.0673, 0.0759, 0.2623, 0.1361, 0.0557, 0.5088, 0.0, 0.4535, 0.3868, 1.0, 0.1429, 0.9512, 0.9048, 0.2222, 0.8072, 0.2644, 0.5227, 0.144], [0.1321, 0.006, 0.0481, 0.3671, 0.3768, 0.1769, 0.0771, 0.0526, 0.0625, 0.1977, 0.3868, 0.5333, 0.0, 0.439, 0.2143, 0.12, 0.7778, 0.8916, 0.2989, 0.5455, 0.202], [0.0189, 0.012, 0.0577, 0.1646, 0.3577, 0.0884, 0.0942, 0.3333, 0.0125, 0.2674, 0.2547, 0.8, 0.0, 0.7561, 0.4762, 0.0, 0.0, 1.1111, 0.9277, 0.3276, 0.6136, 0.098], [0.1698, 0.0, 0.0673, 0.1266, 0.3657, 0.1361, 0.0343, 0.2193, 0.0, 0.4302, 0.3208, 0.8857, 0.0357, 0.5366, 0.5714, 0.0, 0.4667, 0.747, 0.3046, 0.7273, 0.196], [0.1132, 0.018, 0.0817, 0.1899, 0.3466, 0.1769, 0.0857, 0.4211, 0.025, 0.3023, 0.4811, 0.1048, 0.1071, 0.5122, 0.6429, 0.0, 0.7556, 1.0723, 0.3103, 0.3636, 0.224], [0.0943, 0.0, 0.0481, 0.3418, 0.318, 0.1769, 0.0878, 0.3772, 0.1125, 0.3488, 0.1792, 0.7238, 0.2143, 1.0976, 0.5238, 0.069, 0.6, 0.9157, 0.2701, 0.6136, 0.238], [0.0566, 0.0898, 0.0433, 0.2405, 0.2925, 0.1224, 0.06, 0.3772, 0.025, 0.3953, 0.4245, 0.9714, 0.0, 0.4634, 0.5714, 0.0, 0.5517, 0.6, 0.8434, 0.3908, 0.4091, 0.268], [0.1698, 0.0, 0.0481, 0.2911, 0.3021, 0.1633, 0.0749, 0.5526, 0.0, 0.4767, 0.6321, 1.1048, 0.9512, 0.5476, 0.0, 0.0345, 1.0222, 1.0482, 0.4023, 0.1591, 0.06], [0.0189, 0.018, 0.0529, 0.2278, 0.3545, 0.1701, 0.0493, 0.386, 0.075, 0.2907, 0.2925, 0.6952, 0.0, 1.1463, 0.8571, 0.069, 1.2667, 0.8072, 0.3161, 0.4773, 0.248], [0.1887, 0.0, 0.0673, 0.2532, 0.2401, 0.1837, 0.0535, 0.4123, 0.05, 0.407, 0.4057, 0.8571, 0.25, 0.878, 0.5714, 0.06, 0.0345, 0.5778, 1.0241, 0.5345, 0.4091, 0.268], [0.0, 0.0, 0.0481, 0.0, 0.3514, 0.1429, 0.0557, 0.2895, 0.0125, 0.3256, 0.4245, 1.0667, 0.1786, 0.8293, 0.5476, 0.0, 0.069, 0.5333, 0.759, 0.5345, 0.7045, 0.252], [0.0943, 0.006, 0.0577, 0.1519, 0.3227, 0.1837, 0.0621, 0.3772, 0.0, 0.4419, 0.4151, 0.8476, 0.1071, 1.3902, 0.4762, 0.1034, 0.5333, 0.3373, 0.5345, 0.7045, 0.278], [0.0943, 0.0299, 0.0769, 0.3291, 0.3641, 0.1497, 0.0257, 0.5702, 0.0375, 0.3488, 0.7358, 1.3619, 0.0714, 0.4146, 0.8571, 0.1379, 0.7333, 1.1446, 0.1839, 0.4545, 0.088], [0.0189, 0.012, 0.0577, 0.3924, 0.2544, 0.1973, 0.0707, 0.4737, 0.0, 0.5349, 0.717, 0.4381, 0.1071, 0.6098, 0.6429, 0.02, 0.1379, 1.0889, 1.0723, 0.2874, 1.0, 0.286], [0.1132, 0.018, 0.0769, 0.1519, 0.337, 0.2857, 0.0557, 0.3509, 0.0375, 0.5233, 0.5472, 1.0286, 0.1071, 0.7805, 0.619, 0.0, 0.1379, 0.8, 0.4458, 0.2644, 0.9091, 0.338], [0.1132, 0.012, 0.1106, 0.3038, 0.4467, 0.1769, 0.06, 0.0351, 0.0375, 0.3372, 0.566, 0.8667, 0.1071, 0.6585, 0.9048, 0.0, 0.3103, 0.7111, 0.7711, 0.3851, 0.9091, 0.254], [0.1887, 0.0, 0.0673, 0.1899, 0.3784, 0.1973, 0.0857, 0.4561, 0.0, 0.5465, 0.434, 0.7905, 0.1429, 1.0, 0.8333, 0.06, 0.0345, 0.9111, 0.7831, 0.4828, 0.8182, 0.204], [0.283, 0.1557, 0.0865, 0.1646, 0.4229, 0.1565, 0.0771, 0.0439, 0.05, 0.3605, 0.6415, 1.0857, 0.0, 1.1463, 0.7857, 0.0, 0.3778, 0.8072, 0.3391, 0.5909, 0.248], [0.1132, 0.0539, 0.0865, 0.2025, 0.3609, 0.0952, 0.0835, 0.4561, 0.025, 0.5465, 0.4151, 0.8476, 0.1071, 1.2195, 0.5714, 0.0, 0.0, 1.0444, 0.9277, 0.3218, 0.7045, 0.298], [0.1509, 0.0, 0.0529, 0.3466, 0.2517, 0.0942, 0.0, 0.5233, 0.2547, 1.4857, 0.0, 1.3171, 0.5714, 0.0, 0.069, 0.7111, 1.1446, 0.3793, 0.75, 0.318], [0.1698, 0.012, 0.0721, 0.2785, 0.3816, 0.1769, 0.0728, 0.3509, 0.0125, 0.3023, 0.4245, 1.1714, 0.0, 1.1463, 0.4048, 0.4483, 0.7111, 0.8916, 0.546, 0.6136, 0.258], [0.0189, 0.0, 0.0962, 0.2152, 0.3132, 0.1361, 0.0493, 0.3421, 0.025, 0.4535, 0.5943, 1.1714, 0.1071, 1.2927, 1.119, 0.0, 0.1034, 0.9778, 1.2048, 0.6437, 0.6818, 0.22], [0.1509, 0.0599, 0.0529, 0.2911, 0.3704, 0.1224, 0.06, 0.5088, 0.025, 0.2093, 0.6509, 1.2667, 0.0357, 1.3171, 0.5476, 0.0, 0.1379, 0.9778, 1.1687, 0.3621, 0.7045, 0.262], [0.0566, 0.018, 0.0577, 0.2405, 0.3148, 0.1701, 0.0642, 0.3246, 0.0375, 0.6512, 0.5566, 1.5143, 0.2857, 0.9024, 0.4524, 0.02, 0.0, 1.2667, 0.9759, 0.4195, 0.8636, 0.298], [0.0377, 0.0599, 0.0433, 0.1899, 0.38, 0.1701, 0.0578, 0.2807, 0.075, 0.6977, 0.5094, 1.5619, 0.1429, 1.0732, 1.3095, 0.0, 0.4667, 0.9157, 0.546, 0.6136, 0.22], [0.0566, 0.0479, 0.0865, 0.3544, 0.4308, 0.1565, 0.0749, 0.5175, 0.0, 0.3721, 0.3962, 1.0667, 0.0714, 1.0976, 0.5238, 0.069, 1.0, 1.2289, 0.3218, 0.7273, 0.278], [0.1509, 0.018, 0.0865, 0.1139, 0.3196, 0.1633, 0.0664, 0.2719, 0.0375, 0.6279, 0.5472, 1.219, 0.2143, 0.9756, 1.381, 0.06, 0.5517, 0.6444, 1.1205, 0.523, 0.5, 0.318], [0.0943, 0.012, 0.1106, 0.1772, 0.4452, 0.1429, 0.0814, 0.6316, 0.0375, 0.5116, 0.3774, 0.7238, 0.0357, 1.0, 0.4762, 0.0, 0.1034, 1.0667, 1.2289, 0.5575, 0.9318, 0.232], [0.0377, 0.0539, 0.0865, 0.1392, 0.3943, 0.1701, 0.0471, 0.5877, 0.0375, 0.5698, 0.7075, 1.1619, 0.2143, 0.5122, 0.6667, 0.0, 0.4138, 0.7556, 1.0723, 0.3218, 0.7727, 0.328], [0.2453, 0.006, 0.0577, 0.0253, 0.4483, 0.1565, 0.0471, 0.4912, 0.0, 0.5465, 0.6509, 0.6476, 0.0357, 0.8049, 1.4286, 0.14, 0.0, 0.9111, 0.9157, 0.4828, 1.0455, 0.316], [0.1132, 0.006, 0.0962, 0.1139, 0.372, 0.1701, 0.0514, 0.3947, 0.075, 0.4186, 0.6038, 1.3048, 0.3571, 1.878, 0.2619, 0.26, 0.2414, 1.3333, 1.0843, 0.2931, 0.7955, 0.286], [0.1698, 0.012, 0.0529, 0.3418, 0.5024, 0.2041, 0.1071, 0.3158, 0.0375, 0.5116, 0.4811, 1.3238, 0.7317, 0.7619, 0.04, 0.5111, 0.3614, 0.6724, 0.6818, 0.316], [0.1377, 0.1106, 0.1139, 0.4086, 0.1837, 0.0557, 0.6228, 0.075, 0.6512, 0.5, 1.4571, 0.0357, 0.9756, 0.9762, 0.0, 0.3103, 0.7778, 0.9518, 0.4425, 0.5682, 0.304], [0.1132, 0.024, 0.0577, 0.3291, 0.5151, 0.1905, 0.0814, 0.0614, 0.075, 0.6512, 0.8774, 0.3905, 2.0244, 1.4286, 0.7241, 1.9778, 1.3133, 0.3333, 0.9773, 0.322]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

