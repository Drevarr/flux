created: 20230523000132000
creator: Drevarr
modified: 20230705163531320
modifier: drevarr
tags: ChartData
title: 202305230001_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Bella Sassy", "The Incredible Mr E", "Tootsy Pop Star", "Hyde En Sikh", "Venomina The Fierce", "Grasszanine", "Be\u00eb", "Nocta Asthariel", "Primal Clone", "Smol Gluvs", "Black Raspberry Pie"];
const professions = ["Spellbreaker", "Firebrand", "Scourge", "Reaper", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.3714, 0.0, 0.0, 0.0, 6.1946], [0.0, 0.0, 0.9963, 6.085, 0.0, 1.0, 0.0, 1.0042, 0.0, 0.9983], [2.9963, 3.1924, 8.6613, 3.9914, 8.2455], [0.0, 0.0, 2.9952, 0.9963, 1.0, 2.0, 0.0, 0.0, 6.0167, 0.0, 0.0, 6.2707], [5.0286, 0.9952, 0.9963, 4.0626, 1.0484, 0.0, 0.0, 10.3584, 0.0, 0.0, 6.2621], [10.3238, 1.1163, 7.2404, 0.0, 6.1029, 0.0, 5.0656, 0.0, 11.2379], [7.1143, 0.0, 1.9952, 0.0, 13.1544, 11.5968, 10.84, 0.0, 6.4477, 0.0, 13.9207], [13.3333, 10.8317, 6.0815, 5.0045, 8.5484, 12.68, 2.9914, 8.2538, 0.0, 0.0, 13.8586], [5.0095, 0.0, 5.1346, 0.0, 12.7047, 7.2097, 3.6, 0.0, 13.0879, 3.1515, 0.0, 11.2983], [6.1619, 0.0, 4.9904, 0.9963, 14.7562, 11.5806, 9.84, 0.9914, 13.053, 0.9697, 0.0, 10.4534], [8.8857, 3.0, 7.2452, 4.9926, 12.7271, 7.871, 9.26, 1.9914, 11.0014, 0.0, 12.0017], [13.6667, 0.0, 9.4471, 7.2296, 12.6913, 2.0, 3.04, 4.3017, 15.4254, 0.0, 0.0, 13.4879]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

