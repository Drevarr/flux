created: 20230303232222000
creator: Drevarr
modified: 20230705163521051
modifier: drevarr
tags: ChartData
title: 202303032322_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Stoic Rapidfire", "Jupi Jupi Jupi", "Miri Mackenzie", "Air One Com", "Marius Mule", "Viral Marketing", "Drevarr Moonwillow", "Seren\u00e1 Joy", "Nelliel T", "Hud Da Bu Dah", "Zadie Miststep", "Theevildead", "Tribal S", "Panther B Me", "Lil Cutt Throat", "Kahless The Drunk", "Delynai", "Bloodline T", "Blackchars", "Blanco Padre Guard", "Fruji", "Erica Nakiri", "Kosa\u00edr", "Insanityburn", "Morton Saltbringer", "Heks Appeal", "Koralia Danai", "Lucky Leipreach\u00e1n", "Xanvias Tseli", "Seren Nightroad", "Sumatra Satyricon", "Cerys Fireblade", "Rozaalyna", "Legacy Of Mathus", "Oo Dads Mad", "Ryvalia Fazebringer", "Sp\u00edcy Cheese", "Smol Gluvs", "Aronorf Xideliesi", "Eibh\u00ebar", "Newtype Khan", "Arcanophage Farra", "Venomina The Siren", "Ravioli Fetabringer", "Grasszanine", "Lord Erin The Wise", "Demon Sekhmet", "Ace Hammers", "High Sorcer Baradun"];
const professions = ["Scrapper", "Druid", "Firebrand", "Virtuoso", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Chronomancer", "Scourge", "Chronomancer", "Tempest", "Reaper", "Druid", "Scourge", "Catalyst", "Firebrand", "Scrapper", "Dragonhunter", "Renegade", "Firebrand", "Scrapper", "Deadeye", "Scrapper", "Spellbreaker", "Chronomancer", "Scourge", "Firebrand", "Scrapper", "Berserker", "Scourge", "Soulbeast", "Berserker", "Scourge", "Berserker", "Spellbreaker", "Chronomancer", "Berserker", "Scourge", "Firebrand", "Chronomancer", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Spellbreaker", "Weaver", "Berserker", "Vindicator", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 0, 0, 0, 0, 0, 1, 10, 1, 0, 8, 0, 0, 0, 21], [1, 3, 0, 0, 0, 1, 0, 2, 4, 3, 0, 0, 0, 21, 1, 8, 2], [0, 2, 0, 0, 0, 0, 7, 0, 0, 29, 0, 0, 11], [6, 2, 0, 0, 4, 6, 0, 0, 20, 3, 10, 7], [0, 3, 0, 41, 0, 7, 1, 0, 0, 9, 0, 0, 0], [47, 0, 9, 6], [0, 0, 0, 1, 15, 0, 0, 7, 0, 0, 0, 9, 0, 16, 0, 0, 0, 11, 2, 2, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 1, 13, 8, 0, 0, 31, 0, 3, 0, 0, 0, 6, 0, 0, 1], [0, 2, 2, 0, 0, 0, 0, 0, 0, 5, 0, 0, 10, 1, 0, 0, 19, 0, 18, 0, 0, 0, 13, 0, 1, 0], [0, 0, 0, 0, 0, 0, 5, 0, 0, 18, 0, 7, 0, 0, 0, 12, 0, 0, 1, 2, 16, 1, 8, 1], [0, 20, 0, 10, 1, 0, 39, 0, 4, 0], [0, 1, 0, 0, 0, 0, 1, 0, 8, 0, 0, 41, 0, 0, 0, 20, 0, 0, 0, 0, 2, 0, 2, 0], [0, 0, 0, 2, 12, 3, 5, 0, 0, 1, 0, 34, 5, 5, 8], [0, 5, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 22, 1, 0, 0, 9, 0, 8, 0, 0, 0, 19, 0, 0, 0], [4, 0, 0, 0, 0, 0, 2, 7, 2, 0, 0, 14, 0, 0, 0, 13, 0, 15, 2, 0, 0, 13, 0, 4, 1], [1, 0, 58, 0, 0, 0, 0, 0, 21], [0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 2, 7, 0, 0, 0, 16, 11, 3, 0, 0, 12, 0, 18, 1], [33, 1, 0, 40, 1, 7, 2], [21, 0, 0, 0, 38, 1, 8, 19], [7, 1, 0, 0, 73, 0, 4, 4], [0, 1, 0, 0, 0, 0, 1, 0, 0, 20, 0, 0, 11, 4, 0, 0, 43, 0, 18, 0, 0, 0, 10, 0, 0, 1], [0, 6, 0, 4, 0, 0, 22, 0, 16, 0, 4, 11, 4, 0, 0, 16, 1, 7, 0, 0, 0, 15, 2, 0, 1], [14, 0, 0, 9, 0, 47, 1, 1, 0, 22, 2, 12, 11], [0, 3, 0, 25, 2, 4, 4, 0, 27, 1, 0, 0, 14, 23, 5, 0, 0, 9, 0, 4, 0], [3, 61, 4, 0, 0, 36, 0, 19], [0, 3, 0, 0, 0, 0, 0, 0, 0, 11, 17, 3, 0, 0, 49, 0, 8, 1, 1, 0, 7, 0, 13, 11], [0, 1, 0, 0, 0, 1, 0, 2, 1, 17, 0, 0, 49, 0, 0, 0, 9, 0, 18, 0, 0, 0, 21, 2, 5, 1], [1, 7, 0, 0, 0, 0, 0, 6, 0, 11, 0, 1, 35, 2, 0, 0, 57, 0, 0, 0, 8, 0], [1, 6, 0, 0, 0, 3, 0, 17, 0, 3, 27, 0, 1, 0, 23, 0, 14, 3, 0, 0, 16, 3, 8, 4], [0, 0, 0, 0, 0, 1, 0, 6, 0, 19, 0, 1, 40, 6, 0, 0, 18, 0, 9, 6, 0, 0, 12, 2, 11, 1], [0, 3, 0, 0, 0, 0, 0, 1, 0, 9, 2, 0, 21, 1, 0, 1, 29, 0, 25, 1, 0, 0, 29, 1, 5, 4], [0, 10, 0, 1, 1, 20, 0, 0, 30, 2, 0, 0, 18, 0, 27, 8, 0, 0, 17], [0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 3, 1, 22, 0, 0, 0, 25, 1, 15, 0, 0, 0, 54, 0, 6, 0], [4, 9, 0, 1, 2, 1, 5, 1, 13, 0, 4, 47, 3, 0, 0, 18, 0, 19, 1, 0, 13], [0, 3, 0, 0, 0, 0, 0, 6, 3, 15, 0, 0, 22, 8, 0, 0, 14, 0, 11, 1, 0, 0, 29, 7, 12, 12], [6, 26, 4, 0, 1, 43, 0, 34, 3, 0, 43, 0, 1], [0, 12, 0, 0, 1, 0, 0, 5, 1, 15, 3, 4, 15, 13, 0, 0, 46, 0, 14, 1, 1, 0, 23, 0, 10, 2], [0, 2, 0, 0, 0, 1, 24, 1, 4, 52, 1, 0, 0, 27, 30, 2, 0, 0, 20, 1, 2], [0, 11, 0, 0, 1, 0, 0, 12, 0, 27, 2, 2, 34, 5, 0, 0, 27, 0, 12, 1, 2, 0, 31, 3, 5, 0], [2, 3, 4, 0, 0, 1, 0, 23, 2, 17, 6, 3, 33, 5, 5, 0, 31, 0, 12, 1, 3, 0, 14, 0, 4, 6], [1, 8, 0, 1, 0, 0, 0, 0, 2, 19, 1, 0, 25, 16, 0, 0, 36, 0, 30, 5, 6, 0, 17, 4, 3, 7], [0, 5, 0, 0, 0, 0, 0, 1, 1, 22, 8, 0, 49, 5, 0, 0, 21, 0, 30, 3, 0, 0, 35, 0, 2, 4], [0, 14, 0, 3, 0, 0, 8, 6, 10, 2, 0, 46, 5, 0, 0, 12, 0, 41, 7, 0, 0, 26, 1, 7, 31], [0, 18, 1, 0, 0, 1, 1, 17, 4, 18, 1, 1, 45, 10, 0, 0, 23, 0, 46, 2, 0, 21, 1, 8, 2], [1, 11, 0, 0, 2, 0, 0, 14, 1, 35, 0, 1, 54, 8, 0, 0, 37, 0, 24, 4, 1, 0, 24, 0, 6, 5], [0, 19, 0, 0, 0, 2, 1, 3, 0, 35, 7, 1, 75, 12, 0, 0, 44, 44, 3, 0, 0, 32, 0, 2, 0], [3, 0, 0, 0, 0, 0, 3, 0, 40, 20, 2, 70, 21, 1, 0, 44, 0, 32, 1, 0, 0, 43, 0], [0, 24, 0, 0, 0, 0, 2, 6, 4, 38, 0, 6, 27, 20, 0, 2, 32, 0, 56, 9, 2, 0, 49, 0, 11, 1], [4, 18, 2, 0, 0, 1, 0, 15, 7, 17, 7, 4, 74, 8, 0, 0, 29, 47, 1, 0, 0, 46, 1, 13, 5], [0, 4, 0, 0, 0, 0, 8, 5, 1, 40, 0, 2, 82, 15, 1, 0, 38, 17, 0, 0, 0, 98]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

