created: 20230610164704000
creator: Drevarr
modified: 20230705163535022
modifier: drevarr
tags: ChartData
title: 202306101647_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Arriasa", "Seikers Sorrow", "Zayde Sunsabre", "Newtype Khan", "Xanvias Einzbern", "Traidoruns Maximus", "Rosie Sunray", "Melli Dragonswrath", "Arcanophage Farra", "Mistwalker Cael", "Air One Com", "Duke Silvver", "Aronorf Xideliesi", "Blanco Padre Guard", "Ryvalia Fazebringer", "Solus Sanctus", "Xyntharos", "Tika Fiery", "Gestern Yesteryear", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Druid", "Chronomancer", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Vindicator", "Berserker", "Spellbreaker", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 3.8623, 1.968, 5.6909, 7.8763, 0.0, 0.0, 0.0, 0.0, 0.0], [0.832, 1.584, 0.3226, 0.6734, 0.8804, 0.9151, 0.7921, 0.0, 0.0, 1.0296, 0.0, 0.6707, 2.1658, 0.4904, 0.0, 4.7075, 1.5411, 0.9094, 1.3994, 1.6332], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4899, 0.0, 10.1506, 0.0, 1.5053, 5.073, 3.8602], [0.0, 1.6589, 1.7861, 0.0, 1.747, 0.0, 0.0, 2.1164, 0.0, 0.0, 0.0, 0.0, 1.8048, 1.9049, 0.0, 5.7373, 0.0, 0.0, 3.3237, 2.0786], [0.0, 0.0, 0.0, 0.0, 1.9325, 0.0, 2.5789, 0.0, 0.0, 0.0, 0.0238, 0.0, 0.0, 0.0, 0.5216, 6.0461, 0.0, 0.0, 7.0613, 0.0, 1.7875, 0.933, 2.6725], [0.0, 1.2197, 1.056, 0.8755, 1.0541, 0.0, 2.3293, 0.0, 0.0, 0.0, 1.1183, 1.1211, 0.0, 0.0, 4.6022, 1.2259, 0.0, 6.0315, 0.0, 1.3485, 1.0496, 1.0888], [4.1796, 2.9383, 2.592, 4.9075, 6.7637, 0.2001, 2.9117, 0.227], [0.0, 0.6098, 0.0, 0.0, 1.8446, 0.0, 0.9151, 0.0, 1.3956, 0.0, 0.0, 0.0, 0.8923, 2.256, 0.0, 0.0, 15.5937, 0.0, 0.0, 0.4665, 5.9388], [0.0, 0.5359, 0.096, 1.0138, 0.0, 0.0, 1.0815, 1.665, 1.0562, 0.0, 0.8085, 0.0958, 1.3499, 1.3499, 0.0, 5.7754, 1.2636, 0.0, 6.7671, 1.3328, 1.913, 2.449, 2.326], [0.0, 2.4209, 0.0, 1.728, 1.9032, 0.0, 0.0, 3.1029, 0.0, 1.8548, 2.7157, 2.3338, 1.4872, 1.895, 2.5272, 2.9836, 8.8266, 1.7493, 2.1952, 2.0992, 1.4847], [2.3026, 2.6796, 4.704, 1.3594, 0.0293, 0.0, 3.4108, 0.0, 0.0, 0.0, 0.7029, 1.2584, 0.0, 0.0, 7.9411, 1.2636, 0.0, 8.3853, 0.0, 4.6726, 5.6561, 4.5531], [0.0, 2.1252, 1.488, 1.129, 1.3469, 0.0, 2.7453, 0.0, 0.1132, 0.0, 2.1087, 0.0, 0.0, 0.0, 9.9264, 1.8483, 0.9522, 15.7408, 3.9984, 2.1952, 5.6561, 4.3551], [2.3413, 0.7577, 1.392, 0.9446, 2.0789, 0.0, 1.5806, 0.7568, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.4144, 4.6584, 3.3644, 14.1226, 6.8306, 1.5053, 8.8048, 4.1077], [0.0, 3.5666, 1.488, 2.327, 3.0744, 0.5203, 3.4108, 0.0, 2.15, 0.0, 0.0, 2.3323, 0.0, 0.0, 14.4384, 3.7909, 0.0, 16.6234, 0.2083, 4.3904, 4.6065, 7.3245], [0.0, 4.7494, 4.752, 1.728, 4.6848, 0.0, 4.6586, 0.0, 1.9237, 0.0, 0.7847, 3.3867, 0.0, 0.0, 0.0, 11.0995, 0.0, 0.0, 24.5674, 4.0817, 3.92, 7.2887, 9.6506], [0.0, 3.6221, 0.096, 2.4883, 2.3131, 0.0, 4.1595, 0.0, 0.0, 0.0, 0.0, 2.6199, 0.0, 1.899, 19.2211, 3.0553, 2.2218, 30.746, 6.2891, 4.4531, 8.3966, 8.2648], [0.1741, 1.4414, 2.784, 4.9997, 9.3696, 0.0, 5.0746, 0.227, 6.9782, 0.0, 0.0, 3.0672, 0.2288, 0.0, 0.0, 20.4845, 3.5645, 0.1164, 22.2136, 0.6664, 4.359, 5.5394, 9.3041], [0.8707, 0.5729, 5.568, 3.8938, 4.5384, 2.9615, 8.7349, 1.7406, 2.5272, 0.6029, 2.3323, 3.2261, 1.2813, 1.7885, 12.4531, 2.018, 0.4867, 28.9807, 5.2062, 7.9654, 7.4637, 6.7306], [0.0, 5.1929, 3.072, 4.2624, 6.5294, 0.0, 7.903, 2.5542, 0.0, 0.0, 1.1502, 0.9152, 1.5101, 1.7388, 16.9651, 4.2246, 2.243, 34.2766, 7.7885, 6.2406, 9.3879, 11.3827], [4.5279, 4.8233, 3.6, 9.239, 11.0093, 0.2801, 10.3987, 3.8029, 5.6957, 0.2741, 0.0, 2.1087, 5.331, 0.8008, 1.9375, 21.9283, 5.2619, 0.0846, 28.3922, 2.1241, 4.0768, 8.3383, 11.3827], [3.4443, 5.5625, 2.304, 5.737, 7.7006, 0.0, 15.1406, 0.0, 3.5834, 0.0, 0.0, 0.0, 2.4024, 3.8896, 23.8234, 5.1865, 0.4973, 37.513, 6.0809, 4.5472, 21.0499, 12.7684], [5.0117, 5.9506, 11.232, 6.313, 4.8898, 5.963, 14.1423, 5.5057, 9.5432, 3.8367, 5.4315, 6.8869, 2.9744, 1.9872, 24.0941, 6.865, 2.4546, 32.8055, 4.1234, 5.8016, 10.3792, 13.3623]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

