created: 20230520000848000
creator: Drevarr
modified: 20230705163530678
modifier: drevarr
tags: ChartData
title: 202305200008_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Artakama Nahid", "Cyclotechnist Farra", "Xanvias Einzbern", "Smol Gluvs", "Drevarr Moonwillow", "Grasszanine", "Newtype Khan", "Tika Fiery", "Soxxdodendron", "Bella Sassy"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Berserker", "Scourge", "Scrapper", "Spellbreaker", "Spellbreaker", "Firebrand", "Willbender", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[242, 400, 241, 320, 481, 309, 308, 1188, 357, 187, 533, 250, 283, 567, 625, 534, 271, 300, 853, 401, 291, 718, 388, 435, 231, 443, 400], [210, 438, 280, 355, 418, 335, 552, 974, 363, 206, 311, 341, 229, 468, 430, 722, 291, 445, 621, 390, 2252, 375, 349, 267, 376, 709], [247, 441, 216, 390, 3812, 446, 505, 3614, 475, 2919, 549, 271, 384, 723, 2564, 1374, 439, 219, 299, 436, 272, 1435, 366, 330, 1719, 3011], [243, 349, 412, 255, 786, 387, 300, 858, 424, 238, 328, 228, 224, 471, 478, 399, 253, 257, 378, 263, 583, 377, 396, 261, 479, 478], [216, 475, 299, 321, 847, 408, 637, 1098, 759, 336, 440, 598, 193, 613, 710, 376, 269, 328, 774, 307, 290, 668, 318, 199, 203, 1728, 872], [235, 354, 321, 249, 652, 392, 180, 519, 500, 235, 552, 239, 263, 436, 368, 449, 219, 395, 1324, 271, 274, 542, 409, 198, 298, 246, 359], [231, 407, 258, 250, 1490, 372, 343, 303, 421, 261, 520, 306, 187, 707, 1427, 874, 338, 367, 490, 191, 231, 215, 300, 283, 347, 347, 725], [216, 277, 350, 268, 1075, 291, 477, 472, 519, 229, 458, 452, 260, 537, 1015, 672, 271, 194, 567, 220, 258, 841, 544, 240, 346, 2234, 984], [174, 370, 202, 243, 598, 311, 282, 424, 532, 232, 372, 220, 244, 413, 356, 986, 238, 320, 297, 246, 323, 559, 402, 258, 257, 655, 1437], [231, 286, 245, 230, 871, 230, 448, 1233, 821, 168, 269, 192, 213, 424, 2599, 375, 288, 232, 711, 289, 208, 275, 303, 276, 279, 1374, 786], [226, 360, 150, 201, 233, 260, 173, 399, 209, 166, 255, 169, 203, 235, 336, 350, 177, 420, 177, 204, 358, 244, 330, 202, 327, 394]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

