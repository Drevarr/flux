created: 20230130220929000
creator: Drevarr
modified: 20230705163518377
modifier: drevarr
tags: ChartData
title: 202301302209_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Dark Sidiuz", "Jeckyll Mbs", "Mac Aaroni", "Raziel Umbra", "Whose Guardian", "Tyrisai", "Joh Oshi", "Bambiae", "Vinthry Stormgrave", "Black Raspberry Pie", "Doctor House", "Ryvalia Fazebringer", "Cat Wigglebooty", "\u00c2 R K", "Zaylen Harker", "Arkitrix", "Zaidy Sagemist", "Arriasa", "Sygaldry Verdandi", "Gavann", "\u00c9\u00efbhear", "Lord Erin The Wise", "Drevarr Moonwillow", "Bella Lunabringer", "Ravioli Fetabringer", "Koralia Danai"];
const professions = ["Spellbreaker", "Reaper", "Berserker", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Druid", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[324.7014, 361.62], [9.7055, 616.728, 32.9746, 13.6598, 10.2648, 41.2989, 13.724, 17.687, 10.2869, 0.0, 5.1818, 27.5558], [305.2582, 407.3738, 0.0, 6.8746, 30.2938, 27.4866, 42.8054, 71.6233, 48.7637, 48.2356, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [445.7354, 386.9775, 86.683, 0.0, 60.2269, 5.2871, 0.0, 33.3734, 10.0464, 0.0, 0.0, 28.728, 47.1485, 0.0, 54.9138, 55.6922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [365.0461, 409.5788, 73.9028, 0.0, 17.6714, 39.1755, 59.8934, 108.6541, 60.0466, 59.6859, 9.6778, 39.228, 47.9563, 17.365, 19.7538, 21.6717, 26.0192, 7.896, 2.5869, 7.412, 2.6978, 5.4101, 15.6627], [64.4644, 143.2829, 254.3389, 126.0437, 109.2739, 36.5481, 101.892, 135.6437, 115.7069, 51.7748, 46.083, 29.7792, 64.1155, 44.4216, 37.2862, 16.927, 36.7661, 82.646], [497.7459, 999.4163, 97.6109, 48.7315], [161.3786, 636.6937, 113.0768, 0.0, 34.8919, 39.1437, 70.0608, 112.7686, 98.8411, 29.302, 7.8476, 51.492, 78.6542, 79.1914, 20.0424, 0.0, 13.7052, 45.402, 47.5339, 38.5121, 10.1003, 19.9555, 21.7279], [454.9709, 495.5737, 79.7372, 10.0118, 29.843, 34.0158, 18.0278, 161.5334, 81.4531, 83.0374, 20.9639, 46.956, 74.2478, 42.0955, 13.6924, 49.5587, 35.908, 36.8743, 23.0798, 9.9769, 10.051, 16.6608, 29.0594], [405.8768, 581.0175, 85.1086, 35.2526, 29.6842, 67.0704, 134.8651, 84.2352, 43.4571, 19.5496, 46.284, 47.736, 54.1037, 16.9756, 59.0452, 19.7588, 30.597, 19.7452, 34.4572, 19.8552, 23.5685], [447.1936, 625.6688, 64.7344, 20.8692, 41.2933, 30.0027, 33.7488, 162.7525, 91.5768, 61.1285, 8.9845, 60.816, 72.6322, 47.8094, 20.8001, 35.9423, 31.2832, 31.9393, 33.2454, 11.0708, 28.7875, 17.185, 21.7279], [857.4451, 1300.95], [552.673, 557.865, 124.6531, 0.0, 67.62, 11.2112, 73.991, 126.1789, 91.8086, 112.4295, 27.7023, 62.664, 68.2992, 50.6664, 21.5037, 61.0079, 20.9808, 69.4058, 22.3725, 27.9128, 29.8239, 12.4675, 53.4533], [497.2598, 776.7113, 120.0226, 0.0, 25.335, 29.0472, 126.3658, 207.7076, 46.7544, 49.1372, 20.6589, 68.46, 111.1882, 53.7912, 14.901, 52.4619, 37.506, 21.8324, 0.0, 0.0, 0.0, 17.2411, 16.1293], [1447.5462, 337.9162, 323.5793, 23.3244, 127.351, 125.1386, 178.7405, 351.8685, 267.9298, 110.1755, 0.0], [990.631, 140.0175, 346.454, 0.0, 73.1648, 77.6822, 169.5984, 375.7937, 149.5368, 92.955, 87.1554, 140.7, 181.3968, 59.5944, 0.0, 121.8522, 51.324, 77.894, 20.1898, 50.4316, 39.6609, 57.1334, 66.9166], [1034.3782, 864.36, 170.8655, 0.0, 70.5051, 139.3756, 118.1635, 407.948, 194.9002, 54.5468, 30.0871, 122.388, 93.2688, 100.8864, 67.7547, 45.214, 48.5999, 21.3215, 16.6534, 11.6466, 8.1994, 37.2574], [992.0893, 1128.96, 163.2714, 99.5366, 30.0027, 105.0058, 207.098, 106.1827, 56.1697, 52.4929, 101.64, 180.2952, 75.0845, 22.6582, 47.3097, 38.634, 57.1276, 28.3546, 21.6701, 12.4855, 51.1056, 99.8417], [992.0893, 1463.5687, 167.161, 35.0275, 70.46, 55.0049, 99.7085, 231.1756, 160.4333, 86.9142, 17.6085, 85.344, 140.197, 87.4051, 0.0, 71.3531, 9.682, 50.2975, 30.0321, 0.0, 0.0, 0.0, 50.0541], [536.3971, 203.0854, 123.8328, 312.625, 673.8686, 393.8189, 139.207, 79.8069, 280.896, 287.1504, 123.9206, 21.3233, 136.2864, 110.9388, 117.6504, 11.1963, 67.7263, 48.2807, 104.7946, 135.966], [979.9373, 1314.18, 176.6999, 92.0083, 91.1865, 145.5043, 115.0545, 74.4979, 83.0374, 20.6866, 71.232, 158.9976, 104.1005, 20.728, 157.0176, 45.7968, 78.9205, 64.0657, 21.5758, 51.7352, 21.4718, 87.1116], [1162.7034, 1445.9288, 262.5494, 61.5437, 65.7266, 32.7736, 114.575, 265.7682, 187.1722, 119.1014, 49.914, 113.4, 154.7381, 48.2112, 29.6578, 66.0782, 51.6248, 64.1945, 0.0, 35.966, 35.9597, 16.4362, 63.1842], [1085.9027, 1562.2425, 249.8618, 75.5383, 78.9351, 73.255, 129.8688, 210.9078, 147.0638, 108.8231, 26.0385, 67.116, 115.8883, 106.0646, 70.6266, 160.5341, 43.804, 83.0659, 21.5236, 26.7246, 8.2579, 10.0901], [1269.1549, 1619.0213, 322.6532, 18.3867, 142.0471, 65.0695, 174.0413, 286.036, 208.656, 121.4455, 35.2171, 132.972, 243.8942, 81.2448, 0.0, 121.7295, 57.7536, 67.3134, 39.7531, 3.508, 14.1635, 15.107, 57.5856], [1488.863, 2116.2487, 216.337, 0.0, 150.8377, 100.1045, 249.8266, 392.4042, 255.4877, 166.6157, 35.5776, 173.46, 144.8237, 86.7802, 63.5008, 161.2702, 17.9164, 89.9354, 52.6673, 19.2749, 7.6657, 51.2366, 96.7758], [1584.6208, 1634.4562, 293.8515, 7.6111, 123.5643, 86.0587, 199.8442, 428.6731, 258.5789, 152.731, 109.0066, 222.348, 216.1339, 171.7301, 35.5027, 118.2948, 76.1588, 135.6533, 93.835, 56.5234, 48.4288, 90.0994, 114.1048], [1635.1731, 2190.1163, 273.9404, 21.8786, 115.4048, 146.3826, 149.6909, 389.8136, 164.3746, 203.6714, 95.8071, 230.916, 171.6293, 218.9592, 181.9605, 84.4308, 108.2542, 71.2807, 52.7326, 42.9016, 85.775, 114.5047]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

