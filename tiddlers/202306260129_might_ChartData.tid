created: 20230626012920000
creator: Drevarr
modified: 20230705163538595
modifier: drevarr
tags: ChartData
title: 202306260129_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Ygyn", "Alarics Clone", "Kosair", "Traidoruns Maximus", "Astraea Lumena", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.6794, 0.3215, 0.6902, 0.0, 7.3814, 4.1732, 4.074, 4.5446, 0.0, 0.8165, 0.0, 0.0], [0.0, 0.0, 0.018, 0.8506, 0.0, 0.0, 0.0, 9.6012, 0.8874, 1.3728, 15.0579], [5.0368, 2.6311, 1.5622, 2.8594, 5.88, 2.3918, 3.3721, 4.3592, 0.0, 5.6139, 0.0, 8.3675, 0.0, 0.7834, 0.0], [0.98, 0.2693, 5.1034, 13.0368, 0.335, 4.5868, 1.728, 1.7389, 6.5918, 6.4414, 6.8484, 0.0], [1.7075, 0.0, 0.0, 0.5127, 1.1466, 1.5048, 3.5142, 22.7737, 0.0, 3.5738, 0.0, 0.0, 6.0556, 0.2774, 0.1183, 9.7155, 2.142, 4.5261, 4.6648, 10.3255, 0.0, 0.0], [4.5349, 3.9001, 3.1244, 6.8034, 1.0878, 11.9434, 4.9677, 24.2607, 5.0557, 10.0178, 5.5332, 4.6568, 1.4515, 1.8523, 3.2926, 18.1508, 12.5766], [3.5312, 3.8916, 2.9581, 5.4723, 7.4186, 7.4131, 3.4949, 13.2201, 2.7265, 4.4461, 1.6776, 4.8131, 2.5515, 6.5688, 1.1669, 18.0365, 7.9713, 7.2218, 2.3482, 15.8253, 0.9022, 5.241], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 42.7566, 8.1094, 21.1472, 6.5412, 0.0, 3.5381, 0.0, 0.0, 52.2351, 47.5218, 41.6083, 11.7199, 18.9176, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

