created: 20230429000309000
creator: Drevarr
modified: 20230705163527322
modifier: drevarr
tags: ChartData
title: 202304290003_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Brewery Tour", "Blancooo Padreee", "Arriasa", "Rudjulin", "Mistwalker Caelon", "Viral Marketing", "Kos\u00e4ir", "Aronorf Xideliesi", "Kos\u00e4ir", "Xyntharos", "Air One Com", "Sister Elon\u00edth", "Khailerian", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Vindicator", "Spellbreaker", "Druid", "Firebrand", "Vindicator", "Firebrand", "Herald", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.7376], [2.2624, 4.9408, 1.6792, 0.0, 9.7641, 2.0139, 0.0, 2.5617, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0871], [2.7003, 2.8564, 0.9159, 7.1946, 1.7262, 1.8665, 1.437, 0.8568, 2.7208, 0.8094, 1.1092, 1.9483, 9.0199], [36.724], [6.0573, 4.1688, 3.6025, 0.0, 8.9933, 4.9484, 2.121, 2.7491, 0.0408, 0.0, 0.0, 0.0, 0.0, 23.1941], [6.7166, 37.5147, 6.2143, 1.315, 9.9968, 0.0, 0.0, 0.2428, 0.0, 0.2165], [53.1886, 4.9484, 2.1634, 5.7482, 0.0, 0.0, 0.0, 0.0, 0.2706], [7.5169, 0.0, 1.9539, 0.0, 21.8408, 2.0139, 0.0, 3.6238, 2.8968, 0.1943, 5.0992, 1.5713, 2.0024, 17.7177], [12.4066, 11.58, 5.4343, 46.7103], [12.1147, 11.194, 3.2056, 0.0, 18.5004, 4.8334, 1.5271, 6.9978, 0.0, 1.8138, 2.9948, 1.1092, 1.5154, 21.9055], [8.0278, 8.1832, 5.2512, 29.2923, 4.6607, 0.1697, 7.1852, 0.0, 0.0, 0.0, 0.0, 0.0, 45.0996], [15.4718, 19.0684, 7.9989, 0.0, 53.9595, 10.4147, 2.927, 9.3095, 0.0, 3.4333, 3.3455], [5.9114, 1.0808, 9.1895, 3.2928, 60.8971, 2.5893, 2.7573, 9.372, 0.4896, 4.2755, 3.1297, 0.1541, 0.0, 29.3147], [14.1581, 16.3664, 7.6325, 60.3832, 11.6231, 5.1752, 11.8712, 0.0, 5.7654, 0.4856, 0.2773, 0.2165, 70.5487], [15.0339, 12.5836, 7.2967, 0.0, 67.8348, 11.2778, 2.5876, 11.6838, 0.0, 0.583, 2.7789, 0.0, 4.2755, 84.4007], [13.3553, 18.4508, 9.5864, 0.0, 64.7514, 10.9901, 6.8296, 16.6822, 1.7136, 6.6723, 8.8764, 6.3469, 9.7957, 76.6693]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

