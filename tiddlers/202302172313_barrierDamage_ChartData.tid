created: 20230217231312000
creator: Drevarr
modified: 20230705163519415
modifier: drevarr
tags: ChartData
title: 202302172313_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Sproxz", "Abigail Ryn", "Tegan Parker", "Primal Clone", "Bambiae", "Arka\u00f1", "Daring Deathblade", "Sister Elonith", "Demon Sekhmet", "Blanco Padre Guard", "Ryvalia Fazebringer", "Ark Darkness", "Bella Sassy", "Cat Wigglebooty", "Ravioli Fetabringer", "Newtype Khan", "Mike The Archmagus", "Eva Akos", "King Squid", "Seren Nightroad", "Nelliel T", "Arcanophage Farra", "Smol Gluvs", "Drevarr Moonwillow", "Mako Engi", "Panther B Me", "Rina Of Theros", "Minka Bringer", "Be\u00eb", "\u00c9\u00efbhear", "Fruji"];
const professions = ["Tempest", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Scourge", "Berserker", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Weaver", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scrapper", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 5380, 7902, 4553, 581, 5476, 0, 5655], [759, 0, 4840, 7457, 1784, 2553, 0, 2457, 1248, 3713, 1288, 0, 1288, 1288, 0, 0, 1295], [0, 0, 0, 2613, 3746, 5921, 0, 0, 3705, 0, 0, 0, 0, 6147, 2948, 0, 3421, 0, 0, 1263, 0, 304, 0, 0, 0, 0], [1188, 0, 844, 3868, 3548, 2465, 0, 87, 0, 1396, 0, 0, 815, 2964, 446, 0, 3800, 0, 0, 1188, 0, 991, 0, 0, 4830, 2420], [2066, 90, 0, 7166, 1248, 1248, 154, 2059, 0, 852, 1288, 0, 5947, 0, 4426, 0, 1552, 0, 0, 0, 0, 0, 2420, 0, 1188, 1354], [3401, 0, 0, 3713, 7300, 2465, 4930, 0, 1248, 1552, 1409, 0, 0, 0, 5, 1077, 2286, 0, 3720, 0, 0, 0, 0, 0], [269, 0, 6283, 0, 1940, 6105, 349, 10054, 8252], [0, 101, 0, 1600, 0, 2465, 0, 0, 269, 269, 4307, 275, 6743, 2604, 2159, 3863, 0, 275, 0, 0, 4960, 0, 0, 0, 0, 2306, 3585], [101, 0, 0, 1248, 0, 1280, 0, 0, 0, 0, 4739, 0, 1288, 6553, 5787, 2801, 3795, 0, 0, 3694, 0, 0, 0, 0, 613, 5849], [1880, 0, 707, 2664, 8245, 3067, 0, 0, 7, 65, 346, 2841, 2770, 275, 2267, 1563, 881, 0, 0, 0, 0, 304, 14, 0, 3044, 6880], [4611, 0, 782, 8459, 1209, 4698, 0, 0, 0, 0, 2189, 1260, 0, 1288, 723, 829, 2424, 1316, 0, 1248, 2420, 0, 213, 261, 0, 0, 5257], [13881, 0, 3715, 7606, 2672, 1530, 232, 0, 0, 0, 0, 0, 3778, 2131, 3882, 1288], [3166, 0, 0, 1497, 2595, 1248, 713, 0, 1248, 1248, 1248, 1288, 0, 0, 1288, 7017, 4653, 0, 1950, 0, 0, 5730, 0, 766, 3379, 0, 2643, 0], [3463, 454, 1252, 5305, 10815, 568, 94, 1344, 0, 70, 1220, 0, 516, 0, 3146, 4650, 0, 608, 0, 1610, 710, 0, 395, 3755, 0, 1471, 749], [2412, 0, 0, 5293, 8315, 5902, 0, 0, 0, 0, 1570, 2300, 0, 0, 0, 3371, 4383, 0, 0, 0, 0, 1620, 0, 0, 0, 0, 3454, 4545], [3384, 10543, 2339, 0, 8351, 549, 3474, 114, 3449, 0, 3698, 9680], [0, 1460, 261, 7260, 4407, 0, 0, 0, 0, 573, 2637, 3430, 275, 2059, 2832, 4782, 3281, 4098, 0, 1642, 572, 0, 168, 4046, 261, 2355], [275, 0, 1680, 10517, 10473, 0, 5016, 0, 1338, 4084, 0, 1333, 7073, 0, 7688], [11798, 0, 1500, 15966, 17820, 2465, 0, 0, 0, 3717, 2851], [12661, 887, 3284, 17503, 12598, 2465, 0, 3474, 0, 1248, 5493, 0], [2420, 0, 5796, 8347, 9472, 2465, 0, 2465, 0, 1405, 2442, 0, 0, 1288, 4976, 6862, 2484, 3539, 0, 0, 2601, 0, 1248, 2420, 0, 5798, 3376], [3401, 84, 0, 2883, 3462, 4685, 0, 3713, 0, 10807, 6676, 8282, 3128, 10282, 3451, 0, 7308, 0, 0, 3512, 0, 0, 0, 0, 2606, 146], [4826, 0, 2699, 3994, 4987, 3713, 3085, 0, 3990, 0, 842, 3875, 622, 5036, 6309, 3501, 10184, 0, 0, 0, 6536, 1188, 0, 304, 0, 0, 6057, 3606], [7207, 2275, 54, 5142, 9750, 6776, 1827, 762, 386, 4223, 3628, 1290, 4136, 3056, 5918, 0, 6711, 830, 6098, 569, 0, 916, 576, 87, 11701, 6396], [11264, 3022, 1010, 19249, 21681, 4159, 8755, 0, 7873, 146, 458, 7425, 267, 7961, 4385, 1463], [3362, 0, 0, 6677, 19869, 2465, 2388, 0, 2742, 235, 1519, 2952, 0, 10188, 6112, 11068, 6781, 0, 14776, 0, 3520, 0, 0, 0, 0, 0, 3365, 5779], [6207, 377, 0, 6007, 11491, 7220, 4691, 0, 1248, 2228, 10196, 2113, 0, 846, 6259, 4906, 14823, 0, 5459, 0, 2224, 5797, 0, 2832, 5097, 0, 6051, 4663], [7333, 4666, 3299, 25342, 11617, 9775, 1696, 1463, 0, 6483, 3887, 275, 17659, 7657, 11318, 13709, 0, 2386, 1922, 1584], [9378, 443, 481, 9556, 11689, 6570, 3394, 0, 1801, 3744, 12327, 5947, 0, 9853, 16838, 11458, 10123, 0, 4827, 51, 3495, 5298, 0, 2010, 6022, 0, 7542, 0], [5548, 596, 85, 5219, 8032, 2827, 4857, 1804, 46, 7474, 4530, 0, 2760, 7649, 23221, 30470, 0, 56416, 154, 171, 99, 0, 429, 3291, 22, 2043, 3190], [14412, 7052, 7080, 31764, 9712, 15208, 13974, 0, 2744, 1399, 16790, 10248, 0, 5419, 9164, 19880, 23415, 0, 26912, 0, 5573, 2796, 3718, 3427, 3468, 7882, 32816, 18184]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

