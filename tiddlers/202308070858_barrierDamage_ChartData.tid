created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Aloe Pen", "Palm Sauce", "Forever Dreaming", "Don Saki Purrito", "Brace Stonebrow", "Newtype Khan", "Xuerreux", "Crabbedmermaid", "Xanvias Tsolea", "Vee U", "Gestern Yesteryear", "Drac Tepes", "Jerryatric Reflexes", "Drevarr Moonwillow", "Hawaiian Supreme", "Forever Dreaming", "Mom Tapper", "Liza Hexx", "Smol Gluvs", "Roderik Manloy", "Alarics Bane"];
const professions = ["Vindicator", "Vindicator", "Harbinger", "Scrapper", "Firebrand", "Spellbreaker", "Berserker", "Dragonhunter", "Dragonhunter", "Tempest", "Firebrand", "Scourge", "Spellbreaker", "Scrapper", "Berserker", "Scourge", "Spellbreaker", "Scourge", "Reaper", "Renegade", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3795, 2756, 0, 0, 0, 2799, 6787, 5252, 6392, 0, 0, 0, 2945, 269, 538, 1133, 0, 3621, 0, 0, 5008, 767, 0, 3128, 3997, 0, 470, 0, 0, 1863], [124, 0, 3718, 679, 0, 2359, 2780, 0, 10554, 13836, 0, 3410, 5650, 1816, 3623, 0, 0, 0, 5061], [0, 2473, 312, 0, 2442, 0, 269, 304, 0, 5258, 1288, 0, 4189, 0, 0, 4562, 7618, 4595, 6145, 7790, 0, 0, 7460], [56845], [0, 2025, 3316, 3194, 4166, 4180, 7696, 5601, 5778, 0, 9070, 5496, 2395, 7280, 0, 0, 0, 3141], [2088, 0, 1264, 12698, 6290, 8704, 10780, 1289, 0, 4193, 2087, 7449, 7108], [4052, 1294, 438, 0, 0, 0, 943, 3438, 0, 0, 0, 1652, 4248, 0, 4009, 0, 0, 4657, 1279, 1562, 6331, 4053, 6107, 2958, 7245, 0, 653, 3780, 0, 6332], [674, 0, 591, 1483, 0, 0, 2816, 3409, 5814, 2157, 0, 3934, 751, 0, 0, 0, 4814, 0, 99, 5397, 312, 17, 734, 4886, 0, 2343, 0, 1585, 0, 0, 1506, 2715, 0, 11029, 421, 1712, 0, 464, 4667, 4860, 488], [5322, 6732, 0, 3026, 958, 0, 0, 0, 1600, 0, 322, 1517, 578, 0, 11450, 1546, 0, 0, 0, 3626, 1031, 0, 639, 1297, 68, 21157, 6829, 4114, 1301, 1167, 0, 4054, 0, 3858, 1945], [485, 2556, 0, 4948, 8610, 9512, 14213, 8578, 66, 4568, 1572, 470, 669, 0, 0, 0, 1263, 2351, 625, 7152, 10287, 5677, 0, 6157, 0, 5273, 0], [266, 0, 0, 0, 0, 0, 1359, 13025, 2989, 5458, 0, 6483, 0, 0, 3121, 0, 4256, 0, 1049, 1634, 2289, 726, 3231, 0, 0, 1467, 0, 5451, 1137, 0, 0, 274, 70, 21242, 4865, 2995, 4676, 2026, 1569, 1207, 4217, 912], [0, 5152, 26698, 7714, 8489, 11379, 15038, 0, 5571, 2455, 23999, 354], [11476, 3211, 6567, 5151, 5432, 765, 3686, 1199, 11737, 1122, 0, 7829, 4997, 1055, 17439, 11831, 16338], [3806, 102, 3444, 1095, 1781, 138, 1599, 3399, 11197, 10355, 1219, 6688, 3882, 1431, 6506, 0, 80, 0, 6386, 2074, 3889, 2047, 15480, 1461, 212, 8295, 222, 5978, 1121, 0, 5128, 1476], [6547, 13711, 11891, 0, 5780, 7399, 5017, 4256, 0, 0, 0, 0, 269, 2460, 5011, 3290, 1216, 2321, 0, 3018, 0, 0, 2878, 0, 0, 10239, 0, 3638, 562, 8672, 1257, 2469, 1248, 9286, 3136], [9338, 177, 6600, 4287, 6664, 1410, 11747, 22556, 13774, 2956, 4032, 12694, 5591, 13977], [6225, 1619, 6460, 19732, 8980, 0, 12671, 2423, 10992, 12042, 0, 8324, 0, 598, 10027, 4412, 14195, 16883, 8396, 0, 2146, 7397, 22901, 11389], [0, 5470, 12073, 9715, 10728, 0, 3161, 0, 10322, 9090, 7572, 8442, 28015, 15064, 3383, 29800, 0, 23665, 5971, 0, 10743, 2230, 1935, 44097, 11906, 21393, 13507, 9020, 0, 4400, 5412, 14778, 12304], [36088, 18523, 31014, 59311, 0, 90124, 0, 116276], [0, 5977, 7741, 8002, 2204, 12740, 15366, 37394, 20132, 0, 7045, 21711, 14449, 4731, 836, 639, 25253, 36233, 4381, 14857, 26794, 4323, 945, 32034, 5185, 37041, 11422, 0, 28351, 350, 740, 15024], [31053, 0, 20512, 1602, 50056, 47742, 826, 70273, 79305, 46800, 802, 89895, 3755, 73102, 17400, 1694, 83293, 3659, 15979, 99268, 29483, 51191, 41245, 54227, 12693, 8434, 51316, 24005]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

