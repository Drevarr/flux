created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Blancooo Padreee", "Jmbrage Gaurdian", "Belvyn Brightblade", "Arcanophage Farra", "Kisumaiassu", "Newtype Khan", "Sub Train", "Bella Sassy", "Koralia Danai", "Solus Sanctus"];
const professions = ["Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 20.097, 0.0, 7.802, 10.2343, 28.1957, 0.0, 14.2551, 9.8271, 0.0, 4.9914, 4.9631, 0.2372, 1.056, 4.4268, 5.0901, 0.0, 2.6433, 9.9552], [0.0, 0.0, 22.6044, 26.565, 14.4417, 0.0, 21.7728, 56.7686, 0.0, 31.882, 9.9918, 13.2822, 29.9031, 20.2602, 0.0, 0.0, 34.9609, 0.0, 0.0, 0.0], [62.238, 78.7189, 72.9492, 79.2627, 29.6208], [8.6086, 0.0, 0.0, 10.2976, 10.3635, 63.8442, 137.9609, 37.8048, 84.3357], [28.8388, 93.7482, 66.6666, 22.4981, 18.518, 82.6402, 143.4303, 14.2824, 45.0274, 39.8025, 0.0, 32.8671, 61.4771, 0.0, 0.0, 3.5935, 15.6989, 7.0784, 41.2209, 0.0], [9.039, 29.4585, 65.9568, 117.7638, 7.2353, 15.651, 55.8495, 186.6197, 15.3912, 69.6111, 89.6517, 48.4124, 51.0272, 50.6506, 51.986, 55.8298, 8.1174, 0.0, 74.2619, 17.544], [22.3824, 41.5433, 181.2174, 153.5688, 22.9811, 56.259, 61.6896, 133.6231, 13.2, 66.2394, 57.6999, 19.2101, 34.2841, 59.3323, 34.9303, 46.86, 13.2283, 27.1115, 37.1488, 57.6096], [18.5085, 19.1573, 78.4602, 136.5672, 4.1731, 44.368, 106.1991, 247.2546, 29.6472, 81.3481, 127.5327, 0.0, 46.0012, 95.9192, 68.8442, 71.654, 59.892, 78.8698, 0.0, 79.7628, 70.7472], [95.4381, 79.8885, 124.215, 135.366, 68.8758, 72.662, 76.4883, 263.1913, 37.9896, 95.6459, 132.8031, 48.3066, 61.8512, 77.5852, 48.18, 41.8202, 90.4966, 1.0304, 58.8666, 76.5408], [83.3469, 73.3387, 149.5494, 160.314, 23.2709, 54.285, 90.635, 292.5186, 52.4304, 126.2048, 128.0817, 5.8106, 47.6298, 88.4871, 86.4618, 53.372, 79.9688, 74.6905, 5.488, 89.3357, 107.8752], [77.2426, 69.8332, 139.6122, 161.1918, 7.9019, 72.8265, 130.2116, 309.5869, 68.3232, 131.3264, 143.6733, 0.8928, 65.1843, 104.748, 73.8245, 72.05, 96.2699, 100.7572, 0.0, 72.1187, 77.724]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

