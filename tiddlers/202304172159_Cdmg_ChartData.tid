created: 20230417215912000
creator: Drevarr
modified: 20230705163525699
modifier: drevarr
tags: ChartData
title: 202304172159_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Howls", "Johosh The Great", "Sub Train", "Mike The Archmagus", "Smol Gluvs", "Burnockholmes", "Smol Daddy Tika", "Eibh\u00ebar", "Elonith Requiem", "Ark Darkness", "Be\u00eb", "Etch\u00e9ry", "Miphest\u00f6", "Solus Sanctus", "Jeckyll Mbs", "Be\u00eb", "Elonith Requiem", "Gavann", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Xanvias Einzbern"];
const professions = ["Druid", "Firebrand", "Firebrand", "Catalyst", "Reaper", "Mechanist", "Berserker", "Chronomancer", "Reaper", "Firebrand", "Reaper", "Berserker", "Tempest", "Firebrand", "Berserker", "Scourge", "Scourge", "Firebrand", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.3713, 11.1818, 31.6579, 21.629, 25.8596, 1.0353, 24.8559, 0.0, 56.4545, 27.2222, 15.6436, 9.5833, 14.5632, 0.0, 6.5421, 9.7293, 6.75, 60.7027, 12.1977, 49.0385, 67.8519, 17.1711], [65.2791, 0.0, 0.0, 20.462, 0.0, 15.1908, 0.0, 29.0175, 9.4, 37.8305, 0.6923, 0.0, 4.9841, 25.1881, 6.8851, 0.7231, 97.3364, 16.609, 0.0, 0.0, 0.8721, 27.8077, 0.0, 36.3422, 0.0, 12.697, 38.4615, 17.9506, 22.4615, 19.8], [3.9892, 41.1795, 5.4325, 0.0, 8.9671, 4.7742, 14.4035, 129.4824, 37.0339, 26.0897, 9.3492, 17.2574, 0.0, 87.1494, 3.3487, 23.7103, 50.6391, 4.9722, 1.2973, 6.8488, 11.7692, 0.0, 7.861, 1.8148, 29.697, 8.1795, 44.0988, 9.2967, 127.74], [0.0, 74.5517, 19.5641, 46.7664, 37.609, 0.0, 13.6216, 61.686, 128.6731, 0.0, 39.3209, 2.9012, 49.4848, 4.3077, 204.5556, 31.7912], [19.9302, 31.9545, 13.957, 4.5897, 17.7806, 3.3182, 51.1776, 3.4032, 41.8684, 32.9059, 100.0847, 0.0, 11.7727, 29.1905, 57.2475, 36.5417, 45.977, 9.5179, 10.4299, 32.1278, 2.3148, 7.7027, 21.7442, 14.3462, 13.3333, 15.9412], [10.7901, 103.6515, 25.2308, 461.1111, 220.6154, 106.32], [0.0465, 0.0, 0.0, 4.8974, 35.2827, 2.0909, 208.8289, 3.5484, 12.7193, 3.8353, 23.6695, 32.7179, 0.0, 5.373, 154.3465], [5.7209, 3.2258, 12.7436, 23.5338, 0.0, 30.2368, 46.7177, 25.1053, 37.2824, 99.2881, 14.641, 0.0, 35.0159, 20.8614, 3.25, 56.8161, 0.4, 14.1776, 21.4737, 0.0, 33.8108, 1.8721, 22.4231, 1.9815, 29.6952, 0.7901, 0.0, 0.0, 46.2593, 20.6593, 53.78], [28.1646, 0.1818, 45.9539, 10.4355, 43.4649, 15.5412, 19.339, 21.5897, 6.6364, 37.9524, 28.802, 5.3333, 119.7011, 10.1744, 52.729, 50.1353, 0.713, 32.4595, 35.8488, 53.0962, 0.0, 24.5508], [13.0527, 0.0, 48.8882, 0.0, 43.2544, 124.2471, 29.3559, 10.1538, 29.7857, 162.9307, 0.0, 4.9885, 0.0, 5.5047, 7.8797, 4.0463, 0.0, 3.3372, 10.4423, 4.4815, 15.4118, 3.0, 197.5, 0.0, 28.2222, 16.4066, 10.3], [16.7674, 2.9892, 9.8974, 23.2215, 25.5, 31.1711, 4.5806, 50.7544, 50.9647, 95.0169, 11.8846, 0.0, 63.9444, 37.8317, 14.6667, 93.7126, 13.4718, 48.6168, 27.2932, 5.8333, 21.8108, 17.7791, 43.0577, 0.2593, 27.7273], [207.6667, 171.7121, 63.0769, 357.0494, 193.3187, 125.28], [25.3966, 0.0, 32.5263, 7.1774, 61.9123, 127.9412, 6.4746, 40.5513, 54.4841, 5.1485, 3.4167, 57.4943, 12.6615, 4.3458, 12.4962, 1.213, 20.8108, 1.8605, 8.9038, 30.4815, 26.4064, 5.2963, 6.6667, 142.6049, 31.5055, 110.16], [0.0, 0.0, 12.1941, 296.0, 18.0132, 0.0, 115.3772, 0.0, 20.178, 20.3077, 38.2727, 138.2619, 4.3663, 0.0, 11.8046, 11.9385, 21.8131, 13.6917, 0.0, 19.8378, 23.7791, 0.0, 36.8889, 57.246, 24.1605, 15.4848, 10.6923, 37.3827, 54.7692, 38.28], [17.9535, 0.0, 0.0, 3.6667, 11.116, 16.5909, 114.5724, 9.2903, 109.3158, 3.2118, 13.5169, 1.0769, 0.0, 36.2079, 0.5, 94.5287, 0.0, 60.1402, 27.2481, 2.3056, 0.0, 0.0, 0.0, 3.7222, 1.6952, 63.3457, 51.6515, 0.0, 40.037, 132.9451, 66.1], [220.1235, 215.5758, 0.0, 370.7407, 233.6703, 300.76], [85.3333, 46.7727, 45.7436, 606.0, 276.8901, 282.04], [4.6814, 0.0, 46.3224, 0.0, 94.5, 103.0941, 18.322, 7.0513, 0.0, 120.4365, 63.2574, 0.0, 13.3793, 45.3897, 21.1963, 170.7669, 2.4537, 7.7027, 7.686, 162.6346, 17.4259, 4.8235, 0.0, 12.0606, 0.0, 19.6049, 3.4945, 59.94], [6.7442, 6.4194, 47.8974, 35.0823, 0.0, 61.1184, 0.0, 13.3684, 77.2824, 146.4153, 76.4231, 0.0, 45.3413, 47.8614, 0.0, 85.6667, 6.2615, 58.5047, 40.9248, 3.1019, 8.5405, 52.686, 66.6154, 9.537, 36.0749, 58.0864, 60.4242, 0.0, 261.7654, 94.2747], [0.0, 8.1818, 1.7634, 13.2308, 30.9114, 0.0, 72.7434, 0.2177, 182.9211, 11.8588, 131.8729, 5.0513, 0.0, 111.8254, 9.6337, 0.0, 40.2759, 10.1795, 62.6262, 45.9699, 1.7037, 0.0, 0.9767, 0.0, 0.2222, 26.4973, 0.0, 0.0, 0.0, 212.6296, 127.978, 300.78], [7.6279, 55.0455, 0.0215, 62.359, 49.0063, 22.2273, 135.9539, 12.3065, 89.2018, 85.3529, 209.8136, 105.8333, 0.0, 690.7302, 376.8614, 8.375, 877.0575, 111.0462, 480.1028, 342.8797, 3.0463, 28.8649, 3.4651, 0.0, 20.2222, 4.6524, 353.8025, 261.7424, 0.0, 282.5432, 154.3516, 134.42]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

