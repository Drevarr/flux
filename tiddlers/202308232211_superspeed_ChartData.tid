created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00efr", "Mike The Archmagus", "Glorious Gluvs", "Tootsie Pop Rocks", "Xanvias Tsolice", "Newtype Khan", "Charr Surethang", "Arcanophage Farra", "Tegan Parker", "Jimbo The Pleb", "Mistwalker Cael", "Nose Llama", "Drevarr Moonwillow", "My Birthday Girl"];
const professions = ["Weaver", "Weaver", "Berserker", "Scrapper", "Weaver", "Spellbreaker", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Herald", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0.34, 0, 0.312, 0.478, 0, 0, 0, 0.538, 0.445, 0, 0, 0, 0, 0.424], [0.673, 0.266, 0, 0, 0.341, 0, 1.0, 0.12, 0, 0, 0, 0, 0.191, 1.056, 0, 0, 0, 0], [0, 0, 0.468, 0, 0, 1.197, 0, 0, 0, 0, 0, 0, 0.452, 0, 0, 0, 0, 0.245, 0.451, 0], [0.128, 0, 0.412, 0, 0.34, 0.212, 0, 0, 0, 0.5, 0, 0.361, 0.292, 0, 0.787, 0.064, 0.227, 0.524, 0.692, 0, 0.283], [0.109, 0.227, 0.343, 0, 0, 0.364, 0, 0.341, 0, 0, 0.337, 0.665, 0.775, 0.363, 0.472, 0.251, 0, 0, 0.341, 0.262, 0.423], [0.183, 0.376, 0.804, 0, 0.591, 0, 1.18, 0, 0, 1.241, 0, 0.97, 0.807, 0.302, 0, 0.425, 0, 0, 0, 0, 0], [0, 0, 1.66, 0, 1.658, 0, 0.613, 1.301, 1.208, 0.787, 1.005, 0, 0.668, 0, 0.358, 0], [0, 0.693, 0.428, 3.227, 0, 0, 1.2, 0.569, 0, 0, 1.601, 0.553, 0, 0.591, 0.77, 0.425, 0.303, 0.748, 0, 0, 0], [0.329, 0.684, 0.343, 0, 0.362, 0.192, 0.681, 0, 1.001, 0.96, 0.666, 1.147, 0.271, 0.897, 0.252, 0.454, 0.883, 0.511, 0.27, 0.424], [0.256, 0.379, 0.508, 0, 0.685, 0.303, 1.799, 0.711, 0, 0, 1.799, 0.555, 1.463, 0.603, 0.787, 0.349, 0.872, 0.747, 0.71, 0, 0.367], [0.229, 0, 0.571, 3.535, 0, 0.152, 2.339, 0.57, 0, 0, 0.791, 1.11, 0.906, 1.315, 1.377, 0.85, 0.761, 0.79, 0.429, 0.86, 0.707], [0.768, 0.851, 0.771, 0.438, 1.262, 1.664, 1.104, 0, 1.121, 0.961, 0.916, 0.771, 0.998, 0.948, 0.849, 0.795, 0.896, 0.936, 1.234, 0.106], [0.865, 1.339, 1.605, 0, 0.974, 1.775, 0.9, 1.554, 0.684, 1.494, 2.08, 2.407, 1.637, 1.81, 2.889, 1.301, 1.826, 0.958, 1.32, 2.352, 1.646], [0.878, 1.793, 2.65, 0, 0.808, 1.065, 1.362, 2.689, 0, 1.993, 2.0, 1.844, 3.479, 2.534, 3.644, 2.721, 0.569, 1.805, 1.285, 3.465, 1.447]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

