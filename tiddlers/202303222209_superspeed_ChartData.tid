created: 20230322220917000
creator: Drevarr
modified: 20230705163522901
modifier: drevarr
tags: ChartData
title: 202303222209_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Etch\u00e9ry", "Kosa\u00edr", "Grasszanine", "Venomina The Siren", "Smol Daddy Tika", "My Birthday Girl", "Sizzln Sisigbringer", "Elonith Primal", "Zadie Miststep", "Xanvias Einzbern", "Charred Fishbringer", "Drevarr Moonwillow"];
const professions = ["Tempest", "Berserker", "Holosmith", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Tempest", "Tempest", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.097, 0.442, 0, 0, 0.227, 0.261, 0.414, 0, 0, 0, 0.285, 0.822, 0.088, 0, 0.489, 0, 0, 0.728, 0.343, 0.189, 0, 0.408, 0.426, 1.387, 0.811], [0.585, 0.737, 1.075, 0, 0.758, 0.871, 1.022, 0.731, 1.305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.531, 1.436, 1.679, 0, 0, 0, 1.749, 0, 1.268, 0, 0, 3.679, 0, 0, 0.246, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.242, 0.731, 0, 0, 0.758, 0.436, 0.691, 0.427, 0.652, 0.475, 0.681, 0.21, 0.286, 0.814, 0.418, 0.572, 0.95, 0.618, 0.256, 0.631, 0, 1.112, 0, 0, 0], [0.051, 0.885, 0.13, 0, 0.682, 0.523, 0.828, 0.511, 0.685, 0, 0.282, 0.41, 0.353, 0.342, 0.427, 0.669, 0.382, 0.829, 0.793, 0.664, 0.311, 0.731, 1.086, 0.682, 0, 0.812], [0.545, 0.922, 0.916, 0, 0.112, 0, 0.69, 0, 0.644, 0, 0.475, 0, 0.509, 0.568, 0, 0.371, 0.572, 0.688, 0.618, 0.447, 0.635, 0.17, 0.907, 0, 2.368, 1.271], [0.296, 1.383, 0.818, 0.179, 0.682, 1.019, 0, 0.639, 1.123, 0, 0.711, 0.912, 0.321, 0, 1.343, 0.848, 0.171, 1.345, 1.113, 0.621, 0.464, 0.465, 0.816, 0.355, 0.773, 1.305], [0.315, 0.853, 1.171, 0.602, 0.908, 0.783, 0.85, 0.542, 0.78, 0.953, 0.85, 0.426, 0.552, 0.171, 0.421, 0.51, 0.684, 1.664, 0.371, 0.907], [0.582, 0.725, 1.132, 0.52, 0.682, 0.785, 0.741, 0.768, 0.784, 0, 0.647, 0.82, 0.679, 0.698, 0.697, 0.568, 0.594, 0.68, 0, 0.493, 0.581, 0.499, 0.542, 0.328, 0, 0.825], [0.639, 1.154, 1.045, 0.52, 0.903, 0.524, 0.827, 0.512, 1.175, 0.478, 0.854, 0.819, 0.795, 0.853, 0.73, 0.335, 0.687, 0.825, 0.742, 0.669, 0.34, 0.668, 1.084, 0.508, 0.71, 0.811], [0.552, 1.536, 0.862, 0, 0.758, 0.764, 1.381, 0.854, 1.305, 0, 0.947, 1.37, 0.935, 0.071, 0.811, 1.117, 0, 0.813, 1.158, 0.572, 0.944, 1.111, 1.307, 0.729, 2.336, 1.367], [1.133, 1.245, 1.577, 1.035, 1.194, 1.209, 0.754, 0.93, 1.365, 1.139, 0.206, 1.012, 0.686, 0.488, 1.737, 1.63, 1.072, 1.097, 1.276, 1.112, 1.67, 1.897, 1.087, 2.074, 1.941], [1.252, 2.59, 1.782, 0.234, 2.123, 1.434, 1.657, 1.343, 2.106, 2.032, 1.707, 1.645, 1.402, 1.015, 2.314, 1.093, 0.642, 1.771, 1.683, 1.184, 1.717, 1.668, 1.569, 0.872, 1.065, 0.958]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

