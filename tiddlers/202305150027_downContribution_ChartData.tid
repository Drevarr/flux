created: 20230515002743000
creator: Drevarr
modified: 20230705163529957
modifier: drevarr
tags: ChartData
title: 202305150027_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Mybeau", "Smol Gluvs", "Sureting", "Binkety Bonk", "X Devastation X", "Slautorn", "Ikong Winnie Ilocos", "Rina Of Theros", "Evan Nightroad", "Tootsie Pop Rocks", "Crusader Siolith", "Cerys Fireblade", "Lord Erin The Wise", "Morv\u00e4rth", "Outer Ocean", "Kmpek", "John John", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Reaper", "Reaper", "Reaper", "Scrapper", "Reaper", "Weaver", "Scrapper", "Scourge", "Vindicator", "Scrapper", "Dragonhunter", "Berserker", "Weaver", "Reaper", "Berserker", "Vindicator", "Holosmith", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[228.1647, 604.4717, 109.3502, 137.3214, 257.6168, 649.34], [201.3167, 357.2588, 161.4214, 297.2995, 438.7738, 435.8972, 497.3], [327.7294, 605.9686, 286.1106, 210.5833, 342.243, 190.52], [1301.1333, 296.9294, 239.761, 446.0553, 15.1429, 451.4486, 470.2], [1213.6415, 133.8479, 541.9524, 268.5607, 319.7], [954.0256, 50.6179, 126.3188, 156.4856, 235.6782, 59.8426, 0.0, 301.0667, 337.7412], [145.8933, 132.8509, 55.3292, 101.9703, 63.6723, 34.9333, 0.0, 58.7667, 185.0471, 409.7484, 233.9816, 533.3452, 151.8037, 36.96], [606.4444, 42.5186, 179.2408, 27.2428, 36.203, 127.034, 0.0, 0.0, 217.0333, 364.7647, 236.2767, 124.977, 360.0595, 116.5888, 633.98], [788.6496, 37.1836, 171.2752, 37.9877, 10.5594, 26.5362, 66.6667, 0.0, 24.7667, 379.6235, 202.5849, 216.7189, 433.9881, 416.8411, 25.0], [283.1538, 73.3772, 234.7798, 152.0412, 163.4257, 137.8426, 125.4933, 0.0, 280.4941, 48.4151, 187.2028, 42.3452, 500.7103, 343.12], [550.4957, 114.0199, 234.6537, 87.6749, 326.6238, 73.0596, 13.4267, 0.0, 57.5059, 430.8302, 60.4286, 417.9881], [934.3162, 88.9429, 275.0321, 36.0823, 0.0, 100.817, 36.2267, 0.0, 187.7412, 0.0, 66.8894, 530.5952, 833.271, 504.16], [144.0342, 146.8164, 69.5367, 111.6379, 246.6337, 90.0128, 21.3467, 0.0, 373.25, 240.9176, 436.2704, 421.7097, 894.2262, 406.5607], [669.2479, 246.3052, 1101.05, 601.9529, 421.6478, 345.2719, 420.5, 526.486, 31.88], [2000.0667, 574.5647, 864.522, 324.5161, 986.8214, 661.4673], [55.6005, 306.8303, 63.0288, 87.2624, 193.5745, 25.2667, 0.0, 401.3667, 346.2824, 359.7547, 423.5806, 456.5595, 425.7664, 596.48], [705.9829, 134.0571, 202.7661, 162.1605, 268.8911, 68.1191, 27.76, 397.3412, 929.9182, 137.1797, 141.4643, 307.6168, 537.5], [1749.9402, 368.1737, 372.9954, 71.93, 280.3663, 332.3234, 104.3067, 0.0, 574.6167, 356.7294, 1369.0755, 469.2581, 1187.1667, 649.8879, 226.18], [1831.4274, 626.6253, 619.9748, 185.642, 485.1188, 335.9617, 256.2267, 0.0, 1538.55, 467.5176, 1465.7736, 1235.7834, 1403.5714, 917.7383, 2316.82]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

