created: 20230626011254000
creator: Drevarr
modified: 20230705163537786
modifier: drevarr
tags: ChartData
title: 202306260112_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Momomeko", "Primal Clone", "Black Raspberry Pie", "Crusader Siolith", "Be\u00eb", "Warrior Constantine", "Artakama Nahid", "Zayde Sunsabre", "Ryvalia Fazebringer", "Johosh The Mighty", "Belvyn Brightblade", "Fribble Bibble", "Imalou", "Miphest\u00f6", "Sub Train", "Eoooeee", "Newtype Khan", "Blancooo Padreee", "Xanvias Einzbern", "Mmathuss", "Yummy Kiwi", "Drevarr Moonwillow", "Sygaldry Verdandi", "Arcanophage Farra", "Smol Daddy Tika", "Traidoruns Maximus", "Gestern Yesteryear", "Bella Sassy"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Reaper", "Spellbreaker", "Tempest", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.6604, 22.8749, 18.2389, 7.392, 243.5097, 61.3354, 15.3079, 41.5334, 102.7902, 164.4342, 0.0, 0.0, 0.0, 1.5903, 34.3427, 0.0, 0.0, 0.0, 6.0724, 0.0, 10.775, 58.1717, 15.7536, 0.0], [257.9528, 21.7543, 0.0, 8.8, 108.7993, 185.1667, 171.0815, 47.5261, 66.9562, 0.0, 32.967], [22.6592, 9.7566, 41.2078, 156.376, 58.3338, 0.0, 0.0, 27.0642, 76.9418, 214.7712, 14.2204, 0.0, 1.202, 7.2333, 0.0, 139.8188, 0.0, 0.0, 10.5731, 9.8427, 5.9438, 15.2842, 23.6448, 42.2528, 15.4607, 35.0803, 0.0], [27.1694, 110.066, 7.1024, 159.721, 37.5239, 129.9902, 137.3818, 159.1474, 106.5888, 46.6992, 53.0936, 25.4285, 29.4492], [17.8412, 16.2868, 37.7265, 142.912, 225.8739, 62.496, 11.9837, 83.8914, 62.7827, 192.7188, 39.5489, 22.8334, 6.0547, 1.2061, 17.4064, 18.3744, 17.9712, 15.3014, 32.1598, 0.0, 5.8291], [125.0813, 0.0, 60.8007, 96.6986, 166.3518, 145.651, 19.1387, 42.0937, 33.6015, 151.5268, 10.5487, 0.0, 104.6438, 56.0447, 0.0, 0.0, 66.1478, 18.1152, 46.2769], [0.0, 0.0, 37.0075, 154.264, 178.7999, 10.8475, 94.2373, 102.5158, 192.7188, 167.7236, 10.5851, 1.2243, 13.7228, 16.9809, 0.4057, 32.0896, 0.0, 16.4491, 0.0, 25.1808, 23.9702, 0.0, 56.7842, 1.5181, 7.1808, 22.0414], [60.0644, 47.3147, 0.6433, 131.824, 89.6713, 52.6306, 0.0, 82.8418, 34.8488, 89.3282, 3.1122, 54.9154, 27.4199, 2.6979, 40.3595, 16.284, 44.1907, 17.5564, 9.095, 18.827, 135.3024, 26.6976, 71.3156, 63.081, 0.9082, 52.118], [4.818, 149.1697, 11.7682, 82.192, 128.7413, 5.3122, 0.0, 44.3073, 41.2149, 108.8238, 0.9097, 9.1001, 0.0, 65.664, 142.4174, 2.6275, 0.0, 0.0, 0.0, 0.0, 0.0, 115.8422, 111.888, 27.3737, 71.91, 118.5677, 0.0], [31.7696, 23.1647, 63.382, 147.136, 238.3546, 54.1483, 12.4556, 55.5528, 80.4541, 73.0286, 19.2478, 7.7242, 0.0, 18.2188, 8.0758, 28.2072, 17.3645, 42.3103, 0.7478, 32.0909, 145.6589, 28.3104, 26.5043, 55.2109, 11.8483, 25.1786], [116.0992, 32.6122, 0.0, 125.224, 361.6696, 216.0576, 132.6219, 107.455, 300.5838, 34.5215, 0.0], [61.9916, 44.3974, 166.7987, 92.224, 246.2229, 45.756, 135.0959, 0.0, 435.6148, 7.9481, 50.6415, 15.0565, 17.1396, 12.0557, 0.0, 17.257, 22.9144, 30.8151, 26.9376, 79.9286, 16.7616, 0.1242, 20.5343, 6.9696, 34.7723], [88.4176, 15.7651, 27.3205, 198.088, 245.4089, 102.7613, 0.0, 128.6485, 111.3515, 208.539, 69.426, 3.3977, 8.3475, 49.8636, 59.0047, 31.8688, 0.0, 13.4307, 48.8137, 68.3395, 64.1434, 62.784, 32.8385, 81.7377, 27.4138, 15.0383], [0.0, 65.56, 268.4711, 87.3605, 0.0, 261.0455, 263.6984, 146.8562, 72.5382, 0.0, 0.0, 54.9423, 66.3049, 70.9817, 44.436, 110.1811, 6.5368, 128.286, 18.505, 293.9069, 0.0, 75.5881, 79.2208, 61.7338, 16.6373], [67.9484, 39.3742, 61.4522, 295.328, 529.2097, 101.6899, 0.0, 256.5473, 385.9162, 14.0624, 131.4785, 30.6504, 0.0, 0.0, 41.1985, 0.0, 0.0, 43.4918, 9.2336, 27.7023, 34.5211, 117.1368, 15.8112, 15.2518, 74.7864, 0.9293, 0.4048], [90.2244, 264.653, 584.672, 562.0394, 167.891, 435.6507, 235.5998], [89.9944, 38.0024, 110.1522, 233.552, 271.32, 90.2621, 55.1578, 156.5374, 67.5573, 359.0706, 97.0049, 17.024, 32.2102, 20.3661, 58.6238, 85.8194, 58.6224, 22.176, 82.1381, 62.2214, 32.8522, 39.4632, 50.6016, 56.8836, 53.9325, 72.9485, 53.5348], [20.3232, 33.1724, 153.971, 204.6, 328.2972, 85.1731, 0.0, 120.7017, 113.437, 570.3262, 116.2048, 0.0, 29.8566, 98.9336, 107.8249, 19.0992, 87.3869, 42.7568, 54.222, 0.0586, 6.431, 90.72, 13.6372, 96.3195, 14.615, 0.0], [58.6336, 103.0915, 145.6083, 123.376, 223.839, 71.5133, 0.0, 139.7441, 55.7032, 395.3452, 69.5218, 41.3186, 142.7089, 51.1718, 161.0488, 48.0875, 29.3296, 65.3453, 26.4149, 47.7182, 100.5182, 51.323, 71.5392, 53.1824, 113.8175, 50.3712, 31.6756], [167.9357, 488.0547, 272.8085, 641.4372, 246.8693, 38.6694, 36.0835, 21.033, 23.6463, 50.657, 134.8168, 72.3072, 122.1445, 79.1071, 47.8142, 162.8222, 26.7552, 63.3668, 129.478, 47.9424, 55.6398], [66.0641, 412.1851, 250.0882, 1195.9432, 179.55, 27.918, 24.5973, 4.2835, 101.5045, 5.6801, 63.4984, 98.8915, 59.7417, 7.1821, 50.1859, 157.3099, 14.4288, 92.057, 100.8338, 34.0243, 21.3127], [141.7368, 165.3599, 103.7573, 308.088, 467.8913, 137.0894, 29.0153, 188.6995, 117.1139, 487.5498, 138.1817, 9.2426, 61.7047, 32.9346, 51.4188, 35.2783, 52.3848, 6.4512, 59.5095, 18.6595, 34.609, 102.6043, 72.9792, 30.2054, 42.7864, 79.4534, 66.367], [24.4112, 34.6408, 178.2264, 425.568, 409.1506, 93.5208, 10.26, 262.9198, 271.8755, 306.3366, 186.732, 98.1644, 69.8074, 70.5888, 11.3312, 71.7352, 100.556, 127.4918, 21.8428, 130.025, 40.7285, 143.195, 124.0992, 47.9412, 93.1235, 36.8333, 67.6826], [235.5856, 43.8564, 162.6742, 312.312, 326.2623, 153.3384, 63.3555, 293.8074, 65.4718, 868.0336, 103.4687, 29.0822, 56.8966, 92.6478, 11.2994, 92.7553, 142.9312, 58.7597, 61.4384, 54.9872, 15.9576, 72.4536, 59.328, 40.7873, 37.1535, 49.1885, 34.0639], [142.0288, 38.9684, 338.0626, 342.232, 283.3937, 168.2482, 111.1671, 367.8778, 123.2056, 613.4722, 300.3991, 0.7841, 0.0, 39.1675, 57.7033, 62.7514, 55.9544, 80.1562, 66.0999, 85.2806, 42.661, 65.5632, 59.2416, 16.7173, 66.5567, 46.8864, 12.9941], [98.7252, 73.1069, 204.4117, 548.944, 575.8767, 280.116, 15.5747, 162.9098, 157.2861, 414.2016, 102.0802, 32.373, 22.4158, 68.5111, 29.0738, 79.2506, 42.8536, 98.327, 84.4421, 118.5129, 104.9102, 148.7909, 77.0688, 64.7082], [19.3304, 144.6295, 254.1334, 325.864, 452.5618, 141.9552, 11.5528, 381.7472, 318.9077, 512.6384, 163.5581, 46.2964, 83.6086, 19.494, 84.9362, 44.4167, 103.3344, 80.2906, 123.0169, 105.408, 103.8154, 83.1456, 43.5942, 24.8889, 7.9411, 30.3802], [270.6256, 131.4146, 298.0657, 562.496, 653.2029, 313.2389, 41.5633, 296.0565, 390.6907, 1598.4794, 273.0118, 28.5833, 43.8077, 81.0284, 39.0719, 63.4662, 91.356, 223.0771, 174.9208, 219.6531, 168.7992, 250.727, 77.7312, 55.6664, 168.9086, 4.4141, 33.7198]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

