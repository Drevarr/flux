created: 20230417215912000
creator: Drevarr
modified: 20230705163525820
modifier: drevarr
tags: ChartData
title: 202304172159_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Daddy Demon", "Chioguard", "Demon Staph", "Mac Chiato", "Primal Clone", "Cat Wigglebooty", "Eibh\u00ebar", "Etchery Howls", "Venomina The Siren", "Zadie Miststep", "Black Raspberry Pie", "Ryvalia Fazebringer", "Fribble Bibble", "Ark Darkness", "Mettrik Milliohm", "Arriasa", "Tribal S", "Sub Train", "Drevarr Moonwillow", "Miphest\u00f6", "Bella Sassy", "Solus Sanctus", "Gavann", "Sygaldry Verdandi", "Koralia Danai", "Johosh The Great"];
const professions = ["Firebrand", "Tempest", "Guardian", "Druid", "Tempest", "Chronomancer", "Scrapper", "Chronomancer", "Druid", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Druid", "Druid", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 242.4794, 0.0, 198.5637, 13.7541, 39.8282, 28.9051, 77.7101, 10.3576], [123.0684, 67.8444, 76.4444, 106.6468, 0.0, 30.6384, 28.5542, 62.0242, 28.2196, 33.7953, 15.5072, 21.8894, 33.6654, 66.542], [150.5045, 154.9733, 59.6275, 170.3722, 99.837, 67.3505], [0.0, 0.0, 18.1685, 3.8236, 296.1315, 74.7034, 0.0, 61.8929, 40.9003, 50.5925, 40.8572, 0.0, 45.0664, 44.5046, 0.0, 56.229], [0.0, 0.0, 0.0, 26.9158, 338.4028, 0.0, 75.2993, 21.7967, 58.4854, 11.2872, 34.7498, 0.0, 0.0, 86.2835, 70.5384, 0.0, 17.4783, 17.3901, 45.2995, 101.4697, 0.0, 0.0, 17.8252, 0.0, 3.9494, 13.4549, 7.5676, 24.8188, 52.4491, 11.3704, 18.081], [0.0, 25.043, 13.0806, 246.1956, 0.0, 66.883, 22.7292, 22.6792, 25.2815, 83.7234, 18.4603, 0.0, 54.364, 38.784, 0.0, 42.5021, 65.4518, 44.1985, 48.2258, 0.0, 0.0, 49.9591, 6.215, 21.9429, 65.2555, 25.0444, 15.0058, 20.3096, 22.3949, 40.6661, 30.3555], [59.4158, 53.7479, 248.0537, 91.8338, 16.6098, 67.9258, 26.5727, 2.4863, 40.131, 56.9696, 63.0725, 0.0, 31.4609, 102.7163, 0.0, 52.8529, 12.5918, 43.0473, 20.6669, 12.5388, 56.0102, 16.5904, 8.3437, 0.0, 0.0, 19.8871, 25.48], [0.0, 0.0, 24.7525, 218.0921, 0.0, 71.4263, 29.9559, 35.3594, 39.8591, 75.9755, 13.0712, 24.0768, 53.3572, 38.784, 0.0, 22.8497, 39.6532, 41.4197, 78.3995, 20.8116, 22.2533, 41.6326, 10.8576, 30.7638, 80.5147, 19.8053, 36.2531, 10.4848, 21.9283, 29.9645, 21.756], [314.0155, 0.0, 91.387, 39.1642, 52.6201, 48.3556, 96.2125, 47.6603, 0.0, 78.881, 48.5285, 0.0, 52.9038, 43.6664, 87.1911, 75.2713, 0.0, 17.5824, 17.5019, 48.3226, 0.0, 16.6056], [144.2335, 110.2304, 0.0, 61.2784, 38.8595, 50.6503, 58.7059, 70.1165, 94.439, 45.5715, 105.5828, 65.3802, 64.5183, 56.6989, 0.0, 17.9462, 0.0, 50.8042, 38.4993, 85.1512, 42.9839, 15.9797, 45.3926, 60.319], [0.0, 0.0, 106.8421, 14.1706, 196.7242, 0.0, 47.5182, 18.7662, 94.571, 18.8675, 88.2911, 23.62, 22.2667, 113.4432, 12.9169, 80.262, 42.2586, 28.1534, 200.4512, 39.2496, 46.3213, 4.4928, 0.0, 25.4918, 24.2506, 21.2797, 28.2832, 16.4462, 15.0714, 6.86], [0.0, 25.4113, 15.8644, 261.0602, 21.3849, 58.1689, 20.0483, 46.1404, 59.8094, 67.1868, 26.4482, 7.2785, 57.9764, 26.2762, 0.0, 47.234, 47.5839, 53.7407, 77.813, 0.0, 24.6331, 50.1208, 10.4582, 11.4696, 102.865, 38.6184, 50.3534, 21.2811, 43.4678, 50.3421, 32.0215], [14.9807, 45.2575, 16.1998, 314.48, 90.1953, 28.2075, 57.5917, 48.4806, 71.6968, 32.9074, 14.3352, 53.831, 44.2622, 74.9009, 65.0695, 50.0706, 65.952, 0.0, 11.7749, 42.0368, 28.6541, 22.5261, 112.2, 17.6621, 57.6622, 34.3504, 31.0651, 49.807, 30.919], [112.9801, 51.4504, 483.3331, 183.5187, 89.2267, 84.3486, 82.6752, 120.9594, 4.3571, 128.5666, 96.4267, 57.9941, 84.2369, 206.388, 119.855], [222.7373, 0.0, 138.0114, 0.0, 76.0255, 80.6761, 175.1368, 76.4018, 137.3312, 130.993, 0.0, 75.6256, 63.063, 142.2426, 60.1519, 0.0, 0.0, 74.0899, 53.1648, 0.0, 86.7082, 108.7903, 161.9911, 9.7699, 82.62, 72.1466, 69.8495], [37.9738, 21.1302, 494.9461, 0.0, 132.6489, 0.0, 117.4177, 42.1914, 182.2486, 53.4316, 0.0, 155.0972, 143.1614, 108.4934, 96.4099, 114.0352, 167.6172, 0.0, 0.0, 113.7015, 27.9802, 23.4252, 156.721], [17.8364, 16.9198, 96.0392, 30.2698, 485.4234, 7.5156, 182.9974, 30.3639, 103.9555, 34.6111, 35.328, 15.0969, 15.4044, 18.299, 44.2138, 25.1165, 42.7579, 176.9586, 86.6144, 76.2489, 60.5059, 38.2195, 80.2337, 39.1373, 63.8118, 123.779, 74.895, 45.3407, 26.1202, 56.1038, 27.7796, 13.1565], [595.0501, 0.0, 169.293, 70.2857, 140.4879, 84.7161, 36.0219, 10.2047, 0.0, 45.1849, 133.9502, 0.0, 85.4305, 129.8524, 72.6155, 133.5333, 0.0, 44.2224, 57.5581, 36.2669, 0.0, 120.1886, 93.9462, 59.829, 63.0552, 87.6355, 112.2776, 40.0085], [21.483, 76.4712, 608.5212, 0.0, 213.8321, 25.9346, 163.9491, 7.0805, 180.6875, 118.9024, 155.6894, 141.804, 24.396, 81.0823, 80.7397, 115.5033, 158.3631, 0.0, 23.905, 78.819, 17.7466, 22.9635, 112.9181, 47.2708, 76.0637, 59.9024, 91.6402, 82.3577, 47.4075], [37.7927, 9.3179, 98.5763, 76.488, 777.8387, 201.9153, 128.5657, 113.5634, 82.0088, 153.6277, 71.6625, 0.0, 126.6124, 93.4694, 71.1921, 73.9557, 122.3192, 163.7722, 18.1721, 80.737, 125.7062, 17.7965, 26.001, 99.1848, 120.6576, 57.3388, 44.2303, 81.1814, 73.7519, 38.269], [403.9001, 0.0, 143.7464, 37.0078, 113.9544, 89.5058, 95.1139, 93.4097, 241.5584, 137.9741, 11.5003, 107.0439, 168.168, 232.7368, 167.2914, 33.6031, 25.8763, 214.0239, 65.9443, 49.1832, 199.1774, 115.6963, 158.5307, 134.6026, 126.9923, 106.82], [15.6434, 32.5239, 141.4604, 45.4635, 722.7931, 227.6854, 39.8635, 198.1354, 74.137, 120.9016, 158.3455, 35.5054, 92.3832, 134.0957, 102.3973, 368.823, 138.9395, 178.2399, 55.0238, 20.9035, 80.6783, 10.7078, 0.0, 58.4338, 113.7912, 53.6521, 100.2101, 102.2155, 95.3334, 15.5575], [0.0, 10.9538, 724.1867, 36.6001, 345.9596, 71.2182, 220.8146, 118.286, 129.7481, 78.0835, 25.5103, 124.895, 96.3298, 24.1771, 149.1197, 124.6927, 158.9153, 249.927, 20.3548, 0.0, 116.45, 25.9334, 16.8156, 137.5123, 98.9075, 113.9338, 39.3545, 133.7472, 98.5439, 71.491], [1055.854, 0.0, 298.069, 126.5842, 175.1211, 75.9696, 101.7632, 78.9625, 43.9639, 163.921, 144.8098, 0.0, 122.6465, 270.311, 81.0568, 258.2687, 0.0, 64.5931, 25.788, 80.1715, 19.8045, 222.2458, 112.4418, 185.761, 24.8738, 59.1754, 109.9589, 35.525], [50.0004, 135.6907, 117.4068, 974.0984, 0.0, 381.561, 37.474, 64.4066, 164.0593, 119.6874, 111.0291, 76.1033, 225.6874, 296.5522, 46.9954, 149.8871, 274.5152, 238.3992, 325.2635, 58.8816, 88.3027, 174.4123, 89.207, 60.8715, 202.0498, 221.9465, 197.0153, 161.084, 123.4051, 225.5362, 99.3475], [36.0303, 110.4022, 84.8562, 1067.9315, 41.7331, 365.8458, 66.3809, 247.0129, 173.4306, 121.422, 165.2251, 71.3909, 226.2204, 211.3243, 41.2315, 126.4406, 266.7756, 235.6729, 246.1471, 0.0, 51.7704, 252.0995, 101.9866, 44.2503, 304.0171, 163.3243, 152.095, 59.8841, 143.6616, 263.839, 116.4975], [33.0851, 39.8152, 105.8187, 1151.3128, 40.3119, 382.7527, 31.7626, 178.361, 173.2223, 319.5711, 159.9125, 35.5846, 228.7076, 186.1147, 164.5518, 233.3331, 213.3901, 353.7428, 0.0, 71.9458, 254.8481, 122.4038, 84.8799, 186.3418, 161.6574, 216.5486, 114.5808, 213.1013, 254.921, 132.9125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

