created: 20230603000934000
creator: Drevarr
modified: 20230705163533199
modifier: drevarr
tags: ChartData
title: 202306030009_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Pu Ella", "Hyde En Sikh", "Black Raspberry Pie", "Primal Clone", "Melli Dragonswrath", "Air One Com", "Grasszanine", "Sister Elon\u00edth", "Blanco Padre Guard", "Aronorf Xideliesi", "Tika Fiery", "Bella Sassy", "Koralia Danai", "Newtype Khan"];
const professions = ["Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[131.9135, 82.4407, 25.5645, 38.9809, 5.1824, 16.0466, 0.0, 48.7025, 40.9979, 26.3551], [20.5999, 28.7722, 60.7932, 3.168, 0.0, 0.0, 6.9632, 81.6762, 88.803, 48.5153, 4.9528, 29.3839, 0.0, 44.8385, 48.8149, 14.6199], [5.1437, 15.1826, 5.813, 89.0465, 6.9432, 10.1638, 6.8888, 59.5051, 42.5178, 31.1328, 7.708, 5.1391, 0.0, 18.7565, 35.7588, 30.6821, 34.4034, 5.845, 25.3939, 13.9113, 21.6311, 41.5834], [0.1072, 22.8809, 4.6281, 117.1048, 6.7056, 6.6679, 49.1556, 33.7272, 7.7408, 11.5193, 0.0, 34.0515, 35.2598, 19.4713, 28.2555, 8.3754, 28.0704, 12.2877, 31.6858, 56.5107], [6.7689, 21.9899, 8.2107, 103.8551, 4.3296, 5.035, 0.0, 15.314, 66.131, 39.468, 19.8472, 5.0512, 0.0, 29.785, 32.0998, 35.0746, 28.6902, 4.847, 27.9398, 13.4685, 22.6233, 45.715], [7.9656, 61.9423, 0.0, 127.0422, 0.0, 5.9422, 0.0, 22.1038, 109.5812, 3.9468, 41.3158, 7.9704, 0.0, 16.2176, 58.121, 0.0, 63.5276, 3.5397, 21.8117, 40.4736, 0.0, 32.0828, 54.5115], [4.9651, 24.9836, 0.0, 148.4757, 3.4848, 0.0, 5.0056, 70.8455, 82.2549, 63.6925, 3.7392, 40.7459, 95.473, 53.8877, 57.5617, 37.26, 4.954, 14.9491, 4.9446, 46.0404, 56.1109], [0.0, 83.9592, 204.8927, 22.1646, 0.0, 19.964, 156.9229, 65.1666, 112.401, 0.0, 214.5754, 0.0, 0.0, 278.1554], [40.8078, 3.8893, 301.2381, 0.792, 20.5569, 23.987, 182.9751, 116.4306, 89.0528, 25.3216, 48.9964, 0.0, 102.718, 98.3783, 79.9832, 36.8253, 0.0, 64.3661, 11.3652, 82.4229, 71.1715], [22.0928, 52.4621, 5.0323, 322.2819, 3.7488, 0.0, 7.1744, 4.6339, 191.6397, 82.9725, 83.2154, 5.3464, 9.6315, 0.0, 96.5195, 94.4698, 114.7956, 69.8004, 7.7339, 104.5786, 6.3837, 93.4038, 73.7038], [6.8225, 41.9126, 1.7286, 512.8452, 3.4584, 0.0, 40.8374, 110.2183, 91.4043, 130.628, 9.5448, 33.5966, 0.0, 127.2705, 140.6236, 129.7432, 69.6141, 6.2726, 69.719, 8.6346, 108.023, 106.3574], [7.4833, 68.2506, 0.0, 188.6148, 5.6232, 7.1669, 5.7084, 27.0845, 286.4402, 188.9082, 84.9666, 46.1168, 29.4188, 0.0, 100.947, 179.7088, 118.008, 107.8677, 20.1366, 62.016, 18.7821, 77.5278, 151.9392], [7.5905, 98.5446, 0.0, 392.0382, 5.3064, 0.0, 0.0, 49.7582, 244.3916, 144.6861, 88.5988, 14.4976, 65.4276, 0.0, 147.637, 123.3263, 159.6386, 87.3747, 12.8304, 85.4515, 9.963, 93.5361, 109.1563], [29.1654, 65.3638, 0.0, 338.4545, 7.3392, 0.0, 0.0, 54.1443, 272.6788, 55.5243, 135.4277, 7.7408, 94.1473, 94.4265, 237.4218, 110.9931, 101.0988, 7.1636, 85.9738, 11.5866, 133.2261, 111.8219], [0.0, 79.2277, 78.6634, 689.5742, 4.5408, 68.5087, 8.8616, 143.2532, 355.6292, 437.9154, 205.3468, 9.4464, 49.3985, 7.3136, 316.6065, 282.0787, 195.8933, 210.9537, 51.8206, 188.5939, 5.535, 148.4406, 152.6056]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

