created: 20230610101822000
creator: Drevarr
modified: 20230705163534676
modifier: drevarr
tags: ChartData
title: 202306101018_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tomitigas", "Drevarr Moonwillow", "Gamora Titus", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Gestern Yesteryear"];
const professions = ["Tempest", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.7532, 0.0, 0.0, 18.7282, 15.0417, 9.3366, 17.342, 98.7743, 21.252, 13.9104, 19.9728, 24.5642, 14.5527, 0.0, 24.1475, 53.0221, 38.8416, 1.4994, 76.7533, 10.6564], [4.6777, 13.1142, 0.0, 2.3232, 0.9969, 10.9933, 12.0866, 18.33, 10.1395, 10.464, 14.544, 7.2708, 12.0335, 11.9392, 8.9801, 24.0836, 120.9642, 85.5984, 37.922, 226.1631, 58.9585, 26.3424], [34.353, 14.036, 4.8418, 46.4482, 20.9196, 77.1267, 101.5849, 22.0239, 22.452, 88.7184, 61.1996, 48.9957, 55.7648, 82.1328, 165.0104, 101.6285], [10.5206, 5.544, 3.5798, 40.4666, 16.1109, 36.946, 41.8779, 21.4275, 63.684, 47.7072, 34.7662, 32.1444, 63.103, 18.5736, 71.5806, 61.2258, 62.0262, 22.4154, 130.4721, 99.2103, 63.9117, 40.6638, 8.4801], [110.7265, 41.1005, 103.6867, 35.6292, 82.548, 52.5744, 94.7285, 128.0695, 112.4032, 54.6132, 184.8168, 95.9812, 86.0574, 60.1097, 258.8528, 110.7771, 30.7776, 77.2065, 47.0288], [23.6621, 53.7801, 0.0, 76.4491, 38.6859, 132.6429, 109.1792, 282.502, 57.9716, 164.88, 95.2344, 181.8576, 206.4692, 132.132, 188.3602, 276.7624, 209.1832, 171.9312, 107.1041, 586.6947, 175.0014, 6.3616, 134.3034, 112.7521]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

