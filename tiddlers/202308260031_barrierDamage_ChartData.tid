created: 20230826003133000
creator: Drevarr
tags: ChartData
title: 202308260031_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Xi Ming Zhao", "Wren Raveness", "Jinxi Greenphene", "Rina Of Theros", "Greg The Knight", "Budget Chicken", "Adrinz", "Darks Na", "Glorious Gluvs", "Drevarr Moonwillow", "Venomina The Sly", "Air One Com", "Koralia Danai", "Flora Lumos", "Vivy Mei", "Tegan Parker", "Mort\u00e4rion", "Rozaalyna", "Newtype Khan", "Wall Knot", "Mmathuss", "J\u00e2sm\u00eene", "Solus Luxes", "Tribal S", "Forever Dreaming", "Mistwalker Cael", "Ryvalia Fazebringer", "Vylade Vinzanti", "Bella Sassy", "Lord Erin The Wise", "Jimbo The Pleb", "Xanvias Einzbern", "Black Raspberry Pie", "Eibh\u00ebar", "Bee Nemesis", "Arcanophage Farra", "Luke The Ghastly", "Brutal Araden", "Lucky Luprac\u00e1n", "Keypek The Drunk"];
const professions = ["Weaver", "Chronomancer", "Vindicator", "Reaper", "Firebrand", "Firebrand", "Guardian", "Firebrand", "Berserker", "Scrapper", "Druid", "Firebrand", "Firebrand", "Reaper", "Soulbeast", "Tempest", "Scrapper", "Reaper", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Druid", "Scourge", "Herald", "Chronomancer", "Tempest", "Firebrand", "Weaver", "Berserker", "Berserker", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scourge", "Renegade", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[388, 2598, 2071, 4009, 1392, 0, 60, 0, 0, 0, 16347, 0, 3069, 4747, 3486], [3123, 763, 0, 0, 1737, 0, 2, 415, 0, 0, 11176, 0, 670, 0, 1285, 941, 1498, 0, 0, 3606, 278, 0, 18160, 0], [0, 15533, 3304, 0, 12220, 0, 0, 19680], [475, 1248, 1955, 3967, 0, 0, 0, 0, 0, 7156, 0, 0, 0, 612, 445, 4605, 0, 0, 441, 2526, 0, 29584, 0], [13507, 0, 0, 3908, 0, 0, 35139, 2425], [0, 0, 2069, 3480, 2022, 0, 805, 0, 0, 12045, 0, 471, 2845, 6352, 3748, 0, 762, 0, 0, 20181, 258], [7612, 0, 0, 0, 2976, 0, 53233, 0], [1539, 2060, 0, 45, 2459, 0, 0, 0, 0, 10063, 0, 0, 0, 206, 6170, 2467, 6151, 0, 3796, 0, 0, 31356, 0], [261, 475, 0, 0, 421, 1014, 240, 641, 1005, 475, 8568, 0, 1410, 0, 0, 0, 6269, 3164, 0, 3632, 2802, 0, 36025, 295], [4526, 8465, 4949, 3765, 3925, 0, 621, 976, 0, 1120, 21558, 0, 1015, 2293, 9017, 10328], [7149, 0, 0, 2664, 8199, 4208, 2025, 1217, 3693, 0, 42477, 2387], [553, 1669, 4492, 6050, 215, 0, 1265, 0, 0, 14545, 0, 0, 354, 3459, 2964, 3629, 0, 5891, 2052, 0, 40051, 1470], [713, 3651, 2569, 482, 0, 989, 0, 343, 0, 324, 11092, 684, 0, 2715, 5930, 8347, 3658, 2969, 2378, 1927, 45238, 2471], [1247, 5779, 6396, 3131, 2654, 0, 318, 0, 0, 334, 12357, 0, 0, 0, 1142, 8466, 1166, 5534, 0, 50931, 0], [2455, 0, 717, 0, 0, 3758, 13823, 3330, 0, 3541, 8594, 0, 67732, 860], [0, 0, 4178, 0, 0, 0, 3787, 9442, 7360, 0, 4863, 0, 74580, 6479], [8554, 5882, 10081, 10068, 8955, 1226, 2851, 556, 765, 51621, 0, 0, 12057], [471, 3970, 2374, 5237, 3115, 2, 271, 3750, 0, 4916, 22118, 0, 39, 5238, 17116, 1878, 0, 7714, 0, 35228], [1247, 255, 2909, 0, 2876, 1338, 6767, 0, 0, 235, 20260, 0, 288, 0, 4554, 6328, 9502, 3239, 0, 4616, 5567, 0, 44093, 2315], [7, 2990, 5564, 3131, 7564, 0, 0, 0, 0, 667, 14428, 0, 48, 1548, 3898, 7167, 4200, 0, 5730, 3106, 0, 60569], [2, 131, 130, 5995, 0, 0, 0, 145, 0, 0, 10734, 298, 0, 2159, 10750, 3144, 0, 6334, 3259, 0, 83450], [858, 0, 0, 4133, 0, 0, 4062, 2036, 3003, 11059, 0, 0, 2085, 3077, 11666, 8995, 2969, 2313, 0, 72302, 0], [0, 271, 12760, 0, 875, 1922, 3078, 10243, 9303, 0, 4566, 6661, 0, 80928, 5002], [0, 4190, 2921, 2052, 2455, 0, 843, 1244, 0, 686, 16958, 0, 2384, 6125, 12492, 6383, 0, 957, 3987, 71241, 1101], [0, 3582, 0, 0, 2844, 960, 853, 0, 0, 0, 21305, 0, 608, 3474, 5294, 9663, 7438, 8468, 0, 4634, 3293, 0, 67668], [5916, 825, 2462, 0, 3091, 293, 0, 630, 547, 2257, 14690, 271, 2440, 8596, 9803, 2676, 2969, 6347, 4587, 0, 75099, 1734], [1032, 6439, 1477, 1012, 3641, 270, 1446, 1272, 0, 0, 11378, 0, 1774, 0, 1775, 6154, 21641, 2188, 0, 8338, 7872, 0, 59365, 8327], [646, 0, 0, 0, 0, 0, 0, 263, 0, 12595, 0, 4629, 0, 623, 2755, 3337, 0, 0, 123670, 0], [1813, 3025, 5216, 5431, 2703, 0, 2362, 2949, 2607, 11084, 0, 912, 3315, 9276, 11231, 2783, 0, 4814, 9373, 0, 62648, 7321], [2480, 5228, 4856, 715, 4895, 0, 271, 0, 0, 421, 15600, 0, 1158, 1831, 0, 15624, 6201, 2042, 0, 0, 102645, 1590], [0, 375, 84, 5950, 4365, 0, 363, 0, 0, 950, 19227, 0, 0, 1323, 1066, 0, 11061, 0, 4304, 0, 0, 117510, 0], [286, 2682, 0, 401, 3200, 0, 3118, 0, 0, 1149, 17091, 0, 3273, 0, 4645, 19586, 7200, 2969, 11028, 1937, 0, 83395, 5847], [7531, 5928, 8951, 5384, 0, 2182, 3436, 0, 133963, 5828], [1599, 6891, 2794, 2675, 3395, 627, 0, 0, 0, 0, 27605, 0, 1124, 0, 5870, 7324, 16900, 6039, 0, 19123, 11769, 0, 103232, 2178], [6568, 1495, 0, 4225, 4008, 0, 5461, 3410, 0, 0, 13701, 1330, 0, 3656, 3676, 19350, 13280, 0, 7879, 1323, 135024, 154], [2516, 987, 0, 6723, 5862, 0, 2768, 4943, 0, 57, 30237, 0, 0, 4019, 3156, 23238, 8778, 2969, 10956, 1363, 124298, 241], [4177, 6663, 10898, 6454, 4675, 0, 0, 852, 0, 1519, 25888, 0, 0, 5089, 20089, 21897, 20849, 0, 13666, 14378, 0, 162145, 7895], [5220, 5133, 4292, 9685, 6302, 3082, 2207, 49, 0, 667, 62074, 0, 0, 0, 10083, 17135, 62783, 8967, 0, 27474, 2384, 0, 229912, 3943], [9774, 8804, 6252, 2546, 11778, 0, 3410, 649, 0, 2896, 55457, 6631, 0, 14234, 18303, 47834, 17433, 0, 27388, 13469, 239867, 3790], [10599, 11549, 1018, 10416, 9328, 2493, 1660, 5237, 0, 4041, 65125, 0, 4247, 1105, 29371, 21138, 52003, 26182, 0, 33574, 11626, 0, 446915, 5822]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

