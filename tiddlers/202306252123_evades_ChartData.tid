created: 20230625212343000
creator: Drevarr
modified: 20230705163535730
modifier: drevarr
tags: ChartData
title: 202306252123_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Ildemir Fares", "Tuff Spuffles", "Axunar", "Sygaldry Verdandi", "Xanvias Einzbern", "Irish Necroman", "Enter Effore", "Latedoctor", "Yummy Kiwi", "Tootsie Pop Khorne", "Rina Of Theros", "Newtype Khan", "Deutzaqio", "Audra Storm", "Miphest\u00f6", "Belvyn Brightblade", "Koralia Danai", "Permanent Dawn", "Shaca Booey", "Be\u00eb", "Fribble Bibble", "Rahani Sunray", "Ateriuz", "Sakis Ranger", "Crusader Siolith", "Tika Fiery", "Zayde Sunsabre", "Lord Erin The Wise", "Drevarr Moonwillow", "Smol Gluvs", "Caelon Cai", "Venomina The Siren", "Black Raspberry Pie", "Artakama Nahid", "Traidoruns Maximus", "Eibh\u00ebar", "Johosh The Mighty", "Aronorf Xideliesi", "Seiker Novus Terra", "Morton Saltbringer", "Elzy Lou", "Blancooo Padreee", "Tegan Parker", "Primal Clone", "Grasszanine", "Ryvalia Fazebringer", "Palm Sauce", "Mike The Archmagus", "Duke Silvver"];
const professions = ["Herald", "Tempest", "Firebrand", "Dragonhunter", "Firebrand", "Berserker", "Reaper", "Firebrand", "Reaper", "Firebrand", "Reaper", "Reaper", "Spellbreaker", "Vindicator", "Weaver", "Tempest", "Firebrand", "Firebrand", "Weaver", "Berserker", "Reaper", "Scrapper", "Chronomancer", "Berserker", "Druid", "Firebrand", "Firebrand", "Spellbreaker", "Weaver", "Scrapper", "Reaper", "Reaper", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Vindicator", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 6, 4, 19, 14, 23, 17, 9, 6], [14, 50, 30, 11], [0, 5, 11, 10, 26, 15, 17, 3, 0, 2, 0, 0, 1, 5, 4, 1, 0, 5, 2], [0, 1, 4, 1, 0, 14, 1, 5, 0, 0, 7, 22, 0, 0, 5, 0, 0, 0, 11, 15, 0, 1, 7, 14, 6, 0], [0, 0, 0, 11, 15, 12, 26, 5, 0, 0, 2, 7, 1, 3, 0, 5, 2, 0, 0, 1, 0, 0, 0, 14, 5, 8], [2, 2, 0, 0, 0, 19, 7, 11, 3, 27, 0, 4, 6, 0, 0, 14, 0, 0, 0, 1, 2, 2, 9, 12, 2], [0, 2, 0, 3, 10, 12, 4, 7, 2, 0, 14, 2, 8, 4, 4, 5, 0, 0, 6, 7, 1, 3, 32, 0, 1], [4, 23, 0, 1, 0, 8, 7, 0, 12, 9, 7, 9, 14, 26, 9, 4], [3, 1, 6, 5, 2, 7, 3, 3, 0, 1, 1, 1, 6, 10, 8, 0, 1, 17, 0, 1, 10, 13, 8, 27], [0, 0, 0, 11, 3, 1, 27, 13, 0, 1, 9, 2, 2, 1, 0, 2, 0, 2, 3, 0, 4, 4, 22, 23, 9], [0, 4, 2, 2, 1, 18, 7, 5, 1, 2, 2, 0, 7, 7, 8, 4, 0, 5, 12, 0, 1, 0, 36, 9, 9], [2, 4, 16, 5, 15, 11, 0, 0, 0, 16, 2, 0, 7, 9, 10, 0, 6, 7, 0, 9, 0, 11, 4, 8], [1, 7, 8, 9, 5, 12, 4, 13, 2, 0, 16, 0, 0, 5, 2, 5, 5, 0, 3, 5, 2, 2, 8, 23, 0, 6], [2, 5, 2, 9, 12, 35, 13, 8, 7, 10, 25, 19], [0, 3, 9, 30, 13, 1, 0, 6, 0, 10, 2, 4, 15, 18, 0, 6, 20, 5, 10], [0, 0, 1, 2, 24, 18, 0, 18, 0, 19, 3, 7, 1, 8, 0, 7, 22, 6, 20], [0, 3, 5, 13, 28, 33, 42, 30, 6], [0, 0, 5, 5, 7, 8, 24, 21, 10, 0, 5, 10, 2, 1, 0, 0, 1, 6, 1, 4, 8, 9, 18, 11, 6], [0, 2, 6, 24, 5, 5, 15, 3, 9, 0, 7, 0, 0, 4, 23, 0, 2, 6, 2, 12, 5, 9, 17, 11], [8, 14, 12, 0, 10, 1, 11, 10, 0, 23, 18, 1, 26, 7, 3, 10, 5, 13], [0, 0, 0, 1, 18, 19, 16, 9, 1, 8, 7, 17, 1, 1, 0, 15, 0, 22, 8, 1, 3, 13, 9, 1, 9], [0, 2, 24, 1, 12, 13, 6, 1, 4, 0, 3, 9, 7, 7, 5, 12, 2, 0, 5, 21, 9, 5, 4, 13, 5, 9], [0, 4, 4, 19, 10, 5, 17, 4, 2, 21, 0, 8, 6, 4, 8, 9, 0, 4, 33, 6, 6, 0, 5, 4, 7], [0, 1, 1, 3, 20, 26, 12, 2, 0, 0, 8, 0, 5, 0, 1, 0, 7, 0, 15, 14, 0, 7, 8, 41, 16, 6], [0, 0, 0, 6, 11, 13, 6, 46, 2, 0, 3, 11, 0, 1, 0, 1, 2, 0, 9, 32, 1, 4, 9, 23, 14, 8], [0, 0, 1, 15, 18, 18, 8, 8, 4, 0, 3, 2, 1, 3, 0, 0, 2, 0, 10, 13, 12, 4, 9, 22, 28, 28], [0, 0, 0, 4, 7, 26, 19, 26, 28, 11, 0, 6, 28, 2, 11, 5, 0, 1, 0, 3, 1, 8, 10, 15, 3], [0, 10, 0, 1, 13, 7, 9, 3, 1, 0, 39, 0, 0, 0, 20, 0, 9, 0, 8, 7, 4, 0, 16, 47, 0, 24], [0, 6, 7, 37, 13, 4, 21, 6, 0, 26, 0, 15, 9, 12, 11, 0, 0, 4, 21, 5, 8, 0, 23], [0, 1, 5, 12, 4, 18, 21, 22, 5, 0, 6, 5, 13, 1, 5, 7, 8, 0, 15, 30, 3, 12, 1, 21, 4, 14], [0, 3, 3, 4, 14, 13, 16, 0, 1, 0, 3, 11, 6, 18, 22, 14, 13, 0, 6, 14, 2, 7, 8, 1, 13, 46], [1, 3, 1, 8, 9, 42, 5, 14, 7, 8, 0, 28, 13, 4, 7, 6, 0, 17, 14, 1, 11, 3, 17, 10, 11], [0, 7, 0, 0, 9, 63, 27, 13, 5, 21, 0, 0, 1, 5, 2, 4, 0, 2, 4, 0, 5, 8, 60, 8, 4], [23, 9, 29, 1, 0, 14, 0, 27, 2, 17, 16, 4, 0, 9, 17, 22, 14, 9, 25, 5, 7], [0, 0, 0, 0, 9, 74, 59, 0, 3, 0, 0, 0, 8, 0, 0, 0, 7, 0, 7, 19, 1, 5, 9, 8, 35, 7], [0, 5, 1, 14, 10, 4, 23, 22, 3, 1, 7, 15, 2, 3, 5, 7, 6, 8, 17, 6, 14, 13, 38, 27], [9, 20, 4, 16, 7, 11, 24, 6, 0, 21, 25, 6, 9, 8, 35, 27, 25], [0, 2, 1, 5, 11, 35, 4, 14, 21, 0, 23, 6, 5, 4, 2, 6, 7, 0, 15, 9, 0, 12, 4, 32, 27, 14], [4, 1, 3, 15, 44, 13, 23, 11, 3, 11, 5, 9, 7, 3, 15, 5, 0, 12, 16, 6, 1, 4, 27, 17, 14], [0, 1, 2, 19, 8, 21, 5, 86, 7, 10, 49, 23, 0, 16, 12, 9, 0, 8, 9], [2, 5, 3, 10, 17, 11, 14, 30, 7, 0, 17, 25, 0, 4, 22, 4, 1, 12, 27, 3, 16, 16, 42, 1, 7], [0, 0, 1, 10, 31, 0, 89, 37, 24, 0, 20, 0, 0, 14, 5, 10, 19, 0, 19, 2, 6, 3, 22], [0, 4, 3, 9, 0, 5, 24, 28, 10, 19, 1, 8, 4, 12, 6, 7, 0, 22, 34, 10, 20, 13, 50, 11, 22], [0, 3, 4, 10, 78, 19, 4, 1, 0, 5, 16, 41, 7, 1, 4, 9, 0, 12, 20, 2, 0, 6, 46, 27, 10], [0, 1, 7, 8, 60, 18, 32, 18, 7, 0, 9, 0, 3, 2, 6, 8, 6, 0, 15, 23, 0, 27, 10, 24, 25, 17], [0, 6, 11, 23, 41, 83, 37, 50, 22, 0, 10, 3, 15, 3, 2, 4, 10, 0, 16, 49, 2, 2, 14, 47, 0, 13], [1, 1, 7, 36, 38, 21, 45, 37, 31, 0, 2, 8, 14, 9, 22, 36, 17, 0, 21, 33, 9, 19, 13, 45, 34, 32], [0, 7, 21, 0, 13, 7, 18, 27, 19, 0, 47, 4, 37, 42, 14, 40, 42, 2, 11, 35, 4, 20, 18, 31, 35, 49], [7, 5, 30, 35, 34, 3, 50, 22, 9, 0, 40, 2, 9, 9, 28, 15, 14, 0, 22, 55, 5, 18, 19, 49, 63, 34], [24, 71, 20, 15, 0, 9, 15, 12, 19, 25, 38, 38, 3, 27, 58, 36, 38, 31, 78, 11, 23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

