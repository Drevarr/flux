created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Chronomancer_Dps', 'Chronomancer_Support', 'Dragonhunter_Dps', 'Druid_Support', 'Firebrand_Dps', 'Firebrand_Support', 'Harbinger_Condi', 'Herald_Dps', 'Renegade_Dps', 'Scourge_Dps', 'Scrapper_Dps', 'Scrapper_Support', 'Spellbreaker_Cele', 'Tempest_Support', 'Vindicator_Dps', 'Vindicator_Support', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[1.4462, 9.4505, 1.6923, 0.1956, 0.3403, 4.037, 14.4538, 33.4692, 23.7471, 3.6833, 531.1142, 26.1765, 17.6446, 2.9631, 5.1733, 6.3215, 20.8781, 1.2126, 1.7226, 1.9571, 0.5234, 6.3135, 0.8224, 7.7809, 61.9786], [8.818, 26.848, 8.8485, 6.624, 5.855, 38.3391, 32.2121, 337.9818, 42.2959, 27.2143, 4.1704, 5.8194, 66.4669, 3.9142, 21.57], [5.6775, 4.2514, 16.4067, 0.605, 8.6033, 13.7351, 23.2398, 8.5255, 10.9539, 6.7521, 29.0979], [0.1063, 0.1276, 11.768, 1.7405, 8.9505, 10.4293], [117.8554, 186.5939, 39.2851, 921.0739, 953.2558, 55.4931, 1683.6437, 2273.432, 130.3889, 1960.6156, 1907.619, 121.3789, 178.6263, 37.8714, 1354.6218, 1222.0068, 8.1874, 108.6466, 274.3718, 38.8766, 171.826, 182.969, 14.0019, 83.9125, 74.6929, 34.6414, 106.0266, 63.0694, 2037.5212, 1948.5832, 164.4516, 923.9175, 1147.4272, 123.4345, 839.6534, 582.8604, 18.1103, 835.8502, 677.701, 67.1581, 3269.7523, 3065.7519, 122.6619, 2766.1374, 3165.7435, 227.3314], [19.2059], [23.5516, 162.4451, 4.9992, 18.1081, 33.9249, 14.8864, 24.1776, 193.6424, 10.7965, 28.2943, 26.039, 19.3306, 36.2628, 88.1833, 34.8881, 63.9635, 174.7207, 16.8806, 16.9019, 50.6759, 26.1883, 20.1079, 75.9415, 31.2483, 34.6728, 245.9115, 30.0428, 14.9639, 48.5822, 13.8423, 73.7073, 53.0397, 42.8881, 14.2752, 114.0256, 22.0395, 12.366, 25.0257, 2.2813, 8.9391, 38.2895, 88.006, 60.2467, 38.1336, 25.739, 31.1583, 28.3086, 47.4481, 20.6883, 15.2336, 16.8605, 74.3732, 1.953, 8.1015, 0.5589, 8.8643, 16.4331, 4.1165, 64.1322, 8.2708, 9.8798, 9.5341, 20.85, 26.0093, 185.4132, 2.0141, 8.7657, 23.3824, 245.9706, 19.715, 11.7029, 19.972, 10.8152, 30.3582, 235.4708, 38.492, 21.1175, 65.9277, 53.3644, 66.6162, 102.3157, 40.3706, 40.6123, 17.7768, 36.1738, 9.766, 18.5422, 14.4906, 30.7101, 55.4815, 8.6706, 32.6424, 78.6378, 8.1435, 6.0322, 41.4439, 9.8709, 26.3497, 36.9279, 119.1983, 1.9322, 60.3415, 19.1524, 68.5804, 57.1173, 35.211, 25.6858, 165.8908, 498.229, 51.9528, 75.6368, 31.1289, 37.4904, 66.6438, 103.1464, 104.7475, 320.0836, 67.3304, 37.8515, 109.0351, 37.9387, 77.5475, 110.14, 37.5718], [22.5488], [1.8303], [15.031], [4.8697, 33.2459, 101.4342, 6.9216, 12.7067], [13.1734, 22.0226, 7.5771, 4.1585, 12.8157, 18.1752, 6.3268, 27.8523, 5.3654, 4.317, 7.3722, 22.5172, 10.9303, 14.7629, 28.0653, 32.4114, 13.1445, 16.4514, 24.8279, 5.3037, 5.0544, 11.1685, 81.1947, 36.4879, 4.0911, 12.1205, 29.8738, 2.7103], [193.5372, 3.2911, 692.1568, 51.0542, 388.058, 1443.9389, 102.9803, 632.4193, 1285.5931, 61.5138, 522.7765, 203.2898, 1.8211, 69.0165, 975.0018, 29.0742, 446.243, 270.3277, 8.7854, 247.54, 0.2261, 34.3998, 322.1185, 0.2553, 56.9629, 599.1591, 11.7496, 56.5989, 1540.3909, 64.1039, 535.2669, 1148.8657, 7.7468, 821.6383, 641.0299, 31.765, 930.36, 17.2825, 365.6356, 3120.9407, 150.3669, 1922.9516, 2703.7076, 188.7362, 1636.0637], [13.6406, 32.0349, 0.1773, 3.1778, 6.2026, 7.071, 9.0484, 13.5848, 29.5255, 22.8401, 0.6855, 5.37, 23.4847, 28.0225], [249.75, 458.6146, 27.9076, 827.5541, 40.573, 474.6976, 48.3761, 141.8613, 13.7661, 382.1153, 72.8185, 96.2379, 25.6196, 3.1115, 66.2731, 498.1135, 12.9358, 18.4303, 649.8716, 121.4733, 756.8923, 50.295, 61.671, 45.6363, 342.2034, 44.6519, 200.7491, 5.3887, 36.1743, 100.8505, 1063.1388, 19.3128, 235.3247, 138.6576, 1157.3048, 149.3313, 24.7147, 223.235], [0.9665, 12.0801, 1.7782, 46.1189, 0.9973, 17.1626, 8.8061, 47.6636, 20.4162, 4.1818, 1.7249, 26.358], [5.5546, 11.3263, 59.2012, 28.9835, 26.1027, 21.3015, 17.5116, 33.5753, 40.2009, 111.3796, 122.9462, 19.0974, 77.539, 86.2772, 214.5797], [21.8598, 26.5774, 66.8852, 11.4158, 12.8344, 127.6339, 30.2422]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
