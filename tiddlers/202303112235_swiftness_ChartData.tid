created: 20230311223557000
creator: Drevarr
modified: 20230705163521835
modifier: drevarr
tags: ChartData
title: 202303112235_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Dark Sidiuz", "Seren Nightroad", "Sofya De Nova", "Smol Gluvs", "\u00c1rkantor", "Mac Chiato", "Mom You Never Had", "Legendary Hacker", "Vopiscus Zergherdus", "Tegan Parker", "Husky Guard", "Black Raspberry Pie", "Ryvalia Fazebringer", "Raimaru Hanzo", "High Sorcer Baradun", "Zadie Miststep", "Aronorf Xideliesi", "Demon Sekhmet", "Venomina The Fierce", "K\u00f4sair", "Minnie Marshmallow", "Drevarr Moonwillow", "Blanco Padre Guard", "Sygaldry Verdandi", "Koralia Danai", "Zaylen Harker", "Johosh The Great", "Bella Sassy"];
const professions = ["Chronomancer", "Scourge", "Scourge", "Weaver", "Scourge", "Vindicator", "Tempest", "Tempest", "Herald", "Scrapper", "Tempest", "Dragonhunter", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[95.5584, 0.0, 0.0, 163.9912, 0.0, 2.808, 0.0, 0.0, 74.2026, 219.7236, 44.0325, 58.9883, 0.0, 10.4412, 205.9008, 127.8137, 14.9302, 0.0, 23.7533, 31.1875, 0.0, 61.152], [1028.7459, 198.4477, 26.1479], [760.4856, 108.9128, 0.0, 28.4767, 0.0, 114.075, 36.6381, 32.186, 32.6752, 99.6466, 70.3238, 14.3977, 0.0, 0.0, 0.0, 34.3138, 0.0, 51.9777, 0.0], [360.3348, 40.1672, 66.1116, 20.4465, 0.0, 156.6864, 51.1814, 62.4994, 60.5337, 231.8662, 198.36, 26.4262, 29.935, 6.3756, 35.7672, 10.0251, 31.2865, 10.0105, 0.0, 40.365, 39.9017, 6.6528, 50.688], [544.9815, 58.2696, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 127.0557, 158.0468, 96.1875, 0.0, 108.4275, 24.6792, 17.1569, 0.0, 63.9561, 0.0, 113.1384, 61.3755, 71.7116, 26.1184, 77.184], [686.826, 28.5513, 34.8979, 119.6475, 53.1702, 35.6616, 97.4685, 160.6959, 220.1344, 247.6709, 120.1275, 0.0, 29.5614, 0.9702, 0.0, 0.0, 0.0, 28.192, 0.0, 51.888], [519.1011, 43.8311, 145.6298, 0.0, 119.5839, 98.9118, 173.4016, 15.5663, 16.0121, 227.6259, 159.885, 0.0, 34.3638, 0.0, 0.0, 0.0, 0.0, 24.898, 33.4354, 3.8352, 41.9175, 15.1024, 98.3136, 161.184], [416.0772, 90.7019, 253.9567, 43.0538, 145.314, 71.1786, 103.7535, 388.3711, 462.3412], [425.6886, 366.3987, 250.7288, 31.2255, 93.6468, 32.8112, 15.3041, 67.2035, 68.2341, 148.512, 154.7843, 75.0532, 144.4212, 117.984], [1302.4809, 63.2633, 0.0, 5.2568, 129.3449, 88.452, 565.9325], [695.2869, 29.3112, 45.6165, 108.81, 132.2886, 281.9494, 117.5525, 262.5119, 312.5025, 0.0, 46.9568, 0.0, 27.6388, 0.0, 67.1646, 0.0, 72.5535, 24.7993, 4.3736, 38.256], [835.1406, 59.0838, 0.0, 80.1735, 4.0221, 89.7156, 261.0813, 160.6959, 42.3085, 438.098, 166.725, 0.0, 58.5893, 8.3754, 0.0, 94.9716, 0.0, 23.9476, 14.476, 21.888], [552.9447, 0.0, 0.0, 75.0457, 0.0, 44.1558, 182.631, 95.9728, 82.4039, 113.9093, 800.7075, 209.466, 67.9273, 9.0922, 0.0, 103.5504, 1.47, 90.3941, 0.0, 11.7348, 31.2], [1213.8903, 13.2986, 0.0, 24.5745, 57.7809, 0.0, 0.0, 3.2771, 363.072, 99.0684, 212.04, 0.0, 24.3322, 23.83, 0.0, 0.0, 0.0, 0.0, 175.0795, 69.36, 69.138, 38.8206, 24.3012, 109.008], [1357.7256, 56.6412, 89.1893, 60.5978, 0.0, 0.0, 246.3981, 288.5036, 250.4663, 330.7418], [851.067, 64.8917, 48.6115, 84.5595, 185.0657, 252.72, 373.7923, 282.6516, 212.4538, 98.1047, 577.5525, 104.5508, 0.1601, 0.0, 65.8224, 0.0, 60.4415, 88.6829], [1486.6299, 67.7957, 214.7605, 31.2825, 189.2349, 159.4944, 465.1078, 280.1938, 454.5886, 534.2753, 477.7312, 0.0, 63.0182, 0.0, 59.1354, 32.879, 65.6673], [1903.7025, 0.0, 0.0, 0.0, 120.7611, 118.4274, 195.6362, 129.9144, 129.3989, 556.8259, 603.4162, 14.1547, 191.4557, 15.8374, 49.4424, 71.1148, 0.0, 109.9018, 0.0, 54.876, 30.3772, 139.1972, 227.2732, 171.024], [1206.4248, 120.6916, 221.0032, 200.8853, 163.9742, 152.2638, 415.3248, 468.6282, 487.1336, 188.307, 984.5325, 190.1475, 161.9476, 1.7136, 51.0392, 12.9482, 163.5907, 6.6427], [290.1591, 5.8894, 298.4746, 292.056, 187.8125, 254.475, 643.264, 741.5654, 321.9351, 514.6158, 810.7537, 249.8648, 277.9522, 47.712, 75.404, 70.7153, 317.808], [1674.2628, 117.8962, 115.1003, 130.4239, 357.8094, 442.3139, 283.2368, 334.3022, 525.7947, 438.8287, 1.215, 34.5773, 112.3584, 107.129, 49.343, 138.1366, 70.3584, 18.8088, 337.617, 459.328, 309.9096, 341.712], [1598.1147, 75.4763, 0.0, 32.0888, 13.3907, 554.7204, 798.4864, 31.4838, 373.6166, 990.1054, 1035.6188, 69.255, 299.2962, 80.9609, 21.42, 79.8709, 50.3475, 294.9681, 26.2181], [1776.789, 74.3093, 191.5293, 127.3552, 37.0328, 261.6354, 513.7722, 463.1273, 409.6765, 989.9126, 775.6988, 171.8618, 81.3206, 24.0887, 71.4672, 36.2934, 10.241, 50.9082, 0.0, 47.6952, 175.0185, 62.6044, 28.3668, 138.048], [1624.4928, 108.0443, 272.992, 228.1365, 336.5321, 333.5202, 465.1078, 246.9544, 597.2658, 861.7405, 865.26, 133.407, 168.671, 9.2862, 14.0952, 77.1806, 72.4265, 31.3891, 55.9944, 140.4], [2291.9085, 51.7288, 92.6689, 120.4668, 251.0352, 720.176, 94.9194, 230.5488, 411.1144, 631.6313, 4.131, 211.8926, 20.4112, 130.3344, 38.8314, 182.0717, 0.0, 154.4688, 440.8065, 238.2307, 121.8448, 241.728], [1433.376, 71.9481, 157.9618, 243.036, 84.5622, 320.8842, 943.081, 831.8033, 578.3897, 369.4826, 678.6562, 397.0013, 293.5867, 96.4194, 145.2528, 56.1913, 39.4205, 285.8987, 0.8064, 20.5224, 33.7927, 224.1767, 193.1468, 88.512], [2177.4375, 54.4157, 227.6042, 165.765, 224.3547, 377.0442, 846.7312, 808.2782, 790.7133, 1180.3398, 903.9488, 264.0195, 169.8982, 23.9224, 29.1984, 48.2981, 273.6209, 0.0], [2210.2857, 57.0483, 448.7609, 33.1852, 350.3641, 385.2576, 969.5107, 432.5798, 1085.8314, 1122.325, 924.255, 113.967, 282.5412, 48.9443, 23.1, 77.0537, 98.98, 261.0863, 84.8131, 614.7744, 351.6413, 386.5025, 211.1648, 384.672], [2432.7576, 129.4849, 117.7422, 226.653, 380.9713, 536.4684, 887.145, 872.7673, 501.5835, 1173.0156, 1638.6075, 358.9717, 377.1485, 76.5626, 20.8656, 108.8802, 7.546, 163.2913, 0.0, 185.1096, 181.746, 202.7516, 158.8048, 271.44]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

