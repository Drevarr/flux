created: 20230527220043000
creator: Drevarr
modified: 20230705163531875
modifier: drevarr
tags: ChartData
title: 202305272200_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Anita Strips", "Zadey Starbolt", "Drevarr Moonwillow", "Tegan Parker", "Daddy Demon", "Black Raspberry Pie", "Johosh Of The North"];
const professions = ["Chronomancer", "Scrapper", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[188.4847, 0.0, 82.4964, 31.4093, 62.448, 0.0, 204.36, 32.8536, 129.1997, 324.37], [0.0, 0.0, 11.9389, 0.0, 24.804, 0.0, 126.153, 15.2118, 31.1338, 139.0052, 33.8486, 41.067, 118.9818, 10.4194, 67.8712, 212.4738, 60.6312, 52.7051, 0.0, 16.2037, 12.2115, 0.0, 52.1829, 18.1763, 25.9392], [0.0, 11.758, 10.7604, 0.0, 25.908, 0.0, 134.6418, 8.8614, 67.1853, 169.3484, 38.8418, 32.643, 84.0157, 18.8722, 99.2275, 209.034, 46.7964, 122.7142, 0.0, 13.4987, 21.9827, 0.0, 73.0769, 37.6672, 35.7056], [194.1041, 158.436, 265.4023, 45.176, 198.9187, 185.22, 147.1932, 258.5506, 0.0, 130.0806, 41.3763, 0.0, 109.3901, 0.0, 55.6416], [223.884, 347.6373, 126.3944, 246.7357, 504.504, 145.6434, 188.8299, 37.352, 81.0716, 73.8246, 38.4275, 88.115], [183.7498, 468.828, 417.5695, 130.6492, 304.1161, 373.086, 145.0008, 290.4909, 0.0, 116.3432, 115.1712, 204.6083, 75.84, 172.2112], [196.8529, 0.0, 84.6997, 42.8154, 77.688, 86.3086, 408.7986, 83.2032, 242.1635, 587.1722, 185.0112, 374.139, 376.371, 78.6845, 300.1169, 399.8988, 256.5486, 409.3117, 0.0, 167.8186, 98.0394, 246.2229, 86.3818, 211.5008]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

