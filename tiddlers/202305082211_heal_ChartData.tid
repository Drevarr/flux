created: 20230508221143000
creator: Drevarr
modified: 20230705163529229
modifier: drevarr
tags: ChartData
title: 202305082211_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00f9gly", "Solus Sanctus", "Zady Stardust", "Sister Elon\u00edth", "Mac Aaroni", "Tegan Parker", "Artakama Nahid", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[765.8841, 1049.4098, 12.5758, 45.5728, 1446.7392, 1679.0581, 1056.0476, 243.3178], [311.9275, 234.9262, 0.0, 76.8276, 102.1291, 531.7811, 289.917, 7.6667, 80.785, 587.9284, 263.9231, 968.0435, 762.6078, 791.6357, 1.9592, 415.6996, 419.1533, 526.4875], [207.3913, 330.6148, 131.0265, 416.0257, 542.5768, 83.1429, 65.6262, 734.471, 852.75, 822.8261, 971.915, 554.2214, 468.4427, 439.24, 385.7875], [77.8696, 518.0328, 0.0, 676.7203, 699.1037, 194.3645, 865.7147, 249.0192, 1316.9565, 897.2745, 886.3286, 5.3673, 353.5296, 502.3, 1008.55], [698.2609, 519.8197, 240.7351, 1096.7554, 763.4191, 0.0, 155.514, 1581.6839, 1066.8654, 2122.9891, 344.4641, 833.2929, 71.3061, 767.1858, 835.5533, 1378.1625], [293.942, 568.4344, 208.1987, 986.0486, 1043.2905, 70.1429, 35.5888, 1696.442, 1014.4615, 2451.1196, 413.8889, 1047.9357, 100.3673, 827.6324, 651.0267, 1749.7], [597.2609, 599.2459, 174.4483, 274.2086, 638.1189, 1383.3817, 300.381, 168.5607, 1783.2826, 1532.75, 3056.1848, 1367.4575, 1642.0, 88.3061, 967.4111, 714.6467, 1382.125], [306.5217, 712.877, 9.6364, 306.1755, 1463.4432, 1993.3402, 62.4762, 117.243, 2587.5616, 1459.4615, 2186.4348, 2544.9085, 2421.5714, 11.9388, 1209.249, 1183.9933, 2862.1], [304.7586, 561.3245, 1826.5432, 2151.3859, 106.3571, 111.6355, 2821.9774, 1295.0577, 4750.25, 3355.0719, 3140.9, 13.9796, 1038.4387, 1244.76, 2479.4], [385.2899, 91.459, 194.3636, 168.3448, 572.4834, 2157.0878, 2957.0581, 382.5476, 246.0374, 3129.125, 1582.2308, 4153.2609, 1758.6144, 1422.1071, 791.5494, 629.8933, 2472.9125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

