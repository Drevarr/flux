created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Itacolomi", "Z\u00e9 Chamin\u00e9", "Blaize Harlot", "Nebula Davar", "Clean And Green", "Oo Dads Mad", "Blaize Harlot", "Rozaalyna", "Morv\u00e4rth", "Belvyn Brightblade", "Charr Surethang", "Rina Of Theros", "Elonith Requiem", "Venomina The Fierce", "Darks Na", "Zanos Engine", "Zaedy Zae", "Mort\u00e4rion", "Keypek The Drunk", "Cat Wigglebooty", "Lord Erin The Wise", "Primal Clone", "Tootsie Pop Rocks", "Rahani Sunray", "Jimbo The Pleb", "Lucky Luprac\u00e1n", "Bella Sassy", "Rafaellagabriela", "Daphne Agla\u00e9", "Revenant Brandorf", "Etchery Howls", "Eibh\u00ebar", "Sygaldry Verdandi", "Xanvias Einzbern", "Sub Train", "Tegan Parker", "Glorious Gluvs", "Koralia Danai", "Tribal S", "Ka Otik Nightm\u00e6r", "Drevarr Moonwillow", "Mistwalker Cael", "Ryzen Grimsaw", "Solus Luxes", "Morton Saltbringer", "Arcanophage Farra", "Jmbrage Rev"];
const professions = ["Firebrand", "Spellbreaker", "Reaper", "Scourge", "Druid", "Berserker", "Scourge", "Reaper", "Reaper", "Firebrand", "Berserker", "Reaper", "Reaper", "Spellbreaker", "Firebrand", "Scrapper", "Druid", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Chronomancer", "Scrapper", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Vindicator", "Druid", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Tempest", "Berserker", "Firebrand", "Druid", "Reaper", "Scrapper", "Herald", "Vindicator", "Firebrand", "Chronomancer", "Spellbreaker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15, 2, 0, 0, 0, 0, 3], [0, 20], [2, 1, 7, 0, 22], [0, 21, 25, 1, 0, 0, 0], [7, 4, 6, 4, 0, 36], [20, 1, 6, 4, 0, 0, 0, 32], [36, 8, 0, 0, 1, 0, 3, 11, 5, 5], [43, 11, 2, 2, 4, 11, 0], [36, 3, 2, 12, 3, 0, 17, 0], [65, 9], [61, 1, 1, 4, 2, 7, 0], [34, 8, 1, 2, 3, 0, 0, 4, 2, 3, 15, 0, 0, 0, 8], [2, 5, 1, 7, 18, 13, 2, 26, 3, 3], [25, 36, 4, 0, 0, 0, 15], [17, 3, 23, 8, 4, 0, 2, 29], [48, 3, 2, 8, 0, 0, 1, 8, 1, 1, 12, 0, 2, 1, 0], [36, 0, 2, 3, 3, 0, 0, 3, 27, 1, 16, 0, 0, 0, 7], [22, 11, 6, 14, 9, 0, 16, 20], [41, 12, 2, 6, 0, 0, 1, 14, 5, 6, 1, 0, 9, 0, 11], [17, 10, 2, 0, 7, 1, 1, 27, 9, 4, 11, 0, 4, 0, 15], [20, 3, 0, 3, 5, 4, 17, 53, 2, 2, 1, 8], [25, 10, 1, 7, 2, 0, 1, 24, 24, 2, 18, 0, 0, 0, 6], [25, 6, 0, 5, 2, 0, 1, 2, 10, 22, 27, 0, 13, 0, 8], [16, 15, 6, 72, 0, 3, 0, 10], [5, 30, 5, 3, 0, 0, 10, 3, 61, 0, 4, 0, 1, 0, 3], [10, 18, 9, 4, 1, 0, 2, 4, 29, 24, 19, 0, 0, 0, 7], [14, 5, 1, 2, 4, 0, 2, 24, 18, 37, 12, 0, 0, 0, 13], [33, 3, 0, 1, 3, 0, 2, 24, 12, 21, 25, 0, 4, 0, 5], [54, 5, 2, 6, 6, 0, 12, 9, 6, 11, 16, 3, 0, 0, 9], [3, 7, 2, 4, 5, 37, 21, 34, 16, 0, 5, 0, 8], [26, 4, 0, 0, 0, 1, 41, 29, 2, 18, 0, 0, 23], [23, 2, 3, 3, 12, 0, 7, 33, 25, 14, 19, 6, 1, 0, 6], [34, 1, 0, 2, 6, 4, 4, 12, 28, 19, 0, 1, 0, 46], [38, 0, 0, 1, 1, 1, 4, 12, 38, 7, 27, 0, 2, 0, 27], [52, 1, 2, 11, 2, 6, 34, 0, 2, 39, 0, 0, 0, 10], [1, 0, 3, 9, 0, 15, 27, 34, 19, 34, 2, 9, 0, 9], [27, 12, 6, 3, 19, 0, 3, 21, 12, 12, 33, 1, 1, 0, 13], [24, 2, 0, 6, 7, 8, 25, 32, 27, 11, 0, 0, 0, 23], [16, 2, 0, 7, 1, 2, 39, 17, 9, 26, 0, 0, 0, 48], [7, 0, 9, 0, 0, 19, 69, 24, 2, 35, 4, 0, 28], [22, 2, 2, 11, 5, 0, 4, 38, 12, 38, 62, 0, 4, 0, 12], [61, 21, 8, 14, 3, 0, 5, 22, 15, 0, 46, 2, 1, 0, 16], [10, 28, 6, 5, 5, 34, 6, 75, 3, 1, 3, 0, 54], [62, 12, 1, 18, 4, 0, 8, 30, 20, 16, 25, 0, 3, 0, 37], [57, 5, 5, 9, 7, 0, 1, 38, 46, 49, 63, 0, 4, 0, 23], [25, 36, 3, 2, 5, 0, 5, 48, 16, 67, 95, 1, 4, 0, 7], [102, 17, 5, 9, 4, 0, 10, 33, 64, 78, 33, 3, 2, 0, 24]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

