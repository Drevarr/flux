created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["My Birthday Girl", "Drevarr Moonwillow", "Tegan Parker", "Venomina The Sly", "Zaedy Zae", "Tribal S", "Nose Llama"];
const professions = ["Scrapper", "Scrapper", "Tempest", "Druid", "Druid", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[88.452, 13.6752, 15.9767, 0.0, 5.2083, 10.5815, 12.4397, 10.6353, 0.0, 3.4577, 13.1419, 25.0084, 19.2563, 12.4644, 23.3474, 20.1501, 0.0, 27.2384, 19.0183, 28.5327, 4.3375], [189.3528, 32.6832, 30.7998, 0.0, 11.5326, 21.3595, 4.1131, 27.378, 3.8713, 5.1503, 18.3836, 12.6298, 23.3848, 35.5368, 35.7942, 33.5521, 16.8916, 9.5228, 18.5587, 35.9856, 18.711], [192.6288, 97.9968, 17.0255, 0.0, 34.7256, 5.1498, 92.3832, 0.0, 44.0801, 19.0106, 6.566, 107.3728, 0.0, 42.0557, 2.1235, 52.8027, 3.8038, 43.8694, 3.7044, 22.9068], [229.32, 149.7936, 84.9178, 103.3539, 150.8598, 33.7075, 171.8847, 73.1808, 112.7095, 112.3403, 141.2947, 92.9858, 177.0697, 59.0347, 97.8557, 120.4714, 32.9109, 213.0912, 84.3696], [573.1908, 0.0, 60.6206, 0.0, 148.2669, 166.1587, 105.3193, 204.3522, 37.5515, 115.3429, 147.2156, 170.4717, 186.7671, 214.7652, 197.3958, 112.0153, 0.0, 0.0, 194.4369, 91.5988], [606.1692, 332.4816, 100.3352, 133.6905, 31.2858, 159.8098, 214.3206, 102.4144, 115.2677, 293.3908, 211.5106, 237.2545, 182.5707, 313.0585, 121.4988, 122.2536, 82.7544, 256.5297, 66.4808], [982.6908, 210.7248, 204.4461, 94.9666, 242.3585, 135.3818, 254.1591, 94.3342, 56.9318, 186.1187, 287.1118, 238.8083, 212.5578, 179.1484, 301.5441, 223.3738, 85.2264, 185.6228, 310.5522, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

