created: 20230626011754000
creator: Drevarr
modified: 20230705163537927
modifier: drevarr
tags: ChartData
title: 202306260117_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Be\u00eb", "The Fancy Cheese", "Mistwalker Cael", "Lord Erin The Wise", "Cerys Fireblade", "Xyntharos", "Rozaalyna", "Arriasa", "Zayde Sunsabre", "Xanvias Einzbern", "Johosh The Mighty", "Sakis Ranger", "Newtype Khan", "Blancooo Padreee", "Tribal S", "Arcanophage Farra", "Drevarr Moonwillow", "Mr Juebacca"];
const professions = ["Tempest", "Reaper", "Scrapper", "Vindicator", "Weaver", "Berserker", "Vindicator", "Reaper", "Druid", "Spellbreaker", "Berserker", "Berserker", "Druid", "Spellbreaker", "Spellbreaker", "Druid", "Spellbreaker", "Scrapper", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.0639, 0.0, 24.1609, 60.812, 159.6209, 42.8574, 12.7082, 8.528, 75.8354, 18.7038, 432.2, 66.4848, 0.0], [31.6143, 104.9252, 9.6114, 100.2456, 25.3559, 127.6799, 36.7353, 54.97, 243.8684, 42.5447, 32.6144, 76.1558, 55.1601, 103.6031, 34.4407, 319.8, 29.484, 0.0], [71.2962, 52.8116, 72.8978, 140.7672, 56.7648, 0.0, 28.38, 81.5724, 11.913, 58.7673, 11.9135, 60.0754, 37.381, 164.139, 59.4297, 0.0, 63.802, 79.0803, 28.1926, 45.1633, 32.5478, 24.6543, 26.1469, 13.1404, 396.4, 39.4848, 21.402], [21.5541, 44.9945, 112.0451, 221.5231, 116.5536, 24.6523, 46.0513, 56.7, 15.838, 144.1377, 41.4313, 78.4101, 131.8171, 285.384, 142.6313, 28.4416, 62.238, 101.6587, 31.0346, 16.785, 45.2838, 50.2839], [46.899, 20.892, 129.0366, 52.9632, 26.2416, 15.4766, 57.6828, 15.2486, 38.1011, 21.6573, 46.1878, 183.6511, 232.9771, 118.0397, 31.8784, 91.034, 59.3102, 40.129, 44.7174, 55.0407, 43.5742, 55.6552, 3.9992, 353.4, 43.5888], [26.487, 78.8684, 154.8976, 111.379, 301.8816, 36.3317, 86.805, 26.6868, 29.5066, 138.4263, 102.6366, 33.9387, 38.916, 192.2243, 9.7727, 64.1439, 58.5721, 73.5118, 74.9382, 0.0, 32.1305, 305.0, 25.92, 37.1271], [51.8076, 45.6925, 61.4597, 184.7261, 21.3408, 82.971, 12.9287, 92.2091, 61.2053, 107.1215, 144.5297, 271.0283, 206.1596, 41.7157, 68.448, 116.7109, 39.6459, 63.8592, 33.8512, 0.0, 44.6346, 6.3963, 390.8, 40.2408, 9.8406], [88.8651, 105.7627, 0.0, 193.9871, 114.912, 30.8616, 21.0769, 46.6074, 33.0053, 35.8466, 40.94, 88.7087, 111.5376, 273.7957, 235.123, 37.3115, 71.668, 142.3221, 57.0958, 60.1647, 39.4372, 60.7386, 41.2972, 28.1065, 399.0, 33.588], [68.6475, 85.5221, 98.996, 378.4662, 207.36, 38.2906, 29.7044, 135.757, 249.4299, 117.2885, 102.0551, 49.3714, 131.56, 346.538, 79.8602, 76.8859, 59.9564, 147.3408, 49.1485, 31.0003, 756.4, 40.4352], [87.3342, 83.9401, 331.7908, 23.8464, 27.9418, 85.8438, 101.8282, 72.0953, 189.5886, 209.8329, 496.7411, 46.6343, 126.73, 296.3265, 67.8954, 96.3781, 36.1973, 81.96, 104.5395, 62.8576, 814.8, 97.1136, 29.4524], [39.4875, 103.3431, 130.4104, 265.3585, 147.2256, 34.151, 125.1369, 78.5862, 32.0146, 120.6909, 159.6251, 193.7237, 168.8198, 506.2539, 202.8807, 41.5716, 142.646, 329.6886, 76.8193, 67.8087, 43.7942, 48.7235, 12.077, 24.2438, 419.6, 108.432, 43.1006], [70.0569, 91.7106, 177.0489, 311.787, 215.6544, 142.7026, 137.6998, 60.8958, 29.5066, 63.9527, 79.0142, 140.28, 266.5097, 554.6827, 312.1767, 65.2592, 77.372, 161.7552, 84.0948, 43.6664, 58.504, 84.4957, 64.851, 20.7911, 373.2, 29.3544, 10.1966], [86.9697, 44.4827, 117.3614, 398.8404, 173.9232, 71.6654, 51.4624, 84.0672, 0.0, 122.9454, 98.7473, 328.6202, 166.1713, 324.8189, 22.1324, 4.6305, 125.948, 234.9944, 42.0616, 59.241, 49.6782, 70.14, 36.3511, 23.0515, 953.6, 56.1168, 12.6295], [97.1757, 157.5506, 272.1784, 359.4503, 149.5584, 61.021, 84.7616, 108.864, 128.5107, 247.1674, 242.9764, 659.1506, 416.9642, 0.0, 155.664, 303.7403, 100.9763, 78.5102, 154.695, 139.3047, 91.5981, 56.5855, 717.2, 65.664, 60.2004], [78.0759, 166.4843, 176.9684, 515.1586, 342.3168, 23.987, 114.0119, 104.4414, 55.0255, 278.4307, 40.5715, 269.7932, 282.8545, 694.9533, 345.9218, 55.3396, 207.966, 305.0883, 131.2151, 125.2023, 156.7804, 189.1985, 142.8355, 78.6683, 225.8, 33.8831], [122.7879, 143.5916, 372.3826, 451.5664, 143.829, 10.7092, 282.9398, 195.161, 262.7714, 324.473, 837.8182, 499.4827, 0.0, 191.636, 107.8368, 99.0153, 124.3743, 134.7716, 158.1465, 51.5975, 21.6108, 1033.4, 57.024, 19.8789], [105.2676, 164.8558, 422.5653, 462.6796, 235.5264, 128.8795, 113.4065, 141.2964, 19.5499, 317.8093, 151.6827, 279.1556, 174.495, 675.4088, 420.9262, 198.536, 396.5249, 156.0542, 146.3507, 167.2821, 104.1567, 173.3282, 36.9247, 943.8, 144.7632, 48.0654], [134.2332, 165.6468, 112.77, 478.9789, 366.8544, 79.2792, 115.639, 279.6444, 68.4684, 345.5397, 185.9495, 265.8922, 395.7541, 748.225, 751.41, 29.4088, 213.578, 199.4981, 104.9551, 121.6988, 56.009, 160.6042, 119.4738, 74.0605, 880.6, 100.656, 65.1751], [21.4569, 308.2613, 631.7536, 970.1824, 305.9424, 168.0941, 147.8787, 66.7926, 83.6794, 206.2116, 255.0971, 627.2808, 401.278, 1129.9477, 365.0486, 208.2079, 185.84, 451.005, 148.6366, 91.4732, 154.4715, 230.276, 141.1548, 71.3902, 1263.6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

