created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Tybalt Returns", "Necrotic Windrunner", "Luke The Knight", "Scarlet Merc\u00fcry", "Ria Zerrah", "Whip \u00d1 Sl\u00e0pper", "Hahrruun", "Locopuff", "Enter Effore", "Ephuras", "Sigewulf Bloodhawk", "Kaiya Tseng", "Palaven Night", "Porlen", "Yngvar The Burdened", "Hit The Gas", "Chocolate Teapot", "Latedoctor", "Govinda Ektar", "Notorious H U D", "Elonith Requiem", "Mirhayna", "Erinthal", "Xanvias Einzbern", "Legoh Brave", "Drevarr Moonwillow", "Charr Surethang", "Danaeryn", "Gestern Yesteryear", "Anti Jimbo"];
const professions = ["Mechanist", "Reaper", "Berserker", "Firebrand", "Vindicator", "Tempest", "Revenant", "Firebrand", "Firebrand", "Reaper", "Berserker", "Catalyst", "Reaper", "Ranger", "Scourge", "Berserker", "Chronomancer", "Reaper", "Vindicator", "Firebrand", "Reaper", "Berserker", "Druid", "Berserker", "Tempest", "Scrapper", "Berserker", "Tempest", "Firebrand", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22, 0, 4, 4, 2, 0, 0], [1, 6, 22, 1, 0, 0, 2, 0], [11, 0, 4, 0, 11, 0, 9, 3], [14, 3, 0, 24], [7, 17, 4, 12, 2], [0, 18, 12, 0, 0, 0, 7, 6], [0, 0, 0, 1, 3, 0, 0, 13, 6, 19, 0, 0, 1], [12, 0, 0, 6, 17, 0, 0, 12, 0], [22, 8, 0, 16, 6], [40, 12], [16, 0, 9, 1, 28], [13, 26, 10, 12, 13], [19, 1, 10, 17, 29], [5, 4, 19, 0, 31, 0, 1, 8, 0, 0, 0, 5, 0, 2, 7, 0, 0, 2], [0, 0, 14, 38, 9, 1, 0, 0, 3, 10, 14, 1, 0, 0, 0], [24, 4, 1, 14, 0, 5, 13, 16, 1, 2, 14, 1], [34, 0, 3, 2, 3, 10, 20, 8, 8, 0, 0, 0, 0, 0, 10], [18, 7, 0, 0, 20, 7, 1, 0, 24, 1, 1, 1, 0, 3, 7, 2, 0, 0, 0, 0, 14, 0, 9, 0, 0, 0], [21, 0, 0, 0, 1, 0, 0, 10, 51, 0, 0, 15, 0, 12, 1, 4, 0], [10, 25, 2, 6, 1, 2, 2, 1, 26, 9, 16, 0, 5, 0, 2, 0, 6, 0, 0, 4, 0], [16, 1, 3, 0, 1, 0, 10, 24, 8, 0, 14, 2, 0, 7, 24, 2, 0, 8, 0], [1, 0, 5, 0, 0, 8, 36, 1, 0, 20, 0, 9, 12, 40, 13, 0], [21, 4, 2, 2, 3, 0, 30, 5, 14, 0, 0, 0, 0, 0, 7, 24, 2, 0, 15, 1, 21, 7, 14, 3, 0, 1, 0], [7, 22, 35, 3, 44, 26, 26, 15], [0, 10, 0, 7, 116, 6, 0, 4, 0, 8, 1, 7, 7, 5, 2, 8], [29, 8, 5, 3, 13, 22, 9, 4, 13, 2, 0, 0, 0, 0, 14, 22, 6, 0, 1, 0, 11, 6, 33, 1], [3, 21, 0, 2, 33, 18, 0, 14, 0, 0, 0, 9, 13, 15, 6, 0, 15, 0, 11, 30, 21, 0, 1, 0], [29, 0, 43, 0, 1, 1, 4, 0, 3, 6, 5, 0, 62, 0, 13, 14, 6, 2, 0, 26, 2], [14, 15, 12, 17, 11, 0, 20, 6, 6, 2, 1, 7, 0, 16, 26, 20, 19, 0, 18, 4, 21, 10, 0, 2, 0], [53, 2, 42, 2, 11, 14, 0, 0, 0, 38, 15, 0, 45, 0, 23, 31]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

