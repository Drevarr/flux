created: 20230222220539000
creator: Drevarr
modified: 20230705163519800
modifier: drevarr
tags: ChartData
title: 202302222205_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sassy Daddy Demon", "Sumatra Satyricon", "Sygaldry Verdandi", "Husky Guard", "Xyntharos", "Kiloak", "Ark Darkness", "My Birthday Girl", "Kosair", "Smol Daddy Tika", "Mistwalker Caelon", "Ravioli Fetabringer", "Jeckyll Mbs", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Xanvias Tseli", "Sofya De Meme", "Legacy Of Mathus", "Panther B Me", "Dark Sidiuz", "Smol Gluvs", "One Whole Keg", "Rina Of Theros", "Elonith Tenebris", "\u00c1rk\u00e1ntor"];
const professions = ["Vindicator", "Soulbeast", "Firebrand", "Dragonhunter", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Berserker", "Weaver", "Berserker", "Berserker", "Catalyst", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[47.5116, 0.0, 29.2727, 14.2209, 5.0132, 11.5763, 6.9, 1.2, 8.2619, 11.4951, 3.9369, 12.7447], [0.0, 3.6486, 0.0303, 3.9186, 0.0, 11.6186, 8.4875, 0.0, 6.7275, 7.9559, 30.3333], [0.0, 0.0, 46.1515, 0.9535, 0.0, 3.6949, 8.25, 5.6375, 4.6481, 30.0, 9.8438, 15.0426], [3.0465, 0.0132, 0.2627, 20.5125, 9.0875, 14.7698, 20.3725, 9.8318, 26.6915], [5.5349, 5.6757, 2.5455, 0.0233, 17.4408, 27.3136, 0.1875, 8.825, 10.8386, 17.2892, 4.5736, 23.2553], [31.1364, 5.3721, 1.3553, 3.9492, 2.4875, 0.0, 14.6217, 10.0686, 17.2673, 47.6383], [50.6212, 13.8488, 1.2697, 0.0678, 1.525, 14.35, 26.5079, 6.2255, 8.4444, 31.6064], [0.0, 1.0, 21.7424, 6.0349, 1.8487, 4.9068, 11.475, 31.9875, 17.291, 32.5882, 12.9459, 26.0745], [0.0, 0.0, 4.8636, 18.4535, 0.0, 18.6271, 0.0, 27.3625, 18.6587, 6.049, 12.9369, 111.1489], [2.5116, 19.1892, 45.9848, 7.0814, 0.0, 0.0, 13.725, 4.2, 35.2751, 3.5196, 12.952, 83.5319], [0.0, 8.8919, 57.9848, 3.3721, 27.6908, 4.822, 7.05, 22.9, 29.6905, 16.5392, 10.8889, 24.9787], [0.0, 150.3243, 2.6061, 14.2674, 8.5197, 55.7627, 2.5625, 0.025, 17.1376, 4.2353, 15.1652, 108.5638], [28.3256, 0.0, 13.4651, 0.0, 0.3983, 19.05, 44.375, 36.9048, 40.9804, 20.6156, 35.3404], [0.0, 46.7838, 44.5152, 47.2558, 22.9474, 7.2458, 22.85, 93.1625, 42.9735, 47.2696, 17.6396, 83.5638], [0.5581, 28.2703, 7.6061, 25.2674, 7.0, 0.0, 73.725, 68.7375, 92.8122, 28.7941, 26.0991], [3.7907, 85.5946, 0.8333, 1.2674, 51.1908, 3.0339, 0.0, 68.1125, 59.5741, 77.6912, 15.1081, 101.1809], [15.4394, 16.9651, 44.875, 15.3475, 12.0, 16.3, 52.4709, 67.0833, 64.2613, 38.1489], [0.0, 43.6757, 14.2576, 51.314, 21.7961, 32.6017, 12.225, 25.8, 97.3651, 54.1324, 18.1772, 98.0106], [15.6279, 38.8378, 67.8636, 30.314, 46.4868, 7.8729, 43.875, 118.9375, 54.0873, 29.598, 22.1832, 176.9574], [23.3256, 0.0, 143.775, 47.7249, 66.1078, 45.4985, 294.6915], [3.2093, 0.0, 20.9651, 10.625, 4.1949, 81.3375, 75.1625, 129.6561, 70.9118, 24.1231, 130.383], [0.0, 29.4865, 32.197, 3.9342, 0.0, 46.7375, 128.5375, 132.7593, 123.4265, 21.7778, 54.1915], [69.5116, 86.973, 73.8788, 36.9884, 42.4605, 21.8898, 112.3625, 239.2, 79.5106, 48.1618, 55.4625, 123.5213], [13.3256, 113.973, 94.697, 16.6977, 29.1776, 97.9492, 100.4375, 155.375, 84.9339, 74.5049, 59.973, 69.2553], [0.6047, 33.2432, 50.0, 9.6744, 33.2829, 28.5339, 42.1625, 213.7375, 157.2619, 90.1373, 33.2132, 220.0426]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

