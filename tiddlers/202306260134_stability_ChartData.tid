created: 20230626013408000
creator: Drevarr
modified: 20230705163538980
modifier: drevarr
tags: ChartData
title: 202306260134_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Belvyn Brightblade", "Melli Dragonswrath", "Mememonoko", "Sub Train", "Xanvias Einzbern", "Zayde Sunsabre", "Newtype Khan", "No Reserv\u00e9", "Arcanophage Farra", "Blanco Padre Guard", "Sygaldry Verdandi", "Crusader Siolith", "Traidoruns Maximus", "Aronorf Xideliesi", "Gestern Yesteryear", "Ryvalia Fazebringer", "Solus Sanctus", "Tika Fiery", "Bella Sassy", "Koralia Danai"];
const professions = ["Herald", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.2272, 0.0, 0.0, 15.6203, 1.1457, 0.0, 0.9546, 0.0, 0.451, 2.31, 2.3232], [1.0886, 0.0, 0.4165, 0.0, 6.8088, 1.4003, 2.6252, 0.0, 0.0361, 2.9568, 2.1683, 1.1374, 1.1925, 2.5488, 3.6504, 2.6846, 0.0], [0.0, 1.0368, 0.9612, 0.2657, 12.2159, 0.8656, 0.0, 0.3818, 1.37, 0.0, 0.4004, 1.8973, 1.9129, 0.6525, 1.08, 0.0, 1.0547, 0.2597, 1.3154, 0.455, 0.0, 1.6732, 0.0, 1.254, 2.688, 0.0, 0.0, 0.0, 1.4702, 1.414, 0.0, 1.8241, 0.0], [1.1059, 0.0, 0.0, 20.026, 0.9929, 0.0, 4.9639, 0.5581, 0.0, 0.4928, 0.968, 3.7741, 0.0, 0.5616, 0.3978, 2.3011, 0.0, 0.0, 0.0, 0.9814, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3.6886, 2.7189, 5.2114, 1.8593, 4.3277, 2.0038, 3.3166, 0.0, 2.6846, 3.1206, 3.3321, 3.6301, 3.907], [1.1534, 0.0, 8.8114, 1.0184, 0.0, 2.1479, 0.6343, 0.8298, 1.078, 1.0454, 2.3265, 0.8325, 2.592, 2.106, 2.1094, 0.0, 0.0, 1.1788, 2.2673, 0.8784, 2.1507, 2.0755, 1.9354, 0.334, 0.0, 0.4474, 1.6578, 0.6231, 0.6863, 1.0148], [1.9872, 1.5552, 1.7622, 0.0, 9.0117, 2.1896, 1.8252, 2.5774, 1.3192, 0.0, 0.8624, 0.8906, 0.0, 0.0, 1.296, 1.2168, 1.7258, 0.0, 1.7316, 0.0, 1.7597, 0.0, 0.7858, 0.0, 1.6397, 0.6679, 0.0, 0.2842, 2.3011, 1.5847, 1.7067, 0.8308, 3.704], [1.5552, 0.8208, 1.4098, 0.0, 9.4122, 1.3239, 1.7035, 1.7183, 2.5116, 1.3891, 1.4168, 1.2778, 1.3959, 0.9225, 2.2032, 2.7144, 1.5341, 0.0, 0.0, 1.1788, 1.2182, 0.8784, 0.9926, 1.2107, 0.0, 0.7236, 0.0, 0.0, 1.0227, 1.1459, 2.1943, 2.4381, 2.1311], [0.8294, 0.432, 1.6981, 0.3247, 30.6398, 0.0, 0.0, 2.7683, 1.37, 0.3428, 2.6796, 0.9293, 0.0, 0.2025, 1.8144, 0.4212, 1.5341, 0.0, 0.7659, 0.5997, 0.0, 0.0837, 1.1167, 0.6054, 0.0, 0.0], [1.7453, 0.7344, 2.0826, 0.0, 6.0078, 1.2475, 0.0, 2.9593, 1.37, 1.0463, 0.77, 3.5235, 0.0, 1.125, 2.4192, 0.0, 1.3423, 2.3236, 0.0, 1.6751, 2.6734, 4.1412, 3.6397, 2.1188, 2.231, 2.5047, 1.7549, 0.0, 1.6091, 2.8715, 0.9752, 2.1311], [4.0781, 6.3936, 4.9982, 3.749, 43.6567, 6.4414, 0.0, 5.0116, 4.0338], [24.2315, 4.481, 3.5539, 3.234, 5.7693, 1.2925, 2.88, 7.4304, 5.967, 3.0682, 0.0562, 0.6327, 2.7711, 2.0642, 9.6209, 5.17, 4.4105, 4.1126, 2.2264, 0.9338, 2.429, 4.4859, 4.0635, 1.7518, 5.2008], [2.8139, 6.4436, 3.3488, 5.4285, 7.155, 5.6592, 3.0654, 4.027, 2.9304, 5.7904, 4.9406, 7.8222, 7.2794, 9.5128, 4.3814, 5.4547, 4.2182, 4.1548, 3.2182, 4.2802, 3.4133, 6.6723], [5.5728, 4.806, 0.2362, 26.8348, 1.7313, 0.2434, 5.6321, 1.4968, 1.2808, 2.1252, 2.207, 7.4448, 5.5125, 4.968, 3.6504, 7.5745, 0.007, 2.4309, 6.4315, 1.489, 5.1033, 3.3502, 1.4269, 4.5965, 1.4472, 0.1932, 3.8352, 0.3901], [3.9917, 5.4, 1.7622, 0.0, 13.8179, 2.4951, 0.0, 5.0594, 1.4461, 1.335, 2.464, 2.7878, 5.1183, 3.6675, 5.7888, 4.7268, 4.3146, 0.0491, 0.1332, 3.5776, 4.7714, 6.902, 4.6737, 3.1998, 4.8115, 3.8405, 0.0, 0.8036, 4.3466, 2.9744, 2.4923, 1.5712, 3.9831], [1.1255, 10.071, 5.7083, 2.7962, 4.774, 8.712, 7.2897, 6.165, 9.8064, 11.0682, 9.2045, 0.5661, 6.4108, 7.3433, 6.3163, 5.0046, 5.9239, 7.3114, 7.6254, 6.2468, 1.617, 5.561, 7.3871, 6.61, 6.8267, 2.5116], [3.024, 3.5856, 4.9021, 1.8007, 37.8491, 3.2589, 0.0, 10.071, 4.3129, 2.5797, 2.6488, 9.0218, 8.0135, 6.9075, 10.368, 3.8376, 5.9446, 3.6297, 2.9779, 5.9897, 5.3961, 4.2601, 3.6322, 4.7846, 3.8405, 2.7048, 1.4994, 6.7116, 4.3153, 3.7926, 2.2936, 3.4757], [6.601, 8.424, 4.3895, 0.0, 39.0507, 5.4739, 0.2281, 10.5483, 3.7294, 3.4817, 6.16, 7.4342, 5.4285, 8.145, 12.2688, 7.6752, 11.985, 1.382, 4.4255, 6.971, 5.9817, 6.7003, 7.2643, 4.6502, 4.8981, 2.4633, 1.2544, 4.3466, 4.4615, 6.5016, 7.513, 5.2516], [5.3395, 15.552, 8.8751, 6.1106, 55.2718, 7.4089, 2.8139, 9.7369, 4.186, 4.0049, 3.388, 6.8534, 3.9809, 4.1175, 5.1408, 3.8844, 5.3693, 2.0849, 3.3633, 5.3561, 4.5684, 4.6431, 5.2941, 4.7564, 4.0858, 5.6217, 4.6851, 2.2148, 3.5795, 6.3876, 5.2013, 3.7204, 5.9619], [8.6573, 8.856, 7.1129, 6.3763, 56.2731, 9.1656, 4.8824, 9.546, 4.8457, 3.6441, 4.62, 6.9309, 7.9101, 4.2525, 8.64, 3.9546, 3.5476, 3.28, 3.3915, 3.7224, 6.2327, 8.3134, 5.7509, 3.575, 2.3377, 2.6565, 0.8134, 12.2087, 4.876, 3.1153, 4.0996, 4.6427], [6.2554, 14.5584, 7.6896, 3.8966, 66.4863, 6.2377, 2.5857, 12.8394, 4.1353, 2.5256, 5.2052, 6.1565, 3.6707, 5.7375, 9.5904, 6.7158, 9.2045, 2.8638, 5.2527, 10.4904, 8.1569, 6.4522, 6.2698, 7.177, 4.2858, 3.1717, 2.3324, 5.1775, 5.9975, 6.61, 4.3525, 7.4588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

