created: 20230626011754000
creator: Drevarr
modified: 20230705163538017
modifier: drevarr
tags: ChartData
title: 202306260117_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Primal Clone", "Raziel Umbra", "Ryvalia Fazebringer", "Oo Dads Mad", "Black Raspberry Pie", "Imalou", "Cerys Fireblade", "Traidoruns Maximus", "Air One Com", "Kosair", "Johosh The Mighty", "Gabe Malhorn", "Grasszanine", "Tika Fiery", "Xanvias Einzbern", "Bella Sassy", "Koralia Danai", "Warrior Constantine", "Zayde Sunsabre", "Arcanophage Farra", "Blancooo Padreee", "Solus Sanctus", "Newtype Khan"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.1838, 12.0513, 25.5343, 17.7811, 22.464, 9.9053, 26.5258, 14.1372, 37.9863, 33.7272, 1.5028, 7.9233, 20.24, 21.0057, 11.8227, 22.0402, 5.1019, 10.2206, 13.3976, 7.9736, 76.0, 10.26, 1.6615], [13.5594, 6.8864, 0.0, 25.6838, 13.3056, 13.9709, 14.1143, 13.6836, 6.6964, 15.7815, 18.5049, 8.2701, 52.5798, 48.5001, 0.0, 20.93, 16.7372, 15.4321, 12.0711, 8.4535, 11.4299, 13.9018, 3.6639, 76.6, 6.912, 0.0], [10.9107, 13.0284, 13.1297, 27.1656, 23.5008, 20.2822, 22.7556, 10.4834, 15.8566, 13.4283, 18.7248, 32.6138, 29.2302, 11.2984, 17.802, 14.8276, 16.8815, 19.9062, 11.6934, 4.3698, 3.4403, 92.6, 11.4048, 0.0], [10.4733, 17.6349, 7.7328, 44.2058, 7.6896, 24.5322, 9.4928, 5.7865, 49.0342, 58.2875, 64.4846, 5.9888, 30.544, 19.5454, 17.2225, 21.8491, 3.575, 16.7353, 8.0674, 0.0, 79.6, 13.3056, 0.0], [0.0, 25.8707, 0.0, 66.1853, 147.9168, 62.795, 48.4352, 13.8726, 0.0, 186.5975], [9.0396, 14.1451, 7.0884, 30.3761, 37.4112, 8.8704, 9.9519, 24.1542, 5.3671, 52.4547, 20.3881, 14.0436, 41.0888, 67.9733, 50.9593, 5.2891, 21.252, 28.8688, 21.2297, 15.5428, 14.5236, 11.625, 6.7708, 4.4836, 72.8, 10.692, 0.0], [32.2453, 0.0, 47.2928, 79.7472, 20.2171, 25.5798, 48.195, 77.5548, 26.0378, 23.0159, 43.8886, 83.8856, 67.7635, 6.1123, 40.02, 33.9237, 6.0535, 10.7653], [14.6772, 34.9906, 0.0, 114.9599, 63.3312, 0.0, 32.2775, 97.0326, 15.512, 57.7152, 46.0166, 2.1065, 0.0, 28.5536, 0.0, 12.1353, 17.1353, 9.7941, 24.2642, 26.0028, 10.5322, 180.2, 0.0, 0.0], [32.1003, 27.7319, 0.0, 38.0318, 14.0832, 34.4467, 6.2814, 50.1228, 0.0, 87.7752, 40.1621, 66.8631, 31.176, 23.6353, 12.9037, 75.9, 63.5788, 40.9816, 30.9582, 26.217, 28.1262, 4.5619, 0.0, 93.2, 28.4472, 0.0], [26.244, 46.9953, 0.0, 33.8335, 51.3216, 42.9845, 3.8597, 59.4594, 0.0, 53.7323, 4.9933, 72.4162, 69.184, 55.6043, 52.302, 55.3787, 38.9922, 31.5633, 31.3188, 31.9882, 35.7509, 4.9804, 89.2, 13.4784, 0.0], [50.7434, 40.5216, 0.0, 91.4575, 59.4039, 39.3221, 136.7357, 73.508, 91.1255, 45.264, 25.0496, 30.1252, 34.3661, 31.4306, 35.8112, 22.6414, 7.0049, 81.2, 27.3456], [17.6904, 48.2981, 0.0, 53.0964, 89.5104, 48.8611, 51.7273, 30.7692, 14.7596, 26.3025, 15.1478, 78.4101, 97.0089, 76.2754, 53.4184, 0.0, 68.31, 65.4884, 2.4157, 58.7314, 36.5697, 0.0, 19.0159, 0.0, 118.4, 23.9544, 0.0], [36.1098, 65.4677, 11.4381, 115.9477, 82.08, 36.923, 33.7154, 83.1491, 14.3557, 183.5754, 169.1549, 133.4777, 0.0, 78.752, 105.9272, 68.4354, 53.508, 51.056, 40.1413, 35.7989, 0.0, 179.4, 53.244, 0.0], [25.8066, 98.1783, 0.0, 101.7475, 49.248, 85.5792, 0.0, 287.3736, 78.8504, 253.7991, 202.1146, 69.357, 110.9354, 25.3526, 58.3923, 49.8938, 77.2882, 0.0, 119.4, 56.052, 0.0], [13.9482, 67.0963, 65.8899, 112.9842, 103.1616, 25.3176, 37.4616, 46.494, 7.9504, 62.0739, 64.6033, 51.2591, 118.4992, 120.2072, 94.8143, 7.3676, 114.494, 76.4967, 27.7379, 12.7719, 33.7394, 53.9118, 45.3309, 7.9985, 357.2, 15.228, 23.5283], [47.4822, 26.2895, 0.0, 73.4706, 111.1104, 12.6773, 126.4234, 90.6066, 22.572, 115.731, 76.8034, 140.436, 124.6285, 282.4437, 81.1523, 0.0, 92.368, 37.9675, 71.5616, 46.501, 53.4394, 24.3032, 53.5183, 0.0, 118.0, 27.8208, 0.0], [95.1588, 75.5182, 36.0059, 137.5567, 102.6432, 36.036, 69.9283, 68.796, 6.107, 181.0363, 64.6033, 73.1047, 32.3868, 0.0, 145.7735, 7.6352, 85.928, 79.0803, 42.4026, 55.6738, 46.1031, 96.7448, 68.2364, 0.0, 244.8, 29.0304, 11.7889], [26.1468, 46.2974, 47.6856, 96.6848, 150.8544, 73.883, 72.8042, 74.277, 196.1415, 56.2516, 95.6525, 147.4052, 161.3717, 131.7017, 0.0, 119.6, 55.491, 60.7051, 61.9483, 32.3616, 32.8464, 5.5943, 217.4, 62.5104, 0.0], [33.2667, 55.1846, 210.6569, 186.2784, 8.8334, 68.2255, 55.4148, 0.0, 136.3973, 86.7109, 92.7658, 61.0657, 443.6424, 281.3006, 5.1244, 172.5, 219.2682, 97.4806], [51.3702, 43.6917, 232.8833, 0.0, 25.3176, 185.4846, 137.7499, 59.5268, 135.7548, 218.4593, 405.9371, 0.0, 200.33, 70.8802, 46.4951, 22.3905, 41.8205, 78.3711, 69.8211, 0.0, 411.6, 72.684, 0.0], [40.9941, 54.6262, 0.0, 86.3125, 236.9088, 62.2776, 108.6386, 146.5128, 0.0, 254.533, 129.9026, 143.2447, 101.7005, 346.6118, 94.2678, 159.712, 164.3388, 64.7692, 66.7894, 34.0374, 56.4085, 57.6, 0.0, 105.2, 61.1928, 0.0], [57.8097, 44.6688, 0.0, 172.1311, 208.3104, 66.528, 48.8514, 119.7504, 22.1456, 253.8567, 23.5814, 196.1423, 271.2013, 264.4558, 125.6904, 0.0, 83.214, 71.1049, 18.1888, 53.7309, 56.4558, 60.0364, 134.8402, 0.0, 258.2, 0.0], [28.8684, 89.5237, 13.8546, 128.5427, 184.1184, 99.4224, 69.8526, 73.8234, 11.6873, 201.1766, 110.6608, 108.5258, 184.1051, 164.312, 300.8372, 8.7259, 67.942, 104.2422, 61.4156, 41.182, 57.7965, 71.3883, 45.595, 0.0, 395.0, 46.6776, 19.058], [39.6333, 0.0, 0.0, 52.1086, 144.72, 23.2109, 0.0, 76.0158, 92.8929, 240.6137, 373.1288, 420.9846, 71.9987, 19.7156, 258.474, 164.4511, 114.7884, 157.1161, 20.2958, 111.3735, 114.9359, 0.0, 372.2, 79.7472, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

