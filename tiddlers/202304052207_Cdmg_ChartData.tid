created: 20230405220700000
creator: Drevarr
modified: 20230705163524421
modifier: drevarr
tags: ChartData
title: 202304052207_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sassy Daddy Demon", "Xyntharos", "Etchery Howls", "Kiloak", "N Er Gal", "Sehaninee", "Hrakkus", "Marrosch", "Drevarr Moonwillow", "Yuuka Chou", "Tootsie Pop Rocks", "Nelliel T", "Sumatra Satyricon", "Venomina The Siren", "Mistwalker Caelon", "Blancooo Padreee", "Sygaldry Verdandi", "Kos\u00e4ir", "Sp\u00edcy Cheese", "Mike The Archmagus", "Morton Saltbringer", "Ark Darkness", "Dark Sidiuz", "Rozaalyna", "Lord Erin The Wise", "Mac Chiato", "Zenek Tryst", "Eibh\u00ebar", "Legacy Of Mathus", "Nazhul Naxxremis", "Ara Icedottir", "Seren Nightroad", "River No Hug", "Smol Daddy Tika", "Panther B Me", "Solus Sanctus", "Smol Gluvs", "Xanvias Tlesel", "Rina Of Theros", "Be\u00eb"];
const professions = ["Vindicator", "Vindicator", "Druid", "Firebrand", "Dragonhunter", "Reaper", "Tempest", "Berserker", "Scrapper", "Tempest", "Scrapper", "Reaper", "Soulbeast", "Tempest", "Vindicator", "Spellbreaker", "Firebrand", "Vindicator", "Berserker", "Weaver", "Chronomancer", "Firebrand", "Scourge", "Scourge", "Weaver", "Tempest", "Weaver", "Chronomancer", "Berserker", "Scourge", "Firebrand", "Scourge", "Scourge", "Berserker", "Scourge", "Firebrand", "Scourge", "Berserker", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.5882, 32.9038, 0.0, 6.0859, 0.0, 39.7632, 0.0, 0.0, 0.0, 2.3019, 0.0, 10.2879, 0.0, 0.0, 1.7211, 0.0, 0.0, 0.1131, 6.8775, 0.0, 9.871, 0.0, 0.0, 0.0], [1.902, 0.0, 0.0, 9.4848, 0.0, 11.5455, 0.0, 0.0, 0.0, 25.3594, 3.3962, 43.5294, 1.0758, 4.185, 0.0, 4.4632, 0.0, 0.0, 8.7768, 1.3618, 0.0, 0.0, 0.0, 6.6964, 0.5806], [30.3529, 54.6346, 12.1781, 28.298, 10.6591, 3.8182, 4.5079, 9.6], [0.0, 0.0, 0.0, 4.2576, 0.0, 11.8182, 5.3158, 0.0, 0.0, 57.3962, 6.4495, 0.6647, 0.6538, 17.9737, 43.4286, 0.9586, 0.0, 0.9744, 9.1429, 0.0806, 0.0, 9.1429, 0.0], [4.875, 16.6604, 0.0588, 11.3586, 3.0173, 12.3846, 9.7737, 5.8333, 2.7041, 7.6488, 3.0057, 3.1837, 5.0887, 3.0354, 0.7321, 5.496], [0.0, 15.6923, 14.7895, 29.0238, 6.1479, 17.7679, 3.1681, 3.898, 0.0, 0.0354, 0.8393, 4.4597], [33.7677, 0.0, 0.0, 0.0, 0.0, 2.7547, 0.0, 4.5385, 18.0105, 21.7619, 0.0, 8.8929, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 8.9615, 0.5479, 0.0, 0.25, 3.25, 0.0, 3.1667, 3.1562, 48.1698, 12.2105, 17.381, 0.1065, 6.8899, 12.5983, 1.102, 0.0, 0.0, 0.0, 4.1694], [3.6471, 3.1538, 0.0822, 40.3485, 2.7727, 0.0, 15.0789, 3.6508, 1.6333, 10.0156, 11.2642, 22.8824, 6.096, 2.8439, 7.2308, 9.5789, 6.1667, 5.5325, 3.4613, 0.1254, 17.3878, 0.6774, 0.0, 0.0, 4.3065], [5.873, 0.0, 10.6719, 25.2642, 2.9242, 0.0, 33.4615, 27.4842, 37.1429, 0.0, 14.372, 1.6838, 39.1633, 0.0, 0.0, 0.0, 3.5968], [8.8824, 0.3462, 1.3014, 27.5455, 1.8409, 0.0, 2.2895, 8.4444, 1.25, 11.7656, 17.0377, 0.0, 23.0404, 5.2428, 10.2308, 10.2158, 0.0, 1.9645, 0.8869, 3.6296, 1.3878, 3.9516, 0.5221, 0.0, 6.9073], [11.4314, 18.4423, 0.0, 21.3838, 1.8409, 0.0, 1.0263, 0.0, 1.3208, 0.0588, 14.2475, 0.0, 13.9038, 10.2579, 4.6935, 14.6638, 0.0, 15.2258, 2.6106, 15.375, 0.0], [0.0, 0.0, 0.0, 10.5152, 0.0, 0.0, 3.9737, 32.4444, 14.3, 14.2031, 3.5094, 6.4706, 12.0606, 22.2543, 0.0, 6.3579, 0.0, 4.0118, 21.0804, 1.2279, 5.3265, 0.0, 0.0, 0.0, 2.1694], [0.0, 0.0, 0.0, 9.9495, 0.0, 0.0, 0.0, 37.1587, 98.1333, 27.6719, 66.0943, 4.1414, 0.0, 34.9423, 13.8368, 3.1124, 3.4792, 1.4558, 6.0, 0.0, 0.9381, 0.0, 0.0726], [2.9804, 43.1731, 3.2877, 17.9596, 0.0, 0.0, 0.0, 1.0, 18.7833, 0.0, 5.9057, 5.5882, 3.8131, 11.9306, 0.0, 2.7263, 27.0, 0.0, 11.494, 15.9658, 11.5306, 1.6613, 11.2566, 13.4107, 0.4113], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4603, 0.3333, 0.0, 3.5094, 1.9444, 3.0116, 2.7692, 33.6368, 0.0, 0.0, 31.3601, 0.5641, 14.7959, 6.3145, 0.4956, 0.0, 22.129], [0.0, 19.6731, 2.6438, 13.5455, 12.8636, 0.0, 15.8947, 2.7778, 32.15, 62.9688, 19.0189, 0.0, 11.9343, 20.5434, 15.3077, 6.5316, 0.0, 0.0, 3.881, 0.0, 8.9796, 2.0403, 0.0, 0.0, 15.5766], [12.0, 8.9038, 5.6575, 21.1919, 0.0, 0.0, 0.0, 8.9524, 2.8, 4.2812, 12.2264, 0.0, 31.7525, 4.1965, 15.4615, 20.9368, 0.0, 0.0, 19.5536, 1.9886, 10.5714, 0.0806, 0.0, 0.0], [76.2745, 0.0, 0.0, 55.5354, 0.0, 0.0, 26.6508, 17.85, 17.7188, 48.2642, 0.0, 16.1414, 0.0, 14.3846, 21.8211, 0.0, 2.716, 5.1518, 0.9715, 1.1429, 0.7419, 0.0, 0.0, 4.8024], [0.0, 48.8939, 1.711, 20.5962, 60.4684, 8.0476, 7.3846, 15.9167, 5.265, 25.7143, 2.7984, 1.4071, 0.0, 3.0726], [0.0, 56.7172, 14.4913, 25.5192, 38.5947, 46.0952, 1.5444, 16.494, 3.2279, 15.6939, 10.8053, 1.6429, 4.6089], [7.3725, 0.0, 0.0, 25.0101, 17.5227, 0.0, 269.2895, 67.8095, 18.4, 0.9688, 30.3962, 18.4798, 3.4798, 15.5769, 33.7789], [13.3529, 0.0, 0.0, 30.5354, 0.5227, 2.25, 23.3968, 0.0, 0.0, 56.2453, 21.8684, 0.0, 0.0, 27.7351, 13.3875, 12.0, 1.2984, 8.9735, 13.75, 14.6895], [6.1569, 73.5577, 0.0, 69.9242, 55.9091, 14.5079, 17.55, 7.0781, 0.0, 56.9412, 34.9697, 0.0, 1.6731, 10.6632, 3.0714, 0.503, 3.875, 0.1168, 3.9796, 1.121, 0.0, 2.5179, 0.3589], [0.902, 0.0, 0.0, 24.7475, 102.8864, 0.0, 13.0, 59.6349, 10.3333, 8.2969, 21.9057, 0.0, 18.7424, 0.0, 104.2115, 5.5632, 32.3095, 8.0237, 4.6726, 3.208, 53.8571, 13.3145, 18.4336, 0.0, 5.8387], [20.3922, 2.25, 0.0, 51.4091, 0.0, 4.4091, 0.0, 47.1094, 26.0943, 0.0, 18.1212, 20.7572, 45.1346, 15.8947, 14.6429, 3.1716, 9.1012, 2.359, 80.5714, 3.7903, 10.3451, 0.0, 1.6774], [1.9216, 60.0962, 0.0, 32.3788, 0.0, 9.0909, 0.9211, 9.4286, 15.5833, 36.8594, 22.9623, 17.1765, 17.0303, 21.1214, 41.2308, 51.5368, 0.0, 0.0, 10.997, 9.7749, 0.0, 17.8387, 1.5221, 3.7321], [2.0392, 5.1731, 26.4658, 28.0808, 1.9545, 9.4773, 64.1053, 65.7937, 13.4333, 13.1406, 37.3208, 1.6176, 33.1263, 17.0751, 60.8077, 12.1947, 36.0952, 6.3077, 11.1518, 15.4558, 13.8776, 8.8629, 0.6283, 0.0, 3.6815], [17.0784, 0.0, 0.0, 99.1263, 8.3409, 0.0, 23.2368, 2.5397, 21.0167, 3.0469, 0.0, 10.1471, 47.6566, 8.1156, 42.9808, 22.9895, 19.0476, 5.7515, 8.0446, 4.6724, 57.1633, 10.5726, 10.0, 0.0, 3.7218], [53.7451, 7.9808, 11.7945, 83.1717, 72.3409, 2.8636, 61.1579, 108.0317, 124.7, 134.0938, 127.2264], [0.6078, 67.7692, 0.0, 91.8232, 0.0, 56.6818, 29.6825, 196.8167, 251.2344, 92.4717], [19.9804, 118.0, 0.0, 64.8586, 1.3636, 2.3182, 122.9683, 49.45, 0.5, 155.9623, 1.6176, 48.3636, 10.6647, 4.5, 9.0368, 3.0952, 2.4911, 6.6577, 2.8575, 6.6122, 2.3306, 0.0, 0.0, 7.8548], [60.902, 112.4231, 16.6301, 34.0505, 0.0, 5.0909, 0.0, 52.2381, 24.1667, 66.0625, 0.0, 47.8235, 89.6616, 9.5029, 18.7885, 11.8895, 0.0, 13.071, 14.997, 10.1453, 0.9388, 2.871, 0.0, 14.375, 16.6573], [19.4118, 1.5385, 5.6575, 85.9444, 51.0455, 1.0, 164.7895, 9.2698, 2.9333, 1.5625, 140.1132, 0.0588, 65.9242, 0.3121, 11.7308, 48.0684, 15.1667, 23.2663, 11.1756, 2.1026, 2.8776, 6.5242, 0.0619, 4.1964, 34.3911], [56.0588, 107.8269, 2.1781, 29.5202, 43.0227, 20.9545, 12.5, 132.9206, 54.4833, 61.7031, 63.7358, 3.8235, 48.2071, 1.3237, 25.9231, 51.5368, 39.2381, 14.1716, 40.0149, 7.0655, 25.9184, 13.4839, 2.2035, 9.4821, 13.6653], [1.5686, 62.7885, 0.0, 34.899, 16.7955, 0.0, 158.2105, 20.9048, 26.0167, 56.3438, 184.0377, 0.0, 29.6919, 3.9538, 28.0, 79.2263, 171.0, 61.503, 11.3185, 13.9003, 0.6327, 0.0, 37.2124, 8.4821, 6.8105], [44.7692, 0.137, 29.2778, 58.0909, 1.4545, 242.3421, 184.9206, 125.2167, 24.3594, 227.1887, 11.4412, 40.0, 3.237, 63.9615, 48.0316, 7.2143, 5.1243, 33.244, 2.359, 31.3265, 2.9113, 3.6903, 6.7321, 16.9637], [59.2549, 12.2885, 28.7671, 108.2323, 46.3864, 12.6591, 83.1053, 40.5397, 76.65, 28.8281, 106.4528, 4.3529, 124.298, 7.4913, 0.5769, 83.2474, 39.881, 0.0, 7.6131, 15.7379, 7.4082, 0.0, 17.3805, 19.7143, 0.7702], [29.098, 156.3462, 40.1096, 99.4192, 43.5455, 19.8636, 35.8158, 13.7619, 128.6, 35.3906, 136.1321, 9.0294, 42.0556, 29.3931, 56.0769, 39.6263, 105.1667, 3.716, 38.9554, 10.1111, 42.0408, 5.7097, 2.3186, 11.8571, 13.3992], [38.4706, 94.0192, 6.4521, 79.7323, 59.7955, 0.0, 46.0263, 25.3016, 151.8, 2.0469, 202.1698, 71.8529, 83.3081, 5.0983, 141.0385, 27.7789, 56.6429, 10.4793, 64.5923, 8.7977, 9.6939, 6.6694, 0.9469, 7.8214, 6.4315]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

