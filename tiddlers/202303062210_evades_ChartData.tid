created: 20230306221045000
creator: Drevarr
modified: 20230705163521326
modifier: drevarr
tags: ChartData
title: 202303062210_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Veron Blackburn", "King Squid", "Chronomancer Trixy", "Ark Darkness", "Zadie Miststep", "Dark Sidiuz", "Morv\u00e4rth", "Raelyn Sunray", "Kahless The Drunk", "Blanco Padre Guard", "Cerys Fireblade", "Cat Wigglebooty", "Sofya De Nova", "Oo Dads Mad", "Zaylen Harker", "Husky Guard", "Legacy Of Mathus", "Fribble Bibble", "Viral Marketing", "Klee Flamepumpkin", "Tribal S", "My Birthday Girl", "Rozaalyna", "Sygaldry Verdandi", "Mike The Archmagus", "Smol Daddy Tika", "Be\u00eb", "Mac Aaroni", "Koralia Danai", "Black Raspberry Pie", "Drevarr Moonwillow", "Tegan Parker", "Xanvias Tseli", "Lord Erin The Wise", "Newtype Khan", "Estryl", "Smol Gluvs", "Ravioli Fetabringer", "Eibh\u00ebar", "Arcanophage Farra", "Demon Sekhmet", "Primal Clone", "Raziel Umbra", "Ryvalia Fazebringer", "Ace Hammers", "\u00c1rkantor", "Xyntharos", "Mistwalker Caelon"];
const professions = ["Herald", "Reaper", "Chronomancer", "Firebrand", "Tempest", "Scourge", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Weaver", "Spellbreaker", "Firebrand", "Dragonhunter", "Berserker", "Scrapper", "Firebrand", "Tempest", "Druid", "Scrapper", "Scourge", "Firebrand", "Tempest", "Berserker", "Scourge", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Tempest", "Berserker", "Weaver", "Spellbreaker", "Spellbreaker", "Scourge", "Firebrand", "Chronomancer", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 4, 21, 55, 2, 30, 2], [6, 1, 0, 4, 0, 1, 0, 3, 2, 0, 14, 13, 6, 8, 1, 6, 0, 1, 12, 0, 2, 15, 9, 7, 0, 3, 14, 0], [25, 0, 0, 4, 0, 0, 11, 0, 4, 2, 0, 10, 0, 2, 0, 3, 26, 0, 8, 3, 1, 0, 0, 10, 0, 5, 7, 1, 10, 0, 14], [19, 0, 0, 6, 1, 5, 4, 0, 11, 15, 10, 6, 1, 16, 10, 6, 32, 0, 4, 0, 6, 0, 2], [21, 0, 0, 32, 0, 1, 0, 11, 1, 0, 8, 14, 9, 3, 5, 2, 25, 3, 8, 0, 1, 11, 0, 0, 1, 0, 0, 1, 0, 0, 0], [3, 2, 4, 0, 3, 4, 12, 5, 4, 4, 0, 13, 0, 15, 0, 1, 10, 3, 9, 0, 11, 0, 29, 9, 2, 4, 8, 5], [27, 4, 0, 5, 0, 0, 27, 1, 5, 5, 1, 20, 4, 38, 6, 6, 5, 1, 7], [18, 33, 9, 0, 0, 0, 2, 24, 0, 0, 22, 0, 24, 0, 15, 1, 16], [13, 2, 0, 11, 0, 0, 3, 0, 1, 1, 0, 2, 28, 6, 6, 2, 11, 22, 0, 17, 0, 0, 13, 0, 10, 0, 14, 1, 11, 6, 2, 10, 2, 4], [2, 4, 0, 4, 0, 0, 6, 0, 4, 6, 0, 17, 39, 6, 11, 6, 3, 0, 0, 4, 15, 9, 0, 9, 0, 9, 14, 0, 3, 5, 1, 20, 6], [14, 3, 0, 6, 0, 0, 8, 3, 16, 6, 0, 24, 10, 11, 14, 9, 8, 16, 6, 20, 0, 15, 0, 0, 0, 10, 10, 3, 4, 3, 1, 1, 0], [4, 1, 0, 9, 0, 6, 0, 26, 8, 0, 12, 25, 30, 6, 0, 0, 0, 12, 2, 19, 0, 4, 2, 20, 4, 8, 14, 1, 0, 4, 4, 0], [1, 0, 26, 0, 0, 23, 0, 25, 4, 0, 20, 11, 7, 18, 7, 10, 0, 3, 2, 6, 0, 0, 12, 5, 1, 0, 9, 1, 8, 5, 1, 8, 9, 1], [21, 2, 0, 22, 0, 40, 0, 31, 14, 0, 4, 14, 25, 14, 4, 32, 0, 1], [5, 4, 5, 0, 0, 10, 1, 8, 1, 0, 24, 18, 9, 3, 5, 9, 0, 17, 6, 7, 0, 0, 5, 6, 14, 0, 14, 3, 6, 19, 3, 10, 15, 5], [8, 0, 0, 29, 0, 0, 4, 1, 10, 4, 3, 13, 10, 18, 12, 5, 23, 0, 6, 0, 8, 0, 11, 1, 8, 0, 7, 5, 18, 11, 1, 10, 8, 2], [22, 4, 0, 2, 0, 0, 16, 0, 3, 3, 0, 15, 22, 22, 11, 19, 28, 0, 4, 5, 2, 0, 4, 0, 25, 0, 2, 1, 5, 5, 3, 0, 3, 15], [9, 7, 0, 9, 0, 0, 11, 2, 17, 0, 0, 8, 15, 21, 6, 0, 20, 15, 2, 48, 0, 0, 4, 2, 6, 0, 0, 0, 10, 7, 0, 16, 6, 0], [10, 2, 0, 10, 0, 0, 13, 0, 26, 2, 0, 7, 13, 7, 26, 0, 19, 0, 11, 8, 21, 1, 1, 0, 22, 0, 6, 0, 10, 5, 0, 0, 3, 22], [28, 38, 9, 6, 1, 30, 19, 28, 19, 7, 24, 2, 5, 6, 20, 9], [12, 4, 0, 9, 0, 0, 0, 0, 23, 3, 0, 13, 16, 3, 7, 2, 10, 0, 20, 8, 13, 0, 0, 21, 28, 12, 0, 8, 0, 3, 17, 0, 10, 7, 5], [16, 2, 6, 0, 0, 31, 5, 15, 3, 0, 1, 19, 23, 18, 2, 12, 0, 10, 0, 42, 0, 3, 3, 4, 1, 2, 0, 26, 5, 2, 6, 7, 8], [14, 5, 0, 11, 0, 0, 9, 0, 17, 5, 1, 24, 26, 12, 17, 12, 13, 2, 0, 41, 0, 11, 0, 16, 0, 10, 1, 6, 7, 2, 11, 0], [13, 6, 0, 55, 0, 0, 6, 0, 10, 4, 0, 32, 32, 8, 6, 4, 15, 0, 4, 18, 20, 0, 0, 21, 4, 5, 0, 0, 0, 7, 13, 0, 4, 3, 0], [11, 1, 22, 0, 0, 49, 0, 16, 7, 0, 16, 0, 23, 27, 16, 18, 0, 15, 11, 0, 0, 13, 1, 18, 0, 1, 1, 7, 7, 5, 3, 7, 9], [17, 1, 0, 8, 0, 0, 5, 0, 17, 5, 0, 11, 54, 0, 29, 0, 20, 7, 2, 62, 0, 0, 11, 0, 7, 0, 25, 1, 13, 2, 6, 5, 0, 2], [22, 0, 0, 31, 0, 0, 25, 0, 16, 5, 0, 22, 26, 2, 3, 0, 33, 0, 21, 2, 8, 0, 0, 8, 0, 13, 4, 14, 9, 6, 13, 1, 25, 7, 4], [12, 1, 0, 11, 0, 22, 1, 4, 3, 0, 46, 10, 15, 8, 15, 20, 0, 1, 1, 10, 1, 2, 29, 11, 13, 0, 10, 4, 24, 36, 1, 3, 9, 0], [24, 4, 29, 0, 13, 0, 7, 3, 0, 31, 37, 7, 27, 10, 11, 2, 8, 36, 0, 5, 1, 8, 6, 2, 16, 15, 6, 12, 6, 1], [17, 7, 0, 9, 0, 0, 9, 5, 24, 5, 0, 20, 13, 10, 10, 4, 35, 0, 17, 13, 13, 0, 0, 14, 2, 26, 1, 17, 2, 6, 22, 3, 6, 14, 4], [11, 0, 0, 35, 0, 0, 20, 0, 30, 11, 1, 40, 4, 15, 22, 15, 20, 0, 23, 1, 23, 0, 13, 0, 20, 0, 14, 0, 1, 5, 0, 3, 4, 0], [15, 1, 0, 7, 0, 0, 3, 0, 21, 4, 0, 5, 21, 13, 22, 4, 53, 55, 1, 32, 11, 7, 6, 0, 6, 0, 6, 3, 0, 18, 11, 15], [21, 1, 0, 72, 0, 0, 0, 0, 22, 1, 0, 33, 27, 2, 11, 0, 6, 0, 27, 0, 17, 0, 0, 32, 0, 4, 7, 5, 9, 33, 0, 18, 2, 2], [10, 23, 0, 0, 0, 68, 2, 0, 20, 5, 16, 7, 18, 3, 7, 8, 1, 0, 0, 1, 0, 1, 33, 10, 34, 0, 1, 4, 61, 29, 0, 0], [12, 5, 1, 15, 0, 1, 10, 10, 2, 30, 25, 13, 9, 14, 47, 15, 0, 39, 19, 1, 12, 11, 2, 19, 18, 14, 21, 1, 4], [5, 0, 0, 37, 11, 60, 32, 6, 27, 0, 21, 13, 19, 0, 16, 5, 9, 0, 13, 5, 8, 16, 12, 32, 4, 21], [29, 3, 0, 3, 0, 0, 15, 0, 7, 8, 0, 39, 21, 10, 29, 7, 16, 0, 40, 2, 29, 0, 0, 19, 1, 17, 0, 18, 7, 15, 13, 6, 2, 17, 6], [11, 3, 0, 10, 0, 0, 48, 1, 15, 6, 0, 57, 26, 3, 6, 3, 15, 55, 29, 13, 0, 0, 7, 4, 15, 0, 15, 4, 4, 7, 4, 18, 6, 2], [17, 14, 0, 7, 0, 0, 29, 0, 3, 7, 1, 20, 26, 24, 18, 9, 5, 0, 51, 8, 39, 0, 0, 27, 0, 10, 0, 12, 13, 32, 13, 3, 5, 1, 0], [21, 2, 0, 13, 0, 23, 1, 3, 12, 0, 58, 47, 29, 18, 7, 12, 1, 1, 45, 0, 5, 1, 7, 1, 22, 1, 16, 35, 10, 12, 17, 4], [39, 6, 54, 5, 0, 18, 12, 2, 7, 4, 33, 13, 7, 10, 0, 1, 9, 61, 55, 2, 9, 2, 9, 6, 15, 28, 5, 17, 10, 10], [16, 8, 0, 28, 0, 0, 35, 0, 22, 8, 2, 16, 7, 30, 13, 13, 20, 79, 2, 24, 0, 0, 25, 2, 9, 0, 7, 6, 29, 20, 7, 26, 13, 2], [16, 1, 0, 25, 7, 0, 19, 3, 83, 7, 0, 12, 83, 40, 12, 2, 33, 9, 2, 46, 0, 0, 18, 2, 19, 0, 8, 3, 22, 16, 7, 50, 1, 1], [58, 1, 0, 78, 0, 0, 69, 3, 12, 13, 0, 54, 36, 29, 37, 0, 12, 57, 2, 21, 0, 0, 17, 2, 28, 0, 3, 12, 49, 35, 20, 14, 17, 20], [24, 13, 1, 38, 0, 10, 40, 4, 37, 17, 7, 33, 87, 17, 33, 4, 44, 0, 40, 26, 45, 1, 2, 0, 0, 44, 1, 15, 4, 32, 47, 18, 20, 6, 6], [27, 2, 0, 86, 0, 0, 48, 0, 52, 14, 0, 96, 40, 37, 36, 5, 33, 76, 16, 63, 0, 19, 29, 0, 16, 27, 48, 43, 13, 38, 16, 34], [46, 21, 0, 33, 0, 7, 30, 6, 54, 11, 0, 37, 21, 53, 58, 26, 10, 49, 16, 88, 0, 44, 18, 37, 0, 19, 21, 104, 4, 17, 30, 29, 40], [67, 9, 0, 35, 0, 8, 34, 12, 29, 16, 0, 83, 34, 102, 91, 34, 35, 1, 45, 47, 66, 0, 0, 46, 19, 29, 0, 19, 12, 113, 13, 9, 13, 17, 37]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

