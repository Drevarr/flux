created: 20230405220700000
creator: Drevarr
modified: 20230705163524589
modifier: drevarr
tags: ChartData
title: 202304052207_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Ark Darkness", "Mac Chiato", "Mike The Archmagus", "Marrosch", "River No Hug", "Arriasa", "Newtype Khan", "Seren Nightroad", "Ryvalia Fazebringer", "Zaylen Harker", "Tribal S", "Eibh\u00ebar", "Grasszanine", "Raelyn Sunray", "Kiloak", "Drevarr Moonwillow", "Sygaldry Verdandi", "Blancooo Padreee", "Solus Sanctus", "Sister Elon\u00edth", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Tempest", "Firebrand", "Tempest", "Weaver", "Berserker", "Scourge", "Druid", "Spellbreaker", "Scourge", "Chronomancer", "Firebrand", "Druid", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.5274, 52.807, 0.0, 149.9197, 60.2202, 10.9168, 49.1728, 30.8927, 4.5402, 0.0, 95.8033, 97.5704, 133.3622, 0.572, 52.2652, 62.5891, 99.4896, 80.2456, 1.2622, 22.7106, 48.0114, 0.0, 4.0176], [13.1274, 19.5395, 92.345, 332.0381, 0.0, 0.0, 0.0, 17.33, 66.4956, 0.0, 75.1832, 261.6352, 211.6136, 0.0, 56.7226], [32.8874, 31.3914, 87.8453, 219.4355, 14.0417, 0.0, 77.8939, 14.8019, 0.0, 0.0, 163.0431, 68.2796, 0.0, 64.676, 70.3534, 0.0, 23.8896, 176.7987, 44.8997, 6.9192, 0.0, 24.9514, 35.2656], [36.8186, 70.4108, 115.0173, 22.125, 117.4656, 10.0716, 172.7095, 64.1088, 358.6027, 4.4629, 0.0, 160.8702, 50.8766, 78.5664], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.1852, 46.3814, 72.2226, 33.4742, 0.0, 172.4814, 368.0208, 115.6054, 0.0, 0.0, 255.0873, 0.0, 172.5336], [16.4551, 7.436, 52.6534, 72.6799, 0.0, 40.0726, 0.0, 0.0, 30.6534, 40.6739, 6.3107, 6.5212, 161.8511, 176.4462, 17.7549, 118.427, 0.0, 46.2384, 11.9448, 186.6478, 6.0407, 75.5532, 92.199, 10.3701, 135.8172], [0.0, 0.0, 56.3472, 117.3487, 0.0, 71.0026, 0.0, 0.0, 0.0, 0.0, 0.0, 94.5905, 17.127, 0.0, 213.8678, 97.0385, 0.0, 0.0, 324.3731, 0.0, 52.3404, 0.0, 0.0, 282.5712], [0.0, 0.0, 0.0, 126.0032, 4.074, 0.0, 50.9808, 0.0, 47.517, 0.0, 113.8005, 0.0, 63.1739, 34.254, 27.5704, 93.081, 0.0, 246.1739, 102.6648, 0.0, 0.0, 109.3122, 162.5697, 107.833, 54.4608], [13.1503, 77.3802, 14.2379, 183.7935, 31.4543, 0.0, 72.1892, 125.0952, 0.0, 40.2275, 0.0, 2.7245, 83.732, 76.8768, 134.5086, 0.0, 46.4665, 206.388, 82.829, 0.0, 6.0264, 47.9052, 5.9483, 160.704], [0.0, 0.0, 281.434, 118.8376, 0.0, 15.1171, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 177.4318, 50.6198, 12.8586, 123.5836, 179.681, 123.5813, 122.6232, 133.2045, 0.0, 148.9302, 0.0, 0.0, 170.4132], [180.846, 299.4664, 522.0666, 138.7008, 0.0, 255.4007, 178.6188, 46.9146, 52.4854], [0.5967, 25.1451, 12.8276, 66.631, 0.0, 0.0, 0.0, 52.5648, 0.0, 0.0, 0.0, 193.8638, 44.0735, 0.0, 88.5362, 0.0, 190.2771, 540.0864, 350.3682, 33.9678, 157.6908, 0.0, 43.0332, 66.0672], [249.26, 88.3168, 0.0, 49.9732, 78.5633, 115.5823, 0.0, 185.0663, 16.5252, 0.0, 31.1121, 0.0, 815.9818, 0.0, 436.9165, 9.4392, 58.0272, 9.5062, 22.5288, 7.4272, 21.0073, 0.0, 0.0, 8.2645, 15.8472], [0.0, 25.0536, 0.0, 322.1737, 0.0, 15.363, 0.0, 0.0, 79.806, 0.0, 0.0, 0.0, 203.6549, 44.1496, 145.2194, 274.873, 0.0, 207.3884, 211.68, 241.3827, 0.0, 125.1036, 153.8066, 24.8724, 313.2612], [0.0, 63.492, 44.7286, 275.5507, 33.9979, 0.0, 53.2652, 43.3716, 0.0, 0.0, 0.0, 190.4582, 138.9951, 41.367, 92.5566, 0.0, 132.8594, 389.34, 976.3486, 159.7635, 0.3348, 61.6607, 141.3121, 658.3284], [0.0, 0.0, 71.5254, 538.9105, 44.2759, 93.9189, 10.5222, 0.0, 0.0, 16.4909, 84.8846, 393.2359, 194.4114, 510.9404, 114.3358, 75.2134, 12.852, 349.8838, 91.8054, 526.5288, 286.5285, 119.9402, 187.1532], [14.2749, 146.5006, 199.1966, 208.1752, 35.9212, 0.0, 39.3026, 41.8181, 40.4388, 106.5613, 104.789, 0.0, 215.915, 75.5872, 36.1962, 277.932, 18.5724, 135.5971, 678.4344, 998.1457, 29.1442, 188.604, 97.0851, 62.7206, 328.3272], [156.1977, 116.6651, 279.2849, 294.3488, 181.6738, 0.0, 12.6859, 15.5333, 0.0, 0.0, 0.0, 58.2743, 306.9297, 117.986, 85.3882, 5.5936, 0.0, 225.5643, 728.4816, 937.1138, 43.2317, 197.0298, 10.8875, 62.0626, 404.6616], [8.2391, 63.8352, 60.1418, 293.2321, 6.2247, 171.8693, 49.973, 53.2073, 53.298, 196.1882, 98.7379, 95.6974, 229.5779, 74.3142, 400.9912, 70.686, 201.9888, 1088.4888, 793.5759, 107.4031, 326.988, 69.0961, 164.2631, 465.1488], [62.447, 17.8693, 165.3143, 351.5807, 98.3748, 74.6016, 26.2907, 0.3767, 97.0644, 0.0, 158.1573, 78.5043, 451.0717, 357.8401, 7.7563, 861.764, 99.4594, 282.4497, 997.164, 816.6647, 32.1871, 286.4772, 503.6421, 53.0874, 673.2828], [309.6542, 664.6798, 215.0262, 553.1546, 51.5777, 445.3488, 1131.8832, 1625.2564, 196.4361, 371.7396, 335.4428, 80.7234, 662.0112], [34.4479, 114.9779, 605.7275, 0.0, 1.4758, 1.4375, 233.289, 95.3724, 31.3286, 0.0, 458.3086, 451.9244, 98.9789, 371.9744, 38.1982, 599.6543, 983.4048, 1298.6228, 154.4215, 490.203, 260.5577, 241.8018, 538.47], [154.9814, 58.3669, 202.1516, 634.8553, 185.0446, 0.0, 99.8572, 106.0378, 245.763, 83.4176, 33.0858, 49.5754, 621.6923, 510.6891, 87.6762, 348.9882, 22.5826, 279.1035, 1177.5456, 1216.2782, 62.4358, 363.5928, 227.3639, 244.0127, 617.5944], [247.0568, 195.4638, 301.0447, 542.7259, 39.9951, 144.3218, 16.5539, 36.8046, 151.857, 261.3856, 2.2075, 388.6641, 504.6756, 139.1562, 652.5284, 24.1718, 882.6363, 1552.5216, 1284.2528, 230.1109, 335.5254, 245.4744, 233.1426, 671.274]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

