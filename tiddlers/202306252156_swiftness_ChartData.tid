created: 20230625215649000
creator: Drevarr
modified: 20230705163537067
modifier: drevarr
tags: ChartData
title: 202306252156_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Etchery Howls", "Grasszanine", "Aira Draugr", "Raziel Umbra", "Aemilius Scorchwill", "Primal Clone", "Belvyn Brightblade", "Momomeko", "Grimdox", "Elon The Mender", "Rozaalyna", "Cerys Fireblade", "High Sorcer Baradun", "Ryvalia Fazebringer", "Black Raspberry Pie", "Tegan Parker", "Johosh The Mighty", "Newtype Khan", "Miphest\u00f6", "Xanvias Einzbern", "Zayde Sunsabre", "Blancooo Padreee", "Imalou", "Sygaldry Verdandi", "Tika Fiery", "Arcanophage Farra", "Drevarr Moonwillow", "Mmathuss", "Solus Sanctus", "Crusader Siolith", "Koralia Danai", "Irish Mini Rev", "Bella Sassy"];
const professions = ["Tempest", "Druid", "Spellbreaker", "Herald", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Reaper", "Berserker", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Herald", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 38.2513, 31.2874, 52.3138, 186.8885, 187.9836, 80.3193, 51.0538, 0.0, 1.0956, 0.0, 23.204, 0.0, 0.2411, 0.0, 0.0, 0.0, 30.1589, 34.6608, 0.0, 98.685], [17.2094, 0.0, 180.318, 113.544, 54.72, 127.3049, 127.2011, 20.2713, 0.0, 15.7907, 0.0, 0.0, 0.2205, 31.2346, 0.0, 0.0, 283.305], [411.2075, 59.0976, 0.0, 99.5347, 106.5289, 22.072, 0.0, 7.7547, 21.1151, 0.0, 0.0, 0.0, 46.2144, 132.9638, 12.5114, 65.28], [73.6806, 3.1563, 215.4714, 0.0, 314.0949, 407.0886], [0.0, 46.593, 0.0, 0.0, 98.4259, 0.0, 34.0957, 0.0, 0.0, 33.9648, 102.7893, 30.87, 0.0, 0.0, 26.4247, 548.6052, 14.531, 25.6171, 25.6406, 0.0, 82.62], [1218.7486], [29.4277, 170.1396, 0.0, 3.5329, 23.5498, 24.5461, 5.4919, 137.9491, 222.9888, 183.1826, 13.5044, 20.58, 0.0, 8.3373, 0.0, 0.0, 0.0, 0.0, 47.0909, 33.408, 56.291, 275.145], [68.0933, 257.3136, 178.0605, 55.7108, 475.2221, 136.5248, 97.9392], [0.0, 169.4493, 0.7134, 266.2934, 68.4314, 204.8028, 106.5398, 0.2688, 50.6523, 32.2028, 7.9748, 41.5554, 0.2813, 5.3508, 7.3947, 5.8432, 21.3144, 190.2586, 0.0, 156.57], [202.3546, 176.256, 83.5215, 56.7704, 83.1432, 56.5935, 8.6024, 8.4671, 31.752, 36.1747, 69.6557, 14.6414, 626.79], [16.094, 170.365, 91.2787, 10.157, 320.941, 128.8837, 108.0078, 59.9731, 0.0, 34.5969, 79.2604, 37.044, 0.0, 14.284, 16.2994, 3.9779, 61.7841, 44.581, 102.8131, 15.8616, 200.685], [36.5064, 170.4402, 66.7846, 18.7854, 405.7805, 109.9501, 254.0013, 19.3709, 84.5184, 16.4767, 51.2128, 36.2208, 0.0, 10.9089, 28.8943, 41.8244, 12.8992, 27.888, 70.6579, 25.788, 85.935], [42.6947, 78.3063, 160.551, 16.0678, 356.5675, 14.1326, 138.8998, 50.8349, 49.4976, 14.5383, 87.7267, 28.8635, 40.5451, 0.884, 33.3602, 39.5415, 17.5952, 12.2157, 41.7125, 24.3878, 9.6989, 332.265], [29.6281, 91.2321, 86.4947, 7.3036, 409.7054, 87.7031, 102.287, 61.0128, 65.088, 25.9161, 50.1221, 33.391, 11.8933, 51.059, 38.976, 0.0, 0.0, 65.8973, 45.5374, 393.975], [0.0, 0.0, 226.8573, 0.0, 0.9058, 53.3522, 106.1771, 70.5341, 0.0, 0.0, 332.3641, 251.9506, 0.0, 168.0127, 0.0, 0.0, 0.0, 0.0, 9.9998, 79.5946, 0.0, 602.565], [0.0, 43.5118, 161.3165, 46.7087, 308.2603, 111.2349, 358.5766, 104.4058, 0.0, 44.9212, 45.8111, 14.0973, 20.2171, 1.788, 0.0, 0.0, 0.0, 0.0, 243.1834, 58.5475, 38.4648, 373.83], [0.0, 0.0, 8.8982, 55.2692, 725.2118, 176.0149, 414.1823, 51.4368, 13.2096, 36.1983, 37.7604, 70.8981, 0.0, 0.0, 11.2778, 0.0, 31.0378, 30.0762, 38.6846, 117.5126, 28.6625, 262.395], [44.2974, 131.5876, 164.8566, 52.076, 366.229, 132.7381, 376.883, 114.3648, 95.5776, 165.5259, 160.9101, 113.4987, 44.8571, 68.5471, 14.3443, 0.0, 26.8604, 0.0, 60.7162, 81.599, 11.2706, 252.96], [7.5239, 145.9413, 138.0662, 44.5686, 570.025, 128.2075, 371.8487, 108.1267, 93.5808, 14.4119, 65.808, 71.1553, 72.1582, 19.648, 60.5875, 52.0405, 0.0, 62.3574, 123.4642, 89.4499, 26.2016, 346.8], [42.4943, 154.8841, 38.1763, 0.0, 877.6814, 33.1338, 427.4544, 238.9622, 0.0, 111.7131, 32.2028, 116.7401, 0.0, 75.3174, 0.0, 0.116, 0.0, 7.8277, 141.2328, 113.4202, 17.5573, 425.595], [9.6608, 122.5697, 114.6246, 51.2947, 605.9534, 113.2635, 323.5656, 168.3734, 17.664, 278.2083, 136.758, 71.4641, 41.0626, 14.3242, 66.0824, 26.9477, 47.1208, 67.2898, 107.8243, 59.2896, 417.435], [9.1266, 70.9416, 309.7162, 212.3125, 660.9029, 73.841, 513.7234, 60.575, 52.9536, 58.0268, 209.9415, 19.4995, 65.7948, 69.5604, 7.1952, 14.1782, 37.1309, 65.5632, 77.7982, 296.565], [0.0, 90.18, 183.1315, 81.0524, 973.3901, 239.8481, 507.7738, 62.4902, 95.232, 40.8758, 91.726, 16.8242, 78.9835, 9.3218, 23.7082, 6.5966, 41.432, 55.8158, 57.2112, 13.2972, 474.81], [53.6243, 390.6297, 232.7894, 135.1666, 1472.4638, 108.9358, 612.8067, 122.8464, 64.2214, 46.4863, 95.5426, 0.0], [153.9724, 106.7882, 204.2768, 0.0, 666.3374, 447.3739, 717.1532, 141.1776, 37.9392, 117.2335, 120.7086, 126.7728, 32.4632, 50.3054, 40.2956, 18.892, 13.3402, 102.6278, 13.6138, 30.958, 797.385], [58.7664, 400.7749, 336.985, 55.7448, 656.9779, 69.7838, 956.9671, 0.0, 0.0, 70.9216, 195.2425, 97.7035, 0.0, 10.5473, 74.5202, 0.0, 0.0, 20.5286, 4.7011, 94.127, 42.5388, 802.23], [33.2119, 262.1232, 160.551, 153.0688, 1131.8981, 190.6208, 387.638, 118.7424, 176.0256, 74.335, 159.6636, 101.9739, 0.0, 53.1983, 67.1937, 10.672, 107.454, 50.3181, 114.0619, 68.737, 51.4725, 643.62], [89.0177, 154.7339, 395.4454, 143.8969, 1086.912, 73.1648, 651.9367, 281.425, 28.1088, 81.5409, 67.8856, 127.1329, 98.6462, 26.9608, 10.8045, 29.2755, 50.3289, 6.2401, 89.6002, 175.9766, 87.4144, 408.255], [38.5098, 179.7588, 427.0198, 138.9373, 1330.2595, 355.2079, 843.4674, 86.4029, 109.824, 198.1423, 164.7017, 74.3453, 0.0, 10.3263, 83.8635, 17.6465, 6.7338, 20.5286, 78.0067, 130.7088, 22.9341, 458.745], [132.7809, 567.8334, 738.841, 0.0, 702.5678, 220.8469, 843.6962, 143.4758, 106.7136, 77.8747, 162.3644, 93.5361, 0.0, 85.2017, 53.6521, 1.856, 50.5534, 45.1584, 34.3819, 103.8989, 45.3099, 707.37], [159.4706, 569.9376, 97.4022, 34.9891, 1058.8334, 192.717, 694.2702, 160.3296, 231.0144, 136.8286, 187.5034, 106.9131, 2.464, 63.2835, 26.1983, 15.7905, 10.375, 77.4396, 78.3254, 142.9862, 39.2093, 1160.76], [139.214, 238.6012, 495.5267, 211.6331, 907.5715, 285.1535, 1384.1927, 149.0026, 316.7616, 23.4298, 101.283, 79.3359, 0.0, 37.729, 25.3957, 0.0, 14.1561, 25.896, 153.5933, 7.3621, 787.185], [72.5008, 445.3389, 577.8115, 290.8511, 1571.1917, 406.9372, 1085.5695, 45.2534, 23.4624, 103.4958, 98.0108, 126.5156, 2.1806, 4.0984, 38.5463, 0.0, 49.7007, 19.6411, 97.3843, 38.4028, 664.02], [77.7987, 358.9916, 687.1738, 359.0289, 1532.244, 388.4769, 1193.8061, 228.6202, 382.1952, 108.0891, 273.7757, 175.2387, 117.1878, 38.5929, 55.2573, 49.0535, 32.1601, 82.3568, 92.8272, 207.5472, 35.673, 1330.845]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

