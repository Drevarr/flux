created: 20230607221050000
creator: Drevarr
modified: 20230705163534086
modifier: drevarr
tags: ChartData
title: 202306072210_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Slingsshot", "Rosie Sunray", "Sumatra Satyricon", "Solus Sanctus", "Sister Elonith", "Proteccdebussy", "Mistwalker Cael", "Johosh The Great", "Gabe Malhorn", "Grasszanine", "Nilann Thunderfury", "Tuandha Lan", "Rafaellagabriela", "Ria Zerria", "Cyclotechnist Farra", "Xanvias Einzbern", "Zefirokai", "Joxrox", "Belvyn Brightblade", "Chrozz", "Sub Train", "Manuel Radiador", "Shaca Booey", "Permanent Dawn", "Primal Clone", "Newtype Khan", "Be\u00eb", "Marco D Roronoa", "Arriasa", "Proteccdebussy", "Drevarr Moonwillow", "Smol Gluvs", "Uneeta Healah", "Sygaldry Verdandi", "Rozaalyna", "Ryvalia Fazebringer", "Tegan Parker", "Kary\u00edna", "Xkaet", "Crusader Siolith", "No Reserv\u00e9", "Blanco Padre Guard", "Artakama Nahid", "Duke Silvver", "Venomina The Siren", "Lord Erin The Wise", "Husky Guard", "Oo Dads Mad", "Tootsie Pop Rocks", "Zayde Sunsabre", "Eibh\u00ebar"];
const professions = ["Untamed", "Vindicator", "Soulbeast", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Spellbreaker", "Dragonhunter", "Herald", "Firebrand", "Reaper", "Scrapper", "Berserker", "Tempest", "Daredevil", "Firebrand", "Willbender", "Firebrand", "Scrapper", "Berserker", "Weaver", "Chronomancer", "Spellbreaker", "Reaper", "Renegade", "Druid", "Dragonhunter", "Scrapper", "Reaper", "Scrapper", "Firebrand", "Reaper", "Chronomancer", "Tempest", "Vindicator", "Tempest", "Firebrand", "Vindicator", "Dragonhunter", "Tempest", "Vindicator", "Tempest", "Weaver", "Dragonhunter", "Spellbreaker", "Scrapper", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 47], [0, 0, 16, 19, 0, 0, 0, 12], [0, 0, 25, 2, 13, 9], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53], [0, 0, 19, 0, 4, 0, 0, 0, 0, 15, 0, 16], [56], [0, 0, 37, 0, 0, 12, 0, 0, 0, 9, 0, 0], [0, 0, 18, 0, 0, 1, 0, 0, 0, 0, 19, 20, 0], [23, 0, 10, 1, 0, 0, 0, 0, 7, 0, 17], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 43], [0, 0, 59, 0], [20, 0, 6, 12, 0, 0, 21], [0, 0, 7, 4, 0, 0, 0, 22, 0, 10, 18], [10, 0, 39, 0, 0, 0, 18], [0, 0, 20, 0, 9, 6, 0, 0, 0, 10, 16, 11], [0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 28, 24], [64, 11], [7, 41, 0, 0, 0, 34, 0, 6], [0, 0, 90], [0, 0, 13, 0, 67, 10, 0, 0, 0, 1, 0, 0, 11], [14, 0, 0, 45, 0, 0, 0, 0, 15, 0, 31], [0, 0, 0, 51, 17, 18, 22], [0, 0, 51, 0, 11, 31, 0, 0, 0, 0, 9, 16, 0], [0, 0, 48, 0, 0, 1, 0, 0, 0, 38, 0, 32, 2], [0, 0, 5, 0, 24, 23, 0, 0, 0, 0, 36, 3, 32], [0, 0, 0, 0, 23, 16, 0, 0, 0, 21, 0, 21, 42], [0, 0, 17, 0, 0, 22, 0, 0, 0, 0, 0, 61, 28], [0, 16, 27, 0, 38, 0, 0, 48], [0, 0, 19, 0, 29, 35, 0, 0, 0, 1, 13, 0, 45], [26, 0, 7, 0, 37, 18, 30, 25], [0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 32, 22, 46], [0, 0, 31, 0, 16, 73, 0, 0, 0, 1, 0, 0, 26], [0, 0, 66, 0, 10, 24, 0, 0, 0, 27, 6, 18, 2], [0, 0, 0, 0, 0, 63, 0, 0, 0, 19, 22, 0, 50], [0, 0, 47, 0, 25, 9, 0, 0, 15, 0, 47, 17], [0, 0, 31, 0, 0, 85, 0, 0, 0, 0, 20, 0, 24], [0, 0, 0, 0, 44, 63, 0, 0, 0, 35, 26, 0, 0], [0, 0, 86, 0, 8, 53, 0, 0, 0, 2, 0, 19, 3], [53, 73, 49], [0, 0, 25, 0, 0, 35, 0, 0, 0, 0, 56, 18, 42], [0, 0, 76, 0, 13, 15, 0, 0, 0, 33, 11, 12, 17], [62, 0, 30, 0, 33, 40, 8, 9], [0, 0, 18, 0, 0, 64, 0, 0, 0, 13, 49, 22, 37], [0, 0, 72, 0, 18, 20, 0, 0, 0, 2, 16, 37, 41], [0, 64, 0, 14, 38, 0, 0, 0, 22, 20, 45, 20], [0, 0, 214, 12, 18, 0, 0, 0, 0], [31, 0, 43, 73, 0, 21, 0, 41, 21, 0, 32], [0, 0, 264], [0, 0, 37, 0, 0, 85, 0, 0, 0, 0, 41, 68, 47], [0, 0, 142, 0, 23, 32, 0, 22, 7, 26, 29, 0, 42], [0, 0, 130, 0, 49, 101, 0, 3, 4, 27, 36, 12, 27]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

