created: 20230610101822000
creator: Drevarr
modified: 20230705163534557
modifier: drevarr
tags: ChartData
title: 202306101018_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Danaeryn", "Arriasa", "Grootyoda", "Elonith Primal", "Maggietheskinwalker", "Blinky Charr", "Mr Cho Cho", "Scarlet Merc\u00fcry", "Hit The Gas", "Brother Titus", "Synomi\u00f1 Spyce", "Tomitigas", "Lady The Mirage", "Shroud Dead", "Arlomon", "Yngvar The Burdened", "Ryvalia Fazebringer", "Gamora Titus", "Sakis Ranger", "Gestern Yesteryear", "Aronorf Xideliesi", "Vesnan", "Grootyoda", "Cat Noises", "F\u00e2ble", "Drevarr Moonwillow", "F\u00e2ble", "Elonith Requiem", "Slang\u00efn", "Xanvias", "Alarics Bane", "Charr Surethang"];
const professions = ["Tempest", "Druid", "Spellbreaker", "Tempest", "Scrapper", "Mesmer", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Tempest", "Chronomancer", "Reaper", "Dragonhunter", "Scourge", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scourge", "Berserker", "Virtuoso", "Herald", "Scrapper", "Vindicator", "Reaper", "Herald", "Reaper", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.6071], [0.0, 0.0, 0.0, 9.0208, 33.8772, 0.0, 0.0, 12.2979, 0.0, 28.3125, 0.0, 0.0], [0.0, 54.775, 0.0, 35.7397], [161.1786], [173.3036], [181.5357], [381.1778, 0.0], [140.4107, 304.7222, 547.375], [97.7173, 14.9143, 53.6964, 503.8889], [699.5714, 103.8, 8.5536], [181.0286, 155.1786, 333.7333, 482.75], [63.5385, 43.7, 0.0, 12.125, 62.4211, 57.7037, 169.8621, 208.234, 73.8375, 27.2917, 35.0959, 64.5765, 30.4464, 129.5352, 149.7281, 15.0482, 83.6235, 76.411, 76.0995, 77.1905], [338.911, 41.9619, 411.7889, 246.4643], [183.3571, 594.3778, 1189.375], [268.9286, 637.2778, 1215.1607], [823.6, 1298.2857], [47.4615, 170.4, 36.7917, 89.0175, 24.7593, 29.931, 88.9362, 22.2258, 24.3875, 2.8333, 32.6438, 46.7647, 46.5536, 81.662, 76.7895, 143.6265, 95.7176, 38.9041, 161.644, 110.9048, 61.6429, 233.1333, 269.125], [215.5333, 0.0, 35.8958, 73.8772, 101.7778, 108.7586, 360.4894, 23.5484, 28.175, 16.5208, 55.274, 56.7059, 56.6964, 76.3239, 453.8333, 648.6747], [20.0, 0.0, 0.0, 0.0, 51.2281, 56.8519, 3587.5172, 64.2447, 195.4516, 54.9875, 0.0, 24.0685, 22.8596, 54.3735], [28.5769, 84.9333, 0.0, 76.5417, 112.3684, 15.7963, 21.1897, 34.6277, 21.9032, 20.2125, 12.4375, 39.2055, 138.7529, 21.375, 36.3099, 63.8684, 143.9157, 171.3882, 234.9315, 369.1937, 282.8381, 18.125, 375.0556, 842.75], [34.3148, 170.2241, 117.9681, 152.5161, 202.7625, 47.4792, 38.0137, 42.5412, 150.4107, 89.4507, 108.1404, 311.8072, 321.7412, 451.2603, 385.3508, 142.0571, 63.5179, 612.2889, 700.9643], [1601.0548, 972.1047, 641.6667, 436.3214, 186.5222], [320.4353, 165.4821, 215.9718, 599.4561, 113.1446, 971.7412, 240.6575, 777.9686, 386.3905, 7.8929], [497.6125, 55.0, 419.5068, 428.6706, 341.6071, 554.831, 246.1491, 173.8795, 386.2471, 526.5753, 1077.4817, 471.2762, 487.9821, 461.6667], [587.7292, 912.9452, 1597.0941, 3008.1623, 2823.6762], [2559.6538, 3037.0667, 2228.8636, 493.2083, 1246.6667, 1540.9259, 1453.5, 2688.9574, 2221.2258, 664.8875, 502.6458, 2119.7808, 1059.2118, 1117.7857, 975.4648, 1917.4737, 111.1566, 208.1765, 164.1781, 317.4764, 89.5714, 78.0536], [1326.9231, 2705.8, 0.0, 137.125, 2741.4211, 899.1296, 2698.7931, 2382.766, 1726.1613, 993.1625, 712.5357, 1557.3662, 2306.9561, 1258.0241, 3334.5176, 1119.0959, 23.7321, 77.6556, 0.0], [1599.6154, 3353.6333, 22.4091, 1093.2708, 1364.7018, 1179.6111, 339.6207, 2393.1383, 2610.3871, 1372.575, 442.0, 730.5479, 1965.4588, 1690.375, 500.831, 857.4912, 1067.2771, 224.8471, 1841.5205, 2656.0785, 1183.219, 675.2889], [1936.2308, 2726.1, 0.0, 638.6458, 672.4912, 1122.8519, 1296.0172, 2075.5851, 3022.0645, 1549.325, 596.7708, 1195.2466, 582.7294, 1035.25, 521.8169, 790.4737, 563.4458, 1626.0471, 1760.1644, 4350.3613, 1221.5048, 293.1071, 1342.9222, 1491.875], [1641.7778, 2860.2931, 2224.9574, 1682.2903, 1507.9125, 601.875, 1998.3699, 1663.4471, 2232.5714, 770.4648, 2015.2719, 2105.9759, 3097.7882, 2893.7123, 3872.801, 2360.9619, 492.6607, 1035.9667, 783.875], [912.6923, 3892.0333, 0.0, 2181.9583, 1761.6667, 1723.7593, 1992.7241, 2619.7447, 3984.0, 1800.275, 646.9167, 1516.7123, 1848.0824, 1912.25, 242.0845, 3451.0351, 1118.7108, 3004.7647, 2977.589, 3136.8063, 789.5333, 101.7321, 2060.3778, 1452.1071], [6223.3, 0.0, 2063.1042, 6521.8246, 3316.537, 4935.569, 3416.1915, 6948.4516, 1458.75, 102.375, 3035.2877, 2523.3647, 4704.6786, 1804.693, 877.1205, 3282.9765, 4710.137, 3768.3874, 930.2571, 129.8929, 5408.1444, 3645.7321]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

