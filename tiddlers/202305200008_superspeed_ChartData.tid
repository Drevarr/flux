created: 20230520000848000
creator: Drevarr
modified: 20230705163530854
modifier: drevarr
tags: ChartData
title: 202305200008_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Binkety Bonk", "Miphest\u00f6", "Newtype Khan", "Tegan Parker", "Swordsmile", "Needragee", "High Sorcer Baradun", "Artakama Nahid", "Cyclotechnist Farra", "Venomina The Siren", "Grasszanine", "Paul Bjart Mist Cop", "Cerys Fireblade", "Xanvias Einzbern", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Scrapper", "Berserker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.25, 0.642, 1.571, 0.511, 0.529, 0.859, 0.296, 0.212, 0, 0.431, 0.374, 0.279, 0, 0.426, 0.505, 0.456], [0, 0.677, 0.485, 0.236, 0, 0.19, 0, 0.27, 0.361, 0, 0.258, 0.152, 0.124, 0.087, 0, 0.211, 0.143, 0.285, 0, 0, 0.094], [0.48, 0.514, 0, 0.308, 0, 0, 0.443, 0.494, 0.548, 0, 0.43, 0, 0, 0, 0, 0.31, 0.239, 0.385, 0, 0, 0, 0, 0.226, 0, 0, 1.565, 0.76], [0, 0.566, 0.423, 0.317, 0.734, 0.332, 0, 0.27, 0.361, 0, 0.032, 0.567, 0.129, 0.546, 0, 0.18, 0.428, 0.327, 0, 1.188, 0.625, 0.374, 0.272, 0.857, 0.31, 0.537, 0], [0, 0.374, 2.129, 2.887, 3.225, 2.19, 0.612], [0.062, 0.601, 0.595, 0, 0.379, 0, 0.336, 0.728, 0, 0.675, 0.543, 0.505, 0.655, 0.511, 0.568, 0.429, 0.57, 0, 0.358, 0.373, 0.545, 0, 0.62, 0.67, 0.28], [1.006, 0.733, 0.564, 0.421, 0, 0.797, 0.74, 0.739, 0.722, 0.074, 0.824, 0.417], [0.481, 0.55, 0.557, 0.528, 0, 0.38, 0.905, 0.809, 0.722, 0.885, 0.258, 0.758, 0.259, 0.546, 0.512, 0.534, 0.428, 0.284, 0.423, 0.784, 0.467, 0.545, 0.858, 0.634, 0.535, 0.683], [0.119, 1.007, 0.581, 0.634, 0, 0.57, 1.073, 0.894, 1.307, 0, 0.197, 0.7, 0.412, 0.552, 0.768, 0.399, 0.512, 0.504, 0, 0.285, 1.077, 0.068, 0.858, 0.388, 0.235, 0.685], [0.708, 0.805, 0.782, 0.636, 0.552, 0.571, 0.904, 0.179, 0.722, 0, 0.775, 0.909, 0.261, 1.09, 0.511, 0.221, 0.572, 0.592, 0.422, 0, 0.715, 0, 0.601, 0.863, 0.654, 0.031, 0.454], [1.034, 0.825, 0, 0.528, 0, 0.432, 0, 0.448, 1.203, 0.493, 0.807, 1.032, 0.431, 0.664, 0, 0.219, 0.715, 0.596, 0, 0, 1.332, 0.481, 0.454, 1.429, 0.776, 0.801, 0.38], [0.584, 0.802, 0.381, 0.35, 1.092, 0.453, 0.808, 1.418, 0.258, 0.663, 1.25, 0.45, 0.883, 0.385, 1.175, 0.733, 0.701, 0, 0, 0.923, 0.373, 0.779, 0.854, 1.14, 0.216, 0.228], [0.679, 1.057, 1.637, 0.968, 0.698, 0.317, 0, 0, 0, 0, 0.728, 1.448, 0.273, 0.014, 0, 0.445, 0.475, 0.83, 0, 0, 1.764, 1.5, 0.743, 1.466, 0.968, 0, 0.709], [0.272, 1.247, 0, 0.759, 0, 0.634, 0, 0.561, 0.555, 0.493, 0.645, 1.008, 0.679, 0, 0, 0.573, 0.702, 0.931, 0, 0.596, 0.624, 0.681, 0, 1.016, 1.154, 0.38], [1.059, 1.198, 1.136, 1.241, 1.104, 0.645, 0.79, 0.268, 0.349, 0.887, 0.917, 1.635, 1.178, 0.532, 0.256, 1.202, 1.364, 1.294, 0.637, 1.074, 0.935, 0.636], [1.565, 2.001, 1.957, 1.768, 1.84, 1.472, 1.805, 2.148, 1.58, 1.034, 1.556, 2.318, 1.339, 2.31, 2.044, 1.916, 1.133, 2.128, 0.212, 1.778, 1.558, 1.452, 1.325, 1.906, 1.726, 2.504, 2.042]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

