created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Ephuras", "Drumina", "Urilstormwalker", "Vini Boy", "Legacy Of Mathus", "Etchery Howls", "Air One Com", "Black Raspberry Pie", "Mother Ship", "Zaedy Zae", "The Fancy Cheese", "Ateriuz", "Lord Erin The Wise", "Xanvias Einzbern", "Tribal S", "Morton Saltbringer", "Shaca Booey", "Melli Dragonswrath", "Tika Fiery", "Elonith Requiem", "Luke The Knight", "Be\u00eb", "Venomina The Siren", "Rahani Sunray", "Koralia Danai", "Gamora Titus", "Arriasa", "Glorious Gluvs", "Aronorf Xideliesi", "Johosh The Mighty", "Drevarr Moonwillow", "Newtype Khan", "Mistwalker Cael", "Solus Sanctus", "Grasszanine", "Gestern Yesteryear", "Eibh\u00ebar", "Tegan Parker", "Arcanophage Farra", "K\u00f4sair", "Kary\u00edna", "Mike The Archmagus", "Ryvalia Fazebringer", "Xyntharos", "Duke Silvver"];
const professions = ["Reaper", "Druid", "Firebrand", "Tempest", "Berserker", "Druid", "Firebrand", "Chronomancer", "Tempest", "Druid", "Scrapper", "Berserker", "Weaver", "Berserker", "Druid", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Reaper", "Spellbreaker", "Reaper", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Berserker", "Firebrand", "Berserker", "Scrapper", "Spellbreaker", "Vindicator", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Spellbreaker", "Spellbreaker", "Vindicator", "Weaver", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[92, 1, 19, 6], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 21, 2, 1, 5, 12, 3, 0, 3, 2, 29, 2, 3, 7, 0, 14, 15], [6, 5, 11, 0, 0, 12, 14, 16, 16, 0, 28, 26], [28, 0, 7, 14, 0, 94], [0, 0, 0, 4, 0, 1, 18, 0, 9, 4, 7, 0, 41, 0, 6, 2, 42, 0, 9, 5, 0, 0, 14, 5, 10, 4, 0, 0, 11, 7], [6, 0, 0, 0, 0, 1, 4, 0, 0, 15, 17, 2, 7, 1, 2, 16, 0, 20, 10, 19, 0, 4, 20, 0, 0, 2, 36, 19, 0], [1, 0, 0, 0, 0, 0, 16, 0, 6, 0, 0, 0, 2, 3, 0, 2, 0, 0, 12, 0, 0, 16, 0, 0, 45, 0, 34, 2, 0, 2, 0, 59, 0, 7, 5], [0, 0, 0, 2, 1, 1, 6, 0, 0, 0, 34, 10, 6, 0, 0, 5, 0, 6, 5, 13, 0, 21, 0, 0, 0, 5, 16, 21, 4, 2, 0, 0, 34, 0, 0, 16, 5], [0, 0, 0, 0, 0, 0, 11, 0, 14, 0, 0, 3, 0, 0, 0, 0, 0, 20, 0, 21, 0, 3, 5, 0, 0, 3, 6, 26, 16, 0, 9, 10, 62, 1, 0, 4], [0, 0, 0, 0, 0, 0, 1, 0, 12, 0, 4, 4, 8, 0, 24, 0, 0, 9, 8, 13, 17, 0, 18, 0, 0, 27, 10, 11, 9, 0, 8, 9, 23, 0, 0, 0, 0], [0, 0, 3, 0, 0, 20, 3, 32, 0, 2, 16, 0, 0, 19, 16, 22, 1, 0, 10, 75, 0, 6, 4], [1, 0, 0, 0, 1, 0, 15, 0, 2, 0, 1, 15, 0, 6, 0, 4, 0, 7, 8, 7, 0, 12, 13, 0, 0, 3, 13, 9, 2, 1, 15, 12, 73, 0, 7, 15], [3, 1, 0, 1, 0, 1, 27, 0, 21, 20, 2, 14, 15, 2, 0, 0, 0, 37, 13, 20, 0, 4, 27, 0, 17, 2, 2, 13, 1, 0, 3, 0], [1, 0, 0, 0, 0, 2, 6, 0, 3, 17, 15, 4, 14, 1, 0, 13, 0, 7, 0, 19, 0, 21, 2, 0, 0, 12, 14, 33, 11, 1, 5, 29, 18], [7, 0, 0, 0, 1, 0, 6, 0, 31, 3, 7, 6, 1, 1, 19, 8, 0, 24, 1, 32, 0, 2, 41, 0, 19, 27, 5, 10, 0, 2, 10], [0, 0, 2, 2, 0, 0, 4, 0, 14, 11, 5, 10, 2, 7, 24, 0, 13, 3, 28, 1, 5, 27, 0, 0, 8, 13, 6, 2, 7, 5, 69], [2, 8, 1, 0, 4, 0, 4, 8, 2, 0, 6, 10, 1, 0, 0, 27, 0, 7, 1, 0, 0, 162, 1, 0, 17, 15], [0, 0, 2, 3, 0, 0, 5, 0, 5, 1, 6, 13, 5, 8, 13, 1, 0, 34, 5, 17, 1, 17, 25, 0, 0, 3, 6, 34, 7, 0, 9, 0, 60, 0, 0, 4, 0], [5, 0, 0, 0, 0, 0, 25, 0, 30, 11, 8, 15, 3, 0, 10, 21, 6, 0, 33, 0, 15, 4, 0, 0, 8, 6, 7, 14, 0, 9, 33, 26, 0, 0, 0, 0], [0, 8, 2, 2, 0, 9, 1, 9, 1, 0, 30, 8, 20, 0, 18, 12, 0, 0, 2, 2, 2, 22, 0, 9, 7, 105, 0, 0, 9, 12], [0, 40, 11, 2, 34, 11, 62, 130], [0, 0, 0, 0, 0, 1, 11, 0, 3, 13, 13, 1, 1, 12, 41, 0, 0, 7, 2, 25, 2, 10, 5, 0, 0, 23, 5, 29, 19, 1, 19, 0, 52, 0, 0, 2, 9], [0, 0, 0, 0, 1, 0, 14, 0, 13, 0, 5, 1, 6, 0, 0, 6, 0, 20, 6, 32, 0, 2, 5, 0, 0, 31, 34, 41, 10, 0, 21, 3, 56, 0], [0, 0, 1, 0, 0, 0, 21, 0, 5, 0, 8, 13, 9, 1, 3, 2, 42, 4, 27, 0, 0, 18, 0, 0, 23, 9, 2, 9, 0, 8, 1, 92, 0, 8, 10], [0, 0, 0, 1, 0, 0, 5, 0, 22, 12, 21, 10, 7, 3, 4, 0, 20, 3, 33, 0, 22, 2, 0, 11, 8, 14, 20, 0, 18, 10, 60, 0, 6, 9], [5, 0, 0, 0, 2, 0, 17, 0, 29, 36, 29, 16, 16, 0, 10, 10, 0, 4, 1, 49, 1, 1, 0, 0, 0, 0, 1, 29, 16, 0, 22, 30], [0, 0, 0, 4, 0, 0, 3, 0, 9, 5, 3, 4, 8, 1, 0, 6, 0, 43, 1, 24, 0, 18, 16, 0, 0, 2, 2, 8, 23, 0, 24, 27, 90, 0, 0, 13, 1], [0, 0, 0, 0, 0, 0, 14, 0, 19, 10, 8, 6, 7, 1, 3, 0, 0, 7, 5, 14, 0, 31, 0, 0, 0, 10, 9, 6, 0, 11, 21, 128, 0, 18, 8], [0, 0, 0, 2, 6, 0, 7, 0, 15, 8, 17, 5, 23, 2, 1, 19, 10, 3, 34, 0, 13, 9, 0, 0, 11, 12, 24, 6, 0, 43, 2, 64, 0, 0, 3, 17], [1, 0, 0, 0, 0, 0, 2, 0, 13, 6, 21, 19, 7, 6, 27, 21, 0, 3, 2, 34, 1, 22, 17, 0, 0, 13, 5, 31, 7, 1, 3, 12, 95, 0, 0], [0, 0, 0, 0, 1, 0, 11, 0, 11, 15, 10, 6, 16, 4, 17, 22, 36, 3, 34, 0, 37, 34, 0, 17, 13, 19, 12, 0, 12, 2, 48, 0, 0, 2, 8], [0, 0, 0, 3, 0, 0, 20, 0, 19, 9, 13, 10, 0, 3, 4, 16, 0, 13, 37, 33, 2, 9, 13, 0, 0, 23, 15, 11, 4, 0, 20, 6, 131, 1, 0, 9, 6], [4, 0, 1, 1, 1, 1, 79, 0, 20, 6, 9, 31, 2, 2, 40, 2, 2, 29, 2, 42, 0, 1, 19, 1, 0, 40, 12, 73, 11], [4, 0, 0, 1, 1, 0, 20, 0, 7, 2, 0, 21, 13, 7, 2, 1, 0, 48, 3, 21, 0, 47, 2, 0, 0, 31, 8, 21, 6, 1, 16, 11, 121, 1, 13, 10], [0, 5, 0, 0, 54, 6, 59, 0, 20, 30, 0, 0, 21, 10, 21, 28, 0, 7, 11, 186, 1, 0, 5], [0, 0, 0, 0, 0, 0, 11, 0, 4, 1, 19, 9, 5, 6, 9, 5, 21, 2, 11, 0, 39, 47, 0, 0, 1, 12, 38, 10, 0, 15, 46, 137, 0, 19, 11], [5, 0, 0, 5, 1, 4, 37, 14, 0, 1, 16, 19, 4, 7, 0, 20, 16, 33, 0, 34, 71, 0, 0, 15, 6, 16, 26, 0, 18, 13, 89, 0, 10, 15], [0, 0, 0, 2, 2, 0, 16, 0, 6, 16, 6, 10, 0, 0, 2, 4, 71, 1, 31, 0, 44, 22, 0, 0, 58, 53, 18, 13, 0, 3, 12, 104, 0, 0, 2, 6], [11, 0, 1, 1, 1, 0, 26, 0, 15, 2, 11, 2, 12, 4, 15, 25, 12, 25, 26, 0, 23, 73, 0, 0, 19, 13, 35, 14, 2, 15, 41, 91], [1, 0, 0, 1, 0, 0, 14, 0, 24, 44, 1, 26, 8, 2, 14, 27, 24, 4, 81, 0, 22, 27, 0, 0, 10, 1, 37, 0, 3, 37, 23, 93, 0, 0, 9], [0, 1, 2, 1, 0, 0, 23, 0, 23, 1, 18, 18, 7, 8, 41, 24, 0, 17, 12, 51, 0, 17, 16, 3, 0, 14, 36, 42, 53, 0, 49, 5, 151], [2, 0, 0, 3, 1, 0, 45, 1, 21, 75, 1, 22, 5, 17, 0, 31, 0, 41, 18, 50, 0, 13, 33, 0, 0, 62, 45, 32, 3, 0, 22, 8, 178, 1, 20], [13, 0, 0, 0, 0, 2, 47, 0, 6, 45, 13, 23, 11, 2, 6, 24, 0, 56, 11, 78, 1, 40, 59, 0, 0, 50, 89, 49, 34, 1, 28, 28, 29, 0, 0, 4, 3], [14, 0, 0, 2, 0, 1, 49, 0, 0, 51, 43, 65, 4, 5, 39, 64, 1, 127, 24, 34, 2, 55, 13, 0, 41, 15, 18, 26, 3, 97, 17], [2, 2, 0, 2, 5, 8, 94, 1, 26, 0, 42, 154, 43, 24, 41, 79, 0, 25, 20, 77, 0, 13, 38, 2, 1, 45, 24, 150, 34, 3, 92, 63, 58]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

