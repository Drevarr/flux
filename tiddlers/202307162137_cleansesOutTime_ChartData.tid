created: 20230716213730000
creator: Drevarr
tags: ChartData
title: 202307162137_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Koda Kirigaya", "Grootsmaid", "Anti Jimbo", "Alarics Clone", "Cestaphine", "Urilstormwalker", "Brutal Araden", "Scarlet Merc\u00fcry", "Sagaz Homem Fuma\u00e7a", "Tirluka", "Muireann Mackay", "Sakis Ranger", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Soulbeast", "Firebrand", "Weaver", "Chronomancer", "Tempest", "Firebrand", "Renegade", "Firebrand", "Tempest", "Tempest", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.0], [24.0329, 0.0, 0.0, 15.0636, 0.0, 0.0, 0.0, 3.0093, 0.0, 0.0, 0.0, 0.0, 1.0, 6.9524, 15.2553], [0.0, 15.9906, 3.0, 0.0, 14.0545, 0.0, 6.0136, 0.0, 5.0093, 21.08, 0.0, 0.0, 0.0, 19.5714, 0.9841, 1.0], [0.0, 7.0078, 1.9895, 8.99, 0.0, 1.0, 0.0, 0.9811, 0.0, 6.9881, 16.1529, 0.0, 1.0, 3.9818, 0.0, 14.2041, 0.0, 5.0093, 14.0733, 0.0, 0.0, 3.9939, 5.0, 0.9841, 0.0], [27.6667, 0.9895, 40.6, 25.0758, 64.9483, 2.0, 21.6038], [7.0078, 0.0, 8.99, 1.0, 0.0, 5.9434, 9.0229, 39.0047, 8.0139, 3.0, 10.9909, 3.9813], [11.29, 9.0152, 13.6149, 0.0, 26.0259, 3.0, 0.0, 23.9818, 5.972, 13.0408, 1.0, 13.04, 0.0, 0.0, 25.9683, 0.0], [0.0, 9.0078, 4.9789, 7.05, 0.0, 0.0, 0.9811, 9.0229, 10.9762, 38.0494, 0.0, 0.0, 13.1, 0.0, 13.0408, 0.0, 5.0093, 7.0133, 0.0, 0.0, 0.0, 1.0, 16.9524, 7.0213], [109.18, 4.9375, 27.9041, 16.0549, 69.2976, 75.0159, 48.7872], [2.9818, 24.2558, 0.0, 2.99, 11.0152, 34.7471, 9.0303, 20.9057, 10.6031, 20.0595, 32.0424, 26.4306, 12.0233, 14.1364, 0.0, 7.0833, 21.16, 2.9726, 1.9939, 24.9048, 13.0, 0.0], [7.9455, 37.8372, 0.0, 32.85, 28.803, 6.0115, 33.4848, 8.9057, 4.0153, 35.0655, 59.9788, 47.1667, 19.2326, 0.0], [29.0635, 32.0833, 19.0, 68.6364, 4.972, 80.7619, 21.0345, 76.5093, 95.1467, 0.9688, 23.9315, 21.9817, 86.6905, 91.7143, 32.7021], [11.1455, 30.0, 7.0632, 17.8, 23.2727, 47.0, 1.0, 10.0377, 19.1298, 40.8452, 88.1153, 31.1944, 12.1395, 34.4545, 9.9533, 42.2993, 11.0, 25.7037, 53.5067, 0.0, 20.1918, 12.0488, 30.1667, 36.9048, 23.0851], [13.9636, 62.8295, 24.1158, 55.52, 55.2424, 109.046, 19.8485, 58.5472, 58.2595, 64.5238, 169.3624, 79.2083, 50.3488, 89.1818, 42.5047, 94.9048, 32.2759, 105.8704, 119.2067, 17.375, 51.5616, 37.6463, 107.869, 114.0794, 64.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

