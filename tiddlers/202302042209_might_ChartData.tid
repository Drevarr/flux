created: 20230204220933000
creator: Drevarr
modified: 20230705163518699
modifier: drevarr
tags: ChartData
title: 202302042209_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Arons", "Zaylen Harker", "Tegan Parker", "Johosh The Great", "Aronorf Xideliesi", "Sygaldry Verdandi", "Drevarr Moonwillow", "Ravioli Fetabringer", "Vinthry Stormgrave", "High Sorcer Baradun", "Newtype Khan", "Grasszanine", "Domina Flagbringer"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[69.8809, 39.8889, 8.6669, 18.0526, 39.4798, 68.6115, 10.5907, 15.4218, 3.9567, 37.2292, 31.7094], [94.4005, 44.0358, 5.5632, 17.5557, 31.3007, 55.005, 6.2899, 0.0, 4.6917, 43.8971, 51.9919], [98.0784, 29.2256, 5.856, 42.2331, 84.622, 32.1345, 4.8384, 10.0176, 0.0, 51.9542, 25.996], [60.073, 54.1068, 6.9686, 32.4615, 52.8494, 85.692, 7.4189, 29.5254, 6.615, 45.2863, 61.419], [122.598, 40.8763, 4.4506, 24.1805, 33.0309, 59.9265, 8.5478, 10.1494, 4.3978, 66.4014, 89.129], [121.7807, 44.0358, 7.9642, 38.0926, 42.311, 38.793, 7.6339, 19.9033, 5.978, 70.291, 85.9867], [147.5263, 43.8383, 19.7347, 49.3548, 37.5923, 76.428, 13.9238, 32.6889, 0.9433, 105.0197, 81.9873], [157.3341, 44.8257, 9.6038, 43.2268, 56.6244, 82.5075, 8.8166, 33.6116, 5.9167, 58.3443, 108.2689], [318.7548, 117.0997, 12.5318, 60.7825, 53.9505, 125.9325, 0.0, 101.3619, 11.6987, 115.8551, 86.8437], [398.4435, 122.4314, 16.631, 63.4325, 54.5796, 114.063, 0.0, 98.8575, 4.5325, 91.9617, 131.1225], [315.4855, 99.3274, 38.2397, 93.4097, 88.0824, 165.8835, 20.5363, 75.1317, 4.949, 135.581, 197.398], [446.2567, 173.5761, 43.7443, 146.4081, 157.6046, 259.971, 35.9654, 148.0226, 11.9437, 278.1078, 333.9482], [643.6395, 244.8628, 80.6957, 186.6537, 266.1347, 411.3795, 47.5776, 212.7413, 14.602, 377.0153, 378.7984]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

