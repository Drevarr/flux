created: 20230603000934000
creator: Drevarr
modified: 20230705163533271
modifier: drevarr
tags: ChartData
title: 202306030009_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Proteccdebussy", "Arriasa", "Melli Dragonswrath", "Kardknight", "Gamora Titus", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Newtype Khan", "Duke Silvver", "Mistwalker Cael", "Johosh Of The North", "Xyntharos", "Pu Ella", "Aronorf Xideliesi", "Air One Com", "Blanco Padre Guard", "Tika Fiery", "Sister Elon\u00edth", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Druid", "Berserker", "Renegade", "Firebrand", "Herald", "Spellbreaker", "Vindicator", "Vindicator", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 5.635, 6.4865, 2.5568, 1.863, 3.7422, 2.089, 0.0, 2.9106, 2.6656], [0.0, 0.8197, 1.0455, 5.4558, 0.0, 0.8436, 0.6938, 3.1855, 2.2425, 1.8161, 0.0, 0.6468, 0.0, 1.8515, 2.4948, 0.9936, 0.0, 0.9792, 0.9963, 1.1907, 4.265], [1.1252, 2.8156, 0.0, 4.0918, 0.0, 0.7409, 0.0, 0.4213, 3.95, 0.0, 2.0107, 1.148, 0.0, 0.112, 2.1735, 0.0, 2.7535, 0.0, 1.8176, 3.264, 0.0, 1.2569, 2.9322], [0.0, 0.0, 0.0, 4.1674, 26.7893], [5.1543, 2.281, 3.3293, 0.0, 6.5488, 14.6608], [0.0, 1.9246, 2.4534, 12.8601, 0.0, 0.0, 6.1162, 5.8305, 7.9129, 0.0, 0.437], [0.0, 1.8176, 1.868, 8.1837, 0.0, 1.769, 0.0, 0.5947, 5.7339, 6.4584, 4.4753, 0.0, 0.909, 0.0, 4.7495, 3.5759, 2.6224, 1.3662, 0.0, 1.2403, 0.0, 1.3892, 1.7326], [0.0, 1.8533, 0.0, 1.1691, 0.0, 0.0, 0.0, 0.8921, 5.3516, 4.9335, 4.7348, 1.9024, 0.3846, 0.0, 0.161, 6.5696, 1.5734, 2.8566, 1.0692, 4.3085, 0.0, 2.3814, 9.1963], [0.0, 1.6038, 0.0, 7.0146, 1.3992, 0.0, 0.0, 1.8833, 8.4097, 2.3322, 2.789, 0.0, 1.9228, 0.0, 2.576, 7.7339, 3.3436, 2.7945, 1.0336, 5.0266, 0.0, 4.2336, 1.8659], [0.9823, 2.3879, 0.7249, 16.1726, 1.1616, 0.0, 0.0, 1.0655, 9.0468, 4.2159, 4.0213, 0.492, 0.2972, 0.0, 1.3685, 3.8254, 2.688, 3.3534, 0.0, 2.9376, 2.0664, 1.6538, 6.7973], [1.0002, 1.6038, 2.0631, 9.3528, 1.7952, 1.2398, 2.2441, 2.8249, 22.8082, 4.3953, 7.5886, 3.1488, 1.5033, 0.7392, 3.703, 13.8046, 5.3104, 9.936], [7.3418, 0.0, 15.3931, 0.2112, 0.0, 3.9967, 6.7649, 10.7033, 18.5679, 8.9507, 1.476, 3.059, 0.7504, 11.914, 13.1393, 8.0639], [2.3397, 3.7778, 0.0, 22.018, 0.0, 0.1884, 2.1559, 9.0468, 6.9966, 11.0911, 3.5096, 4.0029, 0.0, 11.5115, 9.896, 10.6863, 3.5397, 1.5682, 6.8544, 0.0, 4.8289, 2.9322], [2.1075, 4.6688, 0.0, 22.9923, 1.98, 0.0, 1.2142, 11.4678, 15.6975, 10.8965, 1.4104, 4.7021, 10.787, 10.2287, 10.1618, 7.2036, 1.9958, 6.3322, 0.0, 5.8212, 10.7957], [6.5903, 7.3062, 2.6765, 33.9039, 0.0, 2.1319, 3.2432, 3.7418, 23.3179, 12.3786, 15.9556, 4.1984, 0.6642, 0.0, 7.889, 15.8004, 12.2597, 10.3086, 3.7422, 10.3795, 0.0, 11.3778, 11.3288], [6.4475, 6.4152, 3.9171, 29.812, 4.0392, 0.8165, 4.5209, 3.3949, 22.4259, 21.7971, 13.7503, 6.1664, 2.3074, 1.1872, 17.3075, 16.4657, 14.161, 11.4264, 6.2014, 12.8602, 5.904, 12.5685, 21.8579], [9.4802, 2.1468, 41.3082, 5.8872, 3.9394, 7.3844, 23.4453, 19.1958, 16.4744, 4.428, 6.7298, 2.576, 16.9855, 16.7983, 15.8, 10.3086, 3.2432, 10.1184, 2.3247, 12.7669, 15.9936], [1.3574, 9.801, 3.0389, 47.9331, 4.5144, 3.402, 2.113, 7.211, 32.2373, 16.7739, 16.0204, 3.3128, 4.8944, 0.4256, 12.3165, 20.2079, 12.063, 11.6748, 2.8512, 12.5338, 0.5535, 7.2765, 26.7893], [2.8219, 8.0546, 3.011, 54.1683, 4.1448, 3.2962, 3.9312, 7.4092, 26.7582, 10.764, 16.8636, 4.428, 7.2892, 12.719, 19.0436, 15.0788, 12.9789, 6.0588, 10.967, 3.4686, 9.1949, 17.4597]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

