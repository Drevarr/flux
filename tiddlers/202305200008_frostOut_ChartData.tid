created: 20230520000848000
creator: Drevarr
modified: 20230705163530728
modifier: drevarr
tags: ChartData
title: 202305200008_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Venomina The Siren", "High Sorcer Baradun", "Needragee", "Tegan Parker", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.172, 521.8794, 0.0, 72.7663, 12.9566, 39.8284, 18.5856, 0.0, 20.1309, 16.0923, 54.4971, 99.0, 59.7528, 18.3485, 20.0455, 40.0987, 39.9678, 0.0, 0.0, 19.9302, 4.015], [37.683, 935.0019, 19.7707, 57.4411, 0.0, 38.57, 0.0, 52.1435, 73.2336, 0.0, 78.1713, 134.1648, 26.5877, 19.4083, 0.0, 28.5356, 39.884, 0.0, 0.0, 0.0, 53.805, 31.9915, 19.7753, 20.2917, 79.753, 16.9176, 19.9272], [129.2193, 1223.9955, 55.4778, 155.2954, 36.0196, 61.0953, 0.0, 116.8981, 40.2283, 37.3993, 170.1757, 114.5232], [152.1828, 64.7741, 263.3664, 20.0819, 122.2536, 0.0, 59.4776, 86.1414, 40.1289, 309.3429, 258.192, 184.7242, 61.0512, 50.1725, 153.2945, 188.2761, 73.6443, 0.0, 89.5189, 39.9252, 133.7686, 0.0, 252.2419, 16.8063, 95.3359], [19.9863, 1696.6845, 32.537, 181.7455, 8.2555, 83.6836, 19.272, 65.4701, 39.7936, 99.4056, 93.0257, 216.1368, 97.9205, 66.9686, 0.0, 90.1375, 139.7617, 43.2729, 0.0, 0.0, 63.8035, 37.4519, 99.6673, 20.2917, 190.9589, 66.5351, 3.9854], [186.6978, 1642.4982, 64.7527, 473.0378, 54.6273, 163.5291, 59.1228, 115.8248, 109.3488, 145.6862, 349.914, 318.3048, 350.6424, 116.5824, 40.0675, 242.891, 379.6525, 159.9786, 60.1303, 136.569, 81.2315, 334.2457, 59.9244, 329.9083, 144.601, 197.0695]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

