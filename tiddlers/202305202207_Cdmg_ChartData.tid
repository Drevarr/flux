created: 20230520220730000
creator: Drevarr
modified: 20230705163530888
modifier: drevarr
tags: ChartData
title: 202305202207_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Tribal S", "Suredude", "Saurlex Varok", "Eruyin", "Lucky Leipreach\u00e1n", "High Sorcer Baradun", "Tootsie Pop Rocks", "My Birthday Girl", "Mistwalker Caelon", "Legacy Of Mathus", "Hrakkus", "Bubbleboiii", "Alnerian", "Venomina The Siren", "Necrotic Windrunner", "Kary\u00edna", "Miphest\u00f6", "Cedryn X", "Cerys Fireblade", "Grilo Gringo", "Aronorf Xideliesi", "Lord Erin The Wise", "Smol Gluvs", "Be\u00eb", "Xanvias Einzbern", "Demon Maddx"];
const professions = ["Firebrand", "Druid", "Catalyst", "Untamed", "Vindicator", "Scrapper", "Tempest", "Scrapper", "Scrapper", "Vindicator", "Berserker", "Catalyst", "Berserker", "Guardian", "Weaver", "Scourge", "Vindicator", "Catalyst", "Berserker", "Berserker", "Dragonhunter", "Firebrand", "Weaver", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.3123, 4.3988, 0.0, 9.6102, 0.0, 2.8065, 2.0392, 3.9239, 0.0, 6.3774, 1.1649, 6.902, 5.974, 6.1338, 1.2045, 3.6899, 2.1569, 0.0, 5.0259, 3.3382, 2.512, 0.0, 3.5227, 0.9506, 0.0, 49.3298, 0.0, 1.7176, 58.9375, 0.0, 7.5714, 0.0, 16.7259], [8.0172, 3.6933, 5.4138, 8.1525, 2.3, 10.1935, 0.0, 3.8913, 1.7742, 5.7075, 1.0143, 15.8824, 9.4774, 3.2676, 2.0455, 10.845, 2.2549, 6.0779, 8.9337, 0.8529, 2.4055, 15.9318, 1.3179, 0.0, 8.9043, 5.1071, 7.0941, 8.5, 2.8108, 8.0204, 11.2444, 6.401], [13.9771, 0.0, 3.569, 27.0169, 0.0, 22.6452, 0.0, 8.7065, 6.6452, 0.8113, 0.6703, 21.9216, 23.9861, 18.3451, 3.6591, 0.1667], [17.224, 0.9085, 0.0, 0.2481, 9.0588, 0.6494, 3.6715, 8.8971, 11.6667, 0.0, 5.5455, 6.6944, 13.1277, 4.4464, 10.9235, 25.5625, 2.6622, 7.4286, 10.0556, 6.2487], [5.0487, 1.3313, 0.0, 30.7458, 0.0, 4.0435, 2.2581, 3.2547, 0.0, 0.0, 8.2083, 0.0775, 3.7273, 2.6202, 0.0, 7.0115, 0.0, 8.6254, 15.4021, 37.2045, 4.0741, 0.0, 1.1064, 5.0536, 22.8529, 0.0, 2.2162, 0.0, 14.6497], [18.1347, 1.9387, 5.8966, 12.4068, 0.0, 19.9355, 0.0, 5.8043, 0.9032, 4.6604, 3.3405, 6.5882, 6.7778, 4.7042, 6.9545, 3.4264, 0.9216, 5.013, 3.8934, 0.0, 5.079, 8.4227, 4.9318, 10.4599, 0.0, 20.5, 0.0, 1.0, 46.5833, 4.9189, 0.551, 7.2444, 13.5584], [15.9943, 0.0, 0.0, 15.3559, 0.0, 47.0645, 0.0, 0.0, 0.0, 11.9057, 0.8172, 11.3142, 14.1408, 50.4091, 0.0155, 0.0, 0.0, 2.8156, 6.7794, 5.4124, 0.0, 0.0, 8.642, 0.0, 20.2647, 1.5625, 0.0, 0.0, 0.9111, 17.8426], [23.0229, 2.4908, 4.4138, 10.3898, 0.0, 1.2903, 0.6667, 8.3913, 0.0, 9.0189, 2.7885, 0.0, 9.8958, 17.0493, 2.0227, 21.6667, 0.0, 5.0649, 2.9914, 23.6324, 8.5395, 1.299, 7.5682, 3.2562, 6.7979, 0.0, 7.0529, 38.9167, 8.4459], [10.6504, 0.9448, 0.0517, 24.1525, 0.0, 10.6452, 0.0, 7.0543, 0.0, 0.0, 1.1613, 0.4706, 13.1042, 10.1549, 0.0, 31.124, 0.0, 3.7792, 6.1268, 0.0588, 6.0258, 0.0, 0.0, 1.9352, 48.5638, 27.8036, 2.4765, 39.1042, 0.0, 3.6735, 0.0, 14.7868], [9.2178, 39.0123, 3.7069, 25.4576, 0.0, 0.0, 1.2258, 0.0, 6.6631, 0.0, 2.9462, 0.169, 0.0, 22.8992, 0.0, 2.0779, 20.2565, 7.2353, 13.5481, 43.5464, 8.6364, 5.1759, 10.9362, 0.0, 0.8412, 11.6458, 0.0, 0.0, 0.0, 6.8274], [8.7183, 0.0, 1.1008, 3.5686, 0.0, 9.4697, 6.4853, 20.5361, 0.0, 43.2273, 24.179, 0.0, 78.2234, 0.0357, 6.1, 134.5208, 0.0, 0.0, 10.2, 8.9645], [2.4536, 0.0, 34.9318, 62.2006, 110.1277, 1.7353, 63.5625, 31.3784, 24.3061, 5.8556, 36.2741], [0.0, 0.0, 17.2941, 50.0978, 3.4516, 15.4623, 4.6774, 31.0196, 79.1753], [3.4847, 13.4138, 0.0339, 17.05, 30.2581, 0.5882, 7.1413, 0.0, 8.717, 1.5735, 7.5686, 34.0139, 14.6127, 0.0, 0.0, 8.2594, 10.9158, 0.0, 33.4091, 3.2284, 10.5, 82.6064, 0.0, 8.7, 55.875, 1.1757, 11.1224, 16.7, 20.5635], [12.596, 8.1288, 14.2414, 2.7119, 0.0, 1.2581, 0.0, 2.0543, 8.4516, 3.0189, 0.3118, 1.0784, 16.9115, 26.2324, 0.0, 92.4031, 0.0, 4.5455, 13.0432, 50.1765, 7.3574, 3.3299, 34.4318, 9.6049, 0.0, 22.4149, 0.0, 12.0588, 40.3958, 0.0, 0.0, 1.5111, 23.5381], [4.9366, 65.1136, 89.8915, 0.6275, 1.8571, 5.9424, 89.7941, 5.0017, 0.0, 68.2045, 12.5123, 0.0, 78.4574, 3.9107, 47.1059, 191.7917, 0.8784, 0.3469, 0.3111, 16.8731], [28.4728, 30.6933, 7.8793, 0.4576, 0.0, 0.7419, 0.0, 6.0435, 3.8065, 4.3302, 0.5054, 87.6471, 10.3247, 1.4225, 18.3182, 26.2093, 3.7647, 14.2857, 44.2738, 35.0294, 6.8969, 9.5155, 1.1591, 9.679, 1.2447, 0.625, 7.5471, 12.5833, 0.0, 1.5918, 0.6889, 12.1675], [47.2579, 16.6074, 0.0, 20.2542, 13.975, 8.9355, 0.0, 51.9891, 17.2258, 0.0, 3.7276, 12.3542, 26.4031, 0.0, 14.4416, 11.6484, 47.5588, 10.122, 0.0, 54.0682, 14.1698, 129.0106, 0.0, 0.0], [15.467, 6.0368, 3.431, 44.8983, 7.375, 100.2581, 0.0, 0.0, 0.0, 4.6698, 1.0968, 37.9804, 44.5625, 6.162, 27.9318, 37.969, 12.9216, 31.8442, 23.1412, 40.6765, 6.0893, 0.0, 0.0, 10.5617, 33.6702, 18.1071, 31.9059, 28.5833, 0.1081, 0.0, 24.3222, 9.5482], [27.51, 16.7853, 0.0, 42.0339, 27.475, 9.5806, 0.0, 9.0978, 9.3548, 18.7264, 1.6416, 11.2549, 39.0608, 23.5423, 23.2045, 53.7364, 0.2353, 1.3228, 33.25, 11.0773, 0.0, 56.3409, 15.5401, 6.9787, 0.0, 9.2765, 88.9583, 0.0, 0.0, 10.3667, 32.5685], [15.0141, 27.8182, 117.4341, 0.0, 5.4286, 28.0576, 14.3088, 17.9124, 0.0, 99.0, 22.6358, 0.0, 154.883, 69.3529, 107.3542, 0.0, 7.9796, 61.9667, 14.7513], [24.9599, 11.9264, 0.0, 28.661, 0.0, 5.7742, 0.0, 7.0, 1.7742, 0.0, 10.6272, 2.3725, 18.5781, 4.493, 56.5, 39.8992, 0.0, 7.5195, 12.5187, 36.0735, 28.1546, 0.0, 28.3182, 13.1265, 0.0, 61.3298, 49.4107, 21.5118, 121.6667, 1.4459, 97.6939, 6.5556, 22.7208], [38.4928, 7.1656, 10.3103, 5.9153, 0.0, 0.0, 0.0, 28.2717, 30.2581, 18.7075, 0.276, 57.8039, 32.4861, 18.662, 10.6136, 43.4031, 4.9608, 0.0, 25.3862, 1.0, 40.1701, 1.8351, 3.0, 6.392, 9.2979, 20.6607, 47.3412, 52.6667, 0.0, 0.0, 0.0, 82.2234], [34.5874, 44.0429, 2.7241, 47.1864, 0.0, 14.6774, 0.0, 9.6087, 1.0645, 4.066, 5.3405, 14.0196, 38.8715, 0.2465, 81.7955, 135.4574, 0.0, 0.0, 11.7781, 109.9853, 12.6667, 4.6701, 59.4318, 26.9784, 90.234, 14.6786, 76.5588, 92.7917, 2.027, 8.0408, 8.4667, 25.7157], [42.0802, 25.4417, 0.0, 44.7966, 1.5, 104.4839, 0.0, 32.6304, 7.7742, 4.0189, 2.9391, 25.9216, 57.6632, 4.6056, 8.0909, 10.8605, 4.8431, 21.1169, 46.7003, 25.8235, 18.0533, 5.4948, 38.6364, 16.2994, 137.5957, 21.75, 50.2882, 129.2292, 11.0, 3.0816, 6.1, 77.2386], [65.2292, 16.8466, 34.7069, 2.6271, 5.575, 120.1613, 9.9022, 0.0, 2.6415, 0.0, 41.9804, 47.3993, 13.1972, 15.5455, 106.4729, 0.0392, 20.2857, 40.7061, 0.0, 24.2784, 0.0, 154.9773, 16.1296, 0.0, 127.4681, 23.375, 12.8647, 77.875, 0.0, 0.0, 68.934], [55.0086, 2.8037, 0.6379, 7.2373, 0.75, 5.5484, 0.0, 29.0326, 6.0968, 20.5943, 6.7097, 73.3725, 34.184, 10.5141, 18.3182, 178.1705, 1.8627, 8.7013, 85.6513, 33.0588, 65.1323, 35.9588, 165.1591, 53.3549, 0.0, 106.0, 57.1607, 36.6706, 174.6458, 0.0, 36.8776, 70.6667, 93.5076]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

