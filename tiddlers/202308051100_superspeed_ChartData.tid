created: 20230805110022000
creator: Drevarr
tags: ChartData
title: 202308051100_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Fyshles", "J\u00e2sm\u00eene", "Legoh Brave", "Sakis Ranger", "Heals For Daddy", "Tegan Parker", "Aelia Liore", "Charr Surethang", "Elorakill", "Big Boy Belkins", "Kahlyanne", "Drevarr Moonwillow", "Jimbo One Eye"];
const professions = ["Druid", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Herald", "Berserker", "Spellbreaker", "Holosmith", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.235, 1.215, 0.669, 0, 0.084, 0.51, 0, 0.205, 0, 0], [0.825, 0.47, 0, 0.515, 0.458, 0.604, 1.019, 0, 0, 0.162, 1.949], [0, 0, 0.222, 0, 0, 0, 0.235, 0.383, 0.816, 0.522, 0.608, 0, 0, 0, 0, 0, 0.795, 0.469, 0.674, 0, 0.513, 1.871], [0.518, 0.801, 0, 0.396, 0, 0.287, 0.499, 0.992, 1.195, 1.058], [2.263, 1.968, 1.53, 0, 0.509, 0.387, 0.59, 1.072, 1.619, 0.522, 0.805, 0.637], [2.27, 2.002, 0.667, 0.468, 0.516, 0.829, 1.073, 1.673, 0.635, 0, 0.594, 1.99, 0.712], [0.371, 0.971, 0.215, 0, 0.319, 1.36, 0, 0, 0.418, 0.243, 0.339, 0.193, 1.781, 0, 0.332, 1.372, 1.608, 0.769, 0.657, 0.59, 0, 0.485, 0.342, 1.96, 0, 0], [1.149, 0, 0, 0.395, 0.766, 2.068, 0, 0.688, 0, 0.388, 1.389, 0, 0, 1.34, 0.76, 1.51, 0.458, 0, 0.631, 0, 0, 0.683, 1.73, 0, 0], [0, 0, 0, 0, 0, 0.691, 1.755, 1.248, 0, 0, 0, 0.309, 0, 0.792, 1.17, 0, 1.329, 1.208, 0.992, 0.469, 1.578, 0, 0, 0.171, 1.7, 1.875], [5.825, 0.351, 0, 0.128, 0.532, 3.021], [1.088, 0.94, 0.679, 1.417, 0.695, 0.803, 0.814, 1.042, 0.804, 0, 0.991, 1.991, 0.994, 1.275, 1.006, 0.991, 1.196, 1.432, 1.858, 1.098, 1.578, 1.017, 1.428, 1.848, 1.19, 2.347, 1.04, 3.13], [2.641, 0.235, 0.733, 1.784, 2.128, 2.726, 1.74, 0.703, 1.966, 3.606, 1.881, 3.944, 2.379, 1.489, 2.453, 1.687, 3.867, 2.596, 1.774, 2.007], [7.396, 7.209, 3.452, 2.976, 0.885, 1.916, 2.278, 2.995, 2.929, 1.37, 0, 1.239, 1.493, 1.98, 1.757, 3.22, 0.247, 2.603, 2.255, 4.199, 3.28, 2.869, 0.772, 2.808, 1.435]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

