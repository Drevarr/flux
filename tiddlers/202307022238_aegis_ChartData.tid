created: 20230702223827000
creator: Drevarr
modified: 20230705163540902
modifier: drevarr
tags: ChartData
title: 202307022238_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Sarette Fay", "Kittendoo", "Amiti\u00e9l", "K\u00e2 Otik", "Thalia Mavren", "Tika Fiery", "Silvyrs", "Thats Not Nice", "Aronorf Xideliesi", "Pixzil", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.9444, 2.3568, 50.9149, 18.696, 19.3274, 40.0706, 0.0, 7.3804, 0.0, 5.755, 4.6498, 0.1041, 31.3326, 0.0, 22.8312, 46.9899, 34.1523, 2.0462, 0.0, 12.8856, 0.0, 23.2632, 0.0, 0.0, 0.0, 18.8415, 2.1285, 55.0044, 0.0, 29.4348, 0.0, 0.0, 1.7199, 0.0, 34.054, 0.0, 0.0, 22.568, 0.0, 0.0, 0.0, 0.0, 16.5403, 16.6585, 0.0, 6.9663, 0.0, 23.4446, 0.0, 62.9063, 0.0], [25.2853, 27.1488, 15.7872, 77.3712, 3.969, 18.6701, 0.0, 90.7236, 47.3378, 179.1504, 29.5526, 111.6469, 113.5183], [3.4791, 30.6106, 84.3091, 0.0, 53.4514, 0.0, 1.8775, 54.3589, 3.7485, 32.4612, 41.1661, 13.2327, 0.0, 8.9712, 0.0, 101.2284, 33.6899, 22.8144, 27.0811, 22.8744, 12.4362, 28.477, 61.0926, 17.9172, 3.7462, 78.0516, 0.0, 23.1439, 57.8952, 58.7853, 0.0, 62.9905, 0.0, 0.0, 0.0, 0.8702, 23.1346, 119.4715, 0.0, 39.9789, 67.7149, 80.6259, 0.0, 0.0, 9.0396, 14.0659, 45.8183], [36.4748, 7.9437, 75.9648, 0.0, 24.2438, 0.0, 10.844, 19.8891, 13.7966, 12.4609, 20.716, 0.0, 28.1736, 0.0, 66.5028, 43.7749, 79.1265, 0.0, 0.0, 155.3622, 98.5608, 7.9002, 13.3419, 30.8574, 215.5745, 28.1556, 0.0, 3.9401, 53.4362, 109.6474, 9.3933, 0.0, 18.0063, 0.0, 0.0, 52.1056, 27.2105, 41.7094, 0.0, 31.8786, 143.2922, 28.0141, 16.6929, 0.0, 90.4154, 0.0, 26.1014], [32.303, 101.3811, 56.496, 141.5386, 43.5418, 116.6867, 83.916, 25.1839, 35.8533, 18.752, 58.4169, 33.0057, 15.12, 131.292, 41.7842, 153.3168, 104.8698, 3.8335, 68.0064, 45.9853, 74.844, 12.6252, 29.9614, 19.6608, 122.4342, 67.0052, 202.6728, 0.0, 63.8361, 95.0053], [0.5313, 28.3194, 33.1443, 90.0163, 105.4688, 160.5701, 65.988, 22.7237, 27.616, 10.6061, 32.6359, 24.4705, 83.8679, 0.0, 92.484, 19.9368, 157.8213, 80.0226, 7.5768, 55.3766, 64.8, 32.3946, 0.0, 0.0, 30.6441, 194.0341, 0.0, 0.0, 57.6445, 31.0635, 69.0872, 12.2157, 0.0, 63.5591, 14.5854, 0.0, 0.0, 30.2771, 13.1146, 45.3768, 33.1776, 69.6103, 10.172, 67.5461, 57.9815, 27.7847, 0.0, 14.538, 81.4026, 9.99], [18.1801, 37.2229, 28.0426, 104.855, 15.2205, 162.6563, 27.162, 19.5191, 7.0339, 34.3098, 69.5286, 33.2522, 83.1987, 38.5056, 55.9892, 174.6927, 152.2987, 0.0, 26.88, 101.9691, 65.1888, 27.3294, 0.0, 0.0, 89.4438, 17.9645, 121.4136, 27.9797, 71.8156, 25.7253, 178.8188, 18.4338, 94.5805, 0.0, 7.7121, 4.4962, 50.8924, 58.0574, 0.0, 0.0, 208.5502, 156.176, 4.7318, 0.0, 25.447, 0.0, 83.3743], [74.5207, 14.6205, 50.8138, 16.8397, 92.0113, 43.2, 12.7214, 0.0, 20.7931, 64.464, 26.4837, 41.7667, 0.0, 146.5632, 134.435, 214.2504, 118.5358, 3.06, 37.1784, 57.1173, 85.4712, 41.8824, 11.909, 0.0, 287.4573, 0.0, 115.3548, 14.3297, 25.9582, 29.7507, 118.3149, 86.2155, 134.3207, 5.9202, 0.0, 0.0, 32.0538, 18.9077, 167.5212, 0.0, 63.6854, 96.6339, 22.5748, 0.0, 32.251, 3.5653, 113.0436], [23.5683, 28.9328, 34.1251, 36.7706, 57.8398, 1.404, 7.3804, 0.0, 27.4743, 45.1881, 54.3212, 29.2336, 102.6648, 5.981, 118.1817, 44.9442, 0.0, 0.0, 49.1568, 110.227, 39.2688, 8.4672, 0.0, 59.8662, 106.5953, 116.5428, 61.8645, 84.9934, 45.6568, 143.3916, 15.7437, 0.0, 210.8948, 7.7292, 75.107, 0.0, 75.4027, 39.5704, 156.8918, 68.8787, 67.2727, 204.5906, 101.1924, 0.0, 79.7234, 56.5567, 182.5222, 51.606], [41.1884, 131.5501, 42.1939, 242.2939, 126.576, 4.4671, 0.0, 41.6084, 39.8616, 91.3567, 59.1973, 0.756, 198.2736, 87.1681, 106.3062, 31.6436, 50.0735, 31.1976, 7.2054, 31.6224, 11.4156, 14.8262, 4.3778, 98.2602, 127.9654, 141.8472, 77.7006, 61.5846, 2.2134, 136.4071, 98.6958, 91.3583, 0.0, 55.1696, 69.9888, 304.8326, 10.5565, 249.3855, 215.6205, 64.2492, 29.3691, 150.6934, 28.386], [143.8415, 119.9085, 98.2426, 50.681, 235.7474, 121.77, 30.3631, 27.9695, 12.9433, 87.4073, 51.6138, 91.5642, 53.9028, 124.3368, 161.9034, 163.0629, 127.7438, 60.928, 56.3136, 153.0549, 238.6584, 78.9642, 72.8957, 220.7655, 173.5153, 228.096, 41.3363, 91.5823, 175.1161, 82.4229, 51.491, 159.4663, 24.4398, 82.8867, 0.0, 99.153, 58.0064, 233.1622, 15.8112, 24.6145, 97.7886, 248.8079, 49.9636, 43.4877, 39.8714, 67.8062, 287.4912]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

