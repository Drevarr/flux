created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Cura Ativos", "Star Guardian Pam", "Darth Sies", "Mmathuss", "Vera Khin", "Tribal S", "Eloraaaaaaaaa", "P\u00edogre", "Absern", "Gamora Titus", "Explorer Theodora", "Sister Seraphena", "N\u00e8yp\u00e4", "Bella Sassy"];
const professions = ["Dragonhunter", "Willbender", "Willbender", "Firebrand", "Dragonhunter", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 280.8204], [61.3821, 54.0029, 9.7594, 0.0, 6.2597, 20.3747, 31.4179, 0.0, 0.0, 36.3825, 9.0016, 53.6256], [25.4179, 8.7204, 18.0362, 12.6289, 0.0, 104.7235, 15.0976, 90.2922, 4.9157, 23.0128, 19.867, 0.0, 0.0, 0.0, 18.6732, 33.318, 0.0, 27.9398, 0.0, 20.493, 46.3533, 22.9938, 0.0, 5.7411, 0.5193, 0.0, 0.0, 27.5757], [0.0, 129.4371, 43.8372, 26.235, 0.0, 33.1162, 139.8856, 130.9144, 84.4696], [0.0, 14.591, 0.0, 10.8141, 29.898, 0.0, 0.0, 0.0, 0.0, 5.95, 0.0, 0.0, 15.2256, 0.5888, 20.0002, 17.6011, 45.2785, 10.0353, 18.7114, 6.0534, 16.2901, 0.0, 84.1779, 31.6638, 13.4467, 66.7766, 15.8051, 44.1735, 0.0, 38.0088, 27.433, 17.9806, 10.0343, 0.0, 0.0, 0.0, 24.2896, 4.0071, 0.0, 0.0, 0.0, 0.0, 2.015, 7.8593, 2.6052, 8.0308, 0.0, 26.3328, 0.0, 28.0675, 0.0, 19.4408, 3.9703, 22.848, 1.8942, 0.0, 0.0, 1.9897, 11.9988, 0.0, 20.1844, 0.0, 20.2072, 3.9843, 0.0, 0.0, 0.0, 9.1851, 27.8003, 0.0, 4.0162, 17.4017, 23.2406, 4.0071, 0.0, 0.0, 0.0, 142.3962], [53.8553, 43.1501, 15.818, 11.2484, 55.848, 3.8693, 0.0, 36.1522, 44.7123, 46.992, 9.0675, 6.1088, 37.0451, 23.5399, 11.1089, 40.7679, 25.655, 12.3583, 35.7561, 4.7281, 0.0, 40.3508, 0.0, 11.6243, 0.0, 15.1682, 58.2008, 0.0, 66.0618, 12.0819, 32.6952, 33.6746, 62.0099, 34.986, 46.7851, 37.1633, 33.9304, 11.9869, 0.0], [152.4038, 205.1477, 102.8973, 32.3787, 0.0, 97.008, 0.0, 0.0, 490.8399], [6.0896, 0.0, 0.0, 65.504, 0.0, 0.0, 35.7399, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 69.4815, 0.0, 122.2784, 0.0, 11.6974, 0.0, 0.0, 5.2038, 0.0, 0.0, 0.0, 60.3962, 139.0387, 99.0826, 0.0, 125.5226, 0.0, 0.0, 48.754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.5025, 4.929, 43.8816, 53.5054, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.2409, 0.0, 69.6478, 0.0, 0.0, 5.2175, 1.7418, 0.0, 0.0, 19.6707, 69.4771, 0.0, 0.0, 70.4934, 22.7178, 0.0, 0.0, 0.0, 38.178, 321.9306], [32.9875, 56.7832, 28.9763, 151.5824, 275.4629, 194.6816, 90.6066, 37.8352, 113.4989, 105.8995, 112.6013, 146.3567, 153.2589, 87.2793], [25.965, 704.0986, 87.3824, 317.9878, 6.3694, 96.6112, 54.7536, 19.593, 42.0288, 28.175, 157.5784, 37.2816, 47.53, 43.6722, 25.3368, 65.3706, 102.6399, 0.0, 34.3666, 33.8616, 0.0, 0.0, 30.0492, 103.4816, 0.0, 95.535, 75.838, 55.2051, 71.4285, 0.0, 36.3146, 16.8165, 271.4862], [31.5755, 69.8775, 0.0, 76.4337, 0.0, 136.3912, 0.0, 36.6528, 0.0, 0.0, 53.3216, 33.2678, 153.7344, 88.3912, 55.9977, 147.4721, 58.4991, 53.7537, 0.0, 0.0, 189.1642, 141.9873, 28.9861, 133.5107, 55.0429, 114.0573, 125.4954, 88.524, 108.679, 337.4044, 176.6895, 149.8766, 0.0, 131.3259, 226.8483, 92.7738], [32.2476, 43.173, 45.5773, 108.3254, 69.6188, 905.5107, 89.7288, 324.2712, 128.436, 204.0752, 9.7155, 164.1656, 62.4708, 141.6307, 42.3752, 104.389, 142.9596, 0.0, 161.945, 73.9954, 40.1925, 249.3901, 79.3611, 0.0, 158.7186, 173.5348, 0.0, 77.0253], [11.2576, 201.377, 116.1782, 128.61, 29.4718, 143.8388, 23.7789, 116.5367, 116.2855, 120.0848, 40.4358, 55.848, 54.545, 39.1373, 61.2284, 100.7516, 22.3028, 41.4365, 125.5192, 76.9871, 71.9482, 36.3193, 20.5012, 0.0, 142.1421, 0.0, 164.2431, 88.1832, 249.6144, 25.8665, 140.8701, 37.6846, 138.3264, 126.5917, 215.613, 26.6475, 163.212, 0.0, 173.1048, 214.2448, 80.2752], [29.0625, 314.7613, 79.307, 133.1746, 128.1324, 165.0304, 33.4989, 167.0544, 23.3145, 71.0068, 327.3965, 51.7066, 161.2149, 47.4672, 309.3686, 82.9546, 336.8799, 77.6682, 80.5752, 194.6928, 409.5956, 87.159, 226.0747, 0.0, 215.6805, 140.0525, 132.6783, 12.914]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

