created: 20230218220736000
creator: Drevarr
modified: 20230705163519621
modifier: drevarr
tags: ChartData
title: 202302182207_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Anita Strips", "Irish Mini Rev", "Belvyn Brightblade", "Zadie Miststep", "Xanvias Tseli", "Koralia Danai", "Blanco Padre Guard", "Sygaldry Verdandi", "Gabeulon", "Kahless The Drunk", "Aronorf Xideliesi", "Flanneryflame", "El Mas Prron Aki", "Johosh The Great", "Drevarr Moonwillow", "Tegan Parker", "Jessica Jung", "Sheep Poh", "Kia Forte", "Newtype Khan", "Venomina The Fierce"];
const professions = ["Dragonhunter", "Chronomancer", "Herald", "Firebrand", "Tempest", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Catalyst", "Catalyst", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.3915, 4.4622, 2.956, 0.0, 3.4047, 2.1842, 3.2406, 0.0, 3.0444, 3.271], [3.8657, 5.1282, 0.0, 4.4339, 0.0, 10.0214, 1.2848, 0.0, 0.0, 0.3774, 5.0056], [7.8373, 16.9915, 0.0, 5.2991, 5.4849], [4.9468, 10.5894, 13.3358, 7.3899, 0.4723], [7.1089, 3.6297, 9.8431, 3.7223, 7.1949, 2.7944, 0.0, 0.0, 13.1334], [4.4226, 9.1908, 0.0, 0.0, 0.0, 23.3191, 5.364, 4.4091, 2.5397, 0.0, 0.9912], [9.6314, 4.4955, 7.2677, 12.6449, 0.0, 14.9037, 4.9144, 0.0, 0.0, 1.0567, 10.4076], [12.8747, 1.8648, 3.6338, 17.0789, 4.6051, 14.7752, 7.0022, 0.7323, 0.0, 6.0463], [2.2311, 1.8346, 21.8413, 1.8893, 10.5996, 15.257, 3.1746, 14.5706], [7.7256, 9.8784, 9.1963, 7.321, 17.1521, 8.03, 5.0947, 0.7326, 3.8243, 3.4692], [4.783, 18.5814, 12.9125, 8.3752, 0.0, 8.5439, 11.3062, 0.0, 8.2295, 4.252, 2.7258], [25.8149, 7.9587, 19.651, 13.6303, 6.2955, 8.0942, 1.0012, 0.0, 2.7754], [14.7823, 7.6089, 0.2362, 17.6018, 18.212, 7.7588, 8.2784, 12.1774], [49.9787, 14.6788, 0.3272, 26.7624], [12.3178, 8.1918, 12.595, 18.8853, 0.0, 20.4926, 15.514, 6.5748, 0.0, 0.6793, 2.1311], [16.5766, 6.8265, 10.2665, 9.5795, 4.487, 22.484, 12.6232, 5.0479, 7.7411, 5.0823, 13.6786], [22.8665, 5.5611, 24.7313, 24.9614, 19.015, 10.7923, 3.708, 0.0, 7.1366], [28.4382, 28.471, 14.9988, 0.3542, 35.3962, 0.0, 15.2372, 0.0977], [17.0755, 19.4327, 4.8413, 29.5504, 19.0472, 3.9417, 4.8107, 4.881, 25.0774], [27.37, 0.7085, 46.317, 24.347, 9.7219, 11.2088, 12.6052, 40.9366], [31.2858, 22.7439, 28.1534, 24.3593, 6.337, 42.9123, 28.2335, 5.5153, 6.2515, 9.4853, 26.7128], [46.9669, 3.1094, 58.2014, 25.696, 7.1045, 18.4127, 13.5864, 61.6031]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

