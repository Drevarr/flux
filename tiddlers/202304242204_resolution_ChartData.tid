created: 20230424220408000
creator: Drevarr
modified: 20230705163526641
modifier: drevarr
tags: ChartData
title: 202304242204_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Rudjulin", "Sub Train", "Kiloak", "Sygaldry Verdandi", "Gavann", "Zaylen Harker", "Johosh The Great", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[382.2221, 0.0, 111.9512], [155.0438, 0.0, 199.6963, 197.0074, 81.9965, 221.9333, 238.7133, 167.9156, 246.18], [518.0706, 39.788, 143.7467, 175.5797, 193.2941, 0.0, 203.9837, 208.6195, 103.6373, 116.13], [675.2195, 51.7685, 127.4612, 161.1674, 137.1955, 90.2573, 110.0698, 99.241, 154.497, 169.344, 210.4482, 188.7], [795.4479, 30.037, 59.9306, 236.129, 193.6166, 0.0, 27.3389, 149.6678, 61.2758, 124.1415, 203.4774, 303.5692, 197.1], [1176.0132, 126.469, 88.9343, 187.8374, 94.4559, 132.24, 195.072, 116.0083, 132.1898, 154.0854, 122.7869, 10.5], [911.8895, 0.0, 152.3392, 169.5114, 163.8874, 60.1492, 191.0381, 213.9034, 221.8949, 220.2795, 229.7169, 206.2865, 223.56], [1017.2077, 49.147, 168.2215, 186.0208, 157.3286, 37.3189, 79.1213, 207.6979, 180.5558, 273.0892, 254.457, 245.0011, 266.46], [1202.9936, 63.7245, 204.5459, 182.4066, 178.0262, 87.5046, 44.4605, 128.6246, 241.2182, 227.409, 130.6242, 292.4588, 324.66], [1179.8, 0.0, 271.9834, 221.7168, 163.6454, 0.0, 174.696, 269.1686, 155.6774, 243.579, 203.7861, 281.6539, 383.64]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

