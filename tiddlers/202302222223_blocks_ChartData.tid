created: 20230222222328000
creator: Drevarr
modified: 20230705163519927
modifier: drevarr
tags: ChartData
title: 202302222223_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Mustache Bloodclaw", "Sumatra Satyricon", "Kosair", "Ark Darkness", "Husky Guard", "Spreadflamesoflight", "Skye Nightroad", "Xyntharos", "Zadie Miststep", "Panther B Me", "Dark Sidiuz", "Newtype Khan", "One Whole Keg", "Venomina The Siren", "Oo Dads Mad", "Etchery", "Cat Wigglebooty", "Legacy Of Mathus", "Ace Hammers", "Sassy Daddy Demon", "Lord Erin The Wise", "Kosair", "Elonith Tenebris", "Sp\u00edcy Cheese", "Blanco Padre Guard", "Smol Gluvs", "Smol Daddy Tika", "Tribal S", "Kiloak", "Fribble Bibble", "Mike The Archmagus", "Jeckyll Mbs", "Zaylen Harker", "My Birthday Girl", "Sygaldry Verdandi", "Rina Of Theros", "Mac Aaroni", "Drevarr Moonwillow", "Xanvias Tseli", "Mistwalker Caelon", "Arcanophage Farra", "Koralia Danai", "Primal Clone", "\u00c1rk\u00e1ntor", "Eibh\u00ebar", "Ryvalia Fazebringer", "Ravioli Fetabringer", "Black Raspberry Pie", "Bella Sassy", "Tootsie Pop Bringer"];
const professions = ["Herald", "Soulbeast", "Firebrand", "Firebrand", "Dragonhunter", "Dragonhunter", "Scrapper", "Vindicator", "Tempest", "Scourge", "Scourge", "Spellbreaker", "Berserker", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Berserker", "Vindicator", "Vindicator", "Weaver", "Dragonhunter", "Scourge", "Berserker", "Firebrand", "Scourge", "Berserker", "Druid", "Firebrand", "Scrapper", "Tempest", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Tempest", "Scrapper", "Berserker", "Vindicator", "Spellbreaker", "Firebrand", "Chronomancer", "Scourge", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89, 0, 1, 2, 0, 5, 5, 3], [1, 2, 79, 0, 1, 1, 1, 5, 2, 2, 2, 10], [2, 2, 2, 2, 6, 10, 6, 14, 32, 12, 25, 15], [27, 3, 2, 5, 5, 5, 14, 35, 9, 10, 13], [4, 7, 3, 30, 7, 61, 8, 15, 15], [1, 151], [1, 3, 161], [1, 0, 135, 0, 0, 2, 4, 5, 0, 17, 3, 10, 8], [8, 7, 110, 1, 1, 4, 4, 8, 7, 22, 7, 8, 12], [2, 1, 146, 4, 2, 7, 6, 10, 12, 25, 11, 12, 14], [0, 221, 0, 2, 5, 6, 9, 10], [1, 1, 194, 2, 2, 3, 5, 9, 1, 16, 5, 11, 11], [2, 3, 156, 4, 7, 2, 7, 13, 24, 16, 19, 16], [175, 0, 1, 6, 4, 7, 11, 29, 15, 17, 11], [2, 1, 280], [2, 6, 278], [1, 0, 229, 1, 0, 2, 2, 6, 5, 16, 7, 13, 12], [0, 2, 229, 0, 0, 2, 4, 2, 4, 23, 5, 17, 11], [3, 2, 225, 1, 1, 10, 5, 3, 3, 22, 5, 10, 9], [3, 2, 182, 4, 3, 3, 7, 8, 22, 31, 14, 17, 9], [4, 0, 235, 6, 1, 7, 2, 4, 5, 12, 11, 13, 10], [323], [5, 0, 240, 0, 0, 8, 7, 4, 4, 20, 6, 19, 15], [0, 2, 244, 0, 1, 6, 4, 6, 14, 29, 11, 17], [3, 2, 256, 1, 2, 9, 4, 6, 0, 15, 7, 19, 11], [1, 1, 249, 0, 6, 4, 6, 10, 34, 13, 17, 16], [3, 2, 284, 0, 0, 10, 6, 8, 4, 13, 13, 12, 9], [5, 2, 278, 1, 1, 11, 4, 6, 7, 29, 7, 16, 9], [245, 6, 2, 13, 7, 11, 19, 23, 14, 24, 12], [1, 2, 278, 0, 2, 4, 7, 5, 4, 38, 13, 20, 18], [5, 3, 294, 2, 2, 6, 6, 5, 8, 22, 16, 13, 13], [1, 2, 309, 3, 4, 6, 8, 13, 19, 11, 17, 13], [4, 5, 322, 1, 15, 7, 5, 2, 27, 13, 19, 12], [2, 2, 316, 0, 1, 3, 4, 8, 13, 29, 15, 19, 25], [4, 1, 373, 2, 3, 4, 14, 10, 14, 33, 15, 21, 7], [3, 4, 414, 2, 3, 10, 8, 5, 14, 21, 5, 21, 17], [6, 3, 427, 5, 1, 10, 6, 9, 6, 21, 11, 13, 17], [390, 4, 4, 6, 9, 14, 21, 39, 15, 26, 15], [4, 2, 445, 2, 4, 8, 7, 6, 10, 20, 7, 20, 13], [5, 4, 417, 5, 3, 9, 9, 18, 4, 33, 18, 19, 10], [6, 3, 443, 8, 5, 8, 10, 8, 10, 25, 9, 16, 12], [7, 4, 445, 3, 3, 8, 10, 9, 9, 27, 11, 18, 12], [6, 3, 471, 1, 2, 13, 5, 8, 25, 49, 10, 16, 11], [4, 4, 493, 5, 1, 8, 7, 10, 14, 28, 14, 17, 17], [3, 4, 487, 0, 3, 5, 11, 13, 18, 34, 16, 30, 7], [4, 5, 464, 4, 6, 10, 13, 17, 24, 38, 19, 32, 10], [5, 7, 534, 5, 2, 7, 5, 9, 13, 35, 13, 22, 14], [3, 3, 537, 4, 2, 10, 7, 5, 6, 32, 23, 17, 23], [7, 5, 514, 6, 3, 10, 9, 17, 20, 38, 11, 29, 9], [3, 3, 507, 4, 2, 10, 8, 27, 16, 52, 13, 14, 23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

