created: 20230508221143000
creator: Drevarr
modified: 20230705163529166
modifier: drevarr
tags: ChartData
title: 202305082211_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Sumatra Satyricon", "Newtype Khan", "La Morte Vivante", "No Reserv\u00e9", "Panther B Me", "Mincemeat Pie", "Husky Guard", "Inedible Plant", "Smol Gluvs", "Tootsy Pop Tart", "Rozaalyna", "Lord Erin The Wise", "Jeckyll Mbs", "Cerys Fireblade", "Kary\u00edna", "N\u00e9azoule", "Be\u00eb", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Chronomancer", "Soulbeast", "Spellbreaker", "Dragonhunter", "Herald", "Scourge", "Berserker", "Dragonhunter", "Vindicator", "Scourge", "Scourge", "Scourge", "Weaver", "Berserker", "Berserker", "Vindicator", "Reaper", "Scourge", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1189.0, 5817.0, 0.0, 0.0, 7321.0, 33616.0, 5405.0, 3017.0, 3128.0, 46210.0, 4443.0, 2825.0, 18492.0, 5722.0, 0.0, 21473.0, 7794.0, 4195.0], [0.0, 3268.0, 0.0, 4706.0, 5392.0, 40268.0, 6341.0, 3867.0, 3086.0, 68902.0, 6677.0, 8072.0, 6843.0, 3334.0, 0.0, 14345.0, 4988.0, 10371.0], [2722.0, 0.0, 0.0, 1571.0, 17052.0, 28479.0, 2779.0, 1313.0, 8899.0, 43788.0, 18117.0, 202.0, 5622.0, 0.0, 2058.0, 24148.0, 21015.0, 13885.0], [6685.0, 12757.0, 35409.0, 13133.0, 13549.0, 23281.0, 0.0, 0.0, 56215.0, 26826.0, 15202.0], [2304.0, 25944.0, 0.0, 8586.0, 3868.0, 11273.0, 107028.0, 18481.0, 15088.0, 15596.0, 9972.0, 0.0, 5831.0, 29330.0, 31265.0], [1846.0, 17492.0, 0.0, 0.0, 12785.0, 67615.0, 7448.0, 9815.0, 19309.0, 170134.0], [2762.0, 2774.0, 0.0, 7202.0, 60198.0, 14614.0, 3797.0, 0.0, 92433.0, 13670.0, 8414.0, 39097.0, 4584.0, 8856.0, 39078.0, 14140.0], [9032.0, 12016.0, 0.0, 20414.0, 90016.0, 12600.0, 0.0, 12849.0, 35147.0, 8494.0, 24165.0, 7413.0, 3055.0, 0.0, 40178.0, 11991.0, 24790.0], [5453.0, 1446.0, 0.0, 15317.0, 15971.0, 118861.0, 9942.0, 0.0, 21217.0, 144040.0], [6354.0, 6919.0, 0.0, 1914.0, 13962.0, 55301.0, 9514.0, 3236.0, 10039.0, 91822.0, 7883.0, 5052.0, 44646.0, 2643.0, 264.0, 43626.0, 25213.0, 17045.0], [0.0, 13259.0, 0.0, 9201.0, 24369.0, 50437.0, 11497.0, 6153.0, 9097.0, 90766.0, 18428.0, 19401.0, 15371.0, 6445.0, 47041.0, 13307.0, 24352.0], [1355.0, 0.0, 0.0, 6378.0, 5496.0, 68572.0, 11084.0, 3295.0, 8338.0, 117130.0, 11817.0, 42463.0, 16981.0, 6570.0, 4195.0, 44118.0, 42699.0, 37483.0], [22240.0, 16160.0, 2672.0, 41997.0, 50832.0, 26992.0, 2660.0, 8296.0, 73621.0, 8515.0, 39089.0, 24074.0, 53734.0, 0.0, 65113.0, 40931.0, 50832.0], [7024.0, 19644.0, 0.0, 5819.0, 25772.0, 100395.0, 18833.0, 12479.0, 52857.0, 209372.0, 38070.0, 6585.0, 17389.0, 17355.0, 3039.0, 23863.0, 50560.0, 38497.0], [8851.0, 12351.0, 21253.0, 82203.0, 149725.0, 24302.0, 0.0, 18741.0, 142199.0, 30199.0, 3727.0, 26864.0, 2306.0, 9900.0, 29652.0, 84601.0, 26471.0], [47972.0, 34829.0, 0.0, 1623.0, 71363.0, 152389.0, 39004.0, 2856.0, 28710.0, 228710.0, 37643.0, 20273.0, 20078.0, 7753.0, 6732.0, 20407.0, 19868.0, 16678.0], [7525.0, 47376.0, 0.0, 85429.0, 124846.0, 8390.0, 16358.0, 268848.0, 18647.0, 25929.0, 41655.0, 22425.0, 0.0, 75203.0, 45543.0, 48968.0], [18371.0, 3951.0, 0.0, 10697.0, 90472.0, 215804.0, 14616.0, 1348.0, 14688.0, 187885.0, 42008.0, 50020.0, 36782.0, 23708.0, 265.0, 94306.0, 49864.0, 45926.0], [26532.0, 96188.0, 2040.0, 135891.0, 240824.0, 76444.0, 49993.0, 17030.0, 425993.0, 52241.0, 42678.0, 62166.0, 2183.0, 0.0, 214152.0, 97626.0, 77021.0], [10649.0, 53971.0, 0.0, 25196.0, 43473.0, 297071.0, 14421.0, 9196.0, 59080.0, 538341.0, 83053.0, 45599.0, 45801.0, 0.0, 0.0, 173330.0, 148713.0, 126321.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

