created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Vera Khin", "Jamaass", "Jimbo One Eye", "Lord Erin The Wise", "Apyen", "Necrotic Windrunner", "Maass X Menos", "Lhiapp", "Newtype Khan", "World Devourerer", "Pixzil", "Jimbo The Pleb", "Xuerreux", "Vera Khin", "Philip Poundhouse", "Caelon Cai", "Daring Deathblade", "Thought Bound", "Bella Sassy", "Darks Na", "Xanvias", "Alarics Clone", "Tribal S", "Apyen", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Reaper", "Scrapper", "Weaver", "Spellbreaker", "Reaper", "Berserker", "Tempest", "Spellbreaker", "Guardian", "Firebrand", "Berserker", "Berserker", "Firebrand", "Herald", "Reaper", "Scourge", "Firebrand", "Firebrand", "Dragonhunter", "Reaper", "Chronomancer", "Druid", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4659, 0.1224, 0.4167], [0.0471, 0.2709, 0.1655], [0.0783, 0.2412, 0.5577, 0.3485], [0.0714, 0.375, 0.0723, 0.201, 0.1346, 0.6061], [0.475, 0.6458, 0.1154, 0.1458, 0.114, 0.0769, 0.16, 0.2653, 0.25], [0.0417, 0.0, 0.1562, 0.0175, 0.0154, 0.04, 0.0204, 0.1875, 0.0435, 0.1429, 0.1348, 0.0202, 0.0, 0.3523, 0.0306, 0.0417, 0.0181, 0.1809, 0.0577, 0.3182], [0.1705, 0.1321, 0.2439, 0.1622, 0.4828, 0.1887, 0.2778, 0.3256, 0.1473, 0.2131], [0.3958, 0.1538, 0.2917, 0.0702, 0.0, 0.16, 0.4286, 0.4062, 0.2484, 0.2747, 0.2695, 0.1818, 0.0, 0.0328], [0.3255, 0.5333, 0.1628, 0.3643, 0.4262, 0.0167, 0.0235, 0.3251, 0.1586], [0.175, 0.6042, 0.2308, 0.2708, 0.2193, 0.0308, 0.2, 0.3878, 0.375, 0.4348, 0.4396, 0.4184, 0.5051, 0.0455], [0.0843, 0.3065, 0.1731, 0.1515, 0.0, 0.2075, 0.378, 0.4865, 0.6724, 0.2311, 0.1889, 0.5581, 0.0775, 0.4, 0.0941, 0.266, 0.1034], [0.1, 0.3542, 0.1282, 0.1042, 0.114, 0.1077, 0.0, 0.0408, 0.3438, 0.2857, 0.3626, 0.4397, 0.4646, 0.0, 0.1932, 0.051, 0.25, 0.2273, 0.283, 0.439, 0.5135, 0.5, 0.066, 0.4222], [0.5341, 0.0918, 0.3333, 0.1265, 0.2462, 0.25, 0.4545, 0.1477, 0.0377, 0.3049, 0.4595, 0.4828, 0.0613, 0.2444, 0.3256, 0.3101, 0.1967, 0.2833, 0.0765, 0.2414, 0.1103], [0.0783, 0.4171, 0.3846, 0.5758, 0.0909, 0.2075, 0.2927, 0.3784, 1.1207, 0.4764, 0.3889, 0.5116, 0.4729], [0.2955, 0.0714, 0.3333, 0.0964, 0.2563, 0.6923, 0.6667, 0.0755, 0.3049, 0.2162, 0.1207, 0.1651, 0.2667, 0.6512, 0.2636, 0.2295, 0.1667, 0.1824, 0.2512, 0.2379], [0.1538, 0.2057, 0.1616, 0.0, 0.0, 0.3068, 0.1531, 0.4167, 0.0843, 0.2161, 0.1538, 0.5455, 0.1477, 0.1698, 0.3659, 0.4865, 0.3966, 0.2075, 0.0778, 0.1628, 0.186, 0.4262, 0.25, 0.0588, 0.2562, 0.1483], [0.2841, 0.6038, 0.2805, 0.7838, 1.0345, 0.4953, 0.3889, 0.5814, 0.3953, 0.4098, 0.5833, 0.0647, 0.4483, 0.1103], [0.1145, 0.2965, 0.5769, 0.3788, 0.0909, 0.2642, 0.5366, 0.8108, 0.5345, 0.3585, 0.2333, 0.3488, 0.2868, 0.3934, 0.4833, 0.1, 0.3153, 0.1828], [0.0602, 0.2462, 0.6154, 0.7121, 0.25, 0.4151, 0.5, 0.4595, 0.3103, 0.3868, 0.2111, 0.2558, 0.2403, 0.3115, 0.55, 0.0941, 0.2709, 0.269], [0.0, 0.3542, 0.4744, 0.0938, 0.2018, 0.0, 0.0, 0.3673, 0.1562, 0.2919, 0.1978, 0.4184, 0.4343, 0.0, 0.0656, 0.4773, 0.0714, 0.2083, 0.2111, 0.4231, 0.2424, 0.3523, 0.0943, 0.122, 0.3784, 0.0472, 0.1556, 0.186, 0.1705, 0.1803, 0.1167, 0.0647, 0.3399, 0.2], [0.0843, 0.3317, 0.8462, 0.6818, 0.2841, 0.3585, 0.4024, 0.8919, 0.431, 0.4717, 0.2444, 0.4651, 0.3643, 0.6393, 0.2833, 0.0882, 0.3251, 0.2207], [0.375, 0.102, 0.375, 0.0783, 0.201, 0.5, 0.6818, 0.1591, 0.2453, 0.5488, 0.8378, 0.5172, 0.4434, 0.2667, 0.7442, 0.5349, 0.2787, 0.5, 0.1235, 0.3251, 0.2241], [0.1, 0.1053, 0.0462, 0.0, 0.1429, 0.125, 0.2298, 0.2527, 0.1702, 0.1919, 0.0, 0.3977, 0.1429, 0.625, 0.0843, 0.402, 0.5192, 0.4091, 0.1591, 0.0, 0.4268, 0.9189, 0.6379, 0.3443, 0.2, 0.3023, 0.2248, 0.3279, 0.3833, 0.1412, 0.3103, 0.2207], [0.236, 0.1538, 0.3759, 0.202, 0.0, 0.0, 0.4545, 0.0408, 0.3333, 0.1747, 0.2764, 0.5769, 0.4848, 0.0909, 0.2453, 0.1951, 0.4054, 0.8448, 0.4387, 0.2444, 0.7209, 0.4729, 0.3115, 0.3667, 0.1059, 0.2906, 0.2483], [0.4, 0.7083, 0.1154, 0.3125, 0.114, 0.0615, 0.12, 0.2857, 0.0312, 0.2733, 0.3187, 0.2411, 0.2828, 0.0, 0.0, 0.6364, 0.1122, 0.6667, 0.1265, 0.4121, 0.3846, 0.7727, 0.2727, 0.3019, 0.5, 0.7838, 0.5345, 0.5142, 0.2, 0.3023, 0.3023, 0.4918, 0.4167, 0.1529, 0.3103, 0.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

