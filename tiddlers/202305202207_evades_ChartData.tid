created: 20230520220730000
creator: Drevarr
modified: 20230705163530966
modifier: drevarr
tags: ChartData
title: 202305202207_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Necrotic Windrunner", "Cedryn X", "Hrakkus", "Bubbleboiii", "Be\u00eb", "Primal Clone", "Alnerian", "Pedro O Mago Preto", "Ryvalia Fazebringer", "Saurlex Varok", "Legacy Of Mathus", "Black Raspberry Pie", "Suredude", "Crusader Siolith", "Demon Maddx", "Miphest\u00f6", "Lavitz Elite", "Red Omega Red", "Aira Draugr", "Blanco Padre Guard", "Arriasa", "Belvyn Brightblade", "Elisha Raskae", "Lucky Leipreach\u00e1n", "Xanvias Einzbern", "Tegan Parker", "Grilo Gringo", "Cerys Fireblade", "Smol Gluvs", "Grasszanine", "Bamm\u00edt", "Tootsie Pop Rocks", "No Reserv\u00e9", "My Birthday Girl", "Soxxdodendron", "Newtype Khan", "La Morte Vivante", "Sub Train", "Kary\u00edna", "Aronorf Xideliesi", "Eruyin", "High Sorcer Baradun", "Vddz", "Venomina The Siren", "Lord Erin The Wise", "Mistwalker Caelon"];
const professions = ["Druid", "Scourge", "Berserker", "Catalyst", "Berserker", "Scourge", "Chronomancer", "Guardian", "Tempest", "Chronomancer", "Untamed", "Berserker", "Chronomancer", "Catalyst", "Firebrand", "Scourge", "Catalyst", "Berserker", "Herald", "Herald", "Firebrand", "Druid", "Firebrand", "Virtuoso", "Scrapper", "Berserker", "Tempest", "Dragonhunter", "Berserker", "Scourge", "Spellbreaker", "Berserker", "Scrapper", "Vindicator", "Scrapper", "Willbender", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Vindicator", "Tempest", "Spellbreaker", "Weaver", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 7, 0, 0, 0, 0, 4, 1, 0, 6, 0, 2, 0, 6, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 8, 0, 0, 3, 0, 3, 1, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 5, 1, 9, 9, 0, 5], [0, 1, 1, 2, 0, 0, 2, 0, 29], [0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 3, 0, 15, 2], [8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 6, 0, 0, 8, 0, 4, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 13, 2, 0, 3, 3, 7, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 4], [8, 3, 3, 0, 0, 0, 0, 0, 0, 0, 10, 0, 16, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 18, 0, 0, 0, 0, 0, 1, 0, 6, 0, 3, 0, 0, 0, 0, 2, 5, 0, 0, 1, 0], [23, 0, 0, 3, 0, 2, 1, 4, 4, 0, 0, 1, 2, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 4, 0, 7, 0, 3, 3, 0, 5, 2, 4, 1, 7, 0, 1, 4], [6, 0, 0, 1, 0, 0, 0, 0, 0, 0, 5, 0, 14, 0, 0, 3, 0, 1, 1, 0, 3, 0, 0, 1, 0, 2, 2, 1, 0, 0, 0, 0, 4], [1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 40, 0, 0, 0], [5, 0, 0, 0, 1, 2, 0, 0, 1, 1, 7, 1, 13, 0, 0, 5, 0, 0, 4, 1, 4, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0], [11, 0, 0, 1, 0, 1, 0, 2, 0, 0, 1, 0, 13, 0, 0, 3, 0, 0, 4, 0, 2, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 1, 1], [10, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 13, 1, 3, 0, 3, 1, 11, 0, 0, 2, 1, 0, 0], [22, 0, 3, 2, 0, 5, 9, 0, 0, 5, 5], [4, 0, 3, 3, 0, 10, 0, 0, 6, 0, 10, 0, 0, 0, 0, 0, 16], [8, 0, 0, 1, 0, 0, 0, 3, 1, 0, 8, 1, 31, 0, 0], [1, 3, 0, 4, 0, 1, 0, 4, 0, 1, 8, 10, 0, 0, 1, 1, 0, 0, 1, 10, 0, 0, 7, 0, 0, 2, 1, 3, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 15, 0, 0, 17, 0, 0, 0, 5, 1, 0, 0, 1, 6, 8, 1, 0, 0, 0, 0, 2], [9, 2, 1, 0, 0, 1, 1, 0, 2, 11, 1, 37, 0, 0], [28, 6, 0, 0, 3, 6, 3, 0, 0, 11, 0, 1, 9], [4, 0, 0, 0, 0, 0, 0, 2, 0, 3, 7, 1, 17, 0, 2, 2, 0, 0, 4, 0, 16, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 0, 5], [3, 0, 0, 0, 0, 1, 2, 0, 1, 3, 1, 27, 1, 0, 6, 0, 0, 3, 5, 0, 0, 0, 3, 0, 5, 1, 5, 1, 1, 0, 0], [8, 0, 2, 0, 0, 2, 0, 0, 0, 0, 7, 0, 30, 1, 0, 7, 0, 0, 7, 0, 1, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2], [3, 0, 20, 0, 0, 12, 0, 15, 0, 0, 9, 0, 1, 4, 1, 0, 0, 0, 8], [14, 0, 1, 0, 0, 0, 0, 0, 0, 2, 5, 1, 9, 0, 0, 8, 0, 4, 0, 8, 0, 0, 7, 6, 0, 4, 2, 1, 0, 0, 5], [5, 0, 0, 0, 0, 0, 0, 2, 2, 0, 8, 1, 14, 2, 0, 12, 0, 0, 2, 3, 11, 0, 0, 8, 1, 0, 0, 5, 0, 0, 0, 2], [12, 3, 0, 0, 0, 0, 0, 1, 0, 1, 0, 29, 0, 0, 14, 0, 1, 0, 9, 0, 0, 0, 0, 0, 2, 4, 3, 0, 0, 0, 0], [10, 5, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 6, 0, 0, 4, 1, 0, 9, 4, 13, 0, 0, 6, 0, 2, 0, 6, 0, 0, 0, 0, 4], [5, 5, 0, 0, 0, 0, 0, 1, 1, 4, 3, 0, 25, 1, 0, 4, 0, 2, 3, 0, 10, 0, 0, 5, 4, 1, 6, 2, 0], [4, 0, 0, 0, 2, 4, 0, 5, 0, 1, 9, 0, 28, 2, 0, 4, 0, 0, 2, 2, 6, 0, 0, 7, 0, 0, 1, 0, 1, 0, 0, 0, 6], [9, 5, 0, 0, 0, 0, 0, 2, 1, 0, 3, 0, 28, 3, 0, 8, 0, 0, 7, 0, 8, 0, 4, 6, 3, 0, 1, 1, 0, 0, 0, 1], [13, 0, 0, 0, 0, 3, 0, 0, 0, 2, 12, 0, 27, 1, 0, 3, 0, 0, 8, 0, 7, 0, 3, 3, 1, 1, 6, 1, 0, 0, 0, 1], [21, 0, 1, 0, 0, 0, 0, 1, 0, 1, 7, 0, 35, 2, 0, 5, 0, 1, 2, 0, 9, 0, 0, 8, 0, 0, 9, 1, 1, 0, 3, 8], [50, 3, 1, 10, 0, 0, 3, 4, 20, 0, 0, 1, 0, 1, 0, 4, 7, 2, 0, 0, 9], [8, 3, 0, 0, 0, 3, 0, 1, 0, 4, 13, 0, 39, 0, 0, 4, 0, 3, 6, 0, 11, 0, 0, 4, 1, 3, 0, 4, 0, 0, 0, 1, 9], [12, 1, 0, 0, 0, 0, 0, 1, 0, 0, 10, 0, 34, 8, 3, 2, 0, 1, 4, 8, 17, 2, 0, 2, 8, 0, 2, 3, 0, 0, 0, 13], [12, 2, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 41, 0, 2, 8, 0, 1, 6, 0, 33, 0, 3, 9, 0, 3, 3, 6, 0, 2, 0, 0, 6], [5, 7, 1, 1, 0, 2, 0, 2, 3, 0, 34, 0, 1, 2, 0, 4, 5, 28, 1, 2, 11, 0, 5, 2, 14, 0, 6, 0, 20], [13, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 48, 1, 1, 0, 0, 0, 6, 5, 15, 0, 0, 9, 50, 5, 0, 0, 0, 5, 3], [1, 5, 0, 0, 0, 2, 0, 3, 6, 4, 14, 0, 66, 4, 1, 10, 5, 1, 21, 0, 25], [13, 0, 0, 0, 0, 1, 1, 0, 1, 0, 7, 1, 73, 3, 0, 20, 0, 1, 6, 1, 16, 0, 0, 8, 0, 1, 3, 8, 1, 1, 0, 0, 4], [27, 2, 3, 0, 0, 1, 0, 0, 0, 1, 8, 1, 32, 6, 0, 16, 0, 0, 23, 0, 13, 0, 0, 11, 9, 1, 15, 0, 1, 0, 0, 1], [24, 1, 2, 3, 0, 1, 0, 2, 9, 1, 33, 5, 0, 9, 0, 4, 6, 17, 36, 1, 0, 16, 1, 1, 7, 0, 5, 0, 3, 23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

