created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Budget Chicken", "Ryvalia Fazebringer", "Air One Com", "Mimbsi", "Seiker Novus Terra", "Grasszanine", "High Sorcer Baradun", "Kities Got Claws", "Mort\u00e4rion", "Mistwalker Cael", "Leafzely", "Necrotic Windrunner", "Omg Its Pink", "Drevarr Moonwillow", "Bella Sassy", "Koralia Danai", "Brutal Araden", "Gavann", "Gluck Gluck Nine K", "Grimskarrz", "Glorious Gluvs", "Oo Dads Mad", "Kosa\u00efr", "Rod Reaper", "Sub Train", "Gamora Titus", "Halfpint The Drunk", "Brutal Araden", "Rina Of Theros", "Be\u00eb", "Lord Erin The Wise", "Sofya De Nova", "Xanvias Tsolice", "Liu Mira", "Inquisitor Stryker", "Jimbo The Pleb"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Tempest", "Reaper", "Scrapper", "Herald", "Scrapper", "Reaper", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Renegade", "Firebrand", "Berserker", "Berserker", "Berserker", "Berserker", "Weaver", "Reaper", "Firebrand", "Firebrand", "Berserker", "Herald", "Reaper", "Reaper", "Weaver", "Weaver", "Weaver", "Berserker", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 10.3146, 13.5054, 8.0984, 21.55, 9.5618, 38.8519, 16.8056, 12.2838, 0.0], [1.5778, 4.4253, 5.1081, 2.3739, 13.4671, 0.0, 2.6296, 5.3061, 0.0, 0.1842, 1.2875, 0.0, 18.9762, 14.5455, 6.2835, 16.5714, 2.9139, 6.4494, 1.019, 13.1803, 0.0, 2.6966, 3.5, 0.0, 8.5135, 0.0], [0.0, 0.7758, 0.0, 6.1261, 4.4474, 0.0, 7.5802, 2.7449, 11.2857, 0.0, 9.25, 0.0, 4.9048, 15.1515, 18.5984, 22.0952, 6.3971, 3.0787, 1.1929, 2.8033, 0.0, 0.1011, 3.4444, 3.1944, 0.6351, 0.0], [0.0, 0.0, 3.7, 0.0, 0.9167, 30.4394, 6.6142, 20.2024, 6.2871, 10.5281, 13.5897, 0.0, 16.1125, 0.382, 6.0, 1.5833, 0.1216], [36.2889, 11.2423, 0.0, 9.5546, 1.8947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.131, 40.0606, 4.9606, 3.6548, 11.0478, 0.0], [0.0, 6.9356, 0.0, 1.1218, 0.0526, 0.0, 3.1531, 0.0, 0.0, 8.0875, 0.8095, 34.4697, 2.4961, 63.1429, 6.866, 0.0, 2.962, 8.3443, 0.0, 3.6517, 0.0, 1.2639, 0.0, 0.0], [41.0444, 20.0902, 35.0541, 5.1134, 20.8882, 4.4938, 27.1735, 9.916, 0.0, 0.0, 11.7875, 17.0236], [28.7527, 0.3279, 18.8125, 30.7753, 43.3519, 33.0556, 54.1486], [2.7778, 14.8273, 2.9189, 20.1218, 27.3882, 9.1481, 27.5102, 30.3529, 0.8421, 0.5806, 48.0, 0.875, 0.0], [14.0, 22.4201, 2.3243, 9.5504, 9.8816, 0.0, 15.0988, 16.0102, 0.3025, 0.0, 0.0, 11.8, 5.6667, 9.25, 2.6667, 11.315, 0.6667, 15.7847, 0.0, 2.4266, 5.3934, 0.0, 16.6742, 0.0, 0.0, 0.0, 25.1515], [12.5556, 35.3634, 12.8649, 6.0084, 0.0, 0.0, 0.1975, 8.1837, 0.0, 0.0, 0.0, 2.2875, 0.0, 7.4643, 3.3788, 0.0, 0.0, 6.2536, 6.2472, 8.9592, 5.9344, 0.6625, 44.4944, 0.0, 14.2361, 10.1351, 0.0], [0.2889, 14.3582, 3.5946, 19.7647, 19.0329, 0.0, 0.2963, 10.3571, 2.4454, 0.0, 0.0, 23.15, 0.0, 15.25, 31.303, 8.622, 8.1905, 17.1388, 9.9326, 3.3043, 3.9016, 1.0875, 1.2584, 0.0, 21.5278, 3.1892, 0.0], [0.0, 27.8876, 21.4158, 136.7705, 3.4125, 53.0787, 2.7407, 19.2778, 70.4459, 0.0], [1.0667, 12.3196, 23.7027, 9.8992, 10.5855, 0.0, 0.358, 8.5102, 1.3697, 0.0, 9.2, 3.3333, 10.5714, 47.4545, 17.9921, 5.5238, 20.6603, 25.809, 4.1984, 13.1148, 13.5625, 10.1798, 13.5185, 2.4444, 7.1622, 0.0], [12.1556, 7.8479, 0.0, 1.9916, 16.375, 0.0, 5.5309, 0.7449, 9.8824, 0.0, 0.0, 29.7875, 7.2083, 14.4881, 24.8939, 14.3622, 5.4643, 5.8421, 5.2809, 3.3451, 0.0, 116.325, 34.618, 0.0, 0.0, 0.0, 0.0], [0.0, 5.2732, 7.4054, 6.3824, 25.3553, 0.0, 0.0, 8.7755, 0.9664, 0.0, 19.225, 0.0, 1.4881, 0.5455, 20.7638, 4.8452, 16.8804, 2.0, 28.9918, 8.377, 36.05, 10.191, 10.0556, 8.7917, 3.8919], [203.6292, 99.0185, 117.8889, 66.7027, 0.0], [5.2222, 8.2268, 0.0, 16.5084, 9.7237, 5.9136, 4.7143, 16.5294, 43.7, 6.2262, 16.1818, 33.8976, 110.3095, 28.2919, 0.0, 5.8071, 7.9016, 0.6125, 7.7303, 3.7407, 2.9444], [0.5393, 45.9239, 0.6393, 118.45, 3.9326, 85.1852, 95.4167, 32.4324], [47.4293, 46.2295, 61.3375, 165.2472, 28.3704, 87.375, 4.1351], [4.5111, 26.1727, 3.7568, 50.3571, 5.7763, 0.0, 0.0, 2.0714, 43.2521, 0.0, 0.0, 47.575, 0.0, 3.4405, 4.6667, 14.4488, 0.3929, 17.177, 0.0, 13.4891, 0.0, 0.025, 35.9775, 0.0, 14.3472, 16.0541, 0.0], [31.4667, 7.6443, 16.3514, 45.0588, 21.4803, 56.3827, 14.4592, 53.9496, 0.0, 0.0, 44.4, 0.0, 42.119, 152.6515, 33.5039, 13.8452, 19.2392], [0.0, 20.1727, 14.4865, 27.0966, 28.6711, 21.6173, 6.8673, 45.4538, 0.0, 0.0, 66.6375, 33.7143, 47.2121, 45.5354, 59.7177, 12.5618, 18.6848, 0.0, 16.2, 46.382, 0.0, 9.4167, 56.5946], [2.5778, 16.7887, 11.3514, 31.6429, 34.2961, 16.3182, 33.4198, 51.4898, 23.7395, 1.1053, 0.0, 30.65, 0.1667, 42.25, 107.1212, 10.7874, 31.2976, 27.5024, 16.3034, 34.1223, 33.459, 17.0625, 30.8652, 74.5741, 22.0833, 18.0676, 0.0], [34.7556, 28.8247, 17.5135, 10.2101, 57.8553, 73.6543, 52.6633, 34.4034, 0.0, 0.0, 23.775, 0.0, 27.3452, 91.6364, 18.0394, 93.7143, 17.2201, 24.8427, 21.3533, 0.0328, 19.3125, 22.5056, 61.7963, 21.0556, 0.0, 0.0], [121.5556, 15.3505, 3.2973, 34.4454, 20.5855, 0.0, 4.321, 10.2959, 6.0, 0.0, 0.0, 12.975, 0.0, 57.1071, 142.7879, 41.4724, 22.9881, 33.5263, 7.7079, 64.1277, 23.8197, 5.025, 7.6404, 16.8333, 6.6667, 4.4459], [7.0, 1.6005, 0.0, 6.8235, 56.7895, 0.0, 0.0, 23.4796, 112.4286, 0.0, 0.0, 44.0875, 0.0952, 135.2424, 0.0, 0.0, 25.1914, 3.2697, 17.163, 36.9508, 119.175, 135.6067, 110.0741, 15.0694, 24.9865, 0.0], [127.378, 181.0595, 112.512, 82.7079, 46.212, 49.7869, 26.75], [5.8444, 19.7938, 28.6757, 29.6513, 73.4342, 0.0, 34.9012, 66.8061, 26.2101, 0.0, 0.0, 44.825, 0.0, 34.3333, 64.9242, 55.5118, 30.3095, 27.622, 5.4382, 27.3777, 20.1639, 16.175, 13.8764, 44.2593, 4.375, 34.2162, 0.0], [7.3111, 50.5077, 16.027, 38.0504, 25.4737, 18.9259, 27.3163, 21.2605, 0.0, 1.4516, 111.625, 87.5833, 43.9762, 67.4394, 39.8898, 23.2857, 48.1435, 34.0, 39.2337, 25.8525, 54.85, 39.8764, 10.4259, 38.9444, 16.5541, 0.0], [0.0, 0.0, 44.2815, 82.9474, 60.6296, 74.2857, 38.5546, 2.8684, 0.0, 91.5, 0.0, 29.5595, 117.8182, 57.9291, 61.119, 13.5215, 51.4157, 46.9891, 0.0, 122.7125, 16.1798, 142.7407, 62.4861], [0.0, 26.3015, 12.4324, 36.7941, 59.0263, 0.0, 56.7778, 61.7245, 78.1681, 0.0, 5.9677, 89.65, 49.4167, 35.2619, 83.4242, 89.126, 121.0714, 30.9617, 9.1461, 58.4755, 53.0328, 110.8125, 54.191, 25.7593, 62.6389, 53.3784, 0.0], [4.1778, 44.1521, 33.8108, 68.9832, 107.3618, 0.0, 28.2716, 110.9592, 22.3782, 0.0, 7.4516, 6.95, 38.75, 82.0952, 134.0152, 157.3307, 25.7143, 67.3397, 12.1236, 70.3832, 48.9016, 73.875, 29.618, 8.9074, 62.6111, 16.973, 0.0], [124.0, 39.3918, 0.0, 128.3908, 93.9539, 0.0, 0.0, 42.6939, 56.7311, 0.0, 0.0, 204.1375, 0.0, 50.1548, 51.6364, 94.748, 37.2143, 25.2632, 27.191, 64.5679, 76.2623, 165.625, 156.0112, 61.3704, 68.0417, 27.527, 0.0], [45.8222, 44.3892, 14.1622, 55.6303, 211.2368, 24.8272, 250.1429, 108.2941, 14.5263, 0.0, 167.975, 71.4048, 88.7008, 62.381, 45.4402, 0.0, 72.3288, 16.3115, 53.7875, 89.8539, 63.6296, 149.0972, 14.2838], [20.2444, 87.9923, 38.6216, 179.4832, 147.2632, 48.1667, 60.5556, 159.3061, 219.8908, 0.0526, 5.0645, 86.45, 0.0, 230.1905, 12.697, 9.378, 99.8095, 82.9522, 46.8989, 51.3043, 9.541, 166.4375, 21.9438, 76.537, 36.1944, 28.8108, 55.2727]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

