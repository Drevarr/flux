created: 20230301221309000
creator: Drevarr
modified: 20230705163520842
modifier: drevarr
tags: ChartData
title: 202303012213_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Sister Elon\u00edth", "Ark Darkness", "Kahless The Drunk", "Kiloak", "Sygaldry Verdandi", "Ravioli Fetabringer", "Gavann", "Bella Sassy", "Koralia Danai"];
const professions = ["Scrapper", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.1784, 20.265, 9.7474, 5.7693, 11.5394, 1.1704, 9.6359, 29.5968, 5.2166, 2.6371, 18.426, 5.0558, 0.0, 5.2056, 0.9942, 9.504, 11.4563, 0.0, 1.7595, 0.0, 9.409, 5.6746, 5.9904, 0.0, 0.0, 80.9411, 0.0, 5.1437, 5.2675, 1.6812, 24.6576, 0.0, 21.0034, 12.0582, 0.0963, 14.1715, 1.6779, 3.8758, 23.963, 22.407, 1.2398], [20.3616, 15.6111, 11.063, 2.8459, 2.0266, 6.7014, 12.4071, 55.6865, 6.1651, 13.3824, 35.5108, 35.6926, 0.0, 5.4216, 5.5117, 5.8752, 0.0367, 0.0, 7.6949, 0.0, 13.8283, 6.0058, 11.9808, 0.0, 0.0, 101.137, 5.5325, 18.8602, 5.4374, 25.9727, 21.0408, 13.4298, 1.9557, 24.6906, 1.3963, 21.2467, 16.2792, 7.8408, 15.6056, 7.8531, 45.9648, 6.989, 4.2746, 39.5762], [0.0, 6.8925, 7.0564, 33.2992, 5.3561, 0.9868, 10.864, 50.212, 10.3238, 3.3062, 9.7961, 22.7135, 37.2354, 0.0, 0.0, 4.2509, 0.0, 11.1996, 0.0, 58.9318, 28.8446, 30.8678, 16.2864, 0.0, 3.436, 55.3808, 0.0, 11.4906, 4.7861, 26.7961, 37.092, 3.726, 2.4915, 24.1686, 43.7684, 7.1597, 21.6342, 11.4048, 9.7257, 56.9778, 1.633, 4.2592, 2.6237, 21.318], [81.6142, 15.2486, 105.3864, 11.583, 47.2974, 141.4842, 96.1934, 32.1182, 62.3502, 111.0041], [24.2172, 0.0, 7.3899, 8.9432, 67.7477, 0.0, 35.7782, 7.5803, 49.3508, 1.0044, 31.4769, 10.4717, 0.0, 0.0, 7.8122, 0.0, 104.8291, 7.2422, 2.1715, 0.0, 204.6407, 10.9531, 63.168, 33.6442, 20.6203, 52.008, 0.0], [5.3676, 19.7349, 44.1922, 31.7891, 14.2485, 2.8687, 27.1759, 89.7315, 20.9395, 24.167, 80.5844, 1.7356, 0.0, 10.584, 45.3805, 22.9478, 2.9511, 0.0, 30.6857, 20.9088, 6.2251, 45.5952, 54.5875, 0.0, 0.0, 147.6821, 0.0, 42.7136, 38.0621, 52.1512, 56.3376, 5.2326, 17.1188, 38.8368, 21.4749, 22.704, 70.4361, 3.6977, 28.8814, 109.0901, 36.923, 12.5259, 33.6662, 65.4086], [32.382, 87.3046, 35.9398, 21.1928, 229.0761, 48.0442, 36.4867, 138.8361, 118.3213, 0.0, 0.0, 60.0998, 62.377, 0.0, 26.1344, 0.0, 65.9578, 43.5859, 47.8109, 28.167, 0.0, 308.6177, 0.0, 32.727, 18.4646, 38.3586, 85.1928, 14.3208, 13.6897], [9.7776, 12.7835, 41.7404, 0.0, 14.2485, 17.8551, 8.3449, 103.4179, 104.0774, 56.8752, 71.6047, 126.0937, 0.0, 30.4827, 51.0451, 54.6601, 110.3006, 17.8765, 62.1456, 142.7026, 84.3456, 25.1971, 206.534, 0.0, 43.1347, 21.4666, 37.5008, 51.6912, 6.885, 52.428, 41.0292, 26.4344, 52.0397, 60.2973, 88.209, 63.7905, 38.1132, 111.8275, 15.3331, 57.5155, 70.7758], [47.1996, 80.1176, 66.3481, 44.8378, 37.7617, 12.393, 26.4516, 118.3018, 143.2934, 72.9341, 73.9954, 133.7151, 0.0, 32.1516, 48.6554, 34.2835, 18.5133, 21.9084, 53.6061, 40.1333, 32.8363, 68.2272, 75.7786, 0.0, 14.2705, 345.696, 24.2888, 39.7658, 18.7195, 146.5723, 40.1544, 12.7818, 105.3651, 82.1628, 120.0379, 33.5174, 132.1971, 28.6902, 56.9862, 78.1471, 94.9838, 37.5971, 41.95, 137.4886], [37.1722, 38.0029, 0.0, 10.6916, 7.2981, 12.9424, 306.1477, 216.9466, 99.0298, 118.8358, 185.4807, 16.3856, 59.994, 75.907, 37.6013, 10.3015, 139.7052, 1.5484, 0.0, 235.129, 0.0, 0.8237, 0.0, 96.9091, 289.6841, 14.5349, 67.4694, 15.0379, 25.9384, 35.5872, 17.1396, 61.1884, 193.401, 67.6989, 30.0538, 78.4686, 15.2807, 47.6672, 1.5792, 58.5749, 20.4248, 25.795, 152.5867], [19.6056, 92.7833, 34.0262, 54.8082, 19.5012, 5.8522, 37.6935, 217.6993, 134.7206, 113.7504, 114.5792, 130.6967, 26.8523, 29.9376, 70.8924, 8.951, 31.4176, 33.8666, 27.3074, 13.9586, 114.143, 18.9005, 107.0035, 4.393, 19.3283, 389.401, 30.9566, 31.8848, 9.5722, 49.0633, 10.8768, 15.0984, 22.7715, 121.104, 121.0973, 26.0621, 151.4037, 66.4686, 94.225, 54.5024, 7.681, 72.1547, 78.859, 168.036], [16.1532, 73.1662, 70.6836, 0.0, 6.7624, 1.7442, 43.3302, 225.4834, 207.4618, 68.9194, 236.7969, 204.4211, 0.0, 47.0556, 77.1379, 45.2384, 81.5654, 36.3865, 84.8742, 156.9586, 62.9501, 90.1555, 36.0589, 45.2025, 292.2086, 63.2564, 65.7248, 24.5534, 102.5869, 98.0232, 0.1458, 71.6365, 294.4602, 89.9923, 34.7213, 236.1912, 8.019, 74.5517, 172.7686, 70.187, 53.1045, 42.8344, 156.6998]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

