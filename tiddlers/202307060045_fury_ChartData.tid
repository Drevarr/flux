created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Mistwalker Cael", "Legacy Of Mathus", "Xyntharos", "Kary\u00edna", "Grasszanine", "Eibh\u00ebar", "Johosh The Mighty", "Stoic Rapidfire", "Primal Clone", "Zaedy Zae", "Newtype Khan"];
const professions = ["Tempest", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Berserker", "Chronomancer", "Berserker", "Druid", "Chronomancer", "Druid", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 32.0902, 0.0, 31.5032, 31.5315, 15.624, 31.0463, 0.0, 0.0, 29.0523, 13.8488, 0.0], [85.1357, 29.4778, 30.4749, 56.5786], [44.7917, 103.3261, 0.0, 0.0, 0.0, 31.404, 0.0, 7.6752, 3.6018, 40.9004, 13.1738, 0.0], [36.648, 52.0328, 28.4193, 22.5069, 62.9014, 42.6263, 37.2727], [8.856, 9.0854, 31.008, 39.008, 16.7505, 44.172, 5.2912, 18.6381, 18.0873, 82.3431, 29.4413, 1.7772], [22.0941, 4.4013, 23.7402, 23.32, 37.6545, 75.0, 55.386, 46.7766, 19.9926, 14.8821, 102.42], [72.0813, 33.4214, 68.8704, 69.7734, 85.1077, 84.132, 33.9787, 60.3252, 24.6297, 86.9196, 88.1775, 58.4848], [110.2342, 61.8176, 56.6195, 69.5954, 30.0398, 105.708, 111.6135, 0.0, 53.7312, 114.4634, 71.01], [134.3257, 104.34, 138.3502, 146.952, 53.0526, 135.6339, 76.41, 14.4635], [99.0166, 62.0173, 87.3555, 61.3104, 94.7797, 99.72, 67.0395, 36.6912, 39.4545, 105.0391, 75.0488], [67.2662, 55.927, 34.1958, 70.3925, 111.7545, 90.852, 86.904, 98.6544, 77.1255, 84.055, 64.9125, 8.6486], [200.7754, 145.3587, 307.7408, 166.4454, 129.3143, 90.228, 138.9495, 115.6194, 12.1452, 161.1267, 77.6475]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

