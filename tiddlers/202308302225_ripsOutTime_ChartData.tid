created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Jamaass", "Smol Gluvs", "Rina Of Theros", "Mister Jekyll", "Alarics Bane"];
const professions = ["Reaper", "Reaper", "Reaper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.0, 3.8312, 0.0, 15.6944, 9.1746, 0.0, 15.5426, 2.1628, 0.0, 4217.3796, 6.6757, 9.7742, 1.9891], [17.1508, 15.8947, 7.7268, 1.9926, 16.66, 10.5331, 11.9333, 0.9919, 10.6836, 10.8875, 7.75, 4.6833, 6.4635, 4.051, 3.6296, 14.1923, 3.013, 14.6944, 18.4762, 13.1262, 16.2021, 11.0847, 0.0, 4.3137, 16655.186, 7.9825, 4.0, 0.0, 0.0, 15.5068, 4.2432, 10.371, 10.2935], [7.7736, 23.5714, 9.0395, 18.9672, 4.2815, 15.8465, 8.7352, 11.5, 0.9919, 16.0847, 11.0188, 1.087, 23354.1087, 7.9333, 7.4034, 12.2959, 3.4963, 15.6731, 2.0, 0.0, 5.0, 17.619, 12.7276, 10.5426, 14.2373, 0.0, 4.4706, 23.969, 16.8246, 8.1395, 1.0, 0.0, 19.2975, 13.6892, 14.9194, 8.7283], [19.5159, 12.1053, 11749.776, 3.1778, 14.1901, 7.2265, 3.1, 0.0, 13.4463, 1.0, 3.0, 6.3348, 21920.9184, 6.3556, 6.0769, 0.0, 10.1299, 0.0, 7.4444, 6.6984, 16.794, 15.4468, 8.9492, 0.0, 4.0196, 11.6512, 0.0, 0.0, 13.6732, 11.3243, 5.8548, 7.9565], [11.8491, 12.1429, 20.6711, 11.6284, 0.0, 14.7851, 7488.8014, 8.68, 1.2114, 8.9266, 12.5, 0.0, 11.6196, 0.0, 8.7039, 3.9796, 5.7481, 1.9808, 0.0, 8.7662, 0.0, 11.746, 13.9169, 25.7128, 12.5254, 0.0, 0.0, 16662.5659, 13.6491, 1.0, 0.0, 0.0, 16.9041, 4.2838, 12.7903, 11.0217]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

