created: 20230311223557000
creator: Drevarr
modified: 20230705163521736
modifier: drevarr
tags: ChartData
title: 202303112235_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00f4sair", "Legendary Hacker", "Seren Nightroad", "Husky Guard", "Kmpek", "Rina Of Theros", "Smol Gluvs", "Tootsie Pop Rock", "My Birthday Girl", "Sp\u00edcy Cheese", "Panther B Me", "Sheep Paws", "Be\u00eb", "Smol Daddy Tika", "Harry Callahann", "Lord Erin The Wise", "Slautorn", "Xyntharos", "Mistwalker Caelon", "Sofya De Nova", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Herald", "Scourge", "Dragonhunter", "Vindicator", "Scourge", "Scourge", "Scrapper", "Scrapper", "Berserker", "Scourge", "Berserker", "Scourge", "Berserker", "Scrapper", "Weaver", "Weaver", "Vindicator", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[67167.0, 17997.0, 4948.0, 2678.0, 2335.0, 101.0, 0.0, 3883.0, 15489.0, 16573.0, 0.0, 4483.0, 3708.0, 4026.0, 2402.0, 6502.0, 5779.0, 1490.0, 39208.0, 30689.0, 2261.0, 29804.0], [6761.0, 45288.0, 33420.0, 0.0, 18213.0, 10516.0, 5372.0, 4936.0, 7045.0, 11034.0, 28126.0, 50217.0, 5095.0, 40533.0], [74688.0, 18964.0, 7223.0, 4717.0, 7867.0, 24133.0, 17949.0, 0.0, 18332.0, 34477.0, 14458.0, 0.0, 3203.0, 0.0, 5765.0, 16305.0, 4890.0, 14943.0, 968.0], [85429.0, 17124.0, 5706.0, 539.0, 7653.0, 4556.0, 15067.0, 0.0, 7217.0, 31683.0, 20737.0, 0.0, 4996.0, 11224.0, 0.0, 8540.0, 1514.0, 23219.0, 2067.0, 25102.0], [11720.0, 53.0, 17185.0, 0.0, 19422.0, 31378.0, 20938.0, 29122.0, 36855.0, 51732.0, 12737.0, 13757.0, 0.0, 15991.0, 30533.0, 7366.0, 19330.0, 15677.0], [100040.0, 2557.0, 4178.0, 6301.0, 3776.0, 13453.0, 43299.0, 3469.0, 13832.0, 44947.0, 26951.0, 9559.0, 17043.0, 369.0, 8452.0, 16473.0, 0.0, 14351.0, 9068.0], [79599.0, 1143.0, 7361.0, 2440.0, 3973.0, 4842.0, 14722.0, 1294.0, 9425.0, 12687.0, 23484.0, 0.0, 21109.0, 7294.0, 14435.0, 47.0, 6123.0, 0.0, 17878.0, 35979.0, 40648.0, 3604.0, 41951.0], [194066.0, 9769.0, 0.0, 14173.0, 0.0, 11254.0, 22308.0, 3407.0, 39229.0, 22029.0, 57970.0, 0.0, 9688.0, 0.0, 9445.0, 0.0, 6703.0, 0.0, 510.0, 10536.0, 38806.0, 6185.0, 0.0], [241799.0, 3476.0, 17437.0, 19864.0, 0.0, 13030.0, 28397.0, 1980.0, 28524.0, 60891.0, 31306.0, 6338.0, 4300.0, 4126.0, 25114.0, 0.0, 12794.0, 0.0], [290894.0, 10905.0, 3223.0, 75405.0, 1534.0, 22347.0, 6669.0, 0.0, 6746.0, 0.0, 84361.0, 0.0, 11563.0, 803.0, 1358.0, 4591.0, 1567.0, 43473.0, 9350.0], [167916.0, 35309.0, 843.0, 4551.0, 8544.0, 22538.0, 33858.0, 2596.0, 15891.0, 67727.0, 68184.0, 0.0, 15031.0, 3653.0, 15909.0, 21242.0, 0.0, 34648.0, 754.0, 20143.0, 9478.0, 51399.0, 7181.0, 60687.0], [341428.0, 60806.0, 1312.0, 10860.0, 4032.0, 2951.0, 23125.0, 7241.0, 22376.0, 82950.0, 45826.0, 0.0, 48884.0, 0.0, 2255.0, 17394.0, 5895.0, 32564.0, 1645.0], [198528.0, 31402.0, 5000.0, 5375.0, 15391.0, 18250.0, 5304.0, 11146.0, 58086.0, 67336.0, 0.0, 14941.0, 0.0, 23052.0, 10690.0, 4532.0, 24621.0, 8323.0, 15220.0, 63869.0, 103762.0, 9153.0, 48049.0], [278496.0, 83317.0, 3078.0, 11820.0, 6764.0, 15259.0, 32415.0, 0.0, 8745.0, 42556.0, 58623.0, 0.0, 17302.0, 7321.0, 21236.0, 0.0, 6954.0, 0.0, 12655.0, 74947.0, 51678.0, 9179.0, 52007.0], [13631.0, 23234.0, 10785.0, 17049.0, 0.0, 29025.0, 56372.0, 6568.0, 27316.0, 47849.0, 59612.0, 6991.0, 29448.0, 7611.0, 7434.0, 6260.0, 46482.0, 8254.0, 122184.0, 105503.0, 8053.0, 161451.0], [247715.0, 21439.0, 0.0, 2840.0, 564.0, 27117.0, 24241.0, 17774.0, 309.0, 0.0, 68202.0, 0.0, 10929.0, 16856.0, 8585.0, 19413.0, 18057.0, 51581.0, 61299.0, 141937.0, 24459.0, 69844.0], [246736.0, 43811.0, 12508.0, 6713.0, 0.0, 4902.0, 38423.0, 9481.0, 32777.0, 40477.0, 37948.0, 0.0, 14943.0, 0.0, 6922.0, 12233.0, 22024.0, 0.0, 70708.0, 78811.0, 97843.0, 7248.0, 86088.0], [308664.0, 56415.0, 11341.0, 21842.0, 0.0, 30572.0, 54918.0, 3151.0, 55297.0, 56306.0, 102323.0, 4645.0, 37713.0, 0.0, 5297.0, 49060.0, 0.0, 28751.0, 0.0, 38484.0, 47381.0, 117522.0, 6654.0, 67332.0], [320928.0, 28916.0, 10516.0, 12759.0, 11999.0, 37034.0, 60971.0, 27376.0, 60061.0, 127093.0, 125343.0, 7975.0, 0.0, 1867.0, 33828.0, 43796.0, 6629.0, 44948.0, 57230.0, 146239.0, 19147.0, 158288.0], [359791.0, 43347.0, 3049.0, 22135.0, 844.0, 23737.0, 77750.0, 10920.0, 34549.0, 98785.0, 140023.0, 8894.0, 11118.0, 1238.0, 2859.0, 11268.0, 8033.0, 37325.0, 19959.0, 87193.0, 122568.0, 64712.0, 163843.0], [486433.0, 173736.0, 15010.0, 22201.0, 0.0, 46047.0, 45545.0, 0.0, 27003.0, 58633.0, 153108.0, 0.0, 9714.0, 5342.0, 3557.0, 65030.0, 0.0, 43563.0, 12194.0, 109743.0, 134772.0, 190663.0, 29253.0, 84508.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

