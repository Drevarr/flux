created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Dizzy Bunnyhopper", "Mistwalker Cael", "Sia Roku", "Glorious Gluvs", "I Mad X King I", "Bee Nemesis", "Zefirokai", "Venomina", "Aira Draugr", "Permanent Dawn", "Legacy Of Mathus", "Gun Breaker", "Soweng", "Johosh The Mighty", "Xx Zen Xx", "Tribal S", "Duke Silvver", "High Sorcer Baradun", "Klengah", "Be\u00eb", "Drevarr Moonwillow", "Rina Of Theros", "Oo Dads Mad", "Lucky Luprac\u00e1n", "Crusader Siolith", "Cyclotechnist Farra", "Belvyn Brightblade", "Eibh\u00ebar", "Miphest\u00f6", "Ryvalia Fazebringer", "Tegan Parker", "Ateriuz", "Inedible Plant", "Sygaldry Verdandi", "Newtype Khan", "Koralia Danai", "Bella Sassy", "Solus Sanctus", "Primal Clone", "Daphne Agla\u00e9", "Sub Train"];
const professions = ["Chronomancer", "Holosmith", "Vindicator", "Mirage", "Berserker", "Holosmith", "Berserker", "Catalyst", "Scourge", "Herald", "Weaver", "Berserker", "Berserker", "Reaper", "Berserker", "Druid", "Druid", "Vindicator", "Tempest", "Druid", "Scourge", "Scrapper", "Scourge", "Berserker", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Berserker", "Vindicator", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2371.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2371.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 275.2, 0.0, 1142.1, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1595.3, 0.0], [0.0, 1580.88, 0.0, 359.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1827.36, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1100.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1827.36, 0.0, 0.0, 0.0, 0.0, 0.0], [43.7, 3161.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2766.54, 328.44, 0.0, 0.0], [0.0, 0.0, 328.44, 0.0, 0.0, 0.0, 0.0, 1598.94, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 3952.2, 0.0, 0.0, 0.0, 0.0, 0.0], [2284.2, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1823.2, 412.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 3556.98, 0.0, 0.0, 683.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [825.6, 0.0, 1370.52, 0.0, 0.0, 0.0, 0.0, 0.0], [131.1, 395.22, 0.0, 0.0, 0.0, 0.0, 0.0, 2055.78, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2371.32, 0.0, 179.76, 455.8, 412.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 5928.3, 0.0, 0.0, 0.0, 137.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2201.6, 0.0, 228.42, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 4742.64, 164.22, 0.0, 911.6, 137.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1580.88, 0.0, 0.0, 911.6, 1513.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 7113.96, 164.22, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [43.7, 7509.18, 0.0, 0.0, 911.6], [0.0, 5137.86, 1149.54, 89.88, 0.0, 0.0, 0.0, 1142.1, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 7904.4, 0.0, 0.0, 227.9, 0.0, 0.0, 1370.52, 0.0, 0.0, 0.0, 0.0, 0.0], [43.7, 9485.28, 0.0, 0.0, 911.6, 0.0, 81.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [87.4, 10275.72, 0.0, 0.0, 911.6], [0.0, 5928.3, 164.22, 0.0, 0.0, 2339.2, 0.0, 0.0, 0.0, 0.0, 0.0, 101.28, 0.0], [0.0, 6323.52, 1149.54, 0.0, 0.0, 1788.8, 0.0, 0.0, 0.0], [0.0, 6718.74, 0.0, 89.88, 1367.4, 2064.0, 0.0, 1827.36, 0.0, 0.0, 0.0, 0.0, 0.0], [43.7, 13437.48, 164.22, 179.76, 0.0, 412.8, 202.95, 228.42, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 3161.76, 328.44, 0.0, 0.0, 3990.4, 0.0, 1827.36, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 20551.44, 0.0, 0.0, 911.6, 963.2, 81.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 19365.78, 821.1, 0.0, 2741.04, 0.0, 0.0, 0.0, 0.0, 0.0], [43.7, 17389.68, 164.22, 0.0, 1139.5, 550.4, 162.36, 2512.62, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 14623.14, 328.44, 0.0, 3418.5, 0.0, 0.0, 3654.72, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 11461.38, 821.1, 179.76, 227.9, 1651.2, 324.72, 3197.88, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 13832.7, 985.32, 89.88, 3190.6, 412.8, 0.0, 2284.2, 0.0, 0.0, 303.84, 0.0], [0.0, 22132.32, 164.22, 0.0, 0.0, 1926.4, 0.0, 0.0, 0.0, 0.0, 0.0, 303.84, 0.0], [0.0, 14623.14, 328.44, 179.76, 0.0, 1788.8, 487.08, 2741.04, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 25689.3, 1313.76, 0.0, 2962.7, 2064.0, 0.0, 0.0, 0.0, 0.0, 0.0, 101.28, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

