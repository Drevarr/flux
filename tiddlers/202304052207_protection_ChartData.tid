created: 20230405220700000
creator: Drevarr
modified: 20230705163524535
modifier: drevarr
tags: ChartData
title: 202304052207_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaylen Harker", "Ak\u00e1nt\u00f3r", "Morton Saltbringer", "Venomina The Siren", "Mac Chiato", "Eibh\u00ebar", "Ara Icedottir", "Newtype Khan", "Ryvalia Fazebringer", "Arriasa", "Raelyn Sunray", "Tribal S", "Solus Sanctus", "Koralia Danai", "Drevarr Moonwillow", "Kiloak", "Sygaldry Verdandi", "Sister Elon\u00edth", "Bella Sassy", "Johosh The Great"];
const professions = ["Firebrand", "Druid", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Chronomancer", "Druid", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.1501, 29.0803, 313.5191, 58.938, 0.0, 15.0406, 42.8922, 15.241, 46.3564], [40.369, 36.1733, 0.0, 215.3408, 68.4715, 0.0, 41.0366, 66.2193, 48.504, 39.4195, 23.5029], [0.0, 89.993, 41.3332, 16.6338, 66.6862, 7.2811, 16.6549, 148.176, 154.0328, 20.9171, 33.1938, 0.0, 113.832], [8.8817, 0.0, 0.0, 106.8329, 17.8882, 17.5199, 0.0, 9.2156, 10.3494, 18.3142, 9.2973, 140.1404, 56.481, 64.819, 77.4364, 18.4041, 62.748, 44.0786, 74.3144, 49.662, 51.9416, 39.7958, 25.668], [27.4253, 45.6227, 17.6295, 129.9118, 18.6947, 38.067, 14.2568, 0.0, 14.3354, 0.0, 113.0659, 51.381, 33.1989, 81.3694, 15.209, 17.7957, 96.3144, 244.289, 32.0293, 25.0542, 48.5425, 17.6607, 65.5092], [11.3144, 0.0, 55.8771, 54.1609, 9.9264, 27.4718, 0.0, 5.0135, 24.7878, 18.4397, 28.9566, 0.0, 92.8026, 103.371, 26.9984, 73.5034, 20.1062, 25.9331, 189.1512, 225.8825, 5.0039, 65.3976, 42.0631, 19.9769, 70.308], [26.3696, 153.685, 193.488, 502.9893, 21.7967, 40.2428, 55.5257, 90.7758, 64.7584, 57.7313], [22.3763, 0.0, 57.489, 132.7966, 21.4658, 20.8498, 25.9202, 21.764, 31.02, 31.1091, 15.556, 0.0, 132.9887, 76.729, 11.4629, 89.4976, 31.0279, 58.0262, 220.1472, 122.3867, 13.4338, 76.6134, 35.7961, 0.0, 139.2768], [33.7824, 25.0765, 44.1913, 126.1894, 26.3877, 18.7497, 6.4467, 61.9592, 28.4256, 22.1088, 31.5536, 10.6029, 89.3119, 72.1618, 15.3525, 127.3418, 35.999, 52.6266, 236.0232, 218.4554, 42.7133, 105.183, 36.8583, 0.0, 78.4548], [0.0, 19.9514, 57.5225, 210.2225, 0.0, 0.0, 26.9804, 31.0764, 0.0, 0.0, 17.1598, 236.5189, 122.2487, 51.3885, 106.628, 10.1455, 0.0, 258.0984, 171.1476, 45.2378, 119.5794, 58.6334, 9.9753, 106.4664], [52.9457, 0.0, 35.4269, 325.8031, 21.8174, 0.0, 11.6789, 41.4258, 0.0, 104.9967, 0.0, 415.9089, 136.0264, 75.8701, 203.4672, 0.0, 42.8161, 214.4016, 255.7526, 0.0, 163.9962, 27.0861, 0.0, 227.106], [60.1979, 25.4883, 81.2972, 313.1469, 74.4894, 44.0268, 82.1873, 82.3158, 57.4515, 51.1349, 0.0, 290.1571, 84.4171, 96.7138, 129.8764, 50.0254, 127.4598, 500.6232, 424.8013, 106.524, 187.5996, 81.9487, 0.0, 293.508], [67.7025, 50.4275, 31.5652, 360.3283, 33.3155, 0.0, 14.983, 61.6984, 99.3204, 34.9978, 101.1012, 26.5132, 250.3967, 173.5536, 23.3605, 156.2712, 75.4354, 0.0, 613.116, 502.9479, 46.7705, 150.0462, 96.7664, 94.1203, 243.288], [76.7678, 110.2767, 279.0869, 35.6937, 0.0, 23.134, 18.0835, 71.3178, 0.0, 95.5177, 399.0512, 260.3304, 65.8486, 210.5466, 0.0, 39.3178, 558.5328, 376.2018, 67.3946, 146.4192, 176.1659, 0.0, 347.634], [16.9141, 58.6414, 116.8248, 337.7147, 42.332, 56.9492, 53.3224, 77.0868, 73.0098, 126.6944, 32.9819, 23.9428, 369.3373, 132.9816, 95.0664, 275.5722, 36.1469, 205.1068, 446.796, 445.3067, 46.3648, 115.7292, 141.5382, 18.2924, 342.612], [50.6966, 87.8821, 159.2028, 565.4326, 22.2724, 0.0, 91.8395, 82.6542, 28.6003, 18.205, 474.1447, 297.5531, 80.9952, 182.666, 23.2848, 137.0421, 265.356, 790.6696, 27.9947, 103.23, 50.6669, 0.0, 187.7112], [75.276, 40.9323, 161.5534, 344.5081, 123.7905, 11.2574, 0.0, 101.6329, 133.7808, 58.4237, 55.8615, 45.9935, 364.9952, 247.8467, 86.4864, 217.2764, 22.7674, 50.0409, 487.9224, 512.1511, 54.389, 124.2108, 133.9965, 103.0691, 259.2468], [478.5719, 294.8889, 118.4955, 316.825, 132.5755, 267.9242, 821.016, 814.4042, 174.5948, 145.917, 172.4482, 61.1414, 423.9684], [32.9333, 72.827, 193.7566, 367.8662, 0.0, 39.9401, 28.9138, 112.1526, 91.5654, 74.5741, 48.5639, 329.4067, 334.0146, 71.3627, 170.0804, 75.1212, 174.2305, 543.7152, 856.2224, 62.8415, 160.704, 146.4243, 100.016, 520.2792], [77.8235, 57.7491, 88.8527, 541.237, 96.162, 0.0, 31.7148, 59.0902, 116.043, 132.2138, 152.6257, 0.0, 558.3481, 200.0434, 137.7834, 215.878, 103.5989, 93.6176, 617.652, 758.5391, 102.3316, 276.6006, 161.3482, 0.0, 596.1672]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

