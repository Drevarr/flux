created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Erin Celes", "Drac Tepes", "Charr Surethang", "Drevarr Moonwillow", "Elonith Requiem", "Sakis Ranger", "Free H\u00e4nd", "Luke The Ghastly", "Fluffernaut", "Jimbo The Pleb", "Legoh Brave", "World Devourerer"];
const professions = ["Renegade", "Scourge", "Berserker", "Scrapper", "Reaper", "Druid", "Renegade", "Scourge", "Firebrand", "Berserker", "Tempest", "Guardian"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[74.0714, 621.3171, 18.9583, 78.359, 0.0, 53.0606], [25.375, 755.0366, 1.625, 30.8462, 0.0, 233.6061], [678.1087, 286.9881, 76.402, 0.0, 323.8788], [49.988, 28.6311, 45.675, 66.5642, 30.7414, 52.993, 28.2707, 28.2609, 20.9833, 43.1748, 26.2411, 24.8679, 36.541, 88.3521, 31.5977, 6.2203, 17.1899, 64.6707, 0.0, 48.2619, 21.2464, 10.8137, 0.0, 12.8286], [39.3133, 30.9508, 25.925, 52.0574, 36.0517, 40.5509, 12.6617, 45.1304, 32.2833, 44.9091, 38.5536, 29.3491, 39.0492, 20.7676, 24.7356, 66.8913, 83.0595, 13.3768, 69.4804, 0.0, 124.3143, 26.0179, 57.9756, 17.1154, 0.0, 19.4103, 2.1111], [137.6622, 114.6897, 157.586, 33.609, 27.45, 0.0, 2.5268, 0.0, 2.2459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 16.4902, 1.7381], [85.6475, 94.8732, 90.7126, 164.6949, 164.519, 127.7927, 262.7391, 39.2157, 1.0238, 120.0857, 14.9286, 317.5, 99.8462, 2.2083, 10.2821, 37.037], [106.0, 180.6698, 132.8934, 137.5141, 37.092, 0.0, 53.5823, 11.7195, 861.413, 91.6429, 62.1304, 8.3431, 24.3333, 33.6], [551.7011, 95.7627, 587.1013, 397.061], [107.0517, 26.8842, 93.8722, 79.913, 83.0444, 10.035, 243.6518, 57.7264, 83.5164, 65.3803, 60.931, 108.1013, 166.5122, 0.0, 278.5238, 80.8986, 21.8725, 30.0714, 98.1571, 120.8571, 79.2317, 196.1923, 5.5833, 84.0, 4.963], [0.0, 194.4508, 142.9155, 206.5747, 187.7119, 117.8608, 84.7195, 149.6522, 409.2619, 76.9565, 51.451, 262.2714, 669.3214, 533.3537, 468.3333, 0.0], [1571.0241, 4052.2705, 6441.1, 987.1486]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

