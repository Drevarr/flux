created: 20230626010646000
creator: Drevarr
modified: 20230705163537099
modifier: drevarr
tags: ChartData
title: 202306260106_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Aribel Darkbringer", "Pixzil", "Microsakis", "Xanvias", "Lady The Mirage", "Charr Surethang", "Gamora Titus", "Phageir", "Necrotic Windrunner", "Yngvar The Burdened", "Elonith Requiem"];
const professions = ["Firebrand", "Reaper", "Dragonhunter", "Berserker", "Reaper", "Virtuoso", "Berserker", "Firebrand", "Catalyst", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 16.9524, 2.814, 2.1176, 8.7835, 0.0, 18.7414, 6.337, 45.4648, 0.0, 11.8719, 17.4808, 0.0, 9.1778, 0.0, 14.9219, 0.0, 34.2251, 61.1282, 102.9032, 27.2, 108.8837, 91.4889, 15.1379, 23.6579, 4.8302, 1.8929, 25.2963, 26.9412, 18.9, 9.0824, 0.0, 14.6224, 11.6957, 93.6667, 193.5, 0.0, 18.8784, 0.0, 0.0, 4.1591], [1.3421, 57.8095, 14.4884, 13.3294, 50.2062, 13.5714, 187.6379, 57.4348, 147.007, 96.4375, 70.7469], [0.0, 14.4483, 3.7174, 47.8521, 66.4167, 51.5156, 1.4615, 154.7111, 37.0889, 0.0, 41.6719, 14.2545, 48.9177, 11.8974, 36.0806, 153.08, 93.8372, 7.1556, 43.7931, 0.0, 97.6316, 11.7679, 0.0, 23.3137, 3.3, 55.9765, 0.0, 26.6429], [0.0, 1.7442, 0.0, 30.0309, 0.0, 3.7586, 20.1196, 7.6831, 0.6875, 39.9125, 0.0, 0.0, 7.0667, 0.0, 0.0, 0.0364, 33.1948, 0.0, 6.8548, 6.66, 12.7674, 13.7333, 18.8621, 0.0, 0.0, 0.0, 36.5062, 4.0784, 78.9412, 0.0, 152.898, 75.2899, 0.8214, 120.7, 82.3784, 0.0, 20.6562, 136.9318], [47.8969, 0.0, 68.8621, 35.1413, 74.5423, 25.7917, 24.725, 10.8077, 0.0, 33.3778, 0.0, 12.5469, 2.0, 54.7273, 0.0, 22.8548, 53.04, 4.7674, 80.4667, 16.1034, 27.9211, 101.3585, 0.0, 25.5536, 85.0988, 36.6765, 54.55, 62.1882, 0.0, 45.8265, 118.5507, 59.4286, 31.8, 5.9, 85.8784, 68.6296, 22.7812, 5.6705], [18.8719, 74.4808, 70.1111, 64.9556, 0.0, 61.6719, 0.0, 30.8874, 82.7692, 38.4355, 78.3, 126.6512, 113.2444, 0.0, 225.1579, 0.5849, 9.5179, 32.1111, 30.0196, 246.775, 53.7294, 0.0, 80.7755, 27.4348, 90.8571, 186.75, 4.0333, 102.9324, 0.0, 66.7344, 93.9205], [0.0, 160.9365, 61.8605, 27.9412, 156.0, 0.0, 51.069, 0.0, 216.0915, 42.7083, 186.6312, 35.7308, 153.2222, 109.8, 0.0, 106.1406], [22.5567, 0.0, 7.1552, 0.0, 171.4225, 4.6667, 40.5406, 5.9423, 16.2, 488.0222, 0.0, 97.5, 13.9455, 94.3247, 0.0, 157.8548, 100.1, 240.7674, 140.3333, 0.0, 5.2368, 0.0, 5.7857, 27.284, 34.5784, 290.55, 10.2235, 5.5904, 26.9082, 18.4783, 210.5357], [220.3333, 0.0, 109.4844, 0.0, 203.29, 49.0769, 0.0, 165.2, 292.7209, 113.4444, 0.0, 137.0943, 83.9464, 129.6543, 92.5392, 136.2, 60.5294, 0.0, 43.7347, 6.3188, 184.25, 256.325, 0.0, 182.8108, 30.1111, 67.3594, 84.1364], [130.8454, 225.3214, 111.2069, 1.9674, 172.5141, 42.0, 69.9125, 0.0, 114.4444, 183.3333, 45.7308, 21.9375, 12.4909, 127.3074, 4.3077, 54.4194, 128.94, 104.4419, 327.4444, 24.8276, 51.0, 1067.6415, 568.2368, 163.3571, 36.6296, 7.4608, 212.375, 85.9882, 7.4699, 97.398, 264.5507, 199.631, 54.375, 121.8108, 38.3704, 36.8125, 22.8977], [44.5385, 56.8444, 594.8444, 0.0, 97.3125, 7.3091, 308.3463, 29.1026, 185.9194, 560.82, 142.0465, 382.3684, 442.3396, 1.0, 289.5893, 366.9383, 315.7843, 351.725, 269.8118, 0.0, 394.1633, 507.6087, 331.2024, 303.05, 0.0, 565.0405, 0.0, 80.4219, 344.9659], [75.6579, 454.5556, 75.2558, 263.4824, 281.6907, 3.7143, 174.9828, 0.0, 392.2958, 207.7083, 202.8594, 5.0385, 288.4222, 357.3111, 4.3846, 212.0938, 69.4727, 246.303, 9.0513, 212.5323, 380.34, 126.1395, 265.0444, 78.069, 130.7895, 326.5094, 40.9211, 89.4464, 334.3333, 307.9118, 385.475, 86.2588, 0.0, 281.3571, 640.5362, 352.4286, 107.675, 29.2, 435.7432, 350.5185, 303.4688, 369.1136]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

