created: 20230403221011000
creator: Drevarr
modified: 20230705163524402
modifier: drevarr
tags: ChartData
title: 202304032210_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Ak\u00e1nt\u00f3r", "Zenek Tryst", "Azar Fletcher", "Newtype Khan", "Etch\u00e9ry", "Primal Clone", "Be\u00eb", "Riazera", "Tegan Parker", "Venomina The Siren", "Mac Chiato", "High Sorcer Baradun", "Ryvalia Fazebringer", "Tika Sumiko", "Blancooo Padreee", "Legacy Of Mathus", "Black Raspberry Pie", "Sygaldry Verdandi", "Drevarr Moonwillow", "Solus Sanctus", "Viral Marketing", "Koralia Danai", "Zaylen Harker", "Johosh The Great", "Bella Sassy"];
const professions = ["Druid", "Weaver", "Soulbeast", "Spellbreaker", "Berserker", "Chronomancer", "Scourge", "Soulbeast", "Tempest", "Tempest", "Tempest", "Tempest", "Chronomancer", "Tempest", "Spellbreaker", "Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[192.5295, 152.361, 0.0, 49.7071, 78.5366, 25.8073, 233.5637, 66.9163, 0.0, 68.3201, 0.0, 0.0, 160.3358, 0.0, 38.7069, 45.2578, 0.0, 14.0844], [261.8462, 460.4175, 87.6876, 383.9505], [8.208, 0.0, 129.4698, 283.583, 80.5913, 301.7851, 64.5545, 43.234, 116.702, 0.0, 222.4181], [108.7082, 229.824, 0.0, 132.6074, 122.8344, 0.0, 278.0971, 34.639, 67.9857, 37.938, 0.0, 0.0, 142.7719, 0.0, 99.0118, 28.5237, 0.0, 0.0], [202.1483, 229.311, 70.8708, 314.7568, 0.0, 0.0, 20.2138, 25.5069, 49.1234, 74.531, 0.0, 363.6249, 13.9594], [773.0188, 230.337, 0.0, 135.2497, 77.1826, 0.0, 0.0, 8.9746, 25.3759, 38.1358, 0.0, 64.5169, 0.0, 33.8436, 1.6605, 0.0, 0.0], [229.1727, 283.689, 50.2902, 296.5914, 0.0, 0.0, 35.6899, 123.7557, 35.7434, 71.208, 0.0, 0.0, 212.5058, 0.0, 65.5922, 0.0, 0.0], [0.0, 1.539, 36.1962, 155.0665, 273.7176, 202.8365, 284.0981, 205.1574, 15.4969, 75.52, 0.0, 0.0, 392.6662, 0.0, 56.9131, 35.7007, 67.3504, 47.2771], [142.2978, 395.01, 75.7957, 105.3593, 219.9413, 244.3772, 358.0046, 85.4954, 15.2255, 96.2099, 94.7755, 44.8421, 43.3206, 0.0, 32.5248], [149.7791, 277.533, 3.6036, 211.8746, 162.8765, 176.0104, 136.7587, 204.9999, 89.8334, 179.2859, 0.0, 364.4944, 62.0507, 0.0, 73.6441, 0.0], [284.5955, 353.97, 18.979, 306.4998, 132.8933, 225.0217, 336.2117, 162.331, 28.9855, 64.5224, 0.0, 0.0, 245.8946, 62.385, 16.5851, 30.7561, 0.0, 64.7011], [327.4986, 443.4885, 0.0, 305.6741, 191.1187, 7.9233, 234.1954, 336.943, 88.8835, 50.8742, 40.1341, 0.0, 373.7111, 20.6004, 31.6418, 44.8958], [26.4136, 275.994, 461.3809, 87.0288, 127.477, 154.3912, 158.3938, 0.0, 16.4468, 507.713, 0.0, 825.8511, 0.0, 0.0, 0.0, 11.8259, 0.0], [294.5197, 498.8925, 110.9108, 286.683, 165.7781, 289.54, 555.8784, 266.248, 67.9043, 52.8126, 0.0, 0.0, 176.5085, 0.0, 33.5194, 50.2763, 39.2385, 28.6044], [325.3611, 465.5475, 65.9459, 353.7299, 404.2896, 304.3679, 249.9874, 288.4484, 13.1358, 65.0366, 11.3445, 36.0844, 196.3331, 13.0832, 26.3117, 38.7081, 77.6845, 25.8456], [238.6388, 549.6795, 68.1481, 493.6035, 343.1626, 0.0, 379.1659, 350.0113, 11.8059, 109.9768, 26.1501, 0.0, 424.316, 20.7555, 70.655], [169.1694, 392.445, 51.4514, 509.9523, 149.3357, 704.2682, 94.5941, 135.407, 27.7914, 33.8634, 0.0, 0.0, 137.381, 0.0, 35.4397, 275.0895, 0.0, 850.175], [613.4682, 525.5685, 140.2601, 251.5082, 1032.9696, 570.4776, 638.3126, 148.3179, 95.6142, 44.7819, 33.8683, 286.5872, 83.4991, 0.0, 7.5058, 123.7394], [341.2398, 809.514, 150.15, 442.7403, 699.479, 362.774, 883.7203, 493.1334, 82.0714, 72.8695, 38.003, 452.3139, 18.352, 48.4085, 42.7671, 22.6729, 22.2156], [524.6085, 962.901, 93.3733, 624.0641, 791.5565, 467.1351, 522.2414, 848.3406, 46.9793, 78.764, 3.1289, 22.1821, 436.8368, 9.3536, 109.1374, 80.2944, 81.6627, 82.5026], [765.5375, 1557.981, 173.0529, 1041.7031, 824.0544, 319.8749, 1142.2354, 608.0719, 146.9631], [555.9079, 1368.4275, 139.5394, 675.918, 1318.2936, 750.4497, 670.2125, 967.8452, 80.2801, 58.8653, 612.128, 0.0, 13.7918, 37.103, 81.3364, 286.2473], [1071.3556, 1498.473, 111.5514, 598.7976, 1461.8261, 385.6383, 1050.034, 107.1216, 160.5345, 109.2177, 1063.5724, 162.6836, 48.5235, 0.0, 103.7599], [947.2267, 1500.7815, 106.6265, 755.0201, 1454.4754, 877.3357, 1025.5325, 1338.7973, 165.1198, 112.1526, 0.0, 1238.6897, 0.0, 98.8372, 88.4677, 0.0, 64.9625], [1034.407, 1636.47, 98.058, 1303.7803, 1467.049, 900.3133, 1159.4486, 1068.2983, 128.5893, 51.1115, 114.9135, 945.3204, 132.4186, 110.8084, 96.9179, 25.8741, 386.7547]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

