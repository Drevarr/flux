created: 20230318225613000
creator: Drevarr
modified: 20230705163522552
modifier: drevarr
tags: ChartData
title: 202303182256_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Johosh The Great", "Zadie Miststep", "Boysto Yardbringer", "\u00c1rkantor", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Tempest", "Vindicator", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 47.1699, 113.2396, 345.5386, 69.8455, 0.0, 0.0, 93.5088, 122.3664, 118.1473, 87.0595, 163.6858, 24.6312, 33.1214, 22.4482, 25.2917, 71.344, 34.3926, 86.5613, 24.6013, 87.7176], [81.5829, 109.4083, 0.0, 58.2358, 114.4013, 73.8766, 14.5494, 31.4205, 55.8768, 82.584, 77.7161, 89.6412, 136.4048, 26.5162, 63.6398, 15.336, 80.123, 10.9436, 61.3595, 93.555, 145.3568, 50.453, 100.4065], [0.0, 37.1347, 0.0, 192.4981, 259.1539, 23.7986, 0.0, 79.6992, 206.4156, 270.905, 78.9876, 202.5856, 40.9464, 156.3918, 20.7684, 119.1686, 66.5923, 127.8136, 73.1957, 153.8432, 18.6551, 22.0633], [127.5869, 519.9466, 249.3659, 289.3012, 1706.8262, 704.9669, 202.8632, 94.1668, 153.4848, 509.7564, 583.5785, 35.2617, 375.6346, 100.093, 0.0, 399.587, 99.2229, 46.6897, 200.475, 436.0704, 110.8078, 316.2186], [182.5691, 591.2525, 174.1757, 230.6961, 1090.0224, 678.5326, 63.5076, 219.8448, 454.5672, 497.4458, 150.9489, 492.7597, 166.7318, 203.2166, 201.6468, 75.7166, 159.1949, 207.4849, 357.1128, 526.1133, 219.4465, 380.9354], [527.4136, 767.2493, 146.4297, 588.2981, 1873.6128, 901.17, 307.2578, 121.3555, 462.9072, 974.8464, 1145.8402, 421.2125, 705.815, 408.9254, 633.8253, 74.9952, 229.4266, 190.3059, 374.6431, 520.9677, 831.7542, 451.8316, 549.3733]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

