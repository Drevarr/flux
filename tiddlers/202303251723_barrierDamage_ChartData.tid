created: 20230325172304000
creator: Drevarr
modified: 20230705163522918
modifier: drevarr
tags: ChartData
title: 202303251723_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Xanvias Einzbern", "Johosh The Great", "Legacy Of Mathus", "Sofya De Nova", "Zadie Miststep", "What Charr U Saying", "Ryvalia Fazebringer", "Mike The Archmagus", "Sygaldry Verdandi", "Abigail Ryn", "Zaylen Harker", "Primal Clone", "Arriasa", "Tika Sumiko", "Tribal S", "Mac Chiato", "Bella Sassy", "Newtype Khan", "Eibh\u00ebar", "Smol Gluvs", "Arcanophage Farra", "Rozaalyna", "Panther B Me", "\u00c1rkantor", "Be\u00eb", "Fruji"];
const professions = ["Firebrand", "Berserker", "Firebrand", "Berserker", "Weaver", "Tempest", "Berserker", "Chronomancer", "Weaver", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Druid", "Tempest", "Druid", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1375, 261, 0, 0, 35959, 1099, 0, 2282, 1099, 0, 0, 2391, 0, 875, 0, 2961, 5879], [1496, 2048, 0, 0, 0, 0, 36331, 978, 0, 1730, 895, 672, 0, 1697, 0, 902, 1099, 3179, 4513], [240, 295, 0, 12, 0, 0, 39950, 45, 0, 3123, 0, 0, 0, 0, 1558, 2341, 969, 4147, 3142], [0, 18, 0, 0, 261, 0, 44109, 1099, 1412, 0, 0, 1099, 0, 3679, 400, 0, 2197, 0, 7112], [766, 1016, 0, 0, 312, 320, 37536, 184, 0, 626, 574, 0, 40, 674, 623, 4685, 9632, 4845], [1162, 71, 0, 0, 1099, 0, 37939, 1454, 0, 125, 1099, 0, 0, 0, 1915, 7817, 5526, 3679], [261, 3124, 0, 1449, 0, 52910, 476, 1099, 661, 2278, 0, 0, 0, 367], [824, 798, 0, 0, 0, 0, 47903, 28, 0, 3495, 0, 0, 0, 1099, 0, 2956, 3050, 4519, 4375], [1966, 3606, 261, 261, 1248, 0, 38767, 0, 1359, 2639, 1188, 0, 0, 534, 173, 295, 4910, 4747, 7496], [1933, 1448, 0, 0, 0, 0, 51407, 0, 0, 330, 2566, 0, 0, 0, 0, 1308, 6207, 3619, 2664], [3437, 2079, 0, 0, 0, 0, 49940, 0, 287, 1930, 0, 0, 0, 854, 0, 3934, 1133, 4036, 3863], [1672, 348, 0, 0, 1188, 43709, 0, 299, 4035, 0, 2044, 0, 0, 1181, 4158, 1222, 5283, 7025], [1383, 1457, 0, 0, 0, 0, 45232, 0, 0, 1099, 0, 0, 0, 0, 0, 4342, 1107, 6527, 11785], [1274, 327, 0, 0, 45427, 0, 0, 3356, 1191, 1615, 0, 2311, 1045, 1099, 11656, 686, 3545], [320, 859, 0, 0, 320, 0, 57927, 0, 1380, 2441, 313, 0, 261, 0, 418, 1412, 4860, 4206, 4709], [777, 1621, 261, 217, 2364, 0, 51938, 1165, 391, 5497, 4483, 0, 0, 0, 983, 6632, 812, 3024, 6749], [852, 2144, 0, 1860, 0, 0, 73042, 0, 0, 1099, 0, 0, 0, 2108, 1157, 6943, 3332, 1451], [0, 3001, 0, 0, 591, 0, 66964, 1294, 0, 1099, 1099, 0, 0, 1099, 0, 5830, 7778, 2820, 3525], [2296, 4634, 0, 0, 1396, 0, 78525, 4364, 1712, 1596, 952, 0, 0, 0, 3125, 5184, 6348, 4020, 1440], [0, 734, 0, 934, 261, 0, 80818, 195, 0, 506, 1099, 0, 0, 6510, 624, 6875, 9515, 5821, 3123], [5521, 4236, 0, 0, 1977, 0, 47837, 290, 756, 5591, 3663, 0, 0, 7189, 1501, 5055, 6441, 6316, 24809], [2838, 2241, 0, 0, 312, 0, 71358, 1400, 3535, 5299, 1501, 0, 261, 0, 0, 414, 12555, 11652, 15587], [0, 3400, 0, 0, 0, 101967, 0, 0, 3455, 0, 0, 3650, 6040, 3368, 17563, 6755, 6304], [1296, 3550, 0, 0, 1099, 0, 117073, 176, 0, 10073, 3386, 0, 0, 0, 1474, 0, 2208, 3306, 14850], [4917, 1570, 0, 693, 0, 122387, 1142, 600, 7255, 5156, 0, 0, 4380, 1482, 7232, 14935, 10550, 17743], [6910, 2943, 0, 0, 4492, 640, 143565, 2990, 1186, 10488, 8317, 0, 0, 6574, 0, 4229, 5784, 2939, 13030], [5651, 27465, 810, 0, 13404, 0, 324047, 5422, 1697, 963, 18433, 12814, 0, 14916, 4313, 18961, 14015, 5954, 32547]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

