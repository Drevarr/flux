created: 20230513000456000
creator: Drevarr
modified: 20230705163529835
modifier: drevarr
tags: ChartData
title: 202305130004_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Nazhul Naxxremis", "Grasszanine", "Blancooo Padreee", "Panther B Me", "Domitia Gravestorm", "Newtype Khan", "Smol Gluvs", "Rina Of Theros", "Jupiter Four", "Black Raspberry Pie", "Leetle Dim", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1667, 0.1131, 0.406, 0.0764, 0.3798, 0.2316, 0.2963], [0.4194, 0.7422, 0.0, 0.1014, 0.448, 0.3214, 0.0444, 0.8029, 0.0543, 0.1333, 0.6122, 0.0, 0.5789, 0.069, 0.0714, 0.0], [0.2917, 0.0119, 0.2478, 0.0186, 0.0543, 0.1073, 0.2593, 0.0, 0.8, 0.4524, 0.2903, 0.3359, 0.0, 0.304, 0.2262, 0.0222, 0.4453, 0.0, 0.0222, 0.1633, 0.0614, 0.1034, 0.0, 0.0], [0.0972, 0.0, 0.2119, 0.1452, 0.0465, 0.1751, 0.3333, 0.0645, 0.4667, 0.0, 0.0645, 0.2812, 0.0, 0.0, 0.408, 0.2262, 0.0, 0.5036, 0.0, 0.0109, 0.0, 0.102, 0.0, 0.2719, 0.0, 0.0, 0.0968], [0.0694, 0.0119, 0.1612, 0.1485, 0.2248, 0.1582, 0.0741, 0.0, 0.5917, 0.0, 0.0645, 0.4375, 0.0, 0.029, 0.36, 0.3036, 0.0889, 0.3139, 0.0, 0.0217, 0.0889, 0.3673, 0.0, 0.3596, 0.0345, 0.0714, 0.2742], [0.1389, 0.0952, 0.2269, 0.1277, 0.0775, 0.2034, 0.2222, 0.3226, 1.0333, 0.129, 0.5703, 0.0145, 0.496, 0.4226, 0.1333, 0.4088, 0.0278, 0.0217, 0.3333, 0.4898, 0.4123, 0.1034, 0.3095, 0.0], [0.2639, 0.0833, 0.2985, 0.2336, 0.2326, 0.2994, 0.1481, 0.4194, 1.6333, 0.1905, 0.2903, 0.8984, 0.0, 0.0, 0.584, 0.4524, 0.1111, 0.3212, 0.0278, 0.0652, 0.0222, 0.4286, 0.0, 0.7544, 0.0345, 0.1429, 0.0484], [0.2778, 0.0298, 0.3284, 0.2893, 0.0, 0.2712, 0.8148, 0.7097, 1.6333, 0.4762, 0.4839, 0.087, 0.8359, 0.0, 0.0725, 0.696, 0.4821, 0.0444, 0.7299, 0.0278, 0.1087, 0.2, 0.4898, 0.0909, 0.9737, 0.0, 0.0476, 0.0806], [0.3472, 0.0417, 0.2299, 0.3952, 0.3876, 0.1808, 0.0741, 0.0968, 1.5917, 0.3548, 1.0156, 0.029, 0.4, 0.4762, 0.0, 0.9781, 0.0543, 0.0, 0.5918, 0.0455, 0.9298, 0.0, 0.0238, 0.0], [0.2917, 0.0714, 0.2925, 0.4552, 0.1008, 0.3333, 0.1111, 0.3226, 1.775, 0.2581, 0.1739, 0.6875, 0.3043, 0.0725, 1.04, 0.1726, 0.0, 0.5547, 0.087, 0.1556, 1.1224, 0.2727, 1.0789, 0.0862, 0.0323], [0.2917, 0.0714, 0.5224, 0.5928, 0.2326, 0.3898, 0.3333, 0.2903, 1.4583, 0.2258, 0.0, 0.4531, 0.087, 0.0145, 0.968, 0.506, 0.0222, 0.6277, 0.0, 0.1087, 0.0, 1.0, 0.1364, 1.0439, 0.0, 0.2619, 0.2258], [0.4583, 0.0952, 0.5582, 0.3941, 0.2791, 0.4181, 0.2963, 0.4194, 1.675, 0.3548, 0.1304, 1.125, 0.0435, 0.1159, 1.152, 0.5179, 0.0, 1.1825, 0.0, 0.1196, 0.0667, 0.9184, 0.3182, 0.7456, 0.069, 0.0], [0.3472, 0.0476, 0.6687, 0.702, 0.5116, 0.3729, 0.4074, 0.6129, 1.9167, 0.1429, 0.3871, 0.1304, 1.1953, 0.4783, 0.2029, 1.016, 0.5536, 0.0667, 0.927, 0.0, 0.0326, 1.1633, 0.2273, 1.1491, 0.0, 0.5714, 0.4516]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

