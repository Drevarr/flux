created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Raelyn Sunray", "Morton Saltbringer", "Cosmedicz", "Gavann", "Permanent Dawn", "Black Raspberry Pie", "Klengah", "Funky Loot", "Mistwalker Cael", "Duke Silvver", "Arriasa", "Ggclaudx", "Sister Elonith", "Raziel Umbra", "Xanvias Einzbern", "Koralia Danai", "Ateriuz", "Mike The Archmagus", "Gestalia Yesteryear", "K\u00e2 \u00d4tik R\u00e6j", "Frosmor", "Cedryn X", "Primal Clone", "Sygaldry Verdandi", "Bella Sassy", "Johosh The Mighty", "Sub Train", "Eibh\u00ebar", "Cat Wigglebooty", "Jimbo Mann", "Ryvalia Fazebringer", "Tootsie Pop Rocks", "Drevarr Moonwillow", "Daphne Agla\u00e9", "Grasszanine", "Newtype Khan", "Mort\u00e4rion", "Vee Usagi", "Rozaalyna", "Rina Of Theros", "Il Dim Il", "Be\u00eb", "My Birthday Girl"];
const professions = ["Firebrand", "Chronomancer", "Soulbeast", "Firebrand", "Weaver", "Chronomancer", "Druid", "Virtuoso", "Vindicator", "Vindicator", "Druid", "Holosmith", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Weaver", "Druid", "Berserker", "Spellbreaker", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Scrapper", "Scourge", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1255, 0, 3165, 0, 0, 4835, 1207, 0, 304, 1010, 281, 110, 0, 0, 0, 421, 0, 0, 5427, 0, 0, 4213, 4243, 4642, 6362], [451, 310, 3179, 2926, 0, 1756, 0, 3027, 1734, 0, 0, 10623, 0, 2528, 0, 797, 0, 0, 269, 421, 0, 0, 0, 1978, 421, 1306, 1686, 0, 1460, 3657], [1534, 664, 1265, 11008, 4169, 1248, 0, 0, 0, 0, 10841, 304, 1686, 6675, 0, 226, 0], [0, 0, 0, 0, 3440, 2433, 4686, 421, 12815, 1018, 531, 0, 1893, 0, 0, 0, 421, 0, 727, 0, 0, 1307, 1728, 0, 0, 1773, 0, 0, 1121, 1296, 4162, 1265], [2968, 1103, 7659, 1025, 0, 269, 8774, 0, 304, 0, 269, 1534, 0, 0, 3176, 459, 0, 0, 0, 5252, 0, 304, 4602, 896, 0, 0, 5034], [0, 0, 2024, 0, 0, 385, 0, 1265, 0, 0, 1684, 0, 0, 5154, 0, 0, 0, 0, 976, 3477, 0, 0, 0, 1282, 611, 0, 0, 0, 10771, 0, 4178, 6350, 3331, 421, 0, 1992], [72, 0, 0, 15, 31, 4076, 2943, 1528, 421, 7467, 2894, 0, 234, 9287, 0, 1306, 0, 0, 1686, 0, 0, 0, 0, 48, 0, 0, 1333, 0, 2651, 1851, 1265, 3539, 0, 1471], [584, 539, 1230, 1704, 0, 269, 0, 962, 2927, 4257, 0, 0, 0, 9227, 0, 4027, 1192, 5171, 6722, 0, 7648], [0, 0, 0, 1295, 0, 465, 3894, 1901, 0, 9636, 2180, 253, 0, 7970, 0, 0, 748, 0, 2644, 5, 1248, 0, 0, 0, 0, 0, 0, 4617, 0, 181, 3164, 2500, 439, 0, 4637], [0, 3099, 0, 0, 1488, 624, 0, 7693, 341, 2221, 6029, 0, 0, 8394, 0, 222, 0, 1263, 0, 801, 178, 0, 0, 269, 1554, 0, 0, 0, 548, 0, 0, 3097, 0, 7260, 0, 3097], [2342, 0, 5226, 6416, 0, 0, 7776, 0, 0, 0, 2918, 0, 11413, 0, 0, 0, 299, 1842, 3094, 0, 0, 0, 136, 1230, 0, 3426, 2056, 0, 3131, 0], [6759, 1522, 3240, 4818, 0, 0, 0, 9397, 0, 4176, 10692, 4395, 2854, 0, 4174], [823, 0, 8768, 288, 1248, 1552, 0, 0, 7911, 243, 0, 3, 1330, 1257, 0, 0, 2528, 0, 0, 2126, 5317, 0, 1265, 8082, 6255, 2041, 0, 1650], [1653, 0, 0, 1763, 3736, 667, 0, 10668, 4288, 4373, 1265, 0, 0, 10017, 213, 0, 0, 304, 407, 0, 0, 0, 0, 0, 0, 0, 0, 1531, 0, 1265, 2663, 4254, 2988, 0, 1763], [1868, 606, 0, 0, 2393, 1456, 0, 4369, 421, 6084, 4912, 0, 0, 5767, 0, 0, 0, 2189, 0, 0, 421, 0, 0, 2918, 0, 0, 0, 0, 5930, 0, 1829, 6166, 4573, 419, 0, 2107], [0, 0, 0, 3743, 391, 0, 4515, 7653, 0, 8816, 513, 0, 0, 4570, 0, 281, 689, 0, 0, 0, 425, 0, 0, 506, 0, 7590, 0, 5527, 2685, 5824, 279, 2489], [6496, 0, 1734, 100, 10024, 842, 4689, 1878, 0, 0, 12183, 305, 0, 421, 114, 0, 0, 0, 0, 3180, 837, 0, 0, 0, 3226, 0, 304, 1307, 2032, 2986, 4896], [0, 1165, 0, 5461, 2883, 2952, 3693, 5079, 142, 9136, 0, 0, 93, 269, 844, 2733, 1409, 269, 0, 0, 0, 4897, 0, 0, 0, 15509, 0, 350, 0, 5688], [0, 1357, 26243, 0, 0, 395, 188, 4737, 0, 0, 3964, 2683, 0, 0, 0, 13323, 421, 2785, 3834, 0, 2557, 0, 1123], [20489, 0, 1822, 0, 3743, 2849, 1265, 0, 0, 4726, 4458, 0, 12612, 2528, 1534, 3070, 791, 0, 4607], [2335, 9266, 2949, 7115, 5036, 2572, 8775, 8046, 3468, 3416, 20750], [0, 2008, 1268, 1559, 6607, 1927, 4423, 3027, 13442, 3787, 2102, 0, 8019, 269, 269, 1821, 177, 1301, 978, 0, 970, 1651, 0, 0, 2068, 0, 1294, 2183, 4182, 6707, 0, 2891], [0, 0, 0, 4498, 0, 2432, 1945, 7378, 3478, 9846, 2510, 421, 0, 14086, 0, 1192, 0, 304, 2233, 569, 3399, 0, 0, 1263, 1152, 0, 0, 0, 6476, 0, 1264, 3061, 0, 6495, 0, 1200], [55, 816, 0, 1155, 275, 4287, 2918, 9894, 1307, 5637, 2513, 0, 0, 17438, 0, 0, 0, 6839, 0, 270, 0, 0, 1490, 0, 0, 0, 7642, 0, 2673, 2570, 423, 1002, 6543], [0, 0, 1341, 0, 2376, 0, 14815, 1231, 10433, 5197, 421, 102, 8037, 0, 0, 0, 0, 1721, 2918, 422, 0, 0, 0, 6190, 5372, 0, 0, 6037, 3317, 5713, 3621], [1142, 0, 0, 1121, 2049, 186, 3126, 4219, 304, 4698, 2202, 588, 3473, 11556, 0, 0, 0, 1627, 1396, 421, 1132, 0, 0, 2183, 6611, 0, 0, 6541, 2450, 9352, 5158, 1345, 5427, 0, 5625], [2650, 0, 1337, 1427, 3497, 0, 1324, 8641, 2296, 4759, 3403, 2494, 0, 17688, 0, 1573, 269, 782, 5113, 1670, 564, 0, 0, 270, 5800, 0, 0, 0, 7951, 1166, 1266, 1828, 3614, 4320, 1576], [1859, 3827, 0, 4800, 3396, 2626, 269, 15571, 523, 9696, 5553, 112, 0, 14068, 0, 0, 0, 0, 3197, 1213, 0, 0, 0, 0, 0, 0, 0, 269, 5433, 0, 0, 10349, 744, 10927, 0, 6627], [879, 930, 0, 997, 1714, 3418, 1951, 15303, 1480, 6189, 3590, 609, 382, 27082, 675, 1014, 2421, 2387, 2882, 1038, 0, 42, 3907, 252, 0, 0, 14935, 78, 475, 7835], [2037, 0, 5824, 2999, 4296, 2541, 19743, 5367, 4185, 2453, 842, 438, 31543, 0, 344, 0, 0, 1071, 672, 0, 0, 0, 5543, 1214, 0, 0, 0, 7406, 0, 304, 5384, 304, 726, 0, 4075], [890, 327, 0, 5124, 0, 3533, 5612, 12383, 841, 12434, 874, 0, 0, 16440, 0, 421, 1227, 354, 4356, 2556, 3229, 0, 260, 138, 4011, 0, 0, 8351, 842, 421, 10893, 3730, 5616, 5292], [828, 3409, 3003, 9319, 617, 4824, 6259, 27308, 1663, 582, 3642, 326, 0, 12338, 269, 1250, 0, 3188, 2112, 604, 0, 897, 2710, 0, 0, 6495, 6, 3049, 3853, 3912, 2626, 5800], [3076, 1658, 3497, 3742, 95, 7569, 2573, 19499, 818, 24982, 5042, 1030, 147, 13588, 0, 3831, 344, 2522, 1327, 4210, 2490, 0, 0, 3528, 413, 0, 0, 491, 8450, 97, 1434, 4963, 3255, 12479, 0, 4772], [1370, 3071, 0, 3421, 0, 11447, 1402, 4945, 11540, 3770, 16336, 3039, 1940, 20495, 1364, 0, 4012, 0, 4777, 3045, 0, 0, 4539, 5067, 1015, 13128, 0, 6008, 12675, 7462, 4933, 10565], [0, 445, 3280, 7738, 6010, 3497, 149, 17488, 882, 17240, 6815, 80, 1304, 27006, 0, 2960, 0, 705, 5241, 1515, 2100, 0, 3351, 273, 0, 0, 0, 11125, 0, 6313, 12223, 12237, 11853, 2865], [8397, 1395, 0, 4254, 4532, 9339, 5973, 28775, 4794, 19720, 4406, 2573, 2876, 27862, 0, 3312, 547, 1590, 6453, 2919, 890, 0, 0, 6834, 1379, 1520, 0, 839, 16432, 0, 7468, 14489, 5564, 12813, 11697], [7653, 7207, 1033, 15798, 14051, 32959, 12759, 4772, 3299, 3795, 15443, 0, 588, 2398, 7193, 12199, 19884, 17674, 0, 0, 5143, 13480, 0, 0, 0, 25975, 445, 8845, 19449, 2501], [0, 82946, 3794, 10331, 4437, 16633, 8930, 9477, 0, 4292, 22021, 0, 0, 0, 34890, 0, 22058, 26955, 9179, 15235, 0, 11142], [3991, 6876, 2537, 6609, 3087, 12053, 3317, 47373, 8675, 30030, 24889, 5235, 0, 46295, 0, 1579, 6516, 746, 458, 1298, 0, 10231, 6978, 0, 0, 22543, 0, 5595, 33484, 3713, 23481, 22056], [4475, 8826, 0, 14185, 4433, 18313, 10249, 30536, 5652, 5225, 24112, 4619, 0, 75815, 688, 1022, 3241, 8389, 1102, 9443, 9131, 0, 1016, 13094, 10855, 1015, 0, 607, 23641, 2150, 14098, 38648, 9673, 18403, 0, 17393], [2136, 6651, 3325, 11640, 2325, 10764, 15755, 58125, 9365, 40983, 43232, 5136, 4811, 64522, 0, 3778, 5058, 4873, 6183, 13642, 5421, 0, 0, 13870, 13379, 0, 0, 406, 38869, 2107, 16816, 21293, 22722, 27990, 0, 33195], [2418, 2821, 1337, 13618, 0, 12012, 22340, 80038, 3248, 54335, 31796, 4180, 0, 86783, 0, 5929, 4141, 8113, 11139, 16381, 2366, 0, 0, 9923, 20022, 0, 0, 0, 43136, 2076, 2965, 21234, 21713, 22211, 0, 24863], [789, 2137, 1060, 25616, 3921, 20868, 13795, 98500, 9281, 53713, 39292, 12279, 267, 101653, 3721, 11348, 13343, 14037, 256, 0, 0, 12492, 22062, 35868, 13553, 25203, 0, 35055]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

