created: 20230408001602000
creator: Drevarr
modified: 20230705163524603
modifier: drevarr
tags: ChartData
title: 202304080016_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Guild Dahddy", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Etcheryy", "Tegan Parker", "Zadie Miststep", "Venomina The Siren", "Anita Strips", "Mike The Archmagus", "Zenek Tryst", "Mac Chiato", "Black Raspberry Pie"];
const professions = ["Tempest", "Chronomancer", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[50.4639, 8.0488, 146.64, 62.7869, 45.4181, 72.9744, 141.5198], [0.0, 0.0, 0.0, 33.4788, 0.0, 0.0, 28.7635, 35.7945, 45.3569, 0.0, 0.0, 61.8912, 0.0, 0.0, 26.5642, 0.0, 100.016, 9.4329, 70.03, 68.8896, 73.4573, 52.7436, 103.6656, 35.6664, 0.0, 28.1887], [48.1744, 2.3304, 22.9021, 26.3169, 46.8758, 24.4963, 16.0858, 31.2007, 10.7692, 32.1572, 0.0, 29.52, 31.7652, 2.7542, 13.8485, 5.55, 76.155, 37.8162, 28.5525, 98.2176, 43.9171, 32.8601, 46.092, 37.4405, 22.3908, 45.1319], [94.6607, 99.3451, 117.4912, 69.629, 137.667, 74.0957, 190.9162, 42.7402], [20.3864, 32.144, 35.9944, 54.8506, 44.123, 0.0, 124.1875, 0.0, 51.55, 50.9723, 19.368, 22.4352, 50.349, 0.0, 3.9082, 0.0, 199.6748, 132.4836, 0.0, 183.2064, 101.7619, 86.8176, 116.4168, 112.8758, 44.6124, 333.7664], [54.2773, 70.2146, 99.9468, 61.9556, 127.7724, 0.0, 78.7248, 17.7503, 43.6105, 58.8774, 46.4544, 17.1936, 76.9898, 130.5365, 74.3117, 66.1856, 223.1071, 171.0189, 216.3762, 254.4672, 118.6099, 65.2597, 199.3272, 147.6552, 74.4104, 449.82], [5.6874, 63.2031, 59.5757, 0.0, 68.6127, 116.7178, 75.7258, 89.082, 43.756, 99.4048, 31.6944, 71.0496, 88.1647, 164.8195, 106.6814, 31.598, 245.1821, 78.2973, 163.6188, 319.6128, 227.785, 91.506, 123.4272, 189.1613, 51.1736, 493.1527], [109.4116, 55.0064, 125.7164, 104.3582, 102.6594, 38.3371, 145.3171, 86.289, 23.8346, 120.1514, 0.0, 88.4448, 64.0244, 94.6589, 44.7173, 31.5388, 218.6064, 206.2125, 201.16, 358.4256, 202.6253, 129.8079, 201.5352, 135.3845, 64.5404, 204.2183], [31.5276, 37.7491, 64.8201, 55.078, 79.8578, 79.7837, 127.7318, 16.7213, 35.1536, 74.652, 36.9648, 41.7024, 78.9037, 131.6962, 83.1758, 38.4504, 37.4346, 159.8094, 181.3025, 358.4256, 155.7878, 58.3947, 177.192, 240.277, 41.36, 733.6564], [41.1105, 40.9635, 81.3459, 126.5258, 103.023, 42.7738, 95.015, 125.9055, 87.1401, 73.7935, 36.1728, 41.328, 82.3612, 214.0334, 27.3005, 58.8004, 198.8175, 165.0969, 207.6225, 356.6784, 125.9107, 65.6783, 180.4488, 100.4942, 67.7176, 416.8332], [42.435, 57.6382, 46.1815, 58.3747, 77.4425, 159.3398, 132.6394, 67.0687, 64.1302, 80.876, 35.0496, 35.2224, 46.8915, 292.8917, 86.6875, 53.5168, 354.9139, 192.5496, 337.4013, 475.8624, 357.8515, 28.0043, 117.3552, 157.043, 53.016, 541.1335], [59.1856, 100.3897, 60.1793, 132.0393, 166.0781, 30.0326, 160.9258, 132.2265, 68.108, 95.5059, 41.6592, 12.4992, 41.6436, 181.7074, 119.2272, 1.9536, 138.0221, 202.6593, 239.0537, 431.3088, 308.543, 132.0264, 295.7616, 112.6171, 93.4172, 664.3841]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

