created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Perpetual Hope", "Zayde Sunsabre", "Hayuf", "Miphest\u00f6", "Blaze All Might", "Ggclaudx", "K\u00e2 Otik", "Brutal Araden", "Scythe User", "S\u00e2ucy K\u00e2t", "Valaria Emberstorm", "Sonia Truestrike", "Luke The Knight", "Amiti\u00e9l", "Porlen", "Artakama Nahid", "Tika Fiery", "K\u00e2 \u00d4tik R\u00e6j", "Greg The Knight", "Boof Floof", "Newtype Khan", "Erin Celes", "Enter Effore", "Kittendo", "Jerryatric Reflexes", "Red Reaper Robin", "Sarette Fay", "Audra Storm", "Koranthin", "Danaeryn", "Glorious Gluvs", "Drevarr Moonwillow", "Lost Uber Driver", "Free H\u00e4nd", "Jerryatric Reflexes", "Jmbrage Rev", "Whip \u00d1 Sl\u00e0pper", "Aisling Vexwind"];
const professions = ["Tempest", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Holosmith", "Firebrand", "Renegade", "Reaper", "Chronomancer", "Tempest", "Firebrand", "Berserker", "Firebrand", "Ranger", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Herald", "Firebrand", "Soulbeast", "Berserker", "Reaper", "Chronomancer", "Weaver", "Firebrand", "Tempest", "Berserker", "Scrapper", "Herald", "Vindicator", "Spellbreaker", "Vindicator", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 1, 6, 10, 0, 0, 0, 4, 0, 0, 0, 0], [2, 0, 0, 20, 0, 0, 0, 0], [0, 0, 5, 16, 6], [24, 6], [12, 2, 0, 4, 3, 0, 0, 0, 9], [10, 0, 0, 11, 0, 2, 7], [0, 0, 31], [32, 0, 0], [1, 1, 3, 3, 27], [0, 0, 0, 0, 20, 13, 0, 3, 1, 1, 0], [1, 1, 11, 26], [14, 4, 5, 0, 0, 4, 12], [0, 0, 3, 14, 3, 10, 7, 3], [0, 0, 0, 30, 11], [17, 21, 0, 5, 0, 0], [0, 0, 9, 24, 0, 0, 10, 8, 0, 1, 0], [1, 0, 0, 35, 0, 1, 0, 5, 1, 0, 0, 6, 4], [19, 0, 0, 10, 5, 0, 20], [32, 0, 11, 16, 0, 0], [4, 0, 0, 2, 11, 2, 0, 4, 18, 2, 9, 8], [2, 0, 0, 39, 10, 0, 2, 4, 0, 4], [0, 1, 0, 17, 23, 5, 1, 9, 0, 0, 0, 1, 11], [0, 0, 0, 13, 10, 14, 1, 20, 0, 0, 10, 1], [36, 0, 14, 10, 0, 1, 9], [30, 2, 17, 3, 0, 2, 8, 8], [0, 0, 4, 17, 2, 5, 5, 17, 4, 0, 0, 1, 18], [2, 0, 0, 18, 9, 17, 0, 15, 11, 0, 0, 2, 5], [1, 0, 0, 16, 17, 12, 0, 24, 3, 0, 0, 5, 3], [2, 0, 0, 11, 16, 3, 0, 12, 16, 0, 2, 9, 22], [0, 0, 0, 30, 2, 2, 0, 49, 1, 0, 1, 23, 0], [8, 0, 0, 13, 31, 5, 0, 37, 8, 0, 1, 0, 7], [12, 1, 1, 11, 9, 37, 0, 5, 17, 0, 2, 17, 6], [37, 4, 31, 66, 0, 4, 12], [9, 4, 0, 28, 37, 39, 0, 36, 14, 0, 1, 7, 6], [2, 0, 0, 108, 74], [8, 6, 4, 41, 73, 26, 0, 31], [3, 0, 0, 23, 63, 6, 0, 58, 8, 0, 1, 36], [0, 0, 37, 42, 8, 0, 109, 5, 0, 6, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

