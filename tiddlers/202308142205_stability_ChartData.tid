created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Revitiel", "Mielikki Embla", "Arcanophage Farra", "My Birthday Girl", "Zaedy Zae", "Newtype Khan", "Blancooo Padreee", "Alizayd Delnbone", "Xanvias Einzbern", "Mistwalker Cael", "Squishy Jellyfish", "Kisumaiassu", "Ryvalia Fazebringer", "Palm Sauce", "Jerryatric Reflexes", "Tropcaller", "Pr\u00e6tor Lightbringer", "Sygaldry Verdandi", "Crusader Siolith", "Sister Elon\u00edth", "Koralia Danai", "Bella Sassy"];
const professions = ["Scourge", "Vindicator", "Druid", "Spellbreaker", "Scrapper", "Druid", "Spellbreaker", "Spellbreaker", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.5549, 2.9483, 1.4697, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4465, 1.958, 2.1185, 0.0, 1.9737, 0.0, 0.7405, 0.0, 0.0], [1.5549, 7.5346, 2.6838, 0.0, 2.484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.2351, 8.5173, 1.917, 0.5179, 2.0424, 1.7413, 0.0, 0.3483], [0.0, 0.0, 9.5001, 3.5145, 2.4302, 0.0, 0.0, 0.0, 0.6344, 0.0, 0.0, 0.0, 1.892, 1.0592, 0.0, 0.0, 0.0, 0.0, 0.0], [1.2838, 0.2915, 6.2242, 0.0, 1.4904, 0.0, 0.0, 2.2194, 0.5368, 0.0, 1.4918, 1.2345, 1.188, 1.7518, 0.0, 2.4768, 1.2431, 1.0578, 1.5476, 1.7422], [0.6986, 2.0408, 8.8449, 1.917, 0.7968, 1.656, 1.6074, 0.2835, 0.7564, 0.774, 0.5443, 0.7233, 0.792, 1.3037, 1.6641, 0.0, 0.6699, 0.0, 0.7854], [0.8874, 8.649, 4.5863, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.2781, 0.0, 2.31, 3.6259, 0.0, 1.935, 0.0, 1.763, 0.0, 0.0], [0.0, 1.3605, 13.7588, 6.1983, 4.6613, 1.8768, 1.9199, 0.0, 0.0, 0.9272, 0.0, 0.0, 1.5162], [4.5629, 0.0, 9.5202, 4.804, 7.2988, 3.4344, 4.9694], [1.1328, 6.6082, 20.6382, 5.4954, 1.8326, 3.7536, 1.2055, 0.0, 0.0, 0.9072, 0.0, 1.232, 2.0777, 0.0, 0.8901, 0.0, 1.5867, 1.7384, 0.0], [1.1706, 0.0, 15.3967, 4.9842, 0.3984, 0.0, 0.0, 0.0, 0.0, 2.5132, 1.2384, 1.5322, 1.7957, 3.872, 6.8443, 0.0, 6.1146, 0.0, 1.1988, 2.6275], [0.5831, 31.1211, 10.0962, 5.4581, 4.6368, 4.8669, 2.3461], [3.1907, 1.9436, 30.1383, 13.6746, 3.4262, 3.2016, 2.545, 2.8371, 0.0, 2.318], [0.0, 3.4985, 22.9313, 12.4605, 1.9123, 2.6496, 2.2325, 0.0, 0.0, 0.0, 0.9804, 1.7539, 0.0, 1.87, 4.4814, 0.0, 3.6765, 1.6435, 4.5485, 0.9328, 0.0], [1.4915, 1.5549, 31.1211, 15.7194, 4.7808, 4.968, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.893, 1.606, 6.3554, 2.709, 0.0, 2.8913, 0.0, 0.0], [9.4265, 31.7762, 5.8788, 2.1115, 4.9128, 1.786, 1.8005, 0.4636, 2.1156, 2.8426, 1.7832, 0.0, 4.5221, 0.0, 1.7028, 1.791, 1.904, 2.1836, 0.8282], [34.7245, 13.0995, 3.5059, 0.0, 3.706, 0.0, 2.6108, 2.322, 1.895, 0.6235, 2.706, 6.4777, 0.0, 4.1796, 0.0, 2.2214, 2.7348, 2.7132], [4.0816, 56.3455, 7.7958, 4.0637, 3.4776, 1.786, 0.0, 0.0, 4.758, 2.6316, 7.4189, 4.4268], [5.3808, 7.1913, 46.1902, 9.0099, 9.6014, 4.7472, 1.8306, 1.6914, 3.3672, 1.6512, 5.8061, 3.2048, 6.644, 12.1813, 0.1075, 8.0496, 5.12, 10.1549, 0.0, 0.9282], [17.298, 61.5869, 11.6298, 8.3664, 6.4584, 8.5282, 4.092, 2.6108, 2.0124, 5.1811, 2.8432, 3.52, 9.8998, 0.0, 7.4691, 4.6775, 6.8404, 2.7348, 3.0416], [3.3041, 60.9317, 16.9974, 11.8325, 14.4072, 10.4927, 4.0374, 0.3078, 7.9056, 3.9216, 9.9389, 6.5343, 7.172, 11.285, 0.0, 10.6812, 2.107, 8.674, 3.6252, 3.827], [7.9107, 18.9501, 82.2251, 17.4447, 9.5616, 14.6832, 11.5197, 0.0648, 5.4656, 1.032, 4.7174, 2.9679, 6.028, 14.6664, 0.1165, 11.4165, 4.7829, 8.8503, 0.0, 5.9833], [8.3261, 20.505, 79.2768, 15.8472, 11.4341, 13.4136, 10.2248, 6.3017, 3.5154, 10.9312, 6.9144, 4.2336, 4.2523, 7.04, 15.1145, 0.0, 10.8747, 7.7538, 12.6936, 6.466, 5.1836]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

