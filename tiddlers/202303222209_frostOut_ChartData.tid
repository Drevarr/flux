created: 20230322220917000
creator: Drevarr
modified: 20230705163522820
modifier: drevarr
tags: ChartData
title: 202303222209_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Abigail Ryn", "Elonith Primal", "Sizzln Sisigbringer", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.4461, 39.9229, 57.477, 0.0, 135.96, 74.5574, 59.1264, 60.2112, 56.9452, 0.0, 85.5782, 30.9288, 394.632, 52.1603, 148.2998, 57.636, 76.472, 67.8422, 108.2189, 117.087, 20.0218, 20.9676, 19.9252, 85.9104, 0.0, 28.732], [334.8634, 74.2008, 74.336, 0.0, 89.2848, 57.047, 78.5952, 40.1722, 76.8333, 11.9434, 73.92, 73.1472, 354.438, 61.5995, 106.439, 32.904, 0.0, 106.4353, 87.5174, 74.8915, 47.3826, 44.3788, 58.3315, 0.0, 19.6841], [506.7533, 60.0065, 66.01, 16.882, 211.8864, 118.3795, 68.4, 83.3549, 126.8436, 0.0, 123.1296, 93.1098, 1294.328, 104.4605, 142.1309, 68.508, 69.0334, 76.9709, 34.2785, 161.7216, 124.7558, 16.5562, 48.9293, 39.672, 16.1782, 29.2566], [594.9274, 109.4556, 101.729, 19.872, 231.2112, 180.7258, 147.312, 110.3558, 133.7173, 33.8707, 185.8982, 143.7366, 1539.552, 115.368, 128.8627, 76.284, 45.5704, 86.5633, 51.7907, 162.3522], [677.9002, 140.4224, 115.667, 19.872, 231.528, 170.3117, 112.2912, 118.9171, 141.5382, 0.0, 192.5299, 126.4788, 1645.518, 240.0354, 134.8848, 29.844, 71.3275, 107.9795, 114.4779, 172.9328, 98.3981, 59.5274, 54.0984, 57.7022, 34.2161, 48.4453]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

