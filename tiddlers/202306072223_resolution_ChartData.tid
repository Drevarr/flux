created: 20230607222341000
creator: Drevarr
modified: 20230705163534420
modifier: drevarr
tags: ChartData
title: 202306072223_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Kaehln Lao", "Chrozz", "Belvyn Brightblade", "Sub Train", "Blanco Padre Guard", "Rafaellagabriela", "Gabe Malhorn", "Crusader Siolith", "Etcherii", "Sygaldry Verdandi", "Johosh The Great", "Solus Sanctus", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.874, 109.434, 878.5545], [0.0, 333.1675, 79.462, 0.0, 116.1518, 42.4227, 85.0695, 0.0, 98.2933, 110.5472, 294.1919], [0.0, 54.878, 789.6735, 0.0, 86.1773, 31.0162, 28.9968, 43.7681, 32.2707, 54.9167, 0.0, 11.948, 6.256, 71.526], [23.616, 5.934, 1751.4115], [2178.724, 59.1941, 448.0339, 149.0426, 0.0, 178.7983, 37.6132, 178.3937, 0.0, 83.3851, 138.7728, 174.6885], [71.4015, 117.53, 3190.6, 216.2635, 253.5854], [3649.8185, 83.6792, 376.1462, 190.7293, 0.0, 113.494, 52.5493, 224.9702, 0.0, 101.6839, 32.7152, 189.709], [3893.6715, 146.4549, 136.9603, 173.5057, 0.0, 171.247, 119.8951, 189.1289, 17.7715, 82.7034, 176.0144, 287.6996], [156.6405, 142.462, 4863.386, 209.7515, 506.0717, 108.8656, 41.9664, 126.3611, 40.7095, 246.4835, 0.0, 105.1284, 143.6304, 295.4574], [314.6648, 180.366, 5684.9655, 201.2859, 717.0082, 168.2219, 0.0, 147.9719, 50.2016, 189.5994, 0.0, 111.838, 128.5792], [204.5183, 298.264, 5749.917, 119.8859, 518.7125, 169.7316, 0.0, 168.6388, 66.9905, 262.1801, 0.0, 73.6616, 128.9472, 220.8503], [56.826, 266.432, 6214.833, 175.303, 422.4226, 147.087, 0.0, 153.3125, 56.0898, 352.938, 39.4727, 103.2268, 141.7536, 338.5931], [23.8928, 390.402, 6789.141, 401.0741, 684.9115, 165.9232, 16.4136, 166.1548, 100.7459, 228.4346, 0.0, 93.593, 132.2592, 337.3276], [480.8992, 396.612, 7280.2655, 306.2594, 698.7614, 162.4235, 20.8656, 189.0324, 42.1943, 56.6275, 0.0, 73.3387, 229.5216, 215.2933]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

