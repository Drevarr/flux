created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Sygaldry Verdandi", "Rahani Sunray", "Solus Luxes", "High Sorcer Baradun", "Kosair", "Mellody Moon", "Mikes Whip", "Morv\u00e4rth", "Grasszanine", "Newtype Khan", "Aira Draugr", "Arcanophage Farra", "Nothingwillsaveyou", "Necrotic Windrunner", "Cedryn X", "Daphne Agla\u00e9", "Pressing Fake Percs", "Black Raspberry Pie", "No Reserv\u00e9", "Glorious Gluvs", "Morton Saltbringer", "Venomina", "Oo Dads Mad", "Rozaalyna", "Rina Of Theros", "Eibh\u00ebar", "Lord Erin The Wise", "Elonith Requiem", "Sassy Daddy Demon", "Jimbo The Pleb", "Mike The Archmagus", "Mort\u00e4rion", "Xanvias Einzbern", "Mistwalker Cael"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Willbender", "Dragonhunter", "Berserker", "Reaper", "Spellbreaker", "Spellbreaker", "Herald", "Spellbreaker", "Berserker", "Reaper", "Berserker", "Reaper", "Berserker", "Chronomancer", "Vindicator", "Berserker", "Chronomancer", "Reaper", "Berserker", "Reaper", "Reaper", "Chronomancer", "Weaver", "Reaper", "Herald", "Berserker", "Weaver", "Scrapper", "Berserker", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.1538, 413.8108, 319.4828, 421.381, 80.7823, 88.8261, 305.7184, 145.805, 399.9062, 58.5692, 112.9213], [45.7692, 220.9099, 306.7241, 122.9206, 75.6935, 61.0435, 207.5631, 172.3868, 77.1562, 19.5154, 83.985, 62.4374, 79.6104, 129.7897, 31.6316, 12.1967], [0.0, 684.125, 88.5769, 234.1948, 228.8719, 229.3636, 5.7039], [11.2692, 343.7027, 156.3563, 160.8254, 177.2661, 98.1826, 587.4078, 223.8805, 18.6875, 66.2923, 65.0449, 23.7482, 26.4351, 39.6652, 122.2895, 0.0], [859.1532, 192.6667, 401.8413, 127.6855, 14.1261, 537.5825, 182.9528, 1.9062, 2.2308, 45.6255, 37.9266, 60.0519, 21.5322, 52.0789, 0.0], [622.6289, 666.4688, 0.0, 433.1536], [1038.7477, 537.4368, 412.9206, 350.0323, 182.4826, 1017.0291], [315.287, 0.0, 963.2013], [206.3626, 456.3182, 977.0215, 406.2105, 26.9672], [0.0, 1080.036, 663.6782, 630.7143, 311.5081, 111.4304, 572.9417, 213.1195, 118.0938, 0.0, 189.397], [1052.1892, 532.1149, 548.5873, 359.8952, 140.4565, 526.5534, 330.0409, 339.8438, 24.1769, 261.8052, 125.2964, 84.039, 36.794, 367.0263, 66.0328], [0.0, 2000.5225, 949.5402, 1154.9841, 473.3145, 181.7304, 795.4854, 556.0881, 330.5312, 184.4385, 387.7753], [0.0, 1523.8559, 1081.3218, 871.8095, 161.3952, 128.6087, 1455.7282, 600.5503, 417.4375, 69.2308, 465.2022, 170.6374, 143.0974, 44.412, 0.0], [898.5676, 774.0345, 443.6667, 340.8226, 265.6739, 672.5146, 632.3648, 207.0625, 84.8308, 288.6442, 267.2835, 449.4091, 284.7124, 487.9211, 130.3607], [518.0159, 302.9758, 423.8652, 1662.1262, 640.9937, 901.0312, 284.0692, 502.6891, 232.3194, 225.2143, 217.8627, 491.3158, 411.1803], [40.4231, 417.4505, 1851.9425, 1538.1746, 723.0242, 728.5783, 1019.7087, 448.5283, 287.5312, 175.3692, 414.5918, 229.9396, 0.0], [69.7308, 2124.1441, 2051.1839, 1157.5714, 783.4758, 437.5696, 813.6893, 473.5126, 203.2188, 0.0, 512.5843, 132.4331, 13.2013], [0.0, 2289.8198, 3380.4023, 893.0952, 1400.2661, 426.9522, 964.6699, 966.7264], [1477.009, 884.4368, 534.4444, 451.1774, 381.0348, 1954.1553, 635.673, 338.7812, 177.1462, 695.5393, 242.7669, 230.2273, 444.5794, 185.3421, 9.5738], [428.7308, 2954.1802, 1870.4943, 2164.7302, 994.3387, 588.9957, 1908.8155, 841.4245], [2650.3694, 1451.0575, 853.3016, 1020.3306, 452.8783, 1377.3301, 587.0597, 32.3438, 173.2615, 600.5243, 174.2604, 576.6753, 180.0858, 124.1053, 34.9836], [44.4231, 1314.6486, 1829.4943, 1861.3492, 840.4355, 682.4957, 1592.1942, 976.1258, 0.0, 298.0144, 345.3182, 486.2575, 484.8947, 37.1148], [116.0, 1965.4775, 1291.5057, 1776.6667, 736.7581, 559.413, 457.0194, 622.1447, 693.4062, 228.1385, 611.4607, 310.7799, 295.4416, 1132.1202, 122.1053, 238.4754], [0.0, 3605.2793, 1616.4023, 1814.8095, 1656.6774, 354.6913, 1380.2913, 1143.3805, 0.0, 35.3077, 1064.0936], [105.6154, 2604.5495, 952.9885, 2034.2222, 1158.4113, 489.1783, 2678.2524, 1005.0786, 175.5, 0.0, 1000.8914, 148.7597, 206.4805, 154.382, 223.0, 96.9508], [328.8846, 2143.009, 2424.3793, 1115.9048, 1191.8226, 777.2826, 1449.466, 815.4843, 1746.4375, 352.7308, 493.0262, 438.7583, 551.7987, 249.6009, 217.6842, 178.6721], [322.8462, 2635.0991, 1567.2299, 2132.2222, 1081.3468, 869.513, 1825.3981, 455.9497, 2342.625, 578.5769, 875.8315, 520.2561, 369.8182, 221.5536, 216.6579, 71.9836], [2076.069, 2501.0476, 1210.3065, 766.0652, 1670.4951, 671.6572, 1619.5938, 332.4769, 865.8652, 819.023, 1372.7468, 262.2961, 506.2632, 45.0984], [1337.4943, 3501.8254, 1737.4919, 1218.3348, 1327.7864, 1108.783, 2257.1875, 390.6154, 730.985, 802.5727, 133.7857, 510.0215, 0.0], [5086.4865, 1640.1264, 2908.1111, 1032.7984, 697.2348, 2870.2039, 2048.9371, 1065.5312, 460.1846, 1758.764], [3895.9099, 5246.6092, 2531.1905, 2293.9032, 755.7478, 1859.699, 1274.3774, 1516.8125, 639.2692, 1401.2135, 715.4043, 150.8766, 384.2232, 396.2895, 123.8197], [112.6154, 5032.6667, 3854.0, 3411.3651, 2315.7419, 1203.6, 2226.1262, 1325.783, 220.25, 557.9769, 887.3633, 1100.7396, 1071.3571, 313.3262, 1611.1579], [113.6538, 4463.7928, 3692.8506, 2678.7302, 267.1694, 1514.7435, 3681.7767, 2502.0912, 2545.1875, 1232.9538, 1535.4232, 515.0777, 880.6104, 904.3004], [7888.3333, 3471.8966, 5571.1905, 2500.1855, 1840.487, 1882.9806, 1614.0597, 460.6562, 551.2308, 1296.0524, 582.705, 1483.6948, 578.2876, 601.8158, 111.6721], [5943.6216, 4062.0, 4054.9841, 1763.2903, 1437.5, 6162.4951, 1904.8428, 2339.0938, 1129.4231, 2161.9176, 840.6432, 1112.2662, 781.4936, 1061.7105, 487.8197]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

