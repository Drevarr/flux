created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Fluffernaut", "Whip \u00d1 Sl\u00e0pper", "A\u00fcrora Windrunner", "Free H\u00e4nd", "Drevarr Moonwillow", "Gamora Titus", "Mmathuss", "Lady Fluffs", "Flick Embermage", "Alarics Clone", "Jerryatric Reflexes", "Legoh Brave", "Gestern Yesteryear"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Renegade", "Scrapper", "Firebrand", "Firebrand", "Druid", "Tempest", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.158, 84.9871, 109.7073, 83.8663], [2.8397, 84.8844, 15.6275, 5.9761, 80.1918, 47.5261, 0.0, 3.2054, 0.0, 0.0, 3.0085, 28.307, 37.7778, 0.0, 0.0, 77.1254, 0.0, 12.7051, 0.0, 9.8049, 0.0, 0.0, 0.0, 0.0, 0.0], [82.052, 7.1801, 87.0998, 56.5271, 109.9022, 70.8628, 0.0, 0.0, 0.0, 0.0, 0.0], [51.4523, 81.4256, 62.1032, 21.3851, 23.2971, 22.0514, 40.5968, 51.1632, 0.0, 62.8061, 9.4248, 20.8559, 5.8968, 0.0, 14.157, 0.0], [8.2037, 2.0545, 5.1888, 36.5501, 10.0827, 56.1336, 37.6922, 4.0469, 52.4394, 33.0373, 29.055, 13.3942, 34.587, 21.9347, 30.6301, 0.0, 8.2831, 3.4243, 0.0, 21.9668, 23.4531, 25.043, 0.0, 15.2306], [24.4343, 101.8357, 86.86, 106.3411, 0.0, 36.4504, 63.4032, 79.9106, 0.0, 0.0, 0.0, 0.0, 17.3204], [16.4574, 56.3868, 57.477, 200.3456, 161.2742, 24.4331, 53.1944], [0.0, 163.02, 151.5003, 16.7939, 280.6596, 0.0, 86.0037, 20.0149], [21.49, 62.1846, 60.102, 38.0786, 129.1533, 70.2029, 0.0, 86.1394, 0.0, 136.9402, 119.6336, 182.7187, 0.0, 0.0], [38.7579, 107.4336, 62.377, 18.5948, 116.9298, 20.153, 103.4062, 42.7201, 62.1248, 82.9095, 41.077, 20.2453, 34.1398, 53.2688, 37.0116, 16.7311, 29.3278, 50.184, 16.165, 33.9871], [78.7094, 31.2694, 125.6346, 50.2245, 76.4837, 53.9773, 66.6266, 82.6128, 59.3758, 27.1671, 28.7481, 27.7931, 29.3195, 42.2915, 78.2074, 88.8624, 0.0, 64.2068], [8.3761, 175.8776, 202.5928, 38.3165, 15.1571, 69.7491, 42.435, 39.8185, 102.9756, 132.8402, 181.8374, 95.2637, 66.0946, 81.5933, 3.479, 0.0], [103.1756, 119.7942, 66.576, 378.7734, 111.4435, 521.664, 255.9053, 33.031, 353.6442, 178.6299, 336.7414, 175.2116, 290.6186, 249.2412, 225.3039, 90.5379, 96.5301, 108.4565, 98.1511, 166.5191, 101.1443, 203.8939, 136.6729, 123.9235, 94.3754, 0.4836, 43.3543, 19.6171, 33.8831]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

