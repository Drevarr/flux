created: 20230506003334000
creator: Drevarr
modified: 20230705163528628
modifier: drevarr
tags: ChartData
title: 202305060033_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Rojin Rumei", "Artakama Nahid", "Xina Xino", "\u00c1rkantor", "Eibh\u00ebar", "Hyde En Sikh", "Primal Clone", "Viral Marketing", "Kaotic Reaper Z", "Black Raspberry Pie", "Ark Darkness", "Mrs Stealth Monkey", "Zaylen Harker", "Air One Com", "Miphest\u00f6", "Stoic Rapidfire", "Mac Adaymia", "Aronorf Xideliesi", "Zaidy Sagemist", "Temperstep", "Drevarr Moonwillow", "Solus Sanctus", "Bella Sassy", "Lucas Ryn", "Koralia Danai", "Jupi Jupi Jupi"];
const professions = ["Willbender", "Spellbreaker", "Tempest", "Firebrand", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Tempest", "Druid", "Vindicator", "Firebrand", "Vindicator", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[51.0171, 129.8562, 13.41, 0.0, 24.4322, 26.4063, 265.4223, 60.8634, 69.8255, 24.1718, 18.6586, 12.1054, 180.0792, 29.0783, 192.888, 254.3121], [327.7873, 86.7434, 125.7062, 35.5093, 13.8701, 13.7136, 162.6156, 27.1919, 179.352, 460.5111], [62.6604, 116.0083, 53.573, 0.0, 0.0, 234.9823, 134.4717, 62.7521, 4.8233, 47.1418, 0.0, 195.7284, 30.5506, 197.118, 327.4637], [0.0, 550.182, 989.7552], [95.2794, 679.8506, 16.5613, 32.0013, 2.0571, 1000.8091], [95.1905, 264.9379, 50.3545, 6.8598, 0.0, 305.5141, 126.6687, 96.9069, 37.921, 21.2179, 15.4095, 292.1184, 36.2099, 261.696, 504.6966], [136.1642, 280.0922, 86.4945, 31.5351, 0.0, 0.0, 236.8384, 134.0815, 127.2219, 37.2834, 17.255, 15.9943, 189.6048, 31.1948, 370.548, 573.4296], [90.7465, 302.301, 51.3603, 11.8548, 0.0, 20.0569, 355.2575, 167.6344, 134.3965, 46.9854, 52.3843, 45.0004, 261.954, 50.795, 335.298, 593.0676], [255.0856, 947.9238, 125.4506, 55.8108, 0.0, 17.0701, 1243.2158], [246.186, 2428.7296], [120.6102, 323.9872, 47.2702, 34.6986, 15.9222, 14.7757, 380.8717, 169.8453, 173.3008, 57.9902, 44.8714, 31.0529, 364.6944, 42.3292, 402.414, 605.3414], [117.3216, 447.0501, 0.0, 54.945, 8.7142, 0.0, 492.2377, 105.6006, 143.8952, 27.4705, 0.0, 0.0, 390.5496, 20.2904, 249.57, 782.0833], [309.3555, 18.8411, 44.5554, 0.0, 766.1981, 144.0954, 150.5645, 5.7935, 0.0, 15.5264, 205.0272, 83.3701, 64.014, 1068.3072], [445.7332, 943.2208, 82.0022, 15.1848, 0.0, 1410.2648], [170.383, 453.0595, 36.0059, 14.8518, 0.0, 0.0, 564.6256, 158.9211, 219.6827, 101.6492, 14.9846, 0.0, 387.1476, 125.3312, 539.748, 935.7507], [474.7081, 992.864, 202.9604, 10.7226, 0.0, 1030.5067, 278.307, 368.6304, 24.5876, 0.0, 131.6385, 849.366], [297.6591, 697.3563, 153.2092, 12.6207, 0.0, 0.0, 912.83, 279.9977, 311.133, 48.1774, 47.5958, 51.6963, 608.2776, 88.7533, 542.286, 601.4138], [130.1203, 655.5515, 205.24, 74.8251, 0.0, 0.0, 1331.5661, 266.3424, 220.5922, 37.8655, 50.3616, 41.6962, 548.1756, 111.8503, 460.224, 759.9906], [73.1584, 144.2916, 67.4658, 15.4086, 955.8915, 443.0804, 340.2353, 147.8308, 79.8355, 50.4975, 813.078, 97.9553, 751.812, 1304.9451], [140.9637, 634.6491, 186.2649, 18.1152, 0.0, 9.9098, 1112.1751, 342.6817, 259.0922, 0.0, 98.1002, 626.4216, 87.511, 568.794, 1350.6035], [26.2701, 0.0, 40.2494, 135.8938, 273.5694, 1781.0604, 287.4245, 1704.972, 2273.5894], [288.86, 704.6722, 222.8072, 54.3123, 18.2454, 74.7091, 1235.7914, 406.5363, 262.4269, 108.801, 86.5642, 41.3746, 794.4804, 80.4255, 760.554, 1499.3613], [306.0138, 851.5115, 146.0349, 81.2853, 0.0, 33.0919, 1150.0396, 550.7618, 484.0295, 51.5592, 64.4794, 31.433, 698.9976, 118.4297, 840.642, 1621.1169], [235.2654, 1092.673, 197.1941, 51.4152, 40.3289, 31.9249, 1007.4911, 396.0022, 473.9245, 96.6874, 144.5213, 691.74, 109.7799, 852.204, 1712.4336], [317.8349, 866.4045, 240.4413, 20.9457, 0.0, 17.8416, 1180.8508, 454.1346, 390.2551, 170.8384, 33.8909, 46.9887, 751.1616, 131.9567, 1175.094, 2093.9017], [551.6782, 1328.6088, 131.4851, 19.6137, 0.0, 0.0, 1327.4827, 453.4844, 395.9139, 50.0346, 20.1034, 81.8135, 983.4048, 188.3649, 1421.28, 2372.7614], [777.9666, 1530.5782, 308.0947, 23.31, 32.2274, 3.7582, 1977.4889, 578.5925, 530.9167, 175.9943, 189.0211, 181.3465, 1290.9456, 268.2843, 1610.22, 3136.6796]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

