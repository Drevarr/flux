created: 20230610164704000
creator: Drevarr
modified: 20230705163534787
modifier: drevarr
tags: ChartData
title: 202306101647_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Lucky Leipreach\u00e1n", "Eibh\u00ebar", "Rakloz Blightspire", "Morv\u00e4rth", "Smol Gluvs", "Zarandor Kel", "Xyntharos", "Drevarr Moonwillow", "High Sorcer Baradun", "Venomina The Siren", "Cedryn X", "Tomitigas", "Traidoruns Maximus", "Sakuras Blossom", "Aronorf Xideliesi", "Lord Erin The Wise", "Kary\u00edna", "Little Heks", "Be\u00eb", "Solus Sanctus", "Melli Dragonswrath", "Tika Fiery", "Elonith Requiem", "Morton Saltbringer", "Yngvar The Burdened", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Soulbeast", "Scrapper", "Chronomancer", "Berserker", "Reaper", "Reaper", "Dragonhunter", "Vindicator", "Scrapper", "Tempest", "Tempest", "Berserker", "Tempest", "Firebrand", "Scourge", "Firebrand", "Weaver", "Vindicator", "Reaper", "Reaper", "Firebrand", "Berserker", "Firebrand", "Reaper", "Chronomancer", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.0465, 45.9286, 0.02, 7.5833, 55.6885, 0.0, 25.6667, 0.0465, 6.9756, 0.0, 8.338, 15.3269, 0.0, 0.0, 25.617], [11.5244, 12.2963, 0.8873, 55.75, 23.0962, 0.0, 1.2128, 0.439, 9.3913, 25.3195, 0.5529, 3.0312, 9.1597, 29.6238], [8.3256, 6.8095, 10.56, 14.5417, 32.0656, 0.0, 6.8927, 7.3721, 3.7561, 0.0, 0.0, 0.6056, 41.7308, 0.0, 20.9574, 19.0, 0.7391, 9.1661, 0.0, 9.0156, 1.9412, 15.1287], [34.4419, 33.7619, 4.81, 0.125, 36.8033, 5.1149, 67.4972, 20.2326], [33.2394, 2.8846, 0.0, 0.0, 21.1755, 30.6341, 2.4348, 29.4249, 10.2353, 19.3125, 2.1933, 8.5941], [3.5814, 4.8095, 5.86, 8.75, 24.1639, 0.4483, 15.3672, 0.0, 13.1341, 0.2593, 6.1724, 4.8169, 11.0962, 23.8462, 0.0, 3.5053, 0.0, 5.8261, 12.1342, 16.0353, 10.9688, 11.4958, 32.9703], [0.0, 0.0, 8.3245, 3.6341, 0.0, 19.1789, 0.2, 0.0, 15.9916, 111.8812], [0.0, 0.0, 0.0, 0.2917, 13.1475, 0.0, 35.3898, 0.0, 2.7073, 30.7778, 0.0, 7.5962, 0.0, 0.0, 11.8617, 0.0, 1.2609, 13.4665, 0.0, 0.0, 41.3025, 11.3069], [0.0465, 13.6905, 18.12, 66.3958, 30.082, 4.7701, 6.7288, 17.2093, 32.0, 8.3704, 4.6056, 2.5385, 26.6538, 16.0725, 5.8085, 8.439, 0.0, 7.2173, 0.0, 22.4375, 2.2185, 1.0693], [3.0488, 8.1304, 52.9361, 0.0, 0.2969, 6.7059, 47.0693], [11.4884, 0.35, 25.5208, 134.8852, 0.0, 6.2429, 0.0, 0.0, 29.7324, 13.8269, 0.0, 2.0053, 14.0488, 23.6957, 3.9393, 0.0, 37.8281, 12.9748, 27.802], [12.3023, 69.8095, 6.94, 26.0417, 69.0984, 1.6782, 4.1243, 8.5814, 1.0854, 0.0, 11.8451, 26.0385, 0.0, 0.0, 9.8989, 10.6098, 7.2609, 11.607, 2.4588, 8.3438, 15.9496, 27.9109], [0.0, 0.0, 43.08, 125.7917, 0.0, 13.2529, 0.0, 40.5349, 0.0, 0.0, 0.0, 0.0, 42.0385, 0.0, 0.0, 4.0904, 0.0, 0.0, 5.9617, 14.3176, 0.0, 29.9328, 44.3069], [111.0, 190.1905, 37.6, 260.3333, 15.8852, 0.0, 0.6723, 19.1628], [26.1412, 23.125, 90.3109, 195.8317], [0.0, 21.5476, 42.45, 96.6875, 179.1803, 0.0, 3.4915, 10.2791, 0.0, 9.9259, 0.0, 4.1268, 0.0, 0.0, 27.9894, 19.8537, 30.0, 9.7252, 0.0, 0.0, 11.0168, 10.8911], [35.8837, 23.0952, 60.95, 93.1667, 51.3443, 0.0, 1.774, 3.814, 0.0, 65.1408, 81.8269, 28.0577, 0.0, 45.7606], [26.9302, 14.3333, 2.24, 13.3125, 38.082, 4.8621, 12.6328, 27.0465, 0.0976, 0.0, 0.0, 6.2113, 3.5962, 0.3077, 0.0, 34.4415, 0.0, 17.8261, 28.5687, 27.3882, 87.7969, 15.7647, 42.4158], [0.0, 0.26, 97.4583, 23.6066, 5.8851, 21.5367, 4.3721, 0.0, 0.0, 0.0, 4.8592, 9.7115, 0.0, 0.0, 69.9468, 0.0, 51.0, 55.3323, 1.5882, 5.8906, 22.2521, 23.0396], [0.0, 0.0, 0.66, 18.875, 34.1967, 0.0, 17.0565, 0.0, 0.0, 6.1111, 5.6207, 6.4085, 10.4423, 0.0, 0.0, 59.5904, 5.7073, 31.3043, 20.4185, 40.3176, 49.5781, 48.5714, 105.7525], [149.1163, 0.0, 53.1, 7.3542, 44.5738, 1.3448, 0.9379, 23.6744, 55.8415, 122.5556, 51.8621, 5.9155, 107.4038, 8.1731, 0.0, 36.0904, 0.0, 0.0, 22.4569, 3.1529, 0.0, 16.1681, 26.9604], [4.907, 60.2381, 40.67, 77.3958, 59.1803, 4.7586, 3.9718, 16.0698, 0.0, 6.4815, 0.0, 5.0, 5.8077, 11.1923, 0.0, 30.9894, 13.0488, 0.0, 44.8882, 0.0, 9.6719, 75.1597, 124.3762], [0.0, 27.3333, 35.45, 193.375, 55.0656, 0.0, 0.0, 3.4651, 1.0732, 15.6207, 201.1268, 4.8077, 0.0, 0.0, 36.8032, 0.0, 7.9565, 66.4696, 0.6588, 28.5625, 20.4958, 6.3267], [0.0, 25.5, 20.67, 25.75, 6.4098, 0.0, 24.4463, 0.0, 19.4268, 48.1034, 60.1127, 5.9808, 6.8846, 0.1014, 85.6064, 0.0976, 35.087, 57.5815, 62.0706, 55.1562, 78.479, 45.4653], [14.6047, 23.4762, 3.97, 12.5208, 63.5574, 3.5517, 6.0565, 0.0, 12.7407, 24.3448, 17.9155, 11.4423, 0.2885, 0.0, 28.1011, 0.0, 0.0, 126.3195, 6.7765, 5.375, 57.9076, 120.1188], [6.2817, 108.2308, 2.7115, 0.0, 18.6489, 13.3415, 99.4348, 109.6901, 74.5176, 62.4219, 40.1513, 206.5941], [3.9302, 77.0238, 1.21, 281.25, 64.9508, 1.6552, 27.7232, 0.0, 0.0, 0.0, 8.2394, 18.0, 0.0, 0.0, 143.1064, 84.0976, 0.0, 145.4058, 4.7765, 0.6719, 49.1345, 123.505], [13.5581, 1.5, 29.64, 275.1458, 114.4426, 1.3678, 4.7514, 98.5814, 1.1098, 7.037, 16.5862, 6.507, 5.2692, 0.8846, 343.2553, 0.7805, 0.0, 112.0895, 2.9412, 0.6719, 160.3361, 148.8614]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

