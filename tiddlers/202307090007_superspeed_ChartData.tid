created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Ggclaudx", "Glorious Gluvs", "Perpetual Hope", "Newtype Khan", "Miphest\u00f6", "Danaeryn", "Lucky Leipreach\u00e1n", "Naithan Stone", "Aisling Vexwind", "Valaria Emberstorm", "Artakama Nahid", "K\u00e2 \u00d4tik R\u00e6j", "Drevarr Moonwillow", "Zayde Sunsabre", "Jerryatric Reflexes", "Whip \u00d1 Sl\u00e0pper", "Audra Storm", "Erin Celes"];
const professions = ["Holosmith", "Berserker", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Weaver", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.135, 0, 0.313, 0.15, 1.019, 0, 0.671], [0.434, 0, 0, 0.573, 0, 0, 0, 0.524, 0, 0, 0, 0, 0], [0.26, 0, 0, 0, 0.15, 0.272, 0, 0, 0, 0, 0.469, 0.542, 0.222], [0, 0, 0, 0.342, 0, 0, 0, 0.503, 0, 0], [0.642, 0.238], [0, 0.737, 0, 0.32, 0.123, 0.271, 0, 0.279, 0, 0, 1.147, 0.722, 0.885], [0.421, 1.248, 0, 0.48, 0.539], [0.581, 0.897, 0, 0.627, 0.587], [0.743, 0, 0.317, 0.321, 0.269, 1.039, 0.303, 0.151, 0.484, 0, 0.883], [0.467, 0, 0.958, 0.701], [0.299, 0.745, 0, 0.411, 0.417, 0, 0.565, 0, 0, 0.548, 0.721], [0.51, 0, 0.646, 0.503, 0.914, 1.202, 1.477], [0.173, 0.482, 0, 0.32, 0.26, 0.469, 0.955, 0.519, 0.248, 0, 0.468, 0.962, 0.485], [0.678, 0, 0.524, 0.754, 0, 0.935, 1.204, 1.85], [0.395, 0.618, 1.235, 1.192, 1.02], [0.608, 0.733, 0, 0.16, 0.645, 0.543, 2.313, 0.815, 0.301, 0, 1.098, 0.448], [0.585, 0.732, 2.584, 0, 0.803, 0.408, 1.158, 0.637, 0.451, 0, 1.239, 0.9, 0], [0.433, 1.221, 0.903, 0.428, 0.982, 0.949, 2.138, 1.049, 0.567, 0, 0.914, 0.175, 0.37]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

