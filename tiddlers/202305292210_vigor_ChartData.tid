created: 20230529221000000
creator: Drevarr
modified: 20230705163532373
modifier: drevarr
tags: ChartData
title: 202305292210_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Riann Swordbreak", "Fribble Bibble", "Pamtastic", "Zadey Starbolt", "Drevarr Moonwillow", "Artakama Nahid", "Johosh Of The North"];
const professions = ["Tempest", "Spellbreaker", "Scrapper", "Tempest", "Scrapper", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.303, 421.6027, 0.0, 0.0, 31.7504, 0.0, 31.8324, 105.7056, 94.2732, 240.6175, 0.0, 62.4004, 263.6946, 0.0, 370.3], [89.5545, 693.3511, 38.5268, 0.0, 302.5804, 45.3235, 147.7321, 174.8448, 285.6384, 695.9066], [63.252, 862.9975, 86.9124, 0.0, 138.118, 0.0, 10.415, 65.3952, 211.41, 376.8336, 0.0, 76.4174, 481.8357, 87.9354, 518.65], [67.6274, 101.9434, 299.2302, 45.4349, 207.5513, 342.888, 421.5672, 1009.2654, 23.2716, 407.9024, 836.2935], [71.631, 1123.4362, 74.7836, 0.0, 343.8482, 5.2061, 165.9983, 71.76, 201.8574, 485.096, 0.0, 154.5667, 587.5542, 79.9974, 891.02], [77.6475, 1345.8614, 97.8305, 89.6062, 190.5784, 73.8038, 225.3902, 219.7104, 319.6206, 1021.775, 26.6015, 265.7833, 779.0508, 129.0366, 1035.46], [114.2505, 2476.8374, 138.0653, 147.649, 558.8676, 77.3395, 425.197, 534.2688, 684.9684, 1247.2574, 182.1428, 439.7791, 1054.7784, 177.5172, 2191.67], [123.5115, 2799.7939, 140.076, 66.803, 594.958, 164.5344, 396.7295, 556.1088, 475.7508, 1543.01, 108.563, 504.9937, 1850.8473, 242.256, 2516.66]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

