created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaedy Zae", "Necrotic Windrunner", "Latedoctor", "Newtype Khan", "Chocolate Teapot", "Be\u00eb", "Black Raspberry Pie", "Rahani Sunray", "Primal Clone"];
const professions = ["Druid", "Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Reaper", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1343, 0.041, 0.0465, 0.0714, 0.0263, 0.0086, 0.0633, 0.0244, 0.06, 0.0667, 0.0351, 0.0462, 0.0533, 0.0172, 0.066, 0.0862, 0.1111], [0.0656, 0.5581, 0.3214, 0.1053, 0.0517, 0.0253, 0.0, 0.0, 0.6, 0.1404, 0.4462, 0.0, 0.1207, 0.217, 0.0], [0.082, 0.4884, 1.0714, 0.0, 0.1466, 0.0633, 0.0244, 0.22, 0.1778, 0.4912, 0.2308, 0.0133, 0.0, 0.5283, 0.2069, 0.3296], [0.3731, 0.2787, 1.0233, 1.2857, 0.1053, 0.5, 0.1519, 0.0488, 0.28, 0.6667, 0.0702, 0.2462, 0.44, 0.2759, 0.066, 0.1897], [0.0896, 0.6557, 1.0233, 1.6429, 0.5, 0.6897, 0.2785, 0.1231, 0.3867, 0.6552, 0.3679, 0.4828], [0.2049, 0.8837, 1.0357, 0.3684, 0.4741, 0.2152, 0.0, 0.32, 0.3556, 0.4561, 0.5846, 0.4267, 0.4828, 0.1415, 0.6207, 0.3296], [0.4098, 0.1053, 1.1466, 0.2152, 0.1707, 0.32, 0.3111, 0.5789, 0.0462, 0.6933, 0.5517, 0.5283, 0.0345, 0.7778], [0.2869, 0.7209, 1.7857, 0.1316, 1.1207, 0.4177, 0.0732, 0.34, 0.5778, 0.386, 0.0615, 0.7467, 0.8103, 0.9623, 0.431, 0.4111], [0.8955, 1.0328, 1.0698, 1.3214, 0.3421, 1.0259, 0.6203, 0.0976, 0.76, 1.0444, 0.4912, 0.5692, 0.2, 0.7414, 0.6132, 1.1207]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

