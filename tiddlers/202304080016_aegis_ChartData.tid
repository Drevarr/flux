created: 20230408001602000
creator: Drevarr
modified: 20230705163524598
modifier: drevarr
tags: ChartData
title: 202304080016_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Patsby", "Kiloak", "Air One Com", "Ark Darkness", "Gavann", "Drevarr Moonwillow", "Mmathuss", "Viral Marketing", "Aronorf Xideliesi", "Koralia Danai", "Solus Sanctus", "Sister Elon\u00edth", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.9433, 28.8179, 0.0, 0.0, 8.1792, 32.5973, 0.0, 0.0, 0.0, 2.2464, 17.5959, 1.5946, 0.0, 37.5772, 32.5052, 1.5228, 44.8263, 41.6832, 39.7613, 6.279, 17.5536, 0.0, 3.5908, 30.1379], [131.2896, 168.0307, 19.423, 65.0256, 56.364, 25.8312], [27.3983, 83.5342, 43.88, 33.4788, 55.1083, 21.7282, 55.9594, 52.3688, 59.6673, 58.2336, 28.4832, 24.3072], [9.3752, 14.8063, 17.6576, 9.1512, 0.0, 79.8595, 22.2202, 34.1407, 0.0, 48.9691, 0.0, 12.6144, 24.7577, 30.5866, 27.1022, 109.8033, 37.8162, 29.1987, 12.2304, 1.6848, 47.2599, 32.1264, 49.2677, 17.484, 25.9396], [24.1781, 28.2064, 18.7518, 29.2158, 8.0767, 102.5357, 34.7616, 8.3422, 0.0, 52.9396, 7.2864, 6.912, 34.1422, 41.0237, 45.4536, 11.5144, 125.02, 34.0515, 64.5662, 54.288, 21.6778], [19.4687, 0.0, 68.6736, 0.0, 12.1937, 83.8594, 3.54, 137.3077, 77.1975, 119.3213, 176.2176, 12.1306, 7.0743, 31.8504, 24.2827, 137.7949], [28.0216, 4.7613, 18.1104, 24.4412, 2.9346, 36.4411, 49.8931, 12.348, 5.9506, 31.0126, 24.984, 17.0784, 23.2142, 68.2037, 58.1693, 23.2656, 61.5098, 54.1017, 29.6687, 90.1056, 177.241, 47.4692, 56.1936, 21.8803, 15.1152, 428.9783], [24.9572, 41.8676, 15.6957, 14.7216, 33.0858, 57.335, 40.4189, 15.288, 34.0378, 0.0, 6.4224, 23.0976, 29.2956, 57.839, 70.007, 0.0, 94.1579, 74.0673, 121.4363, 108.9504, 131.1898, 50.3576, 83.1864, 65.3453, 21.7516, 234.2063], [33.0858, 66.076, 22.223, 20.0077, 80.1174, 73.1477, 75.4531, 46.7092, 0.0, 120.1514, 2.3472, 30.4992, 47.1385, 9.4224, 10.4501, 1.5392, 150.7384, 47.9259, 127.84, 86.736, 65.5949, 79.6177, 78.7704, 60.984, 36.1336, 101.5094], [12.7253, 34.1128, 15.6202, 2.6146, 44.123, 106.8206, 65.0928, 56.595, 5.6433, 80.4825, 3.9024, 36.5472, 40.841, 123.5059, 73.3205, 134.0929, 73.3482, 168.495, 147.0144, 132.5376, 64.59, 185.6928, 61.6862, 27.2412, 306.9272], [2.1295, 17.5185, 42.4085, 35.9229, 68.5608, 43.4184, 71.7043, 19.8083, 15.2968, 81.5198, 11.1888, 11.5776, 19.942, 222.3686, 70.3186, 29.2596, 211.391, 144.4122, 163.3838, 212.784, 235.7597, 31.102, 85.0632, 65.0126, 23.7444, 391.9432], [24.5157, 25.2129, 66.518, 123.3996, 69.7814, 146.7125, 85.2682, 94.5577, 8.8773, 55.9443, 8.856, 34.128, 11.9467, 192.9418, 35.0602, 7.4296, 94.7294, 67.7646, 104.8687, 296.4, 88.1712, 99.1245, 158.3136, 66.2693, 27.9932, 398.5405], [29.3201, 72.0628, 46.6343, 33.3651, 88.7655, 203.5925, 118.8029, 34.104, 0.0, 49.2195, 36.3744, 33.7824, 46.9841, 190.0426, 35.5133, 27.898, 179.3144, 73.8981, 200.3963, 276.1824, 238.4554, 58.018, 160.4664, 108.0341, 47.7708, 348.0107], [23.1652, 127.9934, 63.7637, 37.8554, 97.7251, 124.0742, 102.0355, 99.4822, 69.8059, 113.3909, 53.4096, 22.6656, 1.9757, 285.4262, 82.5245, 22.8512, 263.3278, 55.4553, 193.3463, 322.608, 166.9075, 107.2035, 119.1216, 98.1288, 56.7572, 653.7384]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

