created: 20230607221050000
creator: Drevarr
modified: 20230705163534198
modifier: drevarr
tags: ChartData
title: 202306072210_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Arriasa", "Tootsie Pop Rocks", "Eibh\u00ebar", "Kaehln Lao", "Belvyn Brightblade", "Primal Clone", "Tegan Parker", "Venomina The Siren", "Ryvalia Fazebringer", "Blanco Padre Guard", "Uneeta Healah", "Grasszanine", "Artakama Nahid", "Newtype Khan", "Crusader Siolith", "Gabe Malhorn", "Sub Train", "Zayde Sunsabre", "Rafaellagabriela", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Drevarr Moonwillow", "Johosh The Great", "Etcherii"];
const professions = ["Dragonhunter", "Druid", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[147.231, 51.198, 859.183], [79.335, 137.356, 758.907, 39.3325, 68.5901, 30.7869, 0.0, 0.0, 8.4262, 14.7984, 0.0, 0.0, 0.0], [0.0, 0.0, 839.8115, 0.4558, 101.1264, 1.2972, 0.0, 64.1866, 0.0, 81.3913, 0.0, 0.0, 68.9388], [0.0, 13.708, 829.556, 9.5075, 222.1483, 55.4769, 0.0, 48.1648, 0.0, 87.3791, 89.907, 51.5867, 138.511], [154.9856, 464.9616, 131.6226, 49.518, 65.6024, 91.4695, 242.7197, 42.159, 73.0411, 240.4819], [75.645, 173.972, 1352.5865], [16.4205, 25.806, 1280.798, 75.0834, 209.1778, 25.2954, 0.0, 158.6779, 0.0, 75.318, 96.163, 0.0, 38.9273], [48.708, 14.812, 1273.961, 146.52, 114.7565, 44.5804, 0.0, 64.8821, 12.1443, 60.5623, 73.83, 104.489, 52.374], [28.474, 1162.29, 214.8309, 283.3738, 31.4787, 37.5564, 121.7657, 20.4817, 53.548, 0.0, 15.6354, 97.3913], [0.0, 0.92, 1376.516, 56.5242, 334.2667, 95.7334, 0.0, 0.0, 0.0, 0.0, 0.0, 160.2755, 149.814], [357.0075, 193.614, 2128.586, 149.9062, 154.8773], [141.696, 63.158, 2546.7825, 61.9291, 49.6838, 0.0, 0.0, 37.26, 16.1417, 0.0, 31.786, 8.7538, 89.4012], [258.2078, 152.076, 2086.4245, 6.3166, 208.1885, 89.1176, 0.0, 38.6014, 0.0, 21.2995, 80.316, 0.0, 124.236], [44.4645, 47.84, 2619.7105, 209.1003, 202.033, 70.3515, 0.0, 49.4316, 11.0911, 41.7435, 24.426, 18.2919, 20.9496], [129.0577, 309.626, 2316.6035, 130.8261, 190.2715, 38.1809, 12.684, 41.2344, 21.738, 40.3321, 29.578, 0.7084, 140.947], [126.198, 167.302, 2010.078, 189.3038, 293.9261, 102.868, 0.0, 152.9896, 53.9579, 149.0534, 66.723, 68.4112, 37.9042], [2307.4875, 690.7278, 55.7294, 76.1024, 7.5264, 149.2387, 120.2504, 321.8015, 0.0, 113.1416, 134.857], [3432.174, 136.8822, 275.4595, 33.9002, 44.4108, 149.5616, 50.0747, 162.8682, 45.885, 37.3681, 71.9107], [317.8013, 168.406, 3464.08, 278.0624, 35.0645, 54.8716, 0.0, 103.8312, 0.0, 89.9025, 22.816, 71.6496, 120.1435], [3603.099, 260.8056, 223.5773, 143.9892, 29.8032, 87.5113, 39.0598, 108.6358, 81.052, 103.0975, 64.2617], [367.0627, 267.582, 3326.2005, 185.2013, 125.4187, 116.4886, 48.8796, 26.9514, 27.0931, 97.4728, 28.037, 117.0378, 105.089], [302.3955, 369.702, 3356.967, 188.7829, 344.4893, 166.1713, 61.908, 82.7917, 61.4577, 28.3565, 67.988, 87.7404, 103.8223], [961.5218, 111.826, 4012.1795, 483.4509, 248.1994, 131.1469, 48.0144, 35.8938, 18.3497, 28.1854, 48.024, 43.1618, 101.0453], [294.2775, 171.948, 5542.528, 414.7493, 347.8968, 121.5909, 50.946, 75.1907, 42.6892, 105.3853, 0.0, 46.7544, 88.9627], [829.6043, 257.738, 5233.7235, 416.1819, 235.2288, 68.7948, 35.7252, 54.2257, 74.5664, 226.2533, 35.305, 108.3346, 220.9452], [1246.2053, 453.146, 7121.875, 22.4013, 456.6077, 174.5599, 0.0, 137.3404, 104.1976, 294.4287, 84.87, 5.9455]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

