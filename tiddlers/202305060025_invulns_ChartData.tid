created: 20230506002551000
creator: Drevarr
modified: 20230705163528353
modifier: drevarr
tags: ChartData
title: 202305060025_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Two Inch Pinch", "Aronorf Xideliesi", "\u00c1rkantor", "Zaidy Sagemist", "Iyani Tokahna", "Be\u00eb", "Mistwalker Caelon", "Venngi", "Demon Dalham", "Rozaalyna", "Blancooo Padreee", "Sister Elonith", "Aesa Valens", "Ark Darkness", "Zenek Tryst", "Tegan Parker", "Morv\u00e4rth", "Alice Hazerider", "Mac Adaymia", "Newtype Khan", "Jupi Jupi Jupi", "Smol Daddy Tika", "Permanent Dawn", "Nero Arien", "Maaaathexxs", "Venomina The Siren", "Kmpek", "Mrs Stealth Monkey", "Smol Gluvs", "Firewood Guard", "Eibh\u00ebar", "High Sorcer Baradun", "Miphest\u00f6", "Johosh The Great", "Black Raspberry Pie", "Lord Erin The Wise"];
const professions = ["Herald", "Firebrand", "Vindicator", "Vindicator", "Virtuoso", "Scourge", "Herald", "Scrapper", "Dragonhunter", "Scourge", "Spellbreaker", "Berserker", "Chronomancer", "Firebrand", "Weaver", "Tempest", "Scourge", "Weaver", "Vindicator", "Spellbreaker", "Firebrand", "Spellbreaker", "Weaver", "Chronomancer", "Scourge", "Tempest", "Vindicator", "Vindicator", "Scourge", "Dragonhunter", "Chronomancer", "Tempest", "Tempest", "Willbender", "Chronomancer", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 26], [7, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 31], [0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 14, 0], [9, 25], [0, 0, 0, 0, 0, 0, 32, 0, 5, 0, 0, 0, 0, 0], [37], [0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 22], [0, 7, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 9, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 31, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 6, 0, 15, 0, 0, 0, 0, 0, 26, 0], [6, 0, 41], [0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0], [50], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 45, 0, 0, 0, 0, 0, 0, 7, 0], [5, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58], [0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 40], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0], [0, 10, 0, 6, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 26, 0], [0, 4, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 5, 0, 12, 0], [36, 2, 0, 0, 0, 0, 0, 30, 0], [0, 13, 0, 0, 0, 0, 34, 22], [0, 26, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 6, 29], [10, 41, 0, 4, 0, 0, 4, 12, 0, 0, 0, 0, 0, 0, 0, 2], [15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 3, 24, 9], [0, 0, 0, 0, 0, 0, 31, 24, 0, 0, 0, 0, 0, 0, 0, 38], [102], [0, 21, 0, 0, 0, 44, 2, 5, 0, 0, 0, 2, 4, 26, 16], [0, 0, 0, 0, 0, 52, 74], [0, 28, 0, 10, 0, 108, 5, 0, 0, 0, 1, 21], [0, 39, 0, 0, 0, 0, 77, 2, 10, 4, 0, 0, 0, 13, 9, 29], [0, 0, 0, 0, 0, 0, 47, 34, 13, 0, 1, 0, 11, 1, 31, 59], [0, 45, 0, 0, 0, 0, 90, 41, 20, 0, 17, 0, 30, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

