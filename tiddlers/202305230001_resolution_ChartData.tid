created: 20230523000132000
creator: Drevarr
modified: 20230705163531300
modifier: drevarr
tags: ChartData
title: 202305230001_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Alnerian", "Husky Guard", "Gavann", "Phaydyd", "Soxxdodendron", "Blanco Padre Guard", "Sygaldry Verdandi", "Crusader Siolith", "M\u00e4raas", "Koralia Danai", "Bella Sassy"];
const professions = ["Dragonhunter", "Dragonhunter", "Firebrand", "Dragonhunter", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 354.1765, 0.0, 8.4132, 393.53], [37.5858, 0.0, 25.0432, 14.5152, 144.9621, 18.7879, 34.563, 0.0, 499.7562, 0.0, 0.0], [11.954, 36.581, 118.0494, 188.4507, 0.0, 0.0, 298.9101, 0.0, 0.0, 127.2636], [27.5725, 0.0, 332.6091, 485.8428], [0.0, 0.0, 80.9432, 233.9442, 118.4908, 0.0, 0.0, 0.0, 160.4072, 2.345, 101.475, 239.3196], [233.016, 39.9797, 250.1604, 482.7868, 151.9471, 133.824, 0.0, 1353.3518, 0.9874, 0.0, 1092.0124], [140.8071, 410.3507, 413.2296, 825.6537, 30.0074, 68.716, 51.9077, 1200.3584, 18.1652, 0.0, 1189.6612], [143.8794, 122.98, 522.774, 719.7683, 71.1859, 46.043, 39.2498, 1560.9377, 2.4572, 79.9992, 1365.7492], [148.9866, 0.0, 190.3283, 375.1272, 858.0076, 169.792, 90.5485, 40.0154, 1612.4971, 30.7204, 56.6784, 1856.1276], [151.7397, 0.0, 275.2069, 486.2592, 977.1286, 33.4168, 232.2035, 195.6363, 2468.4517, 272.5434, 1646.4228], [168.4179, 532.3469, 489.2076, 1186.3782, 126.7032, 152.2945, 270.512, 2083.9462, 129.15, 1797.6984]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

