created: 20230222222328000
creator: Drevarr
modified: 20230705163520019
modifier: drevarr
tags: ChartData
title: 202302222223_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosair", "Kiloak", "Kosair", "Blanco Padre Guard", "Zaylen Harker", "Sygaldry Verdandi", "Bella Sassy", "Koralia Danai", "Ravioli Fetabringer"];
const professions = ["Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[84.7779, 17.7213, 88.5724, 63.982, 128.5001, 194.8213, 101.4192, 264.2238, 591.9329, 254.8576, 442.8827, 226.5567], [3217.2637, 39.9598, 63.982, 125.3538, 151.3057, 212.1254, 94.7902, 393.614, 223.3682, 334.2813, 166.8768], [7807.7948], [65.1447, 92.4983, 6755.1417, 63.9301, 66.1623, 190.5692, 210.8067, 98.9323, 0.0, 603.6719, 119.9734, 541.0878, 166.9204], [94.2465, 58.3184, 8449.0236, 278.8013, 256.2852, 154.969, 176.1041, 34.3499, 837.0301, 225.2321, 741.6566, 291.9037], [123.4032, 84.1502, 9349.7092, 0.0, 0.0, 159.3917, 311.5476, 322.3264, 134.8522, 661.8336, 335.5919, 610.5032, 198.2643], [128.7511, 116.3248, 11382.7382, 158.5231, 169.9844, 415.2478, 198.7066, 198.1365, 195.4469, 837.5637, 446.246, 826.7464, 316.5777], [156.8089, 122.7419, 12628.1305, 103.8899, 254.1837, 437.7729, 311.2701, 290.5407, 245.6595, 1013.4716, 380.0301, 801.6353, 335.1923], [182.7606, 203.6835, 13960.6263, 157.767, 233.9664, 353.6078, 290.1783, 296.3305, 224.625, 808.7497, 413.3833, 751.733, 303.7612]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

