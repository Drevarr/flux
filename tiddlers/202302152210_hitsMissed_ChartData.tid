created: 20230215221053000
creator: Drevarr
modified: 20230705163519348
modifier: drevarr
tags: ChartData
title: 202302152210_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Kira Dragonblaze", "Call Me Ever", "Sister Elon\u00edth", "Sumatra Satyricon", "Oo Dads Mad", "My Birthday Girl", "Tootsie Pop Bringer", "Be\u00eb", "Husky Guard", "Erika Simon", "Lord Erin The Wise", "Fribble Bibble", "Sister Elon\u00edth", "Nekro Atsume", "Raziel Umbra", "Rina Of Theros", "Veron Blackburn", "Skye Nightroad", "Primal Clone", "Johosh The Great", "Xyntharos", "Ravioli Fetabringer", "Daring Deathblade", "Smol Daddy Tika", "Blanco Padre Guard", "Abigail Ryn", "Ace Hammers", "Etchery Howls", "Ark Darkness", "Zadie Miststep", "Sp\u00edcy Cheese", "Jeckyll Mbs", "Legacy Of Mathus", "Smol Gluvs", "Xanvias Tseli", "Mac Chiato", "\u00c9\u00efbhear", "Tegan Parker", "Sygaldry Verdandi", "Grasszanine", "Black Raspberry Pie", "Ryvalia Fazebringer", "Domina Flagbringer", "Dark Sidiuz", "Bambiae", "Newtype Khan", "Drevarr Moonwillow", "Tribal S", "Bella Sassy", "Sassy Daddy Demon"];
const professions = ["Scourge", "Dragonhunter", "Firebrand", "Dragonhunter", "Soulbeast", "Spellbreaker", "Scrapper", "Scrapper", "Scourge", "Dragonhunter", "Soulbeast", "Weaver", "Scrapper", "Firebrand", "Scourge", "Chronomancer", "Scourge", "Herald", "Scrapper", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Berserker", "Firebrand", "Tempest", "Vindicator", "Druid", "Firebrand", "Tempest", "Berserker", "Berserker", "Berserker", "Scourge", "Berserker", "Tempest", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Spellbreaker", "Scourge", "Chronomancer", "Spellbreaker", "Scrapper", "Druid", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6, 5, 0, 1], [6, 6, 0, 0], [0, 3, 1, 0, 0, 1, 3, 3, 0, 1, 0], [4, 9], [0, 1, 0, 2, 0, 2, 4, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [7, 5, 0, 2], [3, 3, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [3, 7, 0, 1, 1, 2, 0], [2, 0, 1, 3, 1, 1, 0, 0, 3, 0, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 5, 2, 0, 0, 0, 4, 0, 0, 0, 2, 1, 0, 0], [0, 0, 3, 1, 0, 1, 1, 0, 6, 1, 0, 3, 0, 0, 0, 0], [3, 4, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 4], [1, 0, 0, 1, 1, 1, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 3, 4], [0, 3, 2, 0, 0, 1, 0, 2, 0, 0, 1, 1, 0, 0, 0, 1, 3, 3, 0, 0, 0, 1], [1, 1, 3, 2, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 0, 3, 0], [0, 0, 3, 2, 0, 1, 0, 4, 2, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 3, 1, 0, 0], [6, 1, 0, 1, 2, 1, 2, 2, 0, 2, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0], [4, 13, 0, 2, 3, 1, 0], [10, 1, 0, 0, 2, 0, 1, 1, 0, 2, 0, 1, 1, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0], [2, 5, 0, 0, 4, 1, 0, 0, 0, 2, 0, 0, 3, 0, 0, 2, 1, 0, 0, 3, 1, 0, 0, 0, 0], [1, 8, 0, 0, 2, 1, 1, 0, 0, 1, 0, 0, 4, 2, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [3, 6, 0, 4, 3, 2, 2, 0, 0, 1, 2, 0, 2, 0, 0, 0, 1], [2, 5, 0, 0, 4, 2, 0, 2, 0, 1, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 0, 1, 1], [2, 0, 4, 0, 0, 1, 2, 0, 2, 0, 0, 1, 0, 9, 1, 5, 0, 0], [4, 4, 0, 0, 1, 3, 0, 2, 0, 4, 0, 0, 0, 1, 0, 2, 0, 0, 0, 1, 3, 2, 0, 1], [7, 4, 0, 3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 2, 0], [2, 1, 1, 1, 4, 0, 0, 1, 5, 0, 2, 0, 0, 0, 3, 8, 0, 0, 0], [1, 3, 0, 2, 2, 3, 1, 1, 0, 3, 0, 0, 5, 1, 3, 0, 0, 0, 0, 4, 0, 0, 0], [8, 5, 0, 1, 2, 2, 0, 1, 0, 1, 0, 0, 1, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0, 0], [4, 6, 0, 1, 4, 2, 2, 1, 0, 3, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 3, 0, 0, 3], [8, 4, 0, 0, 3, 0, 1, 1, 0, 4, 0, 0, 5, 3, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 0, 5, 0, 0, 0, 1, 0, 4, 1, 0, 3, 2, 0, 8, 0, 0, 0, 1, 2, 3, 0, 0, 2], [2, 14, 1, 0, 2, 3, 1, 2, 0, 3, 0, 0, 1, 2, 1, 1, 0, 1, 0], [3, 5, 0, 2, 1, 3, 0, 4, 0, 2, 1, 0, 1, 1, 3, 0, 0, 0, 0, 6, 0, 2, 0, 0], [12, 6, 0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 3, 1, 0, 0, 0, 3, 2, 0, 2, 0, 1], [10, 12, 0, 0, 3, 0, 0, 3, 0, 2, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [5, 6, 0, 2, 1, 3, 1, 2, 0, 3, 0, 2, 1, 3, 1, 0, 3, 1, 1], [4, 5, 0, 2, 1, 0, 0, 2, 0, 0, 0, 0, 7, 3, 2, 1, 0, 0, 1, 2, 0, 3, 0, 3], [10, 6, 0, 0, 2, 3, 1, 0, 3, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 7, 0, 0, 1], [1, 4, 0, 1, 4, 3, 0, 0, 0, 5, 2, 0, 6, 5, 0, 1, 0, 0, 0, 0, 4, 0, 0, 2], [9, 5, 0, 3, 1, 2, 0, 4, 0, 3, 0, 0, 0, 1, 4, 0, 0, 0, 1, 3, 0, 1, 1, 0], [1, 0, 1, 2, 1, 3, 5, 0, 6, 2, 0, 1, 0, 2, 0, 0, 2, 1, 2, 5, 0, 0, 4], [9, 4, 0, 0, 2, 2, 0, 2, 0, 3, 3, 0, 3, 1, 3, 1, 0, 0, 2, 1, 1, 1, 0, 1], [9, 3, 0, 1, 2, 4, 1, 2, 0, 2, 1, 0, 5, 0, 1, 0, 0, 0, 2, 3, 0, 3, 0], [10, 9, 0, 3, 4, 0, 1, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 1, 0, 3, 2, 0, 0], [3, 6, 0, 3, 0, 5, 3, 1, 0, 1, 1, 0, 1, 2, 0, 1, 0, 0, 0, 3, 6, 4, 0, 0, 0], [5, 6, 0, 1, 0, 2, 0, 2, 3, 2, 0, 3, 3, 0, 6, 1, 0, 0, 1, 4, 0, 0, 0, 1], [5, 6, 0, 0, 3, 2, 0, 1, 0, 0, 0, 0, 6, 4, 0, 2, 0, 0, 0, 1, 8, 0, 3, 0], [1, 8, 0, 0, 2, 3, 2, 1, 0, 6, 1, 0, 1, 1, 0, 2, 0, 0, 0, 4, 3, 2, 1, 0, 3], [11, 9, 0, 0, 3, 0, 1, 2, 0, 1, 1, 1, 1, 5, 0, 0, 0, 2, 6, 0, 0, 2], [9, 7, 0, 3, 4, 1, 1, 2, 0, 2, 3, 0, 8, 0, 0, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

