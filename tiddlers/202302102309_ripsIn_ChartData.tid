created: 20230210230955000
creator: Drevarr
modified: 20230705163519029
modifier: drevarr
tags: ChartData
title: 202302102309_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Ark Darkness", "Koralia Danai", "Mistwalker Caelon", "Johosh The Great", "Sp\u00edcy Cheese", "Be\u00eb", "Zaylen Harker", "Tegan Parker", "Bella Sassy", "Tribal S", "Ravioli Fetabringer", "Arka\u00f1", "Burnhard Riemann", "Kary\u00edna", "Xanvias Tseli", "Oo Dads Mad", "Blanco Padre Guard", "Seren Nightroad", "Warrior Husky", "Air One Com", "Lord Erin The Wise", "Tacoplasm", "Aronorf Xideliesi", "Zadie Miststep", "Grasszanine", "Legacy Of Mathus", "Fungus", "Veggie Mac", "Kyllarian", "Jupi Jupi Jupi", "Arcanophage Farra", "Ace Hammers", "Panther B Me", "Smol Gluvs", "Abigail Ryn", "Drevarr Moonwillow", "Jeckyll Mbs", "Mike The Archmagus", "Kahless The Drunk", "Kosa\u00edr", "Ryvalia Fazebringer", "Rozaalyna", "Venomina The Siren", "Newtype Khan", "Dark Sidiuz", "Bambiae", "Black Raspberry Pie"];
const professions = ["Soulbeast", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Scourge", "Firebrand", "Tempest", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Berserker", "Vindicator", "Berserker", "Spellbreaker", "Firebrand", "Scourge", "Berserker", "Firebrand", "Weaver", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Berserker", "Scourge", "Tempest", "Scourge", "Dragonhunter", "Spellbreaker", "Vindicator", "Scourge", "Scourge", "Tempest", "Scrapper", "Berserker", "Tempest", "Firebrand", "Scrapper", "Chronomancer", "Scourge", "Tempest", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.018, 0.013, 0.0, 0.0725, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0141], [0.009, 0.013, 0.0214, 0.0507, 0.0, 0.0, 0.0, 0.012, 0.0141], [0.0, 0.026, 0.0143, 0.029, 0.0156, 0.0051, 0.0, 0.0, 0.007, 0.0845], [0.018, 0.026, 0.0, 0.029, 0.0, 0.0, 0.0, 0.012, 0.0141, 0.0986], [0.009, 0.026, 0.0357, 0.0507, 0.0, 0.0152, 0.0, 0.0, 0.0, 0.0423], [0.009, 0.0216, 0.0143, 0.1087, 0.0, 0.0, 0.0, 0.0241, 0.0], [0.0541, 0.013, 0.0143, 0.087, 0.0, 0.0, 0.0, 0.0, 0.007, 0.0282], [0.009, 0.0346, 0.0071, 0.087, 0.0625, 0.0], [0.009, 0.039, 0.0071, 0.058, 0.0, 0.0101, 0.0, 0.0, 0.0141, 0.0986], [0.027, 0.013, 0.0429, 0.0362, 0.0781, 0.0101, 0.0, 0.012, 0.0211, 0.0563], [0.036, 0.026, 0.0143, 0.058, 0.0, 0.0, 0.0, 0.012, 0.0141, 0.1268], [0.027, 0.0173, 0.0071, 0.0652, 0.0156, 0.0051, 0.0, 0.012, 0.007, 0.169], [0.009, 0.0476, 0.0643, 0.0797, 0.0, 0.0101], [0.018, 0.026, 0.0071, 0.1014, 0.0, 0.0, 0.0, 0.0241, 0.0141, 0.0986], [0.0631, 0.013, 0.0143, 0.1377, 0.0, 0.0, 0.0114, 0.0, 0.007, 0.0423], [0.0, 0.0303, 0.0286, 0.0652, 0.0, 0.0, 0.0, 0.012, 0.0141, 0.1831], [0.0541, 0.026, 0.0286, 0.0652, 0.0, 0.0, 0.0, 0.0723, 0.0423], [0.009, 0.0649, 0.0, 0.0507, 0.0, 0.0202, 0.0114, 0.0, 0.0141, 0.0986], [0.027, 0.0303, 0.0071, 0.1087, 0.0, 0.0152, 0.0, 0.0, 0.0493, 0.0141], [0.0721, 0.0649, 0.0143, 0.087, 0.0, 0.0, 0.0, 0.0, 0.007], [0.009, 0.0823, 0.0286, 0.0652, 0.0, 0.0, 0.0, 0.012, 0.0, 0.0845], [0.009, 0.0519, 0.0071, 0.1812, 0.0, 0.0, 0.0, 0.0241, 0.0], [0.036, 0.0563, 0.0286, 0.1232, 0.0, 0.0, 0.0, 0.012, 0.0, 0.0282], [0.009, 0.0563, 0.0143, 0.0797, 0.0625, 0.0101, 0.0, 0.012, 0.007, 0.0986], [0.009, 0.0346, 0.0214, 0.1304, 0.0, 0.0303, 0.0, 0.012, 0.0, 0.0845], [0.027, 0.0606, 0.05, 0.1377, 0.0, 0.0], [0.0721, 0.039, 0.05, 0.058, 0.0, 0.0, 0.0, 0.012, 0.0, 0.1408], [0.036, 0.0303, 0.0286, 0.0435, 0.0469, 0.0101, 0.0114, 0.012, 0.0211, 0.169], [0.027, 0.0476, 0.0071, 0.1377, 0.0, 0.0, 0.0227, 0.012, 0.0, 0.0986], [0.0991, 0.0433, 0.0143, 0.0725, 0.0, 0.0, 0.0114, 0.0, 0.0704, 0.0], [0.027, 0.0303, 0.0286, 0.1449, 0.0, 0.0152, 0.0114, 0.0241, 0.007, 0.0704], [0.036, 0.0216, 0.0214, 0.1159, 0.0, 0.0, 0.0568, 0.0, 0.0423, 0.1127], [0.045, 0.0519, 0.0143, 0.0942, 0.0, 0.0, 0.0, 0.0, 0.0563, 0.0986], [0.0, 0.039, 0.0786, 0.1739, 0.0, 0.0101, 0.0, 0.0, 0.0, 0.0141], [0.036, 0.0476, 0.0286, 0.0725, 0.0469, 0.0051, 0.0, 0.0361, 0.007, 0.1408], [0.027, 0.0216, 0.0714, 0.1304, 0.0, 0.0, 0.0, 0.012, 0.0211, 0.1127], [0.036, 0.0736, 0.05, 0.0362, 0.0, 0.0101, 0.0, 0.0241, 0.007, 0.1549], [0.009, 0.0563, 0.0214, 0.058, 0.0625, 0.0152, 0.0568, 0.012, 0.0423, 0.0704], [0.009, 0.0433, 0.0071, 0.0652, 0.0, 0.0051, 0.0, 0.0, 0.0423, 0.3099], [0.018, 0.039, 0.0071, 0.1522, 0.0469, 0.0, 0.0, 0.012, 0.0, 0.1831], [0.0541, 0.0779, 0.05, 0.0797, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1549], [0.036, 0.0606, 0.0429, 0.029, 0.0625, 0.0051, 0.0, 0.0241, 0.0563, 0.2113], [0.036, 0.0649, 0.0714, 0.2174, 0.0469, 0.0], [0.009, 0.0996, 0.0357, 0.1014, 0.0156, 0.0, 0.0568, 0.0241, 0.0493, 0.0704], [0.0901, 0.0303, 0.0714, 0.1449, 0.0625, 0.0, 0.0, 0.012, 0.0493, 0.0845], [0.0631, 0.0952, 0.0429, 0.2101, 0.0, 0.0101], [0.036, 0.0519, 0.0214, 0.2319, 0.0, 0.0101, 0.0, 0.0, 0.007, 0.2113], [0.027, 0.0909, 0.05, 0.1594, 0.0, 0.0051, 0.0, 0.012, 0.0282, 0.1831]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

