created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Leriel Nova", "Cariocamal", "Quinnquazy", "Banastre Tarleton", "Vylade Vinzanti", "Sequiturr", "Eat More Rice", "Dank Tendies", "Darth Sammy", "Jagged Ice", "Zoran The Bear", "Bhutabhaviabhavat", "Hyde En Sikh", "Vysmaris", "Adredhel Winter", "Zaedy Zae", "Malendoon", "Agent Pickpocket", "Eyzkold", "Belvyn Brightblade", "Jamaass", "Zatoshin", "Sygaldry Verdandi", "Unnamed Charr", "Praechilla", "Sight Beyond Sights", "Lady Sherena", "Koralia Danai", "Melmyr", "Revenant Brandorf", "Crusader Siolith", "Sly The Ele", "Unbreakable Nemesis", "Sofya De Nova", "Leriel Nova", "Bella Sassy", "Gabe Malhorn", "Greg The Knight", "Eat More Rice", "Willowshaven", "Scarlet Redwitch", "Drevarr Moonwillow", "Aethli", "Melmyr", "Serene Azura", "Puppy Sky", "Sygaldry Verdandi", "Agent Pickpocket", "Melody Phoenixstorm", "Aira Draugr", "Scuba Steves", "Newtype Khan", "Zatoshin", "Fqa Necr", "Tootsie Pop Rocks", "Kandy Land", "Leyviathan", "Daphne Agla\u00e9", "Sight Beyond Sights", "Jamaass", "Glorious Gluvs", "Mistwalker Cael", "Sub Train", "Rina Of Theros", "Elfina Lightborn", "Val Haden", "Mort\u00e4rion", "Mistwalker Cael", "Lord Erin The Wise", "Legacy Of Mathus", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Catalyst", "Chronomancer", "Mesmer", "Untamed", "Tempest", "Specter", "Daredevil", "Specter", "Reaper", "Druid", "Tempest", "Virtuoso", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Soulbeast", "Daredevil", "Soulbeast", "Firebrand", "Scourge", "Vindicator", "Firebrand", "Dragonhunter", "Mechanist", "Renegade", "Willbender", "Firebrand", "Firebrand", "Herald", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Specter", "Catalyst", "Harbinger", "Scrapper", "Renegade", "Willbender", "Dragonhunter", "Reaper", "Willbender", "Thief", "Scrapper", "Herald", "Spellbreaker", "Spellbreaker", "Herald", "Scourge", "Scrapper", "Soulbeast", "Herald", "Reaper", "Vindicator", "Reaper", "Berserker", "Vindicator", "Dragonhunter", "Reaper", "Berserker", "Reaper", "Scrapper", "Herald", "Weaver", "Berserker", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [0.0405, 0.0], [46.6486, 0.0], [20.6151], [0.0, 17.7838, 0.0, 14.6449], [46.5198], [74.9167], [64.7875, 40.3492], [48.0282, 51.5476, 18.4932], [94.8452], [10.2702, 48.2826, 88.6188], [17.2162, 235.6822, 0.0, 0.0], [0.0, 10.3686, 0.0, 0.0, 26.7763, 0.0, 0.0, 14.255, 1.6982, 0.0, 30.3551, 31.0783, 0.0, 12.9378, 20.6036, 42.6437, 12.2033, 5.4203, 24.3687, 25.8016], [70.5676, 0.0, 51.6355, 6.9478, 0.0, 25.2679, 51.036, 4.7241, 7.8691, 94.087, 8.9563, 0.0], [13.8814, 0.0, 104.6945], [0.0, 8.3771, 66.5753, 0.0, 38.25, 69.5484, 9.7826, 0.8874, 18.6283, 13.0405, 87.0233, 11.729, 19.113, 23.2818, 31.512, 45.3423, 25.7586, 9.454, 13.3696, 31.7188, 13.5992], [289.5397], [421.5516], [431.7738], [10.4802, 0.0, 38.285, 221.6712, 0.0, 197.0395, 12.2957, 1.5495, 39.3567, 140.6532], [1156.8522], [331.725, 439.9286], [158.7009, 172.8696, 15.4182, 173.4641, 167.2432, 82.3563, 66.7409, 19.1449, 85.2438, 121.4365], [64.8701, 0.0, 247.4454, 184.0274, 172.0833], [0.0, 103.8078, 94.8623, 154.7688, 393.377], [6.2542, 1131.9726, 0.0, 589.8684, 314.4167], [18.0909, 460.3349, 1270.5766, 0.0, 6.493], [5.9435, 0.0, 64.3976, 64.5753, 147.6974, 0.0, 0.0, 66.0567, 60.2883, 207.3488, 38.6355, 253.8174, 0.0, 131.488, 70.2883, 96.7816, 68.6435, 42.471, 60.0, 36.4365], [451.1847, 176.7455, 144.6986, 862.4414, 0.0], [23.6047, 84.6729, 248.287, 40.8909, 143.6603, 125.3423, 147.092, 171.0139, 164.0072, 269.0188, 117.25], [1.7062, 80.3345, 131.1644, 0.0, 137.4737, 25.2903, 5.0, 1.6532, 30.935, 79.9775, 167.814, 177.4766, 279.4087, 55.0909, 75.799, 63.4865, 135.5747, 93.1866, 30.2029, 37.3563, 49.1508], [9.5342, 0.0, 305.8289, 0.0, 4.7207, 52.5733, 85.491, 229.5814, 34.757, 267.1217, 0.9545, 102.3541, 141.5045, 260.8161, 168.3092, 64.0725, 84.8625, 55.8849], [382.5753, 0.0, 118.6774, 21.2348, 0.0, 87.0433, 92.3694, 3.2, 85.2679, 46.2072, 32.6782, 168.9749, 67.9928, 184.8125, 175.5198], [48.3367, 196.8018, 568.4651, 465.1776, 145.6435, 34.4909, 120.8134, 245.4775, 248.9425, 74.7354, 34.1812, 23.4312, 45.0913], [0.0, 75.7474, 302.5753, 0.0, 421.5526, 15.0968, 42.713, 4.2703, 153.1017, 102.3604, 195.5349, 43.4299, 220.7043, 22.4, 103.7321, 161.6306, 31.7931], [0.0, 56.8362, 34.5205, 0.0, 182.1842, 0.0, 2.1486, 60.4133, 89.3559, 215.0, 57.8598, 123.1217, 77.3545, 175.2057, 248.3514, 259.5862, 139.0529, 120.8986, 110.7062, 104.4444], [8.3955, 0.0, 91.7969, 52.2603, 0.0, 323.6842, 0.0, 0.0, 0.0, 57.4317, 95.455, 121.8837, 137.0467, 260.3043, 38.0455, 100.378, 225.5495, 225.046, 115.7967, 48.7899, 82.0312, 99.8333], [122.1644, 12.7368, 36.0, 0.0, 0.0, 102.5217, 160.2477, 31.7944, 323.6522, 72.8182, 144.7895, 79.5045, 151.4023, 153.9081, 270.9348, 112.9562, 155.4524], [17.3364, 0.0, 0.0, 0.0, 517.5627, 1362.442, 35.85], [126.815, 64.8559, 0.0, 326.0, 89.9913, 0.0, 0.0, 438.6577, 5.8736, 7.9749, 439.2319, 394.5562, 389.631], [0.0, 24.2477, 337.4667, 670.2342, 24.0233, 486.8598], [2.887, 0.0, 93.5256, 110.8219, 0.0, 265.7368, 5.4516, 2.9217, 1.4414, 93.6517, 181.3468, 431.9535, 190.3738, 378.7652, 0.0, 69.1818, 294.8288, 98.5057, 163.5682, 230.7174, 141.1687, 111.5913], [325.2414, 418.6184, 563.8406, 529.7687, 476.9802], [25.413, 1350.4247, 52.5833, 0.0, 0.0, 10.482, 35.6333, 1152.5116, 225.2056, 714.513, 34.571, 325.0507, 113.0687, 367.2976], [181.5517, 387.2451, 810.5, 630.1812, 508.9167], [15.5706, 0.0, 301.3737, 371.0, 0.0, 1083.8553, 0.0, 35.487, 1.8559, 268.1867, 337.7387], [43.8531, 0.0, 403.7611, 382.4932, 0.0, 1364.4868, 53.2696, 44.4414, 128.4817, 353.2703, 551.7209], [17.5135, 266.5283, 167.6892, 76.2326, 0.0, 715.113, 256.6818, 463.7129, 693.0631, 424.1954, 0.0, 979.4493, 108.2], [20.8927, 315.4266, 978.8493, 0.0, 1267.5658, 0.0, 8.8514, 373.56, 511.1892], [58.8249, 0.0, 465.5802, 1167.4247, 0.0, 980.6316, 217.5161, 9.1478, 36.6036, 360.3867, 463.5315], [200.2679, 620.9863, 0.0, 156.9605, 0.0, 0.0, 18.482, 159.9883, 282.9459, 239.3953, 131.7757, 667.3739, 0.0, 164.0287, 725.8559, 0.0, 409.0139, 117.1957, 146.4313, 332.9563], [23.2542, 186.3942, 391.7808, 0.0, 510.3816, 116.7742, 121.6, 2.6306, 157.8617, 303.9865, 68.6744, 448.5234, 407.9391, 11.2455, 203.4402, 396.3964, 233.7701, 315.5292, 210.913, 302.5063, 264.5873], [0.0, 637.6937, 29.2558, 265.3458, 1028.8696, 292.4455, 636.5598, 914.6216, 245.6667, 497.7437, 626.3333], [305.4636, 968.0287, 634.2072, 761.7816, 921.0808, 682.2971, 809.275, 526.3373], [38.9266, 706.541, 1263.2603, 0.0, 1632.9605, 133.8065, 0.0, 57.8694, 398.355, 566.6486, 94.2326, 38.0561, 49.5826, 83.8818, 25.9522, 50.2432, 20.3563, 31.6156, 65.4928, 109.6688, 28.8849], [278.3842, 273.6314, 894.9863, 0.0, 560.9211, 316.0645, 293.087, 39.5991, 115.4467, 521.7162, 492.186, 740.271, 77.4783, 388.9091, 612.8708, 651.955, 232.2414, 265.6017, 988.0362, 374.0813, 633.3889], [49.1412, 0.0, 253.4898, 574.9041, 0.0, 1156.8684, 65.0522, 20.5631, 400.84, 0.0, 417.1304, 12.9909, 677.1722, 683.4775, 399.092, 812.0139, 965.5507, 525.3125, 463.0317], [74.1299, 0.0, 587.4744, 943.3973, 0.0, 1764.3289, 0.0, 9.8919, 308.7217, 619.2703, 2201.814, 681.6168, 670.2609, 113.1455, 659.2775, 94.2252, 144.2414, 101.2786, 198.6014, 456.7188, 482.6389], [0.0, 495.8225, 148.3548, 122.8435, 73.4144, 650.5683, 733.6216, 2085.5581, 1036.1963, 927.6261, 1001.5455, 466.4054, 146.6552, 990.4262, 415.3913, 281.6375], [946.6447, 152.2581, 27.4087, 39.9144, 980.775, 1222.3919, 1529.2326, 1071.5981, 875.1364, 548.2536, 1043.4054, 949.931, 404.5181, 1810.4928, 756.4625, 1124.6151], [0.0, 0.0, 635.3038, 1242.3562, 0.0, 1384.0395, 0.0, 29.7739, 0.0, 372.07, 768.8423, 385.6279, 640.7009, 2959.2087, 125.6, 936.5359, 1473.1622, 799.1954, 427.2061, 722.8043, 942.6938, 520.746], [269.6328, 0.0, 1288.1792, 1917.8767, 0.0, 4819.25, 0.0, 87.4459, 1268.0583, 1503.045], [161.3898, 0.0, 810.0922, 1834.4384, 0.0, 1910.5263, 3.129, 102.9478, 24.1216, 356.8783, 428.6216, 4786.8605, 3699.4019, 2610.3304, 784.5273, 1561.3589, 1050.5315, 1169.931], [90.7966, 0.0, 527.1843, 1499.7397, 0.0, 2255.7368, 220.7419, 47.5043, 0.0, 436.44, 540.4775, 1097.3953, 383.514, 1447.6696, 520.7545, 884.8852, 1701.8288, 798.2874, 1032.0056, 1280.6957, 721.8375, 932.7381], [70.129, 26.9043, 6.5586, 872.2317, 915.7117, 2963.3953, 702.5607, 1514.7478, 250.3818, 1391.7751, 2796.7568, 970.6207, 918.9749, 1417.3768, 1194.7, 1000.3849], [1299.6579, 60.2258, 91.9043, 15.5766, 846.395, 959.1486, 1850.5349, 1474.7757, 1993.8522, 655.2636, 1008.7703, 1251.1261, 1061.7011, 1445.6574, 688.6159, 1098.5812, 1201.7897], [184.9096, 0.0, 814.0683, 1904.1096, 0.0, 1700.9342, 491.2348, 23.0, 900.9167, 482.991, 2088.5349, 2205.1682, 677.0348, 442.6455, 1641.1818, 78.1712, 737.0115, 1217.0724, 1677.6812, 429.225, 789.5675], [2299.0465, 2439.972, 3750.8087, 664.8091, 1839.7895, 2985.6667, 2224.1034, 1886.8022, 2782.5652, 2025.2625, 1824.6984], [2562.9211, 0.0, 277.8609, 24.5225, 395.6417, 1014.2613, 491.2558, 396.3178, 3521.4522, 698.6545, 2982.4593, 1340.0991, 450.3793, 1293.8134, 3652.6957, 2323.6062, 1028.0794], [192.0226, 0.0, 1215.616, 2366.7397, 0.0, 1871.25, 397.1935, 159.3913, 118.1126, 597.05, 650.4279, 3943.6512, 1388.3458, 4534.9391, 357.3818, 1480.1196, 1324.018, 152.6322, 1658.61, 900.6304, 2228.2562, 1001.7103], [141.1751, 0.0, 1105.4573, 1696.7945, 0.0, 2776.2895, 174.129, 242.9826, 25.7207, 1083.4983, 1561.2117, 1893.4419, 1774.1963, 2377.4261, 513.5182, 1312.177, 2220.8919, 2197.2759, 1736.4401, 2086.4058, 1182.9375, 1772.6667], [115.2203, 0.0, 2399.087, 3791.7123, 0.0, 5198.4474, 554.287, 137.3919, 2499.4, 2586.4865, 7732.8837, 5582.0093, 9186.3217, 687.9545, 3754.0383, 3608.3694, 4164.0805, 795.3733, 3694.1304, 4600.5063, 2806.5]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

