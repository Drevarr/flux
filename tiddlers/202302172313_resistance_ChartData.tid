created: 20230217231312000
creator: Drevarr
modified: 20230705163519505
modifier: drevarr
tags: ChartData
title: 202302172313_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Arka\u00f1", "Primal Clone", "Bambiae", "Newtype Khan", "Air One Com", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Koralia Danai", "Jeckyll Mbs", "Demon Sekhmet", "Zaylen Harker", "Blanco Padre Guard", "Ravioli Fetabringer", "Bella Sassy", "K\u00f4sair", "Johosh The Great", "Xanvias Tseli", "Arcanophage Farra"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.3955, 0.0, 20.1331, 20.0606, 18.2309, 12.1205, 19.8288, 0.0, 49.009, 0.0, 0.0, 0.0, 7.9027, 40.3742, 19.2803, 0.0], [19.044, 6.457, 6.37, 31.9245, 16.0936, 6.3886, 3.2832, 0.0, 6.4627, 6.4358, 33.6336, 12.8799, 0.0, 17.1264, 9.408, 25.2758, 24.91, 0.0, 21.7253, 6.432, 10.0243, 11.8901, 6.4346, 6.426], [11.7576, 6.539, 6.4484, 28.1613, 15.778, 11.6865, 6.4843, 6.5362, 6.5126, 36.9533, 11.4229, 0.0, 15.0144, 11.1014, 37.5782, 11.359, 27.529, 0.0, 6.5357, 11.7245, 6.4346, 6.4688, 4.393, 0.0, 11.3519, 10.78], [18.7459, 13.4064, 6.4484, 30.6701, 18.4828, 10.1023, 8.8373, 6.7075, 6.7277, 20.1802, 11.7726, 0.0, 19.008, 11.3971, 26.9534, 21.6717, 24.2419, 13.488, 8.3021, 15.2021, 6.7189, 13.4518, 7.544, 9.0184, 15.5462, 17.094], [18.144, 87.1234, 54.254, 0.0, 59.8858, 18.768, 14.8819, 34.8754, 8.924, 19.1929, 17.6433, 29.326], [24.7406, 4.9522, 4.9, 24.5235, 3.0654, 3.9474, 3.6936, 0.0, 18.0173, 4.9459, 34.6819, 15.1528, 3.7195, 22.1568, 15.3754, 48.203, 0.0, 0.0, 28.4534, 9.552, 14.904, 24.4426, 3.9816, 21.0344, 4.899, 0.0, 24.6186, 14.718], [22.3891, 7.4693, 11.564, 33.6806, 20.7819, 11.6605, 8.5637, 0.0, 7.4909, 7.1731, 41.0592, 14.9197, 0.0, 20.16, 11.8541, 29.8613, 24.3122, 23.6256, 14.976, 8.4787, 9.2736, 7.4655, 7.4542, 7.3255, 7.4768, 12.3549, 20.218], [36.2664, 7.0589, 6.8208, 36.9421, 18.6631, 18.8023, 10.4242, 0.0, 6.9278, 7.0502, 13.1914, 13.9872, 0.0, 40.2048, 31.0464, 45.407, 25.3584, 45.8131, 7.056, 12.0336, 11.4264, 7.0389, 13.9658, 6.9805, 0.0, 13.8594, 36.586], [13.0162, 7.3051, 10.8192, 75.703, 34.1706, 11.7904, 5.5814, 21.7138, 7.2806, 52.0666, 11.5977, 7.6032, 7.392, 68.1106, 26.3548, 56.3933, 11.856, 11.6362, 12.6518, 0.0, 7.3042, 6.0605, 0.0, 12.9931, 27.588], [16.7256, 25.3901, 0.0, 69.6819, 28.8061, 9.7387, 7.9344, 0.0, 20.2205, 33.8227, 75.6538, 40.8192, 30.6163, 29.9731, 60.5313, 13.4477, 0.3082, 9.984, 15.5443, 10.2341, 5.9724, 0.0, 0.0, 0.0, 19.011, 0.0], [16.1626, 17.3736, 0.0, 57.9533, 32.7281, 21.4772, 17.3462, 0.8424, 23.2805, 5.1917, 82.2931, 28.6155, 19.2384, 22.4717, 115.9781, 38.9592, 48.8947, 10.56, 0.0, 17.7523, 0.0, 8.7179, 0.0, 0.0, 12.9931, 22.022], [31.8283, 28.5091, 18.3456, 86.1773, 44.8095, 6.7003, 5.7182, 0.0, 21.983, 26.9261, 32.76, 29.0817, 0.0, 46.9632, 27.4176, 54.4661, 37.4148, 0.0, 41.1394, 11.808, 31.729, 12.3206, 6.79, 13.6231, 6.7505, 0.0, 3.9207], [36.8626, 36.7718, 32.6144, 60.5248, 34.4411, 1.8439, 25.1438, 0.0, 25.2878, 7.4342, 46.9997, 7.4598, 58.4064, 7.3114, 85.3339, 85.6904, 78.5294, 48.048, 7.3968, 14.4403, 7.5011, 7.5184, 7.6015, 0.0, 10.7136, 8.8], [38.0549, 7.1683, 7.3304, 79.7171, 73.7509, 29.1643, 26.293, 0.0, 27.2952, 6.0211, 79.4976, 14.2786, 5.4612, 38.9376, 8.4941, 51.3346, 24.9598, 0.0, 85.309, 15.456, 32.1706, 12.5525, 7.3944, 7.6469, 19.504, 0.0, 30.7277, 53.24], [44.0827, 21.7238, 28.9492, 70.8736, 60.7678, 20.4124, 25.7184, 0.0, 23.256, 7.3114, 63.2486, 37.1826, 0.0, 7.2576, 31.0195, 84.2155, 58.5385, 0.0, 51.5654, 22.128, 10.3114, 28.2514, 7.2877, 33.201, 16.8935, 0.0, 38.2956, 39.71], [38.6842, 32.5858, 33.222, 43.7786, 40.1212, 21.1396, 6.2107, 0.0, 11.4077, 21.0432, 65.0832, 33.7441, 0.0, 70.4256, 18.1171, 72.2486, 33.2798, 0.0, 87.877, 0.0, 37.536, 47.1298, 0.0, 55.0922, 19.458, 0.0, 19.011, 41.47], [36.7301, 7.3598, 36.358, 97.216, 65.0054, 35.8126, 7.3325, 0.0, 23.4029, 29.1226, 96.096, 31.1798, 0.0, 54.2592, 26.5037, 72.5842, 52.8092, 81.3542, 14.928, 28.0637, 32.4245, 0.0, 31.6373, 23.736, 0.0, 34.6028, 29.7], [9.936, 15.4584, 29.4392, 94.8954, 61.7145, 9.6089, 10.7525, 28.152, 18.2784, 81.6816, 27.9161, 28.9152, 45.911, 145.7275, 99.4407, 0.0, 18.0787, 21.552, 34.0694, 61.0402, 0.0, 42.3902, 4.8875, 0.0, 36.4264, 34.738], [16.56, 114.1186, 110.8184, 85.0483, 10.8643, 37.8643, 0.0, 112.6325, 16.3738, 138.815, 121.339, 73.0368, 39.2717, 97.0771, 105.5686, 0.0, 140.8805, 0.0, 17.0016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

