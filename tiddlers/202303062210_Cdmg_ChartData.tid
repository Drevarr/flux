created: 20230306221045000
creator: Drevarr
modified: 20230705163521283
modifier: drevarr
tags: ChartData
title: 202303062210_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "Sygaldry Verdandi", "Mac Aaroni", "Ark Darkness", "Mistwalker Caelon", "Nazhul Naxxremis", "Ravioli Fetabringer", "Eibh\u00ebar", "Lord Erin The Wise", "Morv\u00e4rth", "Smol Daddy Tika", "Dark Sidiuz", "Sofya De Nova", "Cerys Fireblade", "Chronomancer Trixy", "Smol Gluvs", "Legacy Of Mathus", "Rozaalyna", "Xanvias Tseli", "Be\u00eb"];
const professions = ["Reaper", "Firebrand", "Tempest", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Chronomancer", "Weaver", "Scourge", "Berserker", "Scourge", "Weaver", "Berserker", "Chronomancer", "Scourge", "Berserker", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.1004, 12.1964, 7.3953, 15.0256, 0.0, 4.6344, 5.3905, 63.4079, 30.6116, 18.9764, 41.7812, 64.6418, 64.8182, 39.0438, 11.3636, 42.0792, 0.0, 60.2703, 12.2721, 3.3333, 0.0, 0.1856, 23.8333, 18.8655, 21.5238, 25.0972, 10.4384, 5.9226], [6.0112, 0.0, 0.0, 27.6068, 0.0, 0.0, 29.1828, 2.0381, 25.4868, 8.0579, 2.9843, 26.525, 33.6119, 21.0, 9.5766, 3.101, 4.9307, 0.0, 51.5575, 3.5946, 29.4592, 0.0, 0.0, 18.0838, 0.0, 39.6555, 0.0, 72.141, 43.875, 14.6502, 29.8129, 5.5124, 18.815, 12.9868, 3.8114], [15.1264, 3.7054, 0.0, 25.4957, 0.0, 4.7097, 1.1714, 9.1711, 0.0, 0.0, 5.5375, 80.4179, 73.0413, 13.927, 0.2828, 0.8416, 0.0, 5.115, 0.2973, 14.4762, 0.0, 0.0, 20.479, 0.0, 46.2185, 0.0, 23.8462, 20.6389, 61.468, 7.5677, 0.0, 24.2081, 0.9539, 52.96], [24.368, 1.9286, 0.0, 28.2821, 0.0, 33.5526, 19.7603, 3.5354, 3.7687, 5.3582, 37.4711, 9.2774, 4.0202, 9.5248, 34.5752, 52.8649, 72.9388, 0.0, 17.6766, 4.8125, 87.4958, 0.0, 73.6538], [5.3569, 1.0089, 29.907, 46.0342, 0.0, 44.303, 3.8172, 1.1333, 9.2895, 16.4298, 0.0, 23.3313, 47.7463, 31.4628, 58.6642, 36.303, 4.5149, 0.0, 42.7168, 0.4189, 22.585, 0.0, 0.0, 10.2874, 0.0, 27.8151, 0.0, 13.9359, 8.5, 16.8867, 22.5871, 20.4959, 14.5838, 22.3487, 18.2686], [89.437, 34.0, 131.4744, 32.6944, 20.936, 68.0323, 52.6364, 88.7341, 41.8487, 123.7543], [0.8141, 3.6964, 0.0, 29.2906, 0.0, 0.0606, 32.9462, 0.0952, 10.5921, 1.3471, 4.7874, 33.0812, 97.8358, 94.0248, 96.8248, 22.9899, 33.703, 99.6372, 54.3649, 24.5374, 7.5417, 0.0, 21.2156, 2.625, 16.5714, 25.4286, 60.2308, 1.9444, 33.3251, 18.4516, 1.9587, 16.9769, 8.5461, 10.9314], [15.9851, 4.0804, 0.0, 6.7607, 0.0, 9.1212, 26.0968, 0.0, 51.1842, 1.6529, 1.8819, 17.2688, 82.3881, 64.0579, 43.3869, 24.202, 43.8713, 0.0, 89.8142, 4.1892, 49.4184, 0.0, 0.0, 20.3713, 2.4167, 54.4622, 4.9524, 20.859, 38.4583, 28.5369, 28.671, 2.4298, 52.2254, 4.9342, 21.8], [61.1636, 10.7411, 5.3256, 13.3932, 0.0, 71.7634, 0.0, 0.0, 21.0331, 1.6929, 47.7938, 68.8358, 75.6364, 78.0949, 37.8283, 72.4653, 57.0833, 43.6814, 76.2838, 11.4796, 0.0, 0.0, 70.7784, 45.4792, 78.1176, 0.0, 35.9872, 20.9444, 31.9261, 0.0, 4.3471, 10.896], [67.8104, 53.2589, 13.5814, 27.735, 0.0, 0.1212, 112.129, 12.0571, 234.9605, 19.314, 18.4331, 85.6688, 58.4328, 98.8926, 130.3066, 22.9394, 135.9208, 11.9444, 122.4513], [13.2491, 1.5089, 1.7442, 6.6239, 4.9184, 0.0, 66.3763, 0.0, 74.75, 14.4463, 0.1339, 101.0625, 188.3433, 0.0, 111.6715, 19.202, 115.1089, 51.3009, 0.0, 104.568, 0.0, 0.0, 45.2754, 14.5833, 24.7983, 0.0, 204.1795, 1.9722, 49.7192, 90.4774, 59.3388, 6.3353, 9.3618, 32.36], [30.9333, 159.8553, 50.0, 3.3307, 20.4062, 88.0746, 84.1736, 63.2044, 18.8384, 38.1386, 0.0, 103.6814, 88.9324, 102.4864, 0.0, 14.0476, 92.1557, 16.625, 108.0336, 13.381, 24.8077, 23.5694, 43.5271, 58.6065, 5.0744, 69.0289, 38.8421, 90.2343], [0.0, 0.0, 96.5641, 0.0, 1.5152, 77.9785, 2.6762, 70.0132, 17.9504, 11.9606, 26.3687, 69.6418, 176.5124, 85.1752, 39.8283, 51.9703, 0.0, 116.9292, 62.6351, 71.2551, 0.0, 0.0, 85.4731, 20.7292, 79.8571, 0.0, 49.8846, 34.1806, 49.6059, 63.9161, 18.0165, 46.8671, 33.6974, 45.24], [33.684, 29.3661, 1.1395, 60.8803, 0.0, 23.0303, 0.0, 0.0, 254.7895, 13.9835, 1.0157, 93.1125, 134.6119, 46.8264, 155.4964, 9.2424, 15.6634, 34.0088, 28.3784, 151.2449, 0.0, 168.0299, 21.8333, 3.9832, 0.0, 91.3718, 30.1111, 19.6502, 48.6194, 22.562, 7.1561, 100.3421, 44.4629], [24.5353, 41.4107, 0.0, 97.4872, 46.9796, 0.0606, 238.043, 0.3238, 209.8158, 52.438, 21.2205, 77.4688, 66.2149, 111.3796, 26.2727, 47.0297, 160.531, 95.6892, 108.8231, 57.2635, 40.6875, 88.7815, 0.0, 103.1026, 26.9306, 156.0246, 33.1419, 87.5289, 80.6647, 19.3158, 49.2286], [66.2119, 17.8482, 0.186, 3.4017, 0.0, 7.4848, 149.7742, 0.0, 138.7105, 38.1653, 2.7638, 138.075, 109.3284, 113.0909, 112.5036, 7.8485, 138.0495, 0.1667, 189.9292, 99.0946, 74.3503, 0.0, 0.0, 112.3413, 11.4375, 215.3109, 11.0952, 184.0641, 62.9722, 63.5468, 54.9742, 29.5207, 113.0116, 32.3224, 55.2686], [68.8736, 21.1161, 0.0, 40.9744, 0.0408, 0.0, 111.3978, 0.0, 249.6842, 66.0744, 0.0, 122.075, 398.0746, 129.3554, 94.6423, 83.5253, 253.4455, 0.0, 166.0265, 98.9459, 94.8469, 0.0, 86.9641, 0.0, 102.1092, 0.0, 50.9872, 65.0, 56.3251, 113.0323, 16.5868, 1.8671, 15.3224, 59.2571], [124.1338, 3.8393, 0.0, 72.6154, 0.0, 0.9697, 57.9677, 3.1524, 316.1316, 10.405, 0.5118, 104.3312, 391.7463, 209.6777, 158.854, 61.5455, 88.3465, 64.9469, 12.2027, 154.2619, 1.9167, 83.9222, 6.1458, 94.7563, 0.0, 89.5769, 110.2222, 103.9458, 89.8839, 28.7934, 236.948, 2.4671], [41.1636, 10.625, 5.3488, 95.8803, 0.0, 0.0, 19.1828, 0.0, 171.0789, 104.5785, 0.0, 178.6875, 389.3433, 222.7851, 297.8175, 36.7879, 309.5842, 0.0, 263.1858, 77.7162, 300.2245, 0.0, 57.4286, 132.5689, 0.0, 85.2101, 238.6795, 74.1528, 174.5222, 198.6516, 71.4959, 78.4335, 89.375, 80.3314], [61.8253, 45.4732, 6.4884, 231.2222, 8.3265, 0.0, 140.5699, 6.9048, 320.1579, 132.5289, 20.0787, 212.475, 624.2836, 267.3388, 179.7226, 12.2626, 186.8812, 0.0, 385.3805, 107.1216, 292.517, 0.0, 0.0, 212.994, 8.625, 413.5714, 5.8571, 238.5897, 141.5139, 157.6847, 96.0839, 65.2727, 207.1561, 151.9803, 76.8229]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

