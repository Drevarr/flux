created: 20230626013408000
creator: Drevarr
modified: 20230705163538999
modifier: drevarr
tags: ChartData
title: 202306260134_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Warrior Constantine", "Primal Clone", "Sub Train", "Artakama Nahid", "Venomina The Siren", "Ryvalia Fazebringer", "Tegan Parker", "Belvyn Brightblade", "Fribble Bibble", "Blanco Padre Guard", "Elon The Archmagus", "Crusader Siolith", "Gestern Yesteryear", "Zayde Sunsabre", "Sygaldry Verdandi", "Miphest\u00f6", "Drevarr Moonwillow", "Tika Fiery", "Traidoruns Maximus", "Koralia Danai", "Solus Sanctus", "Arcanophage Farra", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Spellbreaker", "Chronomancer", "Firebrand", "Tempest", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 83.3011, 117.7766, 41.5863, 37.1322, 206.2698, 32.718, 94.5712, 0.0, 1.7252], [8.6227, 3.3696, 21.1784, 0.0, 179.8335, 8.5546, 1.6883, 0.0, 0.0, 8.6051, 0.0, 76.6656, 27.8663, 17.1, 10.6704, 67.9536, 39.5026, 0.0, 0.0, 25.7184, 0.0, 11.829, 8.7777, 8.5478, 2.3377, 0.8372, 0.0, 9.7798, 109.0274, 14.3306, 8.6327, 0.0], [34.9906, 94.4103, 131.7316, 67.195, 23.1168, 0.0, 0.0, 0.0, 163.6991, 80.7222, 0.0, 46.4142, 34.1988], [28.3565, 19.44, 37.9994, 14.4353, 332.4316, 0.0, 24.1991, 15.7986, 0.0, 0.0, 10.8724, 13.5907, 8.5305, 0.0, 14.8608, 14.5782, 0.0, 3.3134, 20.2871, 31.6404, 38.0653, 57.6145, 3.5024, 0.0, 15.4178, 16.7601, 0.0, 7.6797, 0.0, 13.2922, 0.0], [47.2527, 14.7907, 17.4447, 14.0448, 74.807, 30.8649, 42.93, 48.4704, 42.1902, 16.8749, 68.3316, 34.1634, 83.7202, 30.8705, 3.2674, 0.9945, 75.3446, 6.7349, 0.7406, 0.0, 0.0, 15.5057, 23.0807, 44.4818, 6.723], [0.0, 0.0, 0.0, 13.284, 413.9374, 0.0, 26.4502, 0.0, 0.0, 21.648, 0.0, 179.3123, 26.0051, 4.545, 0.0, 0.0, 0.0, 0.0, 0.0, 48.7296, 0.0, 24.7333, 44.8399, 3.145, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [51.5961, 0.6343, 33.5724, 27.3196, 64.8173, 50.0456, 103.9725, 44.7984, 30.3732, 75.4576, 21.7116, 62.4536, 17.4614, 67.7228, 68.3267, 6.7454, 72.6566, 31.8375, 0.0, 3.0184, 19.5595, 51.5393, 107.7369, 0.0, 35.315], [113.0803, 0.0, 85.8352, 92.6042, 453.7892, 20.5971, 9.2596, 13.8267, 6.9093, 40.4096, 63.2298, 27.3493, 60.075, 99.5328, 95.2848, 238.933, 0.0], [26.2656, 52.1856, 73.0832, 75.1874, 617.2013, 3.4626, 0.0, 38.0885, 2.4355, 7.3423, 52.2984, 49.3293, 10.9087, 75.8025, 80.784, 36.036, 144.7788, 65.3013, 32.2608, 64.2283, 68.2666, 65.4729, 0.0, 94.8326], [156.0384, 105.1056, 315.6901, 101.785, 854.1089, 199.8865, 20.7312, 103.0968, 60.6597], [22.1011, 107.6112, 114.4148, 0.0, 509.2612, 30.4502, 63.9428, 58.3261, 0.0, 21.2872, 67.8216, 99.975, 18.4569, 83.295, 42.0336, 54.522, 82.9362, 21.1934, 26.8564, 16.7301, 43.3829, 95.958, 13.9797, 93.9605, 62.3078, 6.1226, 63.1925, 13.1516, 0.0, 0.0, 68.6461, 45.5473, 32.8541], [4.0154, 91.6893, 89.9367, 77.0847, 50.7375, 136.9008, 88.335, 70.9512, 91.8248, 70.4774, 109.8446, 0.0, 0.1241, 241.3657, 105.504, 62.5062, 80.8864, 226.2129, 141.4771, 103.8089, 75.2741, 128.8035], [57.0071, 220.5603, 110.5371, 7.4144, 35.728, 98.6973, 25.6949, 7.92, 47.088, 88.452, 105.7556, 63.0369, 62.3709, 36.7164, 86.8391, 129.3327, 11.2424, 103.9718, 420.9009, 53.8545, 8.7122, 248.8406, 102.3472, 9.319, 31.8037, 41.3531], [52.0819, 54.9072, 97.2734, 109.2535, 469.6097, 35.2876, 133.3613, 210.2029, 38.2326, 0.0, 34.2496, 132.1901, 34.0703, 14.535, 87.912, 19.305, 102.3998, 0.0, 15.0849, 62.6397, 31.6066, 7.7804, 43.4694, 6.0968, 4.9997, 62.6175, 48.8635, 0.0, 232.2214, 22.3321, 41.7457, 28.9682, 26.537], [498.6474, 230.7949, 3.7162, 0.0, 14.4038, 76.3092, 16.9875, 208.4832, 9.4068, 182.3638, 17.9782, 65.7175, 8.21, 62.1302, 107.4194, 177.4758, 22.701, 86.2042, 349.4891, 102.6053, 237.2071, 33.9126, 97.6053, 96.5849, 111.5011], [107.4643, 219.3696, 125.2444, 0.0, 874.5354, 16.4472, 0.0, 141.5672, 20.981, 98.5886, 39.732, 133.7776, 146.4661, 40.77, 47.1312, 68.2812, 16.9708, 31.4852, 37.8651, 157.7282, 207.8114, 122.3015, 1.3837, 81.6614, 51.8195, 43.2124, 0.0, 71.4626, 39.9588], [87.9034, 74.1312, 177.4055, 193.0313, 820.4652, 70.3205, 34.116, 86.7254, 33.3362, 42.6105, 24.5476, 136.2557, 75.1201, 45.36, 146.8368, 57.1428, 84.3744, 14.8964, 37.7622, 125.4449, 74.4818, 93.8247, 97.9405, 38.9592, 31.127, 74.6957, 3.1556, 17.9928, 62.8973, 54.7819, 38.9283, 45.4931, 3.0698], [107.5507, 356.0112, 44.9521, 22.6714, 608.5901, 123.7356, 54.9081, 37.8022, 0.0, 0.0, 110.418, 136.9526, 43.2212, 33.0975, 179.1072, 0.0, 639.8072, 20.7722, 27.7889, 20.7627, 8.1216, 116.7475, 49.177, 64.4276, 41.1533, 204.4948, 34.3091, 0.0, 42.8264, 25.9159, 2.4381, 27.6137, 24.6089], [33.0048, 17.6861, 66.1543, 1187.7421, 57.8451, 158.1536, 174.119, 0.0, 0.0, 20.79, 28.1107, 222.0515, 86.22, 227.4912, 45.5598, 327.0467, 6.7252, 75.9573, 53.9955, 74.4142, 67.7646, 132.8897, 105.2029, 37.417, 10.798, 33.8261, 169.0045, 2.633], [110.2464, 205.632, 139.1177, 136.0872, 922.5978, 137.3822, 48.7937, 0.0, 117.3616, 74.3428, 62.1852, 57.2282, 40.5845, 35.19, 0.6912, 43.4538, 306.4325, 181.535, 108.8595, 91.1311, 130.3841, 66.5482, 115.667, 26.8262, 248.5776, 8.0983, 66.0618, 184.2174, 62.8029, 8.425, 12.4975, 114.0382], [71.8502, 216.648, 160.2961, 49.8002, 691.4978, 144.2054, 36.8995, 128.155, 102.7485, 50.8187, 84.3612, 24.9744, 84.7363, 45.27, 35.1648, 127.881, 434.8158, 79.5704, 104.3306, 157.4914, 197.3958, 84.6226, 168.636, 45.024, 204.3835, 19.32, 49.9114, 204.544, 47.8336, 28.9321, 34.4765, 108.2284], [90.7546, 297.9072, 274.1983, 213.4001, 752.5771, 84.4763, 57.8588, 150.8745, 141.9452, 62.0215, 54.7932, 165.528, 39.9124, 79.245, 94.824, 5.967, 223.4004, 31.1618, 106.4934, 125.6103, 88.1532, 128.0416, 70.1879, 108.6189, 126.2822, 88.6107, 0.0, 116.654, 80.7222, 113.1549, 51.0917, 113.7591], [127.5782, 348.408, 303.4829, 48.5014, 1122.257, 153.4983, 106.9415, 159.7523, 34.9345, 101.2766, 95.326, 62.1069, 189.3254, 123.7275, 91.152, 116.7426, 336.0594, 90.7826, 133.8493, 98.3748, 174.073, 247.5918, 191.6209, 203.1848, 155.6083, 114.27, 3.7352, 78.8018, 213.9402, 20.7474, 95.7902, 63.3545, 127.5857], [114.2899, 442.9728, 146.4869, 170.7142, 1487.5313, 129.8205, 124.9806, 175.0259, 89.8859, 18.5992, 62.1544, 123.9427, 152.6701, 66.825, 156.2112, 58.1958, 387.9305, 110.8391, 150.2816, 10.0843, 175.3514, 201.9195, 203.2712, 153.2966, 125.1237, 103.8289, 62.4848, 252.5479, 46.0051, 135.1791, 20.3897, 129.1079]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

