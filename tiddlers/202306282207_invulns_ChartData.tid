created: 20230628220723000
creator: Drevarr
modified: 20230705163539811
modifier: drevarr
tags: ChartData
title: 202306282207_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Conditions M\u00e6 Apply", "I Toxicheart I", "Be\u00eb", "Demon Staph", "Sumatra Satyricon", "Specialist Zeff", "Sygaldry Verdandi", "Xanvias Einzbern", "Koralia Danai", "Arriasa", "Solus Sanctus", "Cpt Z Brannigan", "No Reserv\u00e9", "Elonith Requiem", "Tika Fiery", "Cat Wigglebooty", "Sub Train", "Bella Sassy", "Xyntharos", "Vopiscus Zergherdus", "Drevarr Moonwillow", "Ateriuz", "Blade Stacker", "Dim Og", "Gavann", "Shaca Booey", "Belvyn Brightblade", "Rozaalyna", "Grasszanine", "Gaius Valerus", "Tribal S", "Tootsie Pop Rocks", "Johosh The Mighty", "Fribble Bibble", "Primal Clone", "Smol Gluvs", "Rahani Sunray", "Drumina", "Lucky Leipreach\u00e1n", "Legacy Of Mathus", "Blanco Padre Guard", "Crusader Siolith", "My Birthday Girl", "Ryvalia Fazebringer", "Tegan Parker", "Eibh\u00ebar", "Miphest\u00f6", "Arcanophage Farra", "Zayde Sunsabre", "Black Raspberry Pie"];
const professions = ["Tempest", "Scrapper", "Reaper", "Druid", "Soulbeast", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Druid", "Firebrand", "Scrapper", "Vindicator", "Reaper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Reaper", "Spellbreaker", "Herald", "Druid", "Scrapper", "Berserker", "Scrapper", "Chronomancer", "Reaper", "Chronomancer", "Druid", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Spellbreaker", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 37, 36, 0, 45], [0, 0, 12, 0, 14, 7, 7, 8, 23, 0, 27, 16, 12], [0, 3, 9, 0, 0, 18, 3, 11, 11, 0, 0, 0, 18, 0, 4, 0, 8, 0, 5, 0, 0, 0, 0, 37], [0, 0, 0, 0, 0, 23, 5, 8, 12, 44, 0, 6, 0, 19, 0, 0, 0, 0, 15], [0, 0, 15, 1, 7, 9, 18, 4, 7, 0, 0, 0, 34, 0, 16, 0, 12, 0, 14], [0, 0, 0, 14, 0, 0, 15, 18, 0, 0, 0, 7, 20, 8, 0, 9, 0, 26, 8, 0, 0, 7, 6, 0, 1], [0, 0, 0, 0, 0, 8, 12, 6, 8, 0, 0, 7, 28, 0, 11, 0, 2, 26, 37, 0, 11, 3, 0, 12], [0, 0, 0, 0, 0, 41, 22, 2, 12, 0, 0, 8, 8, 0, 8, 0, 29, 13, 1, 0, 15, 14], [0, 0, 0, 0, 0, 0, 20, 20, 3, 10, 0, 0, 19, 6, 0, 16, 0, 21, 0, 38, 0, 0, 16, 19], [0, 14, 0, 0, 0, 3, 22, 16, 0, 0, 0, 0, 10, 6, 0, 16, 13, 13, 0, 19, 29, 0, 27], [0, 0, 0, 0, 0, 0, 20, 29, 4, 0, 0, 0, 9, 30, 0, 9, 0, 11, 9, 6, 0, 0, 18, 0, 44], [0, 0, 27, 0, 0, 22, 4, 8, 7, 19, 0, 0, 19, 37, 8, 0, 8, 32], [0, 0, 0, 0, 0, 8, 17, 2, 0, 0, 11, 13, 10, 0, 60, 0, 17, 14, 28, 0, 4, 12, 0, 0], [0, 6, 0, 0, 27, 16, 13, 11, 0, 9, 8, 19, 0, 10, 0, 15, 9, 28, 0, 18, 16, 0, 0], [0, 0, 0, 0, 0, 7, 0, 8, 26, 0, 34, 0, 2, 0, 35, 0, 3, 42, 18, 0, 16, 0, 0, 17], [0, 27, 12, 0, 0, 10, 9, 8, 14, 0, 0, 0, 9, 6, 29, 0, 8, 0, 6, 0, 10, 28, 0, 35], [0, 0, 4, 0, 0, 8, 47, 20, 8, 0, 32, 16, 3, 22, 6, 0, 19, 11, 17, 0, 0, 0, 0, 9], [0, 0, 0, 0, 0, 24, 15, 8, 59, 0, 0, 5, 15, 0, 29, 0, 22, 0, 23, 0, 20, 3, 0, 0], [0, 0, 0, 12, 0, 0, 1, 27, 9, 13, 0, 0, 5, 33, 0, 69, 0, 21, 0, 12, 0, 0, 16, 0, 12], [0, 14, 0, 0, 31, 18, 31, 24, 0, 0, 5, 1, 0, 6, 0, 32, 0, 2, 0, 0, 4, 66], [0, 0, 0, 0, 0, 0, 22, 5, 26, 19, 0, 0, 45, 4, 4, 5, 0, 11, 25, 2, 0, 43, 10, 0, 16], [0, 5, 0, 0, 14, 41, 3, 20, 0, 0, 0, 27, 0, 15, 0, 9, 38, 25, 0, 0, 20, 0, 25], [2, 19, 0, 0, 9, 14, 42, 48, 0, 45, 22, 21, 0, 8, 5, 0, 11], [0, 0, 0, 8, 0, 0, 32, 22, 15, 4, 0, 0, 29, 18, 7, 25, 0, 10, 42, 0, 10, 17, 4, 6], [0, 29, 0, 11, 15, 16, 0, 27, 0, 10, 0, 28, 5, 27, 0, 7, 46, 5, 0, 0, 17, 0, 11], [0, 17, 6, 1, 9, 11, 0, 3, 0, 52, 0, 85, 0, 30, 2, 6, 0, 0, 0, 0, 35], [0, 0, 0, 5, 0, 0, 10, 21, 0, 30, 0, 0, 41, 11, 0, 41, 0, 10, 0, 24, 0, 30, 0, 0, 43], [0, 0, 9, 0, 0, 36, 10, 16, 20, 0, 0, 8, 8, 0, 66, 0, 17, 0, 10, 0, 11, 16, 0, 39], [0, 0, 0, 27, 0, 22, 42, 0, 4, 0, 0, 19, 2, 0, 45, 0, 26, 0, 10, 0, 0, 20, 0, 53], [18, 0, 136, 0, 20, 43, 15, 0, 22, 12, 0, 7], [0, 14, 0, 0, 12, 22, 26, 0, 26, 0, 0, 22, 3, 0, 21, 0, 13, 0, 99, 0, 11, 18, 0, 0], [0, 0, 0, 0, 0, 23, 17, 7, 26, 0, 30, 7, 39, 45, 26, 0, 32, 0, 30, 0, 0, 8, 0, 6], [0, 0, 0, 3, 0, 16, 28, 22, 6, 12, 9, 0, 19, 14, 24, 12, 0, 23, 20, 19, 0, 0, 52, 0, 17], [0, 0, 14, 0, 3, 13, 10, 42, 0, 0, 26, 20, 28, 21, 0, 16, 45, 39, 0, 0, 0, 0, 20], [0, 1, 8, 0, 0, 27, 21, 3, 42, 0, 0, 0, 32, 0, 36, 0, 22, 5, 29, 0, 37, 15, 0, 22], [0, 0, 0, 0, 0, 0, 13, 29, 19, 0, 0, 39, 50, 0, 49, 0, 12, 0, 47, 0, 10, 31, 0, 6], [36, 0, 2, 12, 72, 12, 18, 0, 6, 11, 28, 11, 3, 0, 22, 17, 14, 0, 0, 9, 34], [34, 9, 0, 0, 7, 20, 0, 0, 0, 17, 22, 36, 30, 24, 0, 16, 0, 62, 0, 2, 17, 0, 17], [0, 0, 18, 26, 0, 0, 24, 12, 12, 5, 0, 46, 5, 56, 0, 10, 16, 23, 0, 15, 21, 0, 25], [0, 42, 22, 0, 15, 10, 24, 9, 57, 0, 16, 28, 38, 61], [0, 32, 16, 0, 0, 15, 23, 48, 28, 0, 0, 28, 9, 0, 28, 54, 12, 0, 0, 0, 38], [0, 8, 22, 0, 0, 9, 21, 44, 41, 0, 21, 26, 10, 4, 40, 0, 38, 0, 14, 0, 4, 19, 0, 21], [0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 19, 37, 0, 52, 80, 67, 13, 0, 0, 33, 0, 19], [0, 0, 13, 0, 20, 0, 44, 46, 35, 16, 0, 0, 24, 33, 0, 22, 0, 17, 24, 4, 0, 11, 25, 0, 21], [0, 0, 0, 42, 69, 11, 31, 0, 43, 0, 54, 0, 8, 0, 24, 0, 55, 0, 0, 9, 42], [0, 2, 18, 2, 23, 12, 53, 7, 25, 0, 14, 16, 17, 10, 42, 0, 18, 19, 48, 7, 15, 11, 0, 36], [0, 0, 33, 0, 26, 0, 36, 21, 34, 0, 0, 12, 66, 0, 41, 0, 32, 30, 10, 0, 0, 39, 3, 43], [0, 0, 3, 4, 0, 27, 23, 8, 45, 0, 0, 48, 10, 8, 54, 0, 38, 23, 57, 0, 38, 38, 0, 27], [0, 0, 61, 6, 51, 44, 48, 18, 17, 0, 34, 34, 15, 16, 43, 0, 36, 37, 30, 13, 0, 0, 30], [0, 0, 13, 58, 0, 36, 16, 24, 12, 37, 0, 2, 40, 21, 19, 29, 0, 17, 136, 17, 0, 69, 28, 0, 96]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

