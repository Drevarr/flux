created: 20230625215649000
creator: Drevarr
modified: 20230705163536981
modifier: drevarr
tags: ChartData
title: 202306252156_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Aemilius Scorchwill", "High Sorcer Baradun", "Eibh\u00ebar", "Raziel Umbra", "Tegan Parker", "Primal Clone", "Imalou", "Etchery Howls", "Tribal S", "Ryvalia Fazebringer", "Black Raspberry Pie", "Raelyn Sunray", "Elon The Mender", "Demon Staph", "Mmathuss", "Miphest\u00f6", "Drevarr Moonwillow", "Crusader Siolith", "Tika Fiery", "Solus Sanctus", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi"];
const professions = ["Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Druid", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Druid", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[613.0356], [13.7567, 37.2744, 28.8954, 67.1587, 175.7174, 46.1168, 63.8436, 21.9427, 18.432, 36.7882, 18.5945, 13.8401, 0.0, 7.5734, 9.309, 0.0, 9.203, 18.5414, 0.0, 104.805], [15.9318, 70.8032, 41.2396, 286.2202, 33.3367, 168.8765, 38.7965, 25.6512, 24.1884, 18.7503, 34.3686, 3.4496, 20.5119, 13.9327, 0.0, 10.9113, 20.0434, 40.9157, 71.8272, 7.1966, 123.42], [0.0, 15.1052, 85.6336, 20.5518, 353.8502, 57.0037, 140.2728, 0.0, 0.0, 28.0652, 45.2397, 11.7306, 13.897, 8.92, 24.4079, 0.0, 26.7687, 27.6888, 47.7734, 16.4406, 155.55], [0.0, 19.0881, 128.3069, 35.2269, 296.4854, 84.4574, 125.8565, 82.3536, 0.0, 41.6343, 57.6015, 23.8214, 0.0, 0.0, 11.0515, 0.0, 0.0, 0.0, 14.1432, 53.4528, 1.1167, 171.36], [24.5528, 50.4257, 50.0406, 18.7854, 404.2709, 57.8827, 169.563, 26.375, 17.5488, 43.9942, 53.9137, 25.6735, 13.823, 0.0, 5.1862, 20.735, 0.0, 28.665, 42.4694, 15.0336, 25.0435, 147.645], [18.9433, 24.6492, 102.7603, 26.3607, 515.3774, 77.1544, 194.7343, 58.1126, 65.1063, 107.2042, 46.0992, 14.6978], [16.3037, 29.3471, 351.0252, 109.057, 21.4656, 95.9106, 93.3881, 71.9271, 0.0, 18.5029, 30.5201, 20.4882, 46.0404, 62.2301, 62.3059, 15.4273, 223.38], [30.5885, 68.6208, 113.9044, 84.87, 90.1919, 20.4389, 14.6054, 32.681, 0.0, 77.4387, 30.9362, 81.2338, 122.7744, 39.2093, 472.77], [34.2804, 42.9106, 66.4019, 57.8169, 328.7909, 82.4288, 146.9089, 37.7021, 11.4816, 55.7934, 40.9807, 58.2928, 20.673, 9.7035, 6.0711, 31.465, 28.9055, 30.6495, 34.9795, 81.5155, 17.3712, 213.18], [2.5599, 68.4617, 113.8592, 15.5243, 499.9795, 86.8917, 218.9903, 65.5546, 14.208, 40.0751, 58.0689, 39.5136, 0.0, 28.4675, 3.478, 6.9455, 10.5496, 30.5172, 53.9035, 73.6646, 14.3519, 209.61], [123.6858, 36.96, 32.9275, 54.7428, 45.1165, 54.8824, 133.7429, 344.1859, 63.7978, 864.195], [10.6625, 38.8526, 172.7981, 70.9633, 680.2258, 136.7276, 289.4699, 85.8557, 51.3024, 29.203, 60.9776, 50.9355, 0.0, 37.287, 18.2956, 32.9083, 12.6126, 74.8992, 71.9942, 9.0372, 192.525], [9.0376, 1.503, 64.584, 65.7999, 778.6517, 150.2516, 412.3517, 45.3629, 49.92, 26.9275, 76.5076, 86.1788, 0.0, 24.9116, 13.7063, 17.9942, 18.6543, 59.999, 99.4723, 26.5531, 269.28], [64.643, 35.6962, 67.263, 39.2014, 792.8419, 80.8735, 290.3853, 161.5334, 64.0512, 63.6314, 136.758, 139.7896, 0.0, 41.4858, 36.2414, 10.034, 0.0, 22.2925, 109.9982, 116.5939, 13.1732, 97.665], [55.4497, 45.1652, 58.1734, 5.2993, 1027.1318, 136.3895, 352.3982, 84.8707, 0.0, 72.9443, 150.2624, 56.9552, 0.0, 0.3415, 29.059, 8.613, 0.0, 36.4487, 115.1376, 73.4976, 24.9814, 349.605], [26.1555, 206.5874, 245.0365, 82.7509, 747.5539, 194.8132, 489.6962, 118.5235, 81.7152, 116.8542, 123.0978, 89.1629, 33.7322, 47.9347, 50.9355, 9.831, 41.2258, 30.5613, 87.9269, 188.6717, 46.5714, 351.645], [82.0058, 188.3259, 106.9702, 134.8609, 736.3829, 153.3622, 448.0491, 171.2736, 61.1712, 100.7567, 219.4465, 109.3313, 81.7062, 67.7636, 38.1142, 0.0, 94.6348, 16.3611, 86.3333, 73.9987, 42.456, 476.595], [65.2218, 214.2526, 308.0896, 90.8018, 1499.6366, 130.3714, 420.3607, 3.6115, 12.4416, 107.1199, 164.1304, 222.4184, 17.2726, 27.7644, 83.2873, 0.0, 22.047, 37.7276, 74.1422, 72.8294, 64.8938, 821.865], [31.2308, 48.0208, 184.0883, 0.0, 1220.0587, 169.3881, 715.5514, 199.5091, 105.216, 165.9473, 181.6342, 225.8141, 18.48, 79.3555, 89.1937, 0.0, 22.0095, 65.5988, 199.7578, 205.0416, 46.7782, 559.215], [69.6293, 455.7848, 348.8493, 109.2815, 1431.4027, 247.8949, 686.9477, 130.945, 95.7312, 68.5196, 134.6285, 100.7905, 42.1837, 71.2994, 24.1403, 20.8945, 42.0738, 13.5608, 128.2051, 209.8858, 60.9853, 583.695], [144.2893, 186.0714, 111.7542, 96.9504, 1533.1498, 250.5997, 760.8598, 198.4147, 88.9728, 135.3115, 236.5867, 197.4137, 32.9683, 88.3759, 83.6783, 0.0, 58.6971, 148.643, 241.4563, 65.5349, 716.04], [114.8171, 320.2142, 256.0397, 87.4388, 1771.3646, 120.4312, 715.3226, 331.8221, 119.3472, 106.4035, 271.854, 199.2144, 0.0, 92.9966, 40.6661, 56.5515, 53.8902, 135.3365, 63.1411, 117.1936, 721.65]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

