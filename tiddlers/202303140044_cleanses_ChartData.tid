created: 20230314004438000
creator: Drevarr
modified: 20230705163522005
modifier: drevarr
tags: ChartData
title: 202303140044_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Minka Bringer", "Newtype Khan", "Black Raspberry Pie", "Primal Clone", "Cat Wigglebooty", "High Sorcer Baradun", "Eibh\u00ebar", "Fribble Bibble", "Venomina The Siren", "Tegan Parker", "Mac Chiato", "Zadie Miststep", "Etchery Howls", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper", "Spellbreaker", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0176, 0.1481, 0.0679, 0.0, 0.1818, 0.3725, 0.0905, 0.0323, 0.3333, 0.1471, 0.0, 0.3095, 0.2379, 0.1062, 0.0759, 0.2941, 0.16, 0.3723, 0.0, 0.2478, 0.0, 0.1316, 0.2276, 0.3434, 0.1538, 0.1667], [0.0, 0.1128, 0.1094, 0.0, 0.0909, 0.4706, 0.0947, 0.0, 0.3188, 0.0, 0.0, 0.7857, 0.1748, 0.0619, 0.2658, 0.0, 0.2933, 0.2979, 0.0, 0.5664, 0.0, 0.0, 0.3577, 0.2121, 0.0, 0.3167], [0.129, 0.0059, 0.0952, 0.1509, 0.0769, 0.1364, 0.2941, 0.0288, 0.0, 0.2029, 0.1176, 0.0, 0.381, 0.3641, 0.1947, 0.3165, 0.2353, 0.1067, 0.1596, 0.0, 0.4602, 0.0, 0.0132, 0.252, 0.7576, 0.2, 0.5667], [0.0968, 0.1059, 0.2879, 0.3321, 0.2308, 0.4545, 0.549, 0.1523, 0.0323, 0.5942, 0.7353, 0.0, 0.2381, 0.1505, 0.1504, 0.0, 0.0784, 0.1327, 0.0, 0.2763, 0.3659, 0.1212, 0.7231, 0.3833], [0.5806, 0.0235, 0.2197, 0.3094, 0.2273, 0.5294, 0.1193, 0.6522, 0.5882, 0.0, 0.0476, 0.4563, 0.3805, 0.3671, 0.4706, 0.4667, 0.6064, 0.0, 0.6195, 0.027, 0.3553, 0.4756, 0.5859, 0.2, 0.6167], [0.4032, 0.1588, 0.5217, 0.0717, 0.1923, 0.6212, 0.5686, 0.3251, 0.913, 0.4412, 0.0, 0.3571, 0.301, 0.4336, 0.9873, 0.1373, 0.6667, 0.6383, 0.0, 0.3097, 0.0, 0.1184, 0.2195, 0.1414, 0.0, 0.5667], [0.2419, 0.0529, 0.691, 0.1208, 0.4394, 0.1765, 0.2263, 0.9855, 0.6029, 0.0, 0.0922, 0.469, 0.7595, 1.1176, 0.3333, 0.1809, 0.0513, 0.1681, 0.0541, 0.5395, 0.8537, 0.2929, 1.7231, 0.6833], [0.3226, 0.1059, 0.3725, 0.3509, 0.0385, 0.3788, 0.8824, 0.2469, 0.0, 0.6957, 0.8088, 0.0, 0.4048, 0.568, 0.3628, 0.3038, 0.9412, 0.7067, 1.3404, 0.0, 0.5487, 0.0, 0.5658, 0.8293, 0.7677, 1.1692, 0.7], [0.0484, 0.2588, 0.698, 0.4679, 0.3077, 0.9091, 0.451, 0.3457, 0.0, 0.9855, 0.1765, 0.3443, 1.6429, 1.0728, 0.7522, 0.9494, 0.6078, 1.0133, 0.9043, 0.0, 0.1504, 0.0, 0.0, 0.0244, 0.6869, 1.5538, 0.4833], [0.0059, 0.7391, 0.7132, 0.0, 0.5758, 1.0392, 0.1934, 0.0, 1.5507, 0.6324, 0.082, 1.0238, 1.5, 0.1504, 1.519, 0.8039, 1.1867, 1.4468, 0.0513, 0.2655, 0.0541, 0.3553, 1.3374, 1.8081, 2.1231, 1.1], [0.6129, 0.0882, 1.2374, 0.7962, 0.3077, 1.1515, 1.3725, 0.6049, 1.3043, 0.7059, 0.082, 1.1429, 1.7233, 0.9292, 0.2785, 0.4118, 1.0133, 2.3617, 0.0256, 2.1593, 0.0541, 1.4342, 0.9675, 0.4545, 1.5077, 1.2833], [0.4355, 0.0529, 1.1105, 0.6075, 0.3846, 0.9242, 1.8627, 0.4527, 0.0, 1.4348, 1.0147, 2.119, 1.966, 1.2035, 1.6835, 1.2353, 1.76, 2.1915, 0.0513, 1.9381, 0.0, 1.0395, 1.626, 1.5253, 1.6769, 1.4167], [0.8548, 0.2882, 0.96, 0.8642, 0.3462, 1.6061, 1.6471, 0.4033, 0.129, 1.971, 0.3529, 0.0656, 1.6905, 1.8689, 1.1947, 2.0759, 1.0, 0.5467, 2.1915, 0.1538, 2.4159, 0.1351, 1.3553, 2.1707, 2.7071, 1.8462, 1.6], [0.8548, 0.2588, 1.3678, 0.9057, 0.1538, 1.9091, 2.2941, 0.6749, 1.4058, 0.6029, 0.0, 0.4762, 0.8058, 1.3274, 1.9241, 1.2549, 2.12, 2.5319, 0.0513, 1.5487, 0.0, 1.3421, 2.6382, 2.2525, 2.8462], [0.5323, 0.2353, 1.3067, 0.8868, 0.1154, 1.3788, 1.5882, 0.7531, 0.0, 1.4348, 0.8235, 0.0328, 1.5714, 1.0097, 1.0885, 2.2025, 1.1765, 1.92, 3.3191, 0.0, 2.2301, 0.0, 1.0263, 2.1707, 2.9091, 2.8, 1.6167], [0.9355, 0.5647, 1.5899, 0.8868, 0.5769, 1.5909, 1.8824, 0.8848, 0.4839, 2.0145, 1.3676, 0.2787, 1.5, 2.0485, 1.1416, 1.7595, 0.8431, 1.6667, 2.6277, 0.0769, 1.8584, 0.8378, 1.6711, 1.8821, 2.3232, 2.9385, 1.3667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

