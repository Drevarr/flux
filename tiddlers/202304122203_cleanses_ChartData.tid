created: 20230412220340000
creator: Drevarr
modified: 20230705163525321
modifier: drevarr
tags: ChartData
title: 202304122203_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Skye Nightroad", "Tootsie Pop Rocks", "Primal Clone", "Black Raspberry Pie", "Tribal Z", "Eibh\u00ebar", "Venomina The Siren", "Fribble Bibble", "Arriasa", "Demon Staph", "Tegan Parker", "Mac Chiato", "Zadie Miststep", "Johoshua", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Scrapper", "Druid", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0095, 0.0041, 0.0, 0.0247, 0.0, 0.1259, 0.24, 0.2794, 0.0, 0.1944, 0.0734, 0.0152, 0.1188, 0.6905, 0.2593, 0.3651, 0.3111], [0.3971, 0.0, 0.0, 0.2571, 0.1369, 0.3827, 0.1687, 0.0, 0.0862, 0.0, 0.4537, 0.1835, 0.0, 0.1089, 0.0, 0.0741, 0.0, 0.1743], [0.113, 0.0, 0.0, 0.3619, 0.0705, 0.0663, 0.3354, 0.0, 0.2483, 0.0, 0.9338, 0.0, 0.8241, 0.6055, 0.0, 0.3218, 0.0], [0.2116, 0.1212, 0.2069, 0.1667, 0.0456, 0.5459, 0.3333, 0.0, 0.0569, 0.08, 0.75, 0.0, 0.3519, 0.3486, 0.0, 0.1436, 0.7143, 0.0, 0.3968, 0.131], [0.4319, 0.0, 0.0, 0.1524, 0.1369, 0.352, 0.3045, 0.0, 0.1655, 0.4, 0.4779, 0.0, 0.463, 0.3211, 0.0, 0.2178, 0.5952, 0.537, 0.2222, 0.2865], [0.5909, 0.9537, 1.7982, 0.5758, 0.505, 1.9048, 1.2778, 1.4444, 0.5404], [0.5797, 0.0, 0.0, 0.1476, 0.0996, 0.8316, 0.3169, 0.1277, 0.2569, 0.3733, 0.7941, 0.0, 0.5741, 0.5138, 0.0455, 0.2079, 1.3571, 0.8704, 0.746, 0.255], [0.5043, 0.2424, 0.0, 0.6286, 0.1411, 1.102, 0.2551, 0.0, 0.6017, 1.5867, 1.3235, 0.1818, 1.2685, 1.3119, 0.0152, 0.6188, 0.619, 0.8519, 0.4762, 0.5532], [0.7652, 0.1212, 0.1379, 0.7952, 0.0996, 0.5918, 0.5864, 0.5793, 0.6667, 1.2132, 0.0909, 0.7778, 0.844, 0.0, 0.2426, 0.0, 0.8704, 0.4286, 0.745], [0.9478, 0.1515, 0.2414, 0.9048, 0.3734, 0.602, 0.8827, 0.1702, 0.4552, 1.2933, 0.7206, 0.3182, 1.4537, 0.8257, 0.4091, 0.3168, 0.4524, 0.463, 1.0635, 1.3626], [0.9391, 0.697, 0.0, 0.4857, 0.2158, 1.0357, 0.9012, 0.0, 0.8345, 1.2667, 1.9632, 0.5909, 0.3704, 1.3211, 0.0, 0.4158, 1.5, 1.4815, 1.5714, 1.262], [0.8145, 0.5758, 0.0172, 1.019, 0.3651, 1.3367, 1.0021, 0.8759, 2.1467, 1.4632, 0.2273, 1.2778, 1.7523, 0.1364, 0.297, 0.1905, 1.0185, 1.0794, 1.0807], [0.8058, 0.6667, 0.0, 0.9381, 0.2365, 1.8265, 0.9218, 0.0213, 0.8362, 1.5735, 0.0909, 2.3333, 1.5963, 0.0606, 0.5891, 0.0, 0.6481, 1.0635, 1.2035], [1.1971, 0.9697, 0.2069, 1.2714, 0.4813, 0.6378, 1.2901, 0.3191, 1.0638, 2.1067, 2.2721, 1.3704, 1.9633, 0.2576, 0.6634, 1.9524, 1.3148, 1.0159, 1.6947], [1.3942, 0.7273, 0.2759, 1.3571, 0.2324, 1.6122, 1.1584, 0.0426, 1.1328, 1.2933, 2.2059, 0.9091, 2.1944, 1.8349, 0.1212, 0.5693, 1.0238, 1.463, 1.2381, 1.7263], [1.2232, 1.1212, 0.3793, 1.3524, 0.1618, 1.7857, 1.0638, 0.0, 1.1724, 2.0267, 2.0294, 1.9545, 2.3796, 2.4862, 0.1818, 0.7079, 2.0952, 1.1667, 1.2381, 1.7532]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

