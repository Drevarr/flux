created: 20230201220146000
creator: Drevarr
modified: 20230705163518538
modifier: drevarr
tags: ChartData
title: 202302012201_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Fungus", "Konztantin\u00eb", "Whose Guardian", "Arkitrix", "Raziel Umbra", "\u00c2 R K", "Cat Wigglebooty", "Black Raspberry Pie", "Drevarr In A Teacup", "Koralia Danai", "Tegan Parker", "Zaylen Harker", "Sygaldry Verdandi", "Johosh The Great", "Ravioli Fetabringer", "Veron Blackburn", "\u00c9\u00efbhear", "Bella Lunabringer", "Mac Aaroni", "Smol Daddy Tika", "Etchery Howls", "Newtype Khan"];
const professions = ["Scourge", "Scourge", "Herald", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Herald", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Druid", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7277, 4.4967, 3.2712, 7.3498, 1.223, 0.0, 6.5083, 0.0, 0.0, 0.0, 0.0, 4.1317, 2.4255, 0.0, 2.113, 0.0, 2.8594, 2.3307, 2.6082, 11.3275], [0.0, 8.6024, 3.3408, 3.6326, 2.7518, 3.4425, 0.0, 6.7229, 0.0, 0.0, 3.8465, 2.3096, 2.6127, 2.3814, 2.156, 2.5296, 3.2105, 3.0636, 2.1968, 1.1399, 6.0606], [3.4555, 11.2752, 9.3773, 3.2614, 0.0, 14.2325, 5.3568, 5.5037, 4.0505, 4.9613, 7.7773, 4.0572], [10.9919, 12.2128, 9.702, 0.0, 4.9402, 4.1846, 14.3479, 5.6527, 11.534], [8.8282, 13.8611, 4.7203, 3.2587, 5.096, 15.0123, 10.2684, 0.5292, 0.0, 3.3331, 0.0, 5.8208, 1.018, 2.0479, 4.5347], [1.0045, 8.798, 4.0368, 7.1808, 4.0258, 0.0, 16.5211, 0.0, 0.0, 4.0213, 0.1711, 0.0, 3.2193, 0.0, 3.601, 0.0, 5.0549, 1.0984, 2.7628, 4.3613, 0.0, 16.7388], [5.6654, 22.4836, 11.3448, 18.2899, 0.7644, 1.6662, 0.0964, 19.9541, 0.0, 3.0321, 4.9829, 9.7088, 4.7393, 0.3528, 0.2587, 0.0, 0.0, 3.2678, 0.0], [4.4198, 25.6118, 12.876, 10.8557, 7.0325, 4.668, 1.9845, 5.0064, 2.1427, 2.0894, 3.2637, 8.8106, 5.7114, 0.882, 1.617, 2.9462, 0.2744, 5.4124, 4.6615, 2.0479, 0.6195, 0.0, 3.391], [4.7011, 28.1534, 8.4216, 5.1955, 7.7969, 0.0, 16.5211, 14.4187, 0.0, 4.1087, 4.4481, 2.4912, 2.9106, 0.0, 0.7738, 0.6448, 5.0039, 0.0, 0.0, 0.0, 0.0, 12.6262], [1.4063, 23.2657, 8.4216, 6.167, 4.2806, 1.0603, 0.8505, 14.6616, 2.4106, 5.4018, 3.1763, 3.6355, 5.0431, 4.5864, 3.9886, 2.6189, 1.1936, 13.4288, 2.8397, 1.9706, 2.9736, 1.8548, 13.9971], [7.594, 44.3808, 4.3152, 5.5757, 6.1152, 3.7906, 11.2493, 6.1916, 2.3895, 5.3035, 5.5292, 1.9845, 0.0, 0.5357, 3.773, 0.0, 4.9562, 5.2937, 0.8673, 5.5645, 4.9784], [67.4509, 17.6088, 0.0, 3.822, 0.0, 0.0, 11.3717, 3.6605, 13.9376, 6.0152, 0.0, 0.7546, 0.0298, 0.0, 2.8083, 0.0, 0.0, 1.4868, 2.1107, 6.0606], [10.8084, 45.5538, 13.1544, 0.0422, 6.8796, 4.2136, 0.9185, 14.8046, 9.7315, 5.784, 0.0, 9.666, 5.8937, 2.6019, 0.2156, 0.3869, 0.5488, 6.6889, 0.2679, 1.1978, 0.0], [11.8933, 42.2302, 2.9928, 15.4598, 13.963, 3.2497, 10.2274, 0.0, 5.4272, 7.7512, 9.2811, 5.3469, 2.4696, 5.2175, 1.7558, 0.0, 1.4297, 1.8753, 1.1206, 0.5204, 5.2447, 18.759], [10.2057, 44.7718, 21.0888, 7.2653, 12.1794, 8.8403, 0.0, 12.8736, 1.116, 8.969, 8.2466, 7.9552, 8.5672, 2.8665, 0.0, 0.7142, 0.0, 7.0463, 1.6342, 7.187, 4.6091, 6.1402, 12.1212], [14.7461, 62.3677, 20.7408, 7.8989, 11.2622, 1.4458, 0.3402, 24.8174, 6.7406, 6.5993, 0.6411, 12.2322, 6.6228, 9.1728, 5.9074, 3.2438, 0.0, 9.395, 5.5455, 0.2512, 2.032, 6.46, 14.6464], [12.4156, 67.842, 18.7224, 10.2643, 3.7201, 17.3794, 17.9006, 14.4217, 3.322, 14.9267, 4.1924, 16.1847, 8.1712, 12.023, 1.7973, 11.3864, 2.8129, 1.9127], [3.6966, 51.8102, 11.5536, 23.3165, 13.3006, 12.3379, 2.5288, 29.8238, 0.0, 6.3955, 3.9339, 9.1528, 12.0305, 12.0393, 3.8161, 9.0173, 3.8416, 16.3903, 7.3405, 4.405, 4.1135, 7.0356, 30.6638], [2.2099, 92.6717, 24.9864, 14.953, 9.3766, 8.7302, 1.2871, 28.3219, 5.7586, 5.4782, 6.7313, 8.2974, 5.0431, 6.615, 2.9753, 4.8211, 2.84, 16.9519, 0.0268, 5.8733, 2.9736, 6.1402, 21.645], [3.2948, 109.2901, 27.7008, 10.3066, 20.1802, 4.971, 0.9582, 26.963, 5.6246, 6.6758, 3.4385, 34.3015, 2.795, 2.205, 1.1211, 2.1427, 2.4559, 5.1571, 2.2504, 3.7288, 0.8673, 3.0061, 27.9221], [32.5899, 34.5391, 17.5584, 11.5934, 66.4291, 11.734, 14.1036, 19.4027, 23.3774, 89.8989], [15.4693, 36.1997, 41.2266, 18.259, 0.8051, 0.0, 14.4187, 5.9878, 26.0803, 16.6375, 26.6736, 19.2717, 11.8149, 9.3149, 10.2488, 26.7554, 13.4486, 13.4081, 1.1151, 12.6961, 20.707], [3.4957, 101.0787, 36.7488, 34.4256, 29.251, 4.8195, 47.6323, 6.7853, 14.5491, 12.0057, 14.6273, 22.6027, 15.7437, 2.2422, 8.5411, 4.5276, 28.2872, 6.1081, 4.6948, 2.0567, 6.7798, 40.9812]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

