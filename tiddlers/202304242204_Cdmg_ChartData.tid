created: 20230424220408000
creator: Drevarr
modified: 20230705163526502
modifier: drevarr
tags: ChartData
title: 202304242204_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Johosh The Great", "Primal Clone", "Mistwalker Caelon", "Drevarr Moonwillow", "Fribble Bibble", "Sumatra Satyricon", "Cyclotechnist Farra", "Sub Train", "Arka\u00f1tor", "Tootsie Pop Rocks", "Eibh\u00ebar", "Kiloak", "Gavann", "Rudjulin", "Cedryn X", "Mac Aaroni", "Mike The Archmagus", "Sp\u00edcy Cheese", "High Sorcer Baradun", "Zefirokai", "Sygaldry Verdandi", "Leana Deeb", "Seren Nightroad", "Lord Erin The Wise", "Etch\u00e9ry", "Panther B Me", "Xanvias Tsoli", "Rina Of Theros", "Smol Gluvs"];
const professions = ["Spellbreaker", "Firebrand", "Chronomancer", "Vindicator", "Scrapper", "Scrapper", "Soulbeast", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Tempest", "Weaver", "Berserker", "Tempest", "Tempest", "Firebrand", "Weaver", "Scourge", "Weaver", "Berserker", "Scourge", "Holosmith", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.1304, 7.68, 0.0, 58.3814, 14.1429, 0.0, 0.0, 0.0, 0.0, 4.32, 0.6222, 6.5904, 53.104], [1.7164, 6.04, 10.7424, 56.0412, 33.0893, 0.0, 11.431, 5.9219, 17.8451, 23.2933, 2.8778, 71.3253, 4.448], [1.2153, 0.0, 33.4091, 58.2268, 1.4107, 0.069, 60.7586, 37.5781, 16.6338, 40.7467, 2.6333, 17.2892, 5.696], [16.9193, 0.0, 4.4242, 16.0103, 28.3929, 0.0, 76.7586, 10.2969, 0.0, 9.0267, 18.1889, 5.241, 24.736], [1.7101, 2.26, 31.2121, 33.2474, 11.5179, 55.3103, 16.0862, 74.4219, 40.8169, 14.6667, 12.6333, 20.9639, 13.288], [2.5673, 2.12, 21.9242, 50.6907, 52.1071, 0.0, 9.3448, 5.8281, 84.3099, 36.6533, 8.3111, 17.4337, 13.696], [7.1118, 0.0, 15.3788, 46.299, 10.6897, 31.6406, 38.1972, 35.8133, 36.7, 43.8313, 8.104], [5.1429, 0.0, 16.697, 50.1856, 29.375, 39.1034, 26.2656, 53.3099, 30.8267, 16.0556, 36.6506, 36.896], [6.0, 0.62, 82.3182, 61.0309, 137.1786, 12.069, 39.1552, 30.4688, 20.9577, 11.4267], [9.8778, 2.68, 38.2424, 38.9072, 36.6071, 26.7586, 12.1724, 41.6719, 21.5211, 25.1067, 28.3889, 59.7229, 25.672], [1.0269, 2.72, 9.0606, 24.5258, 66.125, 5.2414, 8.0517, 31.5625, 51.8451, 66.28, 21.7889, 72.8193, 47.712], [12.3126, 1.22, 30.6212, 27.8866, 49.3929, 56.7586, 16.8966, 13.875, 61.0563, 38.4533, 44.6, 53.9518, 26.16], [1.0497, 0.0, 150.2727, 34.6495, 70.375, 36.9828, 4.3125, 0.5352, 33.2267, 6.8333, 84.9639, 52.392], [9.1366, 0.0, 74.9394, 95.9643, 6.5517, 9.3621, 30.2188, 11.0141, 49.5867, 7.1, 198.2651, 0.0], [64.125, 0.0, 7.7069, 12.125, 382.7465, 13.0267, 5.5, 18.6627, 35.264], [70.6186, 60.0536, 17.3793, 38.2586, 35.75, 6.2394, 12.4667, 290.9, 52.1687, 38.136], [58.9296, 20.48, 4.9697, 2.1443, 78.5714, 6.7931, 170.3276, 5.2031, 52.6901, 41.08, 13.4889, 23.9639, 5.936], [23.499, 1.0, 50.1364, 99.8351, 48.5714, 18.7586, 104.5, 48.625, 63.9296, 38.72, 30.4778, 59.4819, 83.512], [19.8075, 0.0, 40.5909, 51.2887, 138.2143, 0.0, 20.6897, 212.125, 157.8732, 62.88, 145.5444, 4.816], [0.412, 26.04, 34.697, 101.9691, 183.6964, 0.8621, 3.8793, 162.4531, 84.5211, 63.6133, 152.3333, 27.8554, 65.992], [252.3571, 7.0, 138.0345, 207.5938, 61.9296, 64.8933, 75.9333, 148.0241, 55.752], [9.0766, 0.0, 132.0303, 124.134, 182.0536, 0.0, 6.5862, 114.2031, 0.0, 125.04, 64.1667, 73.6386, 61.008], [7.0932, 0.0, 34.9545, 150.3711, 101.6964, 2.7586, 0.0, 143.9062, 148.4085, 66.2267, 28.7778, 158.8313, 49.704], [12.677, 10.38, 199.2121, 186.8144, 326.4464, 75.5172, 20.9655, 338.7656], [50.4865, 15.88, 62.8485, 182.5979, 124.7857, 2.9655, 31.5517, 157.6875, 23.6197, 93.4667, 77.4667, 55.7952], [61.8716, 0.0, 91.9091, 77.4536, 79.8929, 127.3793, 44.5517, 200.4085, 156.1467, 69.7, 110.6867, 41.392], [40.6108, 12.12, 185.5758, 195.0412, 310.4464, 58.3793, 131.6207, 145.4219, 143.3944, 68.52, 182.1778, 125.7711, 129.744], [23.2795, 15.62, 219.1818, 335.866, 78.0714, 6.5172, 55.7241, 201.5938, 66.493, 232.8667, 108.3778, 118.8675, 221.408], [54.0538, 4.24, 196.9091, 184.7526, 255.625, 55.3103, 22.0345, 158.3438, 258.9437, 197.1467, 183.5444, 115.3976, 146.92], [15.2484, 11.0, 179.0758, 309.2371, 385.625, 46.6207, 38.5517, 188.375, 508.6197, 247.1467, 256.7333, 172.1928, 143.104]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

