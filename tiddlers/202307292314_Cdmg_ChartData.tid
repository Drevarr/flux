created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Marceluuk", "Mintolla Root", "Mort\u00e4rion", "Hyde En Sikh", "Gabe Malhorn", "Smol Gluvs", "Tootsie Pop Rocks", "Irish Necroman", "Irish Necroman", "Bruno Dionizi", "Kosa\u00efr", "Daphne Agla\u00e9", "Tegan Parker", "Permanent Dawn", "Gestern Yesteryear", "Kisumaiasu", "Vini Boy", "Smol Gluvs", "Ex Warcraft", "Bella Sassy", "Drevarr Moonwillow", "Kosa\u00efr", "Sub Train", "Aronorf Xideliesi", "Mmathuss", "Blancoo Padre", "M\u00f9st\u00e1ng", "Mistwalker Cael", "K\u00e2 \u00d4tik R\u00e6j", "Civil Rules", "Sygaldry Verdandi", "Lord Erin The Wise", "Be\u00eb", "Minnie Darley", "Vera Khin", "Alarics Bane", "Be\u00eb", "Keypek The Drunk", "N\u00eec\u00f4le", "K H I T H", "Jimbo The Pleb", "Master Marcovius", "Xanvias Einzbern"];
const professions = ["Reaper", "Harbinger", "Scrapper", "Chronomancer", "Firebrand", "Reaper", "Scrapper", "Reaper", "Scourge", "Holosmith", "Weaver", "Reaper", "Tempest", "Weaver", "Firebrand", "Reaper", "Tempest", "Scourge", "Tempest", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Vindicator", "Berserker", "Berserker", "Firebrand", "Weaver", "Scourge", "Dragonhunter", "Dragonhunter", "Reaper", "Reaper", "Scrapper", "Berserker", "Dragonhunter", "Berserker", "Harbinger", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[83.5493, 8.437], [58.6197, 18.2126, 4.5263], [0.0, 7.1, 0.0, 0.2086, 40.5493, 23.4094], [9.8, 0.9833, 0.0, 1.0695, 0.0, 4.4567, 1.0658, 2.9686, 2.6429, 5.9821, 2.8491, 1.5082, 3.3913, 27.0106, 5.75, 3.037], [0.0, 15.36, 2.6857, 0.0, 8.9245, 0.0, 3.805, 2.7447, 0.0, 0.0], [0.0, 11.2371, 5.2214, 1.625, 1.9811, 9.8852, 3.5789, 15.6064, 0.0, 2.0988], [0.08, 1.2667, 1.7326, 2.7183, 7.126, 0.0, 5.2829, 2.0429, 0.0, 0.0, 11.082, 2.3503, 26.8723, 7.0114, 0.0], [0.0, 3.8857, 10.5, 0.0, 9.3962, 0.0, 7.487, 6.266, 1.7614, 0.0], [0.0, 1.2593, 4.8503, 35.0423, 29.5669], [2.3239, 2.0394, 0.0, 12.3114, 18.217, 0.0, 6.0547, 0.0, 0.0, 0.0], [63.4225, 29.6496, 0.0], [0.0, 6.2829, 13.4643, 1.5179, 5.7075, 0.0, 8.5516, 9.7979, 0.0], [0.0, 14.2958, 7.5472, 0.9543, 5.1643, 2.0357, 15.4434, 0.0, 8.3329, 2.1702, 0.0], [0.0, 0.0, 0.0, 0.0, 1.6479, 0.0, 0.0, 18.2171, 0.3, 0.0, 10.3208, 0.0, 6.2547], [0.0, 0.0, 0.0, 7.0141, 25.8465, 0.0, 8.1286, 2.3357, 0.0, 5.0283, 1.082, 1.3155, 9.3085, 0.0, 0.0], [4.2165, 1.5395, 6.1429, 0.0, 5.75, 8.1311, 10.9093, 9.8723, 0.0, 0.0], [0.0, 0.0, 0.9528, 0.0, 9.5, 17.8643, 0.4286, 27.2642, 0.0, 6.6621, 1.766, 0.0, 0.0], [18.16, 0.0, 0.0, 0.2888, 105.1831, 26.4567], [88.4225, 34.2638], [11.8, 0.0, 0.0, 2.6845, 26.0, 21.315, 0.0, 2.7914, 0.7643, 9.1964, 7.9811, 8.9836, 3.959, 4.5957, 13.4773, 0.0], [16.48, 0.0, 0.0, 1.6043, 15.4789, 4.7402, 0.0, 8.7943, 0.4429, 0.0, 5.8208, 1.623, 9.1901, 22.4043, 12.2386, 0.0], [5.8486, 3.2786, 13.3214, 4.6509, 0.0, 12.7863, 32.9787, 14.7045, 2.2099], [0.0, 0.0, 0.0, 0.0, 19.4507, 4.2874, 0.0, 18.2029, 3.9214, 8.9464, 5.8679, 65.459, 6.9205, 10.3617, 0.0, 0.0], [0.0, 8.0667, 0.0, 0.0, 8.7746, 6.7087, 0.0, 5.1257, 21.6857, 0.0, 5.3491, 2.7541, 6.354, 93.2766, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 11.3944, 15.0748, 0.0, 11.8857, 8.45, 5.3036, 16.5755, 0.8197, 9.3329, 34.9149, 0.0, 6.0123], [57.84, 0.0, 7.6667, 4.7968, 2.9577, 11.2677, 0.0, 3.4429, 9.0786, 12.5, 14.3019, 5.1639, 12.4236, 26.4468, 4.25, 0.1235], [11.7736, 10.6557, 17.6335, 116.6809, 0.0, 20.0123], [2.48, 0.0, 0.0, 0.4011, 23.0141, 16.3937, 0.25, 1.3829, 6.65, 33.6786, 8.0755, 19.5082, 15.6683, 36.2021, 2.25, 14.679], [0.0, 0.0, 0.0, 1.6096, 198.169, 0.0, 0.0, 0.0, 35.4143, 0.0, 30.9717, 3.1475, 8.0224, 1.8511, 5.6705, 0.0], [73.0943, 25.7571, 7.5714, 1.5472, 0.0, 0.6758, 0.0, 0.0, 0.4198], [0.0, 0.0, 0.0, 0.0, 0.1549, 14.4685, 0.0, 0.0, 19.4786, 64.2321, 41.4811, 4.9344, 13.9453, 70.8085, 0.0227], [0.0, 16.2756, 1.3553, 49.72, 11.6, 4.625, 110.1698], [4.2, 0.0, 0.0, 189.8873, 91.748, 0.0, 6.284], [0.0, 10.9167, 0.0, 0.2995, 17.2817, 7.3701, 8.6053, 12.2086, 11.7, 1.7679, 49.0283, 9.2295, 25.3851, 17.9894, 0.0, 0.0], [24.6486, 32.8286, 1.625, 25.1981, 16.9508, 21.082, 36.0745, 12.9091, 0.0], [0.0, 17.0167, 3.8889, 7.0963, 10.2535, 25.9843, 0.0, 15.8514, 10.3929, 21.4107, 27.1038, 30.7049, 12.3379, 129.1064, 7.875, 0.0], [0.0, 0.0, 25.9629, 7.9857, 16.0357, 21.0755, 7.459, 30.7441, 91.0745], [5.56, 0.0, 1.0, 2.1337, 15.9718, 6.3465, 5.1974, 16.3743, 19.7929, 10.6607, 39.3679, 8.9016, 27.4311, 57.9681, 15.2614, 27.0247], [71.52, 0.0, 0.0, 3.492, 372.1408, 91.8504], [0.0, 34.4257, 23.8143, 25.7143, 27.0849, 49.5574, 48.2224, 128.4043, 11.4545, 0.5309], [0.0, 0.8148, 1.2727, 113.9014, 31.1378, 0.3421, 53.2257, 40.8857, 91.7143, 53.3491, 77.9016, 37.313, 143.5638, 0.5909, 40.1975], [0.0, 21.5134, 14.1549, 61.9606, 0.0, 114.3943, 6.5714, 34.5893, 16.1415, 26.0, 62.9379, 217.9787, 1.375, 23.6173], [0.0, 0.0, 0.0, 8.4278, 233.493, 80.5118, 0.0, 36.9057, 7.6071, 33.6607, 53.5943, 13.3279, 92.7168, 173.3723, 16.9091, 14.3333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

