created: 20230422000344000
creator: Drevarr
modified: 20230705163526157
modifier: drevarr
tags: ChartData
title: 202304220003_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Panther B Me", "Air One Com", "Sumatra Satyricon", "Morv\u00e4rth", "Rina Of Theros", "Jupi Jupi Jupi", "Estryl", "Bella Sassy", "Laddy Lux", "Drevarr Moonwillow", "Oo Dads Mad", "Zadie Miststep", "Demon Sekhmet", "Skye Nightroad", "Kosair", "Konztantin\u00eb", "Be\u00eb", "Tegan Parker", "Burnockholmes", "Smol Daddy Tika", "Newtype Khan", "Konztantin\u00eb", "Rahani Sunray", "Hauzzy", "Eibh\u00ebar", "Zaylen Harker", "Koralia Danai", "Aronorf Xideliesi", "Mac Saharlot", "Ark Darkness", "Lucas Ryn", "Smol Gluvs", "Soxx", "Johosh The Great", "Klee Flamepumpkin", "Stoic Rapidfire", "Xanvias Einzbern", "Venomina The Siren", "Blancooo Padreee", "Morton Saltbringer", "Lord Erin The Wise", "Domina Flagbringer", "Solo Bloodborn", "Mistwalker Caelon", "Elonith Primal", "Ryvalia Fazebringer", "\u00c1rkantor", "Kmpek", "Xyntharos"];
const professions = ["Scourge", "Firebrand", "Soulbeast", "Scourge", "Scourge", "Dragonhunter", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Dragonhunter", "Vindicator", "Scourge", "Tempest", "Scrapper", "Berserker", "Spellbreaker", "Herald", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scourge", "Firebrand", "Firebrand", "Weaver", "Druid", "Berserker", "Tempest", "Spellbreaker", "Chronomancer", "Weaver", "Spellbreaker", "Spellbreaker", "Vindicator", "Tempest", "Chronomancer", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 2, 0, 0, 1, 0, 1, 11, 1, 4, 0, 0, 7, 0, 2, 0, 0, 15, 0, 1, 12, 0, 1], [4, 0, 0, 5, 2, 15, 0, 1, 0, 6, 0, 0, 10, 9, 6, 7, 0, 0, 0, 0, 0, 1, 3, 0, 0], [0, 0, 0, 1, 0, 4, 3, 7, 0, 22, 0, 0, 11, 3, 9, 1, 9, 0, 7], [0, 22, 23, 1, 26, 0, 7], [1, 2, 1, 3, 0, 2, 1, 19, 0, 11, 0, 0, 15, 0, 3, 0, 8, 8, 0, 1, 9, 0, 0], [0, 5, 0, 82, 1, 0, 0, 0, 0, 0], [0, 0, 2, 9, 1, 15, 0, 0, 2, 14, 18, 0, 14, 13, 2, 2, 0, 0, 0], [0, 1, 0, 1, 0, 9, 0, 8, 0, 18, 0, 0, 0, 8, 18, 7, 2, 0, 11, 1, 0, 0, 15, 0, 0], [0, 44, 34, 4, 1, 18, 0], [0, 0, 0, 0, 4, 0, 0, 12, 0, 13, 0, 0, 0, 0, 6, 12, 4, 32, 5, 2, 1, 10, 1, 1], [7, 14, 8, 4, 6, 11, 4, 13, 1, 28, 1, 0, 11], [0, 5, 0, 0, 0, 9, 0, 14, 0, 0, 0, 0, 16, 21, 12, 16, 9, 0, 0, 11, 0, 8], [3, 0, 9, 0, 12, 1, 12, 0, 0, 2, 8, 4, 14, 10, 0, 45, 2], [0, 3, 0, 0, 4, 9, 0, 6, 0, 39, 0, 0, 0, 0, 2, 6, 0, 0, 20, 27, 0, 1, 5, 0, 1], [2, 7, 0, 8, 0, 10, 0, 11, 0, 46, 0, 0, 0, 0, 6, 0, 1, 0, 24, 0, 8], [1, 15, 4, 1, 0, 3, 30, 19, 23, 29], [0, 0, 0, 4, 0, 1, 0, 6, 0, 0, 16, 9, 32, 0, 4, 29, 0, 0, 13, 21], [33, 1, 1, 0, 19, 1, 0, 0, 5, 20, 1, 24, 12, 0, 0, 13, 0, 5], [10, 1, 0, 7, 1, 2, 2, 21, 0, 37, 0, 0, 4, 0, 7, 14, 1, 0, 3, 6, 2, 2, 20, 0], [9, 1, 0, 0, 0, 9, 1, 12, 0, 13, 0, 0, 5, 25, 12, 27, 4, 0, 0, 0, 1, 1, 22, 0, 0], [0, 1, 6, 1, 30, 1, 3, 0, 0, 18, 13, 1, 8, 21, 0, 15, 5, 0, 0, 0, 20], [91, 7, 8, 4, 0, 39], [15, 3, 3, 12, 0, 8, 0, 3, 0, 14, 0, 0, 4, 7, 1, 0, 3, 0, 8, 13, 6, 0, 44, 0, 7], [5, 5, 1, 6, 1, 20, 2, 14, 0, 45, 0, 0, 8, 25, 13, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0], [0, 15, 1, 0, 14, 0, 2, 13, 39, 1, 2, 58, 0, 14], [2, 0, 4, 1, 2, 8, 0, 10, 0, 6, 0, 0, 5, 5, 13, 4, 1, 49, 45, 0, 0, 10, 0, 0], [0, 2, 0, 1, 0, 8, 0, 12, 0, 9, 0, 0, 14, 7, 21, 10, 12, 36, 28, 0, 0, 12, 0, 0], [0, 17, 2, 2, 0, 0, 0, 12, 1, 16, 0, 0, 11, 1, 5, 18, 8, 0, 28, 27, 0, 0, 25, 0, 0], [0, 3, 6, 4, 0, 6, 1, 8, 0, 25, 0, 0, 14, 1, 32, 15, 3, 0, 10, 28, 3, 1, 4, 0, 13], [5, 7, 0, 3, 0, 5, 1, 3, 0, 28, 0, 0, 41, 3, 15, 9, 10, 47, 3, 0, 0, 5], [0, 2, 5, 0, 12, 0, 14, 0, 33, 0, 0, 10, 5, 13, 15, 0, 0, 4, 47, 0, 2, 22, 0, 2], [13, 16, 3, 4, 5, 10, 3, 9, 1, 15, 1, 0, 6, 14, 31, 0, 28, 11, 3, 0, 17, 0, 0], [12, 9, 1, 3, 1, 9, 0, 14, 0, 4, 0, 0, 18, 4, 6, 25, 34, 0, 8, 16, 3, 0, 27, 0, 1], [14, 1, 0, 4, 3, 12, 1, 10, 0, 33, 0, 0, 15, 0, 10, 14, 18, 38, 12, 0, 0, 11, 0, 12], [6, 2, 2, 2, 2, 21, 1, 21, 0, 1, 9, 28, 31, 7, 4, 0, 1, 38, 1, 2, 20, 0, 11], [8, 3, 0, 5, 2, 2, 0, 7, 0, 15, 1, 0, 9, 14, 22, 21, 9, 27, 39, 0, 0, 10, 0, 21], [1, 0, 2, 0, 0, 2, 0, 7, 0, 68, 1, 0, 26, 0, 7, 0, 0, 0, 53, 9, 0, 1, 17, 0, 23], [3, 1, 3, 3, 15, 1, 32, 2, 19, 0, 0, 2, 5, 96, 0, 9, 12, 4, 0, 0, 14, 0, 2], [2, 0, 5, 9, 0, 21, 0, 24, 0, 15, 0, 0, 43, 0, 11, 0, 17, 14, 30, 1, 1, 4, 0, 28], [20, 1, 2, 2, 5, 0, 0, 0, 0, 18, 2, 36, 0, 4, 1, 15, 0, 76, 21, 2, 0, 25, 0, 2], [5, 10, 0, 0, 0, 14, 2, 22, 0, 17, 0, 0, 10, 27, 31, 35, 11, 0, 21, 37, 2], [26, 6, 0, 1, 2, 28, 4, 21, 1, 20, 0, 0, 24, 0, 2, 3, 1, 34, 19, 3, 0, 42, 0, 11], [0, 3, 2, 10, 2, 28, 3, 6, 4, 18, 0, 0, 17, 0, 5, 20, 23, 19, 48, 4, 1, 49, 0, 13], [14, 11, 5, 3, 25, 34, 0, 8, 86, 39, 2, 1, 37, 2, 11], [16, 9, 2, 0, 5, 15, 4, 17, 0, 20, 0, 0, 55, 30, 10, 10, 1, 0, 109, 16, 2, 3, 24, 0, 20], [10, 1, 3, 14, 0, 34, 1, 37, 1, 38, 0, 0, 73, 16, 11, 85, 0, 30, 21, 0, 0, 26, 0, 50], [0, 35, 65, 23, 194, 14, 72, 64, 0, 60], [11, 8, 4, 4, 41, 7, 35, 1, 58, 1, 0, 30, 12, 28, 61, 28, 1, 39, 72, 3, 0, 83, 0, 0], [12, 32, 4, 18, 2, 30, 4, 60, 1, 45, 0, 1, 5, 15, 46, 33, 91, 0, 57, 76, 9, 3, 57, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

