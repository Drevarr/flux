created: 20230520000848000
creator: Drevarr
modified: 20230705163530791
modifier: drevarr
tags: ChartData
title: 202305200008_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Stoic Rapidfire", "Venomina The Siren", "Cat Wigglebooty", "Black Raspberry Pie", "Ryvalia Fazebringer", "Primal Clone", "Newtype Khan", "Air One Com", "Spreadflamesoflight", "Miphest\u00f6", "Blanco Padre Guard", "Zaylen Harker", "Aronorf Xideliesi", "Bella Sassy", "Solus Sanctus", "Drevarr Moonwillow", "Tika Fiery", "Koralia Danai", "Jupi Jupi Jupi"];
const professions = ["Druid", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[138.2346, 225.3005, 78.097, 43.7805, 142.6106, 159.4524, 68.0184, 0.0, 0.0, 93.2976, 90.9317, 96.9427], [55.7136, 335.4939, 46.3957, 94.7892, 0.0, 18.5614, 42.966, 0.0, 80.0219, 54.4286, 123.1058, 193.7232, 0.0, 9.3398, 0.0, 18.6631, 36.5324, 9.729, 0.0, 0.0, 18.5258, 23.3191, 23.203, 20.0505, 0.0, 13.7122, 0.0], [82.5687, 334.341, 2.5276, 125.4396, 26.1261, 53.8595, 14.9952, 37.699, 24.6453, 41.9215, 51.7119, 91.1592, 54.1944, 26.3635, 0.0, 102.5795, 49.1847, 22.3767, 18.9094, 24.5784, 25.0857, 10.8984], [69.5943, 430.416, 10.3244, 87.5239, 24.6191, 59.5852, 26.2812, 47.7162, 57.2827, 41.2289, 76.1288, 57.7368, 68.5536, 21.2189, 0.0, 40.9777, 98.6208, 43.9497, 0.0, 0.0, 27.588, 17.666, 93.3392, 0.0, 94.2043, 22.6607, 33.1421], [74.8413, 420.0399, 22.6409, 123.3962, 12.285, 44.799, 3.0888, 11.985, 11.8043, 60.8248, 73.5293, 102.0888, 72.1666, 38.1763, 24.6045, 64.4419, 50.0226, 41.2425, 33.8216, 0.0, 25.1134, 55.4712, 59.5015, 31.6011, 125.58, 39.3112, 57.2645], [64.0611, 563.3838, 22.8551, 91.1566, 20.4095, 85.0678, 20.064, 51.0702, 58.4197, 62.0063, 98.039, 105.8112, 69.7579, 15.3014, 24.2755, 44.2911, 84.1252, 40.7772, 20.3553, 45.8128, 34.1757, 84.9017, 29.0044, 110.5104, 20.2566, 61.617], [73.2672, 624.8718, 14.1158, 118.969, 11.2694, 63.9267, 21.2916, 34.2108, 32.303, 39.803, 142.4166, 113.652, 57.4368, 31.3094, 41.877, 83.105, 85.5496, 13.1976, 16.528, 0.0, 36.3493, 33.9187, 99.6673, 21.1431, 65.147, 20.7908, 43.263], [128.7423, 1086.8004, 0.0, 190.0325, 15.0041, 77.3916, 0.0, 13.5949, 67.4819, 11.8961, 89.7763, 91.08, 66.6082, 11.2387, 0.0, 33.4719, 84.6279, 15.6933, 0.0, 97.8789, 14.9679, 73.8276, 13.3954, 117.3883, 35.3044, 31.1494], [120.8241, 649.0827, 84.3734, 369.0535, 0.0, 111.683, 0.0, 51.7651, 74.6764, 105.002, 99.6336, 107.0918, 31.177, 36.331, 117.1178, 290.5837, 113.7447, 5.6133, 0.0, 40.9974, 89.3578, 278.5234, 88.4037, 31.7621, 0.0, 16.8857], [47.1753, 1695.9159, 16.1078, 140.0837, 19.2956, 122.9457, 33.2904, 55.2739, 122.0894, 32.1439, 155.0428, 349.272, 79.8557, 17.0016, 26.7195, 58.3561, 94.7665, 0.0, 0.0, 38.0882, 24.0579], [46.0782, 1312.0002, 48.7091, 217.8449, 23.2596, 46.1204, 0.0, 17.4408, 94.4346, 83.3948, 165.5337, 248.1336, 167.0299, 101.9213, 0.0, 210.5687, 196.9903, 19.5849, 16.1595, 0.0, 41.1981, 33.0194, 109.6867, 17.5956, 146.9866, 29.5835, 84.1662], [192.9942, 1491.4683, 36.5854, 439.3224, 20.4422, 133.8938, 6.8244, 0.0, 103.3296, 10.2257, 346.1075, 277.992, 179.0731, 64.1866, 20.633, 15.0116, 289.4944], [172.8171, 1375.4097, 10.453, 323.9861, 10.3358, 118.4154, 13.8204, 48.7001, 63.2016, 78.3838, 301.9157, 231.9768, 279.1243, 49.1942, 15.604, 10.4135, 362.9783, 92.7216, 34.7855, 0.0, 118.6117, 82.163, 247.1467, 15.9496, 289.8, 102.997, 129.9463], [64.6812, 1514.5263, 32.8369, 430.0138, 27.5839, 152.2664, 19.8528, 173.1111, 100.019, 131.7939, 335.8951, 324.4032, 430.776, 58.1146, 17.7425, 106.772, 206.0396, 129.2688, 54.5737, 53.3368, 65.8781, 237.1272, 23.9527, 222.4118, 95.8738, 93.8152], [132.3675, 1989.9054, 111.2341, 275.1725, 0.0, 184.3556, 50.9124, 84.2972, 93.0301, 21.6329, 263.2942, 337.8672, 217.3334, 17.5315, 0.0, 156.7432, 316.6424, 63.9999, 0.0, 0.0, 95.2371, 59.679, 246.1799, 51.978, 311.3611, 95.1392, 148.0906], [139.3794, 1330.8309, 57.6198, 442.0469, 65.5364, 215.3752, 59.598, 110.1006, 112.024, 157.9897, 341.3727, 262.4688, 241.3272, 76.1098, 85.822, 248.3006, 230.6739, 138.1518, 22.1697, 44.8742, 153.4227, 128.6406, 292.6737, 35.9858, 271.7938, 109.6528, 161.9347], [246.0843, 2102.5053, 104.2511, 412.3046, 62.0311, 147.044, 24.3672, 267.6045, 158.0709, 131.1828, 176.1175, 458.568, 255.6864, 142.9238, 47.8695, 131.1828, 256.8163, 52.9596, 0.0, 0.0, 33.0053, 31.3491, 338.6402, 43.989, 344.5142, 61.215, 59.5194], [140.5719, 2084.0589, 112.8191, 550.2314, 55.5118, 218.2695, 0.0, 158.6666, 110.1179, 152.8565, 453.3377, 223.9776, 319.8859, 57.2314, 0.0, 207.4582, 380.4904, 95.0904, 11.3117, 0.0, 75.5744, 60.5141, 393.132, 4.0725, 358.8883, 99.1683, 89.8822], [264.0672, 2711.2365, 150.6683, 691.4503, 26.6175, 317.8718, 54.0804, 138.7662, 184.7226, 217.959, 534.7584, 697.5936, 559.0824, 135.4608, 48.081, 428.4403, 553.3492, 161.9667, 0.0, 0.0, 136.6693, 181.3816, 419.1474, 119.0967, 632.5368, 103.4867, 247.8314]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

