created: 20230306221045000
creator: Drevarr
modified: 20230705163521331
modifier: drevarr
tags: ChartData
title: 202303062210_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Klee Flamepumpkin", "Tegan Parker", "Zadie Miststep", "Mac Aaroni", "Mike The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[149.0551, 153.2578, 54.2827, 0.0, 0.0, 105.9782, 65.712, 276.8774, 155.0294, 17.281, 166.9415, 8.779, 118.1232, 91.7222, 200.8238, 166.3166], [11.9947, 152.0725, 0.0, 216.4207, 20.137, 25.5083, 181.4839, 75.7859, 35.1173, 149.3515, 39.8272, 165.7376, 116.2222, 202.1789, 162.1861, 150.575, 101.207, 190.2513, 73.5619, 451.0195, 249.4579, 45.5712, 144.6088, 28.9926, 130.703, 104.1293, 242.2358, 201.8673, 129.4652, 179.9304, 139.6044, 113.5522], [319.2438, 172.2134, 0.0, 139.0826, 0.0, 105.3848, 60.0936, 97.5688, 156.1106, 0.0, 151.4688, 149.6311, 129.1929, 225.9596, 91.1018, 115.3117, 109.9648, 59.567, 220.1472, 159.839, 31.945, 188.8661, 0.0, 164.5862, 70.1222, 279.0682, 304.3673, 167.4253, 272.2432, 191.178, 241.7782], [470.2981, 152.731, 0.0, 239.8687, 38.0534, 117.7547, 142.002, 122.8175, 195.8349, 137.715, 199.6064, 97.946, 228.5037, 247.7097, 178.4198, 119.1224, 0.0, 81.9476, 115.0848, 491.8032, 15.8414, 0.0, 176.0314, 60.3029, 218.0794, 0.0, 137.592, 105.3734, 238.728, 300.2149, 179.1695, 174.5985, 222.7788, 148.9198], [440.9045, 259.6922, 134.9548, 42.6241, 15.7658, 77.7601, 163.3538, 115.7419, 294.3156, 187.9968, 227.9872, 72.8585, 208.5229, 282.8187, 110.1177, 94.229, 19.9508, 133.6632, 84.6797, 110.3558, 20.1096, 318.0749, 48.9101, 178.312, 38.556, 192.4416, 115.1885, 365.9846, 373.4291, 241.3418, 263.9669, 323.3952, 193.1668]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

