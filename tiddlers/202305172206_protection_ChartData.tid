created: 20230517220640000
creator: Drevarr
modified: 20230705163530540
modifier: drevarr
tags: ChartData
title: 202305172206_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Artakama Nahid", "Raelyn Sunray", "Eibh\u00ebar", "Primal Clone", "Zadie Miststep", "Cat Wigglebooty", "Newtype Khan", "Jupiter Four", "Ryvalia Fazebringer", "Venomina The Siren", "Tribal S", "Lucas Ryn", "Miphest\u00f6", "Solus Sanctus", "Bella Sassy", "Drevarr Moonwillow", "Itsy Bitsy Tika", "Gabe Malhorn", "Koralia Danai", "Sygaldry Verdandi", "Johosh The Great"];
const professions = ["Scrapper", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Spellbreaker", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 16.2772, 13.1735, 46.2139, 0.0, 0.0, 5.6997, 0.0, 21.7657, 0.0, 19.021, 6.372, 52.9934, 37.3932, 0.0, 5.4144, 56.8503, 67.2288, 66.8755, 16.7846, 0.0, 0.0, 11.5366, 107.5864, 24.057, 21.8486, 50.6503, 46.4564, 0.0, 0.0, 52.0128, 0.0, 42.0449, 65.5891, 0.0, 26.7652, 0.0], [0.0, 19.3887, 59.1026, 78.4382, 3.5568, 4.8805, 9.5415, 0.0, 0.0, 19.3526, 18.9475, 39.204, 24.4325, 29.2913, 19.5696, 19.392, 91.016, 36.4344, 52.5869, 29.641, 8.311, 0.0, 19.2906, 19.1394, 74.3457, 19.5138, 61.127, 28.616, 34.5318, 12.8282, 0.0, 33.5664, 19.3629, 10.2797, 14.915, 14.058, 4.8917, 43.2], [0.0, 58.7647, 0.0, 25.1899, 334.3985, 88.5567, 111.4525, 157.8172, 225.2432, 17.5263, 195.1488, 15.2942, 148.639, 29.4595, 21.7404, 13.7604, 0.0], [10.2023, 46.3703, 49.3115, 52.6781, 17.2411, 0.8065, 42.9839, 6.9165, 0.0, 27.3782, 95.8392, 30.312, 77.4936, 30.3545, 34.344, 52.224, 102.7749, 51.606, 79.8758, 22.4986, 0.0, 11.3117, 3.9312, 29.6705, 115.5557, 13.0712, 72.5014, 60.8805, 84.2178, 37.5516, 0.0, 97.3728, 0.0, 81.3116, 70.9622, 34.1352, 0.0, 35.1216], [31.9902, 15.1627, 79.1596, 48.6259, 14.2085, 33.6774, 64.5545, 13.2465, 24.8935, 45.4906, 22.4726, 40.824, 46.2254, 75.1163, 20.4606, 44.6592, 128.8853, 45.8532, 27.1718, 30.3998, 0.0, 19.942, 0.0, 18.3632, 137.1569, 48.2258, 62.4363, 59.5928, 70.8854, 36.7186, 83.4624, 13.7093, 93.7213, 58.4558, 17.028, 20.3622, 23.76], [0.0, 16.4862, 23.0833, 106.6104, 9.4723, 11.5188, 38.6382, 0.0, 18.7671, 14.0995, 58.3114, 55.548, 32.9602, 40.2893, 10.773, 32.64, 126.8483, 58.3176, 85.1462, 18.8827, 5.8048, 18.741, 11.025, 14.1826, 90.0747, 15.4546, 35.9234, 53.1542, 50.0172, 30.6877, 14.184, 139.2048, 34.0689, 75.755, 63.4584, 127.4328, 32.5319, 65.7504], [23.4018, 23.2432, 20.947, 49.9766, 18.1771, 8.3547, 40.4017, 0.0, 16.6166, 92.0938, 62.712, 91.3003, 19.5031, 29.0688, 115.9227, 44.838, 42.3974, 19.5523, 5.762, 27.4552, 16.5816, 40.131, 196.5076, 38.022, 116.1986, 157.6742, 171.6651, 12.3617, 0.0, 184.2624, 0.0, 47.7868, 0.0, 0.0, 0.0], [35.218, 20.5497, 77.7947, 40.6181, 39.0686, 0.0, 37.5676, 15.9104, 0.0, 19.8451, 76.2307, 31.284, 61.9272, 27.1651, 43.0272, 45.9648, 128.7001, 36.0396, 124.6157, 32.1408, 22.491, 29.4661, 10.7251, 148.3769, 32.6967, 58.7539, 76.1901, 94.0722, 33.5532, 0.0, 115.6176, 17.157, 106.8719, 49.4698, 53.6184, 0.0, 32.8752], [64.4992, 23.7773, 56.6697, 47.0822, 35.231, 0.486, 39.331, 0.0, 0.0, 43.2835, 88.0546, 29.736, 54.6178, 51.2507, 36.6282, 43.8144, 109.534, 56.8512, 151.9046, 32.9443, 0.0, 22.2602, 17.6652, 37.9436, 142.3999, 44.0549, 45.3338, 40.7063, 97.7986, 45.4818, 0.0, 154.5264, 0.0, 57.0478, 96.6235, 0.0, 0.0, 47.52], [52.7406, 17.0899, 59.3993, 56.1514, 12.299, 0.0, 16.6267, 29.939, 24.7901, 11.2723, 32.8277, 23.724, 93.3984, 60.8556, 33.9876, 63.5136, 88.4234, 46.7556, 116.7686, 49.7736, 20.4133, 62.0325, 0.0, 18.9277, 129.5021, 26.5149, 49.9981, 83.8449, 98.2127, 36.4521, 23.868, 121.3632, 26.4054, 90.5726, 59.1043, 50.6088, 0.0, 46.44], [13.0843, 32.3919, 95.3, 17.6558, 0.0, 0.0, 0.0, 16.6192, 40.8171, 0.0, 63.8194, 63.072, 119.6582, 65.4381, 0.0, 53.8752, 150.2736, 59.4456, 81.2813, 65.2637, 0.0, 51.849, 31.0464, 155.6122, 44.0922, 98.9325, 70.4669, 139.8661, 12.3284, 0.0, 98.8848, 0.0, 73.9028, 78.1882, 51.3216, 0.0, 29.5056], [0.0, 0.0, 111.3218, 104.7773, 44.9842, 19.9872, 81.9055, 52.1794, 0.0, 0.0, 18.6538, 12.708, 111.9427, 115.6256, 27.9936, 40.4736, 136.0147, 120.8652, 137.0304, 58.6123, 6.4046, 0.0, 0.0, 47.5222, 203.5333, 21.1896, 37.7236, 98.8683, 103.5125, 21.5914, 0.0, 131.4432, 0.0, 100.2966, 70.2211, 22.9284, 19.1691, 10.7136], [24.1512, 16.6952, 265.6652, 228.2717, 42.4944, 10.3193, 117.5207, 43.2588, 54.3109, 22.3258, 37.0872, 21.816, 107.8142, 141.4343, 35.3322, 128.2944, 269.8998, 189.7296, 198.0499, 77.2718, 11.5882, 35.6945, 0.0, 91.1106, 276.8304, 102.6707, 162.678, 118.1841, 243.7926, 16.8932, 0.0, 219.744, 29.7225, 264.5868, 52.4342, 83.7936, 0.0, 72.4464], [13.8912, 0.0, 166.0333, 183.7944, 31.2624, 73.4657, 174.3601, 32.8474, 64.0821, 31.8835, 225.9014, 147.492, 113.7024, 137.4383, 90.963, 79.1808, 321.6577, 163.842, 258.601, 156.7757, 166.7119, 40.0237, 0.0, 16.2641, 226.8122, 28.712, 82.1573, 228.4988, 137.3818, 156.1708, 297.864, 0.0, 94.956, 20.6316], [10.7787, 44.9075, 241.5859, 63.3672, 20.649, 123.7872, 67.3811, 39.0335, 24.8611, 156.1334, 85.932, 182.3976, 99.8618, 17.6418, 130.8672, 229.5306, 197.9076, 307.5571, 128.34, 0.0, 41.2526, 40.383, 60.5581, 405.3888, 41.5598, 151.3037, 260.4771, 190.6286, 66.2402, 0.0, 324.4752, 22.6309, 360.3455, 95.3266, 44.946, 33.0489, 79.2288], [105.827, 47.6707, 186.6836, 281.7216, 19.8619, 50.5006, 112.1674, 29.8657, 76.3609, 18.6595, 106.6349, 31.032, 227.2018, 104.2977, 40.3704, 71.1936, 296.288, 234.1728, 283.6646, 89.4139, 31.2946, 19.0483, 82.215, 18.1339, 284.6949, 81.2949, 304.0803, 266.558, 235.8429, 27.8555, 8.028, 275.3856, 6.1929, 289.4062, 173.9779, 108.9792, 0.0, 31.2336], [80.3502, 60.9525, 258.8411, 182.6366, 59.0054, 42.4457, 100.9884, 23.0225, 71.4235, 64.2048, 181.9843, 83.7, 148.9637, 121.5279, 17.496, 118.656, 316.5652, 110.0928, 349.2518, 120.528, 25.1042, 104.0672, 0.0, 47.9632, 210.9783, 163.5581, 141.7296, 151.7363, 253.3158, 105.2246, 88.434, 336.0672, 18.0067, 222.4492, 153.2266, 146.9556, 112.2309, 123.2064], [47.2072, 84.9852, 202.4681, 197.784, 48.2976, 0.0, 204.4016, 78.1836, 42.7042, 24.2045, 94.811, 30.96, 200.1974, 111.7763, 29.6784, 115.6992, 185.8281, 261.132, 242.4384, 22.32, 16.7076, 171.6857, 63.6048, 47.8573, 360.4038, 51.7636, 125.8545, 307.3358, 348.5473, 86.8652, 0.0, 324.6768, 0.0, 250.1396, 307.7501, 128.7792, 32.1739, 147.8304], [39.8292, 21.8965, 180.3343, 117.995, 47.0246, 24.5472, 175.9976, 58.1916, 31.2785, 21.5779, 148.9363, 63.684, 177.1186, 198.9172, 27.054, 114.7392, 305.9174, 200.8968, 332.9722, 162.445, 63.8744, 95.5485, 23.8896, 90.4579, 475.2255, 81.4066, 98.0323, 257.6155, 211.0827, 66.6067, 0.0, 378.1008, 0.0, 504.6319, 276.1598, 39.1248, 38.2587, 88.4304], [146.8091, 81.6183, 259.3158, 324.2693, 79.3915, 44.948, 106.94, 26.664, 129.0432, 69.2573, 148.7894, 140.76, 241.6176, 109.7234, 16.1676, 154.5216, 484.8012, 181.2132, 297.719, 117.3139, 85.4099, 29.106, 96.8083, 471.2408, 144.5657, 315.9456, 230.8596, 308.5501, 175.8963, 352.0944, 359.3268, 189.2635, 60.4692, 0.0, 53.1792], [85.7107, 82.4542, 238.8435, 176.8478, 114.3792, 81.4585, 221.4692, 117.5808, 99.3415, 176.4538, 194.3957, 156.492, 267.336, 102.648, 51.192, 110.016, 519.2447, 235.0752, 289.9891, 117.5818, 24.4616, 56.0555, 20.6892, 88.0589, 464.1104, 74.5545, 258.4191, 417.0067, 374.3012, 93.2627, 400.5792, 41.0297, 282.1827, 180.7406, 174.312], [22.1914, 111.5024, 355.4466, 297.4478, 90.8294, 103.979, 240.0168, 60.1957, 104.6667, 88.92, 152.4614, 119.916, 185.0371, 296.946, 65.1402, 229.056, 502.1156, 277.9392, 342.576, 141.1517, 58.9693, 76.0813, 116.3358, 528.9138, 127.9194, 262.5925, 379.0905, 380.5948, 124.217, 4.896, 425.88, 0.0, 400.6309, 200.2877, 124.0668]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

