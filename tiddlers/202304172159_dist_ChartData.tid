created: 20230417215912000
creator: Drevarr
modified: 20230705163525731
modifier: drevarr
tags: ChartData
title: 202304172159_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Mettrik Milliohm", "Rozaalyna", "Elonith Requiem", "Kmpek", "Mike The Archmagus", "Black Raspberry Pie", "Arcanophage Farra", "Be\u00eb", "Etchery Howls", "Mistwalker Caelon", "Solus Sanctus", "Sp\u00edcy Cheese", "Zadie Miststep", "Newtype Khan", "Primal Clone", "Mac Chiato", "Smol Gluvs", "Xanvias Einzbern", "Eibh\u00ebar", "Johosh The Great", "Grasszanine", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Firebrand", "Reaper", "Reaper", "Vindicator", "Catalyst", "Chronomancer", "Spellbreaker", "Reaper", "Druid", "Vindicator", "Firebrand", "Berserker", "Tempest", "Spellbreaker", "Chronomancer", "Tempest", "Reaper", "Berserker", "Chronomancer", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[821, 224, 330, 333, 515, 395, 530, 297, 271, 214, 547, 2649, 1002, 274, 1137, 329, 247, 297, 250, 332, 299, 306], [775, 903, 828, 311, 654, 372, 710, 4963, 654, 209, 1611, 2594, 707, 227, 829, 373, 288, 228, 203, 297, 257, 12981], [406, 262, 613, 340, 1357, 5197, 839, 256, 629, 2700, 466, 320, 817, 515, 589, 342, 261, 440, 423, 2640], [1809, 514, 317, 2189, 3410, 436, 358, 268, 312, 417, 1062, 308, 202, 195, 1240, 1600, 847], [450, 197, 1192, 3075, 276, 273, 185, 356, 476, 354, 278, 202, 208, 1712, 3305], [191, 426, 337, 660, 307, 616, 539, 2097, 334, 720, 212, 480, 2558, 1544, 226, 1150, 2598, 204, 351, 206, 301, 273, 237, 268, 183, 171, 1413, 695, 815], [718, 343, 719, 259, 947, 786, 1164, 230, 1018, 148, 336, 2592, 3999, 214, 1657, 471, 309, 271, 173, 410, 374, 561, 303, 142, 146, 1560, 691, 721], [387, 346, 567, 245, 509, 478, 2489, 300, 2000, 223, 1196, 2581, 2141, 240, 1121, 541, 294, 346, 193, 272, 309, 257], [630, 320, 820, 352, 1371, 274, 549, 337, 258, 966, 1845, 223, 1074, 2777, 280, 293, 230, 318, 424, 309], [153, 745, 282, 600, 325, 616, 373, 1262, 5414, 451, 234, 428, 2706, 5740, 216, 1223, 443, 278, 285, 252, 255, 261, 242, 335, 212, 256, 1543, 851, 887], [1542, 1047, 383, 650, 236, 1678, 285, 371, 238, 458, 2576, 1491, 870, 227, 298, 302, 215, 177, 288, 316, 412, 355, 201, 219, 1624, 338, 779], [230, 735, 285, 304, 248, 910, 182, 478, 254, 1104, 301, 765, 2602, 9290, 235, 690, 2508, 178, 216, 173, 286, 265, 323, 5841, 1004, 212, 1905, 1433, 827], [433, 741, 339, 296, 232, 667, 266, 1165, 253, 993, 503, 1108, 1206, 208, 1084, 362, 366, 257, 189, 357, 460, 1433, 521, 170, 98, 808, 1165, 698], [267, 691, 188, 545, 310, 612, 255, 417, 327, 1189, 206, 1122, 2566, 3061, 177, 1136, 335, 204, 269, 206, 3528, 2858, 385, 169, 177, 745, 798, 353], [733, 242, 557, 324, 558, 802, 423, 269, 787, 228, 537, 2594, 672, 186, 433, 209, 363, 260, 204, 370, 296, 247, 335, 254, 217, 286, 1049, 611], [385, 399, 204, 858, 351, 1039, 794, 1056, 231, 4419, 136, 244, 2556, 1887, 206, 1111, 1116, 166, 230, 230, 4593, 315, 301, 120, 202, 372, 392, 4863], [338, 343, 275, 376, 267, 319, 188, 305, 293, 1781, 140, 862, 620, 4161, 2096, 1453, 440, 330, 239, 224, 296, 282, 1313], [281, 742, 215, 244, 246, 344, 249, 433, 247, 395, 164, 930, 2533, 619, 187, 1058, 255, 177, 217, 173, 197, 327, 3889, 202, 156, 155, 946, 1282, 2680], [648, 270, 343, 238, 579, 165, 2095, 199, 2450, 194, 515, 2526, 309, 194, 586, 262, 201, 198, 138, 274, 314, 234, 237, 135, 148, 880, 312, 736], [749, 189, 590, 264, 299, 186, 307, 252, 570, 241, 277, 2565, 2055, 157, 1466, 542, 175, 212, 189, 334, 350, 192, 243, 156, 134, 709, 719, 752], [681, 166, 398, 171, 625, 234, 9517, 183, 261, 212, 285, 2610, 2444, 181, 1078, 416, 226, 258, 153, 374, 270, 232, 217, 162, 122, 1579, 747, 732], [143, 677, 216, 271, 193, 626, 296, 1095, 205, 1191, 110, 302, 2495, 2397, 193, 1081, 236, 321, 134, 127, 188, 444, 257, 148, 276, 118, 1582, 228, 680], [126, 720, 190, 241, 168, 430, 199, 736, 193, 281, 196, 389, 2340, 806, 157, 1049, 1755, 459, 180, 171, 11386, 6347, 5578, 160, 154, 124, 377, 330, 5171]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

