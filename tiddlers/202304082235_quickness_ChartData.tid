created: 20230408223537000
creator: Drevarr
modified: 20230705163525044
modifier: drevarr
tags: ChartData
title: 202304082235_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Traidoruns Maximus", "Grasszanine", "Newtype Khan", "Cthullun", "Arcanophage Farra", "Aronorf Xideliesi", "Leaf You Dead"];
const professions = ["Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Chronomancer", "Spellbreaker", "Firebrand", "Harbinger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 17.1085, 43.318, 72.8707, 37.7119], [57.5505, 0.0, 6.2824, 93.49, 0.0, 6.2647, 17.6208, 0.0, 18.0414, 4.8391, 6.358], [26.8019, 13.3518, 31.2417, 0.0, 0.0, 19.745, 65.7582, 13.0284, 0.0, 0.0, 0.0, 1.0764, 0.0, 13.09, 13.1074, 12.9748, 13.4098, 0.0, 8.7997, 13.3504, 26.8995, 16.5904, 0.0, 26.0385, 0.0, 0.0, 0.0, 0.0, 11.8212, 39.3604], [24.9228, 12.6126, 41.6556, 0.0, 0.0, 0.0, 55.6739, 0.0, 0.0, 0.0, 0.0, 13.8996, 13.9854, 0.0, 27.5411, 13.5811, 13.5408, 0.0, 15.225, 13.3414, 13.3504, 12.9156, 12.8797, 12.8425, 28.9906, 0.0, 0.0, 0.0, 0.0, 15.5365, 35.2206], [66.263, 0.0, 222.3459, 0.0, 16.9947, 38.0184, 94.5405, 0.0, 0.0, 0.0, 0.0, 14.2506, 23.8352, 0.0, 31.208, 22.5544, 0.0, 0.0, 18.2091, 0.0, 23.9232, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [56.373, 22.1298, 68.5125, 0.0, 0.0, 129.9984, 194.9635, 0.0, 0.0, 34.9462, 0.0, 0.0, 0.0, 0.0, 62.8841, 45.0683, 44.9904, 36.1838, 38.0625, 54.6273, 76.0704, 40.7215, 55.5647, 50.4138, 17.3479, 0.0, 0.0, 0.0, 14.1939, 28.5061, 41.3985], [63.296, 28.0434, 44.9442, 0.0, 6.8414, 129.1399, 243.2842, 1.7174, 1.7227, 6.9536, 31.3794, 10.5191, 0.0, 57.6568, 76.1513, 71.6789, 35.1952, 14.0375, 46.3953, 101.9648, 54.2197, 47.8561, 46.1502, 83.5552, 7.1253, 8.8703, 0.0, 5.1584, 24.8724, 112.5383, 103.5599], [355.7786, 560.7302, 33.5185, 34.2434, 85.6428, 114.1408, 75.1608, 34.5946, 0.0, 231.4073, 100.6054]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

