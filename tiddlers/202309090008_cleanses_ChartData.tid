created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Solus Luxes", "Brutal Araden", "Raziel Umbra", "Mort\u00e4rion", "Black Raspberry Pie", "Elon Illusionblade", "Seiker Novus Terra", "High Sorcer Baradun", "J\u00e2sm\u00eene", "Tegan Parker", "Legoh Brave", "Heals For Daddy", "Drevarr Moonwillow", "Sofya De Nova", "Kahlyanne", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Renegade", "Chronomancer", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Tempest", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1452, 0.1022, 0.0, 0.0373, 0.0663, 0.0298, 0.0, 0.0156, 0.0667, 0.0, 0.0358], [0.0, 0.0, 0.1268, 0.2826, 0.0, 0.0336, 0.0663, 0.0091, 0.0244, 0.0312, 0.1222, 0.0556, 0.0394], [0.0, 0.0, 0.1682, 0.0, 0.0, 0.0, 0.0442, 0.0142, 0.0195, 0.0312, 0.1111, 0.0, 0.0418], [0.0, 0.1613, 0.088, 0.6522, 0.0, 0.1455, 0.0497, 0.0944, 0.0, 0.0, 0.0, 0.0, 0.074], [0.0, 0.0726, 0.2924, 0.4565, 0.0, 0.0634, 0.0, 0.044, 0.0, 0.0, 0.0, 0.0, 0.0477], [0.0, 0.1694, 0.2432, 0.0, 0.1157, 0.1105, 0.0673, 0.0, 0.0, 0.0, 0.0, 0.0811], [0.0, 0.2661, 0.229, 0.6522, 0.0, 0.1903, 0.1326, 0.0492, 0.0, 0.1406, 0.0, 0.0, 0.0931], [0.4435, 0.1695, 0.4348, 0.0, 0.2351, 0.2873, 0.1501, 0.078, 0.0234, 0.0], [0.0, 0.3952, 0.9379, 0.913, 0.0, 0.4739, 0.442, 0.3144], [0.0, 0.7581, 1.2691, 0.4739, 0.5359, 0.282], [0.0, 0.9032, 1.0375, 1.0, 0.3955, 0.7072, 0.2704, 0.0683, 0.2188, 0.1111, 0.0, 0.3592], [0.0, 0.7823, 1.2962, 1.413, 0.0, 0.444, 0.326, 0.3325, 0.039, 0.1016, 0.3556, 0.0, 0.2053], [0.0, 0.4355, 1.5395, 1.1957, 0.0, 0.459, 1.0663, 0.5175], [0.0508, 1.2016, 1.2212, 1.3696, 0.7388, 0.6685, 0.436, 0.4683, 0.6641, 0.3111, 0.2222, 0.4845], [0.0508, 0.7903, 1.4774, 1.7174, 0.0, 0.6343, 0.7845, 0.4088, 0.1463, 0.25, 0.4333, 0.1389, 0.5752], [0.1864, 1.121, 1.74, 1.3696, 0.6791, 0.9282, 0.6274, 0.3512, 0.4297, 0.6222, 0.0278, 0.5859], [0.0169, 1.7097, 2.0, 1.9565, 0.0, 0.8619, 0.8232, 0.5511, 0.0195, 0.4844, 0.5444, 0.0, 0.7816]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

