created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Hawaiian Supreme", "Ggclaudx", "Verris The Wanderer", "Glorious Gluvs", "Oo Dads Mad", "High Sorcer Baradun", "Tegan Parker", "Grasszanine", "Tootsie Pop Rocks", "Arcanophage Farra", "N\u00f6sh\u00e0k", "Zaedy Zae", "Jimbo The Pleb", "Ill Fix Your Honda", "Lucky Luprac\u00e1n", "Mike The Archmagus", "Xanvias Einzbern", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Spellbreaker", "Holosmith", "Untamed", "Berserker", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Mesmer", "Druid", "Berserker", "Scrapper", "Scrapper", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0.293, 1.187], [0.42, 0.624, 0.78, 0.338, 0.441, 0], [0.152, 0, 0, 0, 0.3, 0.437, 0.111, 0, 0.1, 0, 0.464, 0.268, 0.226, 0, 0, 0, 0.264, 0], [0.138, 0, 0, 0.394, 0.624, 0.706, 0.425, 0, 0.502, 0, 0.539, 0.348, 0, 0.041, 0.261], [0.183, 0, 0, 0, 0, 0.334, 0.698, 0, 0.496, 0.587, 0, 0.676, 0.509, 0, 0.712, 0, 1.003, 0.0, 0.744, 0, 0, 1.069, 0, 0, 0, 0], [0, 0.289, 0.181, 0, 0, 1.004, 0.757, 0.897, 0, 0.811, 1.254, 0, 0.756], [0.397, 0.433, 0.469, 0.584, 0.606, 0.451, 0.558, 0, 0, 0.752, 0.506, 0.227, 0.229], [0.347, 0.108, 0.626, 0.39, 0, 0.722, 0.522, 0.638, 0.298, 0.605, 0.673, 0.453, 0.611, 0.511, 0.436, 0.536, 0.602, 0.281, 0.577, 0, 0.198, 0.667, 0.382, 0.358, 0.402, 0.758], [0.508, 0.433, 0.18, 0, 0.325, 1.01, 0.585, 0.747, 0, 0.496, 0.616, 0, 0.693, 0.711, 0, 0.53, 0, 0.975, 0.314, 0.62, 0, 0, 0.802, 0.434, 0.316, 0.527, 0], [0, 0.467, 0.339, 0, 0, 0.908, 0.689, 0.991, 0.795, 0.86, 0.752, 0, 0.784, 0.586, 0.12, 0.214, 0.67, 1.128, 0.457, 0, 0, 0.132, 0, 0, 0.358, 0.711, 0], [0, 0.145, 0.181, 1.288, 0, 1.137, 1.172, 0.569, 0.257, 0.533, 0.259, 0, 0, 0.255, 0.852, 1.13, 0.809, 0.941, 0.772, 1.36, 1.72, 0.459, 0, 0, 0, 0.34, 1.471], [0, 0, 0, 0, 0.814, 0, 0.502, 0.913, 0, 0.452, 0.954, 1.519, 0.929, 0.464, 1.7, 0.469, 1.512, 0.745, 0.05, 1.561, 0.013, 0.755, 1.164, 1.105], [0, 0.694, 0.759, 0.626, 0.195, 0.624, 0.461, 0.545, 0.638, 0.595, 0.711, 0, 0.453, 0.536, 0.128, 0.427, 0.629, 0.203, 0, 0.317, 0.526, 0.037, 0.481, 0, 0.263, 0.242, 0.553], [0.569, 0.63, 0.782, 0.325, 0.619, 0.321, 2.086, 1.068, 0.554, 1.545, 0, 0.564, 0.113, 0.223, 0.405, 0.518, 1.161, 0.37, 0, 0.302, 0.441, 0.762, 0.634, 0, 1.179, 0], [0.57, 1.137, 1.408, 0.39, 1.666, 0.66, 1.458, 1.242, 0.868, 0.993, 0.524, 0.456, 0.095, 0.509, 0.462, 0.201, 0.301, 0.188, 0.325, 0.797, 0, 0.962, 0.365, 0.358, 0.307, 0.371], [0.305, 0.598, 0.154, 0.469, 0.194, 1.374, 1.092, 1.137, 0.243, 0.814, 1.018, 0, 0.933, 1.067, 1.139, 0.963, 0.281, 0.602, 0.414, 0.335, 1.014, 0, 0.401, 0.5, 0.818, 0.683, 0.437], [0.781, 0.649, 0.626, 0.389, 0.607, 0.101, 0.441, 0.639, 1.091, 0.741, 0.508, 0.908, 0.754, 0.514, 1.109, 0.277, 0.689, 0.657, 0.811, 0.263, 0.788, 1.088, 0.268, 0.95, 0.609], [0.983, 0.744, 0.722, 0.798, 0.65, 0.767, 1.112, 2.107, 1.062, 0.7, 0.986, 0.563, 1.152, 1.019, 0.798, 0.726, 1.756, 1.431, 0.536, 0.759, 1.923, 0.421, 0, 0.578, 0], [0.993, 1.355, 0.626, 1.072, 1.06, 1.111, 0.717, 0.637, 0.943, 1.691, 0.827, 0.554, 0.958, 0.92, 1.276, 0.835, 0.691, 1.257, 0.811, 0.661, 1.312, 0.305, 0.869, 0, 0], [2.432, 0.922, 1.138, 1.563, 0.684, 2.246, 1.734, 2.248, 1.761, 1.505, 2.005, 0.338, 1.528, 1.432, 0.763, 1.443, 1.579, 1.203, 0.931, 1.436, 1.075, 0.479, 1.346, 0.711, 0.885, 1.464, 1.014]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

