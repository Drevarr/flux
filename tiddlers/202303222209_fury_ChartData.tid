created: 20230322220917000
creator: Drevarr
modified: 20230705163522822
modifier: drevarr
tags: ChartData
title: 202303222209_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Primal", "Etch\u00e9ry", "Newtype Khan", "Zadie Miststep", "Xanvias Einzbern", "My Birthday Girl", "Kosa\u00edr", "Lord Erin The Wise", "Mistwalker Caelon", "Xyntharos", "Tribal S", "Charred Fishbringer", "Drevarr Moonwillow"];
const professions = ["Tempest", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Holosmith", "Weaver", "Vindicator", "Vindicator", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[127.5552, 9.689, 30.475, 0.0, 41.3424, 17.5104, 38.0736, 30.7642, 20.9573, 0.0, 30.7085, 24.7842, 218.428, 28.9469, 22.9133, 0.0, 23.2892, 4.6078, 0.0, 47.8578, 30.6029, 30.8442, 0.0, 43.7486, 0.0, 20.7477], [90.8986, 81.5014, 0.0, 0.0, 60.2448, 62.2541, 89.9424, 46.4755, 81.3852, 0.0, 94.7866, 52.9788, 119.77, 82.4023, 27.1814, 0.0, 0.0, 8.8099, 0.0, 8.2029], [97.0906, 34.7392, 0.0, 0.0, 25.9776, 36.4954, 28.3968, 57.0595, 52.0267, 34.8058, 24.696, 310.996, 26.0102, 25.4592, 31.536, 31.145, 0.0, 53.5419, 0.0, 0.0, 28.6832, 33.4222, 33.4066, 0.0, 0.0], [156.7814, 23.6389, 33.488, 0.0, 50.16, 27.2794, 31.248, 31.6579, 35.6824, 0.0, 67.6262, 31.7226, 369.866, 31.3941, 44.2109, 31.536, 44.4233, 23.9954, 31.1004, 54.2342, 21.479, 31.3086, 0.0, 23.9674, 0.0, 27.3187], [0.0, 108.8585, 69.414, 0.0, 114.2592, 92.759, 50.0256, 82.1789, 107.2611, 0.0, 51.6595, 88.1412, 278.516, 110.963, 53.3664, 16.452, 0.0, 0.0, 67.6814, 0.0, 17.8042, 0.0, 0.0, 0.0, 0.0, 0.0], [441.3658, 77.1319, 48.254, 15.939, 79.9392, 76.2624, 56.9376, 76.44, 80.9269, 0.0, 74.6381, 69.4428, 625.646, 28.7371, 75.4963, 25.272, 15.9201, 59.1192, 56.1363, 57.9479, 29.5891, 16.7705, 22.1784, 3.5294, 0.0, 0.0], [412.6349, 45.4595, 41.4, 42.918, 120.2784, 77.2301, 76.8672, 59.2234, 74.3281, 0.0, 70.4986, 60.1818, 682.486, 103.7613, 107.8099, 23.58, 15.9201, 47.9039, 47.1208, 15.9667, 22.7715, 0.0, 48.947, 0.0], [504.0288, 59.6266, 58.282, 13.432, 146.6784, 120.8678, 71.5104, 83.0726, 63.1163, 0.0, 80.087, 52.185, 849.758, 59.7117, 3.9658, 52.812, 37.228, 25.3865, 46.7641, 32.022, 112.9075, 58.7237, 56.2411, 32.531, 33.4236], [462.4186, 60.4408, 54.326, 23.897, 121.1232, 95.3395, 53.3376, 93.2333, 57.9534, 8.9232, 96.1382, 58.2414, 762.874, 112.1517, 62.5709, 86.868, 53.878, 42.4847, 54.4175, 145.6055, 107.712, 20.9676, 2.9822, 43.8854, 23.5311, 18.9701], [502.5427, 62.0692, 51.336, 35.811, 117.6384, 104.9702, 61.8912, 65.4326, 61.4971, 5.9654, 95.1667, 61.5636, 788.452, 86.1414, 77.112, 47.052, 87.3171, 56.511, 65.7356, 149.5994, 75.3984, 32.7374, 32.7816, 52.4491, 20.7185], [811.895, 91.6246, 77.625, 29.739, 182.2656, 169.4362, 102.0096, 111.3907, 113.2794, 21.1286, 162.2438, 85.9362, 1476.622, 197.8037, 71.6774, 80.82, 85.892, 91.6348, 94.6632, 228.1479, 143.7005, 60.6347, 79.5682, 95.4864, 27.0354, 44.9339], [996.4166, 127.3137, 96.393, 53.107, 187.3872, 194.9645, 70.992, 121.5043, 91.7111, 139.9834, 39.6606, 1548.484, 140.679, 78.0912, 205.704, 212.5922, 115.2245, 109.1269, 289.4592, 236.6496, 109.4639, 107.1807, 99.8093, 53.5456, 76.7256], [1219.3286, 244.7214, 150.535, 27.163, 295.68, 224.041, 188.4672, 216.1018, 216.3551, 91.1539, 233.7139, 174.8124, 2349.522, 256.956, 287.1994, 176.76, 122.2162, 143.2192, 142.0758, 265.1449, 345.1219, 89.175, 135.5442, 67.6066, 19.0884, 41.9907]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

