created: 20230422000344000
creator: Drevarr
modified: 20230705163526077
modifier: drevarr
tags: ChartData
title: 202304220003_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Air One Com", "Ark Darkness", "Soxx", "Laddy Lux", "Aronorf Xideliesi", "Lucas Ryn", "Zaylen Harker", "Koralia Danai", "Johosh The Great", "Jupi Jupi Jupi", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.1118, 35.8408, 16.4312, 74.1165, 31.2201, 6.7095, 95.58, 0.0, 0.0, 5.1612, 5.2546, 6.4915, 7.7088], [16.5158, 36.5224, 1.0422, 0.0, 0.0, 0.0, 3.828, 16.5308, 0.0, 39.78, 37.548, 0.0, 3.2568, 23.2213, 8.7494, 54.3315, 1.9853, 14.2932, 14.3467, 46.3104, 0.0, 0.0, 0.0, 6.0372], [3.4003, 1.3632, 33.6052, 27.6791, 0.0, 19.252, 21.5389, 19.9206, 1.5336, 46.08, 0.0, 0.0, 10.3776, 0.0202, 5.8464, 21.0245, 6.1459, 38.6834, 6.4508, 42.8544, 0.0, 32.4949, 0.0, 14.2029], [3.8861, 16.8412, 5.7195, 8.956, 0.0, 24.7525, 25.52, 39.2135, 0.0, 88.02, 0.0, 0.0, 16.836, 8.0032, 17.6602, 11.9328, 22.1338, 0.0, 48.1684, 38.4225, 26.5248, 0.0, 30.7761, 0.0, 3.7926], [3.8861, 44.1336, 14.3877, 15.0913, 0.0, 21.7202, 28.659, 33.48, 3.3547, 79.38, 12.978, 0.1242, 13.8, 10.7719, 16.6925, 60.3198, 12.3974, 38.5085, 18.9645, 6.3936, 0.0, 9.7614], [5.4648, 24.7932, 39.096, 15.7965, 0.0, 42.1004, 18.7827, 37.1628, 10.0643, 48.6, 0.0, 0.0, 10.35, 11.5601, 6.8141, 20.6748, 26.0621, 0.0, 44.5405, 80.1232, 62.9856, 0.0, 17.6419, 0.0, 7.8174], [33.7044, 101.5383, 67.8563, 273.456, 62.352, 14.2043, 50.7674], [13.0548, 36.3236, 12.5066, 134.5874, 0.0, 31.593, 56.2971, 48.2949, 29.0426, 111.24, 0.693, 0.0, 20.2032, 12.9142, 10.2816, 55.9925, 26.4845, 69.5333, 31.6897, 63.2737, 6.1344, 0.0, 46.0182, 0.0, 4.9149], [0.0, 22.9288, 28.2785, 13.068, 61.3877, 21.2582, 22.1387, 17.6044, 163.98, 78.246, 0.0, 4.5264, 14.147, 8.4672, 44.8902, 19.7472, 0.0, 17.79, 58.6208, 17.6256, 0.0, 14.2043, 201.2868, 6.5403], [9.1687, 40.0724, 29.1059, 102.3245, 15.18, 87.7621, 30.9047, 129.191, 10.1281, 261.54, 217.539, 0.9729, 0.0, 33.0636, 25.2, 40.1258, 9.4618, 72.952, 40.0088, 111.1968, 7.9488, 14.4638, 13.513, 25.8129], [28.2955, 61.7416, 45.8068, 66.183, 43.4016, 36.5999, 34.8093, 84.3696, 24.3779, 344.88, 94.689, 10.4949, 24.4536, 17.4614, 32.377, 82.1311, 14.087, 49.4797, 60.4538, 147.9168, 66.4416, 48.645, 58.65, 0.0774], [9.9581, 70.9148, 35.4609, 119.8135, 33.7656, 59.8715, 30.5474, 117.2637, 188.4731, 260.46, 0.0, 0.0, 43.0836, 3.7388, 28.3853, 48.387, 21.7325, 74.2633, 107.0895, 120.96, 8.4096, 70.9893, 0.0, 87.3072], [21.9806, 54.7268, 154.579, 95.343, 59.0568, 102.9945, 112.5177, 117.6403, 28.5952, 682.74, 166.131, 96.2757, 33.9204, 19.725, 69.1488], [8.4401, 40.2144, 87.9532, 96.3303, 30.7032, 67.9813, 55.0466, 69.0106, 65.0821, 410.22, 269.955, 70.8561, 7.866, 52.8087, 26.6515, 95.4626, 19.5994, 27.1879, 46.9008, 21.6082, 378.864, 39.8016, 21.5335, 140.2908, 103.3677]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

