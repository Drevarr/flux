created: 20230524221126000
creator: Drevarr
modified: 20230705163531391
modifier: drevarr
tags: ChartData
title: 202305242211_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Soxx", "Inedible Plant", "Pie Snarglebringer", "Plum Crazybringer", "Brioche Bunbringer", "Mixon Cue Bringer", "Arriasa", "Bork Borkbringer", "Xkaet", "Spicy Gyrosbringer", "Band Aidbringer", "Johosh Of The North"];
const professions = ["Chronomancer", "Firebrand", "Vindicator", "Chronomancer", "Scrapper", "Chronomancer", "Scrapper", "Druid", "Tempest", "Tempest", "Scrapper", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.151, 0.2667, 0.1017, 0.0435, 0.0123, 0.0, 0.1542, 0.0, 0.025, 0.1337], [0.2507, 0.087, 0.0, 0.1667, 0.1241, 0.0, 0.1975, 0.0, 0.1589, 0.0541, 0.05, 0.0788], [0.0655, 0.0, 0.0, 0.1167, 0.0769, 0.0507, 0.0988, 0.0, 0.3084, 0.1036, 0.125, 0.1538], [0.3105, 0.0, 0.0, 0.5083, 0.0794, 0.1196, 0.0, 0.0, 0.215, 0.009, 0.1, 0.0934], [0.2422, 0.0, 0.0, 0.1583, 0.0744, 0.1159, 0.0247, 0.0, 0.3458, 0.0586, 0.2, 0.2106], [0.302, 0.5217, 0.0, 0.1167, 0.1042, 0.2609, 0.1605, 0.0, 0.2897, 0.0766, 0.0083, 0.1062], [0.3105, 0.0, 0.0, 0.2083, 0.3573, 0.1377, 0.0864, 0.0, 0.5327, 0.1667, 0.075, 0.2766], [0.8319, 0.0, 0.0588, 1.0, 0.6452], [0.4758, 0.0435, 0.0, 0.6583, 0.2333, 0.25, 0.0123, 0.0, 0.4813, 0.2207, 0.0167, 0.2015], [0.0435, 0.0, 0.7167, 0.3672, 0.4638, 0.0494, 0.0, 0.9299, 0.3288, 0.3667, 0.2454], [0.849, 0.1739, 0.0, 0.8667, 0.7047, 0.7246, 0.358, 0.4, 1.0607, 0.3784, 0.7917, 0.641], [1.265, 0.0435, 0.1765, 1.1333, 0.871, 0.6993, 0.5062, 0.15, 1.5654, 0.6577, 1.05, 0.6886], [1.2821, 0.0, 0.1471, 1.35, 0.8412, 0.7138, 0.321, 0.0333, 1.5935, 0.7342, 1.0583, 0.7179]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

