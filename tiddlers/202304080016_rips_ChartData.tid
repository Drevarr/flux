created: 20230408001602000
creator: Drevarr
modified: 20230705163524823
modifier: drevarr
tags: ChartData
title: 202304080016_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Etcheryy", "Oo Dads Mad", "Reyga Bannerclaw", "Rina Of Theros", "Dark Sidiuz", "Be\u00eb", "Panther B Me", "Arcanophage Farra", "Newtype Khan", "Rozaalyna", "Black Raspberry Pie", "Smol Gluvs", "Anita Strips"];
const professions = ["Chronomancer", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.1321, 0.561, 0.961, 0.2241, 0.4528, 0.4557, 0.6479, 0.1467], [0.1509, 0.2439, 0.8182, 0.5862, 0.3774, 0.0, 0.5423, 0.6933, 0.1818, 0.2055, 0.0, 0.5167], [0.336, 0.7192, 0.4274, 0.5824, 0.8833, 1.2857, 0.35, 0.0458], [0.0, 0.5854, 0.7273, 0.6897, 0.5283, 0.0759, 0.0493, 0.9067, 0.3636, 0.9589, 0.0667, 1.2167, 0.7619, 0.0265, 0.7288, 0.0, 0.8224], [0.1887, 0.1463, 0.2727, 0.2759, 0.2453, 0.3544, 0.1479, 0.48, 0.2424, 1.0411, 0.0333, 0.6333, 0.4286, 0.0, 0.661, 0.0, 0.5461, 0.5778, 0.232, 0.4346, 0.094, 0.3736], [1.3208, 1.0732, 1.4675, 0.7586, 0.8679, 0.1266, 0.9155, 0.0, 0.303, 0.8493, 0.2, 1.3333, 1.7778, 0.8462], [0.4906, 0.1951, 0.3117, 0.3276, 0.2642, 0.2658, 0.4014, 0.6133, 0.0, 0.1233, 0.0, 0.6, 0.7143, 0.0, 0.5424, 0.3355, 0.9778, 0.904, 0.4731, 0.2009, 0.3846, 0.3, 0.7662, 0.625, 0.0359], [1.0566, 0.1707, 0.961, 0.5172, 0.3396, 0.0633, 0.0423, 0.36, 0.0909, 0.7534, 0.0, 1.2, 0.4603, 0.0132, 0.0847, 0.0, 0.625, 1.1556, 0.736, 0.8115, 0.3376, 0.044, 0.9667, 1.1688, 0.625, 0.0261], [1.4528, 0.2683, 0.974, 0.4828, 0.6415, 0.0, 0.4507, 0.4667, 0.4848, 0.3562, 0.0, 1.1667, 0.9841, 0.0199, 0.7627, 0.4, 0.5395, 1.4778, 0.848, 0.6462, 0.2521, 0.7363, 0.9583, 0.7792, 0.9, 0.0948], [1.8113, 0.5854, 1.1429, 0.6121, 0.6415, 0.0127, 0.3662, 0.36, 0.1212, 0.589, 0.1, 1.1, 0.8095, 0.0331, 0.4576, 0.1, 0.6053, 1.5333, 1.0, 0.4846, 0.5214, 0.9121, 0.8167, 1.1169, 0.775], [0.283, 0.2927, 1.7013, 0.6293, 0.5283, 0.3291, 0.4507, 0.6667, 0.1515, 0.4658, 0.6667, 0.7833, 0.5873, 0.1589, 0.2542, 0.025, 0.5066, 1.2556, 0.864, 0.7538, 0.3932, 0.9341, 1.3167, 0.6364, 0.675, 0.1078], [1.0377, 0.5854, 1.026, 0.3534, 0.4528, 0.0253, 0.6056, 0.52, 0.5455, 0.3973, 0.1667, 0.95, 0.9841, 0.0199, 0.5763, 0.9145, 1.2889, 1.224, 0.7654, 0.4957, 1.1099, 1.1167, 1.2597, 1.05, 0.0392], [1.9245, 0.9756, 1.3636, 1.0776, 0.9057, 0.5316, 0.831, 0.6933, 0.3333, 1.3699, 0.0, 1.5667, 1.0952, 0.2053, 0.5593, 0.025, 1.2632, 2.0556, 1.192, 0.7346, 0.3034, 0.956, 1.4667, 1.039, 1.625, 0.0817]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

