created: 20230626013408000
creator: Drevarr
modified: 20230705163538716
modifier: drevarr
tags: ChartData
title: 202306260134_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Skylar Shadowmoon", "Newtype Khan", "Mememonoko", "Minka Bringer", "Lucky Leipreach\u00e1n", "Morv\u00e4rth"];
const professions = ["Scrapper", "Scrapper", "Spellbreaker", "Vindicator", "Scrapper", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5884, 1069, 564, 112, 10597, 1390, 77, 7917, 664, 462, 1640, 2081, 3492, 516, 8634, 6816, 430, 55, 133, 161, 824, 1959, 14097, 4684, 3966, 4124, 922, 0, 8060, 6017, 104, 6391, 206], [65, 3616, 0, 67190, 12980, 0, 0, 0, 11279, 6074, 5274], [3406, 317, 0, 0, 12861, 3494, 416, 6880, 0, 4589, 3381, 3437, 6059, 1617, 3404, 3399, 7006, 0, 4810, 4282, 108, 3450, 6866, 3765, 3503, 2517, 0, 0, 6985, 6574, 0, 3379, 3637], [7844, 0, 0, 619, 262, 0, 3484, 0, 0, 0, 0, 0, 0, 623, 2495, 0, 0, 0, 0, 0, 15136, 8342, 7230, 11800, 552, 11720, 8078, 15822, 10963, 15219], [16861, 1208, 2520, 18198, 4230, 273, 2407, 13287, 7461, 3626, 11384, 6076, 12758, 4411, 0, 13209, 4748, 3542, 8930, 2136], [19026, 0, 118158, 6620, 5960, 12149, 3726, 3267, 10843, 5366, 12418, 16343, 13062, 2581, 32723, 1140, 2691, 12864, 0, 10382, 20091, 7777, 14230], [17806, 8395, 6158, 176622, 5168, 0, 21893, 2933, 29269, 35284, 41263, 43980, 8344, 40389, 23398, 19446, 0, 8251, 26797, 21918, 21999, 90477, 31888, 40937, 36321]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

