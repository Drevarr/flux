created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasah", "Fribble Bibble", "Arriasa", "Hyde En Sikh", "Koralia Danai", "Necrotic Windrunner", "Bella Sassy", "Drevarr Moonwillow", "Rahani Sunray", "Miphest\u00f6", "Gavann", "Black Raspberry Pie", "Necrotic Windrunner", "Glorious Gluvs", "Daphne Agla\u00e9", "Elonith Requiem", "Body Ody Ody", "Tootsie Pop Rocks", "Elonith Requiem", "Ateriuz", "Lord Erin The Wise", "Xanvias Einzbern"];
const professions = ["Vindicator", "Scrapper", "Druid", "Chronomancer", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Reaper", "Berserker", "Reaper", "Reaper", "Berserker", "Scrapper", "Scourge", "Berserker", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[174.7765, 238.6538], [13.3765, 66.0577, 29.2794, 34.3492, 6.2055, 14.6136, 19.2381, 95.0833, 173.32, 13.2301, 74.314, 35.0879], [22.5294, 72.7937, 17.5616, 67.7727, 132.7143, 90.1389, 0.3, 22.2035, 0.0, 122.956], [0.0, 8.2308, 0.0, 1.9524, 58.7945, 134.3068, 10.9881, 148.8194, 110.4, 67.354, 32.9884, 64.2637], [15.4118, 28.4615, 60.3971, 67.0317, 17.2603, 70.7955, 148.0595, 82.9583, 214.9, 7.4956, 30.7326, 7.967], [473.2, 144.5192, 300.1765], [11.0235, 13.7308, 268.9265, 15.8413, 32.0822, 80.7727, 86.3571, 135.8472, 253.14, 89.7699, 14.2558, 55.5824], [13.2941, 56.4615, 29.5588, 39.5873, 59.2192, 230.4773, 53.4405, 110.375, 192.84, 101.0531, 121.3605, 53.1099], [84.1059, 51.0385, 39.8529, 81.6825, 42.0959, 229.0568, 12.25, 208.0278, 186.0, 102.5044, 88.814, 24.4286], [189.4, 19.5385, 149.1029, 49.9683, 33.2877, 340.2614, 76.9048, 303.9444, 297.9, 205.2124, 136.8023, 145.7582], [394.6824, 802.9038, 350.5735, 136.8095, 29.4932, 524.4659, 112.4286, 145.5972, 158.72, 187.1947, 187.0698, 24.5055], [120.9765, 72.9231, 354.1765, 308.4286, 209.6575, 599.8409, 167.9405, 975.9167, 542.88, 416.7788, 536.7326, 250.4176], [269.9048, 231.7808, 687.1591, 592.9762, 1083.8611, 1008.64, 377.469, 443.3023, 75.4286], [533.0471, 139.2115, 129.3971, 279.7302, 352.7808, 411.7614, 232.5833, 2091.7083, 453.54, 174.292, 452.1628, 98.5165], [9.3059, 639.6346, 442.2647, 290.6349, 251.9315, 329.5795, 847.2024, 1474.5833, 729.24, 233.0265, 686.7209, 259.4505], [1820.3824, 1431.9683, 1952.3151, 1272.2045], [516.2118, 756.3269, 1081.9412, 0.0, 0.0, 297.0795, 1489.3095, 2033.2639, 2958.2, 1141.7876, 807.0698, 0.0], [585.5412, 285.6154, 1389.0441, 373.6825, 391.9452, 2171.1477, 862.3095, 1943.25, 2638.68, 74.3451, 518.7093, 130.7033], [1656.0824, 974.6346, 1593.9524, 89.625, 2915.06, 1578.7611, 2171.1047, 485.1209], [1238.4353, 866.7885, 840.1765, 2140.7937, 874.1233, 828.8295, 947.9405, 2911.0972, 1869.24, 1749.4425, 3581.1512, 145.4286], [845.8235, 564.0769, 883.25, 2452.7302, 1145.1918, 2138.7841, 2306.4286, 3044.0972, 4902.78, 2300.5221, 1944.314, 359.8901], [2317.5765, 3193.0577, 456.6912, 2527.0952, 4601.4247, 3546.7841, 1778.1071, 3274.875, 6383.8, 4131.2655, 1815.5233, 1065.5824]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

