created: 20230531221142000
creator: Drevarr
modified: 20230705163532559
modifier: drevarr
tags: ChartData
title: 202305312211_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Artakama Nahid", "Venomina The Siren", "Belvyn Brightblade", "Eibh\u00ebar", "Cat Wigglebooty", "Ryvalia Fazebringer", "Newtype Khan", "Primal Clone", "Black Raspberry Pie", "Sub Train", "Brace Stonebrow", "Etchery Of Ascalon", "Blanco Padre Guard", "Crusader Siolith", "Tribal S", "Gavann", "Johosh Of The North", "Drevarr Moonwillow", "Arriasa", "Solus Sanctus", "Miphest\u00f6", "Koralia Danai", "Tika Fiery", "Bella Sassy", "Sygaldry Verdandi"];
const professions = ["Spellbreaker", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Druid", "Firebrand", "Tempest", "Scrapper", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[202.5465, 128.9122, 9.3312, 606.9336], [201.2205, 52.8418, 24.4944, 510.4467, 190.8178, 0.0, 19.4746, 41.6472, 73.085, 46.1324, 30.9918, 71.9044, 132.4887, 19.5149, 59.1523], [94.4775, 96.1747, 31.7952, 645.0615, 242.4324, 0.0, 67.7102, 192.7848, 121.3775, 42.998, 27.7676, 0.0, 0.0, 0.0, 0.0], [309.2895, 276.7061, 34.6032, 1263.6669], [294.7035, 142.7678, 10.4112, 753.2202, 198.1913, 27.1566, 31.9166, 38.7168, 88.2425, 61.8849, 67.445, 125.6893, 83.9679, 20.4442, 20.1997], [304.98, 135.1608, 40.2624, 750.1077, 237.2933, 35.6843, 46.1168, 54.3456, 100.11, 84.3885, 59.3516, 88.0742, 135.1843, 12.5312, 0.0], [401.778, 133.259, 31.1904, 720.5391, 214.5024, 48.222, 28.5356, 106.4712, 145.465, 63.2512, 58.8252, 101.2624, 115.1021, 23.767, 21.6999], [280.449, 154.1784, 26.2224, 687.08, 238.4105, 58.1202, 41.7441, 77.7, 106.1025, 129.7172, 55.6668, 158.1437, 120.089, 37.5373, 45.8645], [345.0915, 180.2597, 35.7696, 929.8534, 257.4029, 44.6688, 22.7654, 90.8424, 120.32, 87.764, 53.7586, 182.1118, 116.4499, 12.5875, 0.0], [380.8935, 204.7109, 38.3184, 871.4944, 277.5125, 23.9333, 49.047, 63.6696, 124.315, 71.3686, 58.9568, 221.3324, 143.0016, 7.7158, 6.9118], [520.7865, 210.552, 67.7376, 1052.7964, 233.2714, 33.4508, 25.6956, 45.288, 186.9425, 109.8658, 58.3646], [959.6748, 34.2122, 46.748, 315.5064, 254.6225, 301.709, 158.5122, 524.2023, 491.8122, 64.1485, 20.1997], [973.6155, 336.4757, 91.368, 1886.941, 116.6357, 34.6437, 11.811, 38.5392, 303.2675], [816.153, 340.8226, 24.1056, 1438.7439, 288.6845, 25.5323, 64.7349, 87.912, 189.41, 251.7188, 36.9796, 203.213, 368.4885, 35.0592, 96.2833], [743.886, 320.8541, 92.4048, 1767.8886, 391.2434, 23.3242, 157.3292, 103.452, 109.3925, 89.6125, 136.9298, 360.2099, 196.7788, 37.5091, 35.6307], [903.669, 387.6874, 52.1424, 1658.9518, 595.691, 31.8773, 87.1396, 195.1824, 198.81, 173.5188, 109.228, 235.7821, 243.0083, 40.0435, 21.432], [1153.62, 307.9493, 27.9072, 1745.3232, 457.3817, 4.01, 36.8304, 94.7496, 106.22, 147.3182, 67.8398, 495.0736, 551.9241, 87.3242, 124.4663], [919.581, 538.0622, 27.6048, 2252.6574, 13.6298, 45.4302, 101.5652, 220.9344, 363.6625, 163.0707, 208.6518, 380.6229, 458.5216, 44.2112, 0.0], [764.7705, 313.3829, 161.6112, 1844.9225, 674.7888, 46.3693, 136.6375, 257.964, 275.7725, 312.3178, 143.5756, 277.2962, 390.9968, 65.2749, 91.5682], [893.724, 442.7026, 142.2576, 2016.1089, 673.2247, 33.7554, 107.9215, 252.8136, 188.47, 237.2522, 138.509, 300.0029, 339.2413, 16.7552, 135.0752], [1002.456, 440.9366, 53.7408, 2374.8222, 675.906, 29.39, 104.9913, 365.7672, 273.07, 159.8559, 230.1026, 416.1737, 370.5102, 88.5069, 36.2201], [1085.994, 429.9336, 70.8048, 2615.2613, 545.1936, 23.8064, 104.225, 191.0976, 334.405, 228.0097, 185.2928, 376.7238, 735.0901, 0.0], [1636.284, 568.2187, 163.6416, 2942.0717, 1056.8712, 40.1004, 74.5172, 376.8672, 396.445, 0.0, 99.0633, 25.344, 107.803], [1266.993, 517.5504, 84.4128, 3338.1348, 637.0274, 65.0489, 121.6258, 316.3944, 349.445, 273.4187, 172.1986, 297.7093, 473.2126, 11.0106, 22.1821], [1096.2705, 533.3078, 148.392, 2570.1304, 781.3697, 70.0742, 227.5638, 441.336, 459.66, 288.2068, 228.9182, 555.3952, 643.4397, 74.7085, 130.0387], [1283.2365, 679.8792, 94.5648, 3069.6834, 837.0062, 15.1265, 173.558, 310.9776, 352.3825, 365.6031, 277.8076, 707.0022, 497.473, 92.2112]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

