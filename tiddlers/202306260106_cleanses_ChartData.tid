created: 20230626010646000
creator: Drevarr
modified: 20230705163537112
modifier: drevarr
tags: ChartData
title: 202306260106_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Iskalla", "Pale Pam", "Rednuii", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1753, 0.0, 0.3448, 0.0, 0.2113, 0.1667, 0.0531, 0.1346, 0.0889, 0.0, 0.0, 0.0312, 0.0182, 0.1212, 0.0, 0.0, 0.08, 0.0, 0.1778, 0.0, 0.0, 0.2264, 0.0, 0.0123, 0.098, 0.0, 0.1529, 0.0, 0.0204, 0.0, 0.2024], [0.0515, 0.0, 0.1034, 0.0978, 0.1338, 0.0, 0.1938, 0.0, 0.1111, 0.0222, 0.1538, 0.0781, 0.0909, 0.1948, 0.0, 0.0806, 0.18, 0.0698, 0.1778, 0.069, 0.0, 0.1132, 0.0263, 0.0, 0.0864, 0.0196, 0.0, 0.1412, 0.0241, 0.1327, 0.0145, 0.1786, 0.125, 0.0, 0.1351, 0.1852, 0.1094, 0.1364], [0.9485, 0.0, 0.7586, 0.0, 0.9789, 1.5417, 0.3781, 1.7115, 0.2444], [0.3299, 0.0357, 0.6034, 0.0217, 0.3169, 0.2656, 0.6731, 0.1333, 0.4, 0.1154, 0.2969, 0.2, 0.29, 0.0, 0.1129, 0.02, 0.0, 0.0667, 0.0, 0.0263, 0.0, 0.0, 0.4568, 0.2157, 0.0, 0.1882, 0.0, 0.3061, 0.2029, 0.6429, 0.35, 0.0, 0.2297, 0.0, 0.3438, 0.5114], [0.0, 0.0952, 0.1395, 0.0, 0.7113, 0.0714, 1.0345, 0.2826, 1.0211, 0.5208, 0.7219, 0.7885, 0.5778, 1.0222, 0.7308, 0.7812, 0.4, 0.5887, 0.3077, 1.0323, 1.12, 0.6977, 1.2222, 0.931, 1.4211, 0.8868, 0.0, 0.4643, 0.7901, 0.9412, 0.725, 0.9059, 0.0482, 0.7959, 0.4493, 1.4405, 0.75, 0.0, 0.7432, 1.037, 0.8125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

