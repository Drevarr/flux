created: 20230408001602000
creator: Drevarr
modified: 20230705163524728
modifier: drevarr
tags: ChartData
title: 202304080016_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Mac Chiato", "Mike The Archmagus", "Zenek Tryst", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[618.8302, 73.8537, 852.2987, 737.6983, 90.0755, 73.8481, 620.5915, 581.7867, 19.3333, 742.3699, 6.0667, 637.2667, 151.6825, 11.8079, 98.1017, 0.0, 467.5855, 591.2333, 226.368, 382.3615, 466.7308, 672.8571, 533.8, 551.2987, 85.2, 276.0163], [671.717, 165.1707, 1097.3377, 923.9914, 222.6415, 76.0886, 258.6408, 1019.4267, 935.2055, 194.3, 1728.0167, 1436.5556, 121.1987, 0.0, 44.125, 1106.5526, 1220.2889, 777.856, 750.5192, 558.5513, 1847.956, 369.5667, 950.2468, 194.625, 511.1699], [1526.9623, 117.878, 2612.9221, 698.0259, 312.0, 370.0633, 1650.338, 502.2, 29.9697, 1172.1644, 579.5667, 1382.4167, 2911.9524, 307.8808, 1752.0508, 539.75, 323.0987, 1295.9667, 1481.712, 960.0269, 766.5, 822.6813, 1082.8, 947.0649, 501.1, 769.5], [1724.2453, 143.4878, 2205.6104, 970.6034, 433.9057, 392.6835, 935.5141, 1217.28, 419.1212, 1466.5479, 304.8667, 1599.3333, 2428.873, 340.8609, 551.8475, 653.275, 1492.9868, 1644.2667, 823.632, 1194.9577, 815.8761, 1360.7473, 1889.325, 1342.6234, 543.95, 974.2908], [1957.8113, 348.4878, 2353.8571, 1056.8879, 316.7925, 225.5063, 1749.9014, 1372.2133, 1176.0606, 1317.8904, 7.6667, 1209.7833, 2612.0635, 220.8212, 701.6271, 465.8, 1735.2632, 1457.6667, 894.192, 1006.8269, 959.2521, 1289.4066, 1636.6583, 1724.0, 264.85, 1141.0588], [3126.2453, 218.6098, 3036.1688, 2601.5517, 459.8491, 494.6329, 2084.9718, 1173.1467, 376.0, 1686.8082, 352.5667, 2935.3833, 2081.7619, 319.7285, 715.5593, 248.95, 1635.5921, 1570.8111, 1253.064, 1411.3192, 1314.3248, 3476.7582, 2390.825, 1912.4935, 750.275, 1292.6275]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

