created: 20230607222341000
creator: Drevarr
modified: 20230705163534333
modifier: drevarr
tags: ChartData
title: 202306072223_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Tootsie Pop Rocks", "Lord Erin The Wise", "Skye Nightroad", "Cyclotechnist Farra", "Mistwalker Cael", "Permanent Dawn", "Uneeta Healah", "Arriasa", "Zayde Sunsabre", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Weaver", "Scrapper", "Scrapper", "Vindicator", "Weaver", "Scrapper", "Druid", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 822.719, 0.0, 94.9709, 24.463, 0.0, 32.292, 26.0526, 27.715, 0.0, 18.0476, 32.568, 40.9899], [32.0107, 122.36, 1058.5955, 0.0, 340.8619, 52.5972, 0.0, 34.304, 5.5075, 75.7029, 0.0, 38.7325, 0.0, 94.3593], [20.5718, 70.84, 1517.814, 222.6979, 27.9283, 22.8396, 47.6928, 8.1089, 105.8558, 29.2744], [25.092, 143.244, 1931.4525, 232.3709], [69.003, 116.058, 1987.288, 32.039, 83.869, 87.1131, 76.0849, 28.4764, 110.0044, 43.8992, 32.0896, 127.5914], [65.682, 97.704, 2188.9795, 78.665, 222.2582, 54.1412, 54.8467, 14.7331, 62.7436, 24.5173, 12.3427, 71.4288, 89.5175], [84.7777, 141.082, 2748.474, 61.0826, 222.4781, 57.4693, 16.0944, 47.7176, 4.0481, 80.1938, 42.5911, 0.0, 19.7248, 114.1115], [258.2078, 132.296, 3258.97, 199.5928, 117.2846, 64.2283, 1.3272, 149.7355, 46.1535, 51.7945, 70.7836, 50.5908, 175.2416, 189.929], [273.798, 313.49, 3401.4075, 168.0747, 353.6126, 72.7372, 30.786, 87.7597, 79.4902, 112.4423, 16.8964, 48.9224, 57.2976, 117.3577], [172.0462, 153.732, 3872.021, 237.6229, 208.7381, 88.6227, 0.0, 80.3326, 9.949, 117.6175, 40.2394, 129.1312, 126.656], [220.7542, 225.538, 3717.049, 243.7442, 246.6605, 108.5568, 27.762, 99.981, 37.4482, 154.5708, 70.8313, 25.8515, 29.5136, 210.6166], [272.0453, 306.958, 7316.7295, 494.7818, 593.2382, 172.3391, 51.6852, 157.883, 73.0436, 260.0416, 29.1948, 115.9283, 153.3456, 206.215]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

