created: 20230625215204000
creator: Drevarr
modified: 20230705163536759
modifier: drevarr
tags: ChartData
title: 202306252152_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Drumina", "Oo Dads Mad", "Newtype Khan", "Miphest\u00f6", "My Birthday Girl", "Grasszanine", "Blancooo Padreee", "Arcanophage Farra", "High Sorcer Baradun", "Johosh The Mighty", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Tempest", "Druid", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.296, 0.308, 0.713, 0.228, 0.346, 0.325, 0.724], [0.216, 0.434, 0.364, 0.552, 0.546, 0, 0.641, 0, 0.388, 0.053, 0.393, 0.262, 0, 0, 0, 0.346, 0, 0], [0, 0.363, 0.607, 0.308, 0.456, 0, 1.07, 0, 0.646, 0.624, 0.499], [0.505, 0.363, 0.455, 0.582, 0.456, 0, 1.068, 0, 0.647, 0.181, 0.654, 0, 0.417, 0, 0, 0.288, 0.271, 0], [0.303, 0.436, 0.364, 0.369, 0.547, 0.644, 0, 0.298, 0.511, 0.437, 0.263, 0.31, 0.713, 0, 0.515], [0, 0.521, 0, 0.69, 0.853, 0, 1.602, 0, 0.194, 0.686, 0.716, 0, 0.154, 0, 0.008, 0.247, 0, 0], [0, 0.363, 0.607, 0.615, 0.456, 2.445, 1.068, 0, 0.648, 0.416, 0, 0.438, 0, 0.862, 0, 0.288, 0.271, 1.203], [0, 0.363, 0.699, 0.576, 0.898, 0, 0.737, 0.815, 0.653, 0.435, 0, 0, 0, 0.576, 0.271, 0], [0, 0.363, 1.325, 0.615, 0.457, 0, 1.07, 0, 0.645, 0.625, 0.654, 0, 0, 1.184, 0.475, 0.36, 0.271], [0.151, 0.434, 0.364, 0.743, 0.547, 1.284, 0.824, 0.775, 0.625, 0.33, 0.525, 0.308, 0.714, 0.454, 0.518, 0], [0.505, 0.808, 1.212, 1.276, 0.911, 0, 1.074, 0, 0.647, 0.833, 1.307, 0.436, 0.608, 1.514, 0.38, 0.801, 0.271, 0.284], [1.061, 1.267, 0.818, 1.497, 1.847, 0.848, 1.282, 1.519, 2.033, 1.06, 0.337, 0.909, 0.769, 1.024, 0.682, 0.95, 0.447, 0.904], [1.173, 1.292, 1.64, 1.752, 1.543, 2.045, 1.287, 1.659, 1.162, 0.686, 1.5, 1.019, 1.541, 0.891, 0.484, 0.604, 0.744, 1.379]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

