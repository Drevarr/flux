created: 20230626012920000
creator: Drevarr
modified: 20230705163538674
modifier: drevarr
tags: ChartData
title: 202306260129_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "N\u00e8yp\u00e4", "Sl\u00e4ngin", "Free H\u00e4nd", "Ygyn", "Alarics Clone", "Imalou", "Kosair", "Traidoruns Maximus", "Astraea Lumena"];
const professions = ["Druid", "Firebrand", "Berserker", "Renegade", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6548, 0.1354, 0.1069, 0.6803, 0.4606, 0.1901, 0.6137, 1.4463, 0.0, 0.6613, 0.0, 0.0, 0.1361, 0.0, 0.5794, 0.8458, 0.306, 0.7821, 1.1057, 0.7383, 0.0, 0.0], [0.0, 2.1488, 1.39, 0.7494, 2.7146, 2.5978], [0.0, 0.9306, 0.0, 0.0, 0.7154, 0.0, 0.0, 0.2648, 0.0, 0.6472, 0.0, 0.0, 0.0, 0.8405, 1.0649, 1.1659, 1.0557, 1.0483, 0.0, 0.9095, 1.0348, 1.071], [4.6835, 5.4999, 1.114, 2.934], [0.2259, 3.7426, 0.4608, 0.0, 1.5309, 1.885, 0.0082, 1.8059, 3.2283, 0.441, 1.6532], [0.0, 0.7529, 2.0196, 3.7271, 1.4112, 2.8037, 0.0, 0.0, 0.0, 1.618, 0.6084, 0.0, 2.7443, 3.1742, 0.0], [2.3134, 1.1167, 3.5003, 2.4402, 4.6094, 1.6279, 6.5388, 3.7145, 1.3428, 2.0866, 1.6891, 2.0441], [2.3324, 2.1067, 6.4406, 10.2665, 0.1636, 5.6843, 1.026, 5.8906, 4.8122, 6.9871, 0.0, 3.237], [2.4296, 1.5905, 1.0454, 2.2382, 2.0776, 3.8966, 1.9315, 10.1239, 0.3583, 6.6973, 0.2376, 3.1465, 2.8463, 1.3709, 0.3019, 5.3264, 6.1506, 6.007, 6.0126, 8.0892, 0.1924, 2.619], [4.5839, 2.6734, 1.877, 5.0878, 3.7142, 6.4627, 4.2959, 16.2145, 2.3837, 6.4581, 0.2124, 3.4894, 2.5175, 4.5614, 2.9988, 8.3896, 9.1647]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

