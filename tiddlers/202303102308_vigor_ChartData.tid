created: 20230310230833000
creator: Drevarr
modified: 20230705163521689
modifier: drevarr
tags: ChartData
title: 202303102308_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["R\u00fana Bierdna", "Raimaru Hanzo", "Zefirokai", "K\u00f4sair", "Zadie Miststep", "Rayge Storm", "Tegan Parker", "Arcanophage Farra", "Riann Swordbreak", "Mac Chiato", "\u00c1rkantor", "Alatreon", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Vindicator", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[64.944, 131.2794, 70.7388, 40.0085, 26.9399, 247.8125, 54.8969, 34.5359, 0.0, 20.2156, 23.4471, 38.2618, 16.7254, 49.9634, 0.0, 0.0, 39.7056], [0.0, 103.6519, 79.9235, 25.4311, 28.1934, 0.0, 0.0, 0.0, 0.0, 33.0662, 165.1012, 66.2578, 110.5533, 69.3999, 103.734, 107.1432, 90.8208, 23.5954, 70.6138], [86.0805, 103.4586, 3.036, 45.08, 0.0, 486.475, 0.0, 74.6482, 59.2107, 0.0, 16.4137, 26.6812, 58.656, 0.0, 45.5876, 0.0, 0.0, 41.3807, 0.0, 0.0, 8.5597, 32.6913, 54.0206, 13.017, 28.3784, 0.0, 1.35], [0.0, 65.644, 73.2214, 0.0, 47.7466, 56.4299, 54.9562, 0.0, 111.625, 0.0, 0.0, 54.2436, 46.656, 0.0, 109.2459, 61.0667, 82.9074, 118.597, 54.3924, 63.72, 40.4478, 78.0759, 45.6256, 135.8818], [0.0, 146.4939, 26.4132, 0.0, 0.0, 891.3625, 0.0, 125.3335, 26.6381, 31.3531, 0.0, 0.0, 60.2352, 30.6083, 56.8394, 31.3342, 0.0, 0.0, 0.0, 0.0, 0.0, 56.16, 78.7512, 50.6678, 65.9587, 21.402, 31.59, 33.2442, 0.0, 13.4216, 133.7683], [197.4412, 215.257, 27.508, 1627.175], [59.4, 156.6369, 57.0768, 92.1725, 31.993, 956.175, 27.09, 0.0, 24.4518, 31.102, 0.0, 0.0, 83.6525, 28.1464, 31.7462, 31.6087, 0.0, 29.3242, 23.4658, 24.3122, 0.0, 83.8276, 145.8279, 58.652, 63.5135, 27.3267, 55.782, 28.6488, 23.7119, 50.9473, 74.3434], [75.6855, 83.3175, 108.0816, 234.899, 8.4019, 1538.725, 0.0, 83.2168, 94.0143, 115.7848, 13.3722, 101.8358, 71.4701, 0.0, 0.0, 56.291, 1.6234, 136.6875, 0.0, 98.1488, 122.6861, 30.272, 111.2612, 45.1008, 0.0, 19.4166, 11.5454, 0.0, 30.2719], [62.1225, 270.963, 110.9152, 195.937, 2.7209, 1592.8625, 45.171, 115.6031, 86.2058, 87.7804, 0.0, 35.1231, 88.751, 60.2014, 60.3668, 0.0, 25.5645, 1.2822, 0.0, 34.2995, 0.0, 45.2129, 22.5892, 0.0, 118.5327, 0.0, 94.986, 0.0, 0.0, 122.3986, 99.7668], [0.0, 106.9684, 141.7605, 62.192, 1411.3875, 48.8565, 356.104, 87.5891, 95.8594, 30.9134, 4.4944, 113.2512, 60.2267, 44.2482, 67.1986, 36.3348, 0.0, 64.5529, 22.7776, 164.806, 114.9491, 51.4624, 121.2354, 24.4818, 54.54, 50.8392, 46.2029, 75.4426, 90.6293], [111.7215, 321.0984, 159.0864, 123.5675, 72.6271, 1720.2, 6.615, 148.7155, 87.8122, 56.9296, 47.5369, 86.0123, 72.3274, 31.8265, 63.6709, 35.8644, 6.5722, 13.2352, 19.6718, 80.5909, 28.073, 98.9736, 77.5078, 71.0635, 98.0694, 68.1471, 68.472, 59.4918, 21.2701, 54.3124, 143.5274], [294.8715, 844.3323, 418.5632, 469.798, 136.045, 2883.0125], [107.514, 481.3578, 250.5712, 257.6805, 38.0627, 3258.925, 66.276, 478.3876, 184.9499, 147.2635, 116.9674, 109.602, 214.7261, 102.2814, 157.6592, 132.132, 51.2532, 74.7996, 47.3693, 105.4863, 52.9905, 135.2639, 184.3054, 175.4262, 325.5466, 94.3254, 304.56, 87.3954, 80.0037, 199.25, 243.9158]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

