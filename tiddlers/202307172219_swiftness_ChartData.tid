created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Aira Draugr", "Belvyn Brightblade", "Oo Dads Mad", "Rozaalyna", "Bee Nemesis", "Legacy Of Mathus", "Tegan Parker", "Tootsy Pop Star", "Drumina", "Zefirokai", "Xanvias Einzbern", "Be\u00eb", "Ryvalia Fazebringer", "Rina Of Theros", "Mistwalker Cael", "Eibh\u00ebar", "Primal Clone", "Miphest\u00f6", "Lucky Luprac\u00e1n", "Johosh The Mighty", "Morton Saltbringer", "Venomina", "Mmathuss", "Ateriuz", "High Sorcer Baradun", "Black Raspberry Pie", "Newtype Khan", "Sygaldry Verdandi", "Sub Train", "Koralia Danai", "Solus Sanctus", "Drevarr Moonwillow", "Bella Sassy", "Crusader Siolith"];
const professions = ["Scrapper", "Herald", "Firebrand", "Berserker", "Scourge", "Berserker", "Berserker", "Tempest", "Scourge", "Druid", "Catalyst", "Berserker", "Scourge", "Chronomancer", "Scourge", "Vindicator", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Berserker", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[85.9183, 59.9936, 88.7297, 256.2872, 57.2227, 0.0, 43.7965, 37.98, 96.7718], [10.3569, 374.2733, 6.2404, 32.7163, 319.2879], [126.5989, 512.6003, 147.9622, 93.0258, 227.9], [81.6316, 487.3063, 185.897, 29.4806, 453.2931], [66.2055, 474.264, 240.2539, 137.4265, 23.2458, 104.1632, 19.2802, 145.0467, 57.8242, 3.744, 36.9683], [0.0, 263.6416, 39.9811, 338.29, 127.5912, 26.9424, 25.959, 177.4426, 360.8467], [71.5806, 371.902, 240.5823, 141.2914, 365.3237, 164.9824, 30.9702], [0.0, 386.9204, 129.0769, 166.1881, 252.0574, 58.7552, 33.6491, 105.7585, 62.4638, 0.0, 53.001, 102.6979, 77.5085], [82.9426, 531.5709, 245.3447, 80.892, 239.295, 248.5056, 47.815], [0.0, 433.9516, 251.7493, 119.5404, 63.1283, 110.768, 21.1068, 122.2047, 103.7914, 81.3888, 57.3024, 158.3006, 1.441], [320.7017, 523.9402, 62.8416, 69.575, 278.9251, 314.0534], [110.0803, 545.4036, 416.4619, 55.9952, 343.2174, 275.0624, 37.9517], [53.7073, 626.0285, 205.275, 36.0419, 573.6243, 0.0, 78.4605, 175.1981, 30.3298, 0.0, 30.7718, 0.0, 106.5552], [30.3278, 699.9346, 84.9017, 64.8035, 241.3461, 0.0, 0.0, 470.7736, 183.3533, 0.0, 157.6192, 0.0, 107.8445], [86.526, 452.1317, 173.0879, 118.372, 306.2976, 170.7616, 66.1617, 269.3072, 118.5696, 59.0976, 18.6797, 109.2811, 106.3277], [81.8501, 703.4916, 258.3181, 62.916, 218.1003, 206.6752, 98.5931, 221.339, 65.2133, 9.8208, 57.8138, 92.975, 135.4502], [67.0358, 580.183, 147.798, 129.9665, 433.4658, 187.5488, 88.608, 197.8117, 94.4261, 28.0944, 37.6602, 145.5394, 116.3386], [39.6796, 555.2841, 157.8154, 91.2282, 436.6564, 225.3888, 88.2832, 347.4268, 156.2885, 20.7072, 36.5472, 47.0952, 133.4026], [88.0555, 804.6679, 200.02, 26.7842, 289.2051, 248.2304, 191.0571, 349.4826, 250.1131], [62.3599, 612.9862, 273.2621, 47.906, 273.48, 272.5856, 28.9407, 365.472, 186.0168, 60.6384, 51.4067, 151.3123, 81.528], [105.6666, 513.786, 241.4034, 170.8619, 353.0171, 339.5968, 32.5938, 323.6711, 184.6421, 50.7312, 47.8272, 160.8326, 38.4509], [113.4015, 565.1646, 284.1006, 65.2529, 363.0447, 358.9984, 26.4647, 390.5982, 127.1616, 46.44, 45.511, 128.5243, 54.4531], [71.5806, 547.7749, 258.4823, 69.657, 232.9138, 175.1648, 36.7745, 444.9622, 121.319, 22.3488, 119.4778, 237.0965, 239.8061], [1221.3617, 529.0094, 70.0262, 698.9333, 305.711], [66.5988, 831.5429, 246.4942, 124.6636, 469.2461, 229.5168, 217.8465, 404.7602, 89.5286, 12.0096, 88.0742, 182.7091, 191.1926], [169.3375, 940.2284, 169.6393, 254.8098, 435.9727, 224.7008, 57.0695, 328.0111, 155.3434, 0.0, 44.7891, 211.8778, 220.6186], [190.1824, 1037.4525, 310.2116, 210.6787, 591.1726, 330.6528, 133.257, 362.731, 176.9952, 40.32, 69.0035, 106.5466, 143.7168], [63.3213, 1006.6253, 236.8052, 212.9257, 526.9048, 392.7104, 66.8111, 476.941, 201.8261, 119.3472, 62.025, 302.7259, 214.7789], [112.6586, 1068.2797, 653.1029, 195.6688, 1065.1225, 485.7058, 0.0, 39.3747, 418.2864, 134.0851], [59.7816, 1000.697, 902.3889, 49.434, 402.0156, 224.976, 97.3348, 381.4614, 493.2667, 51.3792, 84.615, 372.913, 225.9274], [191.0127, 1646.4865, 635.8598, 321.0514, 607.1256, 153.0112, 32.2285, 879.1886, 160.7563, 4.68, 129.7952, 379.5974, 236.6966], [185.0258, 1469.8232, 839.9853, 439.1537, 1062.4698, 549.712, 162.7659, 846.9814, 310.6008, 136.7136, 410.0827, 224.4106], [129.0024, 2468.5441, 821.9211, 251.8438, 1197.8424, 485.728, 113.8144, 595.0341, 196.8427, 32.7744, 42.7738, 425.1734, 377.2282], [259.578, 1659.5288, 783.001, 541.7966, 1062.2419, 1384.6688, 114.9915, 1485.6437, 350.4677, 77.976, 114.665, 524.2253, 497.7379], [257.1308, 2740.4555, 974.4815, 603.4543, 750.9305, 1196.9824, 134.9212, 2045.0443, 571.2821, 121.4784, 170.4634, 584.6894, 324.7469]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

