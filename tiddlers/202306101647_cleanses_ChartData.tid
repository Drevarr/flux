created: 20230610164704000
creator: Drevarr
modified: 20230705163534800
modifier: drevarr
tags: ChartData
title: 202306101647_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Morton Saltbringer", "Pamtastic", "Primal Clone", "Eibh\u00ebar", "Cat Wigglebooty", "Tootsie Pop Rocks", "High Sorcer Baradun", "Trolit\u00e1", "Venomina The Siren", "Zhavashian", "Tomitigas", "Sakis Ranger", "Tegan Parker", "Scintilla The Storm", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0833, 0.0, 0.023, 0.0113, 0.0465, 0.0, 0.1481, 0.0, 0.0, 0.0, 0.0, 0.3457, 0.0, 0.0, 0.2141, 0.0, 0.0312, 0.1345, 0.1485], [0.0233, 0.1429, 0.0, 0.375, 0.0, 0.0, 0.0113, 0.0, 0.0, 0.0, 0.0563, 0.0, 0.0, 0.0, 0.2979, 0.0, 0.0, 0.1342, 0.0, 0.2812, 0.1849, 0.5446], [0.1294, 0.1875, 0.7815, 1.4356], [0.0, 0.0714, 0.0, 0.3958, 0.1967, 0.0, 0.0113, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4947, 0.0, 0.0, 0.393, 0.0941, 0.0, 0.2521, 0.4554], [0.2093, 0.2143, 0.02, 0.2083, 0.9016, 0.0, 0.0282, 0.0, 0.1463, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4096, 0.0, 0.0, 0.3387, 0.0118, 0.0781, 0.1681, 0.5545], [0.0, 0.0, 0.03, 0.375, 0.082, 0.0, 0.0, 0.0, 0.0563, 0.0, 0.4468, 0.3902, 0.0, 0.6134, 0.2706, 0.0, 0.1849, 0.3069], [0.0, 0.0, 0.11, 0.4375, 0.7869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4574, 0.2439, 0.0, 0.5879, 0.0, 0.0, 0.1008, 0.3168], [0.2683, 0.0, 0.9649, 0.0471, 0.1562, 0.2857, 0.4851], [1.4149, 0.3659, 0.0, 0.3419, 0.2824, 0.1094, 0.3866, 0.5644], [0.0, 0.02, 0.9792, 1.1475, 0.1149, 0.2034, 0.0, 0.0345, 0.0, 0.2308, 0.0, 1.6862, 0.0976, 0.0, 0.3834, 0.1176, 0.0938, 0.3445, 0.6535], [0.0, 0.0952, 0.05, 0.8333, 0.4262, 0.0, 0.0565, 0.0, 0.0122, 0.0, 0.0, 0.0, 0.0962, 0.0, 0.0, 1.5053, 0.2683, 0.0, 0.722, 0.1647, 0.1406, 0.4958, 0.6337], [0.0233, 0.0, 0.08, 1.2083, 1.2295, 0.1379, 0.0452, 0.2326, 0.0122, 0.0, 0.4138, 0.0704, 0.2115, 0.0, 0.0, 1.6117, 0.4634, 0.0, 0.8882, 0.0353, 0.1094, 0.605, 0.6634], [0.093, 0.0, 0.12, 1.0208, 0.5574, 0.0, 0.0678, 0.0233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.8032, 1.122, 1.2907, 0.0353, 0.1094, 0.5294, 0.7525], [0.0, 0.0, 0.05, 1.0625, 0.6885, 0.0, 0.0056, 0.0, 0.0, 0.0, 0.0345, 0.0845, 0.2885, 0.0, 0.0, 1.7926, 0.6829, 0.0, 1.3514, 0.2588, 0.5312, 0.8824, 1.0792], [0.0233, 0.5238, 0.1, 1.4792, 0.9344, 0.0115, 0.0395, 0.1628, 0.0, 0.037, 0.0345, 0.0986, 0.0, 2.5372, 0.6829, 0.0, 1.4441, 0.0471, 0.2969, 0.6975, 1.2277], [0.1163, 0.12, 1.1042, 0.6066, 0.0345, 0.1017, 0.0, 0.0, 0.0, 0.4038, 0.0, 0.0, 2.883, 0.3659, 0.0, 1.5847, 0.2824, 0.6094, 0.5882, 1.396], [0.5349, 0.1429, 0.41, 2.5208, 1.7705, 0.1839, 0.1073, 0.7907, 0.2927, 0.1481, 0.0282, 0.6923, 0.0, 0.058, 2.2606, 0.5366, 0.087, 1.6741, 0.4, 0.3594, 0.958, 1.6535]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

