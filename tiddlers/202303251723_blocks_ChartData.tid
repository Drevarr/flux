created: 20230325172304000
creator: Drevarr
modified: 20230705163522921
modifier: drevarr
tags: ChartData
title: 202303251723_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Hauzzy", "High Sorcer Baradun", "Gavann", "Gamora Titus", "Sp\u00edcy Cheese", "K\u00f4sair", "Kmpek", "Xyntharos", "Lord Erin The Wise", "Venomina The Siren", "Kalenthian", "Newtype Khan", "Sassy Daddy Demon", "Oo Dads Mad", "Sumatra Satyricon", "Ju\u00e7", "Zefirokai", "What Charr U Saying", "Black Raspberry Pie", "Mike The Archmagus", "Legacy Of Mathus", "Smol Gluvs", "Arcanophage Farra", "Morton Saltbringer", "Xanvias Einzbern", "Zadie Miststep", "Be\u00eb", "Blanco Padre Guard", "Aronorf Xideliesi", "Tribal S", "Abigail Ryn", "Sofya De Nova", "Primal Clone", "Gabe Malhorn", "Arriasa", "Rozaalyna", "Cerys Fireblade", "Fruji", "\u00c1rkantor", "Tika Sumiko", "Whose Guardian", "Panther B Me", "Zaylen Harker", "Mac Chiato", "Eibh\u00ebar", "Sygaldry Verdandi", "Koralia Danai", "Ryvalia Fazebringer", "Bella Sassy", "Johosh The Great"];
const professions = ["Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Vindicator", "Vindicator", "Weaver", "Tempest", "Mechanist", "Spellbreaker", "Vindicator", "Spellbreaker", "Soulbeast", "Firebrand", "Tempest", "Berserker", "Chronomancer", "Weaver", "Berserker", "Scourge", "Spellbreaker", "Chronomancer", "Berserker", "Tempest", "Scourge", "Firebrand", "Firebrand", "Druid", "Tempest", "Weaver", "Chronomancer", "Firebrand", "Druid", "Scourge", "Berserker", "Scrapper", "Vindicator", "Tempest", "Firebrand", "Scourge", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 9, 5, 16], [1, 3, 0, 1, 1, 0, 41, 0, 0, 1], [4, 4, 1, 6, 1, 3, 8, 12, 13], [1, 0, 3, 2, 7, 10, 9, 20], [5, 2, 2, 34, 0, 0, 3, 1, 1, 0, 7, 2, 2, 2, 4, 7], [2, 4, 0, 0, 1, 0, 65, 1], [4, 2, 0, 0, 0, 0, 49, 0, 0, 4, 1, 0, 0, 2, 1, 3, 3, 4, 6], [2, 1, 0, 0, 1, 51, 0, 0, 3, 0, 0, 0, 3, 2, 2, 7, 6, 9], [5, 2, 0, 0, 0, 0, 40, 1, 0, 1, 0, 0, 0, 2, 1, 3, 6, 11, 17], [2, 3, 0, 0, 0, 1, 73, 0, 0, 4, 0, 0, 1, 1, 1, 0, 5, 7], [0, 0, 67, 1, 0, 4, 3, 0, 0, 0, 1, 3, 3, 8, 11], [3, 1, 0, 0, 3, 0, 73, 2, 0, 5, 0, 0, 0, 0, 0, 2, 7, 12, 3], [6, 3, 0, 0, 2, 0, 25, 3, 0, 6, 5, 0, 0, 2, 3, 2, 12, 23, 20], [3, 5, 0, 0, 0, 0, 96, 1, 0, 3, 6, 0, 0, 3, 1], [0, 0, 1, 0, 99, 0, 0, 0, 1, 0, 0, 3, 0, 3, 1, 7, 6], [10, 9, 1, 0, 3, 99], [4, 2, 0, 0, 2, 84, 0, 1, 3, 1, 0, 0, 0, 2, 5, 3, 8, 10], [5, 5, 0, 4, 0, 98, 0, 1, 5, 3, 0, 0, 2, 3], [2, 9, 0, 0, 0, 56, 0, 0, 7, 1, 0, 0, 1, 0, 3, 15, 11, 23], [2, 4, 0, 0, 2, 0, 83, 0, 0, 3, 1, 0, 0, 1, 2, 1, 7, 11, 12], [3, 1, 0, 0, 6, 0, 93, 0, 1, 8, 1, 0, 0, 1, 1, 2, 3, 4, 10], [8, 9, 0, 0, 4, 1, 59, 1, 0, 6, 7, 1, 0, 1, 2, 3, 10, 5, 19], [4, 8, 0, 0, 1, 0, 85, 0, 0, 4, 1, 1, 0, 0, 0, 1, 8, 14, 19], [6, 3, 1, 0, 1, 1, 92, 1, 0, 6, 1, 1, 0, 0, 6, 6, 13, 14], [8, 11, 0, 1, 1, 0, 86, 2, 0, 5, 4, 0, 0, 5, 0, 3, 9, 13, 16], [4, 2, 0, 0, 2, 0, 107, 0, 1, 5, 4, 0, 3, 1, 5, 8, 11, 12], [4, 3, 0, 0, 3, 0, 106, 1, 1, 3, 2, 0, 0, 0, 0, 6, 9, 9, 20], [5, 7, 0, 1, 2, 4, 74, 2, 1, 5, 3, 1, 0, 4, 2, 7, 12, 12, 28], [6, 6, 1, 2, 1, 96, 3, 1, 6, 3, 4, 1, 6, 2, 8, 5, 11, 13], [4, 7, 0, 0, 2, 0, 120, 2, 0, 5, 2, 0, 0, 1, 3, 2, 7, 8, 15], [1, 2, 0, 0, 1, 0, 112, 0, 0, 6, 8, 0, 0, 2, 0, 6, 12, 13, 16], [4, 7, 0, 0, 2, 0, 118, 1, 1, 3, 0, 0, 0, 0, 3, 9, 11, 21], [3, 7, 0, 0, 1, 0, 121, 1, 1, 5, 2, 1, 0, 0, 0, 4, 10, 14, 16], [2, 3, 1, 0, 5, 0, 127, 3, 1, 6, 2, 1, 3, 3, 0, 14, 13, 12], [4, 10, 0, 3, 142, 0, 0, 0, 3, 0, 0, 4, 2, 1, 7, 7, 14], [1, 7, 0, 2, 0, 117, 1, 0, 8, 5, 0, 0, 1, 5, 11, 15, 25], [4, 3, 0, 0, 0, 0, 130, 1, 0, 4, 3, 0, 0, 1, 1, 3, 15, 18, 19], [5, 16, 0, 1, 3, 0, 135, 2, 0, 3, 3, 0, 0, 1, 0, 2, 8, 8, 21], [6, 9, 1, 5, 0, 128, 0, 1, 5, 3, 0, 0, 1, 1, 6, 11, 14, 20], [4, 7, 0, 0, 2, 0, 135, 2, 0, 6, 5, 0, 0, 3, 3, 4, 11, 14, 16], [2, 3, 1, 1, 2, 5, 135, 0, 1, 6, 7, 1, 1, 7, 4, 3, 10, 15, 15], [10, 8, 0, 0, 2, 0, 140, 0, 0, 2, 4, 0, 0, 0, 2, 5, 11, 18, 18], [4, 6, 0, 2, 3, 138, 3, 1, 7, 7, 1, 0, 2, 4, 6, 15, 17, 18], [4, 7, 0, 3, 4, 0, 145, 2, 5, 9, 1, 0, 0, 2, 4, 10, 18, 22], [5, 13, 0, 1, 2, 0, 153, 1, 1, 4, 6, 1, 0, 6, 2, 3, 10, 14, 23], [5, 4, 0, 1, 5, 2, 152, 3, 1, 9, 4, 2, 1, 4, 0, 6, 12, 15, 19], [10, 9, 1, 0, 1, 150, 3, 1, 9, 3, 1, 0, 2, 4, 7, 11, 19, 22], [10, 11, 0, 0, 7, 1, 163, 5, 1, 4, 10, 1, 0, 8, 4, 4, 10, 20, 26], [6, 11, 0, 1, 5, 1, 162, 6, 1, 6, 8, 1, 0, 8, 1, 6, 22, 23, 25], [12, 5, 0, 1, 2, 1, 194, 3, 1, 6, 9, 0, 0, 7, 2, 6, 16, 25, 27]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

