created: 20230517220640000
creator: Drevarr
modified: 20230705163530381
modifier: drevarr
tags: ChartData
title: 202305172206_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Gabe Malhorn", "Eibh\u00ebar", "Kardiacc", "Tootsie Pop Rocks", "Cat Wigglebooty", "Dimsnail", "Grasszanine", "Newtype Khan", "Drevarr Moonwillow", "Be\u00eb", "Rozaalyna", "Elonith Requiem", "Smol Gluvs", "Cyclotechnist Farra", "Antherisa"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Scrapper", "Scrapper", "Vindicator", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 1248, 0, 2900, 0, 0, 0, 389, 0, 6505, 328, 0, 0, 1686, 5824, 7636, 4180, 0, 368, 0, 1564, 3085, 0, 137, 2918, 2394, 0, 0, 65, 0, 6088, 1250, 0, 0, 0], [0, 0, 2512, 304, 0, 0, 0, 0, 0, 0, 0, 1896, 4405, 0, 3224, 0, 0, 7113, 3968, 5748, 0, 0, 0, 706, 5122, 514, 87, 2625, 5544, 0, 0, 2406, 0, 4178, 1711, 1304, 0, 0], [0, 3619, 0, 0, 0, 4703, 1198, 2182, 1244, 4815, 13903, 0, 4114, 0, 12284, 6677], [0, 78, 1248, 5501, 16, 0, 3828, 0, 0, 0, 4119, 0, 8604, 1043, 0, 0, 1036, 5078, 6590, 5141, 628, 0, 0, 2663, 0, 289, 1681, 2338, 84, 0, 591, 0, 5869, 1314, 0, 0, 0], [0, 0, 653, 4566, 0, 0, 2826, 2169, 0, 374, 0, 8498, 1924, 140, 1369, 7640, 704, 1398, 0, 54, 0, 1304, 5063, 117, 549, 4381, 2599, 1304, 0, 2064, 0, 8883, 0, 0, 3399], [0, 269, 3515, 6052, 0, 1248, 2465, 1248, 0, 0, 1517, 1248, 14303, 830, 0, 0, 2567, 0, 1686, 6698, 0, 0, 0, 1431, 3111, 0, 2288, 3062, 158, 1248, 0, 5080, 0, 8741, 214, 0, 0, 0], [3536, 0, 3396, 0, 0, 3438, 4617, 2393, 0, 0, 5187, 0, 10248, 4001, 0, 742, 276, 3771, 10437, 0, 0, 0, 0, 0, 234, 0, 1773, 1304, 8044, 0, 0, 2001, 0, 7734, 0, 0, 0, 0], [0, 0, 1696, 3491, 1216, 0, 2679, 0, 0, 0, 1763, 441, 11544, 5633, 2, 0, 3698, 7727, 4092, 3945, 54, 0, 943, 5440, 1815, 1005, 3724, 4638, 818, 0, 4130, 0, 10436, 1268, 165, 0, 0], [0, 97, 1571, 442, 145, 0, 3590, 1916, 0, 0, 782, 5, 15637, 9486, 197, 335, 1278, 3734, 4382, 6438, 438, 0, 0, 843, 7944, 786, 283, 4920, 6000, 95, 0, 4347, 0, 6710, 1769, 77, 13, 0], [0, 0, 3527, 701, 0, 0, 1867, 9733, 0, 0, 2594, 31, 6947, 3474, 0, 6727, 7050, 16535, 4739, 7173, 0, 1248, 0, 3459, 9765, 3474, 1645, 7318, 5264, 450, 0, 6640, 0, 13982, 1948, 1134, 0, 0], [0, 0, 0, 3565, 1928, 9834, 0, 6078, 0, 0, 2383, 0, 13851, 7842, 0, 1248, 0, 15518, 11389, 12016, 0, 0, 1900, 8772, 1260, 0, 2258, 6072, 1297, 0, 16379, 0, 6408, 0, 1524], [1927, 4433, 1620, 0, 9652, 5966, 0, 0, 0, 0, 20471, 3777, 13365, 7452, 17752, 9715, 708, 0, 0, 2112, 9702, 0, 0, 5730, 10450, 0, 0, 9224, 0, 7760, 1150], [0, 0, 3635, 6381, 1248, 0, 2486, 0, 0, 0, 1770, 1247, 17752, 1659, 932, 3808, 6858, 15016, 8119, 13479, 0, 1186, 0, 2374, 14292, 1335, 3941, 5174, 11028, 0, 0, 4044, 0, 12763, 1470, 0, 1833, 119], [1098, 3438, 4265, 17733, 6090, 1544, 3555, 0, 0, 0, 8332, 1652, 22868, 18387, 1119, 17752, 16287, 45433, 47120, 37747, 0, 407, 2502, 2690, 5902, 8036, 6584, 7012, 25399, 0, 0, 17206, 0, 18770, 14361, 2851, 0, 1025], [2175, 1836, 15177, 16842, 8000, 1178, 37035, 35069, 0, 10175, 13129, 13447, 48437, 34218, 1586, 17046, 24520, 56241, 118162]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

