created: 20230408223537000
creator: Drevarr
modified: 20230705163524942
modifier: drevarr
tags: ChartData
title: 202304082235_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Fribble Bibble", "Xyntharos", "Skye Nightroad", "The Gun Guardian", "Eidolyst", "Blancooo Padreee", "Sister Elon\u00edth", "Kat Bon Z", "Yuuka Chou", "Lirhith", "Seren Nightroad", "Tootsie Pop Rocks", "Venom The Ferocious", "Sofya De Nova", "Kosair", "Irish Mini Rev", "Tac Mancer", "Cat Wigglebooty", "Lord Erin The Wise", "Sarah Dresser", "Elvarra", "Kos\u00e4ir", "Leaf You Dead", "Slautorn", "Hrakkus", "Djimariate", "Ever Moore", "Theoden Ellesmera", "Hakunana Matatata", "Reikitsuki", "Ark Darkness", "Macc Gruber", "Kaz Frostbear", "Anima Frog", "Venomina The Fierce", "Traidoruns Maximus", "Rayla Shadowmoon", "Karmina Stranger", "Az New Too", "Sister Elon\u00edth", "Artofliving", "Ak\u00e1nt\u00f3r", "Extol", "Aira Draugr", "Zaylen Harker", "Belvyn Brightblade", "Kat Bon Z", "Vocare Veilrender", "Kosair"];
const professions = ["Vindicator", "Scrapper", "Vindicator", "Scrapper", "Scrapper", "Herald", "Berserker", "Firebrand", "Berserker", "Tempest", "Vindicator", "Scourge", "Scrapper", "Firebrand", "Weaver", "Firebrand", "Vindicator", "Scourge", "Scrapper", "Weaver", "Tempest", "Spellbreaker", "Vindicator", "Harbinger", "Weaver", "Tempest", "Elementalist", "Firebrand", "Mechanist", "Firebrand", "Soulbeast", "Firebrand", "Scrapper", "Reaper", "Scrapper", "Spellbreaker", "Firebrand", "Herald", "Mechanist", "Virtuoso", "Dragonhunter", "Herald", "Druid", "Soulbeast", "Herald", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator", "Guardian"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[337.0092, 46.1053, 78.3591, 0.0, 263.7727, 89.8472, 147.1914, 0.0, 84.2143, 26.2468, 377.8298, 561.7647, 129.2105, 0.0, 307.2814, 1992.1, 1565.52, 1112.1562, 255.7765, 1854.8472, 632.4732, 1361.1233, 1411.4407], [154.3333, 57.3084, 18.3108, 0.0, 23.3, 150.5486, 128.1432, 34.0938, 10.425, 14.027, 4.8824, 218.64, 25.8333, 42.15, 326.689, 3172.6415, 879.5647, 2211.6889, 1810.9538, 1157.5686, 3003.2143], [336.8146, 32.0, 22.6767, 133.0, 107.8636, 124.9861, 245.8904, 65.36, 76.4318, 27.2987, 4.78, 281.451, 0.1053, 136.5405, 340.9756, 1283.4677, 771.0575, 3799.0952, 1691.6562, 1097.5435, 497.9009, 1473.9, 1535.1404], [2741.2045, 1653.9556, 3939.4815, 1309.9111, 2321.3404, 3377.2222, 1847.1803, 61.1515, 101.0, 0.0, 45.3333, 346.7513, 264.5513], [806.2462, 621.8288, 82.5385, 186.6829, 379.4286, 272.7955, 740.0, 28.5714, 602.4847, 2297.321, 1607.1449], [1296.975, 2900.875, 1202.8298, 1539.5692, 1751.7245, 2331.6667, 1953.7826, 1854.1186], [2383.0263, 1824.7532, 1565.375, 2485.0, 2660.4872, 349.4605, 43.4299, 26.7778, 0.0, 5794.2857, 23.451, 398.474, 298.3923], [4306.5789, 1942.5, 1484.9333, 1789.4531, 2027.6296, 1892.4231, 129.678, 41.1, 0.0, 0.0, 453.8854, 90.3333], [1377.5703, 0.0, 133.6875, 548.5986, 513.6523, 0.0, 212.0444, 907.3214, 650.0588, 123.4865, 189.775, 1487.8036], [88.68, 2705.0, 1704.2292, 3626.9032, 865.0882, 1668.6712, 1287.56, 1585.0435, 54.8137, 0.0, 2.64, 43.9038, 466.2158, 76.3128], [838.12, 2036.3208, 2357.4, 726.8788, 456.8586, 1933.9429, 1712.9231, 397.973, 281.4545, 170.3889, 848.76, 0.0, 207.4423, 663.9786, 194.5611], [486.3902, 0.0, 62.0798, 294.2273, 247.2118, 524.6152, 162.0, 390.6744, 32.1538, 4.6596, 1111.94, 92.1053, 238.902, 509.3892, 1909.8627], [203.7406, 68.5588, 9.4608, 1.7368, 126.8, 202.5424, 300.9356, 0.0, 32.175, 5.2639, 28.1, 656.2745, 24.0, 171.8235, 271.3413, 3264.8571, 1654.5632], [1402.9583, 1858.32, 1621.7966, 1077.978, 2115.0769, 2010.4103, 780.6066, 14.3137, 0.0, 0.0, 0.0, 143.0556, 251.0471, 139.3807], [253.3019, 36.3168, 11.3134, 0.0, 63.5909, 17.8532, 264.8322, 0.0, 156.6429, 9.8152, 5.36, 304.78, 144.5676, 317.1018, 839.2987, 1244.3462, 145.3636, 105.7955, 313.8313, 274.25, 107.125, 510.3387, 524.5733, 101.5833, 15.6111, 1105.0588, 0.7708, 13.1132, 89.5729, 29.8667], [321.9425, 4173.3043, 3987.6842, 1433.9559, 930.7723, 562.3875, 1268.0, 1097.7273, 29.9623, 23.5, 110.45, 0.0, 174.3195, 70.0966], [236.7264, 26.901, 21.6596, 0.0, 0.0, 354.711, 321.1333, 516.8718, 291.5319, 0.0, 143.5098, 58.4706, 70.4792, 506.2744, 1934.4231, 1445.1], [486.6056, 151.7353, 65.4464, 0.0, 109.3182, 4.0102, 211.7652, 0.0, 212.0, 28.4805, 0.0, 605.1961, 5.3514, 238.5294, 535.6923, 1243.3913, 1951.9], [256.1256, 15.5686, 13.6156, 23.9259, 64.6364, 163.3409, 294.5734, 0.0, 30.675, 2201.3333, 0.0, 157.4474, 210.375, 2139.0, 2469.5429], [303.7742, 84.6882, 71.5686, 29.8889, 0.0, 22.3569, 0.0, 0.0, 1461.7931, 0.0, 160.86, 103.6053, 0.0, 582.6379, 1170.65, 1306.0, 945.3333, 1206.7045, 1036.5238], [209.1115, 237.8659, 85.6176, 93.1429, 65.3636, 217.3585, 533.9412, 31.8158, 13.0577, 546.0804, 1623.0149, 1258.5362], [1608.4091, 2951.7556, 2139.8409, 2558.9429], [356.533, 65.951, 2.2794, 0.1481, 216.4762, 169.9007, 180.9577, 80.2121, 422.8049, 37.587, 381.5769, 180.8684, 64.4211, 213.8397, 1575.2903], [197.9758, 302.8901, 0.0, 92.3409, 0.1304, 3.6154, 371.549, 91.7027, 78.5897, 283.5939, 2162.8793], [431.8396, 155.505, 47.6683, 6.2857, 75.8571, 241.6016, 343.39, 23.04, 900.7949, 12.3919, 867.2941], [246.1831, 374.6409, 147.8621, 58.2564, 265.0299, 1015.54, 214.963, 215.1579, 636.0615, 173.1364, 1035.6786], [201.9792, 558.1365, 0.0, 82.5122, 41.2603, 0.0, 510.78, 57.4324, 116.3], [273.6564, 1533.381, 2356.9], [114.1765, 41.9532, 28.0556, 120.0, 23.1425, 0.0, 79.3659, 12.0526, 14.0784, 292.52, 135.0278, 67.9362, 459.0, 225.3067, 2775.907], [3897.4167, 1853.1795, 719.375, 504.4389], [174.1958, 412.4263, 0.0, 149.2619, 46.2838, 1.6471, 172.5957, 88.3939, 29.1471], [289.2029, 30.581, 0.0, 42.5714, 264.9401, 378.1797, 113.4493], [2170.9306, 2748.4286], [809.3846, 797.8643, 188.5333], [442.9578, 2508.093], [45.0, 151.4, 225.5, 248.6347, 3582.0606], [21.9476, 0.0, 107.55, 152.5725, 0.0, 13.2222, 7.2, 2.75, 819.48, 90.1842, 40.5227], [447.6777, 54.3976, 26.2005, 153.9545], [189.1481, 967.5195], [0.0, 44.6, 3.6731, 266.3455, 664.7083, 48.3978], [2960.8182], [255.3272, 76.7059], [206.8627, 41.0, 25.808, 5.1429, 106.9091], [265.1991], [149.9057, 39.4257, 46.212, 0.0, 5.4737], [183.3682, 36.1458, 24.5187, 19.5556, 0.0], [143.9954, 53.8, 32.6225, 0.0, 6.5455], [36.5884], [7.6791, 13.0571], [0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

