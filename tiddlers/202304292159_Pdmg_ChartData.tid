created: 20230429215910000
creator: Drevarr
modified: 20230705163527488
modifier: drevarr
tags: ChartData
title: 202304292159_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Smol Gluvs", "Ria Zerria", "Husky Guard", "Tootsie Pop Rocks", "Necrotic Windrunner", "Rudjulin", "Lord Erin The Wise", "Khailerian", "Morv\u00e4rth", "Kary\u00edna", "Mistwalker Caelon", "Skye Nightroad", "Be\u00eb", "Xyntharos", "Owl Scowls", "Hauzzy", "Zenek Tryst", "Outer Ocean", "Xanvias Tsolice"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Dragonhunter", "Scrapper", "Scourge", "Willbender", "Weaver", "Vindicator", "Reaper", "Vindicator", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Scrapper", "Berserker", "Weaver", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[131.4952, 0.0, 0.0, 432.6349, 52.8889, 0.0, 1149.5208, 311.5857, 231.2146, 247.3529, 760.0345, 351.8016], [0.0, 688.0476, 79.6508, 2.5526, 1267.3125, 341.9929, 162.8174, 200.7169, 252.2759, 286.7393, 0.0, 0.0, 5.6652, 517.8718, 122.3793, 211.0303, 98.8696, 378.8768], [0.0, 880.873, 50.0476, 8.8487, 1020.1458, 194.1214, 223.2298, 274.1544, 271.3793, 303.716, 4.4133, 0.0, 44.7964, 192.8974, 142.4138, 21.5455, 82.1304, 237.2681], [0.0, 397.9683, 24.7143, 104.0197, 1417.7292, 221.6857, 280.4277, 209.6985, 217.9144, 116.1333, 14.9593, 472.6154, 438.3966, 297.7879, 84.2174, 282.6159], [0.0, 1145.2063, 632.0794, 243.6104, 1610.3103, 456.6615, 0.0, 0.0, 0.0, 703.1923, 147.5, 216.303, 172.6957, 449.2536], [0.0, 0.0, 998.9792, 382.5071, 308.3729, 356.7243, 474.2414, 342.6615, 51.1333, 0.0, 80.2805, 312.5769, 213.1207, 358.1515, 20.8043, 336.3188], [255.6667, 87.0987, 948.3333, 703.6857, 372.0746, 207.1875, 410.1034, 448.3191, 123.3867, 0.0, 57.8824, 98.7179, 443.7931, 0.0, 854.8043, 242.9855], [195.0, 1101.5714, 136.2857, 1.9408, 1706.0, 264.2714, 291.207, 887.5441, 782.3103, 475.4825], [80.7407, 1534.7302, 146.1905, 0.0, 1346.4792, 250.6, 607.9391, 561.4926, 2125.1724, 449.7471], [27.6296, 1885.7143, 228.2381, 3.6382, 2267.375, 490.9143, 306.8874, 402.069, 627.7821, 13.6533, 38.5526, 39.8778, 1156.3846, 459.2414, 643.0909, 1118.1957, 445.558], [25.4815, 972.1746, 342.5873, 134.3421, 1654.0833, 982.5071, 246.2374, 795.4669, 367.8621, 473.5058, 83.04, 0.0, 83.0679, 1405.2821, 720.7069, 437.1818, 229.913, 343.4203], [188.8476, 129.5312, 137.7037, 2235.9365, 259.3333, 144.8947, 2847.7708, 788.9071, 414.8828, 0.0, 212.9638, 2224.4487, 91.6034, 478.1818, 1157.8696, 1159.6884], [0.0, 1355.2381, 148.1111, 0.0, 1535.4375, 430.7357, 512.5967, 600.0404, 738.3793, 526.6732, 69.3733, 0.0, 41.6335, 931.3333, 1016.6897, 0.0, 960.5217, 832.2681], [156.4444, 2599.3333, 119.381, 30.75, 2385.25, 768.0286, 608.9239, 868.6176, 633.9655, 690.3424, 11.68, 59.0181, 786.6667, 332.7759, 0.0, 293.2609, 318.7391], [29.4444, 2137.0159, 0.0, 2154.8333, 476.4143, 666.656, 959.4375, 838.5172, 917.4358, 0.0, 0.0, 0.0, 720.4615, 151.3276, 402.5758, 1266.1087, 161.2101], [99.037, 1524.8889, 241.3333, 192.3553, 1941.6458, 522.7, 699.2314, 888.3199, 862.2957, 107.0533, 0.0, 127.8869, 216.5128, 1451.9483, 146.9697, 416.1739, 409.7899], [28.7778, 2354.8571, 310.7937, 11.6711, 2745.8958, 816.9357, 1006.2253, 1120.125, 1090.6148], [2680.5397, 161.2222, 291.375, 2502.8542, 788.1143, 1764.1796, 2225.5699, 1251.3793, 1437.6498], [177.6667, 5073.6825, 582.5238, 131.9145, 4483.4792, 1807.2643, 1650.9589, 2122.4522, 3499.8966, 2586.9222], [494.419, 2915.8438, 1859.4815, 4065.2698, 299.9683, 228.125, 6671.3958, 772.6, 1933.2527, 1617.2206, 566.3103, 1468.2568, 91.8267, 0.0, 0.0, 3600.8077, 1400.5862, 796.9091, 1493.5652, 1615.6377]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

