created: 20230329220116000
creator: Drevarr
modified: 20230705163523334
modifier: drevarr
tags: ChartData
title: 202303292201_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Nazhul Naxxremis", "Lord Mac\u00fcmbeiro", "Sumatra Satyricon", "Smol Gluvs", "Domina Flagbringer", "Seren Nightroad", "Sp\u00edcy Cheese", "Mort\u00e4rion", "Baidu Sugiyama", "Iced Coffeebringer", "Blancooo Padreee", "Panther B Me", "Rina Of Theros", "My Birthday Girl", "Plum Crazybringer", "K\u00f4sair", "Legacy Of Mathus", "\u00c4lplrmagron\u00e4bringer", "Bee Honeybringer", "Cinder Flamebringer", "Sister Elon\u00edth", "Cael Saladbringer", "Sizzln Sisigbringer", "Xanvias Tlesel"];
const professions = ["Scourge", "Berserker", "Soulbeast", "Scourge", "Spellbreaker", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Scrapper", "Scrapper", "Berserker", "Berserker", "Vindicator", "Scourge", "Weaver", "Dragonhunter", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1413.873, 193.425, 134.8784, 86.4221, 90.0135], [526.75, 79.9076, 29.1753, 144.1876, 368.0468, 53.7867, 409.5], [584.0794, 173.9, 110.8589, 82.7338, 142.1068, 101.7447, 159.5067, 76.2632, 58.2469, 108.4857], [793.0476, 136.175, 108.3492, 9.2338, 131.2422, 17.8894, 30.1867, 531.8158, 100.0741, 868.7429], [147.2063, 248.175, 77.0126, 77.0974, 189.9992, 197.5064, 70.52, 119.3158, 58.9143], [113.4698, 42.6234, 250.6123, 111.6255, 0.0, 389.0526], [321.4794, 266.9149, 253.8133], [421.3492, 113.325, 135.1955, 21.7078, 196.6518, 249.4213, 125.9333, 0.0], [143.9841, 171.625, 64.2918, 49.2013, 271.5265, 244.3745, 233.0933, 187.6579, 215.9753, 1557.2571], [983.2698, 56.625, 115.1313, 0.0, 260.0959, 363.2213], [196.3333, 231.025, 187.8726, 39.0195, 234.3928, 64.0723, 79.8667, 424.5789, 164.2716, 1071.0857], [1254.1746, 135.025, 211.9251, 74.2143, 222.4844, 335.0383, 131.7067, 450.9474, 208.9753, 1350.3714], [982.5714, 110.125, 163.8249, 126.3766, 238.704, 280.1447, 198.9333, 239.5, 932.2593, 1747.2857], [975.6667, 422.1615, 71.9091, 274.7889, 480.7404, 151.7333, 336.2368, 708.284, 498.5429], [1558.3333, 462.375, 341.2305, 161.026, 283.3036, 434.7617, 152.7733, 497.2368, 282.0741, 1824.2571], [2082.4286, 457.475, 287.2597, 13.8701, 364.1573, 512.2596, 39.7733, 1756.2632], [1209.9365, 27.35, 240.7335, 159.0455, 511.0555, 608.8, 113.6667, 664.3421, 129.5309, 1640.3143], [1296.6508, 158.275, 248.4523, 165.5065, 526.7418, 840.3319, 194.4933, 1399.5263, 318.2222, 1387.0], [1791.7778, 153.95, 351.4027, 167.6104, 458.09, 319.1957, 213.9867, 599.3684, 1553.5679, 1569.4], [1866.8095, 88.8, 657.2597, 121.5844, 629.7981, 292.6681, 0.0, 114.8684, 506.0247], [580.8052, 1149.4466, 744.0723, 363.92, 355.6842, 422.5556], [719.4762, 781.175, 579.7558, 475.2078, 772.1699, 918.8936, 293.64, 329.6842, 265.1714], [2532.9524, 797.475, 1073.2685, 334.4545, 546.6114, 645.1404, 169.4533, 869.9474, 230.3333, 2247.4286], [4854.1905, 412.975, 764.5613, 316.8117, 1313.196, 740.6511, 483.4133, 998.3684, 2133.5185, 3557.2286]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

