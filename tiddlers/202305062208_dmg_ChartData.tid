created: 20230506220820000
creator: Drevarr
modified: 20230705163528789
modifier: drevarr
tags: ChartData
title: 202305062208_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zady Stardust", "Raimaru Hanzo", "Cuscuszera", "Corinna Barimen", "Zaidy Sagemist", "Needragee", "Elder Gazruhk", "Arriasa", "Spreadflamesoflight", "Mmathuss", "Rock Danger", "Mmathuss", "Weather Forecast J", "Sub Train", "Gavann", "Plastered Pinocchio", "Na Ting Wong", "Lil Red Robin", "Hyde En Sikh", "Jupi Jupi Jupi", "Audrinafa", "Vanhelsing Wizard", "Koralia Danai", "Johoshua", "Artakama Nahid", "High Sorcer Baradun", "Venomina The Fierce", "Orangeluv", "Surethang Jr", "Ever Moore", "Bella Sassy", "Sygaldry Verdandi", "Drevarr Moonwillow", "Inkcubi", "Ark Darkness", "Skylar Shadowmoon", "Tac Mancer", "Dustythekat", "Aronorf Xideliesi", "Im Killin It", "Miphest\u00f6", "Blancooo Padreee", "Bluntnips", "Freylk Nasferatu", "Johosh The Mighty", "Newtype Khan", "Tootsie Pop Rocks", "Mannse Lee", "Kosa\u00efr", "Ria Zerria", "Kira Dragonblaze", "Smol Daddy Tika", "Grilo Gringo", "Mammary Mission", "Hauzzy", "Smol Gluvs", "Guard Ferro", "My Birthday Girl", "Im Killin It", "Antherisa", "Artofliving", "Husky Guard", "Puny Demon", "Permanent Dawn", "Dargon Spiritwalker", "Kmpek", "Demon Dalham", "Lord Erin The Wise", "Rina Of Theros", "Abigail Ryn", "Cerys Fireblade", "Be\u00eb", "Kosa\u00efr", "Xanvias Einzbern"];
const professions = ["Willbender", "Spellbreaker", "Firebrand", "Guardian", "Vindicator", "Tempest", "Vindicator", "Druid", "Willbender", "Willbender", "Renegade", "Firebrand", "Catalyst", "Firebrand", "Firebrand", "Mechanist", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Tempest", "Spellbreaker", "Soulbeast", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Daredevil", "Firebrand", "Scrapper", "Scourge", "Reaper", "Firebrand", "Harbinger", "Tempest", "Spellbreaker", "Herald", "Scourge", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Catalyst", "Scourge", "Dragonhunter", "Spellbreaker", "Dragonhunter", "Scourge", "Berserker", "Scourge", "Willbender", "Scrapper", "Scourge", "Reaper", "Herald", "Dragonhunter", "Scourge", "Weaver", "Scourge", "Vindicator", "Dragonhunter", "Weaver", "Scourge", "Catalyst", "Berserker", "Scourge", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.6829], [63.7195], [28.375, 14.4527], [40.2757], [1.9732, 12.6667, 0.7256, 0.0, 0.7284, 0.0, 0.8571, 0.333, 61.7391, 0.0, 0.0, 0.0, 0.0, 0.0], [0.672, 14.4928, 13.6049, 6.8053, 26.5079, 0.0, 20.5068, 56.4512], [24.5953, 14.3026], [1.9231, 2.865, 0.7692, 0.0, 7.8436, 0.2656, 9.5238, 6.448, 0.0, 0.0, 4.5782, 4.3333, 0.0, 13.7297, 43.2927], [146.9054], [5.5159, 0.0, 359.5362], [44.4167, 45.9722, 0.8206], [83.0807], [0.0, 63.012, 0.0], [45.0625, 43.6543, 34.2786, 68.9683, 2.5223], [71.6154, 24.9], [235.375, 78.3663], [0.0, 41.2552, 12.8571, 21.8811, 139.029, 31.1358, 20.2212], [0.0, 27.8313, 33.1927, 10.9246, 18.333, 6.7826, 82.8395, 27.9587, 16.9048, 0.0, 35.0541, 33.5488], [16.0635, 25.212, 8.9333, 0.0, 8.5967, 15.6224, 15.0754, 11.7195, 62.8696, 39.963, 35.8171, 0.0, 0.0, 30.5946, 44.0244], [5.8696, 27.959, 7.6641, 5.5687, 21.4444, 20.9193, 31.4246, 12.4589, 0.0, 7.3704, 17.0619, 0.0, 0.0, 87.2635, 82.7561], [12.0, 23.763, 38.0754, 34.4787, 40.087, 86.9259, 20.0029, 25.9048, 0.0, 2.2432, 83.9146], [42.7512, 47.971, 147.4198, 60.41, 0.0, 0.0, 67.5743], [5.3311, 68.1299, 2.7615, 0.0, 42.6955, 2.2214, 11.9563, 16.885, 25.942, 0.0, 18.2094, 16.0, 0.0, 17.9797, 83.6098], [40.3724, 35.0079, 31.6293, 88.2319, 58.6049, 49.8319, 0.0, 0.0, 24.2432, 69.2073], [17.8127, 36.1197, 7.8436, 6.225, 11.3333, 41.5573, 11.0119, 35.5015, 21.6957, 4.1975, 24.059, 0.0, 0.0, 19.8649, 65.7317], [14.1304, 33.4615, 49.5821, 0.0, 2.5267, 78.5703, 164.369, 9.225, 19.1014, 34.5926], [7.9158, 159.3043, 228.284, 164.5959, 0.0, 0.0, 132.2365, 195.8537], [0.0, 70.2024, 59.332, 5.4058, 142.4568, 55.1504, 137.4286, 65.9324, 61.0854], [70.0769, 135.1573, 32.1974, 42.8438, 6.1934, 41.5286], [122.4505, 28.5635, 33.9207, 59.4058, 23.1111, 85.7758, 33.2063, 0.0, 88.3986, 119.5], [12.9431, 76.1043, 6.6923, 10.3125, 36.3086, 22.9245, 36.9444, 27.1833, 58.1884, 10.4815, 59.4395, 17.2381, 0.0, 51.3311, 98.0122], [18.5619, 75.3726, 32.8937, 2.9177, 33.487, 41.1627, 51.1843, 62.5072, 29.6173, 105.3156, 0.0, 0.0, 91.8851, 139.5244], [26.505, 66.3846, 43.9897, 2.5187, 20.6296, 70.0495, 68.5397, 42.8385, 99.4638, 97.284, 65.1091, 17.6825, 49.4167, 21.6486, 133.3293], [114.3125, 213.1032, 35.4599, 459.8841, 168.1975, 38.2507, 91.1905, 20.3333, 92.2432], [46.0301, 48.0496, 51.1692, 1.1438, 76.4609, 25.6328, 73.1151, 59.9187, 87.2899, 86.8642, 76.9174, 0.0, 0.0, 95.0338, 154.9268], [13.9264, 159.7145, 65.5923, 3.7437, 98.3169, 253.1745], [413.2974, 81.859, 54.9625, 99.8889], [249.0159, 439.2917, 1557.5203, 1139.0976], [4.9431, 64.1607, 66.0205, 142.6625, 131.9342, 72.3385, 36.3056, 124.6353, 181.4444, 141.6342, 31.8413, 58.9167, 32.5878, 134.7317], [692.3094], [124.4649, 164.3915, 89.1795, 1.675, 119.9948, 135.1587, 106.6759, 111.6812, 287.9506, 67.472], [17.1739, 106.8872, 19.6154, 46.225, 49.8642, 133.612, 190.1548, 141.6928, 313.6232, 251.321, 166.9882, 0.0, 0.0, 109.2432], [1323.3086, 580.6873, 0.0, 116.6667, 1138.0811], [54.7057, 337.4256, 223.1385, 171.0125, 1.3045, 268.5469, 259.6825], [173.9465, 663.6444, 88.5795, 137.9, 167.6667], [81.7425, 124.3299, 172.2231, 42.45, 19.8683, 121.0495, 155.3214, 158.3221, 307.5652, 328.4568, 184.7699, 0.0, 0.0, 173.8041, 235.9756], [147.5719, 267.8137, 262.941, 5.6813, 25.3621, 11.8828, 17.4325, 27.0416, 0.0, 0.0, 14.7847, 0.0, 0.0, 770.6824, 1632.7927], [294.0803, 505.1932, 440.2564, 62.8062, 244.2881], [112.7224, 1077.7436], [34.0476, 268.4113, 950.3333, 741.2593, 310.1888, 98.5556, 0.0, 658.0608, 838.8293], [48.2408, 689.1145, 218.7769, 166.5125, 272.1605, 230.237], [53.7023, 260.2017, 43.9692, 0.2, 81.5802, 182.7396, 314.9802, 163.8999, 449.3913, 416.6173, 285.236, 24.6508, 0.0, 167.027, 443.122], [298.1771, 112.7579, 253.3399, 200.2174, 672.4568, 599.2596, 328.8571, 640.5676, 856.878], [112.194, 144.5949, 67.0051, 37.1313, 250.177, 196.8724, 362.1944, 271.003, 0.0, 216.963, 278.472, 10.1429, 6.7917, 642.3243, 243.1829], [681.107, 894.9385, 425.8051], [138.6656, 143.7709, 22.4692, 4.6188, 107.4979, 297.4349, 266.5754, 287.5669, 817.1884, 372.7407, 319.0236, 0.0, 213.1081, 686.561], [651.3594, 863.3452, 472.2914], [285.7793, 335.4701, 266.241, 75.4625, 63.2428, 497.5312, 773.6706, 267.3231], [213.2179, 452.7437, 531.428, 673.9974, 906.3849, 309.4727], [167.5625, 228.749, 344.0052, 554.4802, 366.2141, 794.8406, 660.8148, 354.1121, 43.1111, 292.4167, 460.1014, 981.9024], [115.0134, 272.7453, 201.0821, 0.0, 130.1728, 169.8464, 514.0119, 275.5649, 346.6087, 897.7778, 483.9941, 0.0, 0.0, 577.9932, 547.9512], [141.6421, 563.7521, 267.9564, 53.6063, 168.4774, 28.8047, 293.4762, 330.1685, 680.1739, 547.5926, 422.6401, 140.8254, 0.0, 72.1351, 577.7439], [136.2542, 671.0615, 290.5487, 59.2125, 263.7613, 280.3281, 474.2698, 426.223, 518.6957, 89.1852, 217.6018], [160.1873, 495.0444, 279.275, 304.6296, 494.1927, 736.5952, 1.4836, 371.4041, 27.8254, 0.0, 2011.2973, 1841.8537], [166.7592, 457.2068, 101.1436, 76.3125, 79.6008, 336.6953, 531.6389, 388.4658, 888.6957, 920.4691, 385.8702, 81.4444, 0.0, 786.1351, 919.1341], [99.8256, 167.575, 236.2798, 690.5964, 602.3413, 528.6184, 1468.0145, 1589.5926, 605.5605, 177.4444, 220.375, 628.6959, 1110.6585], [451.6187, 2081.188, 644.3282, 127.0438, 420.5514], [922.0476, 870.3122, 1287.9259, 798.0059, 57.0159, 456.9167, 1410.4054, 1643.439], [150.3378, 650.6171, 441.2256, 49.9062, 343.1687, 247.0182, 498.254, 536.5629, 364.942, 1327.284, 491.8201, 135.2063, 385.2083, 843.8243, 1040.5488], [90.2821, 278.6128, 225.1312, 391.7572, 587.6823, 608.0992, 708.0763, 558.2029, 718.0741, 832.059, 205.0794, 173.375, 591.9054, 1998.2561], [352.4816, 1003.4581, 220.7103, 195.4688, 188.5185, 524.7839, 815.3294, 267.3944, 1177.6522, 798.2222, 571.4012, 91.127, 0.0, 1188.7568, 397.8537], [439.2441, 1081.7214, 432.3231, 84.45, 509.6337, 816.5755, 691.7579, 731.9187, 225.0145, 1429.2593, 657.3333, 18.0794, 41.375, 934.473, 1275.9512], [1362.059, 180.0125, 707.7984, 1888.8411, 1487.881, 1347.004, 1854.7037, 1756.5044, 102.6349, 603.2083, 897.8176], [739.8328, 2300.5385, 1172.1333, 154.2688, 684.0123, 1613.0755, 1778.5794, 1348.3865, 2437.9855, 2551.6049, 1816.7994, 181.4444, 354.5, 2670.0541, 2842.3171]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

