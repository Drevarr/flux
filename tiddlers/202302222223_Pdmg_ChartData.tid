created: 20230222222328000
creator: Drevarr
modified: 20230705163520006
modifier: drevarr
tags: ChartData
title: 202302222223_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mustache Bloodclaw", "Ravioli Fetabringer", "Kmpek", "Smol Gluvs", "Arcanophage Farra", "Dark Sidiuz", "Skye Nightroad", "Ace Hammers", "Sofya De Meme", "Rina Of Theros", "Panther B Me", "\u00c1rk\u00e1ntor", "Smol Daddy Tika", "Sassy Daddy Demon", "Legacy Of Mathus", "Elonith Tenebris", "Xyntharos", "Jeckyll Mbs", "Lord Erin The Wise", "My Birthday Girl", "Sp\u00edcy Cheese", "One Whole Keg", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Herald", "Firebrand", "Vindicator", "Scourge", "Spellbreaker", "Scourge", "Scrapper", "Vindicator", "Catalyst", "Scourge", "Scourge", "Scourge", "Berserker", "Vindicator", "Berserker", "Scourge", "Vindicator", "Berserker", "Weaver", "Scrapper", "Berserker", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[139.8823, 221.169, 236.4293, 65.9963, 62.1788, 346.4313, 380.4893, 185.4004], [0.0, 237.3169, 150.8032, 54.2798, 27.594, 42.1046, 32.313, 42.6909, 51.8238, 158.6878, 89.7783, 28.5251, 503.192], [20.7232, 403.2367, 469.1801, 33.8427, 81.1804, 714.4428, 1242.4167, 622.0091, 742.8096, 233.5399, 611.0542], [40.8659, 0.0, 124.7102, 353.3384, 29.3667, 45.311, 180.3493, 711.841, 309.2499, 257.9733, 175.8834, 536.7156], [53.9375, 37.8878, 142.7008, 496.7978, 343.7072, 0.0, 228.621, 403.1425, 582.9219, 308.3224, 106.909, 123.917, 531.7667], [47.4935, 208.0368, 0.0, 632.9922, 161.8059, 367.4169, 175.4513, 771.8241], [92.7166, 323.8636, 371.4228], [66.2982, 112.5323, 195.1815, 400.6269, 306.4007, 23.2673, 199.1194, 342.4784, 1069.8571, 644.3749, 261.0217, 344.5403, 1087.6447], [1061.3442, 950.1381, 303.4014, 430.4755, 1470.0324, 943.2885, 1429.2864, 1477.5212, 724.9314, 1169.3381], [78.1314, 245.0722, 286.0067, 689.7995, 497.9113, 86.1481, 393.6068, 805.7786, 1090.0295, 647.3741, 374.7712, 274.1443, 1245.1329], [88.4741, 244.4798, 352.4611, 644.6538, 575.9823, 213.2242, 271.3493, 881.9329, 1292.6611, 642.7682, 480.364, 394.9912, 1342.0739], [75.6318, 369.5067, 456.9641, 513.1612, 384.1468, 394.3804, 357.6104, 998.6536, 1536.2717, 917.1641, 740.9307, 421.2625, 1390.2331], [52.3322, 594.7867, 501.1112, 1261.7701, 484.7293, 155.825, 223.5912, 797.6629, 462.4473, 1010.0255, 528.5903, 995.8045, 1216.7586], [608.7236, 402.5205, 398.1633, 1434.5837, 1023.5211, 216.3528, 694.5679, 1318.8724, 1720.2607, 1267.8796, 613.4315, 917.4677, 1905.1061], [310.0261, 556.5489, 495.9965, 312.6753, 563.218, 312.5637, 500.6817, 771.2034, 1026.7265, 1415.7015, 613.8719, 602.3528, 1354.1453], [228.7759, 942.0778, 544.875, 1605.9124, 293.5552, 95.4287, 635.4376, 1003.0141, 727.0263, 984.4042, 686.0743, 504.7282, 1174.1603], [164.6104, 877.0465, 550.0153, 74.108, 985.6344, 127.0301, 471.5864, 1121.9952, 216.2001, 1473.3283, 630.0533, 778.6204, 2013.095], [863.5738, 464.1318, 592.7218, 521.8385, 360.9912, 301.0204, 1068.8169, 1804.1091, 921.4634, 513.6957, 769.05, 2278.5088], [0.0, 800.9748, 690.3142, 810.463, 669.1035, 656.88, 395.9693, 1427.7614, 1449.1773, 847.8814, 1062.2401, 704.7762, 791.1975], [0.0, 408.9832, 750.2515, 723.0813, 384.0539, 477.2355, 819.3827, 1872.3843, 1527.6158, 1051.0339, 948.9211, 656.0479, 925.2709], [230.4041, 242.8102, 659.6404, 675.9858, 1107.0807, 9.6553, 274.3893, 2089.1865, 2914.3109, 1921.939, 936.4241, 975.1362], [194.4228, 1115.8983, 617.462, 2099.5005, 222.9058, 653.2114, 2625.4293, 2690.8478, 2308.6342, 1626.8728, 1160.9801, 1973.5568], [860.5696, 1417.0347, 1082.8472, 953.6394, 1078.2218, 397.3183, 1020.8307, 2070.7686, 1224.9307, 1661.9261, 1018.5448, 840.5864, 3629.5835], [370.8435, 1222.1833, 1187.4778, 1080.4374, 1221.3442, 498.6888, 826.0722, 555.4018, 2536.508, 1665.8554, 1631.8442, 859.3341, 4078.5594]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

