created: 20230626013408000
creator: Drevarr
modified: 20230705163538934
modifier: drevarr
tags: ChartData
title: 202306260134_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Blanco Padre Guard", "Belvyn Brightblade", "Crusader Siolith", "Aronorf Xideliesi", "Sygaldry Verdandi", "Gestern Yesteryear", "Traidoruns Maximus", "Tika Fiery", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[173.227, 80.8156, 157.9125, 125.569, 169.9085, 45.4742, 110.6231, 0.0, 75.2978, 76.797, 73.4139, 91.8712, 56.8034], [44.2195, 228.96, 156.964, 40.59, 883.1466, 103.6731, 0.0, 96.5101, 96.0508], [88.2144, 0.0, 47.4833, 0.0, 532.8919, 165.4136, 86.7731, 0.0, 19.3028, 68.838, 213.2698, 77.8602, 33.3675, 168.3936, 144.378, 127.6163, 0.0], [163.1729, 154.5975, 41.2263, 127.8541, 109.3275, 55.1664, 47.3382, 110.9332, 108.9909, 152.4116, 155.0887, 115.3253, 229.0517, 270.5094, 108.9178, 86.44, 40.411, 69.8646, 92.9609, 96.9009, 59.1284, 151.738], [80.3002, 105.9696, 49.0212, 0.0, 456.5928, 64.2356, 0.0, 70.0676, 59.2897, 39.1107, 40.2864, 97.1485, 151.2742, 82.935, 134.7408, 69.615, 110.8373, 5.9038, 15.6011, 69.8777, 107.4082, 181.7513, 73.6622, 65.6383, 74.9146, 60.1685, 0.0, 1.8914, 73.9554, 44.079, 88.9636, 40.7795, 91.1037], [607.9894, 182.2936, 149.8583, 48.9104, 176.6406, 20.3181, 49.5, 146.448, 66.924, 64.5272, 5.9038, 23.6763, 62.1227, 29.2039, 193.8402, 123.3355, 102.7382, 150.2323, 58.3317, 39.4933, 65.9015, 88.475, 67.8875, 52.7533, 84.1269], [61.5397, 211.1098, 108.4567, 78.8709, 105.6132, 194.6067, 137.0567, 100.2825, 208.5696, 185.8896, 149.8604, 34.8152, 107.2878, 186.6276, 148.5383, 204.153, 119.2127, 155.017, 147.0537, 139.9251, 15.1998, 122.279, 188.6768, 143.3332, 102.6169, 58.1988], [152.28, 213.7388, 23.8226, 889.5549, 126.2561, 28.1689, 225.1424, 12.3298, 18.2745, 57.8732, 71.1674, 156.0823, 104.085, 126.4896, 77.4774, 237.9742, 2.2604, 86.8298, 117.0074, 61.961, 193.882, 160.1459, 118.8235, 97.5475, 34.5649, 16.9372, 54.0124, 9.3132], [124.6579, 398.2608, 145.3655, 237.6065, 1431.859, 79.7916, 61.8743, 303.181, 32.4736, 129.9421, 102.4716, 250.8669, 120.5644, 105.615, 142.3008, 134.6436, 156.9556, 64.0294, 41.7582, 111.8581, 100.8094, 108.4234, 134.6268, 196.4393, 116.5248, 63.1184, 180.9479, 43.4238, 123.1738, 129.726, 140.1366, 78.0553, 137.5561], [203.8867, 202.6512, 286.8221, 120.4711, 1539.5989, 252.2322, 88.3701, 235.8339, 67.4335, 133.7486, 141.6184, 140.5149, 214.9686, 162.7425, 216.7776, 139.6746, 103.071, 61.5217, 76.1231, 74.4142, 147.5344, 182.4803, 177.7596, 101.5526, 109.5945, 47.4628, 14.2688, 293.9681, 152.3262, 86.5796, 63.0294, 97.1671], [217.5034, 219.7584, 120.5024, 0.0, 1274.0541, 257.5024, 23.6972, 242.8502, 119.3151, 84.1386, 154.2156, 226.2022, 120.978, 179.3025, 212.6736, 142.1784, 287.64, 150.9989, 65.4522, 143.6508, 239.8951, 224.4607, 232.5015, 170.1235, 178.0007, 46.2392, 23.6866, 132.8258, 97.52, 89.9659, 106.2109, 183.6534], [240.2611, 369.6192, 148.1209, 89.0914, 1672.7718, 181.6316, 63.1671, 269.9131, 85.091, 49.2312, 137.9532, 169.5936, 106.4503, 137.79, 270.1728, 156.0546, 241.4258, 107.0262, 99.6776, 314.0014, 198.9017, 173.6706, 137.7626, 202.2182, 111.7096, 63.1442, 29.7038, 115.6313, 143.1594, 145.7984, 107.3306, 160.8458]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

