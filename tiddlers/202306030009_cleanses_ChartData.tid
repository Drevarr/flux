created: 20230603000934000
creator: Drevarr
modified: 20230705163532986
modifier: drevarr
tags: ChartData
title: 202306030009_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Black Raspberry Pie", "Primal Clone", "Cat Wigglebooty", "Venomina The Siren", "Sakis Ranger", "Tegan Parker", "Pamtastic", "Zadey Starbolt", "Arriasa", "Drevarr Moonwillow", "Johosh Of The North"];
const professions = ["Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Druid", "Tempest", "Tempest", "Scrapper", "Druid", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1277, 0.4568, 0.0294, 0.5704, 0.05, 0.0, 0.0476, 0.9153, 0.0722, 0.1487, 0.6454], [0.0426, 0.1235, 0.0, 0.3303, 0.0, 0.0, 0.2872, 0.1702, 0.0, 0.2174, 0.0, 0.2171, 0.2487, 0.2685, 0.2296, 0.0864, 0.3088, 0.0, 0.2444, 0.1507], [0.0, 0.2346, 0.0, 0.4042, 0.0, 0.0, 0.0, 0.5593, 0.5523, 0.5692, 0.234, 0.0244, 0.0, 0.2057, 0.3862, 0.5235, 0.2593, 0.0, 0.2647, 0.0, 0.2667, 0.1544], [0.0, 0.3827, 0.0, 0.358, 0.3167, 0.0, 0.0, 0.1356, 0.722, 0.2359, 0.4326, 0.0, 0.7391, 0.0, 0.4343, 0.2116, 0.4228, 0.0, 0.0, 0.2426, 0.2073, 0.3704, 0.1618], [0.0638, 0.7407, 0.739, 0.0833, 0.0, 0.0, 1.1356, 0.6065, 1.0, 0.4752, 0.122, 2.087, 0.9886, 0.4444, 0.698, 0.3778, 0.5294, 0.0366, 0.6741, 0.2169], [0.0, 0.7654, 0.0, 0.94, 0.6167, 0.0476, 0.1429, 0.6102, 1.1264, 1.1282, 0.4894, 0.3049, 1.8696, 0.0, 0.8229, 0.5767, 0.8456, 0.4741, 0.1975, 0.2279, 0.0, 0.3407, 0.3824], [0.3191, 0.5432, 0.0882, 1.1178, 0.1167, 0.0, 0.0476, 1.3729, 1.7329, 0.4974, 0.9787, 0.0854, 2.2174, 0.2171, 0.836, 0.9195, 0.3481, 0.0741, 0.6912, 0.0244, 0.8296, 0.1949], [0.0851, 0.4938, 0.0, 1.1039, 0.0667, 0.0, 0.1429, 0.9322, 1.6606, 1.2769, 0.6383, 0.061, 1.2609, 0.0, 0.6057, 0.8095, 0.8322, 0.7037, 0.037, 0.6912, 0.0244, 0.8074, 0.4007], [0.4894, 0.9259, 1.1316, 0.6667, 0.1905, 0.4286, 1.0508, 1.2924, 0.7692, 0.8936, 0.2195, 1.587, 0.0, 1.0286, 0.7407, 1.396, 0.6444, 0.0988, 0.8456, 0.0, 0.7333, 0.3971], [0.4255, 0.4074, 0.2647, 1.8476, 0.3333, 0.0, 0.9831, 1.3682, 1.2256, 1.4681, 0.1463, 1.6304, 0.0, 1.4686, 0.7566, 0.3111, 0.0494, 0.6176, 0.2195, 0.4074, 0.4559], [0.1064, 0.9136, 0.0588, 1.612, 0.4667, 0.0714, 0.5714, 1.4068, 1.7365, 1.5538, 1.1915, 0.3659, 1.4348, 0.0, 1.4629, 1.0053, 1.7114, 0.6741, 0.1358, 0.6397, 0.0366, 0.8444, 0.4743], [0.4043, 1.1111, 0.0, 1.6351, 0.4333, 0.0238, 0.0952, 1.3559, 2.0758, 1.8718, 1.4681, 0.2195, 1.8043, 0.0, 1.16, 1.1111, 1.5503, 0.6963, 0.0247, 1.0, 0.1951, 0.8963, 0.6066]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

