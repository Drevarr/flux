created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Rozaalyna", "Kahlianne", "Bella Sassy", "Crusader Siolith", "Squishy Jellyfish", "Il Dim Il", "Arcanophage Farra", "Ravioli Ryebringer", "Bubble Teabringer", "Morton Saltbringer", "Kosa\u00edr", "Johosh Icebringer", "Dizzy Bunnyhopper", "Newtype Khan", "Mort\u00e4rion", "Elon Illusionblade", "Grasszanine", "Seren\u00e1 Joy", "Primal Clone", "Cat Wigglebooty", "Bork Borkbringer", "Lemon Thymebringer", "Brioche Bunbringer", "Tootsie Pop Bringer", "My Birthday Girl", "Venomina The Sly", "Tegan Parker", "Klengah", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae", "Tribal S"];
const professions = ["Scourge", "Scourge", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Scrapper", "Spellbreaker", "Scrapper", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Druid", "Tempest", "Druid", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 5.0102, 4.0312, 23.0441, 6.0, 15.0631, 0.0, 8.0035, 17.1222, 0.0, 7.9674, 13.2982, 14.9597, 0.0, 16.9912, 2.0, 0.0, 0.0, 12.0446, 0.0, 1.0, 0.0, 5.0, 0.0], [0.0, 6.0102, 0.0, 13.0147, 0.9867, 10.2941, 16.3243, 0.0, 15.007, 23.0444, 0.0, 1.9891, 4.0, 6.9758, 0.0, 17.0442, 6.0072, 0.0, 0.0, 15.0536, 0.0, 0.0, 0.0, 4.0], [16.0631, 0.9944, 11.0035, 0.0, 2.0, 3.9783, 13.9123, 10.9677, 0.0, 35.0531, 12.1079, 0.0, 0.0, 6.0179, 2.4615, 0.0, 0.0, 7.1357, 4.0052], [0.0, 0.0, 0.0, 9.0147, 0.0, 0.0, 26.0784, 31.4237, 25.5205, 0.0, 0.0, 4.0, 16.3667, 0.0, 8.9674, 4.0, 23.0403, 0.0, 13.9956, 2.0, 0.0, 0.9828, 2.0, 0.0, 2.0, 0.0, 8.1357, 2.0366], [0.0, 9.0204, 0.0, 1.0, 0.0, 0.0, 27.098, 5.9831, 20.9589, 1.0, 0.0, 3.0, 15.5889, 0.0, 3.9783, 0.0, 6.9758, 19.0885, 6.0072, 0.0, 0.0, 2.0, 0.0, 10.0476, 5.0132, 10.0, 14.0209], [0.0, 0.0, 0.0, 15.1471, 0.0, 0.9867, 19.2451, 32.7797, 11.0822, 10.0901, 0.0, 2.0, 8.0111, 0.0, 12.9565, 16.0175, 14.121, 0.0, 18.0088, 10.0144, 0.0, 0.0, 9.0268, 0.0, 13.0635, 0.0, 3.0, 0.0], [1.0, 8.0153, 1.0, 23.2647, 0.0, 0.0, 44.3627, 9.036, 0.0, 9.0175, 17.0333, 2.0, 13.9565, 12.0, 22.9435, 0.0, 20.0575, 12.0504, 0.0, 0.0, 6.0179, 0.0, 2.0, 0.0, 1.0, 0.0], [0.0, 0.0, 3.0, 0.0, 0.0, 10.9867, 33.0686, 21.9831, 13.0274, 1.0, 0.0, 17.007, 5.0, 0.0, 2.0, 27.0081, 0.0, 25.0133, 2.0, 0.0, 0.0, 4.0089, 0.0, 3.0, 0.0, 11.0, 6.0052], [0.0, 10.0204, 0.0, 10.0147, 0.0, 0.0, 26.3824, 46.2712, 16.4521, 6.018, 0.0, 3.0, 10.0111, 0.0, 9.9674, 8.0, 18.9677, 25.0752, 8.0144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 10.0105], [0.0, 6.0102, 0.0, 11.0147, 5.9867, 25.0098, 17.0, 12.0274, 6.018, 0.0, 12.0035, 8.0111, 0.0, 7.9674, 12.0, 27.9274, 21.9912, 28.0576, 0.0, 5.9655, 10.0357, 0.0, 0.0, 0.0, 3.0, 0.0], [18.3836, 24.2883, 0.0, 7.0035, 1.0, 11.9565, 24.0175, 18.9516, 0.0, 68.2611, 2.0, 0.0, 0.9828, 14.0446, 0.0, 13.254, 0.0, 15.0045, 0.0], [34.5616, 27.2342, 0.0, 40.0912, 72.1549], [9.0213, 10.0204, 0.0, 17.4853, 0.0, 5.9867, 28.0882, 40.9237, 27.4521, 6.018, 0.0, 23.0351, 8.0111, 3.0312, 13.9674, 13.4211, 6.9758, 19.9912, 17.036, 0.0, 0.0, 3.0089, 0.0, 5.0159, 0.0, 12.0, 10.0105], [23.0901, 0.9944, 28.0667, 0.0, 10.1562, 24.0435, 0.0, 48.2177, 0.0, 46.0664, 42.2518, 0.0, 0.0, 21.1161, 0.0, 1.0, 0.0], [9.0213, 10.0204, 0.0, 24.3382, 0.0, 1.9867, 60.2059, 54.4661, 40.137, 14.0541, 0.0, 8.0035, 20.1333, 6.0625, 6.9783, 18.0175, 8.9758, 0.0, 41.9912, 24.0432, 0.0, 0.0, 4.0089, 0.0, 8.0317, 3.0132, 0.0, 3.0], [0.0, 0.0, 0.0, 0.0, 0.0, 12.9661, 0.0, 21.4054, 0.0, 21.1368, 30.1, 0.0, 19.1522, 23.5088, 42.0726, 0.0, 86.3319, 34.3022], [2.0, 1.0, 0.0, 17.5, 3.9444, 0.0, 64.049, 96.9831, 12.2466, 0.0, 0.0, 56.0531, 35.1439, 3.9375, 0.0, 21.3571, 7.9231, 32.9365, 0.0, 20.0633, 0.0], [0.0, 10.0204, 0.0, 31.2353, 0.0, 5.9867, 66.3039, 53.1102, 42.6986, 11.045, 0.0, 6.0, 14.0667, 5.0312, 8.9674, 15.0175, 39.9032, 5.95, 60.0929, 19.0719, 0.0, 0.0, 7.0179, 0.0, 9.0317, 0.0, 1.0, 3.0], [0.0, 0.0, 0.0, 52.3676, 0.0, 0.0, 27.4706, 39.7627, 62.2329, 28.1441, 0.0, 5.0, 46.1444, 14.1562, 22.9348, 10.0, 34.1129, 0.0, 64.0442, 0.0, 0.0, 2.9828, 49.4643, 0.0, 21.1905, 0.0, 0.0, 0.0], [0.0, 2.1684, 0.0, 10.1912, 0.0, 0.0, 64.7941, 23.1695, 5.0137, 42.6126, 0.0, 36.3965, 39.4444, 15.1562, 33.0109, 46.6491, 32.9597, 0.0, 56.323, 7.0647, 3.9375, 0.0, 25.0893, 0.0, 24.3492, 0.0, 2.0, 0.0], [12.6383, 41.1327, 39.5735, 18.24, 0.0, 121.8644, 0.0, 32.1892, 0.0, 54.0561, 3.0312, 30.337, 28.0702, 64.7177, 0.0, 22.2168, 0.0, 0.0, 0.0, 5.0179], [4.0, 62.6684, 6.0312, 102.5294, 20.08, 169.7157, 196.0508, 121.0822], [0.0, 0.0, 67.7157, 58.6017, 18.3973, 40.4234, 2.9944, 35.0351, 19.8778, 7.0625, 29.0, 26.5789, 61.0565, 0.0, 85.354, 13.0216, 0.0, 0.0, 31.1429, 0.0, 28.1429, 0.0, 12.0407, 0.0], [0.0, 25.2092, 0.0, 15.1324, 0.0, 0.0, 47.1373, 78.3729, 49.6301, 54.8378, 0.0, 20.0175, 23.1556, 13.1875, 45.2174, 35.1053, 35.0726, 0.0, 107.1991, 16.1942, 0.0, 0.0, 9.0268, 0.0, 19.3492, 0.0, 0.0, 0.0], [0.0, 39.3827, 5.0312, 69.4118, 3.9444, 15.1867, 80.3431, 121.5932, 49.3973, 25.0991, 0.0, 49.1579, 80.6111, 22.4062, 38.3696, 43.2105, 96.4204, 49.0719, 0.0, 29.6518, 0.0, 23.1111, 0.0, 46.5068, 0.0], [0.0, 36.0816, 0.0, 76.2059, 0.9722, 24.0, 134.0588, 128.7881, 89.0411, 40.4685, 0.9944, 49.0807, 73.0556, 31.0312, 30.913, 33.1579, 98.5968, 4.0, 148.8009, 59.4245, 0.0, 1.9828, 46.3036, 0.0, 34.3968, 7.0526, 96.8824, 19.3351], [52.7568, 0.9944, 89.6246, 145.4333, 19.2188, 75.9348, 102.0175, 197.2581, 261.0221, 145.2374, 0.0, 0.0, 75.2411, 4.9231, 41.4762, 0.0, 46.0136, 7.3194], [83.5441, 0.0, 9.0267, 147.0, 166.0593, 100.9041, 56.5586, 0.0, 56.0632, 82.4111, 12.125, 71.8587, 59.7193, 111.3387, 0.95, 179.6903, 83.1583, 0.0, 17.0517, 41.4018, 0.0, 35.1587, 15.0658, 59.2036, 50.2723], [22.4894, 55.1735, 16.875, 92.8676, 0.0, 27.2933, 146.2549, 99.8814, 99.0959, 51.5946, 0.0, 90.3544, 68.5778, 10.0938, 67.8913, 43.9649, 77.8629, 3.95, 209.7345, 31.1439, 0.0, 17.9655, 60.4732, 5.9231, 23.6032, 26.0921, 112.3484, 59.3141], [3.0, 40.4082, 132.3235, 0.0, 75.24, 130.0882, 124.8767, 49.3153, 6.0111, 86.9404, 13.125, 82.0217, 73.3158, 195.7984, 6.95, 258.9779, 152.0576, 37.8103, 55.5536, 0.0, 60.9048, 20.1579, 110.638, 61.0366], [16.0426, 68.7959, 32.375, 111.4265, 17.75, 49.76, 144.6471, 171.1949, 101.2055, 62.3514, 7.9889, 108.7158, 133.5333, 42.0312, 72.5435, 98.3684, 126.9435, 0.95, 210.5796, 122.5755, 7.1875, 23.0345, 81.9107, 9.9615, 24.2857, 40.4737, 109.1312, 76.5654], [78.5765, 0.0, 115.3971, 0.9722, 75.8267, 192.9706, 239.0, 105.2877, 65.1712, 0.0, 91.1368, 137.0556, 31.6875, 71.5326, 71.6316, 157.3871, 0.0, 246.3407, 157.036, 0.0, 11.4655, 57.6964, 3.9615, 49.7937, 37.7763, 118.8462, 77.7068], [31.9574, 77.8827, 5.0312, 213.7206, 10.6944, 64.72, 269.4314, 295.6186, 170.0685, 106.2973, 3.9944, 137.4105, 139.5444, 28.3438, 47.7717, 93.9649, 200.8952, 294.1903, 166.295, 0.0, 26.3448, 73.9554, 0.0, 37.2698, 44.25, 90.6244, 55.4398]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

