created: 20230412220340000
creator: Drevarr
modified: 20230705163525402
modifier: drevarr
tags: ChartData
title: 202304122203_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Nazhul Naxxremis", "Grasszanine", "Solus Sanctus", "Oo Dads Mad", "K\u00f4sair", "Kira Dragonblaze", "Inedible Plant", "Panther B Me", "Estryl", "Nazhul Naxxremis", "Sp\u00edcy Cheese", "Mac Chiato", "Minka Bringer", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Primal Clone", "Rina Of Theros", "K\u00f4sair", "Tegan Parker", "Gavann", "Jeckyll Mbs", "Allie Mistwalker", "Bella Sassy", "Johoshua", "Rozaalyna", "Demon Staph", "Lucas Ryn", "Smol Gluvs", "Skye Nightroad", "Sumatra Satyricon", "Xanvias Einzbern", "Blancooo Padreee", "Sub Train", "Smol Daddy Tika", "Konztantin\u00eb", "Zadie Miststep", "Fribble Bibble", "Arriasa", "Ark Darkness", "Tribal Z", "Newtype Khan", "Black Raspberry Pie", "Xyntharos", "Eibh\u00ebar", "Lord Erin The Wise", "Venomina The Siren", "Arcanophage Farra"];
const professions = ["Vindicator", "Reaper", "Spellbreaker", "Firebrand", "Spellbreaker", "Berserker", "Dragonhunter", "Vindicator", "Scourge", "Berserker", "Scourge", "Berserker", "Tempest", "Scrapper", "Scrapper", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Scourge", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Scrapper", "Scourge", "Druid", "Firebrand", "Scourge", "Scrapper", "Soulbeast", "Berserker", "Berserker", "Firebrand", "Berserker", "Vindicator", "Tempest", "Scrapper", "Druid", "Firebrand", "Weaver", "Spellbreaker", "Chronomancer", "Vindicator", "Chronomancer", "Weaver", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 0, 0, 0, 0, 19, 8, 43, 2, 0, 0, 2, 13, 0, 0, 0, 0, 0, 0], [0, 0, 74, 25, 0, 0, 0, 0], [1, 0, 0, 0, 0, 28, 30, 0, 0, 13, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0], [20, 0, 0, 0, 0, 29, 43, 0, 0, 6, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0], [24, 0, 0, 0, 4, 46, 36], [22, 0, 0, 0, 0, 6, 82, 0, 0, 0, 0, 0, 0], [23, 0, 0, 35, 0, 14, 20, 0, 25], [12, 0, 0, 0, 0, 22, 16, 0, 5, 8, 0, 0, 6, 9, 0, 0, 0, 0, 0, 44], [38, 0, 0, 0, 0, 7, 36, 0, 32, 10], [48, 0, 21, 10, 26, 0, 7, 6, 0, 0, 0, 0, 0, 5], [6, 0, 0, 12, 0, 37, 32, 0, 20, 18], [56, 0, 0, 7, 0, 4, 5, 0, 9, 10, 8, 0, 0, 8, 0, 0, 0, 22], [0, 0, 0, 0, 0, 50, 0, 0, 65, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0], [0, 37, 30, 0, 44, 22, 0, 0, 0, 0, 0, 0], [23, 0, 0, 0, 0, 3, 5, 0, 44, 40, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0], [11, 0, 0, 0, 0, 32, 43, 0, 9, 0, 0, 0, 28, 9, 0, 5, 0, 0, 0, 0], [36, 0, 0, 0, 0, 21, 8, 0, 7, 22, 0, 0, 34, 15, 0, 0, 0], [2, 0, 0, 0, 0, 19, 56, 0, 12, 0, 0, 0, 33, 22, 0, 0, 0, 0, 0], [31, 0, 0, 0, 0, 18, 0, 0, 40, 17, 7, 0, 15, 18, 0, 0, 0, 0, 0, 1], [7, 0, 0, 0, 12, 19, 54, 0, 29, 26, 0, 0, 0, 0, 0], [0, 55, 4, 21, 0, 41, 26], [0, 0, 0, 0, 0, 47, 17, 20, 0, 0, 0, 42, 5, 0, 0, 0, 0, 0, 17], [0, 0, 0, 0, 53, 20, 0, 2, 42, 0, 0, 21, 13, 0, 0, 0, 0, 0, 0], [25, 0, 0, 0, 0, 20, 29, 7, 7, 0, 46, 19, 0, 0, 0, 0, 0, 0], [30, 0, 0, 26, 0, 11, 10, 22, 28, 0, 0, 23, 4], [0, 0, 0, 0, 0, 17, 69, 0, 34, 21, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0], [19, 0, 0, 0, 0, 60, 37, 0, 16, 26, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], [30, 0, 0, 0, 0, 77, 27, 0, 28, 5], [0, 0, 0, 0, 0, 11, 9, 0, 24, 23, 0, 0, 26, 77, 0, 0, 0, 0, 0, 0], [27, 0, 0, 0, 0, 14, 15, 40, 23, 0, 0, 20, 16, 0, 0, 0, 0, 0, 16], [13, 0, 0, 5, 0, 29, 66, 0, 28, 31], [22, 0, 0, 0, 0, 19, 13, 0, 55, 0, 12, 27, 0, 10, 0, 0, 0, 17], [36, 0, 0, 0, 17, 12, 26, 0, 12, 12, 15, 0, 24, 16, 0, 10, 0, 0, 0, 5], [16, 0, 0, 0, 0, 25, 75, 0, 27, 10, 0, 0, 0, 23, 0, 0, 0, 0, 0, 11], [35, 0, 0, 0, 0, 26, 20, 0, 35, 9, 14, 0, 7, 42, 0, 0, 0, 0, 0, 0], [69, 0, 0, 0, 0, 37, 17, 0, 16, 18, 0, 0, 5, 18, 0, 0, 0, 0, 0, 12], [32, 0, 0, 0, 0, 14, 39, 0, 17, 5, 0, 32, 48, 0, 0, 0, 0, 0, 15], [26, 0, 0, 0, 0, 4, 13, 7, 69, 0, 0, 25, 60], [20, 0, 0, 0, 0, 33, 32, 0, 30, 53, 0, 30, 13, 0, 0, 0, 0, 0, 0], [27, 0, 0, 0, 0, 34, 26, 12, 6, 0, 0, 11, 106, 0, 0, 0, 0, 0, 0], [33, 0, 0, 0, 0, 17, 4, 0, 61, 15, 49, 0, 15, 29, 0, 0, 0, 0, 0, 0], [51, 0, 0, 0, 0, 12, 36, 29, 12, 0, 0, 62, 12, 0, 0, 0, 0, 0, 20], [21, 0, 0, 50, 0, 32, 25, 35, 42, 58], [35, 0, 0, 0, 0, 53, 21, 0, 20, 50, 14, 0, 39, 36, 0, 0, 0, 0, 0, 0], [21, 0, 0, 0, 0, 45, 46, 0, 19, 52, 9, 0, 29, 85, 0, 11, 3, 0, 2, 1], [24, 0, 0, 0, 0, 21, 64, 0, 81, 11, 17, 0, 15, 86, 0, 0, 0, 0, 0, 19], [51, 0, 0, 3, 0, 38, 115, 0, 37, 14, 15, 0, 44, 38, 0, 8, 5, 2, 0, 27], [51, 0, 0, 10, 7, 76, 36, 0, 34, 16, 28, 0, 48, 90, 0, 6, 0, 0, 0, 0], [24, 0, 0, 0, 0, 28, 40, 0, 80, 22, 0, 0, 100, 159, 0, 0, 0, 0, 0, 0], [123, 0, 0, 26, 0, 86, 62, 0, 18, 32, 23, 0, 41, 64, 0, 6, 0, 0, 0, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

