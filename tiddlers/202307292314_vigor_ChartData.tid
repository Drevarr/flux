created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Avatar Shazbott", "Gestern Yesteryear", "Master Marcovius", "Revitiel", "Ex Warcraft", "Vini Boy", "Mistwalker Cael", "Grasszanine", "Loganlek", "Tootsie Pop Rocks", "Cesare Pirane", "N\u00eec\u00f4le", "Tegan Parker", "Newtype Khan", "Drevarr Moonwillow", "Kosa\u00efr"];
const professions = ["Tempest", "Firebrand", "Harbinger", "Vindicator", "Tempest", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 141.0667, 47.1821, 17.206], [0.0, 0.0, 0.0, 21.4704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 161.805, 24.299, 0.0, 0.0], [7.8386, 0.0, 0.0, 31.9938, 0.0, 32.571, 39.3484, 32.4318, 32.5823, 47.1621, 24.5525, 0.0, 0.0, 0.0], [1.005, 3.9738, 0.0, 3.9102, 8.929, 19.4589, 7.5909, 51.982, 21.9604, 11.9011, 27.6003, 6.9955, 151.7425, 35.0347, 2.999, 0.0], [154.0757, 322.9229], [29.978, 21.7771, 0.0, 0.0, 61.852, 0.0, 0.0, 0.0, 0.0, 391.6325, 54.2089, 0.0, 0.0], [9.72, 33.8106, 4.7812, 42.4752, 26.5824, 50.8559, 4.8822, 115.15, 25.2448, 13.7043, 33.6783, 10.0345, 229.0225, 39.0109, 9.6307, 4.5976], [99.9211, 65.1077, 0.0, 32.9084, 0.0, 66.709, 0.0, 498.6975, 82.6166, 0.0, 0.0], [34.6934, 47.8714, 0.0, 264.845, 52.6148, 44.8482, 74.5805, 0.0, 452.8125, 39.2318, 0.0, 57.156], [0.0, 10.8336, 0.0, 51.9379, 85.9536, 0.0, 175.686, 81.788, 73.0296, 108.0098, 0.0, 455.2275, 54.5623, 0.0, 0.0], [56.5728, 139.794, 57.3496, 220.2655, 0.0, 0.0, 38.7101, 19.4383, 1028.79, 104.4415, 49.5475, 56.7729], [58.8544, 364.3675, 189.9156, 98.4547, 198.4331, 108.1719, 1034.8275, 161.3012, 0.0, 71.9936], [0.0, 170.7408, 258.0996, 331.961, 66.7828, 16.6925, 129.532, 17.8041, 1153.565, 178.929, 46.0838], [0.0, 0.0, 46.0879, 268.7283, 52.9944, 138.7196, 54.5406, 250.04, 125.1292, 127.0483, 163.7085, 177.7253, 1357.23, 296.9338, 0.0], [0.0, 124.098, 0.0, 275.6287, 61.6848, 305.7322, 8.3266, 413.224, 185.0856, 88.3053, 127.7883, 38.8192, 1410.7625, 190.2391, 61.0368, 34.2727], [514.227, 304.0324, 118.2899, 296.2795, 94.2956, 2014.915, 347.7408, 90.0979, 83.3134]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

