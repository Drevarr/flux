created: 20230503220838000
creator: Drevarr
modified: 20230705163528025
modifier: drevarr
tags: ChartData
title: 202305032208_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Xkaet", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar", "Mac Adaymia", "\u00c1rkantor", "Tegan Parker", "Skye Nightroad", "Tribal S", "Artakama Nahid", "Arriasa", "Johosh The Great", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Vindicator", "Tempest", "Scrapper", "Druid", "Tempest", "Druid", "Willbender", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.022, 0.5223, 0.4967], [0.1893, 0.3401, 0.0, 0.2143, 0.0132, 0.0476, 0.0, 0.0, 0.2071, 0.0, 0.0, 0.2835, 0.2024], [0.2264, 0.2902, 0.2121, 0.0, 0.0395, 0.0476, 0.0, 0.0, 0.229, 0.0769, 0.2444, 0.1853], [0.3492, 0.3993, 0.2727, 0.0, 0.0, 0.0905, 0.0, 0.0, 0.2325, 0.0, 0.0, 0.3813, 0.3219], [0.2869, 0.4603, 0.1818, 0.0, 0.0658, 0.119, 0.0147, 0.0959, 0.4511, 0.0, 0.0, 0.4302, 0.1472], [0.4952, 0.586, 0.1212, 0.0714, 0.0526, 0.1667, 0.0294, 0.0, 0.2808, 0.0, 0.0, 0.655, 0.3219], [0.0, 1.0875, 0.0, 0.0, 1.3603, 0.8121], [0.6067, 0.9242, 0.5152, 0.0, 0.0132, 0.3952, 0.0, 0.0, 0.71, 0.0769, 0.9707, 0.5861], [1.4054, 1.8207, 0.0303, 0.25, 0.0263, 0.9571, 0.0, 0.0, 1.0276], [1.108, 1.3863, 0.2727, 0.1184, 0.5476, 0.0, 0.1781, 0.9091, 0.0, 0.011, 1.3128, 0.8029], [1.1504, 1.9335, 0.5152, 0.3214, 0.0789, 1.1524, 0.0, 0.0, 1.275, 0.0, 1.5866, 1.0591], [1.4002, 1.9797, 0.4848, 0.0714, 0.2368, 0.881, 0.0, 0.3836, 1.6651, 0.0, 1.8156, 1.2116], [1.6292, 1.9168, 0.3636, 0.0, 0.1316, 0.9524, 0.0735, 0.1918, 1.3521, 0.022, 1.8925, 1.2352], [1.624, 1.8909, 0.8182, 0.0357, 0.3684, 0.9952, 0.0882, 0.3699, 1.5604, 0.0, 0.3297, 2.0391, 1.1183]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

