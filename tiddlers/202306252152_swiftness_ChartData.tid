created: 20230625215204000
creator: Drevarr
modified: 20230705163536768
modifier: drevarr
tags: ChartData
title: 202306252152_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Pale Pam", "Eibh\u00ebar", "Elon The Mender", "Imalou", "Oo Dads Mad", "Tegan Parker", "Decidus Borleaf", "Fribble Bibble", "Rafaellagabriela", "Drumina", "Grasszanine", "Irish Necroman", "Demon Maddx", "Rednuii", "High Sorcer Baradun", "Zayde Sunsabre", "Black Raspberry Pie", "Johosh The Mighty", "Newtype Khan", "Blancooo Padreee", "Ryvalia Fazebringer", "Miphest\u00f6", "Drevarr Moonwillow", "Gestern Yesteryear", "Traidoruns Maximus", "Koralia Danai", "Sygaldry Verdandi", "Tika Fiery", "Gavann", "Gabe Malhorn", "Arcanophage Farra", "Solus Sanctus", "Crusader Siolith", "Bella Sassy"];
const professions = ["Druid", "Chronomancer", "Druid", "Firebrand", "Spellbreaker", "Tempest", "Herald", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Reaper", "Reaper", "Tempest", "Tempest", "Berserker", "Chronomancer", "Berserker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[147.84, 64.7398, 89.604, 50.5553, 55.9714], [0.0, 40.572, 22.2733, 38.5917, 119.8579, 0.0, 0.0, 0.0, 65.1666, 0.0, 33.5091, 8.436, 101.846, 0.0, 0.0, 12.1765, 0.0, 59.7154], [0.0, 11.7024, 0.0, 98.0683, 32.1922, 0.0, 0.0, 17.929, 0.0, 72.864, 6.2279, 0.0, 0.0, 87.0872, 0.0, 16.4209, 101.7878, 78.5275], [0.0, 43.4424, 64.6814, 164.3552, 84.6518, 24.3984, 34.404, 19.0159, 86.016, 18.5014], [45.6127, 25.7232, 77.1176, 114.5428, 50.101, 1.4621, 23.0112, 3.8971, 76.3106, 120.0, 26.066], [91.1544, 51.1359, 87.2057, 111.9905, 71.3891, 75.1766, 94.0277], [341.0571, 223.978, 54.9226], [0.0, 28.2072, 24.346, 82.4371, 57.1334, 0.0, 0.0, 0.0, 47.015, 140.352, 0.0, 17.328, 65.6522, 11.3364, 0.0, 55.2465, 93.4349, 0.0], [0.0, 4.7047, 426.1951, 208.8341], [75.7574, 69.6072, 14.9366, 6.6157, 41.2339, 0.0, 62.9236, 11.7355, 34.2348, 70.08, 5.4076, 11.7648, 35.6906, 48.6619, 48.5502, 64.779, 113.3194, 16.3944], [17.1295, 78.2184, 53.627, 88.7933, 53.377, 0.0, 0.0, 0.0, 0.0, 34.656, 0.0, 0.0, 82.1039, 0.0, 58.04, 55.2465, 71.5546, 233.231], [69.9816, 106.0944, 24.1157, 56.7525, 27.2126, 58.4844, 34.498, 20.7883, 31.0243, 104.352, 39.4029, 55.0848, 29.9228, 0.0, 75.5516, 75.0072, 97.944, 26.8934], [55.8587, 94.5576, 14.7721, 81.8533, 37.6522, 13.5268, 53.2416, 27.865, 73.6249, 72.384, 57.2359, 66.1656, 61.0457, 16.277, 18.5602, 45.0878, 120.2678, 38.651], [0.0, 176.324, 0.0, 0.0, 158.9207, 515.6659, 125.9222], [29.4326, 112.9944, 57.6408, 110.3269, 123.4834, 46.53, 5.0232, 69.7353, 152.832, 12.9115, 58.3224, 49.2778, 0.0, 77.5964, 103.6742, 0.0], [1.8198, 29.9736, 99.8844, 61.4224, 55.9104, 58.0628, 39.6492, 28.5936, 94.8944, 87.84, 9.1444, 39.5352, 44.7488, 30.3714, 85.7231, 81.9652, 121.8941, 57.9269], [146.3324, 29.256, 39.1181, 69.5299, 15.5064, 0.0, 15.9048, 0.0, 0.0, 114.048, 0.0, 90.1968, 54.2714, 412.1543, 58.1449, 0.0, 3.5482, 44.4802], [66.3026, 46.5336, 16.3513, 231.2908, 66.0878, 58.4216, 15.5288, 42.0293, 61.8635, 120.384, 77.2867, 118.6512, 72.2329, 27.7657, 22.8595, 106.2487, 65.4192, 57.4632], [90.1572, 160.0248, 23.3261, 141.6542, 16.0306, 0.6548, 39.668, 0.0, 101.161, 144.672, 14.1267, 78.7512, 116.4784, 0.0, 105.594, 80.5041, 118.5677, 58.4568], [55.0675, 136.1232, 57.1144, 129.6551, 51.8482, 43.4238, 81.9907, 125.28, 30.9268, 82.08, 65.7683, 20.8962, 271.0631, 89.3407, 107.4797, 29.5099], [0.0, 0.0, 140.483, 10.8316, 194.9875, 0.0, 26.8464, 0.0, 29.1722, 997.056, 61.7929, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 117.6422], [21.3624, 62.2656, 65.4381, 123.4934, 121.9982, 187.6992, 12.2102, 187.7205, 146.592, 30.3496, 188.328, 209.6921, 24.754, 0.0, 229.5444], [115.7921, 134.5776, 117.7491, 133.3522, 80.808, 0.0, 55.9488, 20.5123, 33.71, 120.288, 53.9853, 187.0968, 76.9168, 65.1082, 174.1725, 217.02, 194.8531, 28.3507], [79.1596, 289.3032, 71.9852, 123.1691, 130.2974, 4.9604, 20.2476, 16.8912, 6.4518, 153.888, 63.5246, 4.5144, 52.6843, 14.1113, 241.6499, 318.3981, 329.5354, 81.2765], [268.5204, 148.2499, 26.7665, 45.496, 59.6822, 154.1339, 473.952, 64.2841, 169.8144, 73.7425, 37.0379, 0.0, 390.4134, 138.7478, 120.325], [65.8674, 239.7888, 70.3073, 95.4091, 94.1304, 0.0, 0.0, 94.1822, 105.6063, 297.984, 65.2866, 15.8232, 112.0654, 0.0, 310.7526, 198.7205, 310.6858, 125.9554], [148.706, 387.1176, 47.5734, 107.9919, 220.453, 132.258, 22.5878, 17.2563, 14.784, 50.4612, 198.132, 35.0326, 12.2162, 67.425, 291.7489, 325.1002, 132.0494], [255.6763, 262.2, 67.1818, 195.7475, 134.316, 0.0, 0.0, 55.752, 34.0496, 660.48, 71.5449, 57.456, 4.8775, 0.0, 168.51, 245.687, 19.8845, 24.4757], [227.5096, 89.8104, 169.0402, 294.1401, 128.725, 62.698, 43.332, 158.6409, 162.048, 57.2359, 276.564, 258.0021, 0.0, 185.9168, 290.0094, 277.7174, 51.9653], [64.8388, 145.5624, 112.6825, 279.5466, 67.1798, 53.3894, 76.0836, 21.1085, 173.6438, 209.76, 79.4741, 186.0936, 185.1112, 293.5556, 369.3306, 321.9216, 151.6565], [201.3208, 197.1192, 130.942, 246.468, 65.52, 8.683, 89.0932, 23.8354, 83.7194, 309.312, 81.1754, 288.4656, 115.9364, 137.695, 215.1727, 260.7163, 415.9478], [212.1603, 284.7768, 94.5875, 230.5773, 283.6142, 52.8064, 78.0952, 54.0077, 103.1984, 21.888, 91.0185, 136.9368, 70.0264, 50.54, 279.0849, 244.2258, 456.6038, 138.4747], [68.4388, 283.1208, 195.7879, 184.0727, 118.8096, 89.5924, 70.218, 104.4163, 134.3462, 303.648, 45.9042, 238.6704, 184.4144, 21.0654, 149.8449, 235.5979, 484.5456, 4.9018], [245.1533, 340.2528, 107.1553, 331.3049, 260.9006, 0.0, 73.3764, 42.4488, 104.3406, 604.32, 112.8617, 393.7104, 215.0728, 12.9438, 343.6262, 306.6391, 299.0064, 171.6941]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

