created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Lhiapp", "World Devourerer", "Darks Na", "Philip Poundhouse", "Alarics Clone", "Drevarr Moonwillow", "Tribal S", "Vera Khin", "Pixzil", "Thought Bound", "Bella Sassy"];
const professions = ["Tempest", "Guardian", "Dragonhunter", "Herald", "Chronomancer", "Scrapper", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.5022, 37.2263, 44.4326, 34.4816, 0.0, 0.0, 0.0, 0.0, 0.0, 57.2208, 100.2905, 5.4806, 0.0, 0.0], [10.038, 19.8778, 14.9986, 33.6403, 34.8487, 0.0, 0.0, 0.0, 12.1744, 55.0089, 38.0453, 33.8851, 36.4162, 30.1154], [0.0, 20.0827, 15.1952, 15.1334, 0.0, 30.6169, 0.0, 15.2566, 18.2157, 40.3466, 20.3185, 23.6429, 21.1068, 0.0, 4.3261, 40.5011, 0.0, 27.9734, 17.104, 7.6674, 15.1371, 25.2806, 8.2919, 15.2397, 9.0077, 4.9862, 9.36, 0.0, 39.7836, 14.8608, 0.0, 21.9555, 28.3794, 60.8565], [58.109, 55.5542, 13.7664, 100.606, 98.3259, 9.4068, 21.1365, 16.6075, 18.7083, 0.0, 0.8688, 39.6525, 20.4048, 27.993, 38.1582, 11.6888, 17.0664, 41.565, 74.8765, 130.7175], [63.4234, 33.7865, 11.376, 100.5362, 133.6982, 22.0584, 17.1468, 61.4275, 37.4684, 37.6257, 26.3403, 32.3014, 72.1139, 49.0464, 14.39, 52.6127, 44.2811, 31.1532, 70.992, 107.1231, 133.11], [6.012, 17.8886, 18.4603, 27.4512, 13.3745, 22.063, 0.0, 9.9882, 5.0109, 18.9111, 15.0696, 22.0524, 23.9976, 10.736, 0.0, 32.9023, 3.9984, 0.0, 121.5917, 239.3373, 11.7468, 50.0049, 70.6059, 50.2679, 34.6491, 7.4703, 29.4106, 138.0544, 15.2784, 0.0, 57.334, 59.4671, 32.9862, 88.5615, 229.928, 151.1625], [0.0, 53.7613, 0.0, 0.0, 18.9062, 10.0285, 41.7441, 56.7403, 99.4219, 49.001, 15.9738, 122.6166, 30.1291, 4.6944, 55.5436, 130.8325, 25.4436, 26.433, 57.1032, 59.4819, 35.1288, 41.0422, 27.9572, 115.4637, 62.7264, 37.1778, 131.5607, 85.644, 39.6006, 55.5645, 138.578, 239.511], [264.448, 483.9282, 97.8978, 123.2847, 142.7888, 146.1131, 85.485, 98.3571, 92.3, 309.6218, 115.1136, 32.9659, 243.3456], [111.7612, 340.6781, 64.272, 21.4434, 0.0, 15.6218, 116.8992, 10.878, 20.7791, 128.048, 99.2448, 87.0105, 145.125, 41.7612, 424.473, 266.7724, 495.552], [211.8094, 220.4721, 37.167, 69.5376, 117.311, 62.1054, 43.6035, 38.1951, 73.0394, 143.3459, 226.7712, 6.766, 187.5789, 175.2768, 116.1576, 106.7685, 309.8288, 386.5845], [166.6076, 194.6519, 103.7322, 62.0532, 125.0357, 45.8636, 105.0666, 10.5672, 47.0067, 264.6778, 161.0352, 34.3011, 277.9047, 67.286, 105.378, 78.6165, 338.8781, 473.4975]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

