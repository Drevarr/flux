created: 20230301221309000
creator: Drevarr
modified: 20230705163520865
modifier: drevarr
tags: ChartData
title: 202303012213_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Sygaldry Verdandi", "Kahless The Drunk", "Raziel Umbra", "Ravioli Fetabringer", "Skye Nightroad", "Black Raspberry Pie", "Flanneryflame", "Newtype Khan", "Abigail Ryn", "Eibh\u00ebar", "Arriasa", "Fribble Bibble", "Etchery Howls", "Mac Aaroni", "Tegan Parker", "Zadie Miststep", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Spellbreaker", "Tempest", "Chronomancer", "Druid", "Scrapper", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2667, 0.635, 0.6308, 0.3881, 0.2143, 0.0132, 0.2805, 0.1681, 0.1039, 0.0, 0.0, 0.3333, 0.0, 0.0, 0.3529, 0.0, 0.1818, 0.0, 0.359, 0.0, 0.0, 0.1491, 0.0, 0.2188, 0.2373, 0.3014, 0.2, 0.8889, 0.4561], [0.35, 0.0949, 0.2462, 0.0455, 0.2979, 0.6471, 0.2836, 0.0824, 0.0526, 0.1341, 0.042, 0.1039, 0.0, 0.0, 0.3611, 0.0, 0.0, 0.1569, 0.0, 0.0505, 0.0, 0.141, 0.0839, 0.0, 0.4531, 0.1864, 0.1918, 0.1455, 0.2222, 0.2456, 0.181, 0.1402, 0.2083, 0.0235, 0.2828, 0.1744, 0.0928, 0.5, 0.4773, 0.4179, 0.1404], [0.0, 0.2409, 0.4615, 0.0, 0.1277, 0.0, 0.5224, 0.0495, 0.0, 0.1463, 0.1513, 0.0065, 0.1316, 0.0833, 0.0, 0.3611, 0.0, 0.0, 0.0196, 0.0, 0.1717, 0.0, 0.0641, 0.0, 0.0, 0.1646, 0.0, 0.5, 0.5254, 0.3699, 0.0727, 0.1111, 0.0, 0.3534, 0.3832, 0.5417, 0.0, 0.0, 0.0814, 0.1031, 0.3333, 0.6591, 0.2537, 0.307], [1.2537, 0.2692, 0.0, 0.2439, 0.1681, 0.2273, 0.0, 0.0, 0.0, 1.1111, 0.0513, 0.0, 0.0, 0.0, 0.1717, 0.0, 0.2564, 0.0, 0.205, 0.0, 0.0, 0.0411, 0.0182, 0.9167, 0.0175, 0.319, 0.0187, 0.8125, 0.0, 0.4747, 0.2674, 0.0103, 0.2917, 0.0227, 0.0, 0.0263], [0.4167, 0.1825, 0.2308, 0.0, 0.5319, 0.6667, 0.3134, 0.0934, 0.0, 0.1951, 0.2269, 0.1818, 0.0, 0.0, 0.0, 0.3333, 0.0, 0.0, 0.5686, 0.0227, 0.0808, 0.0, 0.1795, 0.0, 0.0, 0.0963, 0.0, 0.4531, 0.2712, 0.2055, 0.1636, 0.5278, 0.0175, 0.181, 0.2056, 0.3542, 0.0, 0.2525, 0.2442, 0.0619, 0.1944, 0.6591, 0.2985, 0.0175], [0.35, 0.0292, 0.5077, 0.1818, 0.5106, 0.3922, 0.3134, 0.2582, 0.0, 0.7683, 0.3277, 0.0, 0.0, 0.0417, 0.0, 0.3611, 0.0256, 0.0, 0.5686, 0.0, 0.0909, 0.0, 0.0, 0.0, 0.0, 0.1615, 0.0, 0.1406, 0.339, 0.3151, 0.0, 0.6111, 0.0, 0.1983, 0.1682, 0.4375, 0.0, 0.2121, 0.4302, 0.0515, 0.3611, 0.0, 0.2537, 0.1842], [0.3167, 0.0803, 0.0, 0.1818, 0.8936, 0.0, 0.2388, 0.5, 0.0395, 0.4146, 0.1681, 0.2143, 0.0, 0.2917, 0.0, 0.5556, 0.0256, 0.0, 0.2941, 0.0455, 0.2222, 0.0, 0.5256, 0.0, 0.0, 0.2578, 0.0, 0.0, 0.2203, 0.3425, 0.1455, 0.2778, 0.0, 0.1379, 0.243, 0.7708, 0.0235, 0.1717, 0.1047, 0.0, 0.0, 0.0455, 0.194, 0.2895], [0.4035, 0.9828, 0.5234, 1.7917, 0.0353, 0.7778, 0.907, 0.3093, 0.9722, 1.1591, 0.9701, 0.5877], [0.3833, 0.4818, 0.3846, 0.0227, 0.5957, 0.3333, 0.0, 0.3242, 0.0395, 0.5, 0.2857, 0.1753, 0.0263, 0.0, 0.0, 0.4583, 0.0, 0.0, 0.3333, 0.0, 0.0, 0.0, 0.1795, 0.0, 0.0, 0.2391, 0.0, 0.3594, 0.2034, 0.2466, 0.3636, 0.2778, 0.3158, 0.3621, 0.1776, 0.7708, 0.0471, 0.6364, 0.3721, 0.2784, 0.3889, 0.8409, 0.3881, 0.5526], [0.9833, 1.219, 2.5692, 0.1818, 1.0638, 0.3922, 0.9552, 0.4451, 0.2237, 0.1341, 0.958, 1.1039, 0.0789, 0.4167, 0.0588, 2.3333, 0.1026, 0.1237, 1.5686, 0.0455, 0.596, 0.3478, 0.641], [0.5167, 0.7518, 1.0923, 0.5682, 1.0851, 0.8627, 0.7761, 0.4066, 0.0526, 0.4024, 0.2773, 0.2792, 0.0, 0.0, 0.0, 0.8889, 0.0, 0.0, 0.2745, 0.0, 0.1313, 0.0, 0.9231, 0.0, 0.2857, 0.0, 0.5625, 0.7627, 0.7534, 0.7455, 0.7778, 0.0175, 0.7586, 0.1308, 1.4375, 0.0, 0.5051, 0.4767, 0.3299, 1.4306, 0.3409, 0.2985, 0.4825], [1.0833, 0.5912, 0.5538, 0.383, 0.3333, 0.8955, 1.0165, 0.0, 1.1707, 0.6891, 0.7013, 0.2368, 0.4167, 0.1176, 1.4861, 0.3077, 0.0, 1.8039, 0.0, 0.1818, 0.2391, 0.4487, 0.0, 0.0, 0.8789, 0.0, 1.1719, 0.8983, 1.1096, 0.4182, 0.0, 0.193, 1.3448, 0.028], [0.3333, 0.7299, 0.8615, 0.9773, 0.766, 0.9608, 0.8507, 0.6978, 0.3158, 1.0122, 0.6639, 0.7792, 0.0, 0.4583, 0.2353, 0.4861, 0.2821, 0.1134, 1.2745, 0.1591, 0.1616, 0.8043, 0.6538, 0.0, 0.0, 1.0466, 0.0, 1.8281, 0.7458, 0.274, 0.3636, 0.0, 0.4386, 0.8103, 0.215, 1.0417, 0.0588, 0.6061, 0.8488, 0.6701, 0.4444], [2.5, 2.3942, 2.6, 0.2727, 2.8511, 3.4706, 2.4328, 1.1978, 0.0263, 2.0854, 1.042, 1.4221, 0.0, 0.0, 0.0, 2.5556, 0.0256, 0.899, 0.0, 1.8077, 0.0, 0.2727, 0.4472, 0.0, 3.4688, 1.7288, 1.1644, 2.0182, 2.7778], [2.073, 1.9077, 0.1364, 0.8723, 1.6078, 1.3881, 1.4286, 0.3026, 1.4268, 1.084, 1.1558, 0.0, 0.1667, 0.1471, 1.875, 0.5385, 0.2577, 0.7451, 1.1111, 1.1087, 1.9615, 0.0, 0.1818, 1.1366, 0.2927, 1.4688, 1.5932, 1.3973, 0.6909, 0.7778, 1.0877, 1.3534, 0.6449, 1.7708, 0.3882, 0.9394, 1.6163, 1.0619, 1.9861, 0.5909, 1.194, 1.5175], [1.3167, 0.927, 2.0923, 1.0227, 1.3191, 1.2745, 2.3433, 1.3681, 0.1842, 1.0122, 1.2773, 1.0455, 0.0, 0.875, 2.0694, 0.641, 0.0, 1.0202, 0.7174, 1.1026, 0.0, 0.0455, 1.2826, 1.7031, 1.1695, 1.4658, 1.5455, 2.6944, 0.9123, 1.3793, 0.6168, 3.6458, 0.1647, 0.6869, 1.8256, 1.7835, 0.9167, 1.0227, 1.403, 1.9912], [1.5667, 1.1314, 1.7692, 0.3409, 0.9787, 1.451, 2.5075, 1.4286, 0.2763, 2.3659, 1.3782, 1.1494, 0.4211, 0.9583, 0.1176, 2.3611, 0.5641, 0.1856, 1.6667, 0.3409, 1.202, 0.2174, 1.6154, 0.1818, 1.4317, 0.0488, 1.0938, 1.3729, 0.3562, 2.4, 1.0556, 0.5088, 1.319, 0.1682, 3.5417, 0.3294, 0.6869, 0.7674, 0.1649, 1.8611, 1.1136, 1.8806, 1.807], [1.75, 1.708, 2.0615, 1.3636, 1.5745, 1.5294, 2.1343, 1.2473, 0.6053, 1.9268, 1.3782, 1.4091, 0.1842, 2.0417, 0.8529, 1.6806, 0.9231, 0.3402, 1.451, 0.3182, 1.0606, 1.1304, 1.1282, 0.1364, 0.4091, 1.5466, 0.561, 2.5469, 1.4576, 0.6575, 2.3818, 2.6111, 0.5088, 0.9483, 0.3738, 2.2083, 0.0588, 1.0101, 0.7907, 0.9485, 1.3056, 1.4773, 1.5672, 1.9474], [2.1167, 2.3212, 2.3692, 0.5, 1.766, 2.2157, 3.0299, 1.3077, 0.3026, 2.0122, 1.0924, 1.0, 0.1579, 0.75, 0.2941, 2.8056, 0.4615, 2.5686, 0.0682, 1.0606, 1.087, 2.0513, 0.0, 0.3636, 1.3261, 0.0, 3.0312, 1.5085, 1.0411, 1.8727, 3.1389, 1.0351, 1.0431, 0.3925, 3.625, 0.0, 1.4141, 2.3488, 0.6907, 3.4583, 2.75, 1.5522, 2.0263]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

