created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Gollum Mah Precious", "Nickhia", "No Reserv\u00e9", "Grayson Kin", "Lord Erin The Wise", "Gabe Malhorn", "Venomina The Sly", "Liyo Morgaine", "Morton Saltbringer", "Revenant Brandorf", "High Sorcer Baradun", "\u00c7onstant\u00edne", "Divine Mimine", "Solus Luxes", "Bryxzi", "Glorious Gluvs", "Xanvias Tseli", "Tegan Parker", "Adjudicatrix Farra", "Klenga", "Tribal S", "Elonith Requiem", "Kosair", "Drevarr Moonwillow", "Black Raspberry Pie", "Mike The Archmagus", "Jmbrage Rev", "Drell The Silent", "Astraeus Windrunner", "Grasszanine", "Daphne Agla\u00e9", "Cat Wigglebooty", "Be\u00eb", "Eibh\u00ebar", "Swithblight", "Crusader Siolith", "Halfpint The Drunk", "Lucky Leipreach\u00e1n", "Sub Train", "Rozaalyna", "Heres A Quarter", "Bella Bitty", "Rina Of Theros", "Mistwalker Cael", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Newtype Khan", "Jimbo The Pleb", "Zaedy Zae"];
const professions = ["Berserker", "Harbinger", "Scourge", "Vindicator", "Berserker", "Weaver", "Firebrand", "Druid", "Herald", "Chronomancer", "Vindicator", "Tempest", "Reaper", "Renegade", "Firebrand", "Herald", "Berserker", "Berserker", "Tempest", "Reaper", "Firebrand", "Druid", "Reaper", "Firebrand", "Scrapper", "Chronomancer", "Weaver", "Vindicator", "Druid", "Berserker", "Spellbreaker", "Reaper", "Scrapper", "Reaper", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Reaper", "Herald", "Firebrand", "Reaper", "Herald", "Scrapper", "Chronomancer", "Spellbreaker", "Berserker", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0123, 0.0307, 0.1885, 0.4615, 0.15, 0.1053, 0.0, 0.0, 0.0], [0.0092, 0.0, 0.003, 0.0685, 0.2105, 0.2185, 0.2045], [0.1429, 0.1023, 0.1358, 0.2209, 0.0656, 0.0577, 0.1333, 0.0175, 0.0, 0.0256, 0.0], [0.0, 0.0, 0.1447, 0.0, 0.0184, 0.0203, 0.0, 0.0, 0.006, 0.1048, 0.1474, 0.1008, 0.2386], [0.0924, 0.2159, 0.1728, 0.1656, 0.1066, 0.4423, 0.25, 0.0, 0.0513, 0.0], [0.0, 0.0, 0.0263, 0.0459, 0.027, 0.0092, 0.0, 0.0, 0.0565, 0.2316, 0.084, 0.0568, 0.1235, 0.0307, 0.0984, 0.1154, 0.0833, 0.0, 0.0141, 0.0256, 0.0], [0.0, 0.0605, 0.1895, 0.0336, 0.2955, 0.2469, 0.0429, 0.1148, 0.2692, 0.2, 0.0, 0.0, 0.1026, 0.0], [0.0444, 0.1789, 0.0252, 0.3295, 0.2346, 0.0675, 0.1148, 0.2115, 0.3333, 0.0175, 0.0, 0.0, 0.017], [0.1129, 0.1789, 0.042, 0.4545, 0.2716, 0.1104, 0.0738, 0.0, 0.05], [0.0, 0.0, 0.0395, 0.0, 0.0383, 0.0135, 0.0, 0.0, 0.0, 0.0403, 0.0842, 0.0924, 0.1705, 0.1481, 0.0675, 0.1066, 0.3077, 0.2167, 0.0702, 0.0282, 0.0513, 0.0057], [0.0, 0.0263, 0.0, 0.0168, 0.0135, 0.0, 0.0, 0.003, 0.0323, 0.0632, 0.1933, 0.3182, 0.284, 0.0798, 0.0984, 0.2885, 0.1, 0.0526, 0.0, 0.0114], [0.0508, 0.027, 0.0, 0.0921, 0.026, 0.0068, 0.0092, 0.0, 0.009, 0.1169, 0.1895, 0.2605, 0.5227], [0.0, 0.1184, 0.0, 0.0, 0.0, 0.027, 0.0, 0.0, 0.0, 0.1048, 0.2526, 0.1597, 0.1364, 0.1975, 0.092, 0.082, 0.1731, 0.1167, 0.0702, 0.0, 0.0256, 0.0057], [0.0, 0.0921, 0.0, 0.0, 0.0092, 0.0, 0.0092, 0.0, 0.006, 0.1169, 0.0316, 0.2857, 0.1705, 0.1358, 0.1227, 0.1475, 0.0192, 0.1667, 0.0175, 0.0, 0.0256, 0.0114], [0.0, 0.027, 0.0196, 0.0132, 0.0, 0.0245, 0.0405, 0.0, 0.0, 0.0, 0.0363, 0.1579, 0.0504, 0.1477, 0.3457, 0.0859, 0.2623, 0.2692, 0.1333, 0.0, 0.0, 0.0, 0.0284], [0.0, 0.0395, 0.0, 0.0, 0.0383, 0.0135, 0.0, 0.0, 0.003, 0.1774, 0.2211, 0.0924, 0.3295, 0.2346, 0.0245, 0.082], [0.0339, 0.0, 0.0, 0.1184, 0.0, 0.0, 0.0276, 0.0, 0.0092, 0.0, 0.0, 0.0202, 0.1895, 0.0588, 0.2273, 0.1481, 0.135, 0.1311, 0.2308, 0.3333, 0.0526, 0.0282, 0.0, 0.0398], [0.1186, 0.027, 0.0, 0.0526, 0.0, 0.0, 0.0291, 0.0135, 0.0, 0.0, 0.0, 0.0403, 0.1474, 0.084, 0.5114, 0.2346, 0.0982, 0.1475, 0.2115], [0.0169, 0.0, 0.0263, 0.0, 0.0, 0.0352, 0.0459, 0.0, 0.0, 0.0645, 0.2316, 0.1513, 0.2841, 0.3704, 0.5667, 0.0351, 0.0, 0.0, 0.0], [0.0847, 0.0, 0.0, 0.0263, 0.0, 0.0276, 0.0068, 0.0183, 0.0, 0.003, 0.0121, 0.1684, 0.1092, 0.2841, 0.3333, 0.1288, 0.2131, 0.1923, 0.25, 0.0, 0.0256, 0.0284], [0.0, 0.0, 0.003, 0.1169, 0.1789, 0.1092, 0.3864, 0.2716, 0.0613, 0.1803, 0.2885, 0.4667, 0.0, 0.0, 0.0256], [0.0339, 0.0, 0.0, 0.1184, 0.0, 0.0199, 0.0135, 0.0, 0.0, 0.003, 0.0161, 0.2947, 0.0504, 0.3295, 0.3827, 0.1104, 0.1721, 0.2308, 0.25, 0.0, 0.0, 0.0, 0.0114], [0.0245, 0.0, 0.0183, 0.0091, 0.003, 0.0847, 0.2105, 0.1513, 0.2727, 0.1605, 0.1411, 0.1311, 0.2308, 0.3833, 0.0702, 0.0, 0.0256, 0.0455], [0.0, 0.0, 0.006, 0.0202, 0.3368, 0.1513, 0.3636, 0.4198, 0.1227, 0.1475, 0.3846, 0.3, 0.0, 0.0, 0.0256, 0.017], [0.0508, 0.0, 0.0, 0.0132, 0.0, 0.0, 0.026, 0.0135, 0.0, 0.0, 0.0, 0.0645, 0.2316, 0.1261, 0.3068, 0.321, 0.1166, 0.0902, 0.5192, 0.25, 0.0351, 0.0, 0.0, 0.017], [0.0811, 0.0, 0.0526, 0.0, 0.0, 0.0306, 0.0068, 0.0, 0.0, 0.0, 0.1129, 0.1684, 0.0756, 0.2955, 0.1481, 0.1288, 0.1393, 0.3846, 0.4667, 0.0, 0.0, 0.0, 0.017], [0.1017, 0.027, 0.0, 0.0921, 0.0, 0.0505, 0.0, 0.0183, 0.0091, 0.0, 0.0565, 0.1263, 0.1261, 0.2727, 0.2469, 0.2515, 0.082, 0.1731, 0.1667, 0.0702, 0.0, 0.0256, 0.0], [0.0, 0.0, 0.0337, 0.0, 0.0367, 0.0, 0.003, 0.0403, 0.2632, 0.1681, 0.3864, 0.1975, 0.1411, 0.0738, 0.6538, 0.2, 0.0, 0.0, 0.0256], [0.0, 0.25, 0.0291, 0.0, 0.0092, 0.0, 0.003, 0.0605, 0.2316, 0.1513, 0.2273, 0.1605, 0.0491, 0.1967, 0.5962, 0.2333, 0.0175, 0.0, 0.0256, 0.0284], [0.1186, 0.0, 0.0, 0.0789, 0.0, 0.0352, 0.0203, 0.0183, 0.0, 0.006, 0.0806, 0.1895, 0.2017, 0.1932, 0.1235, 0.092, 0.2295, 0.1731, 0.3667, 0.0175, 0.0, 0.0256, 0.0341], [0.003, 0.0766, 0.2211, 0.1345, 0.3864, 0.2222, 0.135, 0.1803, 0.4423, 0.6333, 0.0, 0.0, 0.0256, 0.0227], [0.0339, 0.027, 0.0, 0.2237, 0.0, 0.0199, 0.0, 0.0092, 0.0, 0.0, 0.0444, 0.2632, 0.0924, 0.5114, 0.4074, 0.1288, 0.1066, 0.5192], [0.0, 0.0526, 0.0643, 0.0203, 0.0092, 0.0, 0.003, 0.0524, 0.3579, 0.0252, 0.3977, 0.2346, 0.0736, 0.1885, 0.25, 0.4667, 0.0526, 0.0], [0.0, 0.1316, 0.0, 0.0, 0.0306, 0.0203, 0.0, 0.0, 0.0, 0.0645, 0.1895, 0.2521, 0.2614, 0.1358, 0.184, 0.1393, 0.4038, 0.4667, 0.0351, 0.0282, 0.1282, 0.017], [0.0, 0.0, 0.0526, 0.0, 0.0459, 0.0068, 0.0275, 0.0091, 0.006, 0.0484, 0.1474, 0.0588, 0.4773, 0.3951, 0.135, 0.0902, 0.5385, 0.2667, 0.1228, 0.0, 0.0, 0.0455], [0.0678, 0.027, 0.0, 0.2895, 0.0, 0.0, 0.0291, 0.0068, 0.0, 0.0, 0.003, 0.0403, 0.2105, 0.3193, 0.125, 0.1975, 0.2209, 0.082, 0.4615, 0.2833, 0.0702, 0.0, 0.0513, 0.0284], [0.0847, 0.027, 0.0, 0.0263, 0.0, 0.0123, 0.0068, 0.0, 0.0, 0.003, 0.0645, 0.3158, 0.0672, 0.4205, 0.2963, 0.1656, 0.2623, 0.3269, 0.45, 0.0, 0.0, 0.0256, 0.0284], [0.0169, 0.027, 0.0, 0.0658, 0.0, 0.0, 0.0459, 0.027, 0.055, 0.0, 0.009, 0.1573, 0.1895, 0.1513, 0.2614, 0.2099, 0.0859, 0.1803, 0.3654, 0.35, 0.0175, 0.0, 0.0513, 0.0284], [0.0, 0.0, 0.003, 0.1008, 0.2947, 0.2269, 0.25, 0.3457, 0.3006, 0.1721, 0.3846, 0.2167, 0.0175, 0.0, 0.1538, 0.0455], [0.0847, 0.0, 0.0, 0.0263, 0.0, 0.0429, 0.0135, 0.0, 0.0, 0.0, 0.0565, 0.3053, 0.2353, 0.3864, 0.321, 0.1288, 0.0984, 0.5385, 0.3667, 0.0175, 0.0, 0.0256, 0.017], [0.0541, 0.0, 0.0263, 0.0, 0.0322, 0.0, 0.0734, 0.0, 0.0, 0.3277, 0.375, 0.5926, 0.1963, 0.2049, 0.4808, 0.45, 0.0, 0.0], [0.1129, 0.2947, 0.2521, 0.125, 0.3951, 0.3865, 0.4344, 0.3654], [0.0339, 0.0, 0.0, 0.0263, 0.0, 0.026, 0.0, 0.0, 0.0, 0.0, 0.0323, 0.3368, 0.2017, 0.2614, 0.6296, 0.1166, 0.2377, 0.5577, 0.4333, 0.0526, 0.0, 0.0, 0.0227], [0.1695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0306, 0.0405, 0.0092, 0.0, 0.0, 0.0806, 0.4105, 0.3193, 0.4659, 0.1975, 0.1411, 0.2459, 0.0385, 0.3, 0.0351, 0.0, 0.0769, 0.017], [0.1695, 0.027, 0.0, 0.1316, 0.0, 0.0, 0.0337, 0.027, 0.0092, 0.0, 0.003, 0.0484, 0.1789, 0.0756, 0.5227, 0.5062, 0.0736, 0.2213, 0.5962, 0.55, 0.0175, 0.0, 0.0, 0.0568], [0.0847, 0.0, 0.0, 0.0263, 0.0, 0.0, 0.0291, 0.0068, 0.0, 0.0091, 0.006, 0.0645, 0.2737, 0.2101, 0.4659, 0.3457, 0.135, 0.1721, 0.6346, 0.8333, 0.0175, 0.0, 0.0769, 0.0341], [0.0339, 0.027, 0.0, 0.0658, 0.0, 0.0245, 0.0203, 0.0092, 0.0, 0.0, 0.0363, 0.2421, 0.2185, 0.4773, 0.6296, 0.1227, 0.4016, 0.4808, 0.45, 0.0175, 0.0, 0.0, 0.0227], [0.1525, 0.027, 0.0, 0.0921, 0.0, 0.026, 0.027, 0.0092, 0.0, 0.006, 0.0887, 0.2632, 0.2941, 0.5, 0.5556, 0.1043, 0.1639, 0.3077, 0.5667, 0.0175, 0.0, 0.0513, 0.0284], [0.1695, 0.0, 0.0, 0.0658, 0.0, 0.0, 0.0475, 0.0338, 0.0275, 0.0, 0.0119, 0.1008, 0.2842, 0.3193, 0.4205, 0.3704, 0.1595, 0.3033, 0.5577, 0.2833], [0.1017, 0.027, 0.0, 0.0526, 0.0245, 0.0135, 0.0459, 0.0091, 0.0209, 0.1532, 0.2421, 0.1933, 0.7159, 0.4444, 0.0859, 0.2705, 0.7115, 0.55, 0.0, 0.0, 0.0, 0.017]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

