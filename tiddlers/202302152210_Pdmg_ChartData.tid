created: 20230215221053000
creator: Drevarr
modified: 20230705163519371
modifier: drevarr
tags: ChartData
title: 202302152210_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Erika Simon", "Smol Gluvs", "Kira Dragonblaze", "K\u00e2 \u00d4tik R\u00e6j", "Veron Blackburn", "Ace Hammers", "Tootsie Pop Bringer", "Skye Nightroad", "Dark Sidiuz", "Rina Of Theros", "Be\u00eb", "Kosair", "Jeckyll Mbs", "Lord Charrior", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Legacy Of Mathus", "Smol Daddy Tika", "Xyntharos", "My Birthday Girl", "Sassy Daddy Demon", "Xanvias Tseli"];
const professions = ["Soulbeast", "Scourge", "Dragonhunter", "Berserker", "Herald", "Vindicator", "Scrapper", "Scrapper", "Scourge", "Scourge", "Scourge", "Dragonhunter", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[313.0364, 987.5429, 544.5, 613.339, 374.8444, 60.7538, 697.0328, 101.6667, 283.4648, 885.6623, 850.7353, 450.709, 416.52, 490.5556, 1226.7403, 624.08], [170.9912, 224.854, 137.4839, 204.3659, 98.5, 281.4095, 687.9792, 229.4915, 0.0, 243.7154, 546.3279, 188.6667, 62.9225, 374.947, 350.0448, 36.88, 0.0, 254.5844, 236.96, 394.3233, 0.0, 168.6937, 0.0, 569.4359], [373.5343, 450.7819, 668.4946, 249.6585], [112.6091, 820.2952, 1304.0, 541.4576, 108.1111, 1686.1615, 594.7049, 358.1667, 309.5493, 468.702, 642.0075, 736.64, 107.8611, 448.2727, 7.3333, 296.4595, 0.0, 1319.2564], [345.1956, 366.9622, 180.1935, 421.2602, 180.8455, 443.1714, 901.875], [94.219, 290.818, 386.5591, 324.622, 44.5591, 356.9429, 1096.0833, 320.3814, 89.2889, 1077.8769, 153.2131, 711.4524, 64.4648, 57.5828, 591.9104, 62.98, 74.3056, 306.7922, 612.84, 245.8872, 188.5405, 0.0, 743.1026], [481.3577, 468.7198, 610.4194, 288.622, 39.7364, 654.0667, 1146.375], [521.1533, 56.3138, 837.0215, 171.1829, 319.4727, 686.4905, 1870.4375, 736.8475, 117.3077, 1589.082, 809.4762, 386.2254, 126.8013, 0.0, 797.1194, 471.14, 34.2778, 88.1688, 703.28, 495.797, 394.0631, 0.0, 679.8718], [115.6613, 267.5872, 405.7957, 583.4472, 271.7773, 483.0952, 1939.6667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 835.3974, 1093.8731, 193.32, 494.0278, 858.5844, 1881.32, 835.2556, 334.9744, 417.1982, 27.5152, 780.6154], [91.0526, 129.4664, 305.2688, 543.5081, 103.55, 970.2667, 1383.375, 799.1695, 93.2667, 876.0231, 1069.3607, 171.5714, 582.4577, 229.0331, 39.2941, 801.0224, 126.58, 63.8056, 246.0909, 179.2, 1355.1579, 323.2564, 219.6396, 67.7576, 1383.1026], [105.6007, 452.2796, 546.6463, 346.2818, 1334.9619, 2040.1458, 776.5678, 80.9111, 1486.6846, 1342.7049, 419.881, 747.2746, 334.0132, 1297.2463, 294.56, 221.4444, 543.3247, 3413.12, 1167.9248, 145.6667, 65.8788, 1694.9744], [906.254, 912.9723, 2380.5, 800.2458], [520.292, 667.172, 478.7204, 249.0285, 271.1727, 747.5952, 898.5417, 821.4576, 106.4667, 1199.3308, 906.3934, 397.2619, 292.5282, 893.7152, 631.0149, 1203.8421, 3.6923, 131.3874, 243.5385], [1010.2797, 65.1778, 3025.1615, 2204.1148, 21.6905, 768.1338, 966.4238, 0.0, 3494.194, 815.02, 87.0556, 1561.3506, 3647.68, 2811.2932, 446.8205, 1742.5405, 34.1515, 4075.7949], [756.9504, 188.7718, 332.7312, 577.1423, 660.7227, 928.4286, 1955.7292, 807.6356, 999.8222, 230.8538, 2355.5246, 345.4524, 42.3873, 825.4106, 0.0, 3156.0, 31.08, 485.5278, 9.5455, 1911.96, 1343.203], [142.0445, 285.6022, 801.0854, 469.2136, 2052.2952, 2132.6667, 1054.7966, 236.3111, 1906.4462, 2681.8197, 288.4762, 888.007, 883.4967, 163.5588, 2019.8806, 495.78, 227.4167, 369.3247, 1694.44, 1503.609, 188.9231, 1275.4324, 0.0, 2686.8462], [499.8161, 697.1753, 421.9355, 1090.5407, 119.3, 1113.9762, 1935.5417, 994.7288, 194.7333, 4.1154, 1544.2951, 65.0952, 348.2042, 302.6954, 199.2836, 200.94, 211.2222, 390.4675, 0.0, 2240.391, 44.1795, 1387.6847, 0.0, 2066.2051], [610.1693, 808.4027, 788.7849, 299.9837, 123.3045, 919.8238, 2700.125, 701.0424, 307.0, 1084.6692, 860.7049, 256.0476, 390.162, 497.351, 0.0, 992.1791, 305.5, 163.8889, 1158.2078, 574.68, 1164.6165, 481.5045, 28.7273, 1504.0], [783.2496, 906.9648, 680.8172, 1169.2195, 308.5045, 1953.5048, 3805.2292, 1374.8305, 86.6222, 2101.4692, 2668.0164, 106.5476, 1199.8346, 0.0, 649.991, 0.0, 1382.9231], [1224.2204, 668.849, 679.5914, 2893.1341, 628.5955, 1133.3714, 2570.9583, 953.0424, 0.0, 195.5, 2120.377, 1067.0714, 546.331, 406.4768, 553.5149, 312.9, 867.0833, 195.5455, 1461.6, 312.9398, 956.6667, 610.036, 48.4545], [627.0774, 889.0092, 860.2796, 765.3252, 432.5455, 1537.0048, 3340.6042, 944.3051, 0.0, 1539.0308, 2293.7049, 54.4762, 1580.6408, 389.9603, 0.0, 1622.9254, 395.1, 215.0556, 1292.3506, 1393.68, 1793.6692, 1146.5897, 618.1982, 662.2727, 1513.5897], [1470.6058, 1715.4539, 2133.8387, 986.5203, 606.1364, 2766.3905, 2385.4792, 2167.5085, 370.9778, 3759.0077, 5497.1311, 1078.7857, 2643.3169, 1104.7947, 5225.2164, 838.48, 77.5556, 3896.0519, 3512.0, 4492.9549, 431.1795, 1122.9369, 125.4242, 4651.5897]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

