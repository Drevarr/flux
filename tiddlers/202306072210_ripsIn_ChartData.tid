created: 20230607221050000
creator: Drevarr
modified: 20230705163534157
modifier: drevarr
tags: ChartData
title: 202306072210_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Slingsshot", "Kira Dragonblaze", "Belvyn Brightblade", "Blanco Padre Guard", "Manuel Radiador", "Sumatra Satyricon", "Ria Zerria", "Husky Guard", "Lord Erin The Wise", "Skye Nightroad", "Oo Dads Mad", "Permanent Dawn", "Chrozz", "Blanco Padre Guard", "Kaehln Lao", "Mistwalker Cael", "Etcherii", "Sister Elonith", "Solus Sanctus", "Kary\u00edna", "Inedible Plant", "Gabe Malhorn", "Duke Silvver", "Koralia Danai", "Smol Gluvs", "Uneeta Healah", "Xanvias Einzbern", "Rafaellagabriela", "Arriasa", "Cyclotechnist Farra", "Be\u00eb", "Shaca Booey", "Rozaalyna", "No Reserv\u00e9", "Grasszanine", "Zayde Sunsabre", "Sygaldry Verdandi", "Crusader Siolith", "Venomina The Siren", "Johosh The Great", "Tootsie Pop Rocks", "Drevarr Moonwillow", "Artakama Nahid", "Tegan Parker", "Primal Clone", "Sub Train", "Ryvalia Fazebringer", "Newtype Khan", "Eibh\u00ebar"];
const professions = ["Scrapper", "Untamed", "Dragonhunter", "Firebrand", "Dragonhunter", "Scrapper", "Soulbeast", "Reaper", "Dragonhunter", "Weaver", "Scrapper", "Spellbreaker", "Weaver", "Willbender", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Reaper", "Scrapper", "Berserker", "Firebrand", "Druid", "Scrapper", "Reaper", "Berserker", "Reaper", "Vindicator", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0049, 0.02, 0.0355], [0.0, 0.0, 0.0391], [0.0, 0.01, 0.0426], [0.0, 0.01, 0.0452], [0.25, 0.0, 0.0741, 0.0, 0.2088, 0.36, 0.3818, 0.1983], [0.0, 0.1667, 0.0741, 0.3187, 0.7, 0.3091, 0.1552], [0.0, 0.0, 0.0404, 0.0, 0.0961, 0.0652], [0.5761, 0.0, 0.6296, 0.0741, 0.1978, 0.32, 0.2545], [0.0114, 0.0135, 0.2402, 0.1522, 0.0, 0.2222, 0.0, 0.1429, 0.16, 0.0, 0.1034], [0.0, 0.0, 0.0443, 0.1397, 0.1304, 0.0, 0.0185, 0.0, 0.033], [0.0, 0.01, 0.0448, 0.2707], [0.0, 0.02, 0.072], [0.0, 0.01, 0.0619, 0.0068, 0.0218, 0.0217, 0.0, 0.0, 0.037, 0.1099, 0.0, 0.1091, 0.0086], [0.0, 0.05, 0.0386, 0.0, 0.0917, 0.0652, 0.0, 0.2037, 0.037, 0.1758, 0.08, 0.0545, 0.1724], [0.0, 0.01, 0.0509, 0.0, 0.2664], [0.0135, 0.2882, 0.2065, 0.0, 0.2593, 0.0741, 0.1429, 0.66, 0.4727, 0.181], [0.0, 0.0, 0.0373, 0.0, 0.2183, 0.3261, 0.0926, 0.4074, 0.1319, 0.12, 0.2909, 0.1724], [0.0, 0.0, 0.0518, 0.0, 0.1616, 0.3261, 0.0, 0.0926, 0.037, 0.1538, 0.48, 0.2909], [0.0, 0.02, 0.0491, 0.0, 0.1834, 0.0652, 0.0926, 0.037, 0.2857, 0.28, 0.0364, 0.3621], [0.0, 0.0, 0.0711, 0.0135, 0.1354, 0.1196, 0.0, 0.0185, 0.0741, 0.0989, 0.18, 0.1636, 0.2241], [0.0, 0.03, 0.0553, 0.0, 0.1703, 0.4348, 0.0, 0.1667, 0.0, 0.0879, 0.28, 0.1818, 0.1897], [0.0, 0.04, 0.0566, 0.0, 0.1834, 0.2609, 0.0, 0.0741, 0.0741, 0.0989, 0.26, 0.0, 0.4224], [0.0544, 0.0, 0.1354, 0.163, 0.0, 0.2037, 0.4815, 0.1758, 0.7, 0.0545, 0.2759], [0.0, 0.01, 0.0689, 0.0, 0.0655, 0.2174, 0.0, 0.2778, 0.2222, 0.2088, 0.32, 0.2182, 0.2241], [0.0, 0.0, 0.0544, 0.0068, 0.2096, 0.2609, 0.0, 0.1296, 0.2222, 0.2418, 0.14, 0.0727, 0.4138], [0.0, 0.0, 0.0487, 0.0203, 0.2664, 0.4783, 0.0, 0.3519, 0.0741, 0.0989, 0.24, 0.1091, 0.2069], [0.0, 0.0, 0.0619, 0.0, 0.1528, 0.1957, 0.0, 0.0185, 0.7407, 0.2088, 0.28, 0.4, 0.1897], [0.0, 0.0, 0.0553, 0.0, 0.2969, 0.4565, 0.0, 0.1296, 0.0741, 0.0989, 0.18, 0.3818, 0.1207], [0.0531, 0.0068, 0.2052, 0.4348, 0.0, 0.0741, 0.0741, 0.3077, 0.1, 0.2182, 0.3879], [0.0, 0.0, 0.0548, 0.0, 0.3319, 0.1957, 0.0, 0.2222, 0.037, 0.3516, 0.36, 0.2, 0.1466], [0.0, 0.01, 0.0746, 0.0068, 0.1397, 0.2174, 0.1296, 0.0741, 0.2198, 0.26, 0.3636, 0.2241], [0.0, 0.01, 0.0483, 0.0068, 0.2969, 0.6522, 0.0, 0.1852, 0.0, 0.1209, 0.16, 0.2, 0.2931], [0.0, 0.0, 0.0636, 0.0068, 0.2358, 0.2174, 0.0, 0.1296, 0.0, 0.0769, 0.34, 0.4364, 0.3621], [0.0, 0.01, 0.0417, 0.0338, 0.4716, 0.3804, 0.0, 0.0741, 0.037, 0.2747, 0.54, 0.3818], [0.0049, 0.02, 0.0702, 0.0, 0.1441, 0.1848, 0.0, 0.0926, 0.2963, 0.2637, 0.14, 0.3091, 0.4138], [0.0, 0.01, 0.0685, 0.0068, 0.1703, 0.3913, 0.0, 0.1296, 0.0741, 0.2198, 0.5, 0.3818, 0.2241], [0.0, 0.03, 0.0733, 0.0, 0.083, 0.4022, 0.0, 0.3148, 0.2593, 0.2198, 0.5, 0.1818, 0.3017], [0.0, 0.0, 0.0627, 0.0203, 0.1747, 0.4348, 0.0, 0.1481, 0.037, 0.3187, 0.32, 0.2545, 0.4397], [0.0, 0.0, 0.0531, 0.0, 0.2707, 0.4565, 0.0, 0.2037, 0.1852, 0.2857, 0.44, 0.4545, 0.2672], [0.0, 0.0706, 0.0878, 0.2445, 0.2717, 0.0, 0.2222, 0.1481, 0.1868, 0.3, 0.3091, 0.319], [0.0, 0.01, 0.0645, 0.0068, 0.1921, 0.4239, 0.0, 0.2222, 0.1111, 0.3736, 0.52, 0.2909, 0.3362], [0.0, 0.05, 0.0548, 0.0, 0.2882, 0.4022, 0.0, 0.1852, 0.0, 0.2088, 0.64, 0.3636, 0.4224], [0.0, 0.01, 0.0614, 0.0068, 0.3406, 0.5217, 0.0, 0.1852, 0.0741, 0.2857, 0.36, 0.5636, 0.2845], [0.0, 0.02, 0.0663, 0.0, 0.31, 0.2717, 0.0, 0.1852, 0.0741, 0.2308, 0.68, 0.5818, 0.4741], [0.0, 0.0, 0.097, 0.0203, 0.2838, 0.1413, 0.0, 0.1852, 0.3333, 0.2088, 0.46, 0.2909, 0.2586], [0.0, 0.0, 0.0737, 0.0, 0.476, 0.2826, 0.0, 0.037, 0.4444, 0.0879, 0.6, 0.3455, 0.3621], [0.0921, 0.0, 0.3057, 0.25, 0.0, 0.3148, 0.0741, 0.1429, 0.36, 0.3273, 0.4569], [0.0, 0.0, 0.068, 0.0, 0.2445, 0.7935, 0.0, 0.2593, 0.1111, 0.2747, 0.56, 0.2182, 0.5172], [0.0, 0.02, 0.0799, 0.0, 0.4934, 0.1957, 0.0, 0.1111, 0.2963, 0.2857, 0.24, 0.4364, 0.4224], [0.0, 0.01, 0.0812, 0.0068, 0.4105, 0.7283, 0.0, 0.2407, 0.1111, 0.2527, 0.52, 0.4, 0.3879]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

