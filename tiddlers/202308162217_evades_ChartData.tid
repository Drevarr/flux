created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Philip Poundhouse", "Darks Na", "Hawaiian Supreme", "Crazy Pog", "Reina Cato", "Vanhelsing Wizard", "Rina Of Theros", "Luke The Ghastly", "Mort\u00e4rion", "Avatar Shazbott", "Darks Na", "Alizayd Delnbone", "Alarics Bane", "Cat Wigglebooty", "Belvyn Brightblade", "Necrotic Windrunner", "Xo Zen Xo", "Raziel Umbra", "Super Druid", "Miphest\u00f6", "Tootsie Pop Rocks", "Bella Sassy", "Daphne Agla\u00e9", "X Mad X King X", "Lord Erin The Wise", "K\u00e2 \u00d4tik R\u00e6j", "Klengah", "Blancooo Padreee", "Sygaldry Verdandi", "Rahani Sunray", "Kisumaiassu", "Arriasa", "Glorious Gluvs", "Be\u00eb", "Tribal S", "Crusader Siolith", "Gavann", "Xanvias Einzbern", "Drevarr Moonwillow", "Solus Sanctus", "Newtype Khan", "Aspros Gemeos", "Tegan Parker", "Eibh\u00ebar", "Zaedy Zae", "Mike The Archmagus", "Ryvalia Fazebringer", "Mistwalker Cael", "Palm Sauce", "Inedible Plant"];
const professions = ["Herald", "Firebrand", "Spellbreaker", "Daredevil", "Vindicator", "Virtuoso", "Reaper", "Scourge", "Scrapper", "Tempest", "Dragonhunter", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Reaper", "Tempest", "Chronomancer", "Druid", "Tempest", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Weaver", "Berserker", "Druid", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Berserker", "Reaper", "Druid", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Druid", "Weaver", "Chronomancer", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 4, 0, 17, 10, 5, 13, 9, 4, 37], [25, 5, 4, 2, 22, 42], [0, 18, 19, 25, 0, 25, 14, 0], [3, 67, 39], [14, 85, 12], [5, 3, 3, 18, 11, 18, 16, 15, 15, 9, 13, 0], [0, 6, 5, 3, 3, 12, 5, 0, 26, 14, 1, 5, 11, 16, 0, 0, 9, 1, 3, 7, 3, 5, 5], [34, 0, 11, 12, 20, 29, 0, 0, 18, 5, 4, 7], [21, 2, 5, 20, 11, 0, 53, 31], [15, 5, 63, 0, 33, 21, 0, 11], [0, 5, 8, 0, 1, 14, 26, 22, 1, 17, 10, 2, 24, 2, 0, 0, 2, 0, 17], [9, 13, 5, 0, 2, 4, 0, 17, 44, 4, 3, 19, 9, 27], [1, 0, 1, 0, 5, 12, 13, 2, 24, 10, 0, 66, 23, 4, 0, 1], [10, 4, 3, 3, 13, 6, 1, 0, 3, 10, 55, 0, 11, 13, 1, 3, 5, 8, 0, 0, 4, 3, 3, 2, 11, 10, 1], [15, 5, 26, 21, 2, 25, 9, 36, 16, 15, 15, 0, 11], [12, 15, 11, 2, 1, 23, 13, 30, 1, 0, 22, 13, 10, 0, 0, 14, 8, 3, 3, 4, 12, 1], [28, 0, 131, 5, 0, 6, 33, 0, 0, 0, 0, 0, 0, 0], [2, 9, 0, 10, 13, 13, 12, 30, 5, 5, 11, 0, 19, 0, 1, 3, 10, 15, 0, 0, 7, 14, 5, 3, 2, 18, 1], [10, 0, 33, 20, 19, 13, 30, 31, 0, 44, 10, 2], [5, 27, 4, 0, 19, 3, 3, 20, 17, 13, 2, 0, 62, 28, 0, 8, 5], [10, 2, 18, 0, 15, 12, 2, 9, 3, 3, 34, 16, 4, 1, 40, 31, 3, 0, 5, 8, 0, 2, 1, 0], [21, 0, 2, 8, 0, 0, 21, 19, 3, 3, 16, 0, 11, 18, 5, 36, 9, 6, 0, 0, 30, 0, 4, 0, 1, 0, 7], [8, 10, 27, 2, 0, 8, 28, 0, 44, 13, 1, 8, 2, 9, 3, 0, 43, 5, 1, 0, 12, 3], [25, 9, 20, 26, 0, 45, 40, 14, 30, 13, 1, 2, 0, 7], [8, 0, 1, 9, 0, 29, 17, 13, 4, 45, 5, 47, 1, 17, 10, 2, 20, 1, 0, 1, 7, 7, 24, 2], [9, 5, 10, 14, 6, 30, 33, 22, 8, 1, 5, 0, 46, 0, 0, 10, 22, 15, 1, 0, 3, 10, 11, 5, 5], [4, 3, 12, 8, 6, 18, 31, 2, 9, 4, 52, 1, 24, 24, 5, 9, 1, 1, 3, 0, 21, 5, 1, 8, 6, 16, 16], [20, 9, 7, 28, 13, 16, 4, 15, 51, 1, 27, 39, 0, 5, 9, 12, 0, 0, 3, 13, 0, 5, 18, 12], [0, 0, 6, 3, 0, 7, 20, 73, 2, 31, 27, 0, 11, 4, 14, 7, 2, 12, 0, 0, 8, 22, 2, 0, 4, 7, 46], [23, 19, 23, 15, 2, 5, 3, 8, 7, 4, 23, 0, 31, 20, 29, 12, 2, 18, 1, 0, 10, 10, 8, 3, 28, 6, 17], [0, 0, 8, 2, 2, 30, 10, 27, 24, 15, 6, 0, 45, 23, 27, 20, 22, 14, 2, 0, 18, 5, 1, 1, 2, 19, 7], [15, 11, 0, 19, 10, 2, 28, 26, 25, 20, 23, 26, 6, 39, 0, 6, 5, 2, 13, 10, 13, 1, 0, 7, 25], [7, 8, 11, 7, 11, 19, 0, 7, 14, 32, 11, 0, 31, 20, 6, 8, 15, 2, 3, 0, 3, 14, 13, 7, 22, 29, 56], [14, 20, 7, 7, 41, 13, 59, 0, 15, 21, 3, 24, 14, 2, 0, 0, 21, 7, 0, 6, 24, 14, 45], [7, 21, 16, 16, 24, 41, 43, 20, 12, 37, 4, 0, 36, 23, 4, 11, 4, 15, 2, 0, 8, 1, 3, 5, 5, 0, 18], [15, 22, 22, 11, 3, 28, 5, 55, 5, 7, 27, 0, 21, 2, 17, 7, 11, 24, 0, 0, 20, 7, 5, 1, 5, 24, 33], [4, 2, 6, 12, 4, 3, 2, 57, 31, 37, 20, 0, 39, 18, 7, 0, 16, 11, 1, 36, 30, 2, 5, 38, 0, 5], [25, 1, 7, 13, 3, 22, 34, 15, 5, 28, 79, 0, 30, 7, 24, 13, 1, 15, 0, 0, 7, 38, 2, 2, 15, 6], [5, 10, 0, 20, 19, 19, 46, 55, 10, 25, 12, 0, 17, 6, 0, 4, 23, 5, 1, 0, 34, 35, 0, 7, 10, 25, 5], [10, 6, 9, 23, 13, 35, 23, 34, 8, 43, 26, 0, 29, 8, 4, 32, 3, 22, 3, 0, 4, 11, 11, 2, 27, 19, 19], [12, 0, 0, 22, 28, 25, 50, 20, 30, 51, 15, 13, 29, 2, 24, 2, 16, 0, 0, 35, 15, 16, 3, 9, 8, 14], [34, 41, 72, 28, 62, 46, 0, 76, 40, 56, 13], [2, 14, 91, 22, 9, 6, 25, 29, 9, 7, 26, 0, 21, 13, 42, 23, 6, 15, 3, 0, 54, 3, 5, 1, 22, 13, 21], [10, 7, 2, 29, 15, 17, 39, 91, 39, 24, 63, 0, 6, 6, 6, 30, 3, 45, 0, 0, 18, 12, 13, 0, 7, 28, 3], [14, 0, 1, 5, 13, 41, 50, 29, 67, 84, 52, 0, 32, 9, 7, 13, 0, 30, 1, 0, 8, 9, 7, 0, 9, 16, 24], [2, 26, 23, 8, 28, 14, 23, 38, 74, 109, 0, 50, 24, 8, 3, 32, 25, 18, 0, 20, 26, 9, 8, 11, 18, 57], [33, 9, 19, 30, 10, 14, 27, 77, 21, 59, 59, 72, 20, 24, 27, 35, 21, 1, 0, 20, 44, 4, 7, 41, 25, 20], [6, 23, 3, 22, 41, 37, 73, 40, 53, 4, 76, 57, 38, 15, 88, 7, 32, 4, 0, 25, 43, 15, 11, 9, 18, 19], [22, 29, 27, 19, 11, 23, 3, 12, 88, 43, 48, 0, 77, 31, 30, 55, 64, 36, 3, 0, 2, 37, 7, 9, 55, 16, 79], [30, 21, 23, 55, 50, 48, 48, 4, 101, 53, 90, 55, 19, 11, 36, 29, 23, 2, 0, 86, 44, 3, 7, 7, 29, 17]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

