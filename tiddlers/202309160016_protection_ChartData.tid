created: 20230916001624000
creator: Drevarr
tags: ChartData
title: 202309160016_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Legendary Sakis", "Cupi Cupita", "Air One Com", "Keypek The Drunk", "Tegan Parker", "Arriasa", "Unbreakable Nemesis", "Brutal Araden", "Brace Stonebrow", "Cat Wigglebooty", "Kahlyanne", "Do Pie", "Gabe Malhorn", "Sub Train", "Amiti\u00e9l", "Kosa\u00efr", "Pafema", "Revenant Brandorf", "Leafzely", "Tribal S", "Kyrillien", "Zaedy Zae", "Legoh Brave", "Drevarr Moonwillow", "Koralia Danai", "Solus Luxes", "Bella Sassy"];
const professions = ["Firebrand", "Druid", "Herald", "Firebrand", "Scrapper", "Tempest", "Druid", "Firebrand", "Vindicator", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Vindicator", "Scrapper", "Druid", "Vindicator", "Druid", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[297.7708], [33.2192, 12.848, 51.5504, 36.8754, 26.9836, 1.3226, 9.6057, 31.1977, 68.1817, 34.9747, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [494.5434], [62.2055, 60.1286, 51.1722, 27.4086, 42.4396, 50.6528, 49.1501, 49.6828, 0.0, 0.0, 0.0, 36.9785, 0.0, 54.9718, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 74.5258, 0.0], [50.3349, 14.3898, 34.9761, 20.9622, 7.5992, 6.001, 9.2156, 33.5975, 12.1378, 38.9822, 6.952, 25.5631, 8.8927, 24.0502, 0.0, 45.0912, 0.0, 0.0, 5.1512, 0.0, 0.0, 35.8994, 64.4131, 0.0, 119.1083], [40.1207, 14.9037, 27.7918, 5.2293, 19.9962, 5.8825, 14.433, 6.0968, 0.0, 0.0, 0.0, 37.2214, 0.0, 5.0373, 95.5046, 0.0, 0.0, 0.0, 19.9572, 106.4026, 5.0094, 190.1554], [172.7215, 4.6253, 83.3755, 53.6001, 44.7258, 23.4906, 26.623, 60.6441, 37.2127, 250.47, 0.0, 46.7544, 21.4618, 59.8244, 0.0], [149.3184, 25.4444, 5.8167, 59.3328, 0.0, 0.0, 148.321, 80.9011, 23.9996, 417.924], [66.7037, 233.4311, 6.6434, 115.2162, 0.0, 78.9967, 1.9706, 89.896, 0.0, 332.0486, 42.5716], [385.1037, 93.6298, 277.225, 85.6069, 0.0, 36.7954, 94.1556, 24.1279, 0.0], [0.0, 31.976, 42.957, 104.2866, 12.3398, 61.6308, 44.0496, 22.4563, 66.528, 16.6345, 0.0, 38.0888, 121.6327, 154.1078, 0.0, 289.0641], [99.0135, 22.9337, 54.7014, 55.4484, 23.2484, 15.5946, 21.0156, 0.0, 38.012, 106.1993, 32.9872, 52.5228, 29.9405, 25.5732, 40.455, 179.7734, 35.0078, 25.3782, 24.7032, 24.8837, 132.497, 407.8242], [25.3055, 11.1456, 21.931, 101.43, 44.6936, 42.8161, 69.4342, 42.8076, 0.0, 70.2227, 111.239, 0.0, 0.0, 0.0, 126.6989, 44.1945, 0.0, 0.0, 0.0, 69.7912, 218.7408, 485.8367], [352.6206, 70.118, 215.3393, 58.6491, 71.6128, 60.9176, 192.602, 104.9435, 0.0, 293.733, 0.0, 91.2014], [158.7345, 142.2274, 186.3501, 77.8532, 134.6604, 55.7458, 122.1438, 112.2727, 0.0, 57.7447, 0.0, 145.6066, 30.8347, 102.293, 0.0, 79.9814, 0.0, 37.7888, 77.8234, 0.0, 113.1878], [291.2784, 110.3558, 105.133, 75.1107, 75.2854, 78.286, 98.6513, 162.3956, 0.0, 112.1498, 85.1681, 67.9356, 0.0, 148.727, 20.315, 0.0, 0.0, 0.0, 140.5271, 105.743, 0.0], [131.0365, 30.3213, 129.0019, 46.0718, 48.3, 78.211, 41.5753, 0.0, 114.8519, 0.0, 104.8634, 0.0, 89.7189, 0.0, 156.5626, 18.5472, 20.8035, 0.0, 38.6154, 200.2742, 553.0528], [76.826, 99.9396, 56.0992, 0.0, 25.8202, 293.0994, 545.6429, 927.7913], [119.2579, 61.285, 104.6132, 35.523, 55.6094, 18.9307, 56.3178, 84.9017, 33.1169, 190.7215, 40.1826, 73.2283, 0.0, 89.2938, 0.0, 123.7421, 1.8257, 0.0, 18.0856, 0.0, 84.9067, 291.288, 37.1379, 657.1855], [84.9345, 17.5375, 27.2877, 60.8129, 0.0, 11.5676, 32.8155, 85.3558, 91.2087, 272.9668, 29.7893, 91.8694, 18.1166, 53.9092, 30.4848, 333.0835, 63.2054, 38.916, 53.1664, 21.5527, 240.1951, 494.64, 34.0639, 761.6665], [176.6784, 65.7818, 167.5072, 61.0383, 38.2858, 30.6957, 32.6204, 67.9733, 33.2168, 269.5968, 18.8399, 86.951, 49.2494, 77.1802, 0.0, 213.0374, 37.8189, 42.8076, 68.5448, 0.0, 0.0, 179.6149, 470.8973, 0.0, 899.9297], [43.8935, 62.6661, 153.8318, 35.3878, 64.0136, 66.8396, 110.2464, 151.5778, 89.3606, 182.7976, 0.0, 177.4846, 61.8847, 110.3687, 0.0, 245.2666, 2.0576, 31.3812, 64.2208, 0.0, 2.0364, 229.8031, 439.4602, 810.7726], [189.1011, 20.3641, 128.1197, 38.1377, 31.7492, 0.0, 60.6087, 81.075, 74.925, 412.4102, 0.0, 72.3782, 44.9604, 52.8112, 0.0, 209.1936, 20.7207, 20.6172, 35.7576, 0.0, 0.0, 259.3256, 557.7341, 0.0, 973.7629], [82.8262, 172.3775, 367.2346, 87.2824, 88.044, 60.0134, 135.269, 0.0, 250.7366, 29.5182, 20.9808, 37.5269, 332.6595, 852.3197, 1338.7499], [220.664, 48.5654, 123.2041, 105.6224, 52.003, 15.6736, 119.267, 118.5641, 105.944, 270.4165, 83.9454, 148.0961, 55.1448, 78.2782, 82.0584, 397.9853, 60.1625, 39.7854, 60.8368, 0.0, 269.4814, 653.1446, 40.394, 1098.7918], [492.5831, 95.7176, 194.4167, 120.4087, 125.5156, 13.1863, 165.3452, 220.1348, 112.6872, 318.5068, 75.9506, 160.3615, 57.5129, 151.9518, 0.0, 393.8458, 31.907, 0.0, 161.6048, 8.073, 0.0, 313.647, 836.0515, 0.0, 1119.688], [383.3553, 145.4715, 236.0729, 127.8018, 126.8358, 82.987, 105.7117, 103.2571, 88.1118, 299.8354, 0.0, 148.5211, 102.7051, 210.6073, 0.0, 361.4688, 87.5776, 151.2963, 31.5464, 220.5921, 615.552, 0.0, 1608.6591], [260.9687, 104.8076, 201.9791, 171.845, 90.1278, 91.1396, 126.1421, 135.752, 155.5943, 339.6373, 167.9256, 120.4685, 96.0314, 131.9749, 93.5946, 443.3722, 92.8809, 9.8118, 97.008, 0.0, 561.7541, 683.4826, 32.174, 1633.038]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

