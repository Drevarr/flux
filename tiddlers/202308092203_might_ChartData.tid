created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Harbinger Nergal", "The Defendant", "Tegan Parker", "Be\u00eb", "Ward Plant", "Dalveirric", "Raziel Umbra", "Oo Dads Mad", "Mike The Archmagus", "Fastdrawl", "Mistwalker Cael", "Jimbo The Plug", "K\u00e2 \u00d4tik R\u00e6j", "Tribal S", "Morton Saltbringer", "Zaedy Zae", "Seren\u00e1 Joy", "Glorious Gluvs", "Serafina Tarai", "Tootsy Pop Star", "Black Raspberry Pie", "Rahani Sunray", "Eibh\u00ebar", "Xanvias Einzbern", "Rozaalyna", "Koralia Danai", "Gabe Malhorn", "Audens Silvermarker", "Konoko K", "Keypek The Drunk", "Sygaldry Verdandi", "Kisumaiassu", "Rafaellagabriela", "Sub Train", "Kosa\u00efr", "Drevarr Moonwillow", "Crusader Siolith", "Bella Sassy", "My Birthday Girl", "Arcanophage Farra", "Blancooo Padreee"];
const professions = ["Specter", "Dragonhunter", "Tempest", "Scourge", "Catalyst", "Soulbeast", "Chronomancer", "Berserker", "Weaver", "Scrapper", "Vindicator", "Scourge", "Berserker", "Druid", "Chronomancer", "Druid", "Chronomancer", "Berserker", "Firebrand", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.7105, 1.3248, 0.5174, 0.4838, 3.745, 0.0, 6.8582, 0.3307, 3.4848, 14.699, 1.0688, 8.5862, 0.0, 1.7949, 0.0, 2.9878], [1.6243, 0.0, 4.9949, 17.4307, 0.0, 9.2467, 0.6532, 1.9289, 3.2512, 9.8827, 2.484, 3.1847], [0.0, 0.0, 2.6432, 4.5765, 0.0, 0.0, 6.7738, 2.0318, 0.0, 1.7597, 0.0, 8.7701, 13.1381, 9.4118, 4.1478, 0.0, 2.6814, 0.0, 0.0, 3.3189, 0.0, 0.1496, 0.0, 0.0], [0.0, 0.147, 0.297, 4.3534, 2.2275, 0.0, 0.0, 0.0, 4.6613, 4.4247, 4.8278, 3.5616, 4.7626, 7.5446, 0.0, 9.4944, 0.6532, 0.0, 0.0, 5.1329, 4.071, 3.4381, 4.0365, 4.6376, 0.0, 3.726], [16.386, 31.5414, 3.509, 34.5166, 0.0], [4.3551, 2.6611, 7.4102, 8.1291, 3.1133, 3.8923, 10.6286, 14.1787, 18.7411, 8.4263, 2.8933, 2.1546, 7.1167], [0.5606, 4.3561, 9.0691, 3.2563, 12.313, 11.1869, 1.4035, 0.9798, 3.831, 1.2825, 8.2739, 5.4165, 3.4381, 8.97, 2.0463, 7.854, 5.6772, 5.2537], [1.4918, 3.6005, 10.8108, 5.7596, 23.4775, 2.1465, 2.4048, 10.6506, 8.1216, 3.9442, 3.7044, 7.4899, 1.5773, 15.4493], [0.2953, 30.4942, 22.0374, 3.2186, 21.4562, 2.8755, 1.8432, 2.7597, 3.6125, 6.0403, 15.6096, 7.2653, 2.7434], [4.7762, 10.989, 1.4762, 20.8343, 2.673, 0.0, 3.8808, 2.903, 6.4541, 4.3904, 2.9779, 3.3072, 9.0605, 7.1544, 0.704, 9.7421, 2.6254, 0.9113, 3.141, 4.0895, 8.97, 4.114, 2.736, 3.2044], [1.3831, 7.2745, 8.7318, 2.2022, 20.6788, 2.3085, 2.4336, 3.1478, 5.4259, 2.6294, 3.1899, 3.2486, 2.7221, 4.356, 12.4877, 1.6576, 4.5408, 7.3485, 2.17, 1.9238, 5.1329, 4.1745, 2.0628, 8.6112, 2.7454, 4.7872, 2.5137, 1.3041], [5.2525, 6.3928, 6.9498, 5.808, 16.6364, 4.5765, 0.8928, 1.6386, 4.8384, 5.3386, 6.7914, 6.6326, 2.0861, 8.4216, 15.3494, 0.9152, 7.0176, 4.4418, 1.4199, 0.0, 4.1369, 4.002, 4.3066, 5.2026, 0.1398, 3.2538, 0.7182, 2.72], [5.364, 8.91, 4.0656, 16.6364, 2.592, 1.9872, 3.1909, 3.3178, 6.2549, 3.3614, 5.0534, 3.3835, 10.1059, 11.5771, 1.312, 7.7606, 9.7, 3.3755, 1.3613, 8.4271, 4.7265, 2.0266, 7.9833, 2.9233, 2.7302, 2.9241, 4.3967], [9.3288, 5.5485, 5.9184, 7.891, 1.6589, 6.8923, 9.5011, 9.8813, 1.4755, 10.8029, 19.2518, 18.4934, 1.731, 3.6434, 2.0362, 17.3139, 3.8295, 1.2667, 7.176, 0.0, 0.7106, 4.9419, 1.8257], [0.0, 9.5524, 10.098, 3.0976, 16.3254, 3.888, 8.0634, 1.2787, 9.5218, 7.546, 7.0387, 3.816, 6.3888, 13.6584, 2.9376, 7.513, 3.168, 2.1968, 1.3613, 5.2861, 1.8285, 2.8228, 10.4052, 1.7159, 6.9938, 3.9159, 5.3282], [1.5695, 18.37, 8.7912, 1.4278, 22.3891, 4.7385, 0.0, 3.3634, 0.553, 4.223, 11.4562, 8.6179, 3.4853, 5.053, 12.8779, 0.5056, 7.3478, 1.1104, 1.9021, 2.475, 17.1606, 1.0005, 0.8324, 6.7275, 0.0, 2.431, 4.2579, 3.2044], [3.3411, 9.038, 7.9002, 3.509, 17.1028, 3.3615, 4.176, 7.5891, 1.2442, 6.0158, 6.4141, 6.3619, 3.1291, 7.6085, 14.9592, 2.6688, 8.5037, 4.0498, 1.8485, 1.3613, 9.4996, 5.6235, 5.139, 8.4318, 2.0336, 6.3206, 2.907, 6.6323], [1.3675, 5.658, 7.0092, 3.6784, 22.5446, 7.8975, 2.88, 5.6056, 5.8752, 6.0158, 1.372, 7.9862, 2.6712, 16.2624, 19.512, 2.5344, 9.4118, 2.7434, 2.1164, 0.3825, 6.9715, 3.5535, 1.5924, 18.6576, 2.3259, 5.5352, 1.4877, 1.3041], [29.245, 22.4532, 8.228, 71.9872, 14.2965, 2.9952, 12.0305, 1.6243, 9.5218, 11.3533], [2.5641, 7.6419, 8.613, 4.114, 23.633, 4.6575, 1.7568, 5.1313, 6.048, 7.3306, 5.145, 8.7082, 3.6379, 6.3307, 14.9592, 2.0736, 11.063, 3.5273, 3.9381, 1.2825, 5.5159, 5.589, 3.7638, 18.0297, 1.8557, 8.8264, 5.4378, 3.2416], [1.6006, 13.4468, 8.0784, 3.5816, 24.5658, 2.9565, 2.2752, 12.2892, 4.9421, 8.2867, 8.3349, 6.1814, 3.2054, 10.0478, 18.0811, 18.8237, 3.1027, 2.4379, 0.0, 9.6529, 5.175, 5.3561, 9.0597, 2.148, 0.7106, 2.3598, 2.1611], [5.5944, 5.5845, 8.1972, 3.2428, 21.6117, 5.1435, 2.3472, 7.0717, 1.2787, 11.2747, 8.8151, 9.385, 2.9256, 10.5706, 16.6502, 2.0096, 12.4666, 5.8461, 3.4023, 0.0, 8.8868, 8.7285, 3.8723, 11.0331, 2.3895, 8.041, 2.6847, 4.3967], [1.8026, 8.9646, 13.8996, 4.6464, 23.7884, 4.1715, 2.7936, 7.7616, 6.4973, 9.0437, 9.604, 7.5802, 3.7906, 9.5251, 11.7072, 1.6768, 10.4851, 2.9067, 2.8665, 1.53, 10.6488, 8.9355, 7.6361, 9.867, 3.4444, 7.8914, 3.3174, 2.4964], [1.4141, 9.1115, 10.2762, 1.8392, 19.746, 5.6295, 1.2384, 10.5213, 8.2944, 4.8605, 8.918, 6.9936, 2.6203, 11.1514, 24.5851, 2.432, 12.9619, 2.8088, 2.4379, 1.5975, 7.5844, 9.867, 1.5924, 13.6344, 1.3218, 7.4426, 1.4535, 9.2032], [4.2735, 4.9966, 7.9596, 4.6706, 26.1206, 2.3085, 2.8944, 5.735, 8.9165, 16.693, 3.773, 10.8288, 3.8414, 11.9645, 19.7722, 0.6272, 17.255, 5.9768, 3.6434, 2.2837, 7.8142, 6.969, 5.4647, 7.4451, 1.8557, 7.4426, 2.7702, 6.7068], [3.2479, 22.7053, 15.2064, 3.6058, 28.6083, 5.5485, 0.288, 5.9506, 2.6611, 6.9322, 2.0237, 2.3011, 2.6966, 15.7397, 23.0242, 0.0, 12.7142, 0.6532, 9.055, 5.22, 14.5559, 9.936, 0.76, 13.455, 0.5211, 1.8326, 4.5144, 2.9063], [1.6162, 6.3193, 15.9192, 6.171, 35.4494, 3.645, 0.0, 1.8542, 1.4861, 3.4262, 4.0474, 0.4963, 9.1075, 17.1336, 33.5606, 13.8701, 9.2101, 4.5811, 2.8462, 7.8908, 8.073, 9.0113, 20.631, 0.2923, 0.0, 6.5835, 2.8318], [1.6783, 15.9452, 36.3528, 4.114, 54.107, 12.069, 3.1248, 16.2562, 7.3958, 14.3026, 7.4431, 17.2358, 8.1154, 19.3987, 15.0893, 2.5344, 19.6493, 4.9643], [15.5778, 37.1844, 12.3904, 0.0, 20.2905, 0.0, 26.7344, 15.7939, 13.0277, 8.0605, 6.7229, 27.755, 17.424, 13.7885, 0.0, 20.3923, 0.0, 23.3073, 1.8563, 0.9959, 0.0, 0.0, 1.3455, 0.0, 0.0, 0.0, 6.8931], [6.2626, 5.364, 27.918, 3.7752, 29.8522, 3.321, 2.6064, 7.4598, 4.4237, 12.9082, 12.4509, 7.9411, 7.3267, 17.0174, 27.4469, 2.1888, 22.0435, 3.4946, 2.5986, 0.0, 12.2576, 6.555, 7.2018, 22.3353, 2.5039, 8.6394, 3.1977, 3.6142], [0.8858, 10.0668, 18.117, 2.3716, 40.4248, 6.885, 1.224, 6.9423, 2.4538, 11.6731, 9.0895, 10.4227, 4.8082, 24.5098, 34.6013, 0.3008, 20.1446, 12.6068, 7.8227, 1.8225, 19.1525, 12.972, 3.3295, 22.3353, 6.444, 4.9368, 3.2661, 8.9424], [6.2626, 12.1242, 22.275, 12.826, 53.0187, 9.8415, 5.9074, 4.9421, 7.6094, 9.4668, 8.5728, 10.4558, 16.8432, 15.4795, 0.7616, 21.2179, 0.0327, 9.0014, 4.905, 18.5396, 12.3855, 5.899, 13.3653, 1.1185, 6.3206, 6.8913, 12.6311], [3.5897, 22.191, 17.6418, 9.922, 38.559, 6.156, 0.3744, 5.9937, 0.0, 9.96, 12.4509, 14.3482, 9.54, 9.467, 31.4794, 26.5843, 0.5552, 14.5738, 7.9875, 24.6684, 13.662, 2.859, 23.9499, 2.6818, 3.366, 6.6861, 9.3523], [3.8539, 11.7568, 26.0172, 5.203, 54.8844, 6.318, 1.08, 11.1681, 7.1885, 4.98, 14.8519, 9.0691, 9.133, 8.712, 47.8694, 21.4656, 12.5088, 8.546, 2.6325, 23.0596, 10.3155, 2.2076, 17.043, 1.4617, 6.5076, 3.6936, 6.3715], [0.0, 23.0727, 8.7912, 2.9524, 60.3262, 2.3895, 0.0, 2.6303, 1.9354, 14.183, 4.9392, 0.0, 0.0, 35.8934, 38.3736, 39.1334, 10.8431, 22.6911, 0.0, 19.5356, 8.9355, 5.718, 7.0863, 0.0, 0.187, 23.6151, 8.7188], [5.9052, 24.9097, 36.5904, 12.0516, 60.7927, 7.452, 1.8288, 11.8149, 6.2208, 9.2827, 8.9523, 10.1069, 14.0174, 15.7978, 29.1379, 2.6944, 22.704, 3.3313, 6.7511, 4.9612, 15.4752, 3.519, 4.4514, 19.1061, 3.7113, 6.8816, 4.3092, 13.4881], [26.8937, 19.7208, 7.139, 56.7502, 5.5485, 0.5184, 8.4946, 7.2922, 10.956, 11.7992, 10.152, 1.1957, 13.765, 47.7394, 7.9424, 19.6493, 3.9192, 10.0463, 9.5175, 28.5755, 12.489, 5.718, 33.3684, 1.6015, 9.6118, 6.3954, 9.8366], [1.756, 43.4267, 31.1256, 3.146, 63.5913, 4.05, 0.432, 14.4452, 7.9834, 7.6094, 9.3296, 11.28, 5.2152, 26.891, 43.837, 0.2688, 18.4934, 5.7482, 8.0906, 7.425, 19.2291, 14.421, 5.8266, 19.6443, 5.9864, 9.4622, 6.9597, 4.8811], [5.3458, 3.3801, 42.768, 10.5996, 67.1674, 17.172, 8.6976, 27.4674, 18.7315, 29.123, 24.3187, 19.537, 8.9294, 13.765, 66.4709, 23.9424, 11.1044, 1.0716, 1.6537, 22.0637], [3.1857, 11.0955, 42.6492, 21.0782, 119.0977, 19.926, 16.8768, 17.6792, 6.4627, 31.3939, 31.2816, 40.247, 19.08, 48.613, 60.8774, 55.4803, 9.7653, 15.1096, 8.7413, 50.0263, 21.735, 18.1312, 21.4383, 10.3714, 35.9788, 14.3469, 21.6853], [11.4064, 47.909, 61.2414, 19.602, 135.4231, 21.789, 12.0816, 29.9253, 16.969, 29.7605, 26.754, 38.5325, 19.2581, 41.8757, 59.1864, 3.9872, 49.6186, 18.5835, 8.2781, 12.3637, 22.0637, 16.008, 8.4685, 38.2122, 12.2906, 24.497, 13.6629, 16.0218]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

