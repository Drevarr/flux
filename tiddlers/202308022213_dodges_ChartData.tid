created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Rayla Shadowmoon", "Bella Sassy", "Aelia Liore", "Daphne Agla\u00e9", "Sygaldry Verdandi", "Kisumaiasu", "High Sorcer Baradun", "Tootsie Pop Rocks", "Jimbo One Eye", "Xanvias Einzbern", "Koralia Danai", "Kurtis Ruhr", "Cat Wigglebooty", "Drevarr Moonwillow", "Oo Dads Mad", "Be\u00eb", "Belvyn Brightblade", "Lord Erin The Wise", "Zaedy Zae", "Sub Train", "Huma Shadowfist", "Keypek The Drunk", "Elementsofmathus", "Morton Saltbringer", "Zaylen Harker", "Venomina The Sly", "Ryvalia Fazebringer", "Squishy Jellyfish", "Black Raspberry Pie", "Gabe Malhorn", "Revitiel", "Crusader Siolith", "Mort\u00e4rion", "Kary\u00edna", "Necrotic Windrunner", "Glorious Gluvs", "\u00c1rk\u00e1ntor", "Sister Elonith", "K\u00e2 \u00d4tik R\u00e6j", "Primal Clone", "Mike The Archmagus", "Tegan Parker", "Arcanophage Farra", "Eibh\u00ebar", "Imalou", "Rahani Sunray", "Solus Sanctus", "Newtype Khan", "Mistwalker Cael", "Inedible Plant"];
const professions = ["Herald", "Firebrand", "Herald", "Scourge", "Firebrand", "Scourge", "Tempest", "Scrapper", "Scrapper", "Berserker", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Berserker", "Scourge", "Firebrand", "Weaver", "Druid", "Firebrand", "Harbinger", "Scrapper", "Tempest", "Chronomancer", "Dragonhunter", "Druid", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Scrapper", "Vindicator", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Chronomancer", "Weaver", "Tempest", "Spellbreaker", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 4, 3, 1, 7], [0, 1, 0, 1, 0, 1, 2, 2, 0, 1, 0, 0, 0, 2, 9], [1, 18], [0, 0, 2, 0, 1, 6, 0, 0, 0, 0, 9, 0, 0, 2], [0, 4, 1, 1, 0, 5, 0, 1, 0, 0, 1, 1, 0, 0, 0, 7], [0, 1, 2, 1, 3, 7, 0, 1, 0, 0, 6, 1, 0, 1, 2, 0], [0, 1, 6, 9, 11], [0, 3, 1, 4, 1, 4, 1, 0, 1, 2, 8, 0, 0, 3, 2, 9], [0, 2, 1, 5, 1, 2, 1, 0, 0, 0, 6, 2, 0, 0, 3, 16], [0, 1, 1, 1, 0, 3, 2, 0, 1, 0, 7, 0, 1, 0, 5, 19], [0, 1, 4, 2, 0, 4, 0, 1, 0, 0, 12, 3, 0, 1, 0, 14], [42], [0, 1, 4, 5, 1, 5, 1, 1, 0, 1, 8, 1, 0, 1, 0, 23], [1, 0, 3, 4, 0, 8, 2, 2, 0, 0, 5, 2, 2, 4, 2, 18], [3, 5, 9, 6, 3, 11, 2, 0, 0, 1, 13], [4, 4, 0, 1, 0, 3, 0, 0, 0, 1, 12, 0, 0, 3, 4, 24], [3, 9, 8, 8, 6, 15, 3, 4, 0, 1], [3, 1, 7, 2, 2, 0, 0, 16, 3, 1, 4, 6, 12], [0, 5, 2, 4, 4, 7, 4, 0, 0, 0, 6, 0, 2, 1, 2, 21], [5, 6, 5, 3, 8, 2, 1, 0, 0, 10, 0, 2, 0, 2, 16], [6, 7, 13, 23, 16], [3, 6, 0, 4, 0, 5, 2, 0, 0, 0, 16, 2, 2, 2, 5, 21], [0, 6, 6, 3, 3, 9, 1, 1, 0, 8, 0, 0, 3, 8, 23], [0, 0, 2, 11, 1, 5, 1, 1, 1, 0, 6, 3, 2, 1, 6, 32], [0, 5, 6, 4, 5, 4, 2, 2, 0, 18, 0, 1, 4, 3, 18], [0, 5, 6, 4, 3, 1, 3, 0, 1, 0, 10, 2, 3, 6, 10, 19], [3, 3, 5, 9, 2, 5, 2, 2, 2, 0, 8, 2, 0, 6, 7, 20], [1, 1, 4, 1, 1, 8, 1, 0, 0, 0, 13, 2, 1, 5, 4, 35], [1, 6, 8, 5, 5, 9, 3, 2, 0, 0, 13, 4, 1, 4, 7, 10], [1, 6, 2, 6, 3, 7, 5, 0, 0, 0, 10, 3, 0, 7, 4, 30], [3, 1, 0, 3, 2, 14, 0, 2, 1, 22, 5, 0, 8, 11, 14], [1, 4, 5, 4, 2, 11, 0, 3, 0, 0, 16, 3, 2, 4, 5, 31], [0, 13, 5, 3, 3, 14, 2, 2, 0, 0, 18, 5, 2, 6, 11, 12], [5, 3, 12, 7, 3, 7, 2, 0, 0, 0, 17, 1, 1, 5, 8, 33], [1, 3, 7, 6, 4, 7, 3, 1, 1, 17, 4, 7, 2, 11, 31], [1, 7, 22, 14, 5, 16, 4, 4, 1, 0, 28, 5, 5, 15], [0, 2, 6, 12, 4, 9, 5, 4, 1, 0, 23, 2, 2, 7, 13, 41], [1, 6, 10, 7, 4, 8, 1, 2, 2, 0, 24, 3, 0, 4, 12, 49], [2, 7, 3, 1, 2, 7, 0, 3, 0, 1, 19, 4, 3, 7, 18, 57], [0, 7, 10, 4, 1, 9, 1, 5, 1, 28, 4, 0, 10, 6, 54], [5, 10, 12, 16, 3, 13, 7, 4, 2, 2, 15, 2, 3, 9, 14, 47], [0, 8, 8, 7, 5, 17, 4, 1, 2, 2, 29, 1, 1, 10, 9, 63], [1, 9, 6, 5, 4, 11, 10, 4, 2, 1, 32, 1, 1, 9, 15, 56], [5, 8, 8, 10, 6, 19, 5, 3, 1, 1, 29, 6, 4, 6, 12, 54], [9, 19, 13, 5, 6, 43, 7, 5, 13, 15, 48], [3, 14, 14, 15, 7, 24, 10, 7, 0, 1, 37, 7, 1, 9, 12, 54], [5, 15, 17, 14, 6, 19, 12, 5, 2, 4, 32, 6, 5, 14, 12, 69], [7, 17, 19, 17, 9, 19, 17, 5, 1, 27, 7, 3, 15, 17, 61], [3, 12, 22, 18, 5, 14, 3, 6, 2, 1, 44, 8, 0, 18, 17, 69], [5, 13, 18, 18, 6, 19, 5, 8, 3, 54, 8, 4, 19, 29, 108]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

