created: 20230626012458000
creator: Drevarr
modified: 20230705163538301
modifier: drevarr
tags: ChartData
title: 202306260124_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Night Of The Wabbit", "Newtype Khan", "Morton Saltbringer", "Venomina The Siren", "Elon The Mender", "Mememonoko", "Belvyn Brightblade", "Eibh\u00ebar", "Primal Clone", "Ryvalia Fazebringer", "Tribal S", "Arriasa", "Bender Ale Devourer", "Blanco Padre Guard", "Miphest\u00f6", "Raelyn Sunray", "Crusader Siolith", "Drevarr Moonwillow", "Bella Sassy", "Solus Sanctus", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Spellbreaker", "Vindicator", "Spellbreaker", "Chronomancer", "Tempest", "Druid", "Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Druid", "Druid", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[40.6948, 30.456, 16.1406, 104.7502, 20.1787, 62.3731], [9.1123, 73.3656, 9.8208, 0.0, 18.5875, 76.2979, 8.476, 16.7059, 66.6655, 0.0], [34.874, 0.0, 40.6602, 145.9455, 25.7103, 99.4876, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [8.8334, 12.7526, 21.4326, 104.8718, 23.399, 73.5848, 8.5478, 8.064, 7.5715, 0.0, 9.3946, 25.8312, 25.0027, 6.9274, 4.5933, 14.5363], [0.0, 0.0, 0.0, 81.9045, 9.2713, 124.7462, 9.697, 32.9784, 38.3328, 0.0, 40.5418, 13.6488, 12.3343, 0.0, 0.0, 8.3616], [43.0436, 36.7805, 36.3384, 171.4647, 14.5432, 58.1204, 14.8579, 14.784], [27.0618, 66.4589, 43.7913, 154.0874, 30.4368, 108.3797], [0.0, 49.8182, 53.0964, 249.359, 46.8499, 48.7129], [37.5291, 17.2368, 43.8795, 124.1934, 29.2682, 94.7194, 7.4995, 26.88, 2.376, 31.0464, 35.9832, 20.5976, 23.0842, 11.9256, 19.7784], [34.1081, 29.808, 35.4564, 139.8695, 31.7094, 133.8959, 13.1443, 27.9552, 35.6083, 10.2614, 35.1936, 5.4684, 15.481, 39.8223, 2.3798], [51.5706, 29.1341, 18.3456, 153.3582, 11.271, 169.8507, 13.4064, 38.6736, 5.7974, 11.594, 0.1613, 36.5246, 30.0458, 23.6755, 38.9795, 11.8992], [64.6947, 239.3944, 39.3965, 134.1537, 20.9261, 17.2704, 33.264, 0.0, 32.5382, 8.4374, 31.261, 21.5213, 15.7604, 25.4707], [84.6575, 27.6307, 2.7342, 261.1465, 31.8912, 186.346, 18.7891, 11.5416, 10.0426, 0.0, 0.0, 11.8786, 25.0272, 34.6812, 33.1891], [0.0, 110.0045, 25.9749, 104.8718, 37.1631, 189.9544, 38.304, 0.0, 53.4758, 0.0, 17.1965, 29.892, 47.4232, 34.1933, 54.192, 16.1765], [61.1188, 12.9859, 18.1692, 147.6468, 41.6559, 198.4598, 40.2998, 33.4488, 35.9251, 0.0, 20.5229, 43.3378, 20.3546, 74.0256, 52.1693, 31.8706], [98.0863, 21.721, 123.7887, 206.584, 35.3192, 163.1494, 34.7155, 21.252, 31.2682, 15.4, 22.3776, 18.5218, 33.8129, 25.2595, 83.6058, 29.5872], [45.2392, 62.8042, 57.2418, 214.8474, 48.9275, 135.5712, 39.816, 41.0928, 57.8794, 0.0, 34.2115, 37.2466, 40.6788, 69.4426, 85.4178, 89.6942], [33.9038, 63.4262, 52.1703, 155.7886, 88.3499, 294.2102, 23.063, 30.324, 63.7718, 60.522, 24.2726, 60.0998, 43.3826, 67.1405, 29.2873, 52.3886], [125.965, 13.6598, 93.8889, 353.7447, 21.8148, 340.2168, 38.3242, 17.9256, 81.5443, 0.0, 0.0, 10.4453, 8.6279, 41.0784, 44.7105, 19.4568], [76.9985, 52.5658, 92.6541, 389.5931, 59.705, 263.668, 26.2483, 14.9352, 50.2128, 13.5274, 9.9264, 59.8486, 75.1238, 133.3731, 36.0835], [83.7384, 68.7917, 131.4621, 319.4761, 36.5138, 258.1266, 72.0317, 33.3816, 127.2586, 27.016, 38.2234, 39.4349, 64.2537, 65.5142, 129.4119, 69.948], [91.9591, 78.071, 117.0855, 399.9223, 77.9879, 276.555, 81.4262, 37.38, 83.0966, 51.3878, 55.0238, 147.7076, 101.2704, 93.7615, 46.825], [124.8928, 126.4896, 149.2344, 483.4066, 95.8293, 433.0032, 84.3494, 76.1376, 140.7542, 29.8368, 64.2509, 110.1275, 107.0995, 171.8048, 93.9394]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

