created: 20230626012920000
creator: Drevarr
modified: 20230705163538491
modifier: drevarr
tags: ChartData
title: 202306260129_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Astraea Lumena", "Kosair", "Vipares", "Nbezerkzz", "Sl\u00e4ngin", "Tootsie Pop Rocks", "Synomi\u00f1 Spyce", "Reaper Madnesss", "Alarics Bane", "Sofya De Nova", "Charr Surethang", "Xanvias", "Fablegodx", "Johosh The Mighty"];
const professions = ["Firebrand", "Dragonhunter", "Renegade", "Scourge", "Berserker", "Scrapper", "Scourge", "Reaper", "Reaper", "Weaver", "Berserker", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[45.75, 54.8511, 9.5455, 10.2759, 149.6939, 14.2778, 354.2647, 172.3196, 120.1951, 55.806, 0.0, 52.0, 0.0, 0.0, 0.0, 77.5827, 7.8941], [630.5806, 0.0, 133.1765, 0.0, 315.4409], [74.4722, 0.0, 0.0, 15.5345, 73.2449, 49.5417, 0.0, 175.2268, 358.5122, 35.5075, 145.95, 0.0, 0.0, 0.0, 138.1181, 26.0824, 23.0312, 0.0], [368.6944, 0.0, 140.0909, 0.0, 246.9796, 16.0833, 1021.3824, 101.2165, 0.0, 54.9104], [220.1944, 38.0213, 122.4242, 185.6552, 103.3265, 60.5556, 181.0882, 15.7732, 308.9268, 0.0, 0.0, 0.0, 23.8254, 0.0, 0.0, 78.9843, 17.9765, 101.2656, 46.284, 181.2243, 0.0, 0.0], [0.0, 0.0, 0.0, 93.1552, 0.0, 932.7941, 381.4845, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 114.1339, 28.2235, 139.3438, 0.0], [25.7347, 16.2917, 2269.7647, 196.6186, 157.6341, 1.9403, 18.1, 0.0, 8.254], [17.0278, 0.0, 0.0, 34.3276, 210.8571, 0.0, 509.9412, 617.2165, 137.2195, 14.3881, 93.1, 0.0, 0.0, 0.0, 0.0, 117.2913, 93.7294, 211.625, 0.0], [368.8346, 90.1294, 677.0, 0.0, 557.0654, 0.0, 0.0], [51.9529, 248.6562, 182.2963, 983.0654, 0.0, 632.7], [252.9167, 0.0, 162.303, 84.931, 92.0204, 147.2361, 1607.7941, 1165.3814], [57.7872, 9.9091, 282.1379, 626.2449, 167.7917, 2012.0, 1240.5052, 404.439, 86.9254, 234.05, 487.7742, 0.0, 0.0, 0.0, 350.6063], [359.8889, 172.5319, 608.1212, 546.6724, 346.0204, 263.7917, 2146.2647, 1199.5052, 91.4634, 518.4179, 0.0, 269.0323, 57.746, 28.1765], [410.3611, 50.234, 784.303, 565.1207, 227.0816, 102.7222, 2213.3824, 1278.4433, 672.6098, 0.0, 587.35, 0.0, 0.0, 0.0, 129.1176, 595.2362, 101.0235, 688.0625, 31.2716, 627.1682, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

