created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Glorious Gluvs", "Urilstormwalker", "Rafaellagabriela", "Ryvalia Fazebringer", "Oo Dads Mad", "Gabe Malhorn", "Arriasa", "Gavann", "Klengah", "Venomina The Sly", "Ateriuz", "Zaedy Zae", "Jimbo The Pleb", "Johosh The Mighty", "Sygaldry Verdandi", "Crusader Siolith", "Xanvias Einzbern", "Solus Sanctus", "Sub Train", "Koralia Danai", "Bella Sassy", "Sister Elon\u00edth", "Jerryatric Reflexes"];
const professions = ["Berserker", "Berserker", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Druid", "Firebrand", "Druid", "Druid", "Berserker", "Druid", "Berserker", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 99.5994, 103.2077, 0.0, 0.0, 0.0, 31.2174, 19.305], [133.9481, 40.5328, 66.4631, 46.9444, 0.0, 0.0, 0.0, 26.9056, 0.0, 36.3348, 0.0, 0.0, 0.0, 0.0, 13.379, 0.0, 23.517], [11.8534, 42.8104, 39.4711, 45.8903, 172.8563, 33.6139, 6.6096, 24.4755, 4.8504, 38.0968, 27.963], [19.404, 64.3402, 33.4475, 5.9441, 48.552, 7.956, 7.9236, 11.531, 19.3814, 64.5296, 155.2947, 44.7293, 9.3514, 7.9772, 6.6087, 13.8744, 31.707], [85.0964, 17.1618, 68.2594, 15.2927, 7.7731, 16.2624, 8.9352, 15.6235, 22.9294, 26.0136, 67.4788, 136.2278, 27.7661, 17.4787, 7.7053, 6.1236, 26.8817, 0.0], [233.1061, 59.2038, 130.4767, 35.8326, 28.8061, 72.1728, 0.0, 39.9694, 21.7366, 69.2836], [345.7194, 96.675, 169.3421, 62.6019, 46.9977], [115.8863, 18.5847, 98.9598, 40.1539, 0.0, 44.3856, 0.0, 0.0, 42.943, 24.7258, 38.6942, 153.5386, 24.7306, 18.5558, 24.7475, 18.1688, 49.3697, 44.226], [270.3206, 80.5482, 174.5677, 53.4543, 27.4997, 68.0736, 73.1655, 25.5802, 57.629], [144.0094, 44.3705, 80.9968, 32.7741, 25.3768, 33.7008, 0.0, 26.3268, 0.0, 26.3355, 49.5474, 216.7603, 39.5957, 0.0, 26.4698, 10.9134, 52.4915, 79.443], [62.4809, 123.4548, 34.121, 42.9479, 67.3008, 0.0, 26.7741, 38.5029, 42.8837, 78.9219, 342.4512, 50.0414, 37.3075, 28.8267, 23.5042, 61.2208, 115.713], [62.9552, 160.1973, 58.9541, 55.1301, 65.1168, 0.0, 33.6114, 0.0, 28.8467, 60.6366, 453.3402, 84.8606, 60.6614, 22.3905, 0.0, 58.0412], [170.1929, 68.4746, 118.2292, 30.5293, 25.1155, 43.9824, 0.0, 18.7227, 19.0195, 52.6066, 125.2841, 331.6634, 66.0672, 44.015, 25.2007, 12.611, 18.8461, 131.391], [161.8287, 81.8849, 150.7259, 22.3638, 82.1072, 93.0384, 32.5312, 57.1585, 16.9651, 33.9335, 111.2457, 258.9082, 42.6312, 55.8144, 55.3871, 17.0774, 58.4459, 199.485], [312.7476, 65.3268, 145.9902, 77.0808, 48.5001, 52.7856, 0.0, 7.2846, 27.3032, 29.1687, 150.5297, 381.3376, 94.8154, 10.0368, 53.1209, 29.3651, 23.3552, 73.71], [290.4431, 110.6459, 172.6081, 36.1413, 37.5263, 74.6928, 16.7552, 68.0854, 53.745, 64.6476, 65.5913, 225.792, 44.0597, 25.9978, 94.0947, 33.0029, 76.367, 119.925], [394.3287, 16.6012, 157.4212, 26.4886, 13.162, 68.0064, 0.0, 74.5713, 29.1588, 49.3227, 110.6559, 241.0957, 105.8414, 45.0922, 27.8295, 7.9021, 83.1308, 167.778], [284.7458, 101.3751, 236.785, 64.4538, 50.6557, 95.9616, 0.0, 47.1582, 0.0, 48.1637, 229.6876, 307.5789, 79.2806, 0.0, 20.0337, 0.0, 55.7866, 107.64], [413.9663, 107.2826, 141.0912, 30.5012, 38.2449, 63.336, 10.7712, 39.9694, 83.1026, 105.2133, 61.5803, 327.9002, 0.0, 74.7619, 36.7133, 0.0, 85.501, 121.095], [255.4105, 110.2578, 192.2041, 72.479, 71.2641, 69.72, 5.032, 91.1853, 24.5199, 105.0201, 158.7876, 285.5014, 71.2454, 25.704, 43.784, 45.8565, 105.6767, 168.363], [385.722, 85.3345, 232.8658, 62.0968, 44.4829, 73.6176, 16.9864, 74.5394, 39.6295, 82.0329, 115.7286, 388.3622, 77.4058, 60.025, 71.2509, 7.9425, 68.2736, 171.054], [406.6931, 80.1601, 211.1469, 44.7557, 65.1894, 70.56, 5.0048, 42.5574, 31.6771, 129.6815, 218.5984, 400.4045, 37.7208, 57.2832, 54.0274, 16.936, 39.7155, 149.76], [430.4522, 124.4874, 236.785, 36.001, 64.8628, 82.8576, 9.8464, 84.5716, 44.7985, 87.3128, 117.0262, 518.0672, 53.2109, 33.2438, 67.8062, 19.8664, 69.8345, 152.919], [128.2389, 596.8615, 155.6769, 104.414, 223.9776, 137.1288, 150.7721, 127.9674, 88.9226, 774.473, 984.9549, 129.3667, 100.417, 466.1223, 106.0823, 256.5608, 426.816]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

