created: 20230208220141000
creator: Drevarr
modified: 20230705163518917
modifier: drevarr
tags: ChartData
title: 202302082201_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Howls", "Stoic Rapidfire", "Oo Dads Mad", "Rina Of Theros", "Rozaalyna", "Panther B Me", "Nelliel T", "Arcanophage Farra", "Arka\u00f1", "Smol Gluvs", "Fungus", "Newtype Khan", "Black Raspberry Pie", "Raziel Umbra", "Be\u00eb"];
const professions = ["Druid", "Druid", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0763, 0.0, 0.0441, 0.0161, 0.0, 0.0213, 0.0212, 0.035, 0.1064, 0.0563, 0.0075], [0.0387, 0.0, 0.0352, 0.0161, 0.0, 0.0426, 0.0053, 0.0811, 0.0709, 0.0704, 0.0406], [0.1667, 0.0103, 0.1542, 0.0, 0.12, 0.7447], [0.1995, 0.0619, 0.0881, 0.0484, 0.06, 0.6596, 0.0159], [0.2594, 0.0, 0.0308, 0.0, 0.0, 0.6383], [0.1244, 0.0, 0.1057, 0.0, 0.06, 0.4043, 0.0, 0.1552, 0.305, 0.2535, 0.018], [0.1784, 0.0309, 0.0705, 0.0, 0.0, 0.4468, 0.0, 0.235, 0.305, 0.169, 0.0316], [0.2336, 0.0206, 0.0352, 0.0323, 0.0, 0.4894, 0.0, 0.2517, 0.7021, 0.4648, 0.0421], [0.1326, 0.0, 0.141, 0.0, 0.0, 0.4255, 0.0159, 0.365, 0.4397, 0.493, 0.0827], [0.23, 0.0206, 0.0793, 0.0161, 0.16, 0.4043, 0.0, 0.2671, 0.5248, 0.6197, 0.1233], [0.2758, 0.0, 0.0352, 0.0, 0.08, 0.5745, 0.0, 0.2769, 0.6099, 0.507, 0.1699], [0.2664, 0.0, 0.0925, 0.0, 0.14, 0.617, 0.0212, 0.3189, 0.5887, 0.338, 0.1744], [0.3016, 0.0103, 0.2511, 0.0645, 0.02, 0.4043, 0.0, 0.365, 0.6809, 0.5915, 0.1895], [0.4671, 0.0412, 0.3436, 0.0323, 0.08, 0.4255, 0.0, 0.4951, 0.7305, 0.4789, 0.215], [0.4343, 0.0, 0.304, 0.0, 0.22, 1.0213, 0.0317, 0.551, 0.9149, 0.8592, 0.215]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

