created: 20230508221143000
creator: Drevarr
modified: 20230705163529353
modifier: drevarr
tags: ChartData
title: 202305082211_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00f9gly", "Belvyn Brightblade", "Panther B Me", "Nazhul Naxxremis", "Inedible Plant", "Spreadflamesoflight", "Ark Darkness", "Elektra Gd", "La Morte Vivante", "Gavann", "Red Date Sayaccho", "Gabe Malhorn", "Lord Erin The Wise", "Jeckyll Mbs", "Smol Gluvs", "Kary\u00edna", "Tootsy Pop Tart", "Sumatra Satyricon", "Xanvias Einzbern", "Husky Guard", "Grasszanine", "Koralia Danai", "Arriasa", "No Reserv\u00e9", "Mac Aaroni", "Tegan Parker", "Cerys Fireblade", "Be\u00eb", "Fribble Bibble", "Mistwalker Caelon", "Sygaldry Verdandi", "High Sorcer Baradun", "Sister Elon\u00edth", "Solus Sanctus", "Kiloak", "Rozaalyna", "Artakama Nahid", "Bella Fae", "N\u00e9azoule", "Mincemeat Pie", "Tika Rucola", "Drevarr Moonwillow", "Miphest\u00f6", "Newtype Khan", "Tribal S", "Zady Stardust", "Primal Clone", "Ryvalia Fazebringer", "Osh Kosh Johosh", "Eibh\u00ebar"];
const professions = ["Tempest", "Firebrand", "Scourge", "Scourge", "Vindicator", "Willbender", "Firebrand", "Tempest", "Dragonhunter", "Firebrand", "Tempest", "Firebrand", "Weaver", "Berserker", "Scourge", "Vindicator", "Scourge", "Soulbeast", "Berserker", "Dragonhunter", "Spellbreaker", "Firebrand", "Druid", "Herald", "Tempest", "Tempest", "Berserker", "Scourge", "Scrapper", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Tempest", "Firebrand", "Reaper", "Berserker", "Chronomancer", "Scrapper", "Tempest", "Spellbreaker", "Druid", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0033, 0.0676, 0.0083, 0.0, 0.0093], [0.0435, 0.0164, 0.0, 0.0, 0.0066, 0.0622, 0.0083, 0.0, 0.0093], [0.0, 0.0246, 0.0, 0.0, 0.0033, 0.0351, 0.0124, 0.0, 0.0, 0.0208], [0.0, 0.0, 0.077, 0.0083, 0.0238], [0.0145, 0.0, 0.0, 0.0, 0.0, 0.0676, 0.0166, 0.0, 0.0, 0.0199], [0.0577, 0.3804, 0.0065, 0.2071, 0.0, 0.0, 0.0, 0.2], [0.0, 0.0, 0.0, 0.0, 0.0716, 0.0207, 0.0, 0.0093, 0.0408], [0.0, 0.0082, 0.0, 0.0041, 0.0, 0.0, 0.0616, 0.1346, 0.4457, 0.1699], [0.0, 0.0328, 0.0163, 0.2308, 0.3261, 0.1307, 0.0786, 0.0, 0.1462, 0.0867, 0.1625], [0.0, 0.0199, 0.0, 0.4286, 0.17, 0.1667, 0.2875], [0.0254, 0.1731, 0.4348, 0.2026, 0.2071, 0.0204, 0.083, 0.1133, 0.175], [0.2308, 0.6413, 0.3529, 0.4, 0.0, 0.0672, 0.1267, 0.1125], [0.0, 0.0082, 0.0, 0.0066, 0.0514, 0.0166, 0.0, 0.0, 0.0435, 0.25, 0.3152, 0.1699, 0.1714, 0.0, 0.1265, 0.1, 0.0625], [0.0, 0.041, 0.0, 0.0, 0.0033, 0.0419, 0.0083, 0.0, 0.0, 0.0308, 0.1154, 0.4022, 0.3529, 0.1357, 0.0, 0.087, 0.1467, 0.0875], [0.0, 0.0, 0.0, 0.0, 0.0033, 0.0541, 0.0083, 0.0, 0.0093, 0.0389, 0.2308, 0.5761, 0.1242, 0.2571, 0.0, 0.1304, 0.0933, 0.15], [0.0, 0.0, 0.0, 0.0, 0.0066, 0.0486, 0.0124, 0.0, 0.0, 0.0353, 0.25, 0.2935, 0.2418, 0.2857, 0.0, 0.1344, 0.1667, 0.2875], [0.0, 0.0, 0.0, 0.0, 0.0099, 0.0527, 0.0124, 0.0, 0.0, 0.0562, 0.4231, 0.3261, 0.2092, 0.3571, 0.0395, 0.12, 0.1375], [0.0, 0.0, 0.0, 0.0, 0.0066, 0.073, 0.0083, 0.0, 0.0, 0.0489, 0.1538, 0.1848, 0.2549, 0.25, 0.0, 0.1858, 0.0867, 0.125], [0.0145, 0.0, 0.0, 0.0, 0.0, 0.0527, 0.0083, 0.0238, 0.0093, 0.0498, 0.25, 0.5109, 0.3464, 0.1286, 0.0, 0.1107, 0.08, 0.2125], [0.0725, 0.0, 0.0, 0.0497, 0.0716, 0.0332, 0.0, 0.0, 0.0281, 0.4423, 0.3478, 0.2222, 0.3571, 0.0, 0.0474, 0.1467, 0.125], [0.0, 0.0164, 0.0, 0.0, 0.0093, 0.0652, 0.2692, 0.413, 0.1895, 0.55, 0.0, 0.0751, 0.18, 0.275], [0.0, 0.0, 0.0, 0.0, 0.0066, 0.0568, 0.0124, 0.0, 0.0, 0.0498, 0.2885, 0.5761, 0.2157, 0.2643, 0.0, 0.1344, 0.1267, 0.1125], [0.0, 0.0082, 0.0, 0.0, 0.0, 0.0595, 0.0166, 0.0, 0.0187, 0.0326, 0.2885, 0.6413, 0.2222, 0.4, 0.0949, 0.1, 0.175], [0.0, 0.0164, 0.0, 0.0041, 0.0, 0.0, 0.0453, 0.4231, 0.3478, 0.3203, 0.3786, 0.0, 0.1383, 0.0933, 0.575], [0.0, 0.0, 0.0, 0.0, 0.0132, 0.0635, 0.0083, 0.0, 0.028, 0.067, 0.3077, 0.2935, 0.1111, 0.3286, 0.0204, 0.1581, 0.1333, 0.1625], [0.0, 0.0082, 0.0132, 0.0581, 0.0124, 0.0, 0.028, 0.0362, 0.1538, 0.4457, 0.3072, 0.3, 0.0, 0.1858, 0.0667, 0.2875], [0.0, 0.0082, 0.0, 0.0099, 0.073, 0.0083, 0.0, 0.0, 0.0507, 0.5192, 0.4348, 0.2288, 0.1857, 0.0, 0.1344, 0.1267, 0.2], [0.0, 0.0, 0.0, 0.0, 0.0199, 0.0662, 0.0249, 0.0, 0.0093, 0.0371, 0.1346, 0.5217, 0.2745, 0.3214, 0.0, 0.1304, 0.1067, 0.275], [0.0, 0.0, 0.0, 0.0, 0.0033, 0.0811, 0.0124, 0.0, 0.028, 0.0389, 0.0577, 0.6739, 0.1699, 0.4214, 0.0, 0.1462, 0.04, 0.175], [0.0, 0.0164, 0.2069, 0.0066, 0.0581, 0.0166, 0.0, 0.0093, 0.0489, 0.2115, 0.4022, 0.2876, 0.3429, 0.0, 0.0909, 0.08, 0.3875], [0.0, 0.0164, 0.0, 0.0298, 0.0554, 0.0124, 0.0, 0.0, 0.0589, 0.0, 0.6304, 0.2876, 0.3357, 0.1225, 0.0667, 0.1375], [0.0, 0.0, 0.0, 0.0033, 0.0851, 0.0207, 0.0, 0.0187, 0.0643, 0.4239, 0.1373, 0.3786, 0.0204, 0.1265, 0.0533, 0.3125], [0.0, 0.0082, 0.0, 0.05, 0.0332, 0.0, 0.0652, 0.1731, 0.2609, 0.2092, 0.4714, 0.0204, 0.1304, 0.0867, 0.3625], [0.0145, 0.0328, 0.0, 0.0, 0.0, 0.0689, 0.0083, 0.0, 0.0187, 0.0516, 0.1346, 0.7174, 0.2026, 0.3214, 0.0, 0.1028, 0.12, 0.2], [0.0, 0.0246, 0.0, 0.0132, 0.0446, 0.0083, 0.0, 0.0187, 0.0516, 0.1731, 0.5978, 0.3007, 0.3357, 0.0, 0.1542, 0.1333, 0.1375], [0.0, 0.0082, 0.0, 0.0, 0.0, 0.0716, 0.0, 0.0, 0.0187, 0.0462, 0.1731, 0.5217, 0.2288, 0.3714, 0.0, 0.1779, 0.18, 0.15], [0.0, 0.0, 0.0, 0.0033, 0.0351, 0.0083, 0.0, 0.0093, 0.0553, 0.0192, 1.0761, 0.2549, 0.45, 0.0, 0.0593, 0.1333, 0.1], [0.0, 0.0246, 0.0, 0.0, 0.0, 0.0838, 0.029, 0.0, 0.0, 0.038, 0.1538, 0.5978, 0.268, 0.3929, 0.0204, 0.087, 0.1733, 0.3], [0.0, 0.0164, 0.0, 0.0166, 0.0608, 0.0249, 0.0187, 0.0562, 0.0769, 0.6848, 0.1438, 0.6143, 0.0, 0.1265, 0.1533, 0.125], [0.0, 0.0082, 0.0, 0.0, 0.0689, 0.0, 0.0, 0.0, 0.0553, 0.25, 0.3478, 0.3922, 0.5143, 0.1818, 0.06, 0.2375], [0.0, 0.0246, 0.0, 0.0, 0.0099, 0.0635, 0.0249, 0.0, 0.0093, 0.0281, 0.1731, 0.5326, 0.3007, 0.4857, 0.0, 0.1225, 0.2067, 0.5125], [0.0, 0.0033, 0.073, 0.0124, 0.0476, 0.0093, 0.0598, 0.3077, 0.5326, 0.1961, 0.55, 0.0, 0.1225, 0.1333, 0.2375], [0.0, 0.0082, 0.0, 0.0, 0.0851, 0.0083, 0.0, 0.0187, 0.0661, 0.4615, 0.7174, 0.2876, 0.1071, 0.0204, 0.1542, 0.2267, 0.15], [0.0145, 0.0082, 0.0, 0.0, 0.0596, 0.073, 0.0207, 0.0, 0.0187, 0.0652, 0.4615, 0.3587, 0.2484, 0.4571, 0.0, 0.1225, 0.1733, 0.1875], [0.0, 0.0492, 0.0, 0.0066, 0.077, 0.0083, 0.0238, 0.0187, 0.067, 0.1538, 0.4891, 0.2484, 0.5143, 0.0, 0.0988, 0.2067, 0.3125], [0.0, 0.0, 0.0, 0.0, 0.0033, 0.073, 0.0041, 0.0, 0.0, 0.0697, 0.2692, 0.4239, 0.3464, 0.4, 0.0, 0.2332, 0.1333, 0.175], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0541, 0.0124, 0.0, 0.0643, 0.0962, 0.7174, 0.281, 0.5571, 0.0, 0.1542, 0.1133, 0.4625], [0.0435, 0.0328, 0.0345, 0.0, 0.0595, 0.0249, 0.0, 0.0, 0.0489, 0.3654, 0.7717, 0.2941, 0.4714, 0.0, 0.1225, 0.18, 0.5125], [0.0, 0.0574, 0.0, 0.0, 0.0166, 0.077, 0.0124, 0.0238, 0.0093, 0.0453, 0.4808, 0.6304, 0.3137, 0.3643, 0.0, 0.3004, 0.04, 0.4], [0.0, 0.0492, 0.0, 0.1034, 0.0099, 0.073, 0.0083, 0.0238, 0.0, 0.0281, 0.3846, 0.9457, 0.5817, 0.3786, 0.0, 0.1265, 0.16, 0.45]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

