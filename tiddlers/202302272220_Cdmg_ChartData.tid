created: 20230227222028000
creator: Drevarr
modified: 20230705163520343
modifier: drevarr
tags: ChartData
title: 202302272220_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Eibh\u00ebar", "Koralia Danai", "Ryvalia Fazebringer", "Tootsie Pop Bringer", "Grumyaar Lordsbane", "Husky Guard", "Mistwalker Caelon", "Venomina The Siren", "High Sorcer Baradun", "Legacy Of Mathus", "My Birthday Girl", "Jeckyll Mbs", "Sygaldry Verdandi", "Rozaalyna", "Jupi Jupi Jupi", "M A C U M B E I R O", "Smol Daddy Tika", "Ravioli Fetabringer", "Dark Sidiuz", "What Charr U Saying", "Lord Erin The Wise", "Echo Monchichi", "Xanvias Tseli", "Sp\u00edcy Cheese", "Mike The Archmagus", "Sofya De Nova", "Nelliel T", "Smol Gluvs", "Rina Of Theros", "\u00c1rk\u00e1ntor", "Be\u00eb"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Dragonhunter", "Vindicator", "Tempest", "Tempest", "Berserker", "Scrapper", "Berserker", "Firebrand", "Scourge", "Dragonhunter", "Weaver", "Berserker", "Firebrand", "Scourge", "Berserker", "Weaver", "Renegade", "Berserker", "Berserker", "Weaver", "Weaver", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.626, 2.1341, 3.5616, 4.3542, 0.0, 0.0, 1.8, 1.7769, 0.0, 10.3108, 29.0164, 15.172, 35.2222, 42.7197, 53.0222], [0.4834, 20.3904, 12.1463, 12.4634, 9.1918, 11.9792, 0.0, 12.2368, 58.0333, 5.0496, 8.5, 3.4932, 10.2769, 20.086, 21.2593, 10.7452, 0.0, 3.2553, 13.8557, 3.2031], [0.0, 4.0956, 24.3171, 1.8902, 2.9589, 97.7083, 0.0, 12.7368, 7.4, 0.0, 6.875, 0.0, 17.3259, 6.2366, 6.8519, 1.5987, 0.0, 14.3723, 14.5131, 19.8906], [7.2384, 2.8765, 44.9268, 0.0244, 9.1507, 3.9167, 0.0, 0.0, 17.0333, 0.8843, 0.0, 0.0, 21.4393, 0.0, 0.0, 2.1146, 8.5111, 5.5745, 15.8523, 0.0], [7.4437, 15.6494, 8.5691, 1.4286, 8.9756, 8.5753, 9.4375, 0.0, 0.0, 0.0667, 8.6116, 36.25, 0.3378, 14.1974, 21.1505, 13.037, 2.2484, 1.3778, 11.0426, 17.7654, 2.0938], [42.1207, 18.875], [6.1523, 7.7968, 21.6829, 0.0, 6.5366, 32.7123, 0.0, 29.3077, 16.5, 0.0, 6.3802, 11.5, 0.0, 14.7336, 29.6344, 9.0318, 11.7333, 25.7872, 17.0692, 7.5], [1.4967, 7.4582, 34.0407, 12.2857, 20.061, 8.0274, 0.0, 0.0, 0.0, 3.4333, 3.4132, 2.6562, 7.6284, 12.0631, 5.3118, 0.0, 12.465, 0.0, 11.2447, 27.0422, 4.4375], [0.0, 25.2191, 6.7561, 1.5366, 0.0, 0.0, 0.7692, 24.2105, 0.0, 0.0, 14.4062, 7.0811, 11.5093, 9.3118, 53.8333, 28.5796, 0.0, 18.0851, 25.6667, 0.6094], [6.5298, 0.0, 11.2764, 3.8537, 11.1096, 42.5, 9.7895, 11.5333, 1.438, 10.0, 0.0, 7.7734, 31.2581, 0.0, 19.7197, 28.9556, 18.2766, 33.6177, 3.4219], [17.6954, 3.3187, 95.4472, 61.1098, 131.726, 140.375, 0.0, 25.6579, 40.1333, 0.3058, 17.5938, 62.3851, 19.6846, 0.0], [1.1722, 14.4661, 1.7724, 0.8214, 6.2683, 9.2329, 4.8333, 86.0, 11.2895, 1.7667, 0.2149, 2.0938, 1.7027, 11.0082, 18.2043, 2.7593, 16.7643, 0.5333, 23.3404, 36.2017, 39.1406], [0.0, 7.8088, 19.2033, 0.0, 0.0, 5.589, 100.5625, 0.0, 0.0, 0.0, 0.0, 15.8581, 25.021, 5.957, 0.0, 7.5796, 0.0, 5.6277, 28.8759, 9.5312], [3.0927, 19.259, 35.2276, 9.9878, 4.0411, 16.4583, 0.0, 9.1842, 0.0, 0.4628, 20.4688, 13.2027, 21.7453, 16.3011, 0.0, 32.2038, 12.1915, 34.2498, 0.0], [15.9404, 33.5657, 197.4797, 52.9268, 26.9178, 322.5208, 61.5, 139.5789, 1.9054, 17.5117, 48.2688, 0.0], [12.0464, 69.5139, 23.0813, 23.378, 18.1781, 55.7083, 3.2568, 44.5818, 8.8172, 6.9259, 29.5541, 5.0222, 29.2021, 12.8346], [0.5541, 10.6752, 15.0, 0.0926, 48.0701, 0.0, 32.6809, 62.1654, 4.2188], [18.8013, 26.8486, 33.561, 0.0714, 11.3902, 20.9726, 66.6875, 25.8077, 0.0, 0.0, 5.0661, 0.0, 4.8108, 22.028, 7.7957, 15.2037, 43.0828, 0.0, 32.5638, 39.0895, 33.9062], [0.0, 23.6175, 79.4065, 36.9512, 2.9178, 41.1042, 23.3462, 0.0526, 9.8, 0.0, 0.0, 13.4189, 27.1005, 14.5591, 211.6296, 15.5478, 112.3556, 16.6596, 31.865, 0.0], [43.0993, 33.3825, 70.4472, 10.1786, 197.2805, 171.8767, 309.1667, 77.9231, 20.4737, 3.9797, 45.5549, 37.1613, 0.0], [13.1149, 61.3026, 0.0, 0.0, 9.0764, 9.3111, 0.4787, 50.6127, 0.0], [0.0, 60.745, 17.6504, 51.6429, 17.3902, 211.0411, 108.1042, 9.3846, 88.9211, 4.1333, 0.0, 0.0, 19.6351, 26.2348, 86.7312, 16.828, 0.0, 22.4362, 47.4456], [118.384, 46.2656], [16.7417, 64.1275, 41.9756, 0.0, 31.7927, 134.4384, 38.2292, 92.7308, 1.0526, 0.0, 0.0, 55.5625, 0.2297, 1.4766, 0.0, 0.0, 30.1083, 0.8889, 12.883, 79.1722, 23.6562], [0.8808, 62.1912, 46.7967, 35.8659, 52.5205, 226.0417, 36.1538, 130.3684, 3.1333, 4.0, 160.7812, 3.0203, 27.9381, 0.0, 8.3519, 3.2866, 0.1778, 1.6383, 67.3274, 13.2188], [9.3775, 7.6614, 30.2033, 0.0, 21.4024, 26.9589, 181.7708, 53.0769, 42.6053, 41.1667, 7.2231, 54.5625, 12.6284, 68.1215, 33.9785, 12.2593, 71.2166, 0.0, 62.5319, 45.865], [0.0, 51.7317, 42.0, 132.9615, 91.6316, 32.5333, 16.2645, 169.0, 18.2905, 55.8785, 16.7849, 0.0, 73.6943, 15.5556, 4.4043, 63.5148, 71.6094], [0.0, 0.0, 23.7154, 2.0357, 117.0122, 56.4795, 0.0, 26.5769, 54.1842, 7.8919, 39.1834, 48.9815, 47.828, 3.6, 20.4468, 86.0903, 0.0625], [0.4768, 14.5936, 0.0, 81.3421, 7.473, 49.4988, 66.828, 16.6111, 200.8726, 10.3556, 80.2447, 116.9941, 36.3906], [22.298, 79.5418, 189.6911, 35.8929, 244.2439, 206.5753, 293.9583, 29.3077, 60.6316, 41.0667, 5.2066, 4.6875, 17.7365, 67.8353, 76.5699, 0.5556, 75.6688, 38.8667, 24.5638, 70.746, 12.2656], [78.0, 48.6111, 80.7771, 56.0222, 85.1383, 182.1696, 57.0312], [36.0728, 203.3785, 319.0894, 0.0, 186.1585, 32.726, 229.8947, 9.7635, 72.7652, 75.2473, 4.0926, 97.9045, 9.1111, 97.5426, 159.6456, 1.1719]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

