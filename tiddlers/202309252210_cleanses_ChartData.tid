created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Grasszanine", "Arcanophage Farra", "Nothingwillsaveyou", "Black Raspberry Pie", "Eibh\u00ebar", "Varen Frostwood", "Tootsie Pop Rocks", "Pixie Buttercup", "High Sorcer Baradun", "Klengah", "Tegan Parker", "Tribal S", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Berserker", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Tempest", "Druid", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0901, 0.0805, 0.127, 0.0403, 0.0565, 0.0, 0.0, 0.0312, 0.0385, 0.0, 0.0935, 0.026, 0.0215, 0.0, 0.0], [0.0, 0.4595, 0.1494, 0.3651, 0.121, 0.0957, 0.0, 0.0031, 0.0, 0.0, 0.0112], [0.0, 0.1081, 0.0345, 0.0635, 0.0403, 0.0348, 0.0097, 0.0252, 0.0, 0.0308, 0.0112, 0.1007, 0.0519, 0.0129, 0.0], [0.1081, 0.1034, 0.1111, 0.0323, 0.0217, 0.0583, 0.0126, 0.0, 0.0, 0.0225, 0.0892, 0.0844, 0.0, 0.0526, 0.0], [0.4505, 0.2759, 0.0635, 0.2581, 0.1043, 0.0, 0.022, 0.0938, 0.0, 0.0112, 0.0518, 0.0065, 0.0, 0.0, 0.0], [0.0, 0.1351, 0.023, 1.0, 0.2823, 0.0826, 0.068, 0.0094, 0.2188, 0.0, 0.0262, 0.0619, 0.0, 0.0, 0.0, 0.0], [0.0, 0.2883, 0.5172, 0.6349, 0.0968, 0.1174, 0.0583, 0.0692, 0.0154, 0.0674, 0.2489, 0.0779, 0.0043, 0.2105, 0.0], [0.1538, 0.955, 0.8391, 0.746, 0.5242, 0.2913, 0.0291, 0.0314, 0.1875, 0.0, 0.1161, 0.0561], [0.7655], [1.1171, 0.6782, 0.9365, 0.5242, 0.2435, 0.1845, 0.0818, 0.3125, 0.0692, 0.0974, 0.2475, 0.1883, 0.0386, 0.1842, 0.0], [0.0385, 0.7838, 0.5862, 1.7143, 0.2903, 0.3957, 0.3204, 0.1572, 0.25, 0.0308, 0.2322, 0.5324, 0.0649, 0.0129, 0.0, 0.0], [1.1532, 1.4598, 1.4921, 1.0161, 0.6478, 0.1942, 0.2201, 0.1769, 0.206, 0.764, 0.4675, 0.0429, 0.0, 0.0], [2.0901, 2.2759, 3.0476, 0.9597, 1.2174, 0.3786, 0.3459, 0.25, 0.0077, 0.2884, 1.4029, 0.513, 0.0386, 0.0, 0.0], [0.0, 1.8108, 1.5862, 2.3333, 1.1452, 1.2826, 0.5049, 0.3113, 0.0, 0.2, 0.3558, 1.3712, 0.961, 0.133, 0.4737, 0.0], [0.0, 1.4144, 1.7356, 2.4286, 1.1532, 1.1609, 0.5922, 0.456, 0.875, 0.3692, 0.367, 1.4835, 0.9026, 0.03, 0.0, 0.0164]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

