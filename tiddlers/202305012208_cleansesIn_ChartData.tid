created: 20230501220820000
creator: Drevarr
modified: 20230705163527804
modifier: drevarr
tags: ChartData
title: 202305012208_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Kmpek", "Gollum Mah Precious", "Morv\u00fcs", "Skylar Shadowmoon", "Oo Dads Mad", "Lord Erin The Wise", "Raevarae", "Tegan Parker", "Xkaet", "Morv\u00fcs", "Xyntharos", "Rosie Sunray", "Flanneryflame", "Grilo Gringo", "Belvyn Brightblade", "Aira Draugr", "Viral Marketing", "Bella Sassy", "Joint Lee", "Blancooo Padreee", "Koralia Danai", "Venomina The Siren", "Skye Nightroad", "Hauzzy", "Sub Train", "Kiloak", "Tootsie Pop Rocks", "Elonith Primal", "Sygaldry Verdandi", "Svix", "Kary\u00edna", "Farra The Bloodless", "Smol Gluvs", "Primal Clone", "Tyzzki", "Miphest\u00f6", "Whose Guardian", "Xanvias Einzbern", "Johosh The Great", "Mistwalker Caelon", "Eibh\u00ebar", "Hyde En Sikh", "Black Raspberry Pie", "Drevarr Moonwillow", "Gabe Malhorn", "Be\u00eb", "Tika Sumiko", "Mac Aaroni", "Zadie Miststep", "Newtype Khan"];
const professions = ["Vindicator", "Harbinger", "Berserker", "Scrapper", "Spellbreaker", "Tempest", "Reaper", "Tempest", "Tempest", "Spellbreaker", "Vindicator", "Vindicator", "Tempest", "Dragonhunter", "Firebrand", "Herald", "Dragonhunter", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Scourge", "Vindicator", "Vindicator", "Scourge", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Firebrand", "Scourge", "Tempest", "Tempest", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0059, 0.5345, 0.2767, 0.1636, 0.1121, 0.0317, 0.0769, 0.2062], [0.2304, 0.3152], [0.2935, 0.0621], [0.1405, 0.0095, 0.0276, 0.0455, 0.3673, 0.2199, 0.1469], [0.3308, 0.0806], [0.0142, 0.0, 0.0455, 0.2857, 0.1361, 0.1765, 0.9138, 0.1985], [0.0047, 0.069, 0.0, 0.4082, 0.178, 0.4135, 0.569], [0.1126, 0.6724, 0.3038, 0.1273, 0.7069, 0.0, 0.299], [0.0237, 0.0207, 0.0, 0.1429, 0.1518, 0.5367], [0.0332, 0.0455, 0.4286, 0.2042, 0.5344], [0.1702, 0.0142, 0.0, 0.0, 0.1837, 0.1518, 0.1445, 0.3966, 0.1789, 0.0727, 0.1034, 0.0, 0.0, 0.1649], [0.1023, 0.0427, 0.0, 0.0455, 0.2653, 0.2251, 0.1007, 0.4828, 0.3233, 0.1273, 0.181, 0.0, 0.0256, 0.3196], [0.0535, 0.1043, 0.0207, 0.0455, 0.2245, 0.2461, 0.5545], [0.1818, 0.2041, 0.2356, 0.3009, 0.7759, 0.2857, 0.0364, 0.1638, 0.0, 0.0, 0.2835], [0.3623, 0.0095, 0.0207, 0.0, 0.1633, 0.1885, 0.2512], [0.4493, 0.0521, 0.0483, 0.0455, 0.2041, 0.1361, 0.173], [0.2591, 0.0095, 0.0138, 0.0, 0.2449, 0.267, 0.4491], [0.2495, 0.0047, 0.0, 0.0455, 0.2653, 0.2147, 0.2227, 0.5862, 0.2571, 0.2182, 0.2241, 0.0476, 0.0, 0.2062], [0.3174, 0.0521, 0.0138, 0.0455, 0.4694, 0.178, 0.4621], [0.1013, 0.09, 0.0138, 0.0909, 0.5306, 0.2199, 0.2915, 0.8103, 0.3383, 0.4, 0.2241, 0.0317, 0.0256, 0.1701], [0.3317, 0.0047, 0.0, 0.0909, 0.102, 0.2199, 0.3199, 0.4138, 0.1744, 0.0727, 0.1466, 0.0513, 0.1082], [0.0526, 0.0332, 0.0, 0.0, 0.2245, 0.1414, 0.5012, 0.6379, 0.2962, 0.0182, 0.2586, 0.0, 0.0256, 0.3299], [0.3365, 0.1185, 0.0207, 0.0, 0.3061, 0.1728, 0.5438], [0.2772, 0.019, 0.0276, 0.0455, 0.3673, 0.1571, 0.2216, 1.2414, 0.3474, 0.1273, 0.1121, 0.0159, 0.0, 0.2216], [0.0332, 0.0345, 0.0455, 0.4082, 0.2304, 0.5592, 0.7759, 0.3579, 0.0545, 0.1638, 0.1429, 0.0256, 0.2268], [0.3002, 0.0142, 0.0, 0.0455, 0.449, 0.1518, 0.3649, 0.431, 0.2226, 0.1273, 0.2759, 0.0, 0.0, 0.232], [0.218, 0.0047, 0.0345, 0.0455, 0.2245, 0.2304, 0.3673, 0.3793, 0.3038, 0.0909, 0.6724, 0.0256, 0.1392], [0.4006, 0.0047, 0.0, 0.0455, 0.1837, 0.1937, 0.5178, 0.5345], [0.2667, 0.0047, 0.0, 0.0, 0.2653, 0.1361, 0.4135, 0.3966, 0.2692, 0.0727, 0.4914, 0.0159, 0.1282, 0.134], [0.2801, 0.0332, 0.0345, 0.0, 0.2857, 0.2094, 0.4325, 0.4655, 0.2902, 0.0909, 0.2586, 0.0317, 0.0256], [0.1902, 0.0237, 0.0345, 0.0, 0.2245, 0.1937, 0.4739, 0.3966, 0.2992, 0.0364, 0.5431, 0.0, 0.0, 0.2526], [0.3078, 0.0948, 0.0483, 0.0909, 0.1837, 0.1571, 0.4846, 0.6897, 0.2406, 0.0364, 0.1207, 0.0159, 0.0, 0.2423], [0.2772, 0.0047, 0.0138, 0.0, 0.1633, 0.2147, 0.5296, 0.6552, 0.2617, 0.1273, 0.0948, 0.0, 0.0, 0.2938], [0.3757, 0.0047, 0.0138, 0.0, 0.3265, 0.1466, 0.3685, 0.4138, 0.3158, 0.0727, 0.5345, 0.0, 0.0513, 0.1392], [0.2954, 0.019, 0.0, 0.0, 0.3878, 0.1309, 0.4384, 0.3966, 0.3203, 0.1273, 0.4741, 0.0, 0.0, 0.299], [0.4025, 0.0521, 0.0138, 0.0909, 0.2449, 0.199, 0.6398, 1.1379], [0.3585, 0.0, 0.0207, 0.0455, 0.1837, 0.2147, 0.4182, 0.8276, 0.2602, 0.1818, 0.4914, 0.0, 0.0, 0.1289], [0.3337, 0.0142, 0.0, 0.0, 0.3673, 0.2199, 0.5, 0.6897, 0.2301, 0.0364, 0.319, 0.0, 0.0769, 0.1753], [0.3738, 0.0237, 0.0138, 0.0909, 0.2653, 0.1623, 0.4348, 0.5517, 0.2977, 0.1455, 0.2241, 0.0794, 0.0256, 0.1237], [0.2906, 0.0853, 0.0, 0.0455, 0.2653, 0.2618, 0.5403, 0.7069, 0.2421, 0.0364, 0.0517, 0.0476, 0.0513, 0.268], [0.304, 0.0569, 0.0276, 0.1818, 0.2857, 0.1571, 0.4384, 0.6724, 0.3083, 0.1091, 0.6293, 0.0317, 0.0769, 0.2474], [0.3193, 0.0142, 0.0345, 0.0, 0.3265, 0.2984, 0.4621, 0.5345, 0.2932, 0.0909, 0.4569, 0.0159, 0.0769, 0.2113], [0.3776, 0.0047, 0.0, 0.0, 0.2857, 0.2251, 0.513, 0.7069, 0.2737, 0.1091, 0.1379, 0.0476, 0.0, 0.2526], [0.3423, 0.0379, 0.0828, 0.0, 0.2245, 0.2356, 0.4976, 0.7586, 0.2902, 0.1455, 0.4483, 0.0, 0.0769, 0.1907], [0.3461, 0.0474, 0.0207, 0.0, 0.2245, 0.1623, 0.5273, 0.7241, 0.2857, 0.1091, 0.5172, 0.0159, 0.0, 0.1546], [0.3891, 0.0427, 0.0, 0.2273, 0.2041, 0.2356, 0.5142, 0.7069, 0.2797, 0.1091, 0.1034, 0.0635, 0.0256, 0.2732], [0.3728, 0.0047, 0.0276, 0.0, 0.3265, 0.2932, 0.4088, 0.8621, 0.3429, 0.0909, 0.6724, 0.0159, 0.0769, 0.2268], [0.4197, 0.0758, 0.0069, 0.0, 0.2245, 0.2042, 0.4479, 0.8621, 0.3248, 0.1636, 0.3362, 0.0317, 0.0, 0.2113], [0.3633, 0.0995, 0.0414, 0.0, 0.2041, 0.2042, 0.4727, 0.7241, 0.3925, 0.0545, 0.3103, 0.1429, 0.0, 0.3351], [0.3642, 0.0474, 0.0069, 0.0, 0.3061, 0.2251, 0.5118, 0.4828, 0.4526, 0.1455, 0.6207, 0.0159]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

