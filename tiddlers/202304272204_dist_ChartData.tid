created: 20230427220456000
creator: Drevarr
modified: 20230705163526953
modifier: drevarr
tags: ChartData
title: 202304272204_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Fuzzy Toe Beans", "Clem Storage Xviii", "Morv\u00fcs", "Heal Warriior", "Evil Stepmother", "Klenga", "Xkaet", "Primal Clone", "Blaize Harlot", "Malfax Jinn", "Puny Tinker", "Mistwalker Caelon", "Mac Aaroni", "Xanvias Tlesia", "Drevarr Moonwillow", "Johosh The Great"];
const professions = ["Firebrand", "Scrapper", "Berserker", "Berserker", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Scourge", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Daredevil", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13634, 24728, 415, 8074, 10754, 3932, 484, 445, 9914, 2092, 1746, 572, 10522], [25865, 7140, 544, 292, 310, 2619, 1067, 1914, 255, 2081, 10035, 677], [351, 345, 2139, 1066, 1913, 323, 409, 1438, 11242], [544, 321, 5936, 610, 1898, 371, 276, 6905, 767], [4515, 492, 822, 673, 742, 519, 10303, 1567, 585, 332, 371, 2412, 953, 1642, 10404, 1971, 1946, 8499], [4920, 443, 4366, 433, 1469, 335, 9325, 7765, 350, 355, 321, 1008, 4006, 2069, 213, 237, 6234, 3924], [383, 4445, 396, 2356, 344, 11016, 512, 489, 429, 425, 916, 906, 1958, 375, 422, 13448, 853], [3328, 483, 3599, 384, 1425, 327, 8053, 305, 488, 292, 395, 3323, 275, 2163, 424, 568, 1413, 2331], [4672, 448, 2640, 370, 380, 327, 10328, 6585, 532, 457, 537, 367, 3027, 1107, 380, 395, 2099, 9817], [8275, 257, 7765, 506, 5945, 1259, 1805, 592, 227, 4783, 687], [921, 696, 302, 858, 762, 2327, 456, 457, 3739, 505], [4168, 359, 291, 261, 2460, 1402, 1836, 625, 8352, 12534], [593, 343, 624, 638, 419, 272, 8355, 373, 289, 225, 254, 2147, 1205, 1843, 345, 364, 2256, 648], [3137, 306, 10111, 433, 423, 320, 10484, 281, 328, 269, 267, 1612, 516, 447, 295, 8498, 5558, 295], [478, 453, 4286, 268, 501, 208, 272, 291, 451, 210, 250, 818, 200, 1912, 249, 484, 6606, 589], [953, 385, 2088, 211, 481, 180, 391, 229, 243, 227, 231, 2605, 226, 1834, 175, 228, 824, 1508]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

