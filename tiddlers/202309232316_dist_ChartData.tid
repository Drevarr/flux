created: 20230923231628000
creator: Drevarr
tags: ChartData
title: 202309232316_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Ax Axun", "Morv\u00e4rth", "Smol Gluvs", "Oo Dads Mad", "Koralia Danai", "Leriel Nova", "Belvyn Brightblade", "Alhana Lafay", "Regis Hawkesburne", "Varen Frostwood", "Sub Train", "Kosair", "Newtype Khan", "Black Raspberry Pie", "Tootsie Pop Rocks", "Bella Sassy", "Xanvias", "Pr\u00e6tor Lightbringer", "Zaedy Zae"];
const professions = ["Vindicator", "Reaper", "Reaper", "Berserker", "Firebrand", "Tempest", "Firebrand", "Reaper", "Berserker", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[296, 1029, 1694, 4115, 3806, 3714, 1432, 676, 823, 3506, 654, 5080, 4377], [2537, 3604, 2748, 4560, 2826, 1769, 1668, 684, 303, 350, 20086, 3282, 2889], [12286, 2146, 1976, 352, 3264, 1391, 1834, 7527, 1086, 9913, 17379, 893, 2924], [3377, 1369, 1600, 349, 7318, 1543, 833, 1625, 1221, 480, 3418, 2137], [368, 3514, 758, 6905, 450, 2898, 717, 5306, 337, 395, 310, 2164, 1326], [574, 1003, 4873, 8871, 766, 2531, 1528, 3999, 372, 574, 257, 3390], [253, 929, 4417, 2229, 5669, 3511, 512, 6592, 1590, 6543, 356, 3728], [10007, 851, 2544, 18830, 5656, 3524, 7175, 350, 655, 251, 3395, 1710], [16700, 1195, 6741, 582, 4881, 1540, 1838, 5864, 545, 13683, 653, 3340], [2126, 2769, 1630, 9194, 6700, 1416, 4408, 587, 593, 409, 645, 5985], [16660, 4514, 5979, 4571, 236, 1213, 1668, 6489, 587, 240, 593, 1428, 6277], [2526, 891, 1132, 425, 6390, 1660, 613, 1555, 307, 273, 3350, 2313], [367, 3370, 1368, 757, 4834, 878, 2938, 6585, 328, 352, 9683, 1153], [3756, 1348, 6941, 428, 5069, 2905, 390, 17939, 863, 5059], [333, 632, 1359, 448, 2331, 1557, 582, 7401, 320, 293, 2195, 765], [2245, 646, 1604, 3491, 222, 1613, 1272, 6503, 195, 275, 4998, 2847], [174, 376, 1393, 1675, 1473, 886, 1228, 5997, 233, 308], [162, 5008, 179, 300, 9180, 957, 1964, 422, 248, 262, 216, 1182, 1346], [159, 2711, 1392, 551, 199, 1661, 967, 2034, 177, 186, 359, 599, 1118]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

