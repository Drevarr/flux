created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Scythe User", "Tika Fiery", "K\u00e2 \u00d4tik R\u00e6j", "Zayde Sunsabre", "Newtype Khan", "Jerryatric Reflexes", "Sarette Fay", "Tantai Jin", "Red Reaper Robin", "S\u00e2ucy K\u00e2t"];
const professions = ["Berserker", "Reaper", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Reaper", "Reaper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.008, 0.0196, 0.0, 0.0614, 0.032, 0.0079, 0.0278, 0.0345, 0.0279, 0.0, 0.0169, 0.0132, 0.0], [0.048, 0.0, 0.069, 0.0, 0.0755], [0.008, 0.0196, 0.0, 0.0175, 0.0297, 0.0397, 0.0, 0.0, 0.0465, 0.0, 0.0, 0.0526, 0.0962], [0.0119, 0.0278, 0.0, 0.1209, 0.0339, 0.0, 0.6923], [0.0198, 0.0278, 0.0, 0.1628, 0.0, 0.0, 0.1316, 0.5385], [0.0, 0.1373, 0.2368, 0.1762, 0.0476, 0.0, 0.1552, 0.1349, 0.0, 0.0169], [0.128, 0.1176, 0.0, 0.6491, 0.222], [0.232, 0.0392, 0.0, 0.4211, 0.0984, 0.0913, 0.0833, 0.3103, 0.107, 0.0, 0.1017, 0.0395, 0.4423], [0.0, 0.2941, 0.1379, 0.1667, 0.2128, 0.0476, 0.0, 0.1207, 0.2093, 0.0, 0.0508, 0.0921, 0.7115], [0.104, 0.5686, 0.5172, 0.3596, 0.1785, 0.0397, 0.0, 0.2069, 0.1302, 0.0, 0.0678, 0.1711, 0.5385], [0.12, 0.2157, 0.2759, 0.6053, 0.3112, 0.246, 0.2222, 0.2241, 0.1767, 0.0303, 0.1017]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

