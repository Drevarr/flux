created: 20230204000024000
creator: Drevarr
modified: 20230705163518599
modifier: drevarr
tags: ChartData
title: 202302040000_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Gretrek", "Mike The Archmagus", "Demon Sekhmet", "Newtype Khan", "Kosa\u00edr", "Etchery", "Daddys Lil Orchid", "Sofya De Meme", "Sakis Ranger", "Veron Blackburn", "Arcanophage Farra", "\u00c9\u00efbhear"];
const professions = ["Herald", "Tempest", "Berserker", "Spellbreaker", "Scrapper", "Scrapper", "Vindicator", "Weaver", "Druid", "Herald", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[166.7123, 49.9212, 73.4063, 118.5055, 147.7205], [14.7485, 24.9047, 12.7848, 0.0, 7.2554, 28.9649, 0.0, 7.2324, 29.1536, 0.0, 24.5196, 0.0, 28.6308, 17.1738, 45.7528, 49.6496, 39.7606, 15.898, 26.74, 23.4749, 25.889, 20.4428, 58.2298, 21.5354, 28.175, 14.5174, 0.0, 29.0547], [0.0, 0.0, 0.0, 0.0, 0.0, 4.604, 0.0, 47.0635, 0.0, 0.0, 0.0, 32.4576, 0.0, 58.0536, 6.3873, 63.3847, 49.5123, 63.085, 29.7917, 53.6576, 37.1171, 62.0447, 21.9239, 38.2541, 0.0, 18.1672, 10.0251, 0.0, 85.8789], [66.01, 102.4002, 29.1144, 25.505, 40.1839, 0.0, 0.0, 18.2458, 67.722, 33.3067, 0.0, 0.0, 47.4804, 69.6258, 29.9871, 31.9862, 0.0, 31.5581, 30.444, 35.2638, 0.0, 31.775, 66.9773, 30.4767, 0.0, 0.0, 0.0, 32.2218], [35.6643, 29.6906, 28.0728, 24.1733, 9.1753, 50.1329, 49.2109, 75.6315, 93.0204, 95.4711, 131.1453, 153.8909, 80.5442, 69.1629, 170.2502, 45.2789, 26.0562, 43.2983, 3.9259, 68.1156], [4.9602, 4.9484, 0.6384, 0.0, 0.0606, 0.0, 15.3594, 5.4684, 5.731, 0.0, 0.0519, 0.0, 0.0, 5.2272, 0.0, 0.0, 7.3216, 140.2874, 181.3319, 123.1206, 145.9973, 49.5549, 116.9348, 150.2746, 125.6959, 94.8934, 94.9466, 0.0, 213.3432], [21.0289, 42.8925, 18.312, 22.9459, 23.8276, 43.2886, 0.0, 143.4304, 31.4895, 70.8246, 17.6624, 83.0016, 79.2702, 120.2058, 100.489, 136.3318, 57.3753, 50.0043, 67.2844, 26.9197, 17.7725, 172.7309, 20.1997, 11.9011, 37.1563, 6.1301, 70.4565], [16.0687, 35.2351, 38.8248, 3.9406, 30.315, 0.0, 7.9405, 23.1084, 19.9709, 111.7445, 37.3305, 65.709, 15.314, 85.6944, 83.5848, 145.9458, 98.2467, 3.9556, 79.6257, 19.4588, 61.2612, 44.3609, 51.253, 220.2547, 24.9156, 33.8325, 65.3789, 25.6744, 110.4813], [243.3576, 46.5982, 89.7876, 8.854, 93.2976, 210.9501, 280.6303, 144.6474, 199.0076, 92.4324, 76.7696, 57.6576, 0.0, 379.2768, 63.0524, 50.2191, 47.5875, 30.745, 95.1507], [1057.2749, 245.2582, 175.9472, 139.5646, 81.8479, 512.6571], [131.7748, 83.2566, 51.7776, 54.7162, 83.2652, 96.1027, 123.5997, 91.5516, 66.0532, 429.1224, 78.1136, 158.319, 0.0, 272.844, 104.6079, 289.5106, 258.4982, 405.5172, 146.6825, 41.9873, 273.1529, 64.7528, 79.2805, 489.0778, 111.1118, 132.693, 153.3713, 75.5003, 243.1782], [54.7506, 114.4643, 81.1776, 90.272, 134.639, 144.3834, 69.4361, 218.4185, 242.9552, 422.045, 69.2094, 260.7192, 94.2172, 337.3524, 288.9936, 363.8349, 376.0099, 289.85, 196.0069, 152.0932, 326.795, 80.2943, 116.2616, 485.2915, 130.0575, 63.0669, 122.5346, 28.4462, 199.5273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

