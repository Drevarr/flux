created: 20230626012458000
creator: Drevarr
modified: 20230705163538297
modifier: drevarr
tags: ChartData
title: 202306260124_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuwathida", "Elonith Requiem", "Be\u00eb", "Tootsy Pop Star", "Smol Daddy Tika", "Ganbaatar Bloodwine", "No Reserv\u00e9", "Necrotic Windrunner", "Shaca Booey", "Smol Gluvs", "Rozaalyna", "Cyclotechnist Farra", "Kary\u00edna", "Be\u00eb", "Brad Bellick", "Permanent Dawn", "My Birthday Girl", "Regis Hawkesburne", "Johosh The Mighty", "Elonith Requiem", "Lord Erin The Wise", "Mistwalker Cael", "Charr Surethang", "Xanvias Einzbern"];
const professions = ["Berserker", "Scourge", "Reaper", "Scourge", "Berserker", "Berserker", "Vindicator", "Scourge", "Berserker", "Scourge", "Scourge", "Scrapper", "Vindicator", "Scourge", "Scrapper", "Weaver", "Scrapper", "Berserker", "Berserker", "Reaper", "Weaver", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[683.0417, 988.7742, 1052.5227, 466.6744, 574.1642], [1055.9623, 296.1597, 771.2143, 2187.8571], [74.0, 907.9259, 1114.5667, 404.4194], [332.8868, 95.7072, 1457.6667, 440.0, 47.803, 46.3455, 1063.7619, 816.6042, 107.2097, 292.1591, 314.3721, 168.0448], [0.0, 254.9074, 603.5111, 286.0726, 222.7358, 208.2433, 2091.5, 289.6571], [0.0, 355.7037, 511.7667, 206.3952, 871.2642, 216.5133, 2279.2857], [0.0, 1615.8333, 882.1222, 229.996, 1076.9245, 135.2471], [390.566, 137.1559, 332.5952, 895.8, 482.697, 139.8545, 1137.5714, 791.75, 528.7903, 877.5909, 319.5233, 203.5224], [240.7207, 498.6852, 672.3, 187.5887, 1249.5849, 136.597, 915.0952, 294.0857, 296.9545, 29.8727, 106.1429, 149.625], [583.2453, 143.0646, 457.4286, 683.8857, 36.4242, 102.9273, 1080.6667, 794.1667, 514.5161, 961.2727, 432.8605, 598.3284], [988.6415, 53.3498, 465.7381, 1665.1714, 583.9697, 90.2909, 19.7143, 9.6458, 1177.6613, 1492.5682, 583.2907, 766.6716], [760.303, 99.3636, 0.0, 1415.6875, 1254.3065, 2499.8409, 1454.5465, 1200.8507], [0.0, 712.6852, 127.4222, 502.2258, 847.4151, 292.3878, 209.1429, 153.8, 88.5, 73.9636, 1855.2143, 633.875, 944.2258, 1411.5, 306.0698, 500.0149], [1786.9057, 233.8935, 1906.7857, 1286.8857, 429.6212, 28.9273, 504.0, 729.625, 2274.0645, 1152.9773, 357.1512, 966.5522], [577.881, 2054.8, 0.0, 270.0182, 2356.2619, 887.5417, 1928.9677, 3644.2045, 513.5349, 1384.194], [1778.9074, 17.8333, 363.1653, 1606.9245, 688.2852, 1908.0714, 4.8857, 1011.0303, 59.7818, 1760.4762], [0.0, 1629.1667, 337.7, 684.0605, 639.2642, 344.0608, 179.7857, 872.8571, 1078.2727, 763.8, 697.1429, 188.3958, 1221.0645, 886.1136, 602.314, 573.4328], [1.4144, 815.1111, 199.5111, 566.4435, 710.283, 202.9278, 1424.3571, 2152.0, 952.8333, 131.6364, 646.5952, 69.9583, 895.2097, 0.0, 1414.5465, 1903.403], [40.973, 1756.963, 662.1111, 410.1855, 3024.3208, 779.5171, 673.8571, 1454.3714, 1259.9394, 248.6182, 1366.1905, 1440.5833], [31.5676, 1769.2407, 1215.7333, 568.9274, 2161.4242, 256.9818, 1199.8333, 1377.8125, 1031.9516, 1706.0909, 1217.7093, 1202.806], [15.973, 1205.9074, 1092.5889, 166.4435, 665.7358, 497.6692, 2427.3571, 2405.5429, 1412.2424, 495.5455, 1024.4762, 2167.1458, 2985.1452, 257.9091, 817.4535, 806.9851], [24.8559, 2249.9815, 1676.7333, 690.9516, 944.5472, 239.8973, 1046.7619, 3487.3143, 1848.7273, 128.9455, 178.881, 2425.6042, 921.4839, 1768.0909, 1509.6512, 473.6418], [0.0, 3314.7778, 840.3333, 532.3065, 2826.1509, 415.4411, 661.0, 1438.6286, 1995.0455, 169.8545, 2711.6667, 2262.9375, 2631.4839, 1514.4091, 2564.8023, 3967.1791], [38.0, 3196.7963, 2269.9222, 729.6976, 2678.5094, 421.8289, 4125.4048, 6994.0857, 2169.0909, 64.6545, 3104.0238, 2876.3125, 2796.6774, 2710.2727, 2218.9884]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

