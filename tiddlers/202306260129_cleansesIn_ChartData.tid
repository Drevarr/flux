created: 20230626012920000
creator: Drevarr
modified: 20230705163538440
modifier: drevarr
tags: ChartData
title: 202306260129_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Free H\u00e4nd", "Stark Wall", "Necrotic Windrunner", "Ylsgavor", "N\u00e8yp\u00e4", "Imalou", "Charr Surethang", "Sofya De Nova", "Ygyn", "Vesnan", "Mammary Mission", "Synomi\u00f1 Spyce", "Toushay", "Vipares", "Kosair", "Nbezerkzz", "Fablegodx", "Tootsie Pop Rocks", "Xanvias", "Palm Sauce", "Alarics Bane", "Astraea Lumena", "Sl\u00e4ngin", "Traidoruns Maximus", "Reaper Madnesss", "Alarics Clone", "Tribal S", "Johosh The Mighty", "Drevarr Moonwillow"];
const professions = ["Renegade", "Firebrand", "Scourge", "Druid", "Firebrand", "Firebrand", "Berserker", "Weaver", "Firebrand", "Scourge", "Scourge", "Scourge", "Reaper", "Renegade", "Firebrand", "Scourge", "Berserker", "Scrapper", "Reaper", "Vindicator", "Reaper", "Firebrand", "Berserker", "Firebrand", "Reaper", "Chronomancer", "Druid", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1765, 0.433, 0.122, 0.65], [0.063, 0.7059], [0.0866, 0.3176, 0.0938, 0.2469, 0.0841, 0.1538, 0.0], [0.1389, 0.9412, 0.3918], [0.0, 0.3617, 0.7576, 0.1552, 0.0204, 0.4444], [0.0278, 0.0213, 0.0345, 0.0204, 0.3889, 0.2647, 0.2268, 0.3134, 0.45, 0.0476, 0.098, 0.0294], [0.0278, 0.2979, 0.5455, 0.1552, 0.0, 0.3611, 0.5588, 0.2371], [0.5882, 0.1094, 0.1728, 0.3738, 0.1923, 0.0], [0.0244, 0.2388, 0.0, 0.0, 0.0635, 0.2157, 0.1765, 0.063, 0.4706, 0.1094, 0.3333], [0.1111, 0.3404, 0.0, 0.2222, 0.0, 0.6866, 0.15, 0.0, 0.1102, 0.3882], [0.2677, 0.3529, 0.3906, 0.642], [0.0, 0.5417, 0.6765, 0.2062, 0.122, 0.2388, 0.05, 0.0, 0.6508], [0.0278, 0.0426, 0.2424, 0.0, 0.5139, 0.2195, 0.2985, 0.0323, 0.0635, 0.0, 0.0787, 0.4118, 0.3364, 0.1923, 0.0], [0.0556, 0.3404, 0.3939, 0.069, 0.0, 0.3333, 0.2059, 0.1753, 0.1951, 0.194, 0.05, 0.0, 0.0635, 0.3333, 0.1102, 0.3765, 0.1094, 0.0617], [0.0, 0.4444, 0.2353, 0.1856, 0.0732, 0.7015, 0.05, 0.25, 0.2469, 0.4673, 0.2692, 0.0333], [0.0833, 0.4468, 1.1818, 0.1379, 0.0, 0.3889, 0.3824, 0.2268, 0.0, 1.2388], [0.3056, 0.3191, 0.9091, 0.4138, 0.0612, 0.6806, 0.7941, 0.268, 0.0976, 0.3582, 0.2, 0.0323, 0.2857, 0.098], [0.0833, 0.617, 0.6061, 0.0, 0.0833, 0.2647, 0.1856, 0.0488, 0.6119, 0.3, 0.0, 0.1373, 0.0588, 0.2362, 0.5059, 0.25, 0.2346], [0.5745, 0.8788, 0.1552, 0.0, 0.5139, 0.3824, 0.3505, 0.1951, 0.4776, 0.05, 0.1613, 0.1746, 0.3333, 0.5, 0.252], [0.2222, 0.617, 0.7576, 0.0204, 0.3611, 0.4706, 0.3814, 0.0732, 0.4328, 0.0, 0.2222, 0.4706, 0.2047, 0.5059], [0.3937, 1.0353, 0.6875, 0.6296, 0.5234, 0.2308, 0.1667], [0.2222, 0.2766, 0.9091, 0.2241, 0.0, 0.8611, 0.4706, 0.3093, 0.1951, 0.6716, 0.1, 0.0323, 0.1905, 0.2941, 0.2353, 0.1496, 0.6706], [0.1389, 0.5319, 0.5758, 0.069, 0.0408, 0.3194, 0.1471, 0.0206, 0.1707, 0.6716, 0.55, 0.0, 0.1746, 0.2353, 0.2059, 0.3386, 0.6471, 0.1094, 0.1975, 0.3458, 0.0769, 0.0667], [0.1944, 0.4043, 0.9394, 0.1034, 0.0, 0.3194, 0.3529, 0.3505, 0.1951, 0.8657, 0.9, 0.0, 0.3175, 0.5882, 0.3824, 0.1024, 0.4706, 0.2656, 0.284, 0.4393, 0.1923, 0.0], [0.0278, 0.3617, 0.697, 0.4483, 0.1429, 0.5694, 0.5588, 0.4021, 0.0976, 0.7761, 0.65, 0.0323, 0.2222, 0.2353, 0.4118, 0.315, 0.5765, 0.3438, 0.4815], [0.3056, 0.5957, 2.5152, 0.2931, 0.102, 1.1944, 0.4706, 0.433, 0.0732, 1.3284, 1.3, 0.0323, 0.6984, 0.3333, 0.5588], [0.2778, 0.6383, 0.8182, 0.2241, 0.0, 0.7917, 0.5588, 0.3918, 0.0244, 0.8955, 0.05, 0.0, 0.5556, 0.3137, 0.1471, 0.1969, 0.6118, 0.2031, 0.4691, 0.4019, 0.1538, 0.0333], [0.1111, 0.5957, 0.8182, 0.3448, 0.0, 0.5, 0.6765, 0.433, 0.2927, 0.4328, 1.05, 0.0645, 0.381, 0.2549, 0.5588, 0.2598, 0.3882, 0.4531, 0.4568, 0.4766, 0.3846, 0.1333], [0.5556, 0.6596, 1.1515, 0.2586, 0.0204, 0.625, 0.5588, 0.3918, 0.1951, 0.7313, 1.0, 0.0645, 0.3333, 0.5882, 0.4118, 0.2677, 0.8941, 0.375, 0.3333, 0.6542, 0.3846, 0.2333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

