created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Edgy Nekrodancer", "Nidircc", "Audra Storm", "Skylar Shadowmoon", "Pookha Thundernutz", "Cedryn X", "Zaedy Zae", "Tribal S", "Aira Draugr", "Kosa\u00efr", "Tootsie Pop Rocks", "Keypek The Drunk", "Sygaldry Verdandi", "Mort\u00e4rion", "Charr Surethang", "Sr Conrad", "Vee U", "Xanvias Einzbern", "Lord Erin The Wise", "Be\u00eb", "Sirius Quack", "Hyde En Sikh", "Name Is What", "Daphne Agla\u00e9", "Bella Sassy", "Dakk Regia", "Yummy Kiwi", "Sub Train", "Kary\u00edna", "Belvyn Brightblade", "Aronorf Xideliesi", "Johosh The Mighty", "Venomina The Sly", "Jimbo The Pleb", "Tegan Parker", "Crusader Siolith", "Drevarr Moonwillow", "Newtype Khan", "Nina Chan Fanboy", "Rahani Sunray", "Glorious Gluvs", "Mistwalker Cael"];
const professions = ["Harbinger", "Tempest", "Weaver", "Scrapper", "Firebrand", "Berserker", "Druid", "Druid", "Herald", "Weaver", "Scrapper", "Scrapper", "Firebrand", "Scrapper", "Berserker", "Bladesworn", "Tempest", "Berserker", "Weaver", "Scourge", "Reaper", "Chronomancer", "Scourge", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Berserker", "Druid", "Berserker", "Tempest", "Firebrand", "Scrapper", "Spellbreaker", "Druid", "Chronomancer", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 0, 1, 0, 0, 1, 1, 3, 1, 2, 0, 0], [1, 5, 3, 1], [3, 7], [0, 3, 2, 0, 2, 1, 0, 0, 8], [2, 11, 0, 3], [0, 0, 0, 2, 1, 0, 1, 4, 5, 0, 1, 2, 0, 0, 0, 3], [0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 1, 4, 2, 0, 5, 1, 3], [0, 1, 2, 6, 1, 1, 8, 1, 4, 1, 2], [1, 11, 1, 4, 1, 2, 0, 2, 8], [2, 0, 3, 5, 0, 1, 5, 3, 3, 2, 1, 6, 1, 5], [0, 5, 0, 0, 4, 2, 2, 2, 2, 1, 7, 1, 3, 0, 1, 7, 0, 2], [0, 7, 0, 0, 0, 0, 0, 0, 5, 0, 1, 7, 6, 1, 1, 2, 5, 1, 3], [0, 5, 0, 3, 1, 2, 0, 0, 4, 1, 0, 5, 3, 4, 0, 2, 7, 0, 7], [0, 0, 1, 3, 3, 2, 3, 4, 1, 3, 10, 7, 6, 4], [0, 15, 0, 4, 1, 2, 1, 1, 11, 1, 3, 8], [30, 1, 7, 5, 4], [0, 7, 0, 4, 2, 0, 0, 3, 2, 0, 8, 4, 6, 3, 2, 7], [0, 8, 0, 5, 2, 1, 0, 2, 3, 0, 2, 5, 3, 0, 2, 1, 10, 0, 7], [3, 4, 10, 2, 3, 9, 5, 2, 2, 2, 2, 3, 5], [0, 8, 1, 2, 1, 2, 0, 0, 9, 0, 0, 6, 5, 4, 3, 2, 9, 0, 2], [0, 14, 1, 5, 0, 2, 0, 2, 4, 0, 2, 5, 4, 4, 3, 1, 6, 0, 3], [0, 4, 0, 0, 0, 0, 0, 0, 6, 2, 2, 8, 3, 2, 3, 3, 15, 0, 10], [0, 9, 3, 3, 0, 3, 0, 2, 3, 2, 9, 1, 5, 2, 3, 9, 1, 3], [0, 16, 0, 0, 2, 1, 0, 4, 10, 7, 5, 3, 2, 3, 9, 1, 4], [0, 10, 1, 2, 2, 3, 2, 5, 5, 3, 2, 9, 3, 2, 3, 2, 12, 0, 2], [2, 3, 4, 4, 2, 3, 13, 1, 0, 9, 7, 4, 1, 10, 3, 7], [0, 17, 1, 5, 0, 0, 0, 3, 7, 9, 4, 5, 3, 2, 10, 0, 8], [0, 24, 0, 4, 3, 3, 0, 2, 3, 2, 1, 6, 3, 6, 2, 3, 6, 2, 7], [3, 28, 0, 7, 5, 1, 1, 3, 9, 1, 0, 8, 0, 4, 3, 1, 1, 1, 2], [1, 48, 2, 8, 6, 4, 4, 4, 9], [2, 24, 7, 7, 1, 2, 4, 6, 0, 3, 8, 0, 9, 5, 3, 3, 1, 3], [0, 39, 0, 9, 1, 3, 0, 1, 9, 1, 3, 12, 6, 4, 1], [0, 22, 2, 6, 2, 3, 1, 5, 8, 10, 6, 3, 3, 2, 11, 1, 4], [0, 27, 1, 4, 1, 4, 0, 3, 5, 3, 0, 14, 4, 6, 4, 2, 7, 0, 5], [27, 1, 9, 4, 3, 1, 3, 7, 3, 1, 9, 3, 4, 3, 3, 6, 2, 10], [0, 27, 1, 10, 5, 4, 3, 5, 10, 3, 3, 10, 6, 4, 3, 3, 8, 2, 5], [0, 30, 1, 3, 4, 5, 2, 4, 10, 4, 2, 11, 5, 6, 3, 1, 13, 0, 9], [2, 36, 0, 6, 9, 5, 5, 9, 0, 2, 12, 6, 8, 0, 10, 4, 2], [58, 1, 10, 7, 7, 1, 5, 5, 3, 0, 11, 6, 8, 3], [45, 3, 13, 5, 5, 3, 3, 13, 3, 4, 12, 4, 6, 4, 4, 1, 3], [1, 51, 1, 10, 8, 5, 1, 3, 14, 3, 3, 14, 6, 5, 3, 4, 11, 3, 6], [3, 51, 1, 11, 9, 6, 5, 3, 15, 1, 4, 9, 8, 4, 3, 4, 20, 0, 14]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

