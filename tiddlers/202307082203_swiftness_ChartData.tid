created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Seiker Novus Terra", "Zaedy Zae", "Rahani Sunray", "Sakis Ranger", "Tegan Parker", "Ateriuz", "Willgrantor", "Venomina The Siren", "Chocolate Teapot", "Johosh The Mighty", "Xanvias Einzbern", "Mistwalker Cael", "Artakama Nahid", "Legacy Of Mathus", "Gabe Malhorn", "Mechanical Dark", "Newtype Khan", "Primal Clone", "Black Raspberry Pie", "Koralia Danai", "Sygaldry Verdandi", "Enter Effore", "Klenga", "Drevarr Moonwillow", "Tika Fiery", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Tempest", "Druid", "Chronomancer", "Druid", "Tempest", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Berserker", "Berserker", "Vindicator", "Tempest", "Berserker", "Firebrand", "Scrapper", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55.332, 131.6753, 32.3222], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.8495, 0.0, 0.0, 0.0, 0.0, 48.633, 1.05, 0.0, 0.0, 0.0, 156.546], [16.1443, 0.0, 16.2341, 16.9704, 46.8686, 153.1289, 13.6227, 13.338, 8.0996, 1.2449, 0.0, 0.0, 7.2454, 0.0, 0.0, 24.057], [9.7027, 0.0, 27.7959, 8.6188, 38.5445, 26.3765, 10.9831, 8.502, 0.0, 44.9833, 35.7201, 41.055, 71.5349, 0.0, 0.0], [9.3654, 13.9616, 88.218, 38.0338, 3.8683, 35.217, 30.0735, 38.0885, 0.0, 15.96, 55.7072, 29.754], [0.6423, 40.9146, 144.3608, 77.5985, 0.0, 31.161, 91.5489], [84.985, 38.9566, 52.9815, 12.0109, 43.5947, 19.6768, 119.3587, 24.179, 9.4658, 12.2983], [25.5398, 0.0, 0.0, 122.6004, 49.9093, 20.4165, 36.9184, 56.6181, 29.8226, 11.8125, 43.6183, 8.4588, 56.2716], [63.4845, 62.1212, 0.0, 2.9837, 38.9743, 78.8533, 67.7678, 0.0, 93.1875, 36.6862, 22.5568, 13.1544], [74.1013, 126.6177, 6.2909, 7.6042, 36.9216, 103.1472, 38.8396, 30.7193, 13.0065, 13.9113, 45.1269, 23.478], [66.5906, 86.559, 10.836, 30.6138, 50.5457, 45.4662, 66.5859, 0.0, 3.0225, 27.8226, 53.8411, 13.4719, 41.9475, 9.7718, 52.6057, 29.232], [15.6706, 77.1784, 0.0, 15.7058, 57.3086, 74.9627, 70.5344, 2.7913, 2.34, 0.0, 22.3839, 40.4436, 66.2812, 43.5557, 72.3832, 49.5065], [0.0, 21.9014, 41.1919, 7.2313, 8.8297, 39.9469, 53.2902, 0.0, 13.65, 0.0, 0.0, 0.0, 13.0462, 37.3543, 55.5058, 65.0203, 274.698], [146.4256, 40.4093, 35.9492, 25.1393, 60.0787, 47.5883, 13.689, 16.6788, 33.5878, 8.9999, 49.1925, 57.6497, 62.6354, 37.2082], [125.5709, 2.5133, 59.1349, 10.4044, 80.7986, 52.6725, 39.8819, 148.785, 16.236, 0.0, 0.2236, 44.1263, 14.616, 13.1313, 37.4587], [24.0929, 28.98, 86.9234, 103.2779, 62.7444, 453.924], [90.0775, 35.147, 130.7544, 2.8076, 71.0592, 49.1306, 72.7906, 81.5843, 62.7315, 25.9222, 13.8373, 12.6334, 28.8225, 107.177, 99.8138, 43.4304], [69.1494, 76.0511, 9.8126, 3.3048, 35.4031, 268.7256, 34.8911, 0.0, 39.546, 24.2987, 45.6775, 258.3698, 49.245, 22.7383, 31.4587, 0.0835], [60.9939, 0.0, 21.8962, 460.2192, 137.6981, 80.8275, 1.5129, 0.0, 0.0, 63.6037, 35.141, 7.4115, 2.9858, 145.692], [7.1415, 260.2809, 0.0, 0.0, 187.8416, 69.172, 15.7668, 80.2645, 173.6475, 0.0, 25.9749, 0.0, 44.5988, 0.0, 188.027, 23.0306], [56.1648, 188.6584, 111.5506, 0.0, 152.1421, 2.8368, 86.697, 23.6898, 88.7216, 183.7713, 97.9912, 38.6489, 206.435, 0.0], [13.7523, 90.7469, 243.516, 119.7589, 161.8864, 145.5562, 163.6574, 352.45, 168.9401], [125.7087, 366.4465, 95.2816, 25.9414, 36.1061, 279.8999, 124.1738, 79.0509, 86.5215, 69.1506, 176.9645, 36.6424], [80.9628, 221.1482, 30.2656, 20.5024, 50.6301, 119.8408, 83.8032, 80.0218, 30.03, 41.7893, 60.4246, 18.447, 73.9725, 273.6742, 101.9487, 100.1405, 117.126], [0.0, 310.7267, 11.9497, 19.0935, 24.2957, 126.1291, 74.7782, 108.9054, 37.479, 68.7263, 1.1012, 40.7511, 0.0, 71.2634, 390.0312, 83.5826, 264.087], [115.3083, 275.6602, 76.1981, 0.0, 39.5789, 197.3821, 62.5914, 57.0765, 51.0327, 104.8811, 0.0, 223.5975, 73.3514, 268.587, 141.8587], [0.0, 162.0062, 92.9488, 16.6278, 34.2923, 141.6917, 87.7516, 80.2341, 84.8445, 37.1952, 0.0479, 183.0725, 96.4687, 37.8554, 205.5086, 23.4691, 477.873]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

