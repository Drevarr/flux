created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Mom Tapper", "Gestern Yesteryear", "Drac Tepes", "Crabbedmermaid", "Meryndah", "Sapir Yong", "Chocolate Teapot", "Flick Embermage", "Reina Armitage", "Darks Na", "Grae Leon", "Serum Vision"];
const professions = ["Spellbreaker", "Firebrand", "Scourge", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Tempest", "Druid", "Firebrand", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.0192, 1.5073, 203.6496, 43.1212, 6.2597, 0.0, 15.4161, 5.8012, 0.0594, 21.3725, 0.0, 24.1186, 34.1088, 0.0, 0.0, 3.7638, 50.508, 8.8454, 24.5916, 0.0, 0.0, 15.19, 0.0, 7.4704, 0.4816, 35.9658, 27.6816], [0.0, 0.0, 0.0, 0.0, 0.0, 2.1899, 75.5136, 47.4896, 0.0, 0.0, 6.4908, 0.0, 0.0, 76.3825, 0.0, 3.229, 0.0, 95.2915, 0.0, 0.0, 29.9997, 57.96, 19.3718, 41.085, 0.0, 0.0, 0.0, 95.3172, 0.0, 0.0, 0.0, 182.208], [29.2409, 0.0, 17.2672, 8.5604, 139.1712, 49.6872, 0.0, 12.1005, 6.9447, 0.0, 3.8615, 0.0, 45.077, 8.5717, 171.6726, 81.1505, 0.0, 20.2133, 17.6825, 176.9436, 0.0, 0.0, 0.0, 0.0, 16.5336, 0.0, 4.872, 0.0, 12.0538], [4.8503, 8.5248, 22.2714, 14.6979, 3.5224, 15.3905, 34.2432, 30.5683, 49.0732, 104.5293, 0.0, 0.0, 40.804, 275.6412, 10.7059, 25.1064, 9.7363, 9.3668, 84.1869, 5.6448, 60.2672, 81.171, 57.7109], [37.3926, 0.0, 118.483, 30.1707, 7.6338, 25.1024, 20.7821, 48.9054, 181.5792, 367.167, 22.764, 30.8077, 15.0847, 147.798], [37.1344, 81.1624, 12.727, 29.4451, 9.4705, 354.768, 88.6276, 0.0, 9.5312, 36.191, 40.9062, 7.1221, 0.0, 43.5237, 93.7156, 225.047, 0.0], [5.0131, 21.9632, 39.1353, 0.0, 40.1857, 242.9568, 43.148, 0.0, 34.9654, 5.5188, 18.4509, 5.6252, 0.0, 54.8939, 71.687, 170.3308, 0.0, 0.0, 21.8227, 235.8144, 30.3715, 28.7298], [45.2052, 43.1923, 85.9687, 0.0, 97.5027, 65.0905, 247.8794, 183.7036, 221.6654, 462.8848, 32.2935], [0.0, 0.0, 168.1298, 0.0, 0.0, 92.0887, 667.7664, 51.1076, 0.0, 0.0, 182.1047, 0.0, 0.0, 79.6613, 0.0, 98.0653, 107.3842, 116.2542, 0.0, 0.0, 0.0, 345.69, 139.177, 257.994], [82.6694, 119.448, 544.8288, 276.8172, 98.0186, 74.592, 127.4249, 2.1105, 38.1574, 39.9227, 33.3281, 156.697, 134.8468, 314.7958, 4.824, 19.3865, 14.3172, 651.3876, 158.8915, 49.6782], [0.0, 372.7325, 268.5078, 55.4576, 83.7767, 25.3085, 554.2242, 151.1216, 372.4448, 313.0565, 901.4741], [149.1235, 69.4944, 194.4142, 47.0085, 119.7003, 205.0524, 1667.136, 420.2508, 66.2897, 56.2637, 206.4488, 43.3881, 81.1758, 117.1071, 72.6192, 236.2882, 436.6846, 636.7687, 45.9048, 146.6185, 1304.7624, 192.3475, 49.5792, 32.3277, 41.3489, 360.9753, 263.4016, 185.0576, 132.4314, 666.1805]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

