created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Tyrian Deathmachine", "Lord Erin The Wise", "Tootsie Pop Rocks", "Mistwalker Cael", "Crusader Siolith", "Legacy Of Mathus", "No Reserv\u00e9", "He Dunno", "Quinnquazy", "Drevarr Moonwillow", "Newtype Khan", "Zaedy Zae", "Rozaalyna", "Selandir", "Venomina The Sly", "Glorious Gluvs", "Solus Luxes", "Spirita Demon", "Hyde En Sikh", "Tegan Parker", "Mar\u00eda Callas", "Cat Wigglebooty", "Mokaris", "Bella Sassy", "Zukkoii", "Koralia Danai", "Arriasa", "Chunky Meat Flapper", "Melody Phoenixstorm", "Aira Draugr", "The Arch\u00eetect", "K\u00e2 \u00d4tik R\u00e6j", "Smileybow", "Govinda Ektar", "High Sorcer Baradun", "Mad V King", "Belvyn Brightblade", "Lil Choir Boy", "Mort\u00e4rion", "Alopen", "Revitiel", "Lerpsir", "Legacy Nyx", "Zanos Engine", "P Ain", "Rahani Sunray", "Yanxituu", "Ganbaatar Bloodwine", "Gracious Beginnings"];
const professions = ["Spellbreaker", "Scrapper", "Weaver", "Scrapper", "Herald", "Firebrand", "Berserker", "Vindicator", "Dragonhunter", "Mesmer", "Scrapper", "Spellbreaker", "Druid", "Reaper", "Tempest", "Druid", "Berserker", "Firebrand", "Druid", "Chronomancer", "Tempest", "Dragonhunter", "Scrapper", "Herald", "Firebrand", "Engineer", "Firebrand", "Druid", "Ranger", "Scrapper", "Herald", "Reaper", "Berserker", "Soulbeast", "Vindicator", "Tempest", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Soulbeast", "Vindicator", "Willbender", "Vindicator", "Scrapper", "Chronomancer", "Chronomancer", "Thief", "Berserker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 94.7135, 333.3691, 292.9016, 258.748, 24.5814, 170.0872, 73.86, 345.6891, 55.1354, 1060.1383, 135.942, 573.0462, 862.8, 89.4348, 9.4878, 161.5323, 318.2353, 32.7347, 605.9891, 164.5112, 85.9683, 306.8395, 13.4118], [211.7344, 710.616, 487.2542, 79.9508, 49.3125, 306.6041, 222.3864, 1462.0515, 74.6354, 105.3196, 724.0297, 175.3239, 393.7373, 451.0851, 3515.7273, 170.8519, 0.0, 962.7526, 444.1815, 47.4098, 49.4444, 274.3049, 246.4824], [323.3824, 452.3469, 43.4746, 32.4535, 276.89, 586.413, 1571.7917, 211.6332, 101.3542, 221.9263, 234.4219, 13.8772, 791.668, 273.1497, 121.8197, 187.8462, 212.4074, 52.7294], [10.5588, 210.0219, 438.6537, 192.9008, 5.475, 68.5693, 15.5422, 253.6647, 4.9863, 66.5158, 134.6667, 292.122, 746.2254, 158.0497, 82.6156, 290.3548, 9.3846, 674.8231, 234.6291, 92.5667, 3515.037, 24.4103], [85.0345, 218.4624, 378.2147, 123.0333, 172.041, 12.625, 108.7112, 107.1698, 233.9218, 62.4286, 263.8, 250.0146, 228.0244, 1013.8592, 91.3218, 29.8095, 150.0767, 403.3833, 0.0, 633.418, 345.0032, 78.0, 96.1795, 89.5679, 162.1688], [0.0, 64.5842, 369.9784, 134.379, 0.0, 71.2844, 96.8977, 320.7231, 16.7473, 150.3434, 160.1951, 73.8488, 762.1343, 137.5921, 1.8095, 106.8176, 263.527, 0.0, 798.8596, 348.3662, 8.6786, 90.0976, 216.375, 54.2791], [254.6935, 609.7529, 374.971, 36.619, 187.9138, 197.01, 356.9846, 2.3684, 342.5253, 294.6957, 226.4881, 1651.4167, 189.1768, 1.7021, 212.4745, 425.9701, 53.6667, 1097.2652, 291.5121], [57.0164, 149.748, 9.3, 63.8851, 121.4314, 472.8599, 33.7216, 122.9775, 126.3515, 171.2658, 1317.717, 109.9783, 0.0, 151.3281, 238.25, 14.2593, 708.664, 511.4263, 64.6562, 41.9429, 321.8519, 31.0], [453.8394, 186.3649, 849.0725, 453.4895, 145.2119, 229.2794, 2.5741, 1073.0823, 515.5394], [340.6979, 889.7926, 52.0962, 1028.9358, 112.5625, 936.3099, 269.3106, 10035.8571, 150.2445, 534.1045, 14.6296, 1163.6793, 641.6057, 249.8923, 4336.0588, 160.6941], [0.0, 135.3387, 294.1322, 77.9524, 196.1241, 0.0, 126.5147, 201.165, 189.7686, 30.1649, 181.8265, 125.4433, 288.6486, 899.5217, 148.5599, 3.875, 93.2083, 254.169, 0.1667, 605.461, 233.5079, 12.8387, 17.7297, 261.3976, 48.1047], [0.0, 69.3743, 328.2737, 93.6167, 232.0696, 179.64, 70.1144, 146.8857, 235.7981, 27.7826, 292.1864, 144.6517, 271.9, 1003.6154, 142.0932, 14.5652, 88.5097, 257.6406, 0.0, 456.4536, 227.0095, 152.7188, 2873.2069, 124.8868, 38.0769], [0.0, 104.9086, 246.6849, 27.5, 134.0, 13.4634, 117.5021, 143.9278, 181.9752, 11.0612, 3296.7917, 133.1379, 60.5176, 821.2676, 86.0763, 1.0625, 104.9968, 259.6812, 0.0, 604.5417, 254.7444, 87.4474, 0.125, 119.0741, 30.1169], [39.6, 298.3333, 701.6226, 122.3115, 184.5041, 0.0, 162.8991, 145.8116, 293.0311, 12.2967, 132.0208, 182.0199, 405.7027, 821.2899, 262.8727, 53.8048, 584.5147, 45.1132, 1696.8333], [13.6316, 326.9168, 25.8958, 169.2809, 163.995, 159.3797, 681.5211, 190.4783, 17.881, 172.3738, 198.6182, 34.8, 756.9939, 205.6943, 20.5357, 39.6286, 83.9259, 7.2558], [9.4694, 53.9784, 262.7625, 127.4754, 160.6885, 6.6042, 142.682, 102.1048, 344.3209, 11.1562, 80.8929, 187.7794, 98.36, 903.3433, 92.2453, 0.0, 147.7165, 266.1972, 22.0377, 507.0885, 251.8847, 3.9016, 81.0571, 51.9878, 40.9114], [34.4043, 202.0294, 204.6747, 1138.8873, 157.0741, 72.1042, 525.1732, 589.0441, 0.0, 769.1779, 346.8163, 18.2951, 81.55, 185.1975, 12.4416], [4.0, 85.4946, 213.2605, 110.6885, 237.2846, 7.3684, 90.958, 32.1609, 208.1219, 0.2234, 118.6957, 156.2541, 111.0, 856.2121, 116.705, 154.3542, 97.181, 174.3784, 2.7049, 575.1456, 120.049, 95.1515, 27.0, 145.4146, 113.1646], [0.0, 69.4241, 285.5739, 50.6226, 177.7692, 0.8163, 54.042, 79.4118, 166.1614, 8.3333, 42.2151, 213.8889, 199.5077, 809.697, 40.2112, 0.1064, 118.7279, 189.5224, 16.0, 578.144, 218.5348], [0.0, 121.3212, 250.768, 127.7895, 205.3419, 61.0227, 136.9397, 49.5, 241.3672, 52.7917, 289.4343, 158.9902, 290.7317, 509.5915, 110.5683, 7.7708, 157.5126, 230.3509, 22.0, 462.3712, 203.2484, 32.2241, 98.3902, 188.5065, 43.7867], [36.7143, 172.494, 141.2911, 1203.3521, 214.4164, 0.0, 132.4, 305.9841, 72.0, 955.6764, 213.9967, 37.4167, 23.8649, 170.05, 35.5065], [173.1741, 296.7302, 1539.6667, 167.5195, 9.75, 175.2102, 259.2754, 0.0, 763.9634, 242.3802, 28.8475, 0.375, 268.506, 61.2636], [28.7949, 181.1823, 379.4069, 108.3445, 58.2292, 77.9404, 120.9271, 224.8925, 20.8125, 159.6489, 186.1159, 97.3784, 62.336, 433.6522, 0.0, 660.4512, 235.5364], [0.0, 360.6748, 95.2833, 318.7295, 34.6098, 247.7316, 703.9231, 569.964, 4962.7273, 15.4583, 183.0776, 169.7857, 184.8219, 314.449, 87.449, 470.7825, 6.6325], [0.0, 62.5459, 264.1519, 42.3148, 136.5041, 30.05, 84.6904, 60.4286, 139.4406, 19.0, 212.828, 176.6667, 107.6203, 666.6197, 105.4565, 0.4545, 66.1526, 287.2903, 191.0, 468.6818, 139.9967, 0.0, 72.7442, 163.0, 21.7733], [12291.0, 145.8475, 892.216, 782.0845, 537.9944, 94.1522, 221.875, 391.0, 75.6667, 616.4129, 339.0895], [0.0, 98.6162, 235.2625, 25.2632, 132.9391, 0.0, 63.5961, 80.5139, 123.9125, 0.0, 105.3818, 115.6667, 151.5696, 909.8358, 94.8696, 53.8191, 332.807, 30.3077, 463.6871, 131.5016, 66.4918, 72.1316, 88.0506, 3.4302], [263.4697, 26.0515, 129.1739, 334.5758, 369.2063, 970.5211, 123.4938, 108.0764, 194.2609, 49.5714, 622.9927], [1604.0645, 213.1953, 0.0, 159.7188, 139.9194, 5.1277, 922.2298, 502.8215, 192.3692, 3.0204, 191.0247, 297.0263], [201.4378, 603.5104, 130.3621, 358.9431, 78.907, 179.7368, 91.8252, 563.6392, 31.0769], [129.8095, 244.6885, 584.0191, 23.8305, 175.9008, 104.2564, 126.5617, 86.5833, 593.6632, 63.5684, 83.4894, 193.446, 873.3059], [8.3571, 15.8868, 746.7926, 414.8498], [10.3636, 369.5753, 640.9253, 313.4522, 0.0, 168.9452, 134.9213, 471.5889, 1.828, 369.6032, 122.201], [207.0521, 178.3188, 807.1429, 2640.5, 20.169, 132.1205, 234.1691, 891.5128, 440.2247, 139.3956, 183.1875, 626.9667, 368.5487, 179.9184, 1816.3265, 105.2469, 310.1486], [5.728, 1803.975, 100.6182, 215.7067, 231.4568, 76.0315, 30.825, 91.5344, 278.0588, 1311.5759, 117.1119, 89.4625, 857.641], [0.0, 197.4167, 605.6118, 227.0531, 50.7895, 142.6167, 92.6742, 285.6776, 14.617], [464.5148, 31.5246, 302.9068, 29.4468, 166.5191, 74.5769, 346.6599], [0.0, 122.1211, 403.4615, 172.3051, 120.4113, 4.5686, 85.4511, 91.0825, 254.1597, 87.7849, 166.6277, 188.5813, 421.4], [1049.0146, 662.6571, 541.0725, 139.3091, 85.5, 230.373, 375.0735, 10.814, 275.4394, 110.4112, 31.6], [210.7179, 0.0, 52.9545, 981.8974, 126.3462, 414.5981, 1152.5735, 231.1972, 186.2662, 116.9565, 393.6854, 347.7941, 36.7069], [2060.4545, 140.8852, 0.0, 620.8758, 411.5556, 165.2712, 59.0, 141.5238, 15.5402], [0.0, 166.9409, 480.3414, 279.7288, 8.2449, 195.2155, 207.1531, 499.4172, 34.2577], [217.0394, 285.3017, 33.5625, 217.2311, 81.7262, 1050.6809], [175.1517, 56.8947, 123.9496, 31.2381, 114.756, 113.6575, 237.9734], [1198.3111, 177.466, 454.8781, 13.2128], [17.8261, 141.0816, 324.5202, 114.0806, 1600.6479, 123.7764], [458.3688, 24.1452, 124.2963, 0.0], [96.7983, 631.885], [204.4081, 63.0, 70.4412, 154.9125, 18.9605], [42.2097, 216.697, 392.3625, 223.3294]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

