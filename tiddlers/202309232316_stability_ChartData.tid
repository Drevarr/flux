created: 20230923231628000
creator: Drevarr
tags: ChartData
title: 202309232316_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Hawaiian Supreme", "Zaedy Zae", "Minka Bringer", "Aira Draugr", "Ax Axun", "Govinda Ektar", "Newtype Khan", "Oo Dads Mad", "Regis Hawkesburne", "Mistwalker Cael", "Tomebringer", "Gamora Titus", "Belvyn Brightblade", "Kosair", "Pr\u00e6tor Lightbringer", "Bella Sassy", "Sub Train", "Koralia Danai"];
const professions = ["Berserker", "Spellbreaker", "Druid", "Scrapper", "Herald", "Vindicator", "Vindicator", "Spellbreaker", "Berserker", "Berserker", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.5374, 1.459], [1.5994, 0.0, 1.3268, 1.459], [0.6296, 0.0, 0.1404, 0.0, 0.4059, 0.2279, 0.3948, 0.2951, 0.8712, 0.9043, 0.0, 0.0, 0.654], [0.0, 0.0, 0.4814, 0.0, 0.3444, 0.3255, 1.1679, 0.5902, 0.0, 1.4622, 0.0, 0.337], [0.0, 0.0, 0.0, 0.0, 0.5904, 0.7486, 0.6087, 0.5481, 0.0, 1.4045, 1.0035, 1.2425], [2.2453, 0.0, 1.2036, 0.0, 1.2423, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3328, 0.0, 0.6739, 0.0], [5.0351, 0.0, 0.0, 0.3584, 0.0, 0.1154, 1.6934, 0.1474], [1.2949, 0.0, 1.4243, 0.0, 0.5904, 0.0, 0.0, 1.4545, 0.0, 1.0005, 0.0, 0.0, 1.8615], [1.0573, 0.9475, 0.0802, 0.0, 0.0, 0.5859, 0.8883, 0.8221, 0.0, 1.3468, 0.0, 0.9056, 1.2074], [1.1286, 0.3226, 1.5045, 0.0, 1.4022, 0.8789, 1.1515, 0.274, 1.0692, 1.0582, 0.0, 1.0109, 1.6099], [1.2474, 0.4133, 1.6449, 0.0, 0.7749, 0.0, 1.3324, 0.0422, 0.1584, 4.252, 0.0, 2.1271, 2.2136], [1.9404, 4.2328, 1.8189, 1.6293, 3.9803, 2.1633], [2.7473, 1.4514, 1.2694, 4.2112, 0.198, 7.0418, 0.3643, 5.4967], [2.3998, 1.0181, 2.7683, 0.8613, 2.9151, 0.2929, 3.619, 5.0381, 0.0594, 2.7706, 0.0, 0.1012, 1.6427], [2.3047, 1.6834, 3.9518, 0.0, 2.9889, 2.9621, 4.5073, 4.0684, 3.663, 4.3098, 0.0, 3.6223, 4.7291], [6.0469, 1.1894, 6.1584, 0.0, 3.7884, 3.8734, 3.4874, 4.8062, 5.0292, 5.2718, 0.3293, 0.1214, 6.8024, 5.7857], [6.1063, 2.8325, 6.9006, 0.3861, 3.6039, 3.0271, 3.7835, 4.5744, 4.1778, 7.9076, 5.0333, 6.7415], [2.5304, 1.9757, 3.8716, 1.1435, 7.3677, 1.953, 3.2406, 5.1224, 5.9796, 7.292, 6.0211, 3.0765, 5.2229, 2.9683], [5.3579, 1.1088, 7.021, 0.0, 4.8216, 4.5895, 3.8164, 4.1949, 6.4746, 5.695, 0.759, 6.1285, 8.2508]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

