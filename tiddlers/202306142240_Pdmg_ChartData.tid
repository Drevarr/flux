created: 20230614224052000
creator: Drevarr
modified: 20230705163535522
modifier: drevarr
tags: ChartData
title: 202306142240_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zayde Sunsabre", "Momomeko", "Cedryn X", "Elonith Requiem", "Smol Gluvs", "Johosh The Mighty", "Black Raspberry Pie", "Elonith Requiem", "Rina Of Theros", "Be\u00eb", "Mistwalker Cael", "Xanvias Einzbern", "Permanent Dawn", "Shaca Booey"];
const professions = ["Spellbreaker", "Chronomancer", "Berserker", "Reaper", "Scourge", "Berserker", "Chronomancer", "Scourge", "Scourge", "Scourge", "Vindicator", "Berserker", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[714.2041, 326.2553, 694.9818, 594.5731, 314.2625, 0.0], [316.3878, 62.4255, 413.4545, 400.6199, 168.3125, 441.9552, 102.8571, 750.5854, 8.0654], [917.1493, 495.4127, 2271.9878, 9.4579], [2177.1429, 1673.9787, 1835.3091], [516.6531, 947.766, 1.5091, 1175.6491, 556.475], [3762.806, 1144.0476], [702.4286, 119.4894, 354.1455, 510.9006, 439.3375, 555.3134, 415.8413, 924.9024, 28.7103], [2019.6374, 1883.325], [1719.2245, 871.766, 1126.8364, 1517.7135, 1086.0125], [2330.1224, 1713.8936, 1705.3273, 1861.7193], [4572.1429, 1663.0638, 4897.2727, 793.1493, 1280.5238, 5993.4756, 0.0], [4889.8776, 3105.0851, 3418.5636, 3393.0149, 2981.9683, 4922.9146, 800.4393], [2046.2449, 2206.4255, 435.1091, 2561.5439, 2426.65, 2634.4776, 1608.1429, 4715.4878, 10.5794], [4636.449, 1818.383, 2007.2727, 3164.3392, 2267.0, 3681.7313, 1835.7143, 5376.2195, 1085.2617]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

