created: 20230923231628000
creator: Drevarr
tags: ChartData
title: 202309232316_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Minka Bringer", "Hyde En Sikh", "Smol Gluvs", "Alhana Lafay", "Black Raspberry Pie", "Be\u00eb", "Aira Draugr", "Bella Sassy", "Koralia Danai", "Pr\u00e6tor Lightbringer", "Mistwalker Cael", "Oo Dads Mad", "Nothingwillsaveyou", "Xanvias", "Sub Train", "Kosair", "Regis Hawkesburne", "Varen Frostwood", "Ax Axun", "Leriel Nova", "Demon Maddx", "Mellody Moon", "Gamora Titus", "Belvyn Brightblade", "Mystik Charm", "Lumerence", "Necrotic Windrunner", "Z\u00e9 Das Covas", "Mort\u00e4rion", "Ryzen Grimsaw", "Spirita Demon", "Tactician Xifi", "Lord Erin The Wise", "Tomebringer", "Mrityu Devi", "Xanvias Einzbern", "Govinda Ektar", "Hawaiian Supreme", "N\u00eec\u00f4le", "Kodarrin", "Fqa Necr", "Snowe Shadowcharm", "Masky De Googlieyes", "Senhora Lagertha", "Kayes", "Dormethus", "Gabe Malhorn", "Cormac Shadowcharm", "Pr\u00edncess Mer\u00edda", "Its Kerz"];
const professions = ["Scrapper", "Chronomancer", "Reaper", "Reaper", "Chronomancer", "Reaper", "Herald", "Firebrand", "Firebrand", "Firebrand", "Herald", "Berserker", "Berserker", "Reaper", "Firebrand", "Firebrand", "Berserker", "Tempest", "Vindicator", "Tempest", "Reaper", "Dragonhunter", "Firebrand", "Firebrand", "Mirage", "Virtuoso", "Reaper", "Reaper", "Scrapper", "Vindicator", "Druid", "Holosmith", "Weaver", "Firebrand", "Harbinger", "Berserker", "Vindicator", "Spellbreaker", "Berserker", "Daredevil", "Scourge", "Reaper", "Mirage", "Soulbeast", "Spellbreaker", "Virtuoso", "Firebrand", "Mechanist", "Soulbeast", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7253.4286, 16261.1667, 2517.3125, 9022.6, 5015.7917, 1634.6875, 3450.5667, 4195.1875, 141.58, 4381.7619, 103.3659, 2868.875], [3660.0333, 2575.2692, 2577.4359, 338.7805, 3460.9444, 1506.15, 4134.3704, 5130.2917, 235.9333, 1016.1837, 581.0, 3780.9512, 1923.9111], [4391.1304, 12399.4286, 2471.9231, 11436.5714, 4077.8696, 1140.0896, 3138.9667, 7952.3333, 0.0, 2250.6216, 17.1765, 2464.2353, 3814.7667, 1434.9412], [4717.7778, 20985.75, 3301.0606, 8214.6154, 1151.1842, 10312.8889, 4426.4762, 200.0769, 3373.0417, 224.2308, 0.0, 3198.1212, 959.2254], [3076.5484, 3213.5172, 5448.3333, 1132.2319, 7295.6667, 5269.3333, 87.9808, 4934.75, 33.3269, 3830.8, 1250.9029], [3851.0606, 4716.6667, 1998.5122, 300.7, 3918.1765, 360.1548, 4029.8421, 5825.4615, 84.2308, 7728.0909, 3357.1556, 2556.875], [4700.0455, 32818.5, 2233.3243, 3228.6667, 3403.3214, 1453.4308, 3583.7037, 4196.6, 0.0, 3824.0417, 0.0, 4223.6857], [3908.0909, 4092.2222, 2540.075, 855.6053, 3802.9714, 1181.7375, 2679.7, 919.7333, 219.6667, 2616.3778, 4419.9474, 1636.5273], [2871.9286, 10718.6667, 1770.2381, 898.9394, 2816.9375, 1601.9365, 3717.9615, 3378.2812, 18.68, 2216.8478, 0.0, 4421.2258, 1882.3243], [2834.25, 7283.0, 2231.6279, 139.0698, 2875.5, 1003.9535, 3661.3, 4071.7143, 50.6346, 2339.4583, 0.0, 34.525, 3861.1923, 1651.5088], [2963.3235, 5489.9167, 616.1404, 2495.4545, 3236.8529, 1512.7759, 2394.3243, 674.3582, 205.5192, 1842.3243, 88.7059, 3100.5806, 659.561], [3117.7222, 1331.625, 1758.4681, 817.0233, 5444.6522, 1968.7955, 3965.0, 4948.6842, 12.3061, 2121.8372, 42.5472, 512.1273, 860.8624], [2255.5294, 2105.2258, 2307.825, 351.5652, 4353.5556, 529.3523, 4372.36, 895.6984, 181.2545, 4278.3462, 0.0, 2044.4167, 1862.4722], [4016.7931, 1091.8261, 2342.5918, 821.619, 4604.931, 847.0676, 4020.6667, 1013.9701, 49.4211, 2969.0213], [4474.3333, 10322.5714, 2239.5484, 679.2703, 3215.4412, 4842.4118, 2974.087, 694.0448, 112.2182, 986.54, 49.4528, 551.0, 2622.1064, 905.4356], [3713.2609, 6005.6364, 1505.1707, 19.7442, 3479.1538, 1062.0513, 2896.9655, 3608.5385, 184.9808, 1909.7843, 32.2885, 1181.1346, 1502.1463], [5301.6471, 1344.2105, 12744.8333, 311.093, 4365.087, 312.2198, 4507.2, 5535.5263, 31.4615, 3568.2273, 30.7692, 2153.2308, 906.2527], [3826.7333, 14005.75, 1330.6739, 8942.9091, 1039.7125, 2939.9655, 1997.8372, 59.2182, 2769.9412, 658.1304, 2593.5417, 833.3433], [3820.08, 477.85, 724.8947, 3369.3214, 2604.4615, 10688.75, 4266.9583, 2995.6786, 22.3469, 2414.0811, 0.0, 7.6, 4388.8824, 522.8641], [1347.4667, 15515.25, 1997.871, 2464.9231, 2675.7568, 517.0, 1705.7838, 2437.6341, 197.5, 9506.7143, 0.0, 0.0, 1036.8095], [2400.7027, 5612.9412, 2245.5122, 2272.3611, 3706.0323, 842.0, 4223.875, 7377.5], [11862.0, 2162.5714, 6413.8333, 4645.8182, 8004.2222, 4564.9048, 6170.7, 154.0], [3130.3333, 2424.5122, 806.029, 3292.1429, 14.74, 2911.0571, 0.0, 2278.6122], [3300.3929, 815.15, 2133.8286, 229.4872, 3692.087, 336.907, 3924.0, 531.7612, 0.0, 3248.0, 14.0784, 85.9444, 397.7805], [1818.7209, 25835.6667, 399.2817, 4154.8125, 1572.6863, 1.0784, 7836.1, 0.0, 9296.8571, 225.3876], [4119.375, 2841.7222, 249.9074, 2760.2963, 2606.3611, 287.4634, 667.8108, 0.0, 285.0962, 1354.9146], [4276.3684, 2984.4857, 3927.5238, 11.2584, 257.3784, 381.8621, 51.3846, 1076.5208, 36.3269, 170.8039, 465.9727], [3262.3667, 194.0769, 201.931, 54453.0, 1132.7143, 7631.6667, 13.3731], [2.34, 2383.8571, 176.4583, 13.5745, 2720.8163, 582.0562], [0.0, 2662.2105, 67.2549, 3215.2727, 2125.2391], [2684.35, 0.5385, 83.4412, 2660.8684, 843.6726], [2559.5667, 659.9762, 3876.875, 1415.5172, 532.6757], [53.8545, 1640.4583, 97.0, 1672.0, 760.268], [99.303, 2893.3939, 0.0, 0.0, 1072.0, 776.0108], [0.0, 0.0, 2256.2368, 1579.859], [28.8302, 906.0714, 1135.708], [3273.72, 176.4615, 0.0, 42.5645, 239.7381, 565.6275, 0.0, 444.3415], [57.9804, 0.0, 3714.5714, 726.7586], [4084.8214], [119.2, 439.1538, 1893.1481, 359.9664], [1156.6882], [12954.5714], [694.0543], [239.4561, 85.2128, 66.8214, 580.6466], [21.9574, 3663.5238], [647.6505], [3668.1176], [463.4583], [94.4737, 240.7895, 23.2632, 67.5556], [0.0, 228.1636]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

