created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Squishy Jellyfish", "Jmbrage Warrior", "Necrotic Windrunner", "Mar\u00eda Callas", "Jimbo The Pleb", "Mellody Moon", "Rafaellagabriela", "Raelyn Sunray", "Dugup", "Latedoctor", "Oo Dads Mad", "N\u00edcki M\u00edraj", "Dark Sidiuz", "Jmbrage Rev", "Lord Erin The Wise", "Leafzel", "Eibh\u00ebar", "Etchery Howls", "Sister Elon\u00edth", "Arriasa", "Belvyn Brightblade", "Xanvias Einzbern", "Meme Soulmessor", "Solus Luxes", "Aira Draugr", "Tegan Parker", "Bella Sassy", "Grasszanine", "Mistwalker Cael", "Daphne Agla\u00e9", "Rina Of Theros", "Glorious Gluvs", "Morton Saltbringer", "Cedryn X", "Venomina", "Koralia Danai", "Alhana Lafay", "Black Raspberry Pie", "Klengah", "Arcanophage Farra", "Mike The Archmagus", "Sub Train", "Tootsie Pop Rocks", "Primal Clone", "Kurn The Drunk", "Cat Wigglebooty", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Be\u00eb", "Zaedy Zae"];
const professions = ["Firebrand", "Berserker", "Reaper", "Dragonhunter", "Berserker", "Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Reaper", "Berserker", "Chronomancer", "Reaper", "Vindicator", "Tempest", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Druid", "Firebrand", "Berserker", "Reaper", "Firebrand", "Herald", "Tempest", "Firebrand", "Spellbreaker", "Herald", "Reaper", "Reaper", "Berserker", "Chronomancer", "Berserker", "Reaper", "Firebrand", "Reaper", "Chronomancer", "Druid", "Spellbreaker", "Weaver", "Firebrand", "Scrapper", "Chronomancer", "Reaper", "Scrapper", "Scrapper", "Chronomancer", "Reaper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.093, 0.3934, 0.5135, 0.3438], [0.0, 0.4571, 0.5116, 0.4262, 0.2162, 0.7344], [0.0303, 0.1471, 0.1667, 0.1739, 0.4412, 0.1579, 0.2747, 0.1857, 0.2326, 0.2131, 0.0541], [0.3971, 0.35, 0.0, 0.3333, 0.1985, 0.3684, 0.3736, 0.0, 0.3857], [0.2647, 0.5263, 0.1868, 0.0, 0.6714, 0.9767, 0.4426, 0.3649, 0.25], [0.355, 0.24, 0.1351, 0.5, 0.35, 0.0, 0.5652], [0.3235, 0.25, 0.0, 0.2464, 0.6691, 0.5965, 0.3956, 0.0, 0.2286, 0.3488, 0.5246, 0.2297, 0.3906], [0.8456, 0.5263, 0.5385, 0.3571, 0.6512, 0.1967, 0.3243, 0.7188], [0.7353, 0.6167, 0.0, 0.3768, 1.0147, 0.6842, 0.2857, 0.0, 0.4429], [0.6471, 0.2833, 0.0, 0.8116, 0.9706, 0.4737, 0.5385, 0.0, 0.3857], [0.3593, 0.0, 0.4118, 0.4, 0.0, 0.3768, 0.3309, 0.3333, 0.3297, 0.0, 0.3], [0.2771, 0.28, 0.3382, 0.5, 0.3768, 0.3088, 0.1579, 0.3297, 0.1571, 0.3256, 0.1892, 0.4375], [0.342, 0.36, 0.027, 0.5147, 0.8667, 0.1324, 0.2982, 0.4835, 0.0, 0.5286], [0.3312, 0.08, 0.1622, 0.3971, 0.2, 0.2464, 0.625, 0.5965, 0.5824], [0.3971, 0.2333, 0.3913, 0.875, 0.5439, 0.5934, 0.0833, 0.4, 0.5581, 0.1967, 0.3919, 0.4062], [0.2359, 0.24, 0.0811, 0.5294, 0.2333, 0.0, 0.2754, 0.2426, 0.7193, 0.2198, 0.4571, 0.4419, 0.459, 0.2973, 0.3594], [0.4559, 0.5333, 0.0312, 0.3188, 0.9044, 0.4386, 0.3626, 0.0, 0.5286, 0.2558, 0.459, 0.2973, 0.7344], [0.4559, 0.3333, 0.1449, 0.9412, 0.5614, 0.6484, 0.4, 0.6977, 0.2787, 0.3919, 0.625], [0.5294, 0.2667, 0.0, 0.3623, 1.0, 0.5263, 0.3297, 0.0, 0.3714, 1.0698, 0.623, 0.2838, 0.4219], [0.6765, 0.3333, 0.3768, 0.9265, 0.6316, 0.6154, 0.3286, 0.9302, 0.377, 0.2838, 0.3281], [0.4004, 0.2, 0.3514, 0.6618, 0.3333, 0.0, 0.3043, 0.8824, 0.614], [0.2208, 0.04, 0.1622, 0.5735, 0.3667, 0.0, 0.3043, 0.1691, 0.5965, 0.6703, 0.0, 0.4286, 0.3721, 0.4918, 0.4054, 0.5156], [0.2338, 0.32, 0.2973, 0.4706, 0.35, 0.4348, 1.0735, 0.614, 0.6593], [0.342, 0.04, 0.2973, 0.5735, 0.5167, 0.0, 0.1884, 0.3015, 0.614, 0.3956, 0.0, 0.3571, 0.3023, 0.4754, 0.1216, 0.6094], [0.4199, 0.08, 0.2432, 0.6618, 0.3667, 1.0145, 0.8529, 0.386], [0.5588, 0.2667, 0.0, 1.0221, 0.5789, 0.6813, 0.0, 0.6429, 0.4884, 1.0164, 0.2568, 0.7656], [0.1176, 0.4333, 0.0, 0.5507, 1.1103, 0.6316, 0.7692, 0.4429, 0.7442, 0.459, 0.3108, 0.6719], [0.5882, 0.2833, 0.0, 0.4203, 0.875, 0.8947, 0.5824, 0.5571, 0.9535, 0.4426, 0.3649, 0.6719], [0.2381, 0.24, 0.3514, 0.4559, 0.45, 0.0, 0.2754, 0.5221, 0.5439, 0.5604, 0.0, 0.5143, 0.4651, 0.5246, 0.1081, 0.6875], [0.3312, 0.08, 0.5735, 0.5667, 0.4058, 0.3015, 0.7368, 0.5165, 0.0, 0.3857, 0.6744, 0.1475, 0.3243, 0.4062], [0.2662, 0.0, 0.4559, 0.5, 0.0625, 0.4783, 0.7574, 0.4211, 0.4615, 0.0, 0.6, 0.1628, 0.1639, 0.3378, 0.5781], [0.3333, 0.04, 0.1622, 0.4412, 0.3167, 0.0, 0.5217, 0.5, 0.5439, 0.4505, 0.0, 0.4143, 0.4651, 0.4262, 0.2432, 0.6562], [0.3268, 0.36, 0.0, 0.4706, 0.2833, 0.0938, 0.2899, 0.7132, 0.614, 0.3956, 0.0, 0.5714, 0.4884, 0.2787, 0.2432, 0.4219], [0.3398, 0.0, 0.5588, 0.3333, 0.2899, 0.875, 0.2632, 0.4945, 0.0, 0.0857, 0.7674, 0.2131, 0.5946, 0.3125], [0.3377, 0.4, 0.1622, 0.5882, 0.5, 0.5652, 0.7059, 0.4912, 0.5165, 0.0, 0.1714, 0.3721, 0.377, 0.3243, 0.125], [0.3939, 0.0, 0.2162, 0.3971, 0.2, 0.0, 0.2899, 0.6912, 0.6491, 0.3516, 0.4429, 0.6977, 0.3279, 0.2568, 0.4219], [0.3939, 0.4706, 0.4167, 0.0, 0.9565, 0.8235, 0.5263, 0.9451, 0.0, 0.3429], [0.3528, 0.08, 0.1351, 0.5882, 0.2833, 0.0, 0.6232, 0.7941, 0.3158, 0.5275, 0.0, 0.1714, 0.6977, 0.4426, 0.3243, 0.3438], [0.3983, 0.0, 0.3784, 0.6324, 0.2333, 0.0, 0.3768, 0.9118, 0.4211, 0.4286, 0.0, 0.4, 0.4884, 0.6557, 0.0946, 0.3906], [0.2965, 0.16, 0.3514, 0.2059, 0.2833, 0.2812, 0.2319, 0.5956, 0.9123, 1.0879, 0.6286, 0.6279, 0.459, 0.4324, 0.4688], [0.4589, 0.28, 0.2162, 0.3088, 0.5833, 0.0, 0.3333, 0.8824, 0.4035, 0.5055, 0.0, 0.2714, 0.5581, 0.4426, 0.2297, 0.7031], [0.4589, 0.12, 0.2703, 0.4118, 0.3833, 0.0, 0.087, 0.9118, 0.4386, 0.6264, 0.0, 0.5286, 0.5581, 0.459, 0.3243, 0.4688], [0.3701, 0.16, 0.3243, 0.4559, 0.4167, 0.4638, 0.8603, 0.6842, 0.4835, 0.0, 0.5143, 0.6047, 0.4754, 0.2838, 0.7188], [0.3398, 0.0, 0.5735, 0.45, 0.0938, 0.3043, 1.1324, 0.8246, 0.5275, 0.0, 0.5286, 0.4419, 0.3443, 0.5, 0.4688], [0.3355, 0.4265, 0.6167, 0.0, 0.6667, 0.7059, 0.7193, 0.6923, 0.0, 0.6143, 0.8372, 0.3279, 0.4324, 0.7031], [0.4459, 0.08, 0.2162, 0.4118, 0.3333, 0.3768, 1.1544, 0.6143, 1.0698, 0.5246, 0.5541, 0.7188], [0.4459, 0.24, 0.2432, 0.6029, 0.4167, 0.0, 0.4203, 0.9632, 0.5614, 0.4396, 0.0, 0.6286, 0.5116, 0.541, 0.4054, 0.6406], [0.3117, 0.12, 0.1622, 0.3088, 0.5667, 0.0, 0.6377, 1.1176, 0.8246, 0.6374, 0.0, 0.6143, 0.6512, 0.5738, 0.2703, 0.9688], [0.4481, 0.28, 0.0541, 0.6176, 0.4, 0.1449, 0.9559, 0.5965, 0.8571, 0.0, 0.7143, 0.4651, 0.7705, 0.3108, 0.6562], [0.3983, 0.08, 0.4324, 0.5441, 0.4333, 0.5362, 1.4412, 0.6842, 0.7033, 0.6, 0.3256, 0.4918, 0.4595, 0.7188]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

