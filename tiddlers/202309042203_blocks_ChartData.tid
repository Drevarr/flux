created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00e2 \u00d4tik R\u00e6j", "Melody Phoenixstorm", "Smol Gluvs", "Oo Dads Mad", "Anita Strips", "Belvyn Brightblade", "Darth Sammy", "Demons Vengence", "Lord Erin The Wise", "Mort\u00e4rion", "Elementsofmathus", "Amiti\u00e9l", "Glorious Gluvs", "Morv\u00e4rth", "Kylo Milan", "Daphne Agla\u00e9", "Necrotic Windrunner", "Selandir", "Darkened Sword", "Rina Of Theros", "Gamora Titus", "Dancing In The Mist", "Nose Llama", "A \u00da R A", "Rhaevynn", "Blaize Harlot", "Glass Tingle", "Jmbrage Warrior", "Xanvias Einzbern", "Lucky Luprac\u00e1n", "Jimbo The Pleb", "Black Raspberry Pie", "Newtype Khan", "Tegan Parker", "Rafaellagabriela", "Air One Com", "Venomina The Fierce", "Crusader Siolith", "Tootsie Pop Rocks", "Koralia Danai", "Bella Sassy", "Glizzy Gobbl\u00e9r", "Zaedy Zae", "Sub Train", "Sonja Wintersong", "Be\u00eb", "Mistwalker Cael", "Hyde En Sikh", "Drevarr Moonwillow", "Darks Na"];
const professions = ["Berserker", "Scrapper", "Reaper", "Berserker", "Chronomancer", "Firebrand", "Reaper", "Druid", "Weaver", "Scrapper", "Tempest", "Firebrand", "Berserker", "Reaper", "Chronomancer", "Reaper", "Reaper", "Weaver", "Spellbreaker", "Reaper", "Firebrand", "Herald", "Tempest", "Firebrand", "Reaper", "Scourge", "Chronomancer", "Berserker", "Berserker", "Scrapper", "Berserker", "Chronomancer", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Druid", "Firebrand", "Firebrand", "Reaper", "Herald", "Chronomancer", "Scrapper", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 10, 5, 4, 4, 1], [2, 7, 7, 4, 4, 4], [4, 8, 6, 3, 5, 2, 1], [4, 12, 2, 5, 7, 3, 0], [3, 9, 11, 5, 5, 2], [2, 10, 7, 7, 3, 2, 4], [0, 11, 0, 5, 3, 0, 0, 2, 1, 0, 0, 1, 1, 1, 1, 6, 0, 3, 0, 3, 3], [7, 0, 2, 0, 2, 0, 0, 14, 4, 0, 3, 11], [0, 6, 1, 1, 0, 1, 1, 0, 1, 6, 0, 0, 0, 0, 2, 0, 12, 1, 4, 0, 8, 2], [4, 8, 7, 4, 2, 2, 0, 0, 0, 5, 0, 2, 3, 0, 2, 0, 7, 1], [0, 1, 4, 0, 1, 3, 4, 3, 0, 12, 1, 2, 0, 6, 10], [4, 17, 8, 7, 7, 5, 1], [1, 0, 5, 0, 1, 2, 3, 4, 2, 12, 1, 5, 0, 6, 10], [0, 0, 0, 7, 2, 1, 5, 4, 3, 1, 9, 0, 4, 1, 16], [10, 8, 4, 1, 0, 0, 8, 0, 2, 2, 3, 4, 0, 10, 1, 5, 0, 1], [1, 9, 3, 3, 3, 2, 0, 0, 1, 5, 0, 2, 2, 4, 3, 0, 9, 1, 0, 0, 5, 7], [3, 8, 2, 6, 2, 2, 1, 1, 1, 3, 1, 0, 1, 3, 4, 1, 8, 0, 3, 0, 6, 11], [2, 5, 7, 3, 6, 3, 0, 1, 1, 2, 0, 0, 1, 3, 4, 0, 8, 0, 2, 0, 4, 16], [1, 0, 2, 6, 0, 2, 4, 6, 4, 1, 17, 2, 1, 0, 5, 19], [1, 5, 4, 2, 1, 2, 2, 0, 2, 8, 2, 1, 0, 2, 4, 0, 11, 1, 2, 0, 8, 13], [6, 1, 2, 4, 3, 4, 0, 16, 3, 6, 0, 10, 17], [1, 10, 3, 4, 5, 2, 1, 0, 1, 6, 0, 0, 1, 5, 2, 2, 12, 1, 4, 0, 2, 13], [3, 4, 4, 3, 2, 0, 1, 0, 4, 0, 2, 3, 5, 1, 0, 16, 0, 5, 0, 5, 17], [1, 4, 6, 0, 2, 8, 4, 4, 0, 12, 5, 6, 7, 18], [2, 9, 5, 5, 4, 0, 1, 1, 4, 1, 2, 3, 3, 1, 1, 15, 4, 4, 0, 5, 10], [3, 7, 9, 7, 7, 3, 0, 0, 1, 7, 0, 1, 6, 2, 2, 0, 11, 1, 2, 0, 4, 9], [2, 8, 5, 3, 9, 1, 0, 0, 2, 8, 1, 1, 3, 4, 8, 0, 10, 3, 1, 0, 1, 15], [2, 8, 8, 4, 3, 2, 1, 0, 1, 4, 0, 1, 2, 4, 1, 0, 16, 1, 4, 0, 8, 16], [4, 9, 4, 7, 6, 2, 1, 0, 1, 5, 0, 0, 2, 4, 2, 0, 14, 0, 8, 7, 12], [3, 2, 4, 7, 4, 3, 1, 0, 1, 5, 0, 1, 2, 1, 2, 1, 10, 3, 20, 0, 6, 12], [3, 2, 4, 4, 8, 5, 0, 0, 1, 4, 0, 0, 3, 6, 3, 1, 13, 1, 8, 0, 7, 15], [1, 8, 4, 6, 3, 3, 1, 0, 1, 4, 0, 1, 1, 3, 0, 1, 14, 2, 1, 0, 12, 24], [5, 9, 6, 7, 10, 0, 1, 1, 1, 9, 0, 0, 2, 4, 3, 1, 9, 1, 5, 0, 3, 22], [2, 12, 4, 6, 6, 2, 0, 0, 0, 5, 0, 0, 3, 6, 4, 14, 2, 5, 0, 10, 20], [2, 8, 6, 6, 9, 3, 1, 0, 2, 5, 1, 1, 3, 1, 8, 1, 15, 3, 2, 1, 10, 16], [12, 6, 4, 10, 3, 1, 0, 2, 5, 2, 4, 3, 5, 0, 18, 0, 8, 0, 6, 15], [2, 10, 6, 5, 6, 5, 0, 0, 0, 9, 0, 1, 2, 8, 4, 1, 1, 0, 21, 0, 8, 16], [3, 12, 7, 7, 8, 4, 1, 0, 1, 7, 0, 2, 6, 1, 4, 1, 14, 4, 5, 0, 5, 16], [4, 11, 7, 5, 4, 3, 0, 0, 0, 10, 0, 1, 3, 2, 2, 1, 16, 10, 6, 1, 8, 19], [5, 12, 6, 8, 7, 1, 1, 1, 1, 8, 0, 3, 3, 4, 5, 0, 19, 1, 8, 0, 6, 15], [4, 14, 10, 9, 7, 3, 0, 1, 2, 8, 1, 1, 2, 4, 4, 1, 14, 3, 5, 0, 7, 15], [4, 15, 8, 9, 5, 5, 1, 0, 3, 8, 0, 2, 1, 1, 4, 0, 16, 2, 2, 0, 13, 17], [4, 10, 6, 6, 8, 3, 0, 0, 0, 14, 0, 2, 1, 6, 6, 0, 18, 2, 7, 8, 17], [3, 10, 10, 7, 8, 5, 0, 1, 0, 4, 0, 2, 8, 7, 6, 0, 14, 1, 7, 0, 6, 21], [4, 11, 8, 5, 7, 4, 1, 2, 8, 0, 2, 2, 6, 3, 26, 4, 2, 0, 7, 23], [2, 14, 12, 10, 6, 2, 1, 1, 2, 10, 2, 3, 4, 4, 1, 13, 1, 8, 0, 8, 26], [4, 8, 9, 10, 11, 3, 1, 0, 2, 7, 1, 1, 4, 5, 1, 19, 0, 5, 0, 14, 27], [4, 16, 9, 12, 9, 4, 0, 2, 0, 7, 2, 4, 4, 8, 3, 1, 18, 1, 5, 7, 19], [3, 15, 7, 9, 9, 4, 2, 1, 3, 16, 0, 2, 2, 7, 7, 0, 17, 3, 7, 0, 9, 21], [6, 24, 6, 8, 8, 3, 1, 0, 1, 8, 0, 4, 2, 4, 5, 0, 19, 3, 11, 0, 10, 21]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

