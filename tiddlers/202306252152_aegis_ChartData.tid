created: 20230625215204000
creator: Drevarr
modified: 20230705163536483
modifier: drevarr
tags: ChartData
title: 202306252152_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Rafaellagabriela", "Gavann", "Drevarr Moonwillow", "Crusader Siolith", "Gabe Malhorn", "Traidoruns Maximus", "Tika Fiery", "Gestern Yesteryear", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 231.0313, 83.6035], [49.0148, 40.4064, 0.0, 84.0586, 24.0677, 8.1028, 0.0, 28.9252, 51.072, 28.3749, 36.7992, 46.9165, 0.0, 3.3555, 53.2983, 0.0, 0.0], [0.0, 61.7688, 17.8647, 102.9328, 24.6355, 0.0, 48.2784, 11.2608, 26.9804, 45.888, 17.8331, 2.2344, 13.7033, 17.4445, 5.5051, 48.3581, 17.0016, 4.1069], [39.7578, 85.1736, 42.5397, 22.6361, 29.7898, 0.0, 1.6356, 41.7864, 30.3452, 89.472, 7.5646, 24.8064, 33.4067, 0.0, 0.0, 46.4099, 68.7456, 0.0], [0.0, 100.4088, 38.2956, 15.6961, 46.0824, 0.0, 41.2096, 0.0, 58.2517, 148.128, 45.0232, 1.5048, 4.2194, 29.2035, 257.0285, 14.5622, 0.0], [124.0123, 184.9848, 7.5258, 25.7372, 9.5938, 126.5361, 154.176, 27.5243, 116.736, 39.2519, 14.9065, 105.5416, 196.0069, 63.4973, 114.3965], [15.0724, 94.116, 85.8032, 71.346, 52.6781, 0.0, 58.6372, 0.0, 62.45, 146.592, 84.8513, 90.6072, 31.7809, 0.0, 253.7088, 130.9496, 255.7632, 16.1626], [66.0652, 82.248, 77.2821, 163.6418, 230.8051, 0.0, 58.0544, 8.4346, 86.7447, 240.672, 28.8914, 24.396, 91.2008, 58.9154, 61.2382, 78.2775, 180.8822, 65.1802], [153.928, 11.9232, 46.9483, 125.1149, 52.547, 91.3868, 22.8418, 79.1816, 235.872, 29.5901, 53.0784, 18.3485, 153.0076, 196.5601, 249.0964, 174.0077, 20.1701], [70.2586, 133.032, 147.8526, 153.1345, 176.1178, 14.4238, 36.9232, 25.9771, 30.5304, 236.064, 55.0182, 81.0768, 46.5681, 0.0, 220.0487, 156.4854, 165.5069, 190.44], [103.2912, 151.4136, 89.7512, 192.245, 128.7686, 30.8747, 72.1732, 14.6059, 107.3659, 396.864, 102.8971, 226.632, 136.4527, 123.3976, 121.6376, 203.8694, 193.9661, 17.7192], [114.6449, 212.244, 102.2861, 160.9825, 152.7053, 73.0876, 58.0732, 62.6078, 148.8551, 227.424, 57.5701, 338.808, 238.802, 109.9631, 196.7174, 288.4787, 403.6032, 126.0216]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

