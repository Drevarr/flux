created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Newtype Khan", "Zaedy Zae", "Venomina The Sly", "Amiti\u00e9l", "Atria Ruinheart", "Sonja Wintersong", "Sygaldry Verdandi", "Aronorf Xideliesi", "Koralia Danai", "Gabe Malhorn", "Bella Bitty"];
const professions = ["Firebrand", "Spellbreaker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36.8288, 229.1117, 49.3185, 0.0, 42.1252], [54.054, 18.648, 0.0, 72.835, 37.8963, 0.0, 0.0, 9.6348, 35.2512, 25.017, 39.2807, 50.866, 0.0, 9.9845, 34.8086, 10.0533, 0.0, 0.0, 92.2751, 12.1092, 20.9446, 28.7804, 0.0, 0.0, 0.0, 0.0], [14.1766, 153.9767, 22.2915, 25.0282, 57.449, 28.5331, 42.7799, 0.0, 32.8104, 46.272, 27.1188, 0.0, 23.8582, 24.5752, 0.0, 20.4262, 21.005, 36.729, 33.5524, 44.6382, 0.0, 64.1841, 3.8977, 0.0, 10.4252, 55.5216, 0.6654], [0.0, 70.193, 6.468, 0.0, 97.9612, 15.055, 23.3204, 0.0, 51.4476, 49.0368, 40.9572, 24.4193, 64.803, 28.3883, 48.081, 39.495, 29.4326, 30.4668, 0.0, 46.5465, 54.7933, 45.6347, 27.9061, 41.5038, 0.0, 26.6256, 14.2701], [80.1094, 351.5827, 80.724, 98.368, 237.1789, 125.9597, 222.0075, 92.6106, 193.812, 180.3648, 129.2142, 500.3338, 445.5897, 146.754, 111.0569, 109.7264, 162.6496, 71.7696, 28.6717], [40.0275, 293.5904, 32.3085, 33.9555, 297.2957, 222.8442, 115.4439, 0.0, 97.8816, 93.0, 68.5956, 296.9285, 151.2413, 197.971, 44.3107, 75.0789, 126.693, 27.1022, 417.6232, 223.719, 124.6991, 91.4098, 554.7984], [333.5426, 172.9335, 181.8894, 207.9146, 220.8731, 199.4454, 32.3657, 473.5062, 268.1732, 139.7833, 137.1295, 474.9069, 476.2928, 238.8822, 71.144], [27.9072, 376.6019, 96.264, 33.5194, 151.4396, 121.7462, 129.9999, 0.0, 241.0188, 272.832, 229.5054, 112.3638, 370.5504, 145.8473, 102.3, 248.5408, 45.2612, 53.0208, 41.2467, 320.2369, 225.9719, 156.4727, 38.7543, 30.2991, 20.0231, 136.8174, 16.0337], [79.2608, 331.5827, 92.862, 14.8294, 435.3967, 144.7846, 140.2315, 62.9462, 212.784, 299.8656, 174.8586, 330.1562, 273.5428, 187.209, 302.9717, 202.8403, 115.9766, 38.9718, 68.4446, 130.2347, 121.0118, 199.6613, 54.1967, 340.119, 0.0, 76.9356, 50.2846], [43.4982, 466.7949, 63.945, 63.5494, 420.5692, 129.5325, 127.4516, 121.0406, 225.9156, 342.912, 148.707, 414.837, 479.3691, 213.156, 250.635, 224.2362, 250.2202, 161.6202, 48.6922, 338.2285, 270.9088, 246.3406, 92.1656, 325.7319, 0.0, 54.309], [341.4668, 44.0685, 47.857, 316.0938, 154.8378, 62.9343, 196.2016, 345.4392, 428.2752, 85.2996, 494.6224, 533.621, 196.0905, 268.4761, 289.6842, 144.8531, 115.1262, 53.2666, 442.089, 295.9319, 175.226, 176.4617, 574.6221, 167.9208, 112.4364, 35.7303], [22.6957, 441.7756, 59.2305, 98.5165, 483.6018, 80.2032, 253.3202, 108.8259, 213.342, 247.6416, 134.1246, 286.8542, 548.1879, 177.4905, 238.1953, 198.5418, 270.1557, 45.7884, 65.6311, 394.7248, 312.0641, 303.0336, 48.9356, 428.961, 498.7567, 184.7022, 45.1102]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

