created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Black Raspberry Pie", "Solus Sanctus", "Mistwalker Cael", "Newtype Khan", "Mister Jekyll", "Cyclotechnist Farra", "Primal Clone", "Tika Fiery", "Xanvias Einzbern", "Johosh The Mighty", "Artakama Nahid", "Bella Sassy", "Eibh\u00ebar", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Chronomancer", "Firebrand", "Vindicator", "Spellbreaker", "Reaper", "Scrapper", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Tempest", "Firebrand", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[356, 335, 337, 304, 326, 4104, 688, 318, 347, 335, 5598, 2678, 6687, 8562], [424, 3024, 439, 231, 282, 176, 318, 477, 247, 1308, 353, 281, 253, 3623, 6484, 794, 271, 350, 576, 372, 1532, 480, 116, 2777], [619, 1653, 597, 320, 674, 184, 226, 13902, 286, 311, 352, 313, 178, 234, 7467, 2117, 265, 637, 293, 402, 4612, 439, 204, 1375], [499, 1095, 322, 311, 302, 352, 376, 18150, 249, 382, 318, 239, 225, 4421, 832, 1967, 796, 338, 323, 1461, 741, 1997, 293, 910], [411, 1159, 532, 337, 466, 422, 199, 296, 206, 286, 337, 286, 208, 200, 4665, 2135, 2751, 888, 205, 3143, 1512, 448, 3953], [663, 1135, 1035, 536, 828, 341, 330, 329, 162, 412, 230, 172, 222, 678, 7086, 1908, 3029, 3704, 412, 328, 4413, 1092, 3797], [11412, 1126, 447, 350, 823, 161, 395, 258, 229, 313, 286, 252, 737, 7444, 2095, 302, 544, 535, 367, 2138, 1697, 5447], [589, 789, 722, 249, 277, 266, 224, 526, 309, 337, 235, 218, 239, 145, 4130, 2117, 233, 2237, 280, 248, 1710, 806, 1143], [380, 828, 280, 283, 246, 191, 290, 282, 214, 7533, 260, 278, 276, 182, 7843, 3582, 248, 509, 184, 427, 2799, 1708, 186, 2162], [485, 719, 429, 192, 244, 271, 209, 314, 200, 240, 225, 247, 247, 226, 7338, 301, 210, 737, 274, 286, 2214, 668, 816], [525, 492, 350, 164, 453, 157, 219, 285, 200, 1743, 229, 225, 196, 171, 6992, 597, 293, 261, 179, 242, 1520, 1730, 198, 1735], [209, 1249, 733, 145, 266, 217, 180, 237, 158, 364, 206, 262, 166, 189, 12774, 2207, 201, 222, 272, 332, 720, 1737, 526], [183, 278, 686, 155, 410, 120, 142, 248, 175, 199, 199, 165, 190, 690, 7976, 2037, 174, 175, 146, 232, 1902, 1641, 308, 1187], [315, 644, 274, 225, 215, 157, 174, 212, 174, 242, 212, 262, 172, 404, 5465, 5895, 197, 246, 210, 245, 1217, 651, 125, 1576], [199, 605, 409, 195, 162, 163, 121, 208, 165, 531, 184, 179, 142, 137, 7709, 2226, 168, 298, 471, 248, 2012, 1592, 106, 320]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

