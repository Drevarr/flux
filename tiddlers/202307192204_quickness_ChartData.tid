created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Il Dim Il", "Frosmor", "Easily Impressed", "Jimbo Mann", "Grasszanine", "Newtype Khan", "Raelyn Sunray", "Sub Train", "Sygaldry Verdandi", "Bella Sassy", "Koralia Danai"];
const professions = ["Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 3.7536, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 147.5082, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 315.5098, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [9.2169, 55.1327, 79.9537, 63.2808, 0.0, 18.7639, 101.2966, 54.1577, 48.048, 12.384, 97.6562], [140.8014, 135.2879, 30.514, 14.688, 312.9126], [22.2784, 0.0, 51.0218, 39.6627, 25.4592, 62.8866, 171.1759, 29.119, 96.577, 77.7231, 42.614, 20.0448, 327.3547, 0.0, 30.1392, 52.6079, 37.3481, 39.5251, 44.0818, 7.0582, 5.6595, 5.664, 46.609, 105.0246, 0.0, 4.1856, 7.0969, 89.2181, 12.7995, 21.6472, 43.0886, 16.219, 82.4568, 0.0, 46.5869], [0.0, 41.9514, 14.6177, 14.5612, 29.2169, 0.0, 28.1106, 204.9222, 65.2698, 128.3906, 103.7728, 56.826, 0.0, 201.9604, 0.0, 24.8193, 21.166, 21.0936, 47.5264, 36.6114, 36.4762, 0.0, 14.664, 36.3918, 21.7944, 0.0, 21.8857, 126.9734, 14.1404, 33.0147, 105.7459, 40.621, 83.0208, 95.3856], [38.2302, 23.0714, 0.0, 53.8264, 55.4885, 69.5232, 42.5178, 228.0082, 12.6317, 117.3782, 115.2715, 46.508, 15.5904, 191.6446, 0.0, 38.5227, 38.6474, 62.2261, 14.9798, 15.456, 23.081, 0.0, 11.5584, 35.0582, 42.2801, 0.0, 0.0, 0.0, 128.6568, 0.0, 58.9588, 85.1738, 34.398, 108.0624, 61.8854], [61.5978, 178.8204, 83.5435, 12.892, 25.7856, 233.1371, 46.3473, 78.6867, 58.2556, 130.7277, 73.5126, 63.1635, 0.0, 19.4688, 91.0973, 171.3407, 0.3393, 17.5438, 203.7667, 12.4826, 101.8181, 156.4864, 82.761, 198.3024, 93.6346], [45.3054, 24.7894, 32.534, 34.3091, 30.6306, 10.7304, 82.8828, 234.0513, 68.5012, 203.4672, 79.1427, 52.03, 26.2848, 482.0917, 0.0, 32.6439, 28.2077, 23.0168, 67.0784, 112.6034, 25.8115, 0.0, 17.8944, 74.3578, 128.3849, 0.0, 0.0, 9.9621, 219.1574, 4.3396, 68.9665, 171.7901, 56.497, 175.8552, 82.2067], [68.7219, 36.5328, 38.905, 117.3731, 50.7368, 112.7712, 131.7348, 231.4032, 35.4532, 179.607, 161.2666, 34.562, 25.5744, 555.6778, 41.7519, 44.379, 44.1415, 73.0342, 77.6664, 56.4144, 7.7885, 20.9472, 85.728, 174.2366, 1.9566, 0.0, 187.5744, 4.1934, 136.5189, 141.3709, 53.459, 194.4672, 100.0397], [40.7053, 51.5823, 136.1605, 93.6589, 117.9528, 120.267, 265.0137, 70.1168, 226.1038, 159.9179, 73.304, 63.7056, 587.0836, 23.6362, 51.6051, 75.8209, 69.733, 132.1114, 94.5392, 56.7235, 15.9544, 27.1872, 119.0266, 209.5666, 227.5742, 33.7907, 98.6635, 137.7958, 82.761, 228.8712, 91.561], [34.7529, 62.4362, 44.1118, 164.4376, 112.7442, 88.4952, 123.0408, 284.5689, 55.3003, 254.0718, 163.5379, 36.388, 48.4224, 560.4918, 19.2467, 40.8411, 49.0871, 74.0137, 118.9363, 84.7182, 48.944, 9.8368, 112.9805, 200.9755, 23.6489, 205.3699, 66.8743, 134.6696, 156.4864, 88.739, 282.564, 114.5549]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

