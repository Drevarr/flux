created: 20230603000934000
creator: Drevarr
modified: 20230705163533235
modifier: drevarr
tags: ChartData
title: 202306030009_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Grothez", "Hyde En Sikh", "Latedoctor", "Sigrid Oluvkin", "Aronorf Xideliesi", "A Girl Named Jeff", "Morv\u00e4rth", "Dargon Spiritwalker", "Morv\u00e4rth", "Grasszanine", "Sureting", "Smol Gluvs", "Newtype Khan", "Primal Clone", "Black Raspberry Pie", "Be\u00eb"];
const professions = ["Tempest", "Chronomancer", "Reaper", "Scourge", "Firebrand", "Spellbreaker", "Reaper", "Scourge", "Scourge", "Spellbreaker", "Reaper", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.0, 1.9706, 2.7367, 2.0, 0.0, 1.0, 2.9831, 2.0469, 9.9795, 6.0071], [0.0, 0.0, 0.0, 6.1224, 0.0, 0.0, 0.0, 2.9964, 0.0, 2.0355, 0.0, 0.0, 2.6071, 0.0, 0.0, 3.1275, 2.0, 2.0, 1.9926, 1.0, 0.0, 0.0], [8.16, 8.0212, 3.0, 0.0, 0.0, 7.0074, 0.0, 7.5407, 7.3346], [11.7481, 2.0494, 13.5515, 0.0, 13.4074, 12.0221], [0.0, 1.0, 0.0, 2.0785, 0.0, 0.0, 0.0, 2.9964, 6.2872, 3.9929, 1.1585, 1.0, 0.0, 8.48, 6.1481, 4.1275, 1.0296, 0.0, 1.0515, 0.0, 2.9852, 4.011], [0.0, 13.8571, 13.3016, 13.302, 12.7926, 0.0, 11.9706, 0.0, 13.7259, 0.9963], [0.0, 18.5679, 0.0, 10.679, 0.0, 16.8983, 9.8881, 0.0, 9.3556, 9.5846], [2.0, 13.0988, 0.0, 15.8568, 1.0, 0.0, 3.0, 31.9831, 16.6354, 13.0256, 11.3617], [18.2564, 17.9645, 0.0, 34.1304, 0.0, 14.08, 12.9577, 20.557, 12.7333, 0.0, 10.4632], [10.6173, 16.2103, 19.5816, 47.7609, 0.0, 20.4, 23.1852, 15.3758, 7.6074, 0.0, 16.5294, 0.0, 9.2963, 11.136], [3.0, 13.8642, 0.0, 15.6952, 0.0, 0.0, 20.0866, 15.6564, 17.3333, 13.1957, 0.0, 22.0629, 13.1164, 27.7047, 10.7556, 0.0, 7.9118, 0.0, 8.1852, 9.6801], [1.0, 16.2716, 2.9706, 14.8938, 1.0, 0.0, 4.5238, 18.9661, 17.213, 18.6051, 22.0851, 3.3659, 35.413, 0.0, 19.0971, 16.1852, 22.6913, 14.5481, 4.0123, 13.5368, 0.0, 16.8074, 13.3787], [0.0, 19.5679, 3.9706, 18.6605, 0.0, 0.0, 2.0, 22.6441, 16.5451, 21.6821, 16.0, 0.0, 31.5, 3.9643, 22.2229, 15.2434, 17.0, 17.4667, 0.0, 10.2426, 0.0, 17.8963, 11.6176], [0.0, 16.0123, 3.1765, 13.7413, 0.0, 0.0, 1.4762, 35.5763, 22.556, 24.3846, 15.2482, 9.2805, 0.0, 16.6343, 17.6402, 25.2013, 14.4815, 0.0, 18.8897, 0.0, 12.1333, 11.8676], [0.0, 23.4444, 0.9706, 19.8568, 1.0167, 0.0, 27.2154, 17.1418, 13.6585, 14.3696, 0.9643, 36.1371, 22.2698, 22.9799, 20.1407, 3.679, 14.375, 2.0, 14.5778, 10.1801], [2.0, 28.1358, 2.9706, 13.0277, 0.05, 0.0, 1.0, 26.322, 29.278, 32.2256, 18.6738, 2.0, 38.913, 2.9643, 16.8466, 24.5839, 16.0815, 3.0123, 20.9779, 0.0, 20.6, 15.0588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

