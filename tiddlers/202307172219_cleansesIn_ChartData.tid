created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Requiem", "Shaca Booey", "Lord Erin The Wise", "Bee Nemesis", "Willow Starrdust", "Xx Zen Xx", "Klengah", "Aira Draugr", "Cat Wigglebooty", "Dizzy Bunnyhopper", "Oo Dads Mad", "Cedryn X", "Sygaldry Verdandi", "Xanvias Einzbern", "Belvyn Brightblade", "Permanent Dawn", "Tootsy Pop Star", "Soweng", "Legacy Of Mathus", "I Mad X King I", "Inedible Plant", "Black Raspberry Pie", "Johosh The Mighty", "Koralia Danai", "Ateriuz", "Venomina", "Rina Of Theros", "Lucky Luprac\u00e1n", "Tribal S", "Rozaalyna", "Daphne Agla\u00e9", "Solus Sanctus", "Primal Clone", "Morton Saltbringer", "Glorious Gluvs", "Crusader Siolith", "Ryvalia Fazebringer", "Bella Sassy", "Drumina", "Mistwalker Cael", "Cyclotechnist Farra", "Duke Silvver", "Miphest\u00f6", "Drevarr Moonwillow", "Sub Train", "Eibh\u00ebar", "Newtype Khan", "Be\u00eb", "High Sorcer Baradun", "Tegan Parker"];
const professions = ["Scourge", "Berserker", "Weaver", "Berserker", "Herald", "Druid", "Druid", "Herald", "Scrapper", "Holosmith", "Berserker", "Berserker", "Firebrand", "Berserker", "Firebrand", "Weaver", "Scourge", "Reaper", "Berserker", "Holosmith", "Vindicator", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Scourge", "Scourge", "Scrapper", "Druid", "Scourge", "Scourge", "Firebrand", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Vindicator", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Spellbreaker", "Scourge", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1728, 0.2067, 0.0, 0.4375, 0.1564, 0.1962], [0.2716, 0.3073, 0.0, 0.375, 0.1469, 0.1646], [0.2881, 0.2291, 0.0, 0.3125, 0.1848, 0.2152], [0.0302, 0.0843, 0.4141, 0.1996, 0.3128, 0.0, 0.3281, 0.109, 0.2785], [0.0, 0.2338, 0.243, 0.1028], [0.0669, 0.6263, 0.2593, 0.1844, 0.0, 0.4531, 0.0995, 0.3671], [0.1472, 0.1686, 0.7273, 0.1708, 0.1676, 0.0, 0.5625, 0.0806, 0.1076], [0.0, 0.1785, 0.1918, 0.1636, 0.2189], [0.1094, 0.1948, 0.8586, 0.2181, 0.1117, 0.0938, 0.5, 0.128, 0.3228], [0.0914, 0.1765, 0.0748, 0.0642, 0.0262, 0.4949, 0.1481, 0.2626, 0.0312, 0.25, 0.1137, 0.2215], [0.0, 0.2147, 0.1509, 0.3084, 0.2566], [0.0755, 0.1586, 0.1776, 0.216, 0.419, 0.0, 0.5625, 0.0095, 0.519], [0.0, 0.2253, 0.2174, 0.0047, 0.1626, 0.2011, 0.0, 0.3125, 0.0521, 0.2975], [0.0087, 0.238, 0.1714, 0.0374, 0.2623, 0.0843, 0.303], [0.0, 0.2455, 0.1509, 0.271, 0.2849], [0.0, 0.1573, 0.0818, 0.2056, 0.1566, 0.0785, 0.5051, 0.1255, 0.0726, 0.0312, 0.1875, 0.1374, 0.1076], [0.0, 0.1424, 0.1918, 0.3692, 0.2528, 0.1599, 0.5152], [0.0, 0.1816, 0.1075, 0.2019, 0.0523, 0.8384, 0.2181, 0.162, 0.0, 0.8438, 0.0853, 0.1329], [0.0, 0.237, 0.2046, 0.257, 0.2981, 0.1047, 0.5253], [0.2566, 0.1105, 0.6263, 0.3477, 0.5028, 0.0, 0.3125, 0.1848, 0.3228], [0.0, 0.2072, 0.2072, 0.2991, 0.2208, 0.0785, 0.5859, 0.1399, 0.1899, 0.0625, 0.3281, 0.1043, 0.1962], [0.0174, 0.17, 0.1458, 0.2897, 0.2283, 0.1221, 0.7172, 0.2078, 0.2346, 0.0938, 0.5312, 0.0853, 0.0886], [0.0, 0.204, 0.1381, 0.271, 0.2472, 0.0698, 0.7172, 0.2016, 0.2235, 0.0, 0.2812, 0.109, 0.2722], [0.0087, 0.2306, 0.1969, 0.4159, 0.2679, 0.0872, 0.7879, 0.1461, 0.095, 0.0, 0.1562, 0.0427, 0.1519], [0.0, 0.2253, 0.1586, 0.1776, 0.2925, 0.1105, 0.7172, 0.1872, 0.2067, 0.0, 0.2188, 0.0948, 0.2152], [0.0, 0.1849, 0.1176, 0.0935, 0.2264, 0.0494, 0.596, 0.3066, 0.3073, 0.0312, 0.4062, 0.2891, 0.2785], [0.0, 0.169, 0.1765, 0.3364, 0.2642, 0.0291, 0.8586, 0.2531, 0.1453, 0.0, 0.4375, 0.1517, 0.2532], [0.0, 0.1658, 0.1483, 0.2944, 0.2698, 0.1192, 0.4949, 0.2695, 0.324, 0.0, 0.4688, 0.1564, 0.1646], [0.0261, 0.2646, 0.1662, 0.4112, 0.1981, 0.1279, 0.7576, 0.1605, 0.0726, 0.0, 0.3125, 0.109, 0.1646], [0.0, 0.2349, 0.3171, 0.3458, 0.0302, 0.061, 1.0404, 0.2984, 0.352, 0.0312, 0.3906], [0.0, 0.204, 0.2455, 0.229, 0.2075, 0.1802, 0.8586, 0.1584, 0.1061, 0.0, 0.3594, 0.2322, 0.2025], [0.0, 0.271, 0.1995, 0.2009, 0.2415, 0.0785, 0.5657, 0.2202, 0.162, 0.4375, 0.109, 0.1392], [0.0, 0.2168, 0.1432, 0.2523, 0.2736, 0.1163, 0.6768, 0.2058, 0.1676, 0.0, 0.5469, 0.1137, 0.2658], [0.0, 0.2179, 0.1228, 0.2056, 0.283, 0.0872, 1.0, 0.2551, 0.1564, 0.0, 0.2344, 0.1422, 0.3291], [0.0087, 0.2083, 0.1228, 0.2897, 0.317, 0.0814, 0.4949, 0.2798, 0.2291, 0.0, 0.5312, 0.0853, 0.3797], [0.0, 0.2465, 0.1867, 0.0841, 0.2962, 0.1076, 0.9697, 0.2531, 0.1676, 0.0, 0.4375, 0.1517, 0.1139], [0.0, 0.186, 0.2404, 0.2991, 0.3585, 0.0727, 0.7172, 0.1728, 0.2179, 0.0312, 0.5625, 0.2417, 0.2722], [0.0, 0.2434, 0.2148, 0.3224, 0.3642, 0.061, 0.798, 0.1646, 0.2123, 0.0, 0.3594, 0.0948, 0.2468], [0.0, 0.2444, 0.1509, 0.1822, 0.3019, 0.0988, 1.202, 0.2202, 0.1285, 0.0, 0.6719, 0.1564, 0.1835], [0.0174, 0.2444, 0.1535, 0.3411, 0.2547, 0.1279, 0.8485, 0.284, 0.1732, 0.0, 0.2969, 0.0995, 0.2848], [0.0, 0.2423, 0.1535, 0.3364, 0.2434, 0.0233, 0.9192, 0.2531, 0.2961, 0.0, 0.3906, 0.1943, 0.3924], [0.0, 0.2657, 0.2046, 0.3178, 0.2509, 0.2035, 0.6263, 0.2119, 0.2179, 0.0, 0.2812, 0.2038, 0.1709], [0.0, 0.2434, 0.2379, 0.0467, 0.3377, 0.189, 1.0606, 0.3374, 0.3017], [0.0087, 0.2391, 0.2455, 0.3879, 0.3189, 0.1105, 0.6162, 0.1914, 0.1732, 0.0312, 0.3438, 0.218, 0.2722], [0.0, 0.2274, 0.2327, 0.3832, 0.3358, 0.1308, 0.9293, 0.2387, 0.419, 0.0, 0.2188, 0.0948, 0.3038], [0.087, 0.2253, 0.1586, 0.4579, 0.3491, 0.1744, 0.6667, 0.1914, 0.2402, 0.0625, 0.375, 0.2749, 0.4304], [0.0, 0.221, 0.2199, 0.3738, 0.3528, 0.1628, 0.9495, 0.3416, 0.2961, 0.0312, 0.6406, 0.2133, 0.4051], [0.0522, 0.2572, 0.179, 0.1916, 0.4509, 0.1483, 0.8081, 0.2984, 0.3128, 0.0, 0.6562, 0.2749, 0.3291], [0.0, 0.3603, 0.2711, 0.3879, 0.3094, 0.1424, 0.6061, 0.1872, 0.2458, 0.0312, 0.8438, 0.2986, 0.4367], [0.0, 0.3273, 0.133, 0.5093, 0.4113, 0.0988, 0.9596, 0.2366, 0.352, 0.0, 0.4375, 0.2227, 0.4304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

