created: 20230415000841000
creator: Drevarr
modified: 20230705163525509
modifier: drevarr
tags: ChartData
title: 202304150008_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Newtype Khan", "Drogo Deception", "The Fancy Cheese", "Johosh The Great", "Sassy Daddy Demon", "Kosa\u00edr", "Cat Wigglebooty", "Black Raspberry Pie", "Paul Bjart Mist Cop", "Yuuka Chou", "Primal Clone", "High Sorcer Baradun", "Elonith Primal", "Venomina The Siren", "Zadie Miststep", "Mac Chiato", "Tegan Parker", "Drevarr Moonwillow", "Stoic Rapidfire"];
const professions = ["Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1354, 0.0479, 0.5243, 0.025, 0.118, 0.04, 0.1212, 0.2807, 0.25, 0.3593, 0.0, 0.2184, 0.2193, 0.0099, 0.2045, 0.0506, 0.0475, 0.1811, 0.1083, 0.1802, 0.1429], [0.2917, 0.0539, 0.3495, 0.1125, 0.4494, 0.0267, 0.1212, 0.2526, 0.1058, 0.2515, 0.0, 0.157, 0.1404, 0.1188, 0.3295, 0.0717, 0.0363, 0.2451, 0.1083, 0.2523, 0.0974], [0.0778, 0.5243, 0.3, 0.264, 0.1067, 0.0563, 0.2456, 0.2019, 0.3114, 0.0, 0.3038, 0.0, 0.2018, 0.4356, 0.6591, 0.1139, 0.0531, 0.2117, 0.2833], [0.4375, 0.1437, 0.5631, 0.0, 0.236, 0.0, 0.0, 0.2491, 0.4904, 0.2635, 0.0, 0.2389, 0.0, 0.0, 0.2079, 0.25, 0.1013, 0.1257, 0.2006, 0.325, 0.3604, 0.2597], [0.3646, 0.1377, 0.3592, 0.0875, 0.2865, 0.0933, 0.2424, 0.2772, 0.2596, 0.4431, 0.0, 0.2833, 0.2193, 0.0891, 0.1932, 0.1139, 0.081, 0.2145, 0.175, 0.1171, 0.1558], [0.5625, 0.2635, 0.699, 0.4625, 0.691, 0.1533, 0.5411, 0.5614, 0.6058, 0.6287, 0.0, 0.0205, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.7292, 0.1677, 0.5728, 0.1, 0.4045, 0.0, 0.0, 0.2281, 0.6635, 0.3593, 0.0, 0.2867, 0.0, 0.2544, 0.3861, 0.2841, 0.135, 0.0978, 0.2925, 0.45, 0.3784, 0.1623], [0.671, 0.6877, 0.1827, 0.1078, 0.0, 0.3618, 0.4123, 0.0792, 0.0682, 0.3376, 0.3994, 0.0195, 0.4833, 0.4775, 0.1818], [0.5625, 0.1018, 0.6505, 0.15, 0.4382, 0.1333, 0.2121, 0.4491, 0.4327, 0.1737, 0.12, 0.5563, 0.0, 0.4825, 0.2574, 0.2727, 0.1224, 0.1313, 0.3426, 0.45, 0.2432, 0.0], [0.2812, 0.0838, 0.6796, 0.0875, 0.4831, 0.1867, 0.2121, 0.4561, 0.5808, 0.22, 0.4812, 0.0, 0.3158, 0.3069, 0.4318, 0.0844, 0.1816, 0.3872, 0.3167, 0.045, 0.3961], [1.875, 0.6347, 1.7379, 0.8625, 1.9438, 0.1067, 0.8095, 0.9298], [0.9479, 0.2994, 0.9417, 0.675, 0.8652, 0.0733, 0.1342, 0.3263, 0.5577, 0.8144, 0.0, 0.4096, 0.0, 0.114, 0.5644, 0.6364, 0.1772, 0.176, 0.3538, 0.1167, 0.4595, 0.2857], [1.375, 0.3533, 0.2524, 0.35, 0.8034, 0.3867, 0.671, 0.5684, 0.8462, 0.8204, 0.1, 0.9522, 0.6053, 0.6436, 0.5, 0.2658, 0.3464, 0.2953, 0.825, 0.4234, 0.7468], [0.32, 1.8567, 1.5789, 0.8416, 1.2955, 0.5612, 0.4637, 1.3565, 1.7583, 1.5676, 1.1234], [1.7292, 0.0419, 1.7864, 0.4625, 1.6573, 0.12, 0.3203, 0.7158, 1.0769, 1.2874, 0.0, 1.2218, 0.1287, 0.6932, 0.4135, 0.2933, 0.8217, 1.1833, 1.2883, 0.8831], [1.9423, 1.7904, 0.7, 2.1092, 0.0, 1.6842, 0.8812, 1.0568, 0.7679, 0.9553, 1.1058, 1.525, 0.6577, 0.974], [2.0938, 0.4671, 2.6311, 0.8875, 1.9551, 0.9, 0.7359, 1.0561, 0.7885, 1.6527, 0.04, 1.7918, 1.1491, 0.9703, 0.25, 0.1941, 0.5084, 1.337, 1.8917, 1.4054, 1.3701], [1.7604, 0.5868, 1.9612, 0.6875, 1.7191, 0.6733, 0.8918, 1.586, 1.2981, 1.6048, 0.42, 1.7201, 1.5, 0.5644, 1.2614, 0.5063, 0.567, 1.1783, 1.2583, 0.7838, 1.4156], [2.1146, 0.5689, 2.1942, 0.95, 2.1236, 1.04, 1.9307, 1.6035, 1.3558, 1.7844, 0.54, 2.058, 0.0, 1.7368, 0.6931, 0.2273, 0.8017, 0.8017, 1.5655, 1.8167, 1.3063, 1.1558], [2.6562, 0.8563, 1.0583, 1.2625, 2.5787, 1.32, 1.8615, 0.7404, 2.25, 2.5928, 0.54, 2.5768, 1.6228, 1.1188, 1.875, 0.8776, 0.8659, 1.4234, 1.9667, 1.9099, 0.6429]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

