created: 20230303232222000
creator: Drevarr
modified: 20230705163521130
modifier: drevarr
tags: ChartData
title: 202303032322_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Bloodline T", "Delynai", "Eibh\u00ebar", "Seren Nightroad", "Air One Com", "Seren\u00e1 Joy", "Smol Gluvs", "Stoic Rapidfire", "Zadie Miststep", "Grasszanine", "Venomina The Siren", "High Sorcer Baradun", "Newtype Khan", "Ryvalia Fazebringer", "Heks Appeal", "Arcanophage Farra", "Koralia Danai", "Drevarr Moonwillow", "Blanco Padre Guard", "Ravioli Fetabringer", "Aronorf Xideliesi", "Kahless The Drunk", "Viral Marketing", "Bella Sassy"];
const professions = ["Dragonhunter", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Druid", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Chronomancer", "Scourge", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 177.6667, 12.4882, 114.3072, 504.3226, 260.2962, 146.2824, 100.8694], [586.2442, 139.1813, 0.0, 502.2835, 0.0, 0.0, 203.3298], [0.0, 41.7231, 41.1509, 5.8627, 0.0, 39.5703, 0.0, 14.364, 52.6836, 44.2512, 8.5925, 19.695, 83.6288, 29.3882, 0.0, 48.6949, 98.8467, 0.0, 183.4593, 924.9643, 0.0, 0.0, 232.4506, 9.7524, 0.0, 0.7159], [0.0, 13.3569, 0.0, 0.0, 0.0, 0.0, 0.0, 8.9604, 0.0, 51.442, 0.0, 0.0, 168.8928, 24.6401, 0.0, 0.0, 238.3438, 0.0, 328.2142, 49.5365, 92.742, 0.0, 509.4202, 268.2684, 179.9424, 155.5998], [8.1382, 264.2463, 0.0, 303.4888, 0.0, 486.1285, 115.8427, 0.0, 0.0, 826.151, 133.6698, 126.6408, 119.1659], [0.0, 208.3401, 0.0, 0.0, 18.8362, 0.0, 0.0, 103.7172, 64.5, 90.5306, 0.0, 396.24, 0.0, 0.0, 181.4988, 0.0, 244.2503, 0.0, 195.3287, 30.4483, 352.9633, 0.0, 512.4787, 0.0, 41.976, 15.91], [0.0, 268.7904, 0.0, 0.0, 22.9493, 72.4647, 0.0, 36.7764, 101.136, 38.5354, 105.7291, 98.1825, 346.4288, 47.0812, 15.0134, 0.0, 286.8117, 0.0, 182.6852, 121.175, 29.6135, 0.0, 512.1389, 13.0806, 34.7688, 146.8493], [56.5937, 258.3252, 0.0, 0.0, 0.0, 175.3819, 9.2112, 0.4128, 517.1859, 0.0, 89.6448, 0.0, 0.0, 799.6435, 99.9234, 293.832, 234.1952], [0.0, 235.467, 0.0, 27.078, 0.0, 5.8674, 6.5208, 81.27, 377.4259, 36.5486, 102.8625, 235.0016, 47.0812, 0.0, 0.0, 263.0121, 354.0172, 33.7714, 0.0, 14.868, 467.28, 97.3692, 44.5896, 119.325], [0.0, 51.6375, 0.0, 0.0, 0.0, 0.0, 163.7538, 17.4876, 215.7912, 261.6352, 65.4106, 10.14, 402.96, 0.0, 0.0, 12.8986, 555.7303, 318.409, 27.2798, 0.0, 0.0, 437.3741, 75.0006, 0.0, 33.4905], [0.0, 243.8667, 49.4731, 0.0, 59.9207, 67.1979, 0.0, 47.766, 70.692, 231.7657, 57.7238, 46.9462, 218.6496, 61.3255, 0.0, 0.0, 167.9872, 0.0, 479.9358, 19.9382, 0.0, 723.5194, 99.9234, 42.2136, 215.4214], [19.059, 200.3535, 0.0, 0.0, 81.8573, 60.7992, 192.0773, 110.0328, 126.8328, 460.2125, 88.5686, 180.7163, 294.8032, 120.3518, 97.0224, 46.9466, 343.9656, 499.03, 247.9915, 3.2779, 29.0304, 748.3277], [54.619, 310.3758, 73.2477, 55.2842, 16.359, 67.1748, 144.1247, 49.4304, 176.472, 748.0297, 95.4475, 103.8375, 597.0816, 99.4102, 37.9307, 52.0421, 250.678, 71.2054, 589.3405, 268.548, 98.0827, 27.0144, 917.2282, 240.1722, 200.376, 220.9899], [0.0, 430.8633, 31.7623, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 123.5346, 0.0, 0.0, 445.2416, 170.2319, 0.0, 18.7616, 925.2327, 35.0493, 813.0525, 131.4533, 0.0, 29.3832, 1564.6234, 0.0, 291.9312, 558.2024], [7.2855, 340.8075, 46.9639, 12.6282, 17.0134, 231.5313, 63.4213, 86.0472, 100.878, 593.3348, 15.3245, 87.4575, 674.4032, 30.8377, 97.5661, 200.7065, 183.7958, 0.0, 921.1671, 257.8834, 77.7434, 18.2448, 868.2912, 150.6204, 216.2952, 337.2124], [74.7252, 113.6025, 0.0, 192.1793, 187.4334, 119.5349, 16.8948, 100.4652, 436.2431, 240.467, 263.5425, 658.5184, 301.0795, 117.1518, 147.3425, 567.717, 63.9543, 712.1628, 344.1278, 48.5616, 14.9436, 842.8032, 364.3218, 333.3528, 197.6817], [4.4132, 442.2924, 0.0, 7.807, 5.0012, 111.573, 335.5086, 102.3948, 276.4212, 1105.5425, 149.377, 262.3725, 1335.9584, 191.6733, 81.8417, 18.8469, 633.2094, 39.7604, 213.3908, 597.3732, 397.584, 267.7653], [49.1436, 194.2947, 0.0, 8.9082, 0.0, 24.486, 139.9642, 89.1936, 100.62, 769.4177, 82.6445, 149.0288, 1000.5088, 80.1679, 0.0, 0.0, 755.682, 0.0, 639.3983, 435.6274, 8.9384, 66.4272, 1139.1437, 417.2634, 580.2192, 137.2237], [11.3696, 194.7078, 192.5811, 141.9354, 126.8991, 86.163, 363.032, 72.2304, 278.9496, 634.4516, 35.545, 169.3087, 1087.408, 163.5845, 2.0352, 133.2287, 401.2932, 45.8337, 897.9444, 235.7813, 0.0, 146.16, 618.5088, 464.6322, 307.5336, 325.3595], [185.0103, 560.5767, 30.9468, 0.0, 32.8738, 41.0487, 308.7319, 120.2244, 29.9796, 767.2052, 86.5613, 287.3812, 1526.576, 171.7313, 4.419, 24.6033, 389.1328, 0.0, 494.3855, 451.8562, 41.9897, 0.0, 882.2246, 137.772, 241.164, 518.7455], [196.5146, 660.8223, 103.8809, 0.0, 69.1908, 96.5118, 0.0, 0.0, 17.3892, 588.1722, 152.437, 7.605, 949.584, 202.6189, 21.3421, 117.3879, 512.474, 0.0, 1134.0418, 344.8234, 0.0, 128.5452, 1209.8304, 126.4716, 386.8128, 366.5664], [10.472, 537.8562, 3.7847, 33.2518, 71.1539, 114.0678, 388.1018, 120.0648, 269.6616, 877.8332, 132.3144, 296.1075, 1067.3184, 119.2523, 4.7257, 102.3573, 618.7906, 1177.907, 319.7074, 75.2489, 141.0192, 1531.319, 372.4488, 554.4, 270.6291], [131.5314, 171.008, 197.8812, 138.8556, 945.8694, 202.8658, 349.0987, 976.6816, 286.1355, 81.3399, 115.1493, 721.4592, 13.3528, 928.1339, 332.3813, 58.0917, 113.7024, 2075.4029, 779.418, 417.78, 261.1626], [25.2824, 615.2436, 179.7215, 22.6474, 27.3585, 145.6455, 357.5914, 79.6404, 311.9736, 1636.1881, 16.7198, 311.8537, 1496.6752, 293.0827, 0.0, 205.8446, 554.8617, 1611.1393, 528.2861, 33.1952, 137.2392, 2176.6752, 364.0122, 720.8784, 624.1493]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

