created: 20230426221022000
creator: Drevarr
modified: 20230705163526835
modifier: drevarr
tags: ChartData
title: 202304262210_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Zefirokai", "Viral Marketing", "Eibh\u00ebar", "Ryvalia Fazebringer", "Raelyn Sunray", "Black Raspberry Pie", "Primal Clone", "Zadie Miststep", "Mac Adaymia", "\u00c1rkantor", "Lucas Ryn", "Sister Elon\u00edth", "Drevarr Moonwillow", "Miphest\u00f6", "Bella Sassy", "High Sorcer Baradun", "Zaylen Harker", "Sygaldry Verdandi", "Koralia Danai", "Johosh The Great", "Jupi Jupi Jupi"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.5997, 39.2198, 113.9328, 236.5195, 706.5349], [44.2702, 40.2325, 116.2094, 62.4442, 75.5053, 793.2716], [68.8867, 17.7408, 80.5632, 343.5518, 866.3298], [10.7022, 334.7058, 55.6818, 68.2717, 41.4374, 46.656, 68.8512, 469.1652, 77.6597, 202.2692, 16.9317, 77.691, 147.862, 20.2356, 54.5569, 430.1543], [30.2549, 352.6692, 117.4643, 33.6916, 46.7597, 33.6384, 63.5309, 437.5778, 91.9834, 224.0227, 31.8458, 79.4084, 164.97, 26.6706, 61.3879, 448.9087], [557.232, 431.7006, 94.4459, 30.4128, 91.9296, 202.7198, 773.4258, 78.7315], [33.9346, 420.8568, 151.8495, 34.58, 70.8365, 63.36, 92.4797, 427.8229, 115.9536, 239.2883, 30.2832, 131.9929, 137.9638, 0.0, 56.2874, 457.2884], [39.8509, 318.2088, 130.4419, 11.0711, 0.0, 34.8288, 72.2155, 559.7466, 106.4045, 302.0681, 20.591, 147.6129, 139.5524, 22.8294, 63.9382, 564.6275], [28.4031, 460.083, 157.1736, 60.1392, 73.0541, 35.328, 93.888, 474.2749, 163.6992, 234.7086, 36.1974, 126.8408, 215.683, 11.6622, 56.1964, 623.2849], [88.1192, 513.6066, 150.9621, 23.3723, 67.0349, 51.3792, 84.421, 618.2761, 75.4186, 442.7024, 8.5252, 165.2774, 103.259, 38.2734, 79.6495, 505.172], [8.3453, 611.8554, 242.8039, 46.4029, 8.9971, 31.1808, 102.3379, 591.7985, 81.6547, 354.7344, 0.0, 175.0092, 49.0022, 0.0, 62.5264, 850.732], [0.0, 0.0, 69.3888, 98.5042, 1139.4676, 256.2672, 808.6952, 22.4305, 243.1319, 218.3714, 38.1744, 71.68, 1250.161], [380.893, 1067.0654, 120.8558, 463.6108, 520.9386, 0.0, 184.8469, 2055.8026], [114.9109, 1224.0774, 340.7462, 152.1248, 196.416, 57.2928, 218.2896, 1004.7568, 295.1458, 476.8592, 16.9515, 219.8246, 396.0502, 26.0568, 98.503, 1146.0142], [7.2631, 1420.2084, 388.22, 100.2548, 21.0355, 157.2864, 121.4285, 1065.6089, 323.3059, 656.23, 19.4833, 225.0586, 453.4842, 0.0, 120.9542, 1282.4824], [121.188, 1059.474, 413.177, 58.9091, 206.5536, 180.0192, 291.5222, 2009.5135, 193.321, 733.8937, 34.4172, 319.1056, 267.3736, 10.395, 148.7336, 1309.6165], [21.7172, 2806.6896, 1200.0435, 413.9354, 571.3171, 193.8816, 112.8221, 985.2469, 53.2022, 188.5302, 17.9009, 50.1311, 78.4524, 18.3744, 18.7169, 716.2589], [150.3125, 1016.2152, 568.1322, 97.9996, 49.104, 141.3504, 144.1181, 1590.052, 236.6818, 816.328, 14.1031, 352.39, 335.439, 0.0, 169.09, 2096.9026], [38.2636, 1592.5104, 708.0024, 180.0759, 189.5098, 166.08, 372.3442, 2285.9029, 270.2986, 901.6245, 84.6584, 396.2241, 455.806, 0.0, 168.6802, 1944.0742], [128.6675, 1850.2302, 528.0901, 104.2185, 143.0669, 162.624, 360.2952, 2269.1802, 449.101, 1073.3625, 21.8371, 497.7131, 501.8754, 0.0, 201.0136, 2138.8008], [169.8651, 1528.722, 688.1477, 184.7914, 146.4883, 124.5312, 257.6443, 2069.9011, 297.0946, 1193.5791, 23.914, 547.4353, 554.788, 55.44, 212.1253, 2531.0473], [199.5669, 2132.5122, 727.6352, 160.2573, 303.9379, 161.472, 453.2443, 2201.8248, 444.229, 1044.167, 120.7569, 481.4389, 633.1182, 7.6626, 238.1742, 1775.6835]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

