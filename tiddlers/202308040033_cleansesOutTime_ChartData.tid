created: 20230804003338000
creator: Drevarr
tags: ChartData
title: 202308040033_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elon\u00edth", "Scarlet Merc\u00fcry", "Jerryatric Reflexes", "Chocolate Teapot", "Gwyn Ghosthouse", "Surethang", "Rafaellagabriela", "World Devourerer", "Tirluka", "Eternal Depravity", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Firebrand", "Spellbreaker", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Guardian", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 15.0091, 0.0, 10.007, 0.0, 1.9946, 5.2889, 0.0, 1.0, 8.0083, 0.0, 6.1047, 0.0, 0.0, 0.0, 0.996, 0.0], [4.0182, 0.0, 0.0, 19.0091, 0.0, 26.0704, 0.0], [28.1182, 0.0, 15.9918, 16.0141], [3.0182, 0.0, 0.0, 23.0576, 0.0, 13.0328, 25.0211, 1.9902, 0.0, 0.0, 0.0, 4.0, 8.5868, 0.0, 4.0116, 0.0, 0.0, 0.0, 0.0, 0.996, 0.96], [0.0, 0.0, 4.9333, 24.0121, 1.0, 26.9344, 24.5282, 0.0, 0.0, 0.0, 1.0, 1.0, 9.0165, 0.0, 6.0233, 0.0, 0.0, 1.9825, 2.0, 0.0], [4.0182, 18.5778, 49.1667, 0.0, 30.9836, 19.6197], [0.0, 0.0, 10.2667, 62.8576, 0.0, 22.9836, 0.0, 2.9804, 6.9946, 8.0667, 1.0, 13.0565, 16.0992, 0.0, 18.686, 0.973, 0.9773, 0.0, 0.0, 11.0952, 10.0], [7.0364, 0.0, 0.0, 51.8576, 0.0, 51.7869, 53.1127, 13.8137, 19.0978, 0.0, 0.0, 11.0887, 6.0083, 0.0, 11.0465, 0.0, 0.0, 7.9825, 0.0, 22.3532, 28.72], [4.0333, 13.9556, 107.2545, 20.0164, 5.0, 21.7647, 28.0924, 21.2, 13.2951, 19.1774, 34.9339, 14.1714, 2.0, 0.0, 0.0, 16.6316, 0.0], [43.4, 11.1667, 22.2222, 99.2727, 0.0, 42.4754, 60.3944, 29.2157, 16.9946, 30.2222, 13.0656, 50.5, 32.438, 7.1714, 22.4186, 0.9773, 5.1579], [61.2909, 54.6444, 146.0636, 4.1333, 83.6475, 130.8239, 56.098, 59.8043, 39.6667, 5.0164, 65.3871, 70.1157, 2.0, 12.093, 0.0, 12.5909, 24.8772, 12.4762, 64.5992, 9.88]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

