created: 20230429215910000
creator: Drevarr
modified: 20230705163527557
modifier: drevarr
tags: ChartData
title: 202304292159_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuuka Chou", "Blancooo Padreee", "Venomina The Fierce", "Fribble Bibble", "Stark Gandalf", "Newtype Khan", "Drevarr Moonwillow", "Kaotic Reaper Z", "Magister Boombottom", "Fallendruid"];
const professions = ["Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[140.863, 16.3157, 29.5047, 47.0525, 73.738, 546.6371, 225.3955], [0.0, 0.0, 0.0, 36.8368, 269.7773, 194.3222, 60.138, 0.0, 0.0, 182.9327, 0.0, 35.9919, 77.4094, 159.3072, 196.9274], [41.2096, 71.6543, 0.0, 0.0, 391.7888, 196.9498, 0.0, 239.9737, 118.2952, 0.117, 110.2348, 0.0, 71.2733, 0.0, 0.0, 113.9369], [10.4908, 205.5329, 50.5411, 10.3684, 640.9626, 516.936, 62.1418, 234.3069], [503.2272, 74.914, 573.7396, 71.2478, 35.3674, 245.4625, 96.4314, 52.8815, 97.2624, 195.6357], [0.0, 58.32, 78.331, 97.6513, 0.0, 142.88, 77.9645, 67.942, 826.0724, 149.4259, 0.0, 193.3668, 131.1795, 0.0, 83.0562, 82.8945, 0.0, 1.5926, 51.1336, 72.3879], [65.7678, 72.7968, 0.0, 103.1814, 69.3491, 174.2422, 76.6176, 186.5668, 1266.1507, 436.511, 407.5506, 140.6198, 346.3844, 17.9478, 79.6572, 22.3588, 80.408, 367.6444], [28.1299, 376.0316, 1543.3324, 576.5693, 48.1905, 594.6723, 107.9325, 0.0, 316.1648, 113.8621, 69.5884, 47.025, 48.944, 277.5497], [102.3907, 259.0308, 26.111, 130.378, 85.7146, 225.2712, 1736.8123, 661.1069, 20.7014, 81.3645, 26.0467, 313.4089, 58.3151, 82.0729, 26.0957, 85.3576, 358.3874], [68.8432, 280.7923, 16.2883, 152.4845, 552.0368, 2881.5954, 1495.6301, 160.6826, 1175.6979, 251.6273, 68.4258, 3.9913]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

