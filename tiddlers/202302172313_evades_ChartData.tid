created: 20230217231312000
creator: Drevarr
modified: 20230705163519459
modifier: drevarr
tags: ChartData
title: 202302172313_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Daring Deathblade", "Seren Nightroad", "Cat Wigglebooty", "Air One Com", "Tyrisai", "Sumatra Satyricon", "Rina Of Theros", "Sproxz", "Legacy Of Mathus", "Tribal S", "Newtype Khan", "Husky Guard", "Blanco Padre Guard", "Ark Darkness", "Minka Bringer", "Bella Sassy", "Aronorf Xideliesi", "Panther B Me", "Johosh The Great", "Abigail Ryn", "Mac Aaroni", "Fruji", "Whose Guardian", "\u00c9\u00efbhear", "Smol Gluvs", "Sp\u00edcy Cheese", "Zaylen Harker", "Jeckyll Mbs", "K\u00f4sair", "Sister Elonith", "Veron Blackburn", "Ravioli Fetabringer", "Tegan Parker", "Drevarr Moonwillow", "Xanvias Tseli", "Koralia Danai", "Venomina The Siren", "Demon Sekhmet", "Be\u00eb", "Bambiae", "Arcanophage Farra", "Lord Erin The Wise", "Sofya De Meme", "Arka\u00f1", "Zadie Miststep", "Primal Clone", "Mistwalker Caelon", "Ryvalia Fazebringer", "Ace Hammers", "Mike The Archmagus"];
const professions = ["Scourge", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Soulbeast", "Scourge", "Tempest", "Berserker", "Druid", "Spellbreaker", "Dragonhunter", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Firebrand", "Tempest", "Tempest", "Scrapper", "Dragonhunter", "Scrapper", "Scourge", "Berserker", "Firebrand", "Berserker", "Berserker", "Berserker", "Herald", "Firebrand", "Tempest", "Scrapper", "Berserker", "Firebrand", "Tempest", "Berserker", "Scourge", "Chronomancer", "Spellbreaker", "Weaver", "Weaver", "Chronomancer", "Tempest", "Chronomancer", "Vindicator", "Chronomancer", "Vindicator", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 13, 9, 0, 3, 11, 0, 3, 14], [16, 1, 4, 21, 9, 0, 0, 1, 1, 7, 2, 3], [11, 0, 0, 4, 15, 1, 15, 0, 0, 3, 0, 0, 4, 0, 5, 3, 0, 1, 0, 6, 10, 0, 0, 0, 0, 5, 0], [12, 1, 0, 1, 12, 0, 0, 0, 3, 2, 3, 0, 0, 4, 19, 3, 1, 0, 7, 0, 3, 2, 0, 0, 0, 0, 5, 9], [3, 0, 0, 3, 22, 0, 21, 4, 0, 5, 0, 0, 8, 0, 3, 11, 7], [2, 0, 1, 16, 11, 0, 4, 1, 5, 16, 4, 0, 4, 3, 0, 2, 0, 11, 0, 0, 0, 2, 1, 1, 8, 6], [1, 0, 0, 6, 28, 18, 2, 0, 0, 0, 3, 0, 0, 0, 0, 2, 10, 0, 11, 0, 2, 7, 0, 0, 6, 0, 5, 2], [0, 30, 15, 1, 0, 11, 0, 47], [13, 0, 0, 13, 8, 4, 1, 0, 0, 16, 11, 0, 0, 16, 5, 10, 12, 0, 1], [8, 1, 0, 5, 11, 4, 11, 0, 2, 0, 36, 0, 0, 5, 25, 0, 0, 0, 2, 0, 4], [20, 3, 12, 0, 41, 0, 13, 20, 9, 0, 2, 0], [5, 0, 0, 17, 7, 1, 15, 2, 0, 21, 0, 0, 5, 18, 5, 7, 0, 6, 0, 0, 1, 0, 0, 8, 0, 6, 5], [2, 0, 0, 2, 42, 7, 5, 0, 0, 0, 4, 1, 7, 0, 12, 6, 17, 0, 0, 7, 0, 1, 9, 0, 7, 0], [23, 0, 4, 8, 2, 9, 0, 7, 37, 0, 0, 7, 18, 2, 10, 3], [4, 0, 0, 23, 18, 27, 1, 6, 1, 9, 0, 0, 31, 0, 11, 2, 0, 5, 0, 0], [7, 0, 0, 15, 17, 22, 5, 0, 0, 0, 3, 19, 0, 0, 5, 1, 0, 0, 10, 0, 10, 7, 0, 0, 10, 0, 0, 8], [19, 0, 1, 10, 14, 1, 11, 0, 1, 0, 16, 0, 0, 8, 8, 12, 3, 8, 0, 13, 2, 0, 0, 10, 0, 2, 1], [19, 0, 2, 1, 21, 1, 5, 0, 0, 1, 1, 0, 0, 10, 15, 4, 1, 0, 28, 4, 1, 7, 0, 2, 0, 0, 19, 6], [2, 0, 0, 11, 6, 38, 0, 0, 4, 0, 8, 2, 0, 5, 10, 2, 1, 22, 0, 12, 0, 0, 0, 9, 0, 12, 7], [5, 0, 1, 5, 10, 3, 50, 5, 2, 44, 8, 4, 0, 8, 2, 0, 4], [15, 0, 5, 17, 17, 2, 1, 2, 0, 16, 43, 0, 8, 0, 6, 21], [11, 1, 0, 10, 5, 3, 16, 0, 1, 2, 14, 0, 0, 1, 7, 0, 13, 0, 20, 0, 5, 2, 0, 0, 7, 0, 10, 31], [8, 0, 0, 8, 13, 18, 2, 3, 0, 6, 9, 15, 3, 10, 2, 19, 0, 9, 4, 0, 0, 7, 0, 13, 11], [5, 1, 0, 3, 34, 6, 11, 0, 0, 12, 13, 0, 12, 19, 1, 3, 0, 21, 0, 9, 0, 0, 1, 0, 0, 0, 10], [4, 13, 0, 7, 22, 21, 15, 0, 2, 1, 2, 8, 0, 6, 3, 8, 6, 0, 2, 0, 5, 4, 0, 0, 16, 0, 7, 13], [9, 0, 4, 21, 43, 0, 6, 0, 25, 11, 5, 3, 8, 2, 0, 10, 0, 8, 2, 0, 1, 6, 0, 10], [32, 0, 2, 15, 11, 23, 0, 0, 0, 0, 1, 10, 0, 9, 7, 4, 3, 0, 15, 0, 9, 5, 0, 2, 22, 0, 5], [6, 0, 0, 14, 41, 1, 52, 0, 2, 0, 31, 0, 12, 5, 0, 0, 0, 1, 1, 2, 0, 0, 6, 0, 3, 3], [21, 0, 1, 12, 30, 0, 20, 0, 2, 2, 18, 5, 0, 4, 14, 3, 6, 0, 6, 0, 20, 11, 0, 0, 0, 0, 2, 5], [9, 5, 0, 10, 14, 4, 0, 0, 0, 0, 18, 10, 11, 7, 6, 9, 0, 35, 1, 9, 15, 0, 2, 0, 0, 9, 13], [14, 6, 0, 34, 15, 1, 26, 0, 1, 5, 18, 14, 15, 18, 1, 26, 0, 0], [15, 0, 1, 11, 6, 23, 25, 0, 2, 0, 4, 11, 0, 12, 4, 4, 6, 0, 25, 0, 5, 3, 0, 2, 12, 0, 6, 22], [16, 3, 0, 4, 25, 0, 3, 2, 6, 1, 0, 10, 16, 6, 5, 0, 22, 0, 26, 1, 0, 6, 7, 0, 1, 40], [3, 0, 0, 3, 32, 30, 23, 1, 4, 10, 28, 0, 1, 4, 10, 0, 18, 0, 2, 11, 0, 0, 0, 0, 9, 15], [19, 0, 3, 6, 20, 10, 24, 2, 0, 7, 12, 8, 4, 23, 4, 0, 9, 0, 13, 8, 0, 0, 0, 0, 3, 30], [6, 1, 0, 16, 25, 15, 3, 0, 0, 24, 12, 12, 17, 9, 6, 21, 0, 24, 2, 0, 0, 12, 0, 2, 3], [16, 0, 0, 10, 22, 6, 42, 2, 0, 5, 11, 1, 8, 16, 6, 3, 23, 0, 20, 1, 4, 2, 1, 2, 10, 7], [13, 0, 2, 28, 24, 4, 7, 0, 0, 3, 20, 2, 7, 18, 17, 19, 20, 3, 5, 6, 0, 3, 4, 0, 9, 13], [17, 0, 0, 12, 26, 16, 5, 0, 2, 3, 18, 29, 0, 35, 11, 10, 4, 0, 21, 0, 0, 11, 0, 0, 5, 0, 10, 0], [2, 3, 0, 32, 14, 41, 4, 0, 0, 22, 0, 0, 22, 7, 8, 10, 48, 0, 11, 0, 0, 8, 2, 0, 2, 11], [2, 0, 0, 26, 15, 14, 11, 15, 1, 23, 22, 9, 24, 9, 5, 0, 27, 1, 1, 14, 0, 4, 4, 0, 4, 18], [22, 0, 0, 6, 25, 48, 7, 0, 0, 0, 25, 1, 0, 11, 52, 5, 16, 0, 9, 1, 1, 5, 6, 5, 3, 1], [44, 4, 0, 8, 13, 0, 32, 0, 4, 3, 1, 0, 5, 22, 8, 6, 0, 56, 0, 12, 14, 1, 0, 5, 1, 9, 13], [25, 0, 2, 17, 32, 6, 29, 0, 0, 11, 32, 23, 0, 12, 12, 6, 34, 0, 16, 0, 4, 1, 0, 1], [33, 0, 0, 2, 16, 0, 31, 0, 1, 0, 3, 57, 0, 3, 23, 18, 1, 62, 0, 0, 18, 0, 2, 8, 0, 6, 0], [35, 0, 1, 17, 23, 36, 1, 13, 3, 42, 28, 0, 10, 9, 0, 8, 54, 0, 1, 1, 0, 0, 5, 0, 19, 17], [14, 8, 0, 17, 32, 13, 8, 0, 3, 6, 39, 5, 3, 13, 21, 2, 21, 0, 13, 0, 4, 11, 1, 15, 8, 5, 52, 13], [13, 1, 0, 16, 34, 22, 11, 0, 0, 0, 58, 17, 0, 23, 18, 34, 15, 21, 0, 3, 12, 0, 2, 13, 0, 1, 39], [15, 9, 4, 30, 55, 1, 58, 12, 3, 35, 2, 12, 0, 17, 22, 18, 0, 12, 23, 0, 0, 2, 0, 42, 4], [17, 7, 1, 23, 8, 8, 23, 0, 0, 6, 58, 27, 0, 2, 0, 40, 32, 44, 0, 5, 19, 0, 2, 40, 0, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

