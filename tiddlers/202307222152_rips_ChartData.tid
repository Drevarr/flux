created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Aronorf Xideliesi", "Nina Chan Fanboy", "Venomina The Sly", "Zaedy Zae", "Dakk Regia", "Name Is What", "Sirius Quack", "Newtype Khan", "Daphne Agla\u00e9", "Rahani Sunray", "Be\u00eb"];
const professions = ["Berserker", "Firebrand", "Druid", "Druid", "Druid", "Chronomancer", "Scourge", "Reaper", "Spellbreaker", "Scourge", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1429, 0.0707, 0.0, 0.0485, 0.046, 0.0606, 0.0, 0.0, 0.055, 0.0, 0.0286, 0.0127, 0.0366, 0.0, 0.0408, 0.0345, 0.0278, 0.0, 0.0179], [0.0, 0.0236, 0.0291, 0.0, 0.0152, 0.0, 0.0, 0.1651, 0.0, 0.0286, 0.0696, 0.0854, 0.1159, 0.0204, 0.069, 0.0625, 0.0, 0.0357], [0.0943, 0.0, 0.0583, 0.046, 0.0909, 0.0, 0.0, 0.0367, 0.0, 0.0857, 0.0633, 0.0976, 0.0435, 0.0612], [0.0714, 0.0806, 0.0, 0.068, 0.069, 0.0303, 0.0, 0.0185, 0.0917, 0.0759, 0.0732, 0.0435, 0.1429, 0.2414, 0.0486, 0.0526, 0.0714], [0.0, 0.1336, 0.0, 0.0874, 0.0805, 0.0909, 0.0, 0.0556, 0.0642, 0.0395, 0.0571, 0.0886, 0.1341, 0.058, 0.0408, 0.1379, 0.0208, 0.0526, 0.0446], [0.0196, 0.0097, 0.1149, 0.1667, 0.0, 0.0, 0.4404, 0.0, 0.6, 0.0696, 0.4024, 0.1304, 0.3878, 0.2917, 0.0, 0.0446], [0.1786, 0.1061, 0.3495, 0.2874, 0.6061, 0.029, 0.0, 0.6881, 0.0, 0.5429, 0.3038, 0.3171, 0.0435, 0.9796, 1.6207, 0.5278, 0.0526, 0.4643], [0.2857, 0.3143, 0.0, 0.2136, 0.2184, 0.2576, 0.0, 0.0, 0.4771, 0.0, 0.6571, 0.4051, 0.6341, 0.4783, 0.5714, 1.1034, 0.2917, 0.0, 0.1696], [0.5, 0.4106, 0.0, 0.3689, 0.2874, 0.5455, 0.0, 0.4771, 0.0, 0.6857, 0.1203, 0.5732, 0.0, 0.8163, 0.5139, 0.0, 0.1161], [0.25, 0.3674, 0.0, 0.1942, 0.2414, 0.1667, 0.0, 0.0, 0.7156, 0.3038, 0.6341, 0.1159, 1.0612, 1.0345, 0.5486, 0.0526, 0.2768], [0.6287, 0.0435, 0.3592, 0.3333, 0.8485, 0.0, 0.1111, 1.055, 0.1974, 0.8, 0.3291, 1.6341, 0.3478, 0.6939, 1.8621, 0.2105, 0.6161], [0.4286, 0.6208, 0.0, 0.5825, 0.5862, 0.4697, 0.058, 0.0, 1.5046, 0.0, 1.4857, 0.1962, 1.1707, 0.3913, 1.102, 1.0, 0.75, 0.1053, 0.4821]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

