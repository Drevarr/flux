created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Ateriuz", "Jmbrage Rev", "Necrotic Windrunner", "Oo Dads Mad", "Sister Elon\u00edth", "Darks Na", "Dark Sidiuz", "N\u00edcki M\u00edraj", "Mar\u00eda Callas", "Narnia Honeyspark", "Mellody Moon", "Rina Of Theros", "Jmbrage Warrior", "Aira Draugr", "Meme Soulmessor", "Squishy Jellyfish", "Morton Saltbringer", "Latedoctor", "Leafzel", "Drevarr Moonwillow", "Grasszanine", "Sub Train", "Kurn The Drunk", "Solus Luxes", "Etchery Howls", "Venomina", "Raelyn Sunray", "Bella Sassy", "Klengah", "Mike The Archmagus", "Glorious Gluvs", "Xanvias Einzbern", "Arcanophage Farra", "Alhana Lafay", "Daphne Agla\u00e9", "Tegan Parker", "Lord Erin The Wise", "Be\u00eb", "Arriasa", "Mistwalker Cael", "Jimbo The Pleb", "Koralia Danai", "Eibh\u00ebar", "Zaedy Zae", "Cat Wigglebooty", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Primal Clone", "Black Raspberry Pie", "Cedryn X"];
const professions = ["Berserker", "Vindicator", "Reaper", "Berserker", "Firebrand", "Dragonhunter", "Reaper", "Chronomancer", "Dragonhunter", "Druid", "Dragonhunter", "Reaper", "Berserker", "Herald", "Reaper", "Firebrand", "Chronomancer", "Reaper", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Reaper", "Firebrand", "Druid", "Reaper", "Firebrand", "Firebrand", "Druid", "Weaver", "Berserker", "Berserker", "Spellbreaker", "Reaper", "Reaper", "Tempest", "Tempest", "Reaper", "Druid", "Herald", "Berserker", "Firebrand", "Chronomancer", "Druid", "Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18, 22, 15, 15, 0], [0, 0, 0, 0, 0, 0, 27, 22, 29], [18, 0, 0, 0, 22, 0, 9, 21, 12, 9, 0], [35, 0, 0, 0, 0, 0, 12, 14, 36, 0, 0], [0, 0, 0, 0, 13, 15, 0, 0, 0, 41, 9, 20, 0], [23, 36, 41, 6], [0, 0, 0, 0, 0, 9, 22, 44, 0, 34], [7, 0, 0, 0, 9, 29, 2, 42, 11, 17, 9, 0], [21, 0, 0, 8, 25, 39, 23, 0, 14], [14, 0, 37, 50, 24, 8, 0], [0, 0, 0, 36, 0, 0, 103], [4, 0, 0, 0, 0, 0, 12, 7, 8, 0, 30, 53, 19, 7, 0], [0, 17, 25, 70, 22, 9], [4, 0, 0, 0, 0, 82, 26, 32], [0, 0, 0, 10, 0, 0, 23, 42, 69], [70, 12, 73, 0], [0, 0, 0, 12, 1, 3, 3, 31, 21, 37, 0, 8, 25, 14, 5, 6], [0, 0, 0, 0, 95, 29, 37, 0, 7], [0, 0, 0, 0, 0, 0, 0, 27, 22, 3, 44, 8, 19, 35, 17], [0, 0, 0, 0, 0, 0, 0, 16, 5, 33, 0, 30, 8, 48, 40, 0], [0, 0, 0, 0, 2, 17, 33, 23, 38, 1, 50, 17], [0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 85, 36, 13, 0, 21], [15, 0, 0, 0, 0, 20, 18, 7, 0, 42, 16, 20, 21, 41], [0, 0, 0, 0, 0, 0, 0, 41, 41, 24, 0, 24, 15, 20, 40, 0], [0, 7, 0, 2, 25, 39, 60, 5, 43, 6, 20], [0, 0, 0, 0, 0, 0, 96, 14, 22, 0, 33, 4, 4, 22, 15], [0, 18, 70, 35, 23, 27, 21, 16], [0, 0, 0, 0, 32, 5, 67, 19, 22, 27, 23, 20], [0, 0, 0, 0, 0, 0, 8, 18, 0, 22, 0, 54, 37, 22, 0, 57], [4, 0, 0, 12, 0, 0, 14, 17, 16, 27, 0, 0, 10, 104, 12, 7], [0, 0, 0, 0, 0, 0, 40, 49, 22, 24, 0, 22, 12, 11, 43, 10], [0, 0, 0, 20, 0, 0, 0, 33, 43, 5, 0, 44, 18, 6, 46, 19], [2, 0, 0, 15, 5, 0, 19, 19, 2, 15, 48, 20, 65, 4, 21], [17, 0, 0, 0, 75, 70, 39, 57, 0, 3], [4, 0, 0, 0, 0, 22, 46, 20, 0, 29, 11, 79, 31, 21], [0, 0, 0, 11, 26, 38, 0, 70, 21, 22, 10, 68], [0, 0, 0, 65, 38, 20, 0, 39, 29, 8, 36, 33], [0, 0, 0, 0, 0, 0, 27, 35, 39, 0, 31, 40, 44, 24, 29], [5, 0, 19, 51, 37, 40, 24, 5, 22, 29, 37], [6, 0, 0, 9, 0, 0, 3, 18, 26, 12, 0, 20, 17, 28, 18, 133], [0, 29, 31, 0, 41, 121, 31, 7, 32], [0, 0, 0, 48, 0, 0, 0, 52, 34, 8, 51, 39, 23, 24, 15], [10, 3, 0, 2, 92, 17, 32, 0, 15, 44, 23, 34, 37], [0, 0, 0, 0, 0, 0, 76, 59, 33, 5, 49, 39, 30, 27], [0, 0, 0, 0, 0, 0, 89, 48, 70, 35, 22, 54], [0, 0, 0, 0, 0, 48, 27, 34, 16, 0, 35, 12, 31, 32, 163], [0, 0, 0, 0, 0, 0, 0, 29, 40, 34, 0, 52, 28, 39, 59, 120], [12, 0, 14, 0, 2, 9, 34, 18, 100, 0, 19, 20, 31, 79, 83], [8, 3, 0, 37, 3, 0, 31, 43, 78, 14, 0, 10, 77, 80, 19, 47], [12, 0, 30, 0, 18, 78, 8, 32, 0, 32, 79, 16, 196, 17]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

