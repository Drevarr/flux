created: 20230628220723000
creator: Drevarr
modified: 20230705163539772
modifier: drevarr
tags: ChartData
title: 202306282207_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Ateriuz", "Specialist Zeff", "Shaca Booey", "Oo Dads Mad", "Lucky Leipreach\u00e1n", "I Toxicheart I", "Miphest\u00f6", "Legacy Of Mathus", "Mike The Archmagus", "Dim Og", "Cat Wigglebooty", "Rozaalyna", "Cpt Z Brannigan", "Caelon Cai", "Arriasa", "Fribble Bibble", "Drumina", "Xanvias Einzbern", "Vopiscus Zergherdus", "Tribal S", "Gaius Valerus", "My Birthday Girl", "Johosh The Mighty", "Zayde Sunsabre", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Reaper", "Berserker", "Scrapper", "Berserker", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Spellbreaker", "Weaver", "Scrapper", "Scrapper", "Reaper", "Scrapper", "Reaper", "Druid", "Scrapper", "Druid", "Berserker", "Scrapper", "Druid", "Herald", "Scrapper", "Berserker", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 148.1231, 131.5953, 118.818, 123.7975, 14.3766, 47.7657, 66.9082], [99.7792, 31.9745, 64.4301, 95.107, 69.4413, 0.0, 19.943, 7.127, 0.0, 75.3617, 75.0125, 0.0, 25.6928, 52.1645, 0.0, 21.3792, 19.9244, 54.817, 0.0, 51.6416, 0.0, 0.0, 0.0], [29.0606, 44.2874, 93.42, 6.6581, 58.4766, 67.3926, 25.2384, 4.2509, 13.5828, 39.4445, 23.3026, 64.3035, 42.8717, 10.9147, 11.5258, 28.1184, 43.8224, 26.2838, 35.6416, 47.3628, 37.72, 46.009, 21.8295, 0.0, 16.8653], [0.0, 0.0, 0.0, 13.5475, 0.0, 17.6026, 0.0, 413.4346, 119.6986, 18.9262, 0.0, 69.6658, 0.0, 0.0, 85.9685, 38.3031, 0.0, 7.1148, 20.264, 0.0, 65.2838], [52.6723, 145.4545, 99.2524, 123.3036, 155.969, 176.7165, 58.3027, 43.4164, 130.6829], [27.9493, 18.4008, 20.8946, 110.2461, 91.9926, 71.0696, 31.3698, 8.9856, 47.971, 33.5462, 35.4586, 22.491, 1.3207, 76.3075, 31.7612, 0.0, 133.5172, 89.4504, 39.606, 64.2111, 16.4934, 12.4102, 12.6144], [101.2253, 69.3962, 100.5686, 94.7268, 107.6197, 77.9017, 38.8454, 43.0931, 44.3904, 120.8586, 151.1708, 32.711, 35.9782], [0.0, 51.0252, 152.9045, 67.1643, 91.2654, 44.0603, 4.7347, 25.4947, 70.0416, 0.0, 34.9642, 11.7677, 7.1295, 8.6443, 20.6525, 62.7817, 35.7158, 69.6956, 85.3793, 41.7183, 29.1114, 63.063, 0.0, 43.2346], [51.104, 34.0673, 85.3943, 210.0042, 137.3098, 125.099, 38.5344, 27.9471, 62.8224, 62.5076, 106.1072, 124.5715, 27.1583, 24.2254], [28.3273, 317.5994, 230.3348, 165.4022, 248.2472, 62.9087, 79.7289, 62.7955], [20.1776, 23.8374, 108.6114, 162.8143, 96.9318, 103.7781, 49.146, 7.5341, 47.7015, 25.129, 35.1743, 108.7279, 21.5136, 41.4173, 16.635, 76.2106, 40.6907, 56.4034, 27.8624, 57.3973, 21.5816, 12.0173, 0.0, 66.9773], [34.0729, 15.999, 151.8206, 108.045, 89.4544, 3.9925, 8.7782, 3.9616, 20.9203, 29.4117, 126.1781, 65.2147, 79.3432, 20.7837, 63.7997, 0.0, 0.0, 172.2546, 110.4368, 0.0, 125.9913, 29.7675, 0.0, 5.0112], [0.0, 93.0162, 108.7751, 96.2703, 85.2286, 79.5652, 15.7248, 27.5698, 58.4294, 67.9239, 53.2454, 18.455, 28.1872, 3.0148, 57.4003, 47.8428, 79.7318, 158.6806, 57.0533, 71.5171, 66.2269, 43.2401, 57.5422, 55.7798], [33.5588, 38.3071, 151.5109, 270.4281, 155.0997, 16.7933, 119.2528, 18.2822, 36.4633, 61.1635, 93.7142, 105.3402, 41.161, 81.1072, 119.2123, 22.9798, 123.9365, 0.0], [55.1815, 65.3082, 86.7104, 72.324, 44.1235, 36.9308, 41.472, 36.8946, 88.7194, 58.0361, 85.1414, 78.9005, 53.6182, 52.3195, 86.6822, 24.9053, 140.7883, 104.2259, 80.5054, 81.098, 140.2209, 74.992, 60.0706, 80.2483], [31.3441, 98.7193, 165.524, 69.8985, 117.553, 19.0595, 11.9578, 24.4167, 30.6586, 73.7811, 202.8821, 34.7328, 29.6205, 113.5402, 60.3483, 55.6488, 162.8878, 104.6455, 58.5414, 97.117, 71.1774, 38.1367, 89.0266], [149.2398, 214.0663, 108.1332, 62.8925, 49.954, 37.2902, 47.7284, 46.6637, 43.1413, 78.8134, 53.9136, 46.6358, 10.2718, 79.7981, 52.0324, 120.4781, 237.0287, 111.1249, 27.7619, 114.9633, 8.8862, 0.0, 63.0374], [104.6243, 170.0917, 104.3406, 145.9808, 83.9855, 24.5376, 39.2662, 63.0989, 20.7204, 86.2281, 118.1434, 46.2315, 18.9161, 63.4118, 12.7595, 75.7704, 166.3011, 145.873, 52.7703, 93.7375, 34.0232, 34.7023, 70.1222], [49.1176, 104.5234, 144.7754, 79.9974, 102.5158, 95.5353, 13.4093, 9.8368, 33.7613, 54.9186, 114.3529, 39.9168, 92.4263, 55.4677, 131.2354, 42.1296, 137.9587, 203.3716, 167.2608, 41.756, 118.9357, 47.1208], [160.646, 175.2015, 163.6551, 128.0899, 128.2835, 11.0592, 22.6919, 65.833, 30.0415, 146.5686, 52.8768, 45.6435, 26.1064, 113.7341, 0.0, 61.9997, 240.6802, 167.8342, 0.0, 116.4456, 10.6281, 66.8736], [7.1303, 125.6198, 209.4211, 76.1166, 112.7235, 71.8178, 12.2342, 47.3781, 24.361, 73.0253, 261.8163, 46.1894, 61.6297, 29.0679, 76.1621, 22.1968, 58.9814, 217.0249, 100.689, 117.9882, 111.0502, 49.0613, 36.4722, 17.833], [156.5183, 48.4642, 51.2918, 141.899, 285.7896, 235.4411, 172.02, 259.061, 306.2328, 48.4659, 160.6166, 139.5533], [0.0, 0.0, 199.7098, 273.8345, 144.5157, 153.1152, 65.1161, 31.0003, 68.9651, 40.4275, 0.0, 92.7479, 136.7021, 21.021, 75.5044, 105.4925, 147.8309, 151.2189, 139.3362, 98.7132, 175.6763, 40.7264, 44.0152, 103.6109], [7.2727, 79.8971, 38.8619, 178.6079, 111.2202, 165.9571, 75.2875, 90.2707, 24.5514, 116.5517, 46.7627, 88.721, 110.0563, 112.7857, 1.6275, 112.3282, 52.773, 118.403, 119.705, 208.6603, 219.6058, 161.3281, 34.1995, 39.1059, 72.9216], [97.357, 213.0843, 215.1502, 110.9556, 130.9986, 163.4081, 19.3536, 72.6842, 63.2832, 70.4431, 214.0681, 68.1696, 40.6823, 66.113, 65.9813, 36.7338, 40.8091, 234.7267, 149.8294, 162.6325, 57.8592, 77.0319, 115.2576], [146.0564, 183.6099, 316.4155, 208.7694, 238.6182, 192.2588, 115.9834, 100.3349, 135.4752, 136.9815, 184.0896, 97.2, 153.5415, 94.4339, 105.2501, 53.2597, 271.2643, 370.3871, 249.5437, 97.5062, 324.0791, 81.9599, 91.5913, 75.168], [98.9755, 131.8375, 302.9714, 430.6875, 224.7336, 285.9797, 182.7529, 23.0861, 79.8798, 84.48, 70.8525, 224.4231, 141.264, 122.6715, 30.722, 175.643, 31.0417, 358.6046, 338.2382, 186.7564, 205.2345, 330.4232, 89.0379, 0.0, 117.2621]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

