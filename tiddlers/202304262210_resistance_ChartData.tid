created: 20230426221022000
creator: Drevarr
modified: 20230705163526846
modifier: drevarr
tags: ChartData
title: 202304262210_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Viral Marketing", "Mac Adaymia", "Raelyn Sunray", "Primal Clone", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer", "Sister Elon\u00edth", "Miphest\u00f6", "Lucas Ryn", "Zaylen Harker", "Koralia Danai", "Sygaldry Verdandi", "Jupi Jupi Jupi", "Newtype Khan", "Bella Sassy", "Johosh The Great", "Blancooo Padreee", "Grasszanine", "Solo Bloodborn"];
const professions = ["Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24.124, 19.705, 54.4128, 161.4091, 416.6744], [42.0394, 225.8256, 55.5709, 0.0, 23.9501, 19.968, 41.7019, 176.9821, 0.0, 99.608, 0.0, 31.8124, 59.7558, 0.0, 0.0, 103.7478], [251.121, 136.7644, 6.0139, 7.6032, 34.1376, 132.1474, 285.2153, 29.5243], [13.6844, 138.9414, 60.1186, 6.629, 0.0, 18.816, 26.8363, 201.1372, 40.0478, 97.1274, 6.6263, 51.5214, 45.214, 6.5736, 19.9465, 197.5198], [6.8302, 144.807, 53.0198, 18.8618, 12.1018, 20.736, 34.5038, 199.7436, 34.2989, 107.8133, 3.9362, 41.3807, 51.324, 6.7716, 27.0508, 177.9674], [14.0933, 166.0698, 63.0026, 8.7475, 18.9446, 21.0048, 33.3302, 170.0143, 37.5144, 113.7287, 13.9251, 53.8112, 43.8698, 0.0, 20.9484, 175.5732], [15.0794, 168.636, 61.5606, 7.4491, 13.1155, 18.5856, 30.0442, 190.4532, 32.7398, 119.2625, 9.4153, 55.1197, 38.6152, 8.019, 30.785, 207.0966], [73.957, 303.5946, 6.4285, 106.9682, 88.7172, 0.0, 39.5287, 456.8893], [0.0, 201.63, 74.2055, 7.9958, 7.033, 6.9888, 28.0099, 220.1825, 28.8422, 108.5766, 6.9626, 61.8257, 55.2344, 0.0, 19.0813, 269.3453], [10.046, 21.6691, 22.8096, 90.289, 368.3644, 129.0106, 205.5131, 7.4373, 60.5172, 104.3588, 23.5422, 56.6518, 375.8863], [33.1649, 373.5654, 126.3379, 49.3415, 6.7795, 13.7472, 27.1493, 281.9636, 33.0322, 200.1702, 6.567, 72.866, 50.3464, 9.9396, 39.6653, 422.5728], [13.1313, 366.2334, 94.9475, 15.7865, 7.92, 4.1088, 117.8294, 357.6804, 101.7274, 184.3321, 7.8922, 103.4517, 84.5624, 0.0, 47.3161, 430.9524], [23.6893, 374.2986, 108.5907, 9.6359, 11.7216, 27.2256, 135.9811, 437.5778, 40.2427, 208.7571, 7.7142, 142.379, 133.9312, 0.0, 66.5795, 407.4096], [33.0688, 589.8594, 154.1788, 17.3584, 7.7299, 5.7984, 58.993, 512.3656, 76.7827, 248.4476, 7.9516, 100.3441, 128.6766, 0.0, 23.1799, 461.6777], [683.709, 173.9226, 38.1337, 21.0355, 19.2384, 69.8683, 521.1914, 20.8522, 169.0665, 20.7492, 44.979, 116.09, 0.0, 0.0, 679.5481], [72.9677, 575.9286, 177.6938, 25.0124, 19.705, 42.8928, 129.8784, 627.5665, 79.9982, 336.6065, 7.279, 110.1577, 97.6378, 0.0, 59.6574, 453.6971], [77.8739, 538.902, 179.1358, 46.0612, 21.1622, 40.8192, 111.6485, 619.2052, 43.848, 268.8654, 7.9516, 156.6087, 145.5402, 26.3142, 35.6578, 512.3545], [54.6897, 697.6398, 164.4944, 70.3219, 67.1616, 98.9952, 175.1011, 1046.099, 0.0, 202.46, 0.0, 52.0939, 65.0104, 0.0, 0.0, 805.6416], [934.83, 323.4427, 55.8338, 0.0, 0.0, 0.0, 1099.0543, 352.343, 379.1593, 0.0, 165.1138, 108.6358, 0.0, 109.7514, 990.7915], [0.0, 818.9844, 386.778, 101.1432, 0.0, 152.4864, 327.1214, 1069.325, 237.5587, 802.7797, 0.0, 85.7872, 84.6846, 0.0, 0.0, 1019.1226]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

