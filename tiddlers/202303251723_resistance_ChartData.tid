created: 20230325172304000
creator: Drevarr
modified: 20230705163523029
modifier: drevarr
tags: ChartData
title: 202303251723_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Morton Saltbringer", "Gavann", "Ju\u00e7", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer", "What Charr U Saying", "K\u00f4sair", "Zaylen Harker", "Arcanophage Farra", "Whose Guardian", "Koralia Danai", "Blanco Padre Guard", "Sygaldry Verdandi", "Xanvias Einzbern", "Newtype Khan", "Gabe Malhorn", "Bella Sassy", "Aronorf Xideliesi", "Johosh The Great"];
const professions = ["Berserker", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 312.3397, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [20.5874, 25.3935, 1.1189, 13.8744, 16.2288, 0.0, 209.7323, 4.1586, 5.4891, 38.651, 9.5795, 4.1683, 6.8678, 2.5536, 31.2409, 31.561, 44.634, 47.4426], [44.8114, 28.0703, 3.3696, 59.4278, 27.0816, 97.6143, 40.4083, 69.4199, 211.7394], [66.78, 69.8693, 5.927, 15.1142, 35.6328, 396.878], [28.9257, 40.8375, 0.0, 0.0, 18.6984, 206.5056, 21.056, 7.2389, 49.5806, 14.0351, 7.0637, 0.0, 5.256, 5.2752, 41.4023, 38.4516, 60.222, 59.5728], [14.6842, 33.9323, 2.903, 13.0478, 19.5804, 0.0, 256.196, 22.8984, 3.5476, 38.9491, 18.0081, 12.4051, 6.6096, 3.2938, 4.6368, 34.8082, 36.1548, 57.3174, 70.8943], [23.8342, 37.5705, 0.0, 12.1032, 13.0536, 8.4146, 297.4971, 15.8446, 8.2936, 38.7504, 13.3668, 9.0355, 0.0, 20.0429, 3.36, 43.6724, 45.2572, 48.7973, 75.2072], [38.3708, 32.4472, 4.5511, 9.3283, 34.2216, 7.7618, 378.8087, 20.6349, 7.5026, 30.0067, 12.1044, 5.8906, 5.6712, 14.9971, 13.44, 43.7805, 38.1964, 51.121, 65.2335], [46.7829, 62.37, 0.0, 73.9998, 0.0, 466.5736, 87.593, 34.4928, 61.9013, 53.2073, 15.7248, 0.0, 52.9805, 25.2336], [49.57, 77.004, 166.2681, 6.1152, 88.3709, 6.0816, 274.2497, 38.5367, 170.1127, 521.4638], [38.4446, 36.234, 0.0, 8.3246, 63.8568, 827.3131, 14.6866, 6.8794, 88.1323, 56.5861, 6.889, 0.0, 0.0, 17.2704, 61.0765, 56.3163, 44.634, 159.0404], [268.448, 224.0122, 30.1946, 0.0, 48.4218, 0.0, 403.9766, 113.755, 58.8703, 0.0, 55.3237, 77.4509, 0.0, 0.0, 120.288, 0.0, 100.7229, 59.7379, 97.9851], [63.9021, 41.58, 11.7785, 0.0, 107.2512, 39.7882, 828.6037, 17.4765, 0.0, 106.7126, 62.1185, 7.7875, 3.8352, 41.2771, 33.3312, 55.8877, 56.0611, 74.745, 195.2962], [89.4335, 62.5927, 16.889, 11.3947, 7.7616, 938.9552, 22.951, 12.6801, 81.972, 23.6889, 7.5878, 0.0, 30.2045, 66.2928, 43.1319, 64.3129, 83.362, 205.8091], [61.7622, 70.686, 0.0, 43.2763, 15.876, 7.9431, 702.119, 20.9507, 5.7768, 82.1707, 17.2283, 3.8438, 0.0, 7.7088, 5.8128, 154.0425, 183.8363, 125.0914, 318.4851], [106.9955, 72.8392, 0.0, 31.9997, 135.0342, 19.4045, 1000.9068, 9.949, 9.4202, 112.3762, 44.4817, 15.8995, 0.0, 10.2317, 0.0, 95.9928, 52.5733, 84.7175, 140.0364], [48.6276, 150.6532, 0.0, 0.0, 126.9198, 0.0, 910.5606, 59.7464, 0.0, 98.4658, 8.577, 19.5936, 0.0, 27.6816, 51.5424, 140.2057, 96.7246, 150.3615, 193.9484], [115.8503, 113.751, 4.8233, 20.7821, 64.7388, 0.0, 1072.5385, 85.2242, 33.0067, 94.1933, 42.0683, 15.2006, 17.1088, 35.1101, 58.7664, 75.5619, 77.4988, 84.2334, 82.2158], [94.8939, 32.1502, 0.0, 11.3357, 62.181, 0.0, 1353.257, 9.5805, 6.0884, 107.8056, 11.7331, 5.9155, 39.1747, 52.1808, 0.0, 72.3095, 95.8518, 243.2779], [125.5906, 36.4567, 0.0, 24.0293, 39.7782, 7.7618, 1162.2393, 67.9582, 9.9715, 79.0906, 55.7321, 2.0218, 0.0, 90.7536, 34.0704, 86.48, 83.4537, 61.1902, 259.0472], [76.2251, 103.8015, 23.2618, 55.566, 18.4614, 1348.7397, 37.7955, 5.9685, 142.2835, 47.1922, 17.6218, 12.8384, 54.1718, 31.2816, 97.1819, 53.2538, 96.6264, 299.7507], [123.8196, 85.9073, 0.0, 50.184, 39.4254, 7.9794, 1316.4732, 83.3291, 15.0292, 132.9437, 75.9309, 13.9277, 0.0, 53.2608, 60.1776, 72.9675, 125.3932, 144.165, 251.9038]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

