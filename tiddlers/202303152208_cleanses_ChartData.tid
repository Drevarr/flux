created: 20230315220824000
creator: Drevarr
modified: 20230705163522156
modifier: drevarr
tags: ChartData
title: 202303152208_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Sygaldry Verdandi", "Johosh The Great", "Primal Clone", "Newtype Khan", "Raziel Umbra", "Black Raspberry Pie", "Cat Wigglebooty", "Tegan Parker", "Eibh\u00ebar", "\u00c1rkantor", "Fribble Bibble", "Drevarr Moonwillow", "Tribal S", "Mike The Archmagus", "Mac Chiato", "Zadie Miststep"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Vindicator", "Scrapper", "Scrapper", "Druid", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2593, 0.2635, 0.2754, 0.0707, 0.125, 0.0, 0.1411, 0.2963, 0.4222, 0.2441, 0.0, 0.1241, 0.0, 0.1875, 0.0, 0.0, 0.1373, 0.2574, 0.0541, 0.0, 0.0741], [0.3457, 0.2838, 0.2174, 0.0, 0.3131, 0.0312, 0.0, 0.1867, 0.2963, 0.2444, 0.1424, 0.0278, 0.4526, 0.25, 0.0882, 0.0, 0.1373, 0.1188, 0.1441, 0.0, 0.0122, 0.1481], [0.321, 0.2095, 0.2464, 0.2121, 0.25, 0.0, 0.1369, 0.5185, 0.3852, 0.322, 0.0278, 0.3796, 0.0, 0.2812, 0.1176, 0.0, 0.1373, 0.0, 0.1287, 0.2342, 0.0061, 0.179], [0.4815, 0.2027, 0.3768, 0.0, 0.5354, 0.2188, 0.0, 0.3568, 0.4815, 0.5333, 0.5661, 0.0, 0.0438, 0.0, 0.125, 0.0, 0.0, 0.0, 0.0, 0.0297, 0.2703, 0.0, 0.0, 0.2469], [0.5432, 0.3716, 0.2899, 0.0, 0.1919, 0.0, 0.0, 0.4606, 0.0, 0.9185, 0.4373, 0.0278, 0.5839, 0.0, 0.2812, 0.0441, 0.0, 0.0, 0.0, 0.0099, 0.1351, 0.0, 0.1852], [0.4198, 0.5405, 0.0, 0.0, 0.202, 0.0, 0.0, 0.3568, 0.0, 0.6815, 0.5119, 0.0, 0.5766, 0.0312, 0.0735, 0.0, 0.5098, 0.2475, 0.6126, 0.0, 0.0427, 0.3272], [0.679, 0.4527, 0.5507, 0.2, 0.2828, 0.1875, 0.0, 0.6017, 0.0741, 0.5556, 0.3831, 0.0278, 0.5401, 0.0, 0.4375, 0.1324, 0.0, 0.2353, 0.3366, 0.0901, 0.0, 0.0488, 0.1296], [0.0, 0.2828, 0.4062, 0.0, 0.0, 0.0, 1.1778, 0.6746, 0.6277, 0.0, 0.4375, 0.2206, 0.0, 0.1765, 0.0, 0.7723, 0.3333, 0.1524, 0.6235], [0.3056, 1.7007, 0.4615, 2.0938, 0.6176, 0.0, 0.4902, 0.0435, 1.7327, 1.2703, 0.1585, 1.0988], [0.9506, 0.3176, 0.4348, 0.0, 0.0909, 0.0, 0.0, 0.5353, 0.0, 0.9259, 0.6847, 0.0, 0.8321, 0.0, 0.4688, 0.0147, 0.0, 0.6275, 0.0, 0.297, 0.5135, 0.0, 0.0, 0.2037], [1.3827, 0.7432, 0.8188, 0.0, 0.9192, 0.0, 0.9253, 0.3704, 1.4148, 0.939, 0.0, 1.1752, 0.0, 0.2812, 0.0882, 0.0, 0.098, 0.0, 0.5743, 0.4865, 0.0, 0.0061, 0.4136], [1.679, 0.9527, 1.1957, 0.4667, 1.0909, 0.0625, 0.6667, 0.9461, 0.0, 1.1852, 0.6915, 0.5833, 1.1752, 0.8846, 0.5625, 0.6912, 1.4902, 0.7921, 0.8919, 0.2622, 0.9568], [2.2963, 1.473, 1.6812, 0.5667, 1.5253, 0.2812, 0.0417, 1.8797, 1.1481, 2.3259, 1.861, 0.1944, 1.5109, 0.6538, 1.4062, 0.8971, 0.0, 1.3137, 0.2174, 1.7129, 1.4505, 0.1667, 0.1463, 1.2654], [3.4691, 1.6554, 2.3116, 0.1, 1.6364, 0.3438, 0.0, 1.8423, 0.4444, 1.7852, 1.9661, 0.3611, 2.8686, 0.0385, 1.9688, 0.4265, 0.0, 0.4706, 0.0435, 1.8119, 1.6667, 0.0238, 0.2378, 0.9012], [2.5185, 1.7973, 1.8188, 0.3667, 1.9596, 0.5938, 0.1667, 1.9212, 0.4074, 2.963, 1.7559, 0.1944, 2.4234, 0.1923, 1.9688, 0.4559, 0.6667, 1.9604, 1.8288, 0.2561, 1.3086], [2.679, 1.7027, 1.6667, 0.1667, 1.899, 0.5938, 0.0, 1.527, 0.8889, 3.2889, 2.0881, 0.0, 2.8029, 0.5385, 2.0, 0.7794, 0.0435, 1.2157, 0.0, 1.8317, 1.2883, 0.3333, 0.1707, 1.0926], [2.8395, 1.777, 2.1667, 1.8283, 0.125, 0.1667, 1.9834, 0.9259, 1.5481, 2.2915, 0.5278, 2.146, 0.1154, 2.2812, 0.7794, 0.0, 1.2549, 0.0, 1.9109, 2.1171, 0.2805, 1.179]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

