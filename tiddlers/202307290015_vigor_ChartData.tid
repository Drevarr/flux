created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Air One Com", "Zaedy Zae", "Klengah", "Arriasa", "Mistwalker Cael", "Grasszanine", "Arcanophage Farra", "Tegan Parker", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Firebrand", "Druid", "Druid", "Druid", "Vindicator", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 8.319, 38.1542, 131.6164, 0.0, 0.0, 0.0, 103.6601, 4.8686, 118.6685, 34.9976], [22.4802, 0.0, 0.0, 0.0, 49.632, 0.0, 0.0, 0.0, 0.0, 0.0, 76.4122, 0.0, 0.0, 0.0, 0.0, 0.0, 16.112, 0.0, 230.3565, 328.636], [61.065, 0.0, 28.2196, 0.0, 183.488, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 115.6792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 139.8892, 229.6184], [51.129, 47.5879, 0.0, 0.0, 147.58, 0.0, 19.349, 0.0, 0.0, 0.0, 72.1613, 209.691, 0.0, 0.0, 0.0, 0.0, 84.2481, 0.0, 149.1035, 148.9532], [0.0, 0.0, 0.0, 0.0, 104.904, 0.0, 0.0, 130.9003, 80.0842, 0.0, 56.8166, 68.2257, 0.0, 0.0, 0.0, 130.8369, 0.0, 192.1034, 447.7132], [27.4896, 6.4846, 20.3159, 25.702, 168.072, 13.3593, 43.5934, 56.7461, 39.543, 3.145, 95.593, 178.5328, 27.9563, 7.414, 8.5905, 4.8748, 132.584, 29.2118, 267.772, 404.6064], [28.4418, 0.0, 92.2286, 0.0, 241.58, 0.0, 0.0, 112.8893, 105.0412, 0.0, 292.585, 340.7702, 0.0, 0.0, 0.0, 79.9774, 118.5604, 596.4139, 730.2548], [0.0, 165.6897, 0.0, 0.0, 357.764, 0.0, 66.9637, 0.0, 37.8237, 0.0, 348.8832, 454.6587, 80.3223, 0.0, 66.7782, 0.0, 0.0, 58.018, 482.4922, 1213.8192], [115.2576, 41.0012, 130.9123, 0.0, 793.36, 75.8956, 97.5024, 103.3186, 136.4871, 283.8758, 662.9171, 0.0, 19.371, 0.0, 0.0, 450.9408, 38.318, 398.1677, 1446.4252], [586.2752, 106.2338, 85.448, 63.0729, 75.1099, 546.0596, 75.5541, 1164.3474, 2195.886], [158.4792, 40.9501, 119.0567, 107.1616, 843.932, 40.905, 123.845, 243.6389, 194.3873, 0.0, 498.2861, 724.8754, 126.1386, 30.162, 78.6807, 75.3273, 638.0724, 118.8309, 1093.7047, 1891.5776]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

