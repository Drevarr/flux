created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["P\u00edogre", "Drevarr Moonwillow", "Seiker Novus Terra", "J\u00e2sm\u00eene", "Tegan Parker", "Venomina The Sly", "Miphest\u00f6", "Tribal S", "Vee U", "Zaedy Zae"];
const professions = ["Scrapper", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Druid", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[71.7217, 28.9132, 21.1603, 17.8164, 41.8082, 40.5945, 86.7933, 0.0, 68.6117, 5.2452, 70.5815, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 42.4764, 32.5699, 28.3977, 15.6616, 0.0, 0.0, 16.6013, 0.0, 36.1156, 25.5265, 83.8471], [45.4772, 5.0052, 20.0165, 19.1394, 65.7463, 42.966, 62.1819, 0.0, 42.0523, 20.0671, 39.9666, 9.1714, 0.0, 0.0, 34.241, 5.1262, 6.9221, 0.0, 104.8059, 27.864, 40.7579, 90.0947, 0.0, 7.6523, 19.709, 0.0, 31.5968, 32.3248, 158.5023], [139.1027, 52.4256, 326.3098, 106.8543, 113.6646, 238.1265, 144.4014, 42.8142, 143.4816, 105.3778, 135.798, 0.0], [121.4728, 13.8116, 173.5308, 25.8867, 97.2176, 76.0973, 120.0078, 0.0, 140.5051, 79.5578, 112.4185, 34.7056, 41.4478, 46.7949, 0.0, 0.0, 94.1099, 171.9518, 132.1821, 159.5225, 0.0, 0.0, 35.5743, 76.9934], [81.9391, 39.2848, 85.785, 3.8367, 122.3694, 43.7333, 142.9313, 38.9374, 121.6541, 37.7316, 72.255, 28.5603, 0.0, 0.0, 0.0, 0.0, 0.0, 122.6583, 163.9642, 239.1332, 111.515, 128.3161, 130.112, 0.0, 73.3784, 86.6235, 427.9787], [122.2742, 60.286, 138.5632, 93.8448, 108.4752, 111.3907, 128.3931, 0.0, 199.2715, 182.9052, 124.3789, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 197.3767, 209.1038, 111.8543, 248.2717, 0.0, 105.0055, 11.441, 94.8253, 131.1853, 313.866], [132.0908, 83.076, 297.2246, 197.2593, 227.5803, 112.5067, 286.7882, 52.8797, 180.9547, 205.1042, 176.3553, 0.0, 169.2432, 137.7074, 0.0, 134.596, 18.4153, 47.5731, 443.331, 268.8847, 6.804, 237.2197, 343.3942, 20.4961], [271.2298, 53.01, 265.2804, 64.3418, 225.7546, 189.1994, 256.8792, 0.0, 0.0, 0.0, 0.0, 109.6346, 80.3933, 80.6929, 114.8344, 346.8906, 409.7246, 546.6046, 358.7103, 0.0, 0.0, 0.0, 163.0939, 145.6152, 697.6793], [151.8577, 65.2052, 288.0742, 111.7935, 124.0853, 224.6648, 124.9627, 88.9034, 199.5005, 70.0488, 129.4486, 60.6633, 105.8275, 197.8368, 141.2384, 67.0018, 79.7456, 34.6408, 221.3851, 258.2683, 489.605, 214.5265, 69.2874, 171.652, 145.4048, 0.0, 102.5072, 113.0711, 623.024], [380.8463, 114.7928, 114.6251, 212.7825, 312.0754, 136.3613, 287.1693, 0.0, 345.7296, 200.705, 241.6702, 0.0, 0.0, 38.3295, 130.8608, 86.9106, 0.0, 0.0, 338.2722, 486.6293, 384.3904, 384.0057, 0.0, 128.7189, 123.1607, 0.0, 103.9672, 102.0622, 1060.4187]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

