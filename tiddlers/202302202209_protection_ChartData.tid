created: 20230220220953000
creator: Drevarr
modified: 20230705163519750
modifier: drevarr
tags: ChartData
title: 202302202209_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Sofya De Meme", "Black Raspberry Pie", "Arka\u00f1", "Mac Aaroni", "Eibh\u00ebar", "Belvyn Brightblade", "Primal Clone", "Zadie Miststep", "Ryvalia Fazebringer", "Etchery Howls", "Kahless The Drunk", "Fribble Bibble", "Blanco Padre Guard", "Zaylen Harker", "Ravioli Fetabringer", "Drevarr Moonwillow", "Koralia Danai", "Bella Sassy", "Sygaldry Verdandi"];
const professions = ["Tempest", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 159.7277, 418.1896, 18.4388, 0.0, 0.0, 18.5658, 0.0, 117.1634, 18.0191, 14.4371, 0.0, 0.0, 0.0, 18.428, 0.0, 0.0, 0.0, 18.5671, 0.0, 0.0, 0.0, 18.5697, 0.0, 56.4068, 0.0, 0.0, 0.0], [71.2219, 123.0768, 51.6645, 0.0, 40.4028, 26.0173, 92.34, 1.6817, 14.5152, 42.3045, 171.001, 98.1783, 51.6416, 230.5357, 30.1411, 4.7914, 97.9897], [511.4424, 25.4016, 13.6416, 42.7837, 0.0, 0.0, 41.6683, 83.4866, 41.6833, 20.8824, 136.3824, 34.5978, 20.706, 15.5817, 15.7287, 20.655, 19.7512, 0.0, 12.1937, 148.9363, 63.1539, 61.0687, 62.6396, 31.3119, 13.671, 27.8743], [0.0, 348.7579, 626.126, 13.676, 19.1957, 14.0238, 0.0, 0.0, 30.9071, 38.5947, 19.278, 16.7798, 82.199, 38.5839, 0.0, 15.8558, 14.3127, 0.0, 19.872, 0.0, 116.1576, 12.7323, 57.7485, 38.5654, 0.0, 13.8142, 12.4098], [18.8955, 297.0475, 642.3439, 18.7564, 9.3542, 0.0, 0.0, 0.0, 47.0906, 18.7674, 0.0, 23.5066, 61.3536, 18.7889, 17.1477, 14.6032, 13.9482, 0.0, 0.0, 156.468, 37.2663, 39.25, 19.7112, 20.0027, 48.812, 28.8289], [0.0, 326.0628, 576.314, 20.344, 20.2675, 20.9021, 30.7388, 0.0, 40.6672, 20.3885, 15.251, 31.6747, 46.9392, 11.5132, 21.403, 15.2294, 20.4762, 15.1389, 12.5954, 23.8032, 0.0, 96.6389, 54.6093, 76.7806, 54.3812, 35.696, 4.8955, 10.9779], [0.0, 655.573, 947.0084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.2302], [374.3258, 567.6258, 19.5048, 19.3906, 20.0117, 39.237, 9.6824, 38.9571, 58.4843, 20.9916, 17.7038, 91.0694, 25.5613, 0.0, 34.0213, 19.9017, 19.3736, 19.4832, 0.0, 95.8963, 24.4494, 34.4475, 78.2216, 0.0, 14.1397, 36.7998], [9.8553, 353.6417, 665.5123, 18.4162, 22.6304, 18.921, 32.4614, 9.8021, 18.3524, 150.7623, 47.5524, 18.48, 89.5171, 27.6898, 2.125, 36.7618, 5.772, 36.5472, 12.8872, 0.0, 18.5216, 88.4707, 18.5697, 36.8784, 51.4206, 37.5643, 17.4338, 18.5192], [30.2081, 281.8217, 784.2503, 22.3171, 22.2407, 45.8333, 22.4704, 16.6516, 44.6714, 61.4147, 22.3196, 22.3978, 92.2522, 20.4723, 0.0, 38.9543, 11.2698, 16.5969, 0.0, 36.0288, 0.0, 118.8096, 40.9041, 55.4362, 78.5333, 45.3611, 20.6627, 20.7625], [0.0, 835.6975, 1579.5057, 17.6677, 0.0, 20.6329, 20.3128, 51.2517, 32.6869, 35.9621, 40.5082, 35.4299], [0.0, 928.489, 1760.2192, 14.8781, 20.3893, 0.0, 41.1127, 15.2019, 61.3554, 57.7361, 25.5755, 40.9517, 159.5194, 35.3912, 0.0, 14.9783, 40.5324, 0.0, 36.3744, 0.0, 267.1094, 41.1579, 76.2469, 82.0392, 20.5009, 0.0, 87.6323], [68.8389, 778.2415, 1758.4816, 39.5993, 17.1494, 0.0, 30.3178, 15.8004, 131.0945, 144.5896, 92.1488, 57.3989, 173.3424, 49.149, 0.0, 62.64, 3.4921, 17.5446, 39.1248, 17.2368, 76.1125, 267.9581, 47.4183, 96.1684, 55.2382, 12.0564, 0.0, 26.7288], [0.0, 809.8423, 2039.9776, 22.8388, 0.0, 54.6928, 26.4515, 17.024, 47.9665, 144.9014, 82.6384, 22.9152, 206.8282, 98.8785, 77.7911, 28.7446, 22.6476, 56.9369, 0.0, 56.2401, 376.4779, 35.7435, 99.7851, 137.0437, 22.8923, 22.2512, 70.879], [0.0, 1123.8394, 2579.8013, 14.8554, 0.0, 0.0, 20.5564, 13.6724, 131.6785, 97.7648, 79.6396, 20.2171, 146.5834, 0.0, 35.6265, 20.2419, 15.2896, 40.8672, 34.1991, 238.3618, 54.0594, 106.5441, 109.7752, 20.202, 64.8173], [0.0, 1109.7626, 2453.5336, 115.5773, 54.7126, 22.8388, 59.2574, 37.6124, 58.2272, 22.2589, 22.2768, 44.6107, 398.6506, 83.592, 15.844, 71.253, 48.2972, 22.6476, 69.2406, 34.0416, 20.9034, 337.5466, 109.8954, 99.7258, 157.3003, 0.0, 28.8653, 86.63], [20.2293, 832.2502, 2156.978, 57.7886, 57.1729, 86.5469, 96.7336, 56.126, 232.9503, 238.9252, 99.4745, 145.5485, 305.5853, 88.4876, 0.0, 140.4702, 39.163, 81.3321, 80.4118, 145.0656, 64.7721, 278.46, 174.9105, 121.3073, 216.7456, 86.1637, 58.6942, 102.524], [0.0, 1433.5272, 3016.5257, 23.3604, 23.2638, 51.2425, 0.0, 101.1467, 254.388, 77.5404, 23.4326, 211.2634, 46.827, 0.0, 0.0, 10.1876, 23.1579, 61.45, 23.976, 4.0527, 375.5232, 161.5014, 151.6638, 256.246, 68.3032, 16.6005, 77.8476], [0.3952, 1333.5538, 2423.4146, 41.8219, 72.739, 39.0663, 53.86, 60.5948, 171.3447, 223.9612, 115.5395, 110.9909, 377.879, 45.0855, 31.263, 74.1893, 55.4545, 62.4753, 35.4011, 44.7984, 7.821, 365.5517, 121.401, 176.6842, 320.9113, 25.8566, 75.529, 78.7068], [1283.8543, 3894.0288, 29.3706, 118.9986, 15.0923, 46.4719, 0.0, 124.2124, 206.9397, 0.0, 107.8123, 401.4595, 141.7968, 81.6669, 14.9639, 43.7643, 22.9258, 96.6816, 5.7947, 513.6394, 169.4961, 204.0169, 166.8053, 71.8155, 16.7177, 116.0316]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

