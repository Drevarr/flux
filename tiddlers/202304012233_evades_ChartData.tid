created: 20230401223327000
creator: Drevarr
modified: 20230705163524127
modifier: drevarr
tags: ChartData
title: 202304012233_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Svess", "Lilyofthenight", "Slingsshot", "Sanellek Knut", "Your Arch Nemesis", "Tootsie Pop Rocks", "Bella Sassy", "Cat Wigglebooty", "Tegan Parker", "Mmathuss", "Aronorf Xideliesi", "Skye Nightroad", "Charr Surethang", "Tac Mancer", "Astraea Lumena", "Ateriuz", "Gabe Malhorn", "Rina Of Theros", "Zadie Miststep", "Oo Dads Mad", "Madrigal Moonshade", "Sygaldry Verdandi", "Morv\u00e4rth", "Husky Guard", "Miphest\u00f6", "Tribal S", "Koralia Danai", "Lord Erin The Wise", "Smol Gluvs", "Xanvias Tlesel", "High Sorcer Baradun", "Hyde En Sikh", "Newtype Khan", "Be\u00eb", "Drevarr Moonwillow", "Aluin Ellesmera", "Johosh The Great", "Venomina The Fierce", "Zenek Tryst", "Macette", "Einar X", "Mistwalker Caelon"];
const professions = ["Druid", "Chronomancer", "Untamed", "Druid", "Scrapper", "Scrapper", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Scourge", "Firebrand", "Berserker", "Firebrand", "Scourge", "Tempest", "Spellbreaker", "Vindicator", "Firebrand", "Scourge", "Dragonhunter", "Catalyst", "Druid", "Firebrand", "Weaver", "Scourge", "Berserker", "Tempest", "Chronomancer", "Spellbreaker", "Scourge", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Weaver", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 3, 0, 26, 1, 0, 0, 0, 0, 0, 16, 3], [3, 1, 0, 17, 0, 10, 1, 0, 0, 20], [4, 7, 0, 22, 0, 15, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 3, 0], [1, 1, 0, 8, 0, 37, 5, 0, 7, 0, 0, 0, 1, 4], [3, 1, 0, 12, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 6, 1, 5, 0, 3, 0, 24, 0, 0, 1, 0, 0, 2, 4, 4], [13, 0, 12, 12, 0, 5, 2, 0, 0, 3, 0, 0, 1, 1, 4, 0, 0, 2, 0, 0, 0, 13, 2, 4, 2, 0, 0, 1, 6], [5, 8, 0, 16, 0, 1, 1, 1, 0, 0, 8, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 33, 0, 0, 0, 0, 0, 0, 0, 11], [1, 5, 4, 2, 0, 4, 0, 8, 2, 17, 3, 0, 0, 7, 1, 0, 24, 0, 0, 0, 0, 0, 0, 6, 6], [0, 13, 2, 0, 2, 1, 23, 0, 2, 0, 2, 0, 7, 0, 3, 0, 28, 3, 0, 4, 0, 0, 0, 0, 1], [1, 0, 5, 6, 0, 1, 0, 63, 0, 0, 6, 0, 1, 0, 0, 13], [2, 0, 0, 3, 0, 11, 0, 4, 1, 1, 0, 4, 0, 5, 1, 46, 9, 0, 5, 1, 0, 1, 5, 2], [3, 1, 1, 10, 0, 9, 1, 2, 0, 3, 7, 0, 0, 3, 0, 0, 3, 9, 0, 15, 0, 17, 1, 0, 8, 0, 0, 1, 8, 10], [6, 10, 4, 14, 0, 1, 0, 0, 0, 11, 1, 2, 0, 0, 1, 5, 0, 1, 0, 37, 2, 6, 0, 0, 0, 3, 8], [19, 10, 10, 20, 1, 0, 0, 7, 0, 13, 0, 19, 7, 2, 2, 0, 0, 1, 4], [10, 0, 4, 15, 1, 5, 0, 0, 1, 1, 10, 3, 1, 14, 0, 3, 0, 2, 3, 0, 36, 0, 0, 3, 1, 0, 0, 2], [0, 1, 15, 6, 2, 1, 0, 0, 0, 2, 0, 3, 0, 75, 2, 0, 4, 0, 0, 0, 0, 5], [15, 0, 0, 17, 10, 11, 6, 0, 0, 7, 0, 1, 0, 11, 0, 1, 0, 7, 1, 0, 0, 33, 1, 0, 1, 0, 0, 0, 2, 13], [15, 15, 1, 21, 0, 2, 0, 1, 0, 2, 9, 19, 7, 5, 0, 0, 0, 1, 0, 5, 0, 25, 1, 0, 7, 0, 0, 1, 2, 1], [0, 1, 1, 24, 0, 3, 0, 0, 1, 1, 4, 10, 0, 8, 0, 0, 0, 2, 0, 0, 0, 77, 1, 0, 1, 0, 0, 5, 4], [26, 17, 12, 57, 0, 0, 0, 3, 0, 17, 1, 11, 0], [17, 28, 3, 52, 8, 12, 3, 5, 0, 3, 2, 14, 0], [11, 0, 0, 41, 7, 6, 0, 2, 0, 9, 6, 6, 1, 4, 0, 1, 0, 1, 0, 10, 0, 36, 0, 0, 6, 0, 0, 0, 0, 0], [6, 8, 0, 52, 0, 8, 0, 0, 0, 4, 0, 3, 0, 3, 0, 0, 0, 2, 0, 13, 1, 32, 2, 0, 2, 0, 2, 2, 3, 7], [8, 8, 0, 1, 0, 11, 15, 0, 0, 8, 0, 0, 0, 2, 0, 5, 0, 92], [2, 42, 0, 0, 22, 0, 12, 27, 3, 0, 3, 0, 2, 8, 0, 31, 2], [12, 3, 2, 22, 0, 8, 0, 7, 0, 2, 39, 0, 8, 0, 0, 0, 0, 0, 0, 0, 46, 6, 0, 0, 0, 0, 1, 0, 0], [9, 7, 0, 19, 1, 10, 2, 4, 0, 5, 3, 36, 0, 7, 3, 0, 1, 4, 0, 3, 1, 26, 7, 0, 14, 0, 0, 0, 0, 0], [18, 7, 11, 66, 1, 7, 0, 0, 0, 23, 12, 12, 0, 4, 1], [26, 4, 10, 31, 1, 0, 2, 1, 2, 9, 1, 18, 0, 6, 0, 1, 0, 8, 0, 1, 0, 28, 0, 0, 1, 2, 0, 0, 4, 10], [16, 15, 4, 28, 0, 8, 1, 0, 0, 4, 15, 25, 0, 2, 0, 0, 2, 5, 0, 0, 0, 38, 0, 0, 0, 0, 0, 1, 2, 5], [0, 6, 2, 23, 8, 0, 0, 1, 7, 37, 0, 8, 0, 2, 1, 5, 2, 3, 0, 44, 0, 20, 0, 0, 0, 2, 7, 5], [2, 9, 3, 47, 6, 4, 0, 1, 1, 4, 9, 9, 0, 5, 0, 0, 0, 7, 0, 1, 0, 67, 1, 2, 9, 0, 0, 0, 0, 3], [43, 3, 2, 16, 0, 3, 3, 1, 0, 20, 0, 1, 5, 0, 0, 1, 14, 0, 2, 0, 76], [10, 6, 6, 56, 1, 5, 0, 0, 0, 3, 16, 18, 0, 8, 0, 0, 0, 6, 0, 8, 0, 33, 2, 1, 8, 0, 0, 0, 0, 6], [5, 5, 20, 25, 0, 11, 0, 0, 0, 0, 28, 20, 0, 3, 0, 0, 0, 0, 5, 0, 78, 0, 0, 1, 0, 0, 1, 1, 2], [19, 6, 0, 62, 0, 8, 1, 2, 0, 5, 5, 14, 8, 10, 6, 2, 0, 13, 1, 8, 1, 29, 2, 0, 3, 1, 0, 1, 5, 10], [20, 10, 4, 35, 6, 11, 1, 1, 0, 4, 11, 12, 4, 11, 0, 0, 0, 15, 8, 0, 58, 2, 0, 2, 0, 0, 0, 0, 17], [25, 20, 6, 67, 3, 13, 2, 2, 0, 26, 0, 0, 4, 1, 0, 6, 9, 0, 6, 0, 45, 0, 0, 3, 0, 0, 6, 8], [15, 7, 8, 62, 1, 15, 3, 1, 0, 6, 22, 12, 1, 1, 0, 2, 0, 2, 0, 23, 0, 71, 1, 2, 9, 0, 0, 1, 8, 7], [28, 8, 10, 44, 0, 12, 0, 2, 1, 3, 6, 40, 3, 1, 0, 0, 0, 1, 1, 8, 0, 85, 6, 0, 6, 2, 0, 15, 5, 13], [7, 27, 3, 10, 0, 8, 36, 11, 0, 21, 0, 3, 2, 51, 0, 3, 0, 171, 0, 8, 0, 3, 1, 15, 22], [42, 16, 4, 65, 4, 16, 4, 0, 8, 36, 31, 1, 8, 0, 3, 12, 20, 0, 25, 1, 82, 22, 1, 14, 0, 1, 4, 12, 28]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

