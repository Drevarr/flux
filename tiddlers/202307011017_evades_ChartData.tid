created: 20230701101710000
creator: Drevarr
modified: 20230705163540392
modifier: drevarr
tags: ChartData
title: 202307011017_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Dizzy Bunnyhopper", "Trodek", "Anti Jimbo", "Sakis Ranger", "Violet Stab", "F\u00f9gly", "Valkren Sothur", "Grim Breacher", "Elonith Requiem", "Legacy Of Mathus", "Ryvalia Routbringer", "Govinda Ektar", "Bella Sassy", "No Reserv\u00e9", "F\u00f9gly", "Drevarr Moonwillow", "Wall Knot", "Ryvalia Fazebringer", "Drumina", "Latedoctor", "Sister Elonith", "Charr Surethang", "Gestern Yesteryear", "Atros Shroudkeeper"];
const professions = ["Holosmith", "Scrapper", "Catalyst", "Druid", "Firebrand", "Catalyst", "Dragonhunter", "Reaper", "Scourge", "Berserker", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Druid", "Reaper", "Berserker", "Berserker", "Firebrand", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 8, 0, 2, 0, 0, 3, 8], [5, 6, 2, 6, 1, 0, 1, 0, 0, 0, 8], [1, 1, 32], [0, 0, 0, 3, 0, 16, 15, 5], [22, 14, 5], [3, 38], [30, 12], [18, 0, 25], [0, 11, 0, 0, 13, 0, 1, 2, 19], [0, 0, 14, 7, 9, 2, 13, 1, 0, 2, 1, 2, 5], [57], [5, 0, 9, 4, 3, 6, 1, 18, 0, 8, 0, 0, 14], [0, 0, 0, 12, 0, 4, 20, 11, 22, 0, 10, 0, 0, 1, 0, 0], [38, 6, 9, 0, 6, 18, 16], [27, 76], [0, 18, 26, 13, 3, 10, 21, 0, 5, 5, 0, 1, 0, 9], [16, 28, 6, 38, 3, 8, 0, 0, 6, 12], [25, 18, 13, 6, 32, 0, 0, 11, 0, 0, 16], [21, 0, 12, 32, 15, 15, 4, 10, 0, 10, 0, 2, 0, 1], [1, 0, 0, 12, 0, 30, 13, 7, 4, 4, 10, 0, 12, 9, 4, 1, 5, 11], [0, 1, 6, 6, 0, 30, 52, 20, 17], [0, 0, 6, 16, 0, 28, 22, 2, 15, 3, 33, 1, 8, 7, 5, 4, 5], [0, 0, 2, 14, 0, 32, 44, 6, 31, 5, 9, 0, 0, 8, 0, 3, 5], [15, 99, 2, 1, 12, 0, 5, 18, 29]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

