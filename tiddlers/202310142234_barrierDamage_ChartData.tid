created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Jandir Schug", "Mistwalker Cael", "Daphne Agla\u00e9", "Daring Deathblade", "Sonja Wintersong", "Lord Erin The Wise", "Amiti\u00e9l", "Cedryn X", "Morv\u00e4rth", "K\u00e2 \u00d4tik R\u00e6j", "Ax Axun", "Newtype Khan", "Adjudicatrix Farra", "Koralia Danai", "Xanvias Einzbern", "Atria Ruinheart", "Sassy Daddy Demon", "Zaedy Zae", "Glorious Gluvs", "Aronorf Xideliesi", "Be\u00eb", "Gabe Malhorn", "Hyde En Sikh", "Bella Bitty", "Drevarr Moonwillow", "Kat Bon Z", "Gadget Windrunner", "Caoimhe Corpsetouch", "Daray Darkblood"];
const professions = ["Firebrand", "Soulbeast", "Herald", "Reaper", "Reaper", "Firebrand", "Weaver", "Firebrand", "Berserker", "Reaper", "Berserker", "Vindicator", "Spellbreaker", "Reaper", "Firebrand", "Berserker", "Firebrand", "Herald", "Druid", "Berserker", "Firebrand", "Reaper", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Scrapper", "Scrapper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3338, 990, 0, 0, 1322, 3410, 0, 0, 0, 5848, 0, 8517, 2128, 23, 2696, 2482, 0, 0, 5724, 5872, 6877, 0, 0, 306, 0, 0, 2926], [4138, 24921, 9090, 11295, 0, 948, 445, 2670], [2016, 13904, 5489, 0, 21089, 5869, 532, 0, 5768], [1882, 9491, 479, 0, 3964, 192, 8310, 0, 5803, 661, 3017, 0, 5475, 0, 2691, 0, 6031, 0, 5744, 2143, 2768, 0, 838, 430], [1132, 115, 661, 2906, 0, 3564, 0, 3988, 12010, 0, 0, 2890, 967, 6213, 1548, 0, 6636, 15920, 8640, 0, 6772, 0, 0], [6454, 4712, 6908, 2545, 10290, 2383, 5575, 6313, 19591, 2938, 4002, 6094, 0, 0, 1117], [2830, 4607, 0, 3072, 2044, 269, 7086, 0, 2899, 2850, 3011, 4828, 981, 0, 9037, 3048, 5055, 0, 0, 1983, 5537, 6872, 3050, 8495, 2926, 0, 0], [2776, 9447, 4764, 0, 5762, 4016, 5604, 0, 2880, 4212, 3555, 19948, 8179, 0, 3556, 0, 3709, 0, 2598], [0, 11453, 12260, 4413, 6061, 0, 0, 3092, 3013, 8276, 0, 0, 9939, 2227, 0, 2661, 2967, 5602, 5582, 3109, 0, 4735], [2960, 12672, 0, 205, 7554, 4202, 6467, 0, 3716, 51, 2463, 2527, 6287, 4738, 5695, 2139, 686, 2796, 0, 7723, 12731], [661, 6276, 661, 1698, 5574, 2948, 2878, 467, 9260, 8363, 5860, 5922, 11919, 7979, 15450, 7392, 4175], [3888, 15267, 6053, 0, 6243, 7886, 0, 0, 5474, 7709, 6905, 0, 9396, 1608, 11619, 7365, 5254, 3116, 0, 8787, 8151, 661, 5394], [11550, 8092, 0, 18241, 2622, 3233, 1509, 8865, 5086, 1178, 4160, 11953, 2908, 8866, 6122, 398, 2908, 173, 8841, 5573, 3009, 1592, 0, 4797, 0, 2926], [2732, 14402, 8733, 12508, 6505, 4935, 385, 4158, 10225, 2799, 19102, 5982, 338, 6135, 3915, 5553, 2967, 3095, 4008, 10427, 5662, 1725, 2848, 0, 0, 2786], [1056, 5073, 10333, 0, 10460, 5877, 4483, 0, 5708, 9912, 5946, 12482, 9115, 284, 3502, 1274, 11991, 160, 3639, 4650, 9848, 8344, 1321, 13771, 0, 3179], [1437, 22462, 11866, 0, 16915, 7825, 4501, 0, 8558, 2965, 5324, 15457, 13589, 1425, 3053, 690, 4251, 5013, 2967, 6592, 7609], [6082, 9736, 9624, 0, 21275, 12256, 5503, 2827, 3615, 2827, 3675, 5578, 1462, 17204, 2667, 3521, 1560, 2802, 6952, 20324, 4847, 2823, 6325], [2882, 18429, 9175, 0, 17094, 4438, 0, 0, 6251, 13471, 640, 17018, 10571, 8178, 8121, 9466, 3331, 0, 5642, 8292, 13930], [4748, 9954, 8740, 947, 21519, 4780, 6011, 0, 10582, 7530, 3105, 12928, 11775, 2885, 7028, 6525, 5579, 1539, 1960, 5180, 2948, 12611, 6527, 2837, 0, 0, 0], [0, 9049, 6507, 678, 12175, 3122, 4018, 0, 6407, 12334, 0, 11032, 9653, 5927, 11836, 8078, 6883, 2966, 2817, 2820, 9845, 6068, 15727, 5817, 2880, 5848], [2695, 14394, 2749, 0, 14706, 3404, 8767, 0, 2965, 13145, 2950, 18968, 6111, 16, 19183, 5913, 8390, 2952, 8723, 1825, 15731, 3803, 2621, 9425, 1541, 738, 2779], [1360, 16267, 7831, 0, 19156, 2803, 6849, 0, 2799, 13258, 710, 41, 13757, 6020, 5101, 6718, 7131, 0, 382, 8193, 19033, 9452, 1398, 11511, 11190, 0, 8805], [24095, 5589, 0, 19919, 8631, 1447, 0, 7917, 888, 3531, 13642, 4649, 3778, 7047, 3320, 12195, 2965, 2979, 5668, 13735, 4591, 5040, 15707, 7467, 0, 5657], [2622, 16816, 5891, 0, 13697, 3553, 5298, 0, 8564, 11903, 4094, 14866, 6800, 6934, 7524, 4708, 9441, 4660, 0, 12002, 18777, 7446, 2322, 10464, 5357, 1566, 1077], [3214, 16452, 8690, 1935, 12341, 5106, 7412, 1869, 3886, 7599, 5090, 18542, 12127, 5457, 14076, 4367, 12044, 0, 3483, 6586, 12343, 7764, 1213, 8016, 3950, 472, 5707], [2959, 18797, 8576, 1496, 23249, 7884, 7578, 0, 5126, 12395, 3856, 26576, 18779, 7575, 22359, 4163, 8495, 2340, 286, 7928, 14386, 12335, 2788, 13576, 6461, 1485, 9049], [6492, 20615, 341, 25052, 11207, 29771, 5113, 17139, 18312, 9193, 6402, 47755, 7443, 17428, 15916, 21582, 9564], [3020, 28874, 15554, 70, 12565, 7830, 20201, 1030, 2007, 10912, 3754, 24829, 26304, 6459, 14628, 11526, 4176, 2966, 3777, 15273, 33227, 8006, 2065, 7745, 80, 77, 11741], [108, 99096, 33550, 352, 49327, 27336, 20625, 365, 9336, 21990, 8232, 64099, 44972, 21130, 66282, 23899, 33787, 8714, 12569, 18954, 41215, 30183, 1418, 39332, 2197], [4198, 136574, 41402, 0, 69783, 49585, 21609, 630, 27853, 26467, 8014, 26956, 30950, 19564, 37367, 58835, 55214, 11462, 17806, 42899, 45102, 42446, 17235, 65983, 4487, 42689, 26873]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

