created: 20230508221143000
creator: Drevarr
modified: 20230705163529377
modifier: drevarr
tags: ChartData
title: 202305082211_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Corinna Barimen", "Jeckyll Mbs", "Husky Guard", "Arriasa", "Grasszanine", "Inedible Plant", "Gabe Malhorn", "Tika Rucola", "No Reserv\u00e9", "Xanvias Einzbern", "Mistwalker Caelon", "Ark Darkness", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Bella Fae", "Zady Stardust", "Kiloak", "Sister Elon\u00edth", "Solus Sanctus", "Koralia Danai"];
const professions = ["Spellbreaker", "Guardian", "Berserker", "Dragonhunter", "Druid", "Spellbreaker", "Vindicator", "Firebrand", "Chronomancer", "Herald", "Berserker", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 1.8452, 3.9886, 0.0, 0.0, 2.9671, 6.6019, 3.1304, 0.3091, 2.7632, 3.2928, 0.0, 6.4819, 3.402, 3.0624], [1.3296, 2.695, 0.0, 0.0, 6.3769, 1.3797, 1.7602, 26.4077, 1.0956], [1.0053, 1.5482, 0.0, 1.3398, 2.5549, 6.1642, 3.4246, 0.0, 1.2572, 12.1882, 1.2074, 1.2365, 2.7632, 3.822, 0.0, 1.8064, 0.819, 0.8448], [0.3567, 1.6629, 0.0, 1.7033, 12.691, 4.0151, 0.0, 2.6151, 4.0627, 2.0124, 1.3524, 2.4342, 2.4696, 1.4141, 3.4003, 2.205, 1.408], [0.9405, 0.0, 0.0733, 0.8729, 5.6776, 9.4276, 3.1884, 0.0, 0.8046, 15.743, 0.8497, 0.7728, 1.3158, 0.9408, 2.444, 2.772, 1.5488], [0.9729, 3.4404, 0.0, 2.5515, 0.0, 20.8214, 1.4087, 4.5982, 0.0, 3.7044, 0.0, 5.313, 3.087, 2.288], [0.0, 0.0, 0.0, 0.0, 6.8131, 29.008, 0.0, 0.0, 0.0, 20.8214], [6.5291, 7.4189, 11.1185, 10.1724, 0.0, 14.3451, 6.111, 5.4208], [0.0, 0.9748, 1.221, 0.0, 7.3809, 22.4812, 3.5427, 0.0, 4.4758, 7.6176, 1.7217, 3.7094, 8.4211, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5.5502, 1.9845, 1.7602, 48.7526, 1.4087, 1.507, 2.8948, 3.7632, 0.0, 4.3567, 1.638, 0.9856], [1.0702, 2.1216, 0.0, 0.0, 3.4066, 15.9544, 6.0226, 1.3419, 1.1064, 25.8998, 2.0571, 1.5842, 3.3553, 1.1172, 0.0, 6.2693, 1.638, 1.76], [1.5891, 0.0, 0.4263, 4.2582, 25.0194, 4.9598, 0.0, 3.7215, 52.3075, 2.0124, 0.5796, 2.4342, 5.9388, 0.0, 9.1384, 4.473, 4.4352], [0.1946, 2.523, 0.0, 2.1291, 36.6226, 5.4321, 0.0, 2.5648, 79.223], [0.0, 1.3762, 2.771, 3.9743, 34.8096, 11.6909, 2.6082, 4.3752, 73.129, 2.8621, 4.5982, 8.6185, 11.7012, 0.1632, 16.4703, 5.67, 10.2784], [0.7459, 3.4404, 0.0, 11.781, 48.951, 10.9824, 0.0, 4.3752, 92.9347, 4.9863, 6.1824, 7.4343, 5.9976, 14.1326, 7.119, 6.4416], [0.9405, 8.8877, 0.0, 2.2736, 17.0328, 68.5314, 17.2411, 3.6855, 3.7215, 115.2797, 5.2322, 6.4529, 10.0659, 13.2888, 0.2176, 20.7207, 11.592, 8.8352], [0.7783, 9.0024, 1.5751, 0.0, 10.0777, 68.5314, 27.6331, 6.4071, 10.4603, 121.3738, 6.6856, 7.4962, 14.2764, 7.4676, 0.0, 17.2141, 13.545, 8.3424], [0.0649, 13.7043, 1.8925, 9.2261, 73.2452, 21.2562, 0.0, 8.3984, 134.0698, 4.6732, 7.6894, 12.3685, 13.23, 2.1393, 14.4514, 7.434, 7.0752], [0.7135, 7.8556, 1.4042, 68.5314, 25.0351, 9.2534, 139.1482, 7.2894, 8.9258, 14.4738, 12.9948, 0.2538, 17.9579, 9.639, 8.7296], [3.0808, 12.9588, 1.6972, 0.0, 10.0777, 81.9476, 18.304, 3.024, 5.7331, 127.4678, 8.4074, 6.1438, 15.658, 14.406, 0.2176, 19.5518, 10.962, 6.6528], [0.8756, 6.4794, 0.0, 0.0, 15.1876, 83.398, 21.9647, 5.4243, 9.6054, 148.7971, 8.3403, 8.3076, 4.8685, 11.9952, 0.3263, 20.827, 14.616, 13.376]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

