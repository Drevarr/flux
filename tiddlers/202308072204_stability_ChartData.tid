created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Inedible Plant", "Luke The Ghastly", "Legacy Of Mathus", "Cedryn X", "Arriasa", "Zaedy Zae", "Oo Dads Mad", "Tribal S", "Belvyn Brightblade", "Be\u00eb", "K\u00e2 \u00d4tik R\u00e6j", "Arcanophage Farra", "Aira Draugr", "Newtype Khan", "Jmbrage Gaurdian", "Amiti\u00e9l", "Xanvias Einzbern", "Blancooo Padreee", "Ryvalia Fazebringer", "Mistwalker Cael", "Zaylen Harker", "Kisumaiassu", "Sub Train", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Berserker", "Vindicator", "Scourge", "Berserker", "Berserker", "Druid", "Druid", "Berserker", "Druid", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Herald", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.6468, 0.0, 0.0, 1.2474, 0.943, 1.2408, 0.8536, 0.3843, 0.0, 0.0, 0.0, 0.0, 0.836, 0.8333, 0.0, 0.0, 1.0002, 1.224], [0.0, 0.0, 6.7158, 0.0, 0.0, 0.0, 0.0, 0.2829, 0.0, 1.3658, 0.1098, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9287, 0.0], [0.0549, 0.8928, 0.5076, 1.7707, 1.0842, 1.518, 0.4948, 0.7501, 0.0, 1.786, 0.7344], [0.0, 0.0, 0.0, 0.0, 3.3005, 0.924, 1.7499, 0.9882, 0.0, 0.0, 0.0, 0.8131, 0.99, 0.0, 1.0716], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.1616, 0.0, 1.8666, 1.9418, 0.0, 0.0, 0.0, 0.0, 1.4843, 0.509, 0.0, 1.8932, 1.3464], [0.7043, 0.0, 1.4742, 0.5544, 0.8501, 0.7285, 1.3891, 1.4145, 0.7128, 0.2134, 1.098, 0.5076, 0.6983, 0.5421, 0.198, 0.7552, 0.1072, 0.0, 0.5715, 0.0], [0.0, 0.7687, 1.638, 0.8778, 0.6569, 0.3525, 0.7087, 1.1316, 0.7656, 1.0243, 0.2745, 0.0, 0.5076, 0.7482, 0.271, 0.374, 0.7812, 0.4554, 0.0, 0.5001, 0.7752], [0.0, 0.0, 0.0, 2.9106, 0.0, 1.1045, 1.7861, 4.4321, 1.4784, 1.7499], [0.0, 0.8917, 0.0, 0.924, 0.8308, 0.5875, 1.2757, 2.9233, 0.0, 1.067, 1.4274, 0.0, 0.7403, 0.5487, 0.5082, 0.44, 0.5989, 0.0536, 0.0, 0.5001, 0.4488], [0.0, 0.0, 0.0, 0.0, 0.0, 3.6288, 7.7326, 1.2144, 3.7558], [0.0, 0.0, 0.0, 1.617, 0.0, 1.034, 1.5593, 2.0746, 1.6368, 2.9022, 1.9215, 0.0, 1.7343, 0.9727, 0.0521, 0.7233, 1.0359, 0.8976], [0.0, 0.0, 0.0, 3.3726, 0.0, 1.222, 2.2964, 3.3005, 0.0, 0.7682, 2.196, 0.0, 1.1209, 1.1223, 0.0, 0.77, 1.276, 0.0, 0.0, 1.224], [0.9391, 0.0, 1.3398, 0.0, 1.8095, 1.6159, 3.6777, 0.0, 0.0, 0.0, 1.7782, 0.0, 0.0, 1.3552, 1.518, 1.302, 1.3931, 0.0, 0.0, 2.4072], [0.0, 3.936, 4.914, 1.5246, 2.4536, 2.021, 0.0, 4.9036], [0.0, 0.0, 0.0, 0.0, 0.0, 1.128, 1.8428, 4.9036, 0.0, 1.7499, 1.7019, 0.0, 1.7766, 0.9976, 1.7956, 1.056, 0.0, 1.4467, 1.8574, 0.8568], [4.576, 9.2442, 7.528, 6.6082, 3.1416], [4.5264, 0.7128, 1.0243, 5.2155, 1.7131, 2.7434, 3.8623, 3.41, 3.2029, 4.5543, 0.1792, 1.8932, 5.2224], [0.0, 2.3678, 2.6754, 0.7854, 0.0, 1.1985, 2.0128, 7.4497, 2.4024, 3.3717, 3.5685, 1.1086, 1.0998, 2.2197, 2.5071, 2.398, 1.3801, 1.6878, 2.8933], [0.0, 0.0, 1.8564, 6.8838, 0.5216, 0.141, 2.3247, 8.7699, 2.64, 4.268, 2.3607, 1.3113, 1.5712, 2.5071, 2.684, 0.625, 3.7506, 0.0, 2.3575, 1.5912], [1.9174, 0.0, 4.5318, 3.2802, 0.0, 1.8095, 7.3994, 7.8269, 0.0, 3.4144, 7.137, 1.5863, 2.6686, 0.0, 2.728, 6.4319, 0.8841, 3.572, 2.3256], [0.0, 0.0, 5.6238, 1.4784, 3.9413, 0.0, 2.4097, 11.316, 1.6368, 4.9509, 6.0939, 0.3794, 2.4957, 2.1448, 2.1344, 2.64, 3.3852, 1.7413, 3.6434, 3.6312], [2.8565, 0.5842, 12.4488, 6.3294, 1.8934, 4.324, 6.8891, 12.0704, 3.036, 5.5911, 7.7958, 3.8614, 2.4957, 3.8906, 3.2186, 1.122, 0.6965, 0.0, 5.1794, 5.4672], [0.0, 1.2915, 12.4488, 11.1342, 3.4003, 3.149, 10.0642, 21.3118, 1.6896, 7.597, 3.4587, 7.1699, 2.6436, 3.4558, 5.676, 6.1454, 1.5002, 0.0, 6.5725, 1.224], [0.0, 0.0, 5.187, 12.6126, 0.0, 4.559, 9.8091, 23.575, 2.3232, 8.4506, 12.078, 0.0, 5.8797, 6.3597, 4.8787, 5.038, 6.9006, 6.0278, 0.0, 6.894, 7.14], [8.413, 3.2595, 6.0606, 13.4904, 0.1159, 6.392, 11.0849, 28.7615, 5.676, 10.4566, 12.2427, 0.372, 6.1335, 7.6566, 5.3192, 7.216, 7.3433, 5.6527, 0.0, 8.2156, 8.16], [6.3782, 3.9053, 16.7076, 8.6394, 3.4969, 5.64, 8.3065, 26.5926, 7.2072, 10.0298, 13.9995, 1.555, 5.3933, 6.4595, 7.1148, 3.454, 5.3903, 6.7243, 0.0336, 8.1799, 9.3432], [6.613, 7.1032, 16.8714, 11.1342, 6.0665, 9.2355, 8.2215, 29.7988, 3.036, 8.4933, 13.3956, 4.9491, 3.5165, 8.5039, 6.622, 4.1143, 6.3224, 0.0, 7.0726, 7.4664]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

