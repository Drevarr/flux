created: 20230626010646000
creator: Drevarr
modified: 20230705163537147
modifier: drevarr
tags: ChartData
title: 202306260106_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Yngvar The Burdened", "Microsakis", "Elonith Requiem", "Phageir", "Rednuii", "Xanvias", "Iskalla", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scourge", "Berserker", "Scourge", "Catalyst", "Tempest", "Reaper", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[306, 1388, 11701, 6579, 260, 4075, 589, 492, 1076, 285, 483, 565, 437, 397, 1113, 400, 258, 622, 346, 265, 11187, 2735, 1079, 5494, 1928, 688, 1971, 1520, 10295, 1937, 435], [445, 1672, 315, 248, 290, 379, 334, 532, 391, 510, 547, 11429, 2463, 157, 5676, 1326, 463, 1706, 1128, 303, 665, 482, 634, 309, 325, 6192, 1427, 553], [1965, 436, 375, 3151, 567, 4545, 2252, 597, 455, 3258, 650, 12704, 366, 255, 405, 445, 278, 604, 959, 691, 730, 597, 517, 232, 702, 817, 450, 834, 1597, 1168, 478, 1125, 888, 361, 6481, 863, 986, 3267], [364, 727, 657, 1192, 441, 1312, 11982, 3320, 326, 1361, 659, 7994, 490, 304, 275, 608, 846, 2625, 836, 264, 278, 682, 379, 259, 179, 340, 280, 6351, 671, 495, 928, 1296, 299, 789, 497, 355, 674, 355, 679, 3669, 467], [489, 358, 858, 609, 494, 351, 2187, 2787, 1087, 794, 254, 121, 577, 704, 422, 945, 1108, 1234, 769, 1347, 475, 917, 893, 299, 441, 700, 429], [252, 1043, 243, 1310, 5035, 2371, 264, 583, 436, 235, 404, 380, 211, 866, 385, 421, 596, 300, 235, 286, 544, 927, 512, 216, 595, 256, 1105, 271, 336, 512, 345, 454, 297, 752, 981, 698], [245, 816, 441, 180, 269, 4981, 806, 302, 26927, 197, 286, 284, 315, 2184, 857, 284, 426, 332, 322, 552, 206, 565, 366, 493, 310, 464, 789, 1140, 284, 282, 338, 431, 313, 353, 1352, 3018, 1395], [224, 363, 276, 223, 288, 3230, 280, 309, 385, 292, 256, 245, 382, 220, 883, 450, 729, 290, 361, 205, 10837, 859, 8297, 450, 560, 847, 182, 1150, 240, 325, 393, 256, 334, 261, 2415, 1951, 380], [1195, 652, 584, 9629, 448, 1053, 231, 237, 220, 4359, 760, 382, 325, 289, 200, 520, 283, 230, 453, 245, 398, 535, 218, 226, 153, 558, 514, 457, 254, 415, 417, 1245, 268, 524, 513, 344, 201, 238, 542, 599]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

