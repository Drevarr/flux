created: 20230510220110000
creator: Drevarr
modified: 20230705163529414
modifier: drevarr
tags: ChartData
title: 202305102201_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Pymmera", "Aira Draugr", "River No Hug", "Kosa\u00efr", "Gavann", "No Reserv\u00e9", "Maaaathexxs", "Roxy Willowmoon", "Kary\u00edna", "Venomina The Siren", "Dimsnail", "Etchery Howls", "Permanent Dawn", "Khailerian", "Tootsy Pop Tart", "Mike The Archmagus", "Miphest\u00f6", "Evan Nightroad", "Be\u00eb", "Elonith Requiem", "Mac Aaroni", "Rozaalyna", "Farra The Bloodless", "Raelyn Sunray", "Primal Clone", "Tegan Parker", "Ark Darkness", "Black Raspberry Pie", "Artakama Nahid", "Husky Guard", "Blancooo Padreee", "Belvyn Brightblade", "Mistwalker Caelon", "Sub Train", "Tribal S", "Demon Sekhmet", "Oops All Beans", "Smol Gluvs", "Zaidy Sagemist", "Solus Sanctus", "Xanvias Einzbern", "Johoshua", "Sygaldry Verdandi", "Eibh\u00ebar", "Koralia Danai", "Lucas Ryn", "Ryvalia Fazebringer", "Tika Fiery", "Bella Sassy", "Drevarr Moonwillow"];
const professions = ["Weaver", "Herald", "Scourge", "Weaver", "Firebrand", "Herald", "Scourge", "Scrapper", "Vindicator", "Tempest", "Vindicator", "Druid", "Weaver", "Vindicator", "Scourge", "Weaver", "Tempest", "Vindicator", "Scourge", "Scourge", "Tempest", "Scourge", "Vindicator", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Tempest", "Dragonhunter", "Spellbreaker", "Firebrand", "Vindicator", "Firebrand", "Druid", "Spellbreaker", "Spellbreaker", "Scourge", "Vindicator", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 0, 2, 0, 0, 0, 1, 16, 1, 0, 4], [0, 0, 17, 3, 1, 13], [0, 1, 8, 6, 0, 8, 0, 2, 0, 0, 2, 4, 4, 1], [0, 0, 8, 7, 0, 14, 0, 2, 0, 0, 1, 0, 7, 0], [1, 2, 0, 1, 6, 5, 18, 1, 0, 6], [1, 1, 4, 4, 1, 14, 0, 0, 0, 0, 0, 3, 9, 2, 0, 2], [1, 3, 1, 0, 18, 0, 2, 0, 0, 0, 4, 11, 2, 0], [1, 0, 10, 15, 0, 18], [0, 0, 12, 2, 0, 11, 0, 0, 0, 0, 1, 6, 4, 1, 1, 7], [4, 5, 0, 14, 0, 3, 1, 2, 3, 14, 0, 1], [2, 4, 15, 3, 0, 9, 0, 2, 0, 2, 1, 4, 1, 0, 6], [0, 11, 6, 0, 16, 0, 2, 0, 5, 3, 7, 1], [1, 15, 4, 2, 16, 0, 1, 0, 1, 4, 5, 4, 0, 0], [0, 1, 3, 3, 0, 21, 0, 6, 0, 0, 10, 2, 4, 2, 1, 1], [0, 1, 8, 3, 1, 12, 0, 0, 1, 10, 2, 8, 2, 3, 3], [0, 0, 12, 10, 1, 15, 0, 1, 0, 0, 3, 7, 3, 1, 1], [3, 2, 14, 0, 14, 0, 7, 0, 7, 3, 6, 1, 2], [1, 6, 8, 1, 18, 1, 4, 0, 0, 6, 2, 8, 1, 1, 5], [1, 0, 10, 7, 1, 14, 3, 0, 1, 7, 2, 10, 1, 2, 4], [2, 2, 9, 8, 2, 21, 0, 1, 0, 1, 2, 5, 4, 1, 3, 3], [3, 2, 8, 11, 2, 15, 0, 3, 0, 1, 2, 3, 10, 2, 0, 2], [1, 8, 0, 39, 0, 3, 0, 1, 7, 5], [12, 2, 4, 19, 0, 2, 0, 2, 4, 3, 10, 2, 4, 0], [27, 1, 4, 0, 1, 5, 3, 14, 2, 3, 4], [0, 1, 9, 8, 1, 20, 0, 7, 0, 1, 3, 3, 7, 0, 2, 6], [1, 15, 14, 0, 16, 0, 1, 0, 3, 4, 7, 1, 0, 6], [12, 7, 3, 16, 4, 1, 0, 1, 10, 4, 11, 1], [3, 0, 9, 14, 2, 22, 0, 2, 0, 1, 3, 5, 6, 0, 0, 6], [1, 0, 13, 14, 3, 25, 0, 1, 0, 1, 0, 1, 6, 2, 2, 4], [1, 17, 4, 2, 18, 1, 5, 1, 1, 3, 8, 1, 3, 8], [2, 1, 14, 11, 0, 19, 0, 7, 0, 2, 4, 5, 5, 1, 0, 4], [3, 3, 15, 21, 3, 30], [2, 0, 4, 11, 1, 20, 1, 3, 0, 1, 7, 6, 11, 0, 0, 9], [2, 9, 10, 2, 20, 2, 4, 0, 0, 6, 4, 11, 2, 5], [3, 1, 14, 14, 2, 18, 0, 1, 1, 1, 5, 6, 5, 0, 4, 3], [1, 0, 6, 11, 1, 19, 0, 6, 0, 1, 17, 2, 11, 2, 2, 3], [0, 1, 11, 19, 1, 23, 0, 3, 0, 4, 3, 9, 2, 1, 5], [2, 2, 10, 11, 1, 23, 0, 5, 0, 1, 6, 1, 9, 3, 1, 11], [0, 2, 11, 15, 1, 20, 6, 0, 13, 5, 6, 3, 0, 6], [2, 2, 10, 8, 2, 25, 0, 4, 1, 4, 5, 6, 12, 2, 3, 5], [3, 2, 15, 14, 1, 27, 0, 2, 0, 2, 3, 11, 3, 2, 9], [1, 4, 15, 6, 1, 23, 0, 4, 0, 2, 14, 5, 10, 1, 4, 5], [2, 18, 5, 2, 28, 1, 7, 3, 8, 2, 9, 2, 5, 6], [2, 4, 16, 6, 2, 28, 0, 4, 0, 2, 5, 7, 11, 4, 2, 8], [4, 6, 12, 10, 2, 31, 0, 6, 0, 1, 3, 5, 13, 2, 1, 10], [3, 14, 14, 2, 24, 1, 2, 0, 1, 13, 6, 16, 3, 1, 9], [2, 2, 19, 14, 0, 27, 0, 10, 0, 1, 7, 7, 17, 3, 2, 7], [1, 5, 19, 14, 5, 26, 0, 2, 0, 2, 17, 4, 11, 2, 4, 6], [1, 0, 29, 15, 3, 39, 0, 7, 2, 9, 9, 16, 3, 1, 6], [0, 3, 26, 28, 2, 32, 0, 6, 0, 1, 13, 5, 15, 3, 3, 8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

