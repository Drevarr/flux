created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Nelanthrope", "Enter Effore", "Little Hud", "Scarlet Merc\u00fcry", "Wreakit Herm", "Tybalt Returns", "Hahrruun", "Locopuff", "Whip \u00d1 Sl\u00e0pper", "Dizzy Bunnyhopper", "Dizzy Bunnyhopper", "Ria Zerrah", "Palaven Night", "Erinthal", "Zogratis Lucius", "Ephuras", "Sigewulf Bloodhawk", "Chocolate Teapot", "Notorious H U D", "Danaeryn", "Govinda Ektar", "Necrotic Windrunner", "Drevarr Moonwillow", "Gestern Yesteryear", "Kaiya Tseng", "Tybalt Returns", "Porlen", "Yngvar The Burdened", "Legoh Brave", "Luke The Knight", "Xanvias Einzbern", "Hit The Gas", "Anti Jimbo", "Latedoctor", "Mirhayna", "Elonith Requiem", "Charr Surethang"];
const professions = ["Druid", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Scrapper", "Revenant", "Firebrand", "Tempest", "Holosmith", "Mechanist", "Vindicator", "Reaper", "Druid", "Virtuoso", "Reaper", "Berserker", "Chronomancer", "Firebrand", "Tempest", "Vindicator", "Reaper", "Scrapper", "Firebrand", "Catalyst", "Mechanist", "Ranger", "Scourge", "Tempest", "Berserker", "Berserker", "Berserker", "Weaver", "Reaper", "Berserker", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.3478, 0.0, 0.0, 41.1071, 24.303], [62.3391, 108.75, 61.5455, 18.4286, 0.0], [150.7273, 43.2143, 160.4697], [41.3217, 76.2708, 63.0, 84.0455], [9.7133, 388.973], [195.386, 10.4545, 244.1892], [0.0, 1.4576, 73.7273, 151.1481, 16.5946, 0.0, 0.0, 0.0, 63.1073, 22.1429, 0.0, 0.0, 9.9406], [15.564, 5.5455, 59.3864, 37.1638, 130.4034, 0.0, 14.575, 2.8182, 93.2162], [1.8132, 0.0, 11.9394, 96.9184, 27.9119, 22.0339, 305.7818, 30.3333], [328.2435], [295.3182, 797.1061, 167.5385], [160.8087, 451.2708, 151.3636, 437.3929, 261.2424], [376.6957, 8.75, 76.9091, 129.1786, 470.2879], [26.9391, 5.3333, 53.5, 0.0, 30.9091, 20.1154, 17.3619, 17.7255, 21.7879, 74.4796, 49.1347, 49.2034, 250.6, 5.2581, 51.4815, 29.3189, 32.386, 160.7778, 0.0, 0.0, 50.9318, 85.5424, 12.4286, 2.8594, 0.0, 5.5455, 0.0], [61.0556, 69.4709, 75.961, 0.0, 51.113, 216.5294, 11.7344, 319.95, 13.8147, 403.5405], [189.5622, 1065.1754], [592.8, 441.6042, 102.3182, 34.9643, 290.9545], [281.8522, 160.1875, 262.7727, 675.1786, 85.8636, 342.3462, 35.9883, 27.549, 19.1818, 56.8061, 53.3938, 126.1186, 353.1636, 120.3226, 186.1111], [0.0, 33.2763, 107.3725, 12.8788, 63.5714, 127.9845, 69.2881, 231.4545, 72.8519, 70.8432, 7.5439, 32.5185, 19.8256, 0.0, 49.1591, 66.8305, 293.4706, 14.6719, 13.8, 101.4441, 128.4865], [64.2724, 0.0, 63.3333, 23.449, 107.228, 25.7288, 351.9273, 47.5484, 109.5556, 133.8108, 8.4912, 13.3519, 39.7674, 0.0, 1.0227, 85.6102, 190.5714, 0.0, 0.0, 0.0, 750.9459], [159.5642, 96.8235, 0.0, 33.2347, 151.7772, 127.4576, 400.8364, 308.5, 84.6811, 55.386, 66.9815, 20.9477, 0.0, 99.9318, 54.5537, 138.4538, 41.4], [84.8895, 44.2208, 267.5763, 741.9412, 89.4844, 239.325, 3.7517, 505.4865], [124.6348, 90.875, 135.0909, 352.6429, 257.5, 123.9615, 38.9416, 60.4118, 217.5758, 40.2143, 89.513, 60.678, 358.4182, 0.0, 63.1111, 100.5459, 19.9649, 305.1667, 35.1105, 0.0, 139.8864, 142.9887, 173.3445, 64.075], [68.1739, 70.3333, 88.5, 340.9286, 144.2273, 179.7308, 39.5953, 48.4314, 52.1212, 109.1735, 48.0829, 33.7288, 67.0727, 85.1481, 111.2108, 79.0526, 61.1337, 0.0, 492.5227, 378.3729, 143.7059, 59.7656, 97.225, 19.4825, 66.0], [911.3217, 250.6458, 407.1364, 1355.5714, 1179.2121], [101.2378, 621.8333, 210.2849, 460.9605, 653.3193, 193.3125, 1109.65], [201.5304, 205.3333, 0.0, 408.3571, 334.1212, 166.4319, 47.7647, 545.8485, 315.6633, 14.6839, 353.2881, 466.0727, 411.7742, 787.537, 70.5351, 701.0, 52.9815, 64.5], [0.0, 28.0968, 680.8889, 688.7135, 912.8596, 189.8704, 37.0698, 0.0, 86.8409, 395.9266, 917.3445, 0.0, 51.7, 29.0874, 580.027], [188.2373, 1288.5636, 1.2903, 1001.7037, 502.5081, 528.1754, 0.0, 118.3779, 0.0, 938.5, 514.2938, 273.8992, 33.6719, 188.1, 91.8147, 388.0811], [756.1401, 1416.1373, 1042.5152, 94.1735, 547.6736, 1165.4237, 1725.2, 2232.8704], [1366.5043, 2781.7708, 3229.5, 323.7857, 3987.9394, 1135.9615, 1182.428, 3736.1373], [961.5784, 1410.2456, 1243.5741, 399.3256, 158.6364, 1161.5227, 1387.322, 2418.1765, 259.0938, 1584.175, 548.1119, 1243.0541], [1124.0778, 0.0, 753.197, 202.0, 956.5544, 1024.9153, 2204.8727, 0.0, 837.7037, 1068.5243, 785.8246, 538.3704, 299.814, 71.5065, 1558.1364, 695.661], [415.0435, 633.0833, 1543.6818, 1228.8214, 1006.6364, 99.3077, 561.6031, 609.4902, 623.7879, 163.4694, 192.5648, 731.6271, 1587.7636, 141.6452, 2148.6296, 751.1351, 1027.0702, 65.8889, 130.0349, 0.0, 597.0682, 833.4859, 1100.7731, 1320.6, 57.3671, 497.8378], [445.0102, 588.601, 1626.9322, 2683.7818, 0.0, 2146.6667, 1081.2757, 2618.5263, 399.7593, 796.1686, 0.0, 2749.3864, 1739.0565, 3346.3193, 45.5781, 710.75], [1689.3182, 504.3265, 1292.2228, 1298.8983, 3953.4909, 0.0, 1025.8148, 1678.8324, 2114.9298, 415.0185, 198.1337, 64.6364, 1631.5682, 1565.2938, 2541.5966, 109.1094, 2812.8, 273.5, 654.0], [1672.3826, 765.3125, 2846.3636, 2342.7576, 2698.0769, 1128.7198, 2540.7843, 1634.6061, 34.602, 236.772, 1337.7458, 3836.1455, 1370.9815, 1284.4378, 2863.7018, 201.6296, 227.2267, 0.0, 56.9545, 964.4068, 2814.0588, 0.0, 1593.025, 3.0315]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

