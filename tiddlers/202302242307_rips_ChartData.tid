created: 20230224230708000
creator: Drevarr
modified: 20230705163520163
modifier: drevarr
tags: ChartData
title: 202302242307_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "R\u00fana Bierdna", "Oo Dads Mad", "Irish Necroman", "Daring Deathblade", "Dark Sidiuz", "Panther B Me", "Arcanophage Farra", "Rozaalyna", "Ez Mode Mathus", "Newtype Khan", "Nazhul Naxxremis", "Smol Gluvs", "Primal Clone", "Black Raspberry Pie", "Rina Of Theros", "Elonith Tenebris", "Arka\u00f1"];
const professions = ["Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2896, 0.319, 0.0541, 0.4286, 0.2857, 0.2677, 0.1637, 0.0, 0.0], [0.0374, 0.0, 0.1111, 0.0, 0.0, 0.3125, 0.0905, 0.0, 0.0, 0.037, 0.2151, 0.2925, 0.0339, 0.2969, 0.0645, 0.0, 0.0, 0.1812, 0.2188, 0.1382, 0.1566, 0.1633], [0.0514, 0.181, 0.3793, 0.4459, 0.2143, 0.7068, 0.2047, 0.1579, 0.6275, 0.0, 0.0, 0.25, 0.0], [0.1571, 0.3985, 0.1457, 0.0, 0.0533, 0.6296, 0.1935, 0.2358, 0.5593, 0.1328, 0.1774, 0.2045, 0.0, 0.2437, 0.3125, 0.1626, 0.0843, 0.2041], [0.04, 0.2211, 0.2267, 0.5926, 0.3871, 0.3679, 0.4746, 0.5469, 0.4032, 0.3864, 0.1698, 0.5375, 0.6354, 0.5366, 0.3494, 0.4286], [0.0607, 0.3756, 0.0, 0.1216, 0.2286, 0.5263, 0.1811, 0.1053, 0.0784, 0.0303, 0.4082, 0.24, 0.0905, 0.027, 0.08, 0.0, 0.434, 0.5932, 0.3984, 0.629, 0.0227, 0.0377, 0.4188, 0.625, 0.2927, 0.1205, 0.5306], [0.0748, 0.1629, 0.3276, 0.2838, 0.2429, 0.3835, 0.2992, 0.2573, 0.5098, 0.0909, 0.0, 0.6875, 0.0, 0.1307, 0.0, 0.08, 0.2593, 0.1613, 0.2358, 0.7797, 0.4766, 0.3548, 0.0455, 0.0, 0.4625, 0.0, 0.3333, 0.2048, 0.2449], [0.1028, 0.0, 0.0431, 0.2162, 0.3429, 0.4737, 0.3622, 0.2515, 0.4118, 0.0, 0.0, 0.0, 0.56, 0.2211, 0.0, 0.1467, 0.0, 0.4194, 0.7358, 0.6102, 1.0469, 0.6935, 0.0, 0.0, 0.475, 0.2358, 0.9157], [0.1402, 0.2715, 0.3707, 0.3919, 0.2286, 0.5564, 0.5276, 0.3392, 0.2549, 0.0, 0.102, 0.875, 0.2412, 0.1467, 0.4074, 0.5699, 0.8396, 1.0, 0.5781, 0.5806, 0.1364, 0.0, 0.4125], [0.1402, 0.2398, 0.4741, 0.3784, 0.4714, 0.3459, 0.5354, 0.2339, 0.2424, 0.0, 0.0, 0.1709, 0.0, 0.28, 0.6667, 0.5914, 0.1698, 0.9831, 0.125, 0.6129, 0.0682, 0.0, 0.7125, 0.9062, 0.6179, 0.7349, 0.6327], [0.1636, 0.2172, 0.4741, 0.2162, 0.5429, 0.1654, 0.2362, 0.3626, 0.4314, 0.0606, 0.0, 0.0, 0.12, 0.2312, 0.2973, 0.1867, 0.2222, 0.3333, 0.7736, 0.7966, 0.9375, 0.5968, 0.0, 0.0, 0.525, 0.9375, 0.5691, 0.6024, 0.5306], [0.1075, 0.2805, 0.3362, 0.4459, 0.4, 0.8271, 0.5118, 0.3743, 0.7059, 0.2424, 0.2245, 0.0, 0.1859, 0.1351, 0.2133, 0.3333, 0.3118, 0.217, 0.4576, 0.8125, 0.5806, 0.0682, 0.0, 0.6562, 0.6562, 0.6179, 0.4819, 0.4898], [0.0841, 0.2081, 0.3793, 0.4595, 0.5, 0.5113, 0.2441, 0.2339, 0.2157, 0.1515, 0.1429, 0.9375, 0.04, 0.3266, 0.1351, 0.3067, 0.4444, 0.5161, 0.4245, 0.8136, 0.3438, 0.9677, 0.6136, 0.0189, 0.425, 1.1146, 0.6911, 0.5301, 0.8367], [0.1495, 0.3665, 0.3017, 0.3649, 0.4571, 0.3759, 0.4488, 0.0585, 0.451, 0.1515, 0.0204, 0.5, 0.0, 0.5327, 0.2703, 0.1067, 0.3704, 0.4839, 0.7264, 1.2034, 0.7969, 0.6452, 0.25, 0.0377, 0.6312, 0.4375, 0.6585, 0.5181, 0.0408], [0.1495, 0.2896, 0.6034, 0.6216, 0.6, 0.406, 0.3858, 0.0468, 0.2549, 0.1515, 0.0408, 0.7812, 0.4774, 0.1081, 0.16, 0.4815, 0.4516, 0.3585, 0.5932, 0.9531, 0.5323, 0.9773, 0.0566, 0.5875, 1.1667, 1.2439, 0.5783, 0.1633], [0.2196, 0.3167, 0.3276, 0.5811, 0.8571, 0.7744, 0.6063, 0.3509, 0.8824, 0.0303, 0.2449, 0.75, 0.16, 0.4724, 0.1081, 0.28, 0.5556, 0.4731, 0.8585, 0.7458, 0.9141, 0.7742, 0.0682, 0.0, 0.5, 1.0312, 0.7398, 0.6024, 0.5714], [0.1495, 0.2398, 0.681, 0.4324, 0.7286, 0.6466, 0.622, 0.3392, 0.8627, 0.3636, 0.1429, 0.9688, 0.04, 0.5427, 0.2973, 0.56, 0.8889, 0.6882, 0.8679, 1.1017, 0.5391, 0.7581, 0.1364, 0.0566, 0.825, 0.7708, 1.2114, 0.8313, 1.1429], [0.2056, 0.3167, 0.431, 0.1486, 0.6857, 0.7218, 0.6063, 0.3801, 0.7451, 0.1818, 0.1224, 0.5312, 0.5377, 0.0811, 0.3333, 0.6667, 1.0, 1.0189, 0.7627, 1.3281, 0.4355, 0.0227, 0.2264, 0.7688, 1.2708, 0.8455, 0.9639, 0.3469]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

