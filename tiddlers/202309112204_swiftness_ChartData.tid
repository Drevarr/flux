created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Tootsie Pop Rocks", "Xanvias Einzbern", "Mike The Archmagus", "Ra Kilian", "Aira Draugr", "Miphest\u00f6", "Pl\u00eeo", "Jimbo The Pleb", "Belvyn Brightblade", "Cat Wigglebooty", "Tegan Parker", "Ryvalia Fazebringer", "Mistwalker Cael", "Etchery Howls", "Darks Na", "Sub Train", "Koralia Danai", "Drevarr Moonwillow", "Arcanophage Farra", "Sygaldry Verdandi", "Rafaellagabriela", "Solus Luxes", "Bella Sassy", "Crusader Siolith"];
const professions = ["Berserker", "Scrapper", "Berserker", "Weaver", "Herald", "Herald", "Tempest", "Scrapper", "Berserker", "Firebrand", "Scrapper", "Tempest", "Chronomancer", "Herald", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 79.8046, 0.0, 0.0, 122.5786, 63.425, 0.0, 0.0, 130.2796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 21.112, 25.7897], [0.0, 121.4946, 9.1683, 0.0, 0.0, 26.0208, 44.9513, 6.072, 54.1148, 25.9834, 0.0, 0.0, 20.6963, 24.1854, 0.0, 38.2235, 0.0, 12.4855, 0.0, 14.892, 31.1966, 0.0, 0.0, 0.0, 0.0, 4.1184, 8.5281, 7.5894, 15.1011], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 106.1283, 0.0, 0.0, 12.8045, 3.4154, 0.0, 0.0, 0.0, 73.8781, 63.7248, 0.0, 0.0, 6.741, 3.57, 25.5633, 0.0, 0.0, 0.0, 0.0, 13.1508, 39.2227, 5.6511, 114.1043], [0.0, 0.0, 1.365, 0.0, 0.0, 51.2827, 0.0, 0.0, 9.1804, 29.952, 9.9431, 41.2874, 76.4583, 26.2108, 9.9756, 29.2096, 49.98, 26.5188, 49.0518, 37.485, 0.0, 20.0081, 121.1998, 0.0, 0.0, 0.0, 50.127, 0.0, 9.0178], [104.5453, 211.6778, 214.2159, 95.9613, 84.5676], [42.8458, 262.836, 0.0, 326.5203, 0.0, 45.2945, 17.064, 21.122, 0.0, 0.0, 0.0, 0.0], [172.3956, 222.7493, 259.0641, 25.2175, 23.5966, 50.3748], [51.2666, 0.0, 174.1225, 60.0985, 0.0, 0.0, 189.4464, 0.0, 0.0, 40.8055, 0.0, 34.2871, 0.0, 0.0, 0.0, 9.5625, 12.1601, 32.1998, 90.5323, 0.0, 0.0, 46.8234, 0.0, 0.0, 15.1225], [0.0, 0.0, 0.0, 29.5245, 35.4149, 0.0, 91.1282, 170.424, 6.6552, 142.1971, 25.0093, 0.0, 0.0, 54.7448, 49.7606, 120.6037, 0.0, 0.0, 0.0, 0.0, 84.188, 154.7122, 54.4917, 12.9553, 0.0, 2.7846, 0.0, 0.0, 5.6549], [13.6512, 0.0, 41.6325, 98.0582, 12.9182, 265.3037, 143.3835, 42.768, 55.5308, 227.0362, 10.4698, 9.2439, 137.8724], [0.0, 136.031, 7.917, 0.0, 0.0, 101.2643, 69.6574, 75.576, 52.7224, 51.7421, 8.2992, 0.0, 68.1629, 23.0536, 151.0423, 123.9696, 6.7812, 24.9826, 26.8758, 0.0, 36.519, 0.5098, 17.336, 4.4467, 0.0, 10.998, 130.5906, 8.3811, 36.4354], [0.0, 0.0, 0.0, 66.0026, 91.8317, 19.4119, 102.288, 26.7388, 67.6166, 0.0, 38.7002, 25.1393, 91.4399, 178.0351, 361.5258, 24.15, 0.0, 5.3802, 0.0, 0.0, 42.1741, 2.31, 0.0, 99.3564, 34.3077, 5.6147, 122.3082], [48.8074, 0.0, 0.0, 37.3555, 0.0, 51.7163, 0.0, 0.0, 90.7184, 300.2688, 4.5326, 0.0, 29.1042, 11.497, 0.0, 48.2072, 0.0, 0.0, 0.0, 0.0, 24.0481, 579.767, 189.5806, 0.0, 0.0, 4.3524, 4.1013, 0.0, 0.0], [21.9283, 19.8468, 101.0327, 179.3357, 48.3028, 75.0266, 98.4322, 68.928, 67.496, 217.3018, 31.7604, 88.962, 99.4042, 249.5983, 99.5213], [32.1235, 16.8538, 17.4905, 66.8412, 189.9687, 153.9763, 260.148, 33.6612, 16.967, 0.6552, 126.7095, 112.6262, 0.0, 31.4278, 95.403, 111.6192, 124.7922, 129.4839, 36.8277, 31.316], [88.465, 463.396, 86.2225, 144.2662, 57.0009, 651.821, 143.4325], [0.0, 565.4103, 187.0113, 139.608, 92.6536, 330.4454, 0.0, 133.9415, 129.8863, 93.8823, 230.8471, 49.006, 38.8938, 12.7627, 60.543, 51.4845, 133.1778, 118.4342, 30.7688, 86.2592, 85.7035, 41.4882, 149.372, 0.0, 57.0629], [0.0, 56.2684, 149.6722, 293.2992, 72.439, 746.4717, 101.4224, 129.216, 45.0524, 204.1978, 55.6685, 0.0, 43.0798, 25.3173, 98.9345, 240.6369, 13.7638, 37.3296, 50.904, 134.946, 108.78, 271.4897, 75.1733, 56.9415, 52.8609, 83.1168, 123.983, 31.5952, 15.8294], [78.5635, 385.0816, 145.7137, 16.6835, 48.0447, 293.6014, 176.7661, 107.184, 94.1404, 247.6282, 11.8742, 11.4268, 140.2626, 113.7191, 214.5341, 312.5199, 23.5637, 76.6458, 28.9296, 136.833, 196.4644, 156.7937, 250.6114, 103.1993, 131.4846, 31.7037, 44.7811, 99.5602], [45.8438, 290.0315, 120.3248, 6.1773, 58.8073, 151.2459, 223.041, 139.872, 55.9084, 165.9341, 33.7714, 258.6122, 129.6894, 6.8506, 167.2967, 382.235, 79.9662, 66.6204, 44.0748, 149.226, 242.8514, 1.0195, 293.6472, 110.4373, 127.0365, 216.45, 73.5305, 56.8841, 98.939], [50.3626, 161.0809, 31.486, 255.9923, 113.8045, 230.1757, 182.8936, 153.576, 75.638, 416.2579, 74.7088, 0.0, 99.0949, 133.1985, 296.0993, 288.5018, 130.7512, 117.1401, 115.479, 117.606, 64.0248, 276.2474, 268.7584, 91.5337, 18.0228, 87.0246, 58.3621, 80.3166, 117.8528], [233.16, 106.79, 781.2979, 81.6194, 226.2722, 125.1059, 271.3413, 215.3556, 179.5363, 34.1162, 75.2136, 46.7838, 210.2985, 234.4209, 531.1274, 374.5991, 114.9802, 52.9626, 80.4726, 231.4956, 49.8225, 77.3905], [0.0, 204.6902, 234.4615, 382.2131, 170.7143, 930.4604, 241.3745, 83.208, 84.4644, 607.5763, 48.694, 286.6671, 203.5044, 132.9602, 244.2848, 286.0487, 28.2013, 55.6594, 29.6478, 148.0275, 271.6781, 240.3518, 155.01, 118.349, 58.6439, 97.5078, 90.196, 65.7566, 60.0831], [0.0, 384.7597, 86.5865, 395.1514, 45.115, 809.1385, 294.3651, 145.248, 82.0336, 564.745, 102.9899, 296.0457, 165.7393, 178.1143, 270.1627, 185.2984, 60.4012, 130.515, 66.3138, 100.7505, 239.6268, 84.875, 437.3533, 66.7782, 65.2913, 112.2732, 260.042, 35.217, 126.635], [106.2979, 459.5875, 226.499, 402.5446, 131.8079, 821.3899, 340.3459, 168.096, 115.1208, 518.9184, 110.6826, 73.7306, 225.532, 340.7548, 479.0489, 73.1762, 69.8428, 88.2, 270.8355, 238.0339, 72.1735, 279.4033, 33.7452, 43.3836, 239.5354, 126.854, 27.8246]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

