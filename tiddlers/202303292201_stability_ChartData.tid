created: 20230329220116000
creator: Drevarr
modified: 20230705163523370
modifier: drevarr
tags: ChartData
title: 202303292201_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Seren Nightroad", "Pieca Pizzabringer", "Kiloak", "Ark Darkness", "Cael Saladbringer", "Ryvalia Fazebringer", "Gavann", "Bubble Teabringer", "Zaylen Harker", "\u00c4lplrmagron\u00e4bringer", "Ravioli Fetabringer", "Bella Lunabringer", "Johosh The Great", "Bura Beignetbringer"];
const professions = ["Scourge", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.5285, 2.5133, 16.3725, 2.0985, 0.0, 0.3393], [0.9663, 2.809, 44.2665, 7.1792, 0.0, 0.0, 0.0, 1.0437], [44.8729, 9.9405, 0.0, 1.4824, 3.4668, 2.6607], [4.1013, 0.0, 19.3264, 49.1176], [1.9316, 0.0, 34.3044, 0.0, 58.8198, 2.209, 0.0, 0.0, 0.0], [0.0, 0.0, 26.5738, 5.6179, 55.1815, 6.9584, 1.782, 0.0, 0.0, 1.4259], [3.3604, 0.0, 52.1813, 9.0922, 39.4153, 3.8658, 0.0, 2.0003, 0.0, 1.5141], [1.1113, 0.0, 47.8328, 6.2093, 93.9904, 13.6958, 2.1432, 2.3976, 1.0878], [2.646, 0.0, 62.3276, 4.4352, 89.1393, 11.8182, 0.0, 2.1075, 3.3696, 3.2487], [6.5092, 0.7056, 78.7551, 12.936, 87.3202, 15.3526, 1.881, 0.5001, 0.486, 1.7787], [0.979, 0.0, 66.6761, 5.6918, 127.9483, 9.7196, 0.0, 1.9764, 2.793], [5.5037, 4.8552, 117.4079, 13.2317, 104.9055, 25.2931, 6.501, 2.8397, 3.6936, 5.5272], [3.7309, 2.4192, 115.4752, 8.9443, 137.0441, 18.666, 0.0, 4.3936, 3.6612, 4.0425], [1.9051, 2.52, 123.2058, 15.745, 147.3528, 19.1078, 0.0, 2.8933, 2.2032, 3.9984]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

