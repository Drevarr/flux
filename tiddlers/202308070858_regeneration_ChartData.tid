created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Brace Stonebrow", "Avatar Shazbott", "A\u00fcrora Windrunner", "Unbreakable Nemesis", "Raghnaid", "Meryndah", "Xx Zen Xx", "Vee U", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Druid", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.5128, 44.7876, 16.9932, 37.9634, 28.9453, 18.4977, 28.6161, 171.2223, 222.1529, 0.0, 26.8604, 54.4658, 51.1465, 34.0772, 12.7188, 25.1438, 0.0, 130.7592], [41.1588, 0.0, 175.812, 0.0, 185.1096, 37.2515, 0.0, 0.0, 0.0, 112.6937, 91.178, 137.5771, 15.853, 70.7664, 24.531, 17.0126, 37.4313], [0.0, 0.0, 33.223, 14.9266, 57.3698, 178.7969, 101.8295, 297.2794, 33.8881, 140.506, 84.7311, 0.0, 175.7083, 266.9435], [8.582, 0.0, 50.7227, 33.8361, 53.5704, 47.9808, 0.0, 45.1955, 174.2262, 216.4552, 0.0, 30.263, 52.5283, 75.6122, 10.2063, 74.857, 0.0, 57.0856, 196.0526, 13.509, 98.0381, 107.2305, 116.6832, 139.062, 0.0, 255.2992], [57.9348, 212.7431, 427.8857, 334.5928, 323.4586, 288.5354, 190.5681, 136.4056, 97.3056, 99.5826, 49.6849], [73.8461, 104.976, 235.2, 178.5812, 427.3256, 32.2465, 60.0356, 295.2289, 11.9742, 278.0514, 268.7574, 147.7003, 100.6445, 143.7937, 19.9833], [132.0624, 1101.226, 368.1482, 1559.9948, 375.4108, 117.9149, 485.5466], [114.9131, 102.7337, 117.1388, 98.7056, 68.7398, 111.2813, 333.5507, 394.4218, 90.8917, 69.0378, 160.5451, 89.7948, 100.2747, 23.4937, 82.5451, 91.543, 276.6192, 447.9972, 38.1915, 180.2707, 220.383, 132.2276, 66.636, 377.398, 113.195, 496.366, 94.1298], [393.3119, 23.877, 454.6255, 171.2614, 235.3783, 113.3429, 144.3944, 160.9985, 808.6676, 777.7388, 32.8147, 211.0142, 631.2727, 160.1186, 530.8173, 0.0, 295.4333, 66.5244, 638.1804, 809.0443, 151.929, 469.5062, 1056.5835, 467.9716, 139.0068, 1160.614, 165.4478, 1337.05, 489.1673, 0.0, 614.2518, 283.7402]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

