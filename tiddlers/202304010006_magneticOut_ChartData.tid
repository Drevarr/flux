created: 20230401000636000
creator: Drevarr
modified: 20230705163523661
modifier: drevarr
tags: ChartData
title: 202304010006_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Tegan Parker", "Abigail Ryn", "Mac Chiato", "Mike The Archmagus", "Zadie Miststep", "Arkintor"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[40.1472, 0.0, 16.3817, 19.9543, 23.9855, 50.4328, 0.0, 20.124, 27.192, 40.0118, 23.0688, 0.0, 19.3458, 49.2685], [17.2992, 0.0, 20.0861, 15.8926, 20.0606, 31.2757, 20.0038, 0.0, 18.6384, 0.0, 50.7514, 0.0, 38.1506, 37.4541, 19.9584, 0.0, 19.5804, 20.0491, 0.0, 16.1222, 20.0534, 0.0, 0.0, 0.0, 20.0475, 0.0, 0.0, 0.0, 0.0, 54.4016], [0.0, 79.9092, 39.102, 16.9012, 38.246, 34.2922, 59.3116, 10.9805, 34.6368, 76.7448, 47.0774, 16.1146, 16.1773, 107.1674], [49.0906, 20.0038, 59.929, 5.9154, 49.6718, 52.9729, 49.6801, 17.4408, 49.7904, 42.1502, 77.9213, 0.0, 29.624, 71.4729, 37.1952, 0.0, 101.871, 60.191, 56.6135, 0.0, 50.5613, 20.0124, 0.0, 80.2386, 32.2312, 0.0, 19.9373, 32.2034, 19.8186, 89.6368], [53.4643, 65.8325, 34.9037, 36.5284, 29.2623, 60.5405, 38.855, 20.124, 17.16, 36.7805, 75.0163, 19.8937, 38.8461, 105.9943, 39.2256, 8.0271, 79.7769, 57.3082, 37.9456, 16.105, 60.2078, 19.9512, 51.759, 55.08, 39.8534, 31.6848, 10.2059, 49.6584], [56.2061, 36.5677, 18.8513, 19.8725, 37.9407, 74.1938, 40.0075, 40.2686, 78.4608, 56.4538, 19.9075, 20.0693, 40.1856, 113.6192, 19.5696, 0.0, 120.5253, 40.0546, 0.0, 0.0, 76.5547, 0.0, 1.848, 31.8816, 50.22, 39.1142, 99.7223, 19.7882, 55.418], [77.161, 37.0969, 58.4472, 37.6188, 40.2084, 57.7886, 19.9214, 56.2234, 87.9648, 20.0059, 96.4618, 0.0, 78.2589, 155.9332, 19.8936, 55.9629, 0.0, 51.2266, 93.4718, 14.2902, 0.0, 33.9714, 35.9775, 0.0, 19.9373, 39.9361, 0.0, 40.0268]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

