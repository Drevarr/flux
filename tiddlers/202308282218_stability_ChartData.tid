created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["He Dunno", "Newtype Khan", "Belvyn Brightblade", "Govinda Ektar", "Zaedy Zae", "Arcanophage Farra", "Aira Draugr", "My Birthday Girl", "Xanvias Einzbern", "No Reserv\u00e9", "Mar\u00eda Callas", "Sub Train", "Mistwalker Cael", "Darks Na", "Solus Luxes", "Crusader Siolith", "Bella Sassy", "Koralia Danai"];
const professions = ["Dragonhunter", "Spellbreaker", "Firebrand", "Vindicator", "Druid", "Spellbreaker", "Herald", "Scrapper", "Berserker", "Vindicator", "Dragonhunter", "Firebrand", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7636, 1.2096, 0.5418, 4.0575, 3.6494, 0.0, 0.0, 19.1268, 1.8533], [0.0, 1.7575, 2.8228, 1.5568, 0.0, 0.0, 1.9008, 0.0, 7.7142, 0.0, 1.8963, 2.1556, 0.4536, 0.0, 1.8838, 0.0, 3.6494, 0.0, 0.0, 10.4742, 1.9958, 0.0, 0.0, 0.0, 0.0], [0.2088, 3.2338, 12.546, 0.0, 2.2304, 0.0, 3.8015, 0.8579, 10.6812, 1.7901, 0.0, 1.4697, 2.9106], [8.901, 0.0, 3.1184, 10.6798, 2.8728, 14.7808, 0.0, 4.9126, 0.0, 1.8216, 5.1322, 0.1613, 0.0], [0.7656, 1.3357, 8.4686, 0.6919, 1.394, 0.7956, 3.3013, 1.219, 7.4175, 0.7803, 0.8428, 2.3515, 0.6426, 0.8729, 2.6084, 0.8173, 2.8072, 0.9402, 0.0, 10.0188, 4.2768, 0.8872, 0.0, 0.7258, 0.8921], [3.2573, 0.0, 4.0774, 1.0955, 5.6875, 3.4808, 6.6026, 1.3545, 10.6812, 5.1867, 2.6127, 0.7838, 1.9656, 0.0, 2.0287, 0.8869, 6.4566, 2.8207, 2.1067, 1.3662, 3.1363, 0.0, 3.6826, 2.7612], [0.0, 8.2251, 30.1104, 0.9033, 0.0, 0.0, 12.0048, 0.6773, 7.1208, 0.0, 2.9498, 8.1323, 2.079], [0.3202, 4.2883, 17.2508, 0.0, 2.565, 0.9746, 3.8015, 3.1605, 9.4944, 0.0, 1.3485, 2.1556, 1.2474, 3.8227, 3.0431, 0.0, 4.6319, 0.6044, 0.0, 22.3146, 4.4194], [0.0, 3.3744, 20.7009, 1.1724, 3.011, 0.9945, 6.4026, 0.0, 11.5713, 0.0, 1.7699, 4.3111, 2.268, 2.5585, 5.2168, 0.7999, 5.8951, 0.0, 1.3306, 21.8592, 3.4214, 1.2968, 0.0, 1.1558, 0.0], [0.9033, 2.3977, 1.5116, 3.8015, 0.8579, 0.0, 1.7901, 2.3598, 9.2101, 1.0962, 0.0301, 17.8239, 1.4608, 8.983, 1.8133, 0.0, 40.0752, 14.6837, 0.3185, 0.0, 3.1987, 0.0], [9.896, 3.3264, 4.0033, 11.1581, 1.4434, 13.6149, 2.1155, 1.386, 42.8076, 13.4006, 2.639, 1.2134, 2.903, 4.5878], [0.0, 3.4447, 6.9003, 4.0746, 12.1557, 0.0, 5.2021, 0.2258, 21.0657, 0.2295, 9.6922, 6.0748, 6.7284, 0.2709, 4.4922, 4.5214, 12.9131, 3.9624, 0.2495, 54.1926, 15.6816, 0.0, 0.6451], [2.8536, 9.0687, 39.5199, 1.6529, 6.4124, 2.6454, 17.1068, 7.4949, 37.3842, 5.4162, 5.6046, 12.3455, 5.5944, 0.0, 13.7664, 0.0, 10.2463, 0.6044, 2.7997, 64.6668, 7.4131, 3.1395, 0.0, 4.0589, 0.0], [0.0, 16.0284, 43.2837, 2.5755, 8.5313, 2.9636, 13.5054, 5.2374, 39.4611, 5.508, 9.2708, 14.4031, 3.6666, 3.7926, 22.3161, 2.9563, 17.6854, 5.4064, 3.1601, 74.6856], [3.9254, 11.951, 65.2392, 6.2465, 12.4345, 2.1282, 14.0056, 3.2959, 52.5159, 1.7901, 9.0601, 14.697, 10.0926, 2.3779, 21.8814, 5.3735, 20.9136, 5.5071, 1.2474, 111.573, 23.665, 1.3422, 0.0, 4.4621, 0.5947], [5.9021, 13.4273, 67.4347, 14.3303, 5.5294, 28.7115, 10.7457, 60.5268, 7.8948, 12.9791, 20.0859, 10.8108, 4.8461, 33.0395, 3.6519, 25.4052, 8.4286, 4.9342, 88.803, 31.2206, 3.822, 0.0, 5.5104, 6.9242], [5.5541, 15.466, 69.944, 4.2476, 10.0926, 3.7592, 20.108, 8.3076, 68.8344, 11.9799, 8.5966, 20.6738, 10.1682, 5.2073, 30.4311, 8.0864, 25.2648, 6.6824, 3.9362, 117.9486, 37.4933, 6.9842, 0.0, 5.4029, 10.9598], [4.9277, 17.7859, 83.4309, 6.4771, 14.4976, 3.8388, 28.1112, 3.1605, 67.6476, 10.7865, 11.0828, 21.9475, 8.3538, 12.1604, 38.9808, 31.4406, 9.3017, 3.5204, 121.5918, 38.7763, 5.46, 0.0, 5.4835, 6.5844]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

