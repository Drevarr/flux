created: 20230408001602000
creator: Drevarr
modified: 20230705163524619
modifier: drevarr
tags: ChartData
title: 202304080016_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Gavann", "Mac Chiato", "Lucky Leipreach\u00e1n", "Dark Sidiuz", "Rina Of Theros", "Be\u00eb", "Sofya De Nova", "Smol Dome Dim", "Sp\u00edcy Cheese", "Panther B Me", "Smol Daddy Tika", "Rozaalyna", "Smol Gluvs", "Xanvias Einzbern"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Scrapper", "Scourge", "Scourge", "Scourge", "Weaver", "Berserker", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[45.1509, 64.2683, 67.961, 6.3448, 45.1132, 2.8987, 6.3169, 92.9333, 42.8485, 19.1918, 0.2, 53.8833, 36.6349, 1.6424, 0.5593, 41.9474, 140.2333, 46.664, 89.5846, 10.6154, 50.8681, 45.7417, 79.4675, 198.525, 11.7092], [0.0, 2.6575, 0.0, 0.0, 3.5238, 1.6755, 0.0, 96.9474, 99.1333, 54.688, 47.5269, 23.0085, 37.7802, 67.1167, 145.5455, 131.183], [53.2453, 12.0976, 144.7403, 1.8362, 0.0, 0.0, 2.507, 16.0933, 0.0, 20.4795, 0.0, 2.1, 1.4127, 0.0, 18.3898, 0.0, 46.3026, 118.1222, 39.248, 87.45, 17.8291, 15.7473, 455.925, 153.5844, 36.15, 13.9608], [0.5094, 4.0, 0.0, 16.5259, 149.5283, 0.0, 0.0, 66.9333, 0.5667, 62.9524, 0.0, 47.3729, 0.0, 87.1444, 74.568, 171.1192, 46.9188, 107.5824, 158.225, 106.4675, 68.525, 65.7876], [42.2453, 9.9268, 44.0909, 66.25, 81.5472, 47.0253, 27.6831, 159.7333, 56.697, 157.4247, 22.2, 205.0833, 108.3175, 11.298, 64.6441, 3.275, 142.75, 201.4333, 125.12, 198.6538, 21.4231, 75.7253], [0.0, 334.3171, 357.9091, 210.681, 318.8302, 36.5316, 11.8099, 351.92, 41.4242, 253.589, 21.7333, 334.3667, 180.4444, 1.3245, 182.4746, 0.0, 235.9408], [379.1321, 121.439, 374.5974, 327.319, 43.717, 28.0633, 364.9085, 0.0, 66.0909, 294.5205, 11.0, 407.8, 353.5873, 369.7912], [0.0, 115.2683, 116.7532, 56.4741, 88.8113, 28.7975, 29.7113, 172.6267, 0.0, 78.6712, 84.3333, 375.9, 17.4286, 9.7682, 46.5763, 0.0, 167.4539, 93.9778, 142.664, 143.5462, 102.765, 230.0769, 176.8167, 168.7532, 23.925, 32.4346], [334.5283, 26.5122, 144.8442, 0.0, 156.0189, 93.4557, 113.0282, 235.24, 0.0, 134.9041, 252.55, 87.1746, 2.7947, 92.9492, 26.75, 142.2697, 53.6333, 150.648, 147.8423, 155.906, 58.0659, 150.925, 34.5844, 165.95, 27.5654], [346.3774, 81.2683, 150.4026, 55.6552, 30.3208, 1.2152, 78.4718, 64.2933, 0.0, 219.0959, 0.0, 257.1333, 0.6667, 5.4901, 0.0, 0.0, 191.9803, 2.7556, 242.872, 61.3, 117.0427, 227.9451, 353.4667, 255.5195, 59.75, 5.3529], [83.6038, 13.8293, 221.013, 43.319, 174.3774, 34.0759, 137.1338, 160.2667, 0.0, 63.8767, 30.9667, 151.25, 152.4444, 21.9603, 157.1186, 56.6184, 247.0333, 295.944, 239.2115, 107.3675, 162.8901, 113.9833, 214.5325, 96.8, 33.8497], [577.7358, 144.6098, 157.0649, 280.4052, 49.6792, 25.0633, 135.0915, 106.8533, 129.2121, 270.6027, 115.2, 322.15, 26.4127, 42.5232, 126.9661, 0.0, 182.0263, 571.2222, 454.912, 2.4846, 72.0769, 257.4396, 212.35, 500.3377, 293.4, 20.0033], [368.7736, 61.7317, 395.4026, 334.3276, 202.717, 0.0, 212.4648, 166.3333, 22.4545, 124.6986, 2.9, 357.7667, 270.2857, 0.9603, 32.4407, 13.425, 92.1382, 481.2778, 285.328, 159.4731, 185.0342, 427.4176, 364.1, 531.6883, 181.375], [365.6792, 214.2195, 406.4026, 156.6724, 151.9057, 7.1392, 213.0211, 153.0133, 194.3333, 153.6301, 45.2333, 284.8333, 96.0635, 0.9934, 102.9492, 248.2368, 511.0111, 433.776, 289.15, 176.406, 563.5165, 616.0333, 389.7013, 466.225, 2.9608], [341.566, 109.3415, 284.2857, 70.2845, 109.2264, 5.6582, 280.7465, 194.28, 11.8788, 215.5616, 0.0, 194.2333, 271.9524, 6.9272, 31.6949, 2.025, 729.8224, 1332.8222, 575.784, 744.1808, 501.1239, 815.8132, 1013.225, 809.8442, 581.15, 21.8235]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

