created: 20230607222341000
creator: Drevarr
modified: 20230705163534407
modifier: drevarr
tags: ChartData
title: 202306072223_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Tootsie Pop Rocks", "Inedible Plant", "Artakama Nahid", "Uneeta Healah", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[169.6478, 8.28, 2999.164, 63.2315, 119.8128, 5.6612, 0.0, 80.0593, 35.7604, 58.21, 0.0, 16.738, 93.1776, 118.348], [3.9667, 0.0, 3289.7365, 0.0, 1116.6773, 91.093, 2.7384, 228.3293, 52.0544, 250.29, 0.0, 69.8942, 0.0, 305.1959], [51.4755, 125.856, 5593.8055, 181.5546, 668.8632, 153.7431, 0.0, 112.401, 54.6939, 189.5994, 0.0, 78.7745, 83.4256, 314.3293], [775.8225, 300.886, 5445.6705, 586.4056, 369.2213, 89.3775, 53.34, 192.7336, 73.7035, 217.8276, 138.1943, 43.8454, 193.568, 218.8696], [284.0378, 273.976, 8410.6495, 271.0294, 354.492, 213.4425, 0.7056, 169.8062, 56.001, 13.0448, 51.8507, 128.9168, 152.536, 407.3681], [1329.507, 964.85, 16087.461, 1269.9051, 541.4659, 497.9753, 194.1072, 178.7735, 75.3532, 745.7377, 226.3357, 326.8489, 331.7888, 486.5419], [931.6327, 790.878, 19199.4355, 712.543, 1829.7283, 481.0262, 78.0612, 415.7719, 256.1984, 648.8637, 39.25, 203.2243, 300.6928, 690.2809]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

