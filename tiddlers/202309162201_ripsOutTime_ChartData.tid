created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Zaedy Zae", "Puppy Sky", "Jimbo The Plug", "Glorious Gluvs", "Bella Sassy", "Koralia Danai", "Lowella Slytherin", "Lord Of Bones", "Necrocorruption", "Nazhul Naxxremis", "Raziel Umbra", "Hawaiian Supreme", "Kronika Riddle", "Meme Soulmessor", "Arch Wells", "Ryvalia Fazebringer", "Venomina The Fierce", "Rina Of Theros", "Be\u00eb", "Arcanophage Farra"];
const professions = ["Druid", "Druid", "Reaper", "Reaper", "Berserker", "Firebrand", "Firebrand", "Scourge", "Reaper", "Reaper", "Reaper", "Chronomancer", "Spellbreaker", "Chronomancer", "Reaper", "Reaper", "Chronomancer", "Spellbreaker", "Reaper", "Reaper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7721, 1.7503, 0.1471, 0.2549, 0.9821, 0.2143, 0.1984, 2.13, 0.7037, 1.0367, 0.3415, 0.8953, 0.6667, 0.3953, 0.1358, 2.0256, 0.2258, 1.7292, 0.7917, 0.4, 0.46], [1.0497, 2.3527, 1.0882, 0.2157, 0.0, 0.3929, 0.5397, 1.19, 0.2778, 0.9083, 0.4146, 1.186, 1.6491, 2.3721, 1.4444, 1.9231, 1.0645, 0.9375, 2.625, 0.6, 0.66], [16.13, 4.6019, 6.2936, 0.0, 1.0, 3.1053, 19.4651, 0.0, 1.0256], [6.4006], [0.0, 0.0, 2.0, 2.0719, 0.0, 3.0, 4.0, 6.29, 3.7778, 5.0092, 1.0, 3.7326, 2.0175, 1.3256, 8.4568, 0.9744, 0.9677, 3.2292, 1.0, 3.0061, 5.12], [1.0097, 4.0159, 0.9706, 0.0, 0.0, 1.0179, 3.4444, 0.99, 2.9907, 1.0459, 1.0, 1.0349, 0.9825, 0.0, 0.0, 0.0, 0.9677, 0.9792, 0.0, 0.0, 0.99], [4.0235, 0.0, 0.0, 0.9935, 1.0, 1.0, 1.06, 0.9907, 1.0367, 0.0, 0.0, 1.9825, 3.3023, 6.5432, 0.9744, 1.5161, 0.0, 1.0, 4.8424, 0.0], [9.7685, 3.0183, 10.4634, 7.8721, 11.186, 9.8642, 0.0, 4.3871, 1.9792, 7.0, 1.6182, 10.52], [4.8542, 38.5833, 16.7939, 17.45], [0.0, 14.789, 1.0, 23.9186, 5.4386, 0.0, 11.9136, 29.4872, 0.0, 0.0, 6.0417], [64.0417, 14.1879, 24.7], [74.75, 13.3576, 33.27], [12.9512, 32.3837, 20.8765, 27.9744, 62.0645, 31.2708], [41.4419, 21.5062, 81.0645, 7.9583, 121.2083, 1.9939, 29.98], [20.8519, 16.1284, 13.8049, 17.1977, 18.0877, 29.4186, 24.7407, 23.4359, 38.6452, 19.5625, 55.5417, 14.2606, 15.57], [12.8301, 11.1625, 13.2647, 11.8039, 0.0, 12.3929], [11.5953, 9.7028, 0.9706, 3.6732, 0.9821, 3.0, 4.3651, 1.99, 4.0185, 5.3761, 2.0488, 5.907, 2.1053, 9.5581, 20.2469, 12.9487, 11.7419, 9.1667, 4.25, 2.9939, 6.89], [12.7358, 9.5, 14.8497, 0.0, 5.1786, 19.4921, 29.83, 23.5278, 46.5413, 17.4634, 27.907, 34.6316, 30.2093, 53.5185, 29.8205, 48.5806, 11.6875], [12.4475, 13.0383, 10.5294, 13.817, 0.9821, 16.875, 12.9762, 19.76, 16.0741, 20.6606, 8.439, 14.1512, 6.0351, 28.3023, 2.0864, 23.2821, 50.5484, 19.5625, 48.5, 14.3091, 19.0], [13.5207, 12.033, 15.1176, 7.6536, 0.0, 6.0714, 15.9127, 24.2, 23.8056, 20.3028, 0.0, 13.0116, 38.2982, 23.9767, 25.2716, 11.3333, 35.2903, 13.6875, 52.5417, 9.0424, 13.33], [13.9669, 14.1268, 14.4706, 17.8235, 1.9821, 16.2143, 18.6746, 23.99, 38.9074, 26.4037, 3.0, 60.2907, 61.6491, 13.5116, 73.7284, 17.6154, 95.1613, 33.6458, 79.7083, 19.503, 28.47]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

