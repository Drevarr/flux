created: 20230508221143000
creator: Drevarr
modified: 20230705163529395
modifier: drevarr
tags: ChartData
title: 202305082211_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Arriasa", "F\u00f9gly", "Mac Aaroni", "Tegan Parker", "Grasszanine", "Newtype Khan", "Fribble Bibble", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Tempest", "Druid", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.8622, 35.7228, 12.1001, 0.0, 349.1838, 232.283, 0.0, 0.0, 798.8323, 0.0, 0.0, 8.9474, 14.994, 0.0, 14.9827, 6.174, 5.984], [0.0, 0.0, 0.0, 0.0, 329.0169, 195.804, 138.0472, 0.0, 0.0, 877.0397, 0.0, 21.0202, 0.0, 0.0, 52.5987, 0.0, 0.0], [49.5206, 225.3462, 7.7167, 24.2717, 1003.3142, 331.4786, 81.1188, 120.5451], [23.9658, 63.9914, 0.0, 0.0, 91.8352, 513.4416, 104.2735, 0.0, 34.0463, 835.9046, 22.606, 24.0341, 39.4082, 0.0, 0.0, 105.835, 47.502, 21.5424], [0.0, 63.3607, 86.2995, 485.884, 170.7581, 0.0, 32.3365, 1013.6486, 31.6841, 13.3694, 0.0, 27.1068, 27.9383, 119.33, 0.0, 31.68], [0.0, 0.0, 0.0, 0.0, 153.9377, 1509.3005, 30.991, 53.0141, 0.0, 159.8184, 0.0, 234.4096, 105.966, 105.5296], [49.326, 99.1982, 0.0, 0.0, 192.6126, 651.5922, 113.0121, 45.4356, 107.9223, 1390.9738, 99.5467, 47.7204, 42.5661, 44.3352, 0.0, 206.4632, 129.591, 155.9712], [0.0, 153.8432, 0.0, 0.0, 216.4585, 1137.1136, 448.5058, 0.0, 0.0, 1962.2938, 28.8891, 45.3247, 79.6059, 219.6768, 0.0, 224.5274, 10.395, 103.9104], [0.0, 510.5582, 1903.65, 585.8445, 27.1971, 66.1314, 2978.9894, 91.922, 131.4533, 222.8307, 187.1604, 72.7738, 519.2926, 320.733, 112.6048], [208.3628, 445.5318, 46.4972, 1004.9352, 1623.3602, 852.3736, 96.6735, 328.9972, 4422.7786, 160.8802, 225.2712, 310.1341, 392.7252, 64.9054, 787.9179, 393.939, 267.5904]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

