created: 20230603000934000
creator: Drevarr
modified: 20230705163533293
modifier: drevarr
tags: ChartData
title: 202306030009_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Smol Gluvs", "Newtype Khan", "Black Raspberry Pie", "Be\u00eb", "Grasszanine", "Gestern Yesteryear", "Ana Larive", "Venomina The Siren", "Air One Com", "Tegan Parker", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Pu Ella", "Pamtastic", "Blanco Padre Guard", "Miphest\u00f6", "Johosh Of The North", "Zadey Starbolt", "Drevarr Moonwillow", "Tika Fiery", "Koralia Danai", "Aronorf Xideliesi", "Sister Elon\u00edth", "Bella Sassy"];
const professions = ["Chronomancer", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Spellbreaker", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Herald", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 24.3065, 43.1443, 140.0971, 67.5312, 0.0, 0.0, 8.4995, 39.3728, 150.0681, 113.4401, 0.0, 0.0, 45.8045, 96.8814, 78.2786, 0.0, 0.0, 49.4822, 0.0, 14.8176, 40.2506], [0.0, 112.6224, 0.0, 88.8516, 0.0, 0.0, 0.0, 47.9245, 140.6717, 113.6499, 100.4033, 0.0, 37.2499, 0.0, 37.835, 74.844, 0.0, 11.3643, 0.0, 92.0448, 0.0, 72.6988, 0.0], [0.0, 93.8045, 47.6051, 423.9936, 0.0, 0.0, 0.0, 0.0, 50.5857, 6.279, 88.2745, 0.0, 11.7291, 0.0, 0.0, 99.5425, 15.0132, 0.0, 94.838, 74.0928, 0.0, 0.0, 33.7198], [8.7871, 48.3278, 22.2343, 240.2501, 247.7112, 0.0, 26.4615, 16.9285, 0.0, 39.1202, 8.8928, 123.5675, 69.8544, 17.6356, 71.9118, 3.9204, 75.4637, 51.7338, 15.5452, 73.1707], [0.0, 180.2671, 0.0, 0.0, 0.0, 0.0, 29.3202, 81.4519, 131.8797, 208.0143, 56.7525, 0.0, 18.9658, 0.0, 103.451, 48.8422, 66.5091, 0.0, 42.3667, 0.0, 99.8204, 105.8243], [27.013, 56.2419, 120.2504, 62.2638, 0.0, 27.1285, 161.5799, 192.5497, 142.6437, 39.0614, 181.152, 127.8585, 9.8563, 91.5634], [201.9719, 192.3149, 196.5663, 338.8203, 316.54], [10.4425, 0.0, 288.7677, 185.8824, 2.4948, 40.7534, 65.6918, 224.1318, 168.4566, 325.7269], [72.2258, 134.3628, 193.6809, 105.4152, 0.0, 0.0, 0.3469, 70.3358, 105.4872, 17.0582, 9.7416, 0.0, 50.6345, 41.081, 71.3293, 54.4617, 102.1632, 4.3911, 100.9449, 267.8928], [0.0, 83.1838, 0.0, 300.4587, 0.0, 0.0, 0.0, 140.162, 179.4, 38.8511, 0.0, 43.6301, 44.114, 90.3949, 29.2398, 192.2616, 0.0, 58.1645, 11.9925, 86.1934, 154.3382], [99.2659, 140.6354, 0.0, 249.0183, 31.7064, 13.9406, 52.4979, 31.9166, 172.1444, 21.2589, 158.3233, 0.0, 52.9469, 59.1675, 81.4136, 21.2414, 57.1941, 98.1882, 134.0198, 0.0, 104.3186, 88.7645], [111.1964, 101.6096, 46.239, 408.6004, 103.7256, 91.0526, 225.5334, 84.2283, 203.5307, 263.6464, 39.4698], [56.3112, 67.0514, 196.7985, 33.9768, 0.0, 18.5749, 134.7289, 83.7149, 80.1021, 186.8617, 277.9472, 19.7874, 0.0, 151.2595, 323.1598, 110.6653], [82.9061, 70.888, 58.8965, 100.5426, 30.2016, 0.0, 0.9418, 0.0, 146.1507, 109.0752, 58.2443, 49.8888, 16.4312, 0.0, 55.223, 184.0331, 135.9059, 80.2332, 71.5295, 181.2173, 0.0, 223.7854, 142.2098], [15.5918, 113.2639, 57.628, 81.2524, 46.5696, 64.5624, 19.8771, 115.1031, 517.7075, 118.5834, 12.518, 0.0, 21.5004, 0.0, 156.7335, 48.7318, 86.0803, 10.557, 4.5263, 28.1357, 0.0, 149.1021, 715.5803], [1080.0536, 327.342, 108.8061, 251.6568, 46.6416, 35.4669, 0.0, 258.405, 261.3719, 119.9748], [61.7063, 36.4597, 2.2443, 435.2949, 119.5128, 0.0, 19.6396, 91.5125, 276.374, 362.7468, 111.6889, 20.5656, 15.9243, 11.0432, 71.967, 109.1891, 79.7865, 167.8563, 15.4321, 192.3802, 65.9034, 337.6296, 78.7685], [52.2226, 84.146, 533.4993, 139.92, 0.0, 5.8231, 27.8775, 426.4747, 115.8027, 64.9897, 0.0, 51.7233, 6.0032, 159.39, 222.453, 237.4583, 272.8053, 30.5791, 156.2803, 4.9815, 115.564, 75.703], [50.5259, 92.664, 0.0, 768.8781, 8.3952, 64.6531, 64.6519, 80.1633, 467.504, 243.1767, 93.2038, 102.5, 22.4968, 74.0768, 253.736, 297.3802, 97.3566, 78.3702, 91.1315, 207.3293, 93.3201, 231.0619, 224.5768], [66.4392, 26.0172, 6.8027, 435.6846, 184.6416, 107.1857, 15.7412, 97.658, 394.8746, 197.2503, 170.5818, 413.0504, 2.2549, 87.4384, 350.658, 412.8894, 129.3499, 23.3496, 0.0, 203.4125, 67.0842, 260.0356, 754.2315], [129.3957, 164.3004, 0.6552, 710.2283, 59.6904, 128.4898, 110.0982, 77.6853, 226.8076, 142.1745, 176.8084, 124.148, 66.8086, 198.191, 362.8271, 159.8353, 179.7795, 235.0814, 186.505, 299.259, 389.1605, 893.6424], [237.5737, 260.8135, 0.0, 613.5826, 45.6984, 8.2228, 180.2745, 382.0052, 227.0307, 333.3804, 142.516, 110.6834, 85.008, 721.602, 472.5983, 424.7632, 185.058, 235.723, 608.0179, 0.0, 441.1543, 715.0472], [94.054, 89.8991, 1028.0286, 104.4648, 96.6911, 222.2023, 679.1486, 486.174, 387.7979, 92.8568, 106.593, 133.6272, 462.714, 565.488, 373.692, 570.3264, 271.9688, 542.6726, 234.0936, 397.5615, 648.9403], [107.7137, 298.4137, 64.8349, 1012.4406, 196.3896, 19.2629, 69.7215, 148.5313, 622.9564, 487.8783, 388.4465, 50.1512, 102.73, 69.6192, 421.5785, 701.122, 495.7647, 528.5952, 287.7217, 164.6362, 72.9882, 727.65, 1087.165]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

