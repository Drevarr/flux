created: 20230909091225000
creator: Drevarr
tags: ChartData
title: 202309090912_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Wren Raveness", "Gamora Titus", "Govinda Ektar", "Necrotic Windrunner", "Aloe Pen", "Vesnan", "Sister Elonith", "Serene Azura", "Gestern Yesteryear", "Drevarr Moonwillow", "Chunky Meat Flapper"];
const professions = ["Chronomancer", "Firebrand", "Vindicator", "Reaper", "Herald", "Reaper", "Berserker", "Dragonhunter", "Firebrand", "Scrapper", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0413, 0.0856, 0.0, 0.0405, 0.0747, 0.1183, 0.2, 0.1027, 0.0643, 0.0698], [0.0256, 0.0, 0.1667, 0.2917, 0.3626, 0.6667, 0.3388, 0.1565, 0.0, 0.0405], [0.027, 0.1322, 0.5376, 0.1882, 0.2232, 0.076, 0.1047, 0.6939], [0.0, 0.0, 0.0568, 0.2714, 0.0, 0.0833, 0.3846, 0.4667, 0.0165, 0.0758, 0.0476, 0.0541, 0.1379, 0.1828, 0.1765, 0.0804, 0.0585, 0.1047, 0.0, 0.0, 0.2979, 0.1633], [0.0413, 0.1589, 0.0, 0.0811, 0.0862, 0.129, 0.3529, 0.2946, 0.0994, 0.1163, 0.0, 0.087, 0.4043, 0.2245], [0.1901, 0.1711, 0.0, 0.0135, 0.2701, 0.5699, 0.2824, 0.1339, 0.0, 0.2609, 0.2979, 0.1837], [0.0, 0.2333, 0.2149, 0.1736, 0.0952, 0.0676, 0.2989, 0.6452, 0.3294, 0.2545, 0.0, 0.1304, 0.2553, 0.1837], [0.0256, 0.0889, 0.2273, 0.2429, 0.0741, 0.125, 0.3516, 0.6, 0.314, 0.0391, 0.0, 0.027, 0.1494, 0.3978, 0.3294, 0.2321, 0.1462, 0.0698, 0.0, 0.2174, 0.3617, 0.4694], [0.0256, 0.0444, 0.1705, 0.3571, 0.2407, 0.0417, 0.4615, 0.9667, 0.3058, 0.11, 0.0676, 0.1437, 0.4194, 0.5176, 0.2411, 0.1287, 0.186, 0.0, 0.3043, 0.3404, 0.3469], [0.0256, 0.0444, 0.3977, 0.5, 0.5, 0.625, 0.5495, 0.6, 0.2975, 0.1858, 0.119, 0.0541, 0.1494, 0.5484, 0.5059, 0.3125, 0.2164, 0.3372], [0.3077, 0.0, 0.4205, 0.5857, 0.3333, 0.3333, 0.6374, 0.0667, 0.3636, 0.198, 0.0714, 0.0676, 0.2931, 0.5161, 0.6353, 0.2857, 0.1813, 0.0, 0.2609, 0.4043, 0.5306]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

