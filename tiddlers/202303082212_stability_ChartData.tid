created: 20230308221219000
creator: Drevarr
modified: 20230705163521536
modifier: drevarr
tags: ChartData
title: 202303082212_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Be\u00eb", "Smol Gluvs", "Sumatra Satyricon", "K\u00f4sair", "Cerys Fireblade", "Belvyn Brightblade", "Domina Flagbringer", "Mistwalker Caelon", "Ace Hammers", "Xyntharos", "Zaylen Harker", "Ryvalia Fazebringer", "Raelyn Sunray", "Gavann", "Blanco Padre Guard", "Ravioli Fetabringer", "Viral Marketing", "Sygaldry Verdandi", "Bella Sassy", "Koralia Danai"];
const professions = ["Berserker", "Scourge", "Scourge", "Soulbeast", "Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.3085, 0.0, 0.0, 1.5327, 2.2932, 2.2766, 3.3163, 1.5607, 1.0295, 3.0537, 1.0084, 1.0731, 0.0, 0.0, 3.0238, 0.0, 1.151, 0.0, 2.5201, 1.3536, 0.6283, 0.9217, 2.2512, 0.6925, 1.2787, 0.6384, 0.0, 3.5904, 0.6703, 0.0], [0.0, 0.0, 2.0658, 3.3516, 4.5533, 0.0, 0.6243, 1.6846, 0.0, 4.2018, 1.4308, 0.0, 0.0, 1.3583, 1.2828, 0.0, 0.0, 0.0, 1.226, 0.0, 1.7136, 0.7762, 2.3155, 2.6973, 0.5328, 0.0, 2.1168, 4.6464, 1.08, 1.4774], [1.1928, 2.2324, 0.9702, 4.6872, 0.0, 1.6944, 2.059, 0.0, 3.8656, 0.4292, 0.0, 0.0, 0.1455, 2.1075, 0.0, 0.0, 0.0, 1.7028, 0.0, 2.3419, 0.2911, 2.2512, 4.2282, 0.0, 0.0, 2.1168, 5.0688, 1.2662, 1.9181], [0.0, 0.6664, 0.0, 3.6158, 0.0, 2.5862, 2.6205, 0.4018, 2.6891, 2.182, 0.0, 0.0, 1.4553, 3.9401, 0.0, 0.0, 0.0, 2.452, 1.1506, 3.9984, 0.7276, 2.4442, 2.3692, 1.7582, 0.7776, 5.0688, 3.0909, 1.4256], [0.0, 0.0, 0.0, 0.0, 0.0, 3.3472, 5.7727, 0.0, 1.708, 1.8292, 5.5169, 1.1675, 4.6838, 1.3098, 6.1104, 2.6608, 3.3566, 3.2832, 7.1808, 2.7558, 2.4106], [0.0, 1.4448, 0.0, 1.7993, 2.9106, 5.6246, 2.1188, 1.6944, 4.0244, 1.2858, 6.3867, 0.8942, 0.0, 0.8142, 2.0859, 3.9401, 0.0, 1.2624, 0.0263, 2.3157, 0.0, 1.885, 0.5821, 1.1578, 0.9113, 2.291, 0.0, 0.864, 5.9136, 1.08, 0.0], [0.0, 0.0, 0.0, 3.332, 13.5828, 18.6149, 2.4872, 0.6243, 5.0539, 0.7232, 10.0842], [0.0, 1.99, 0.0, 0.6536, 2.2991, 6.4386, 9.9101, 5.0666, 1.6052, 5.709, 3.2144, 4.3698, 2.2893, 0.0, 0.0, 3.0561, 7.6969, 0.0, 0.0, 0.0, 1.9752, 1.8274, 1.9992, 0.0, 5.7245, 1.9318, 3.1435, 1.08, 6.9696, 0.0, 1.3997], [1.3272, 0.0, 0.0, 1.2582, 0.0, 2.9988, 8.9726, 2.2569, 3.0321, 5.8026, 4.4198, 10.7565, 0.5723, 0.0, 0.483, 1.6493, 4.5815, 0.0, 0.0, 0.5922, 3.6098, 1.049, 6.8544, 2.6681, 4.631, 2.4057, 4.5288, 0.0, 1.5552, 8.2368, 2.7558, 0.337], [1.8708, 1.3085, 0.0, 0.0, 5.1646, 5.5566, 10.1779, 5.8496, 3.0767, 13.3834, 0.0, 7.7312, 5.0793, 0.0, 1.0626, 4.2204, 9.4379, 4.0656, 1.5966, 0.0, 0.8854, 3.5194, 8.3966, 0.0, 2.7014, 3.3898, 2.2378, 3.7584, 13.5168, 0.6703, 3.2918], [0.0, 1.0904, 2.914, 1.585, 6.2975, 6.615, 9.3744, 7.4617, 3.701, 6.5513, 12.3754, 17.1431, 0.8227, 1.1344, 0.0, 3.3957, 16.3101, 0.0, 1.4481, 0.8291, 5.9937, 3.5532, 7.4827, 3.5897, 9.9696, 5.2123, 2.4509, 0.0, 1.8144, 11.088, 2.6813, 1.4774], [1.9828, 2.7533, 0.0, 3.5785, 7.0972, 10.0548, 15.133, 2.8557, 5.8859, 10.6693, 4.2591, 16.9751, 4.3639, 8.3922, 12.2784, 0.6336, 5.1239, 1.5529, 7.8326, 2.318, 8.6251, 5.3361, 6.6893, 6.3787, 8.0986, 0.2022, 8.8128, 16.4736, 6.5915, 1.3997], [2.9262, 1.7719, 0.0, 3.7419, 5.5644, 14.0238, 16.4722, 6.5405, 3.3443, 11.5116, 9.9646, 13.7817, 8.4417, 0.0083, 0.0, 3.8323, 22.4493, 0.0, 2.3392, 0.4606, 4.972, 0.9306, 6.3403, 4.5114, 6.239, 1.4944, 9.2707, 0.3086, 4.32, 23.6544, 5.3253, 0.0], [0.0, 0.0, 3.6985, 10.143, 20.3558, 7.3696, 6.1088, 17.9693, 13.2594, 17.3112, 4.7932, 0.472, 0.2208, 8.9258, 14.111, 0.4827, 0.1974, 13.2133, 2.9948, 11.6525, 5.6272, 7.2038, 7.3994, 7.619, 0.0, 4.4064, 19.008, 5.5115, 5.7283], [0.0, 4.6069, 0.0, 3.6438, 9.1297, 10.584, 21.0254, 11.9295, 10.3895, 16.5654, 6.7502, 21.1768, 7.154, 0.0, 1.4904, 2.6195, 15.3022, 0.0, 6.7205, 0.5922, 0.0, 1.1336, 15.0797, 6.8399, 15.0509, 6.7797, 10.3363, 0.6048, 8.8704, 6.9639, 7.3094], [2.2386, 2.2353, 0.0, 3.5785, 6.3308, 7.2324, 23.3021, 8.0605, 9.0964, 15.6295, 8.036, 18.4877, 5.3655, 0.345, 5.5786, 14.3859, 0.2112, 8.0201, 3.4216, 11.3063, 4.3484, 6.169, 5.1906, 9.1978, 10.534, 10.8691, 0.0, 8.8992, 20.8032, 8.9376, 5.0544], [0.0, 0.3816, 0.0, 0.6209, 7.497, 19.4922, 27.8554, 6.3563, 5.3062, 16.0975, 14.4648, 26.2189, 8.9067, 1.2006, 4.754, 19.5172, 0.0, 0.2599, 2.2109, 10.4208, 3.0118, 13.1376, 5.7727, 8.8118, 6.1965, 5.701, 0.0, 5.6592, 20.6976, 8.4907, 4.9248], [0.0, 2.7615, 10.3625, 17.199, 25.043, 10.5477, 11.3259, 10.7628, 10.2861, 22.8575, 7.2613, 2.3184, 3.1326, 9.0229, 18.4176, 0.0, 3.6759, 3.8032, 14.4393, 1.7597, 13.3661, 5.8697, 15.5011, 9.6228, 10.1765, 3.1069, 8.4672, 23.5488, 7.299, 4.6656], [2.3825, 0.2181, 0.0, 2.6634, 7.9302, 18.8748, 31.2034, 4.5599, 6.5101, 14.9744, 10.2861, 25.2105, 8.7994, 0.9936, 8.4893, 22.7242, 4.5408, 4.7526, 3.2637, 15.2566, 4.8222, 12.6806, 7.8101, 6.8822, 10.7626, 11.1888, 27.1392, 8.1928, 6.0653], [4.3973, 3.2712, 0.282, 2.7778, 6.5307, 16.2288, 30.2659, 8.2447, 10.0773, 13.9449, 10.5272, 26.5551, 5.7947, 0.0, 10.8177, 18.6009, 0.2112, 5.0868, 3.0268, 13.1452, 1.6582, 16.2792, 11.5454, 12.2851, 8.2741, 12.7872, 0.0, 9.3744, 26.6112, 7.4852, 6.3245], [2.1587, 3.0531, 0.0, 2.5654, 13.7945, 22.932, 36.9619, 13.4495, 11.4596, 21.3385, 14.8666, 35.1266, 8.4775, 2.84, 3.4086, 5.2876, 24.3736, 0.1584, 7.3146, 4.8955, 0.0, 3.384, 15.3653, 7.9071, 14.0861, 11.0443, 12.4142, 10.8, 36.1152, 9.7941, 6.3245]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

