created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Cael", "Black Raspberry Pie", "Arcanophage Farra", "Grasszanine", "Xyntharos", "Melli Dragonswrath", "Urilstormwalker", "Johosh The Mighty", "Ateriuz", "Xanvias Einzbern", "Rahani Sunray", "K\u00f4sair", "Gamora Titus", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Air One Com", "Gestern Yesteryear", "Bella Sassy", "Tika Fiery", "Solus Sanctus", "Koralia Danai"];
const professions = ["Vindicator", "Chronomancer", "Spellbreaker", "Spellbreaker", "Vindicator", "Berserker", "Firebrand", "Berserker", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.8484, 0.0, 0.6072, 0.0, 2.2464, 0.7313, 3.407, 0.0, 0.4324, 0.5702, 1.533, 3.995, 0.3881, 5.6857, 1.0627, 0.9677, 0.0, 2.9744, 3.0682, 8.3421, 2.438, 0.6318, 2.4279, 0.0, 0.0, 1.4805, 2.1638, 1.7424, 0.7342], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6229, 1.3464, 4.8332, 1.2285, 4.8157, 1.162, 32.6365, 0.0, 0.0, 2.2957, 0.0], [0.9377, 2.7636, 1.8217, 0.0, 2.4336, 0.0, 4.3243, 0.0, 0.4864, 1.5552, 0.0, 5.0525, 0.0, 2.394, 0.0, 1.6351, 1.2346, 1.6675, 3.4983, 1.7554, 1.3689, 1.1356, 0.0, 0.0, 1.0956, 1.7388, 2.7324, 1.1624, 0.0, 3.4574, 0.0, 13.2964], [2.0947, 1.2398, 0.1335, 0.0, 1.0663, 0.9338, 7.2657, 0.0, 2.1762, 2.0363, 0.0, 0.0, 1.5989, 1.3524, 0.9108, 0.3059, 0.0, 0.0, 1.568, 31.4278, 0.0, 0.0, 8.6088], [3.1255, 10.2648, 2.365, 2.399, 1.3416, 0.0, 1.8782, 2.2446, 0.0, 0.7258, 0.737, 6.58, 0.3881, 5.5575, 0.5117, 0.267, 0.0, 5.0508, 4.6023, 1.3455, 0.0, 1.404, 2.8195, 2.3742, 1.214, 1.2365, 1.8216, 0.9177, 1.197, 5.3714, 0.0], [0.893, 1.5228, 3.4517, 1.224, 2.0592, 0.0, 1.0046, 1.1997, 0.0, 0.0, 0.0, 5.2875, 0.0, 1.197, 0.0, 1.0345, 0.0, 0.1684, 1.6008, 1.9734, 0.0, 1.4391, 0.9398, 0.0, 1.2096, 0.5626, 0.0, 1.5444, 1.346, 2.457, 1.667, 0.0, 29.6146, 1.2281, 0.3058, 4.0174, 7.518], [4.4372, 4.1067, 3.9552, 5.6857, 2.473, 3.1979, 3.0139, 1.3068, 4.0379, 0.0, 7.594, 38.0759], [1.2055, 0.0, 0.0, 2.6438, 1.2168, 0.0, 0.9173, 0.0, 0.0, 1.633, 0.7665, 3.995, 1.6078, 1.2398, 0.6691, 1.8687, 0.6202, 0.3367, 1.4674, 6.0099, 1.6091, 2.0709, 1.0965, 0.0, 0.9005, 2.2208, 2.8594, 0.7524, 1.6519, 1.2285, 1.4818, 1.414, 36.2628, 0.0, 0.0], [1.5181, 0.0, 0.0, 0.0, 0.0, 0.0, 2.315, 0.0, 1.2431, 0.0, 1.1792, 2.82, 1.3306, 1.539, 1.0234, 1.0345, 0.0, 1.4591, 1.4674, 5.6511, 0.0, 1.8954, 2.0755, 0.0, 0.0, 0.0, 2.0479, 1.9404, 1.713, 1.071, 1.667, 0.798, 32.0321, 0.0, 8.1784, 8.8963], [2.3664, 3.384, 1.8217, 2.9866, 1.2168, 0.0, 2.4024, 0.0, 0.9189, 1.2182, 0.0295, 3.29, 1.4969, 2.736, 1.0234, 1.1012, 0.0, 1.7958, 3.0682, 5.9202, 0.9264, 2.3517, 1.2531, 0.0, 0.0, 1.0067, 1.1978, 1.8216, 1.9578, 1.638, 4.1983, 0.504, 32.6365], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.3018, 5.405, 0.5267, 1.3253, 1.5547, 2.1023, 3.9845, 3.6685, 14.0829, 1.7066, 4.1769, 7.1663, 0.0, 0.0, 3.8789, 2.0866, 0.0, 2.2025, 0.0, 8.6436, 2.254, 47.746, 0.0, 0.0, 0.0], [1.2949, 0.0, 2.0774, 0.0, 0.0, 0.0, 2.3587, 0.0, 1.2431, 2.4365, 1.5919, 6.2275, 1.0811, 1.881, 1.2398, 2.6029, 2.6376, 1.2006, 9.0597, 0.0, 2.0007, 3.2111, 0.0, 0.0, 0.7699, 1.1206, 2.2968, 2.7531, 0.0, 3.7044, 1.736, 50.1635, 0.7895, 9.1827, 8.0192], [1.9199, 0.0, 2.8125, 0.0, 2.2776, 0.0, 9.4349, 0.0, 4.9186, 3.7066, 4.0093, 10.9275, 3.0492, 4.5743, 3.2472, 4.6384, 0.0, 4.8824, 5.6028, 13.5447, 2.1942, 3.6504, 3.0936, 0.0, 0.0, 2.8426, 6.8006, 3.8808, 5.3838, 5.0085, 9.261, 3.444], [2.679, 0.6768, 0.2237, 0.0, 0.1872, 0.0, 6.1589, 0.1935, 5.0266, 4.4064, 5.0411, 13.63, 2.5502, 1.7528, 1.4957, 4.1045, 5.7242, 1.8009, 12.7374, 1.219, 6.1074, 4.895, 0.0, 0.215, 5.2706, 5.1005, 5.148, 5.0168, 3.78, 7.4705, 2.296, 60.438, 0.0, 1.8509, 7.0305, 12.2794], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.4117, 0.0, 3.4592, 1.8922, 1.9752, 13.865, 0.8593, 5.2582, 2.5978, 1.9688, 1.0989, 6.5099, 7.0035, 8.7906, 2.4868, 4.1067, 3.1328, 0.0, 0.0, 3.1683, 3.323, 5.148, 2.8755, 5.544, 8.7053, 2.87, 90.657, 4.386, 0.0, 16.0698, 20.9251], [1.2949, 3.6096, 2.365, 0.2938, 0.0, 0.0, 6.5083, 0.2322, 4.3781, 2.903, 2.4763, 2.585, 1.6355, 4.275, 1.1808, 3.07, 2.4132, 6.003, 13.5447, 1.8529, 4.3875, 6.2656, 0.2499, 1.6262, 3.2867, 4.6754, 3.2868, 3.9155, 4.284, 5.7418, 3.444, 99.7227, 3.041, 20.8046, 23.9323], [3.4827, 1.0716, 3.2599, 0.4896, 0.7488, 3.627, 6.683, 0.0, 6.3779, 6.6355, 6.0434, 14.1, 4.0194, 10.9868, 1.8893, 5.0389, 5.2753, 6.5366, 16.5945, 0.6339, 8.1081, 5.13, 0.2812, 1.9219, 3.5828, 6.6847, 6.3756, 7.0969, 2.9295, 11.6689, 2.548, 68.8993, 0.614, 14.348, 15.5372], [5.7575, 2.999, 0.2285, 4.5599, 3.323, 7.8408, 5.2615, 2.583, 11.9158, 5.068, 146.8643, 0.2632, 0.0983, 43.9049, 34.8334], [8.4388, 6.2604, 4.6342, 6.6096, 6.5832, 2.106, 4.9795, 5.5341, 1.2431, 5.2099, 3.0364, 24.675, 1.0534, 11.2005, 2.0664, 5.3392, 4.658, 8.1374, 22.7838, 4.681, 5.5458, 4.7775, 2.5617, 1.6666, 4.1454, 6.8006, 2.2176, 6.4851, 6.3, 10.1871, 2.254, 145.6556, 7.4854, 0.0, 38.1657, 33.0792], [6.251, 4.1172, 0.5433, 0.4896, 1.6848, 2.8958, 7.3819, 0.3483, 5.351, 4.6656, 4.6873, 18.9175, 3.2155, 9.6615, 4.9987, 4.505, 0.2394, 8.1374, 5.6695, 21.528, 2.7306, 9.0909, 5.7174, 0.0, 3.5885, 6.8399, 6.4529, 7.326, 7.9534, 3.6225, 12.9654, 6.188, 164.3914, 3.7135, 43.6179, 37.3394], [5.5366, 10.3776, 7.2549, 9.8899, 7.3008, 2.6033, 4.8485, 0.4644, 4.9186, 3.24, 4.3336, 19.27, 4.8787, 9.1913, 2.519, 1.7019, 13.5249, 11.9393, 27.5379, 9.7032, 8.8452, 6.4614, 3.9362, 6.8695, 7.6121, 4.3956, 8.7487, 6.111, 9.9401, 4.172, 164.9957, 0.7018, 48.9267, 30.4479]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

