created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Hyde En Sikh", "Name Is What", "Be\u00eb", "Tootsie Pop Rocks", "Freyviana", "Drevarr Moonwillow", "Tegan Parker", "Tribal S", "Vee U", "Venomina The Sly", "Nina Chan Fanboy", "Zaedy Zae"];
const professions = ["Chronomancer", "Scourge", "Scourge", "Scrapper", "Tempest", "Scrapper", "Tempest", "Druid", "Tempest", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 86.7031, 0.0, 21.5373, 21.7718, 21.5266, 10.8854, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [13.7228, 33.7467, 12.327, 18.0873, 42.9818, 0.0, 4.8352, 17.4792, 0.0, 0.0, 33.3459, 6.1131, 0.0, 1.3205, 9.1176, 7.3008, 0.0, 7.0224], [0.0, 106.2588, 0.0, 4.6577, 7.5516, 11.4286, 0.0, 0.0, 26.0532, 0.9348, 4.1265, 13.1061, 18.9707, 5.6752, 5.9168, 1.2615, 17.496, 0.0, 10.92], [7.5435, 112.1429, 0.0, 25.2144, 10.2007, 7.5557, 0.0, 39.9289, 2.736, 0.0, 9.6222, 18.655, 0.0, 8.1806, 2.7579, 7.8192, 16.5528, 31.92], [51.6648, 332.64], [22.3219, 136.8905, 7.6659, 31.3079, 25.6998, 21.7166, 0.0, 0.0, 32.8046, 2.5764, 5.7435, 33.6224, 11.8818, 12.4373, 7.1687, 10.1094, 44.28, 2.508, 18.3456], [255.7827, 0.0, 50.6039, 44.7311, 42.0314, 0.0, 81.5983, 122.2718, 87.0048, 0.0, 46.452, 6.2853, 40.741, 18.1104, 9.2742, 86.7024, 0.0, 98.0784], [153.7985, 0.0, 101.4385, 433.8331, 0.0, 69.195, 143.78, 99.2159, 90.7074, 65.8046, 78.0042], [0.0, 585.9812, 34.1136, 69.2696, 95.2476, 62.7977, 40.1798, 134.6978, 40.584, 44.0895, 68.1849, 90.6059, 77.111, 29.841, 18.2091, 6.0912], [67.8832, 615.0552, 0.0, 185.4309, 46.2535, 97.7011, 0.0, 0.0, 122.0233, 122.4342, 76.0263, 47.0201, 51.1413, 42.978, 145.584, 0.0, 9.912], [843.1483, 0.0, 201.295, 77.5866, 117.9922, 0.0, 0.0, 81.5974, 123.4848, 63.6405, 113.0885, 55.1901, 11.0124, 63.9009], [78.0657, 1071.9336, 0.0, 282.1912, 136.5987, 130.9889, 0.0, 0.0, 256.9697, 10.7844, 81.459, 185.6974, 98.7567, 52.5262, 52.5476, 40.5246, 155.6496, 0.0, 107.0832]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

