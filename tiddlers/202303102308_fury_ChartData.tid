created: 20230310230833000
creator: Drevarr
modified: 20230705163521612
modifier: drevarr
tags: ChartData
title: 202303102308_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Zadie Miststep", "Xmus Jaxnflaxn Waxn", "K\u00f4sair", "Riann Swordbreak", "Lord Erin The Wise", "Aronorf Xideliesi", "Raimaru Hanzo", "Zefirokai", "Mistwalker Caelon", "Sofya De Nova", "Cat Wigglebooty", "K\u00f4sair", "Akira Moonbright", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Holosmith", "Berserker", "Spellbreaker", "Weaver", "Firebrand", "Spellbreaker", "Tempest", "Vindicator", "Weaver", "Scrapper", "Spellbreaker", "Herald", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 90.7764, 31.073, 28.2555, 276.025, 0.0, 73.6316, 31.234, 61.5761, 8.7313, 30.2006, 34.8778, 0.0, 29.5583, 0.0, 0.0, 0.0, 22.8177, 0.0, 58.7843, 59.6851, 28.4935, 47.812, 50.5035, 30.186, 36.3906, 30.9091, 51.9646, 53.0846], [20.592, 83.1726, 24.288, 31.556, 31.7239, 450.6375, 0.0, 74.3578, 15.8401, 31.3531, 12.271, 15.3143, 24.6806, 31.3697, 31.4782, 31.3342, 0.0, 31.2682, 0.0, 29.1236, 0.0, 54.2105, 25.3524, 30.8396, 62.2264, 20.8017, 26.73, 6.0858, 19.021, 2.2304, 24.1181], [0.0, 0.0, 278.8416, 34.8928, 61.1156, 25.3023, 27.9415, 77.471, 28.5271, 59.4291, 31.849, 11.8611, 13.8142, 0.0, 64.4436, 15.04, 104.2972, 91.6692, 73.6745, 113.9638, 55.0971, 141.426, 27.8208, 28.3815, 29.9345, 166.7753], [98.208, 17.8227, 90.4728, 0.0, 47.8699, 1603.5375], [89.001, 146.6388, 55.5588, 108.9165, 15.3088, 766.3125, 50.967, 80.3122, 31.591, 44.7902, 8.2593, 26.1342, 45.12, 31.0144, 23.6645, 0.0, 0.0, 5.4802, 0.0, 10.8256, 0.0, 58.1845, 30.257, 0.0, 52.8314, 0.0, 53.082, 0.0, 0.0, 60.6515, 75.9595], [99.594, 267.3405, 202.5012, 178.6295, 45.6573, 601.6125, 13.1355, 281.02, 58.0506, 95.985, 51.5223, 34.695, 92.3606, 37.1817, 77.825, 49.1806, 13.8276, 15.2205, 10.3147, 93.8223, 29.6084, 54.4355, 0.0, 15.9588, 66.3201, 58.05, 90.873, 39.1986, 83.5034], [39.0555, 160.839, 102.0096, 246.4105, 23.1127, 1456.375, 0.0, 71.4532, 86.8305, 38.4275, 24.2797, 2.592, 45.7968, 0.0, 86.2192, 10.3303, 8.7768, 0.0, 0.0, 73.4832, 0.0, 106.8465, 64.3135, 63.382, 114.0926, 43.5609, 83.7, 0.0, 0.0, 0.0, 113.7528], [144.2486, 54.0086, 184.9403, 87.6876, 64.9152, 93.0186, 0.0, 134.7921, 50.2823, 257.1814, 332.6202, 253.2253, 310.9392, 122.7222, 222.588, 183.609, 106.6716, 188.411, 285.3144], [93.951, 122.7303, 146.9424, 218.7185, 14.5015, 1108.675, 14.0175, 232.9489, 94.5052, 49.4367, 16.3613, 18.6911, 136.9843, 78.3988, 54.2051, 0.0, 0.0, 41.7116, 0.0, 80.0442, 0.0, 105.5718, 149.1437, 50.6678, 100.386, 56.4282, 107.514], [92.5155, 195.9048, 120.0232, 157.0555, 31.1259, 1421.3, 59.283, 269.5469, 73.266, 79.4084, 30.6774, 48.0594, 96.4214, 37.004, 76.7534, 33.0845, 23.6808, 43.8002, 0.0, 70.6766, 25.8484, 103.6224, 133.808, 97.0218, 130.5018, 52.1739, 84.24, 71.4564, 30.7805, 68.8297, 90.5671], [88.704, 277.9182, 192.0776, 163.254, 42.1889, 1746.8875, 35.1225, 255.4596, 66.573, 78.2363, 28.8944, 56.4062, 89.7437, 0.0, 52.7317, 42.6598, 0.9626, 43.0971, 10.2874, 70.7495, 27.6982, 128.7407, 169.5223, 63.7982, 145.4954, 50.4252, 48.654, 65.9502, 56.5488, 55.2516, 136.6277], [1971.825, 35.028, 579.3225, 174.7319, 83.2595, 97.1451, 52.2922, 170.0573, 105.8854, 127.3418, 62.5997, 33.6996, 92.3362, 28.8684, 91.7755, 265.958, 185.643, 196.6536, 92.2896, 179.712, 0.0], [177.3135, 849.7407, 243.179, 313.1128, 47.3795, 151.5975, 245.0918, 182.4568, 209.855, 172.2178, 90.8109, 135.5367, 221.7253, 67.5468, 413.0648, 418.2794, 202.9738, 293.1143, 123.714, 313.47, 279.9882, 99.3674, 177.9632, 359.2848], [242.2035, 706.2426, 493.0464, 416.185, 103.454, 3012.6375, 222.7995, 744.8847, 214.6222, 255.9739, 161.8298, 22.0441, 179.6227, 63.6784, 219.8119, 265.1906, 21.1554, 154.7691, 81.396, 134.3547, 122.2541, 316.7905, 261.7441, 78.6694, 304.5685, 122.0697, 90.9972], [232.8975, 399.0546, 475.64, 438.1615, 128.8391, 3894.85, 261.639, 891.8574, 218.0133, 293.2293, 54.8522, 265.3958, 141.2905, 177.8856, 37.2497, 127.3268, 59.3986, 138.6923, 86.3347, 354.4305, 533.2285, 208.839, 421.2994, 62.3268, 181.71, 296.7966, 0.0, 166.3808, 170.3184], [297.198, 704.7936, 456.6144, 308.7175, 103.8427, 3597.475, 45.612, 850.3216, 233.0503, 282.4713, 73.0751, 96.1901, 267.336, 109.0832, 170.7416, 173.1787, 76.1863, 91.4056, 68.4547, 271.8441, 66.1323, 442.532, 475.4086, 236.0838, 468.3393, 148.6395, 357.048, 224.8434, 112.9262, 227.541, 425.1122]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

