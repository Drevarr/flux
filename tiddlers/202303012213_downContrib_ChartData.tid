created: 20230301221309000
creator: Drevarr
modified: 20230705163520897
modifier: drevarr
tags: ChartData
title: 202303012213_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00e2 \u00d4tik R\u00e6j", "Jeckyll Mbs", "Arduran Illl", "Ezaff", "Jeckyll Mbs", "Arcanophage Farra", "Nazhul Naxxremis", "Smol Gluvs", "Sofya De Nova", "Sofya De Nova", "Sakura Shanks", "Ace Hammers", "Skye Nightroad", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Panther B Me", "What Charr U Saying", "Legacy Of Mathus", "Smol Daddy Tika", "Whose Guardian", "Xyntharos", "Be\u00eb", "Jupi Jupi Jupi", "Mike The Archmagus", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Berserker", "Spellbreaker", "Weaver", "Tempest", "Berserker", "Spellbreaker", "Scourge", "Scourge", "Catalyst", "Weaver", "Vindicator", "Vindicator", "Scrapper", "Berserker", "Weaver", "Scourge", "Berserker", "Berserker", "Berserker", "Dragonhunter", "Vindicator", "Scourge", "Dragonhunter", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 29102.0, 0.0, 69963.0, 5352.0, 0.0, 1658.0, 0.0, 5995.0, 10358.0, 4472.0, 0.0, 0.0], [9637.0, 0.0, 38587.0, 3575.0, 0.0, 4735.0, 0.0, 3216.0, 0.0, 1129.0, 4268.0, 9892.0, 1138.0, 0.0, 2566.0, 0.0, 0.0, 0.0, 0.0, 39139.0, 0.0, 2320.0, 7306.0, 0.0], [0.0, 0.0, 0.0, 0.0, 12568.0, 45090.0, 14639.0, 23248.0, 18620.0, 5897.0, 2936.0, 0.0, 0.0, 10402.0], [1108.0, 1002.0, 0.0, 3325.0, 0.0, 3541.0, 20624.0, 3818.0, 6014.0, 1493.0, 4353.0, 1246.0, 0.0, 18866.0, 1833.0, 0.0, 0.0, 0.0, 1928.0, 0.0, 0.0, 53267.0, 0.0, 3148.0, 0.0, 0.0, 3167.0, 13804.0, 2961.0, 0.0, 0.0, 0.0, 4059.0, 0.0, 1855.0], [4767.0, 13072.0, 3377.0, 39851.0, 4448.0, 0.0, 16322.0, 0.0, 581.0, 24855.0, 30032.0, 11849.0, 5393.0, 986.0], [0.0, 3695.0, 564.0, 10135.0, 4750.0, 1496.0, 0.0, 17892.0, 4007.0, 29436.0, 5470.0, 1150.0, 4178.0, 2235.0, 0.0, 7125.0, 4097.0, 0.0, 0.0, 0.0, 3617.0, 1063.0, 1187.0, 0.0, 0.0, 31563.0, 0.0, 0.0, 1363.0, 0.0, 0.0, 0.0, 23091.0, 0.0, 6722.0, 0.0, 5908.0, 3794.0, 0.0, 0.0, 0.0, 0.0, 0.0], [107.0, 7352.0, 1414.0, 10259.0, 3017.0, 11826.0, 3259.0, 30357.0, 3794.0, 22714.0, 5893.0, 3722.0, 15223.0, 0.0, 0.0, 731.0, 0.0, 0.0, 5099.0, 0.0, 0.0, 1303.0, 57187.0, 0.0, 122.0, 0.0], [2480.0, 8255.0, 4254.0, 2599.0, 2345.0, 8141.0, 1809.0, 4630.0, 613.0, 239.0, 13251.0, 6126.0, 1675.0, 1051.0, 0.0, 771.0, 0.0, 0.0, 0.0, 3238.0, 0.0, 8024.0, 0.0, 1168.0, 30639.0, 0.0, 0.0, 503.0, 8211.0, 5205.0, 0.0, 179.0, 30138.0, 11089.0, 21046.0, 2481.0, 7587.0, 3464.0, 3404.0, 4194.0, 0.0, 451.0, 2106.0], [182.0, 55477.0, 30215.0, 1533.0, 1843.0, 0.0, 0.0, 17402.0, 1624.0, 0.0, 202.0, 5131.0, 6006.0, 9906.0, 12998.0, 0.0, 8753.0, 28071.0, 7630.0, 3438.0, 11126.0, 5260.0, 2746.0, 5484.0], [83792.0, 14943.0, 22485.0, 36729.0, 18669.0, 52582.0, 30745.0, 14555.0, 19600.0, 0.0, 9605.0], [75233.0, 0.0, 40699.0, 0.0, 9453.0, 21707.0, 5570.0, 2838.0, 66120.0, 13975.0, 12521.0, 23246.0, 26057.0, 16542.0, 0.0, 5615.0, 7314.0, 0.0, 5368.0], [6067.0, 5199.0, 8234.0, 11121.0, 1463.0, 12450.0, 0.0, 26789.0, 9565.0, 40873.0, 1353.0, 1258.0, 0.0, 3285.0, 1327.0, 3447.0, 0.0, 0.0, 0.0, 20325.0, 6866.0, 5703.0, 0.0, 0.0, 44289.0, 0.0, 6270.0, 0.0, 8927.0, 8087.0, 1565.0, 3169.0, 46798.0, 12329.0, 24082.0, 7902.0, 9667.0, 31192.0, 6625.0, 5919.0, 11998.0, 0.0, 0.0], [8917.0, 1100.0, 3072.0, 14076.0, 6316.0, 2973.0, 15457.0, 50580.0, 0.0, 52454.0, 21546.0, 1546.0, 2569.0, 0.0, 0.0, 0.0, 5634.0, 0.0, 0.0, 0.0, 13725.0, 2323.0, 0.0, 0.0, 0.0, 45039.0, 0.0, 29475.0, 0.0, 12006.0, 2162.0, 3224.0, 4705.0, 16296.0, 10212.0, 41634.0, 3817.0, 10226.0, 14914.0, 0.0, 7274.0, 275.0, 0.0, 26.0], [21726.0, 14919.0, 1778.0, 0.0, 0.0, 12109.0, 2077.0, 0.0, 3115.0, 0.0, 0.0, 0.0, 6278.0, 0.0, 0.0, 111357.0, 0.0, 36630.0, 13031.0, 10027.0, 4757.0, 0.0, 0.0, 50996.0, 0.0, 9299.0, 9407.0, 10496.0, 21277.0, 4565.0, 41263.0, 27860.0, 0.0, 9596.0], [8506.0, 12876.0, 16670.0, 7700.0, 2050.0, 3842.0, 0.0, 62185.0, 7544.0, 49639.0, 19245.0, 6036.0, 0.0, 0.0, 2206.0, 1549.0, 8028.0, 0.0, 5453.0, 2828.0, 31597.0, 17231.0, 30791.0, 27359.0, 0.0, 29888.0, 7637.0, 0.0, 0.0, 0.0, 32298.0, 10408.0, 11993.0, 0.0, 16991.0, 28167.0], [11256.0, 3387.0, 5042.0, 3586.0, 2297.0, 7309.0, 2569.0, 51974.0, 20196.0, 34447.0, 25281.0, 3470.0, 79.0, 1073.0, 0.0, 13837.0, 4480.0, 0.0, 4102.0, 0.0, 6632.0, 17263.0, 22339.0, 0.0, 3610.0, 56017.0, 0.0, 11707.0, 948.0, 11770.0, 4074.0, 1540.0, 1269.0, 39812.0, 3328.0, 34754.0, 10273.0, 5607.0, 8150.0, 1907.0, 28466.0, 3995.0, 308.0, 4848.0], [0.0, 5895.0, 72462.0, 0.0, 45359.0, 32689.0, 3244.0, 40.0, 0.0, 0.0, 4041.0, 0.0, 0.0, 0.0, 1371.0, 0.0, 0.0, 10284.0, 0.0, 74010.0, 0.0, 24953.0, 0.0, 7531.0, 9104.0, 0.0, 0.0, 73536.0, 15065.0, 61858.0, 2520.0, 0.0, 0.0, 18913.0, 9961.0, 0.0, 2641.0, 0.0], [14112.0, 13802.0, 12731.0, 3591.0, 0.0, 10001.0, 17197.0, 28515.0, 2378.0, 45615.0, 19305.0, 5298.0, 12628.0, 0.0, 0.0, 3945.0, 6406.0, 0.0, 0.0, 5806.0, 3400.0, 0.0, 14294.0, 87180.0, 0.0, 24172.0, 16130.0, 21241.0, 5261.0, 0.0, 0.0, 0.0, 11849.0, 24940.0, 16913.0, 7629.0, 8664.0, 2240.0, 11631.0, 23780.0, 0.0, 2011.0], [0.0, 10871.0, 9652.0, 18912.0, 2217.0, 3626.0, 13500.0, 93860.0, 1114.0, 20639.0, 9664.0, 781.0, 19671.0, 0.0, 0.0, 5902.0, 11679.0, 0.0, 0.0, 5890.0, 7267.0, 1070.0, 4995.0, 0.0, 0.0, 122037.0, 24501.0, 8348.0, 6049.0, 0.0, 0.0, 39198.0, 4854.0, 14414.0, 16342.0, 0.0, 2478.0, 0.0, 5281.0], [5019.0, 20110.0, 8604.0, 9970.0, 0.0, 7404.0, 2357.0, 61901.0, 6885.0, 50761.0, 24846.0, 11548.0, 5485.0, 6405.0, 0.0, 38487.0, 10985.0, 0.0, 0.0, 3354.0, 12815.0, 696.0, 10686.0, 0.0, 6365.0, 77511.0, 0.0, 2813.0, 4863.0, 1624.0, 16814.0, 9570.0, 475.0, 30645.0, 3941.0, 37946.0, 7264.0, 0.0, 6234.0, 12518.0, 18424.0, 10075.0, 0.0], [3784.0, 22821.0, 12734.0, 17892.0, 3579.0, 3937.0, 11871.0, 34704.0, 3629.0, 39128.0, 18540.0, 7410.0, 0.0, 3607.0, 2300.0, 38046.0, 7544.0, 0.0, 0.0, 4710.0, 13153.0, 3251.0, 17487.0, 0.0, 104747.0, 0.0, 16302.0, 4532.0, 12176.0, 283.0, 8453.0, 0.0, 75544.0, 6378.0, 36591.0, 13493.0, 13378.0, 22487.0, 1555.0, 14762.0, 5643.0, 6576.0, 1999.0], [10024.0, 14166.0, 9240.0, 11157.0, 1109.0, 3361.0, 13308.0, 64214.0, 8045.0, 31361.0, 24063.0, 10016.0, 24563.0, 2649.0, 855.0, 6370.0, 6029.0, 0.0, 3656.0, 1750.0, 34908.0, 7634.0, 36334.0, 0.0, 4843.0, 108739.0, 0.0, 10673.0, 10172.0, 8147.0, 6542.0, 261.0, 4780.0, 40790.0, 7531.0, 22906.0, 9819.0, 20286.0, 16127.0, 6542.0, 25239.0, 2648.0, 0.0, 10962.0], [7753.0, 28211.0, 2655.0, 11093.0, 2359.0, 5522.0, 5338.0, 94675.0, 275.0, 64755.0, 55681.0, 19910.0, 12856.0, 1175.0, 3093.0, 34846.0, 2527.0, 0.0, 10944.0, 0.0, 19987.0, 7610.0, 13432.0, 0.0, 5330.0, 90881.0, 0.0, 14612.0, 0.0, 0.0, 8647.0, 25230.0, 14272.0, 71928.0, 17537.0, 17291.0, 7265.0, 33582.0, 26201.0, 16678.0, 23398.0, 10603.0, 0.0, 235.0], [5325.0, 2609.0, 3037.0, 9892.0, 4076.0, 24438.0, 119173.0, 7116.0, 52935.0, 34999.0, 10905.0, 3394.0, 0.0, 0.0, 8561.0, 5977.0, 0.0, 0.0, 0.0, 13602.0, 14073.0, 8645.0, 0.0, 3064.0, 91756.0, 40504.0, 8260.0, 30917.0, 8373.0, 7344.0, 3095.0, 136171.0, 8070.0, 52422.0, 7039.0, 22899.0, 19878.0, 432.0, 50154.0, 15459.0, 1925.0, 10537.0], [13601.0, 51593.0, 14229.0, 38559.0, 3619.0, 2731.0, 20358.0, 130340.0, 10580.0, 63364.0, 12301.0, 3926.0, 23828.0, 3338.0, 2299.0, 15042.0, 14340.0, 0.0, 2600.0, 5326.0, 3597.0, 14972.0, 12056.0, 0.0, 5606.0, 183650.0, 0.0, 17784.0, 0.0, 21801.0, 12326.0, 0.0, 1992.0, 137234.0, 7460.0, 60218.0, 6664.0, 47535.0, 1271.0, 3199.0, 20044.0, 15528.0, 3994.0], [13113.0, 40344.0, 13756.0, 24028.0, 15617.0, 30305.0, 6771.0, 86606.0, 0.0, 89252.0, 57008.0, 12105.0, 7615.0, 5976.0, 0.0, 67339.0, 3917.0, 0.0, 0.0, 0.0, 19159.0, 0.0, 67538.0, 0.0, 4722.0, 125297.0, 0.0, 36192.0, 2448.0, 28917.0, 26252.0, 4812.0, 2268.0, 134441.0, 40913.0, 40019.0, 4338.0, 28228.0, 18929.0, 6112.0, 36484.0, 22661.0, 3278.0, 1393.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

