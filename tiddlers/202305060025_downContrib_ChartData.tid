created: 20230506002551000
creator: Drevarr
modified: 20230705163528292
modifier: drevarr
tags: ChartData
title: 202305060025_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Smol Gluvs", "Xanvias Tsolice", "Venngi", "Morv\u00e4rth", "Rozaalyna", "Rina Of Theros", "Lord Erin The Wise", "Khailerian", "Kmpek", "Johosh The Great", "Hauzzy", "Sister Elonith", "Mistwalker Caelon", "Be\u00eb", "Demon Dalham", "Permanent Dawn", "Kos\u00e4ir", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Scourge", "Weaver", "Scrapper", "Scourge", "Scourge", "Scourge", "Weaver", "Vindicator", "Vindicator", "Willbender", "Berserker", "Berserker", "Vindicator", "Scourge", "Dragonhunter", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18386.0, 55605.0, 78.0, 0.0, 2590.0, 1253.0, 61689.0, 20619.0, 15848.0, 4233.0, 0.0, 3450.0, 9311.0, 409.0, 58854.0, 63062.0], [16595.0, 39104.0, 4984.0, 6903.0, 781.0, 4952.0, 78692.0, 4491.0, 18959.0, 0.0, 5048.0, 145.0, 20311.0, 10504.0, 48417.0, 84341.0], [367771.0], [7064.0, 144236.0, 22562.0, 23236.0, 4064.0, 17969.0, 3207.0, 67150.0, 22159.0, 101279.0, 16490.0], [15615.0, 10232.0, 189369.0, 18869.0, 7720.0, 0.0, 0.0, 75392.0, 12469.0, 79769.0, 145621.0], [31851.0, 35498.0, 31552.0, 4425.0, 0.0, 194862.0, 75271.0, 43567.0, 8443.0, 935.0, 0.0, 38317.0, 5007.0, 75358.0, 132240.0], [36556.0, 143572.0, 12316.0, 4374.0, 0.0, 14808.0, 172902.0, 97950.0, 34677.0, 4396.0, 18132.0, 0.0, 72317.0, 3531.0, 54477.0, 159731.0], [63871.0, 148981.0, 2751.0, 9128.0, 7943.0, 2659.0, 299271.0, 117313.0, 56864.0, 20807.0, 7535.0, 0.0, 75315.0, 28087.0], [44480.0, 145586.0, 22590.0, 0.0, 0.0, 2244.0, 235327.0, 82455.0, 58400.0, 6576.0, 4025.0, 0.0, 79779.0, 9775.0, 91238.0, 107047.0], [35446.0, 122236.0, 34065.0, 9401.0, 11368.0, 25865.0, 120813.0, 6298.0, 72219.0, 22356.0, 2131.0, 0.0, 121520.0, 29029.0, 141498.0, 189945.0], [46933.0, 146813.0, 32298.0, 0.0, 4001.0, 4148.0, 262244.0, 77014.0, 36781.0, 10589.0, 8056.0, 0.0, 97646.0, 4446.0, 90894.0, 190383.0], [75803.0, 367878.0, 21663.0, 16459.0, 5052.0, 12577.0, 334718.0, 35082.0, 105014.0, 6492.0, 22289.0, 0.0, 68098.0], [27827.0, 280173.0, 16899.0, 3731.0, 0.0, 2674.0, 132069.0, 107909.0, 19749.0, 0.0, 5683.0, 0.0, 120612.0, 20055.0, 64867.0, 274960.0], [106209.0, 304502.0, 38962.0, 0.0, 10842.0, 0.0, 89496.0, 93686.0, 18743.0, 11727.0, 7840.0, 113343.0, 24033.0, 142497.0, 209830.0], [74447.0, 182692.0, 32449.0, 10236.0, 7495.0, 8521.0, 301462.0, 95626.0, 32208.0, 0.0, 79492.0, 24602.0, 90659.0, 253810.0], [23268.0, 290814.0, 2749.0, 252.0, 5745.0, 10858.0, 294725.0, 90260.0, 112288.0, 10478.0, 13880.0, 0.0, 104121.0, 12383.0, 105605.0, 228811.0], [71318.0, 177165.0, 18739.0, 6824.0, 0.0, 9077.0, 346643.0, 62552.0, 85025.0, 47.0, 3088.0, 0.0, 196634.0, 39909.0, 114747.0, 218431.0], [63811.0, 297592.0, 12290.0, 44465.0, 8099.0, 31207.0, 369900.0, 113228.0, 44493.0, 12645.0, 8035.0, 0.0, 106254.0, 12247.0, 209961.0, 243334.0], [127466.0, 381264.0, 68600.0, 50311.0, 0.0, 10912.0, 631920.0, 191576.0, 167047.0, 14575.0, 16471.0, 0.0, 204614.0, 28106.0, 318421.0, 358614.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

