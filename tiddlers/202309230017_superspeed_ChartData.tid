created: 20230923001758000
creator: Drevarr
tags: ChartData
title: 202309230017_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Budget Chicken", "Ice Jasminie", "Kosa\u00efr", "Lai Zee", "Zaedy Zae", "Sofya De Nova", "High Sorcer Baradun", "Xanvias Tsolice", "Mort\u00e4rion", "Arcanophage Farra", "Varen Frostwood", "Jimbo The Pleb", "Tegan Parker", "Oo Dads Mad", "Halfpint The Drunk", "Grasszanine", "Mistwalker Cael", "Seiker Novus Terra", "Drevarr Moonwillow", "Leafzely"];
const professions = ["Berserker", "Firebrand", "Scrapper", "Weaver", "Scrapper", "Druid", "Weaver", "Tempest", "Weaver", "Scrapper", "Spellbreaker", "Tempest", "Berserker", "Tempest", "Berserker", "Berserker", "Spellbreaker", "Herald", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.136, 0, 0.406, 0.34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.213, 0, 0.227, 0, 0.212, 0, 0.519, 0.455, 0, 0, 0, 0], [0.365, 0.293, 0.257, 0.49, 0.413, 0.365, 0.603, 0.465, 0.51, 0], [0.293, 0.442, 0.398, 0.311, 0.681, 0.398, 0.659, 0.301], [0, 0.243, 0, 0.381, 0, 0, 0.317, 0.29, 0.892, 0, 0.373, 0.359, 0.466, 0.268, 0.137, 0, 0.033, 0.449, 0, 0, 0, 0, 0], [0.399, 0.433, 0.321, 0.311, 0.689, 0.666, 0.524, 0.398], [0, 0.789, 0.885, 0.545, 0.73, 0, 0.388, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.719, 0.388, 0, 0.398, 0.443, 0.676, 0.389, 0.105, 0.252, 0, 0, 0, 0, 0, 0.541, 0, 0, 0.273, 0, 0.132, 0.62, 0, 0, 0, 0, 0, 0], [0.718, 0.453, 0.887, 0.133, 0.62, 0.385, 0.941, 0.696, 0.899, 1.236, 1.119, 0.225], [0, 0.407, 0, 0.265, 0.571, 0, 0, 0.625, 0.251, 0, 0, 0, 0, 0, 0.466, 0.367, 0, 0.547, 0.293, 0.133, 0.262, 0.303, 0, 0.452, 0.299, 0, 0], [0, 0.689, 0.435, 0.529, 1.616, 0.682, 1.121, 0.86, 0, 0, 1.322, 0, 0], [0, 0.17, 0, 0.218, 0.592, 0, 0.647, 0, 0.86, 1.24, 0, 0, 0, 0, 0, 0.244, 0, 0.518, 0, 0.519, 0.453, 0.76, 0.545, 0.909, 0], [0.72, 0.471, 0, 0.756, 0.954, 0.389, 0.94, 0.675, 1.593, 0.373, 1.773, 0.63, 0.698, 0, 0.365, 0.327, 0.437, 0.37, 0, 0.311, 0.547, 0.904, 0.259, 0.311, 0], [1.199, 0.588, 0, 0.277, 0.858, 0, 0, 0.523, 0.533, 1.498, 2.063, 0.622, 0, 0, 1.171, 0, 0, 0.469, 0.562, 0.555, 0, 0.519, 0.538, 0.76, 0.727, 0, 0.475], [0.36, 0.627, 0.927, 0.466, 0.831, 0, 0.391, 0.628, 0.484, 0, 1.12, 0, 0.718, 0.814, 0.905, 0, 0.408, 0.293, 0.337, 0.723, 0.311, 0.274, 0.456, 0.698, 0.339], [1.252, 0.949, 1.478, 0.665, 0.633, 0.649, 0.523, 0.419, 0, 0, 1.245, 0, 0.588, 1.369, 1.368, 0.608, 0.911], [1.199, 0.605, 0, 0.852, 1.038, 0, 0.649, 0.911, 0.714, 1.122, 0, 0.622, 0, 0.774, 0, 0.608, 0.71, 0, 0.499, 0, 0.519, 0.571, 0.753, 0.582, 0.562, 0], [1.491, 0.653, 1.218, 0.713, 0.866, 0.649, 0.407, 0.419, 0, 1.16, 1.196, 1.203, 1.094, 0.569, 0.678, 0.366, 0.333, 0, 0.519, 0.909, 0.748, 1.164, 0.439, 0], [0, 0.794, 0.415, 1.065, 0.685, 1.731, 0.649, 1.126, 0.688, 0, 1.547, 1.244, 0, 0.299, 1.008, 0.559, 0, 0.422, 0.488, 0.602, 0.687, 0.774, 0.572, 0.753, 0.218, 0.564, 0.713], [0.836, 1.075, 1.485, 1.043, 1.324, 1.936, 1.257, 1.006, 1.916, 1.518, 2.684, 1.034, 1.394, 1.333, 1.104, 0.82, 0.073], [2.115, 1.211, 1.763, 1.276, 1.867, 0.904, 0.917, 1.019, 0.839, 1.348, 2.054, 0.768, 1.261, 2.431, 1.661, 1.157, 1.517, 0.912, 0.962, 1.304, 1.543, 1.917, 1.808, 1.22, 1.064, 0.286], [0.722, 1.858, 2.797, 1.409, 1.931, 0, 1.114, 1.765, 1.619, 0.337, 1.392, 1.869, 0.768, 1.466, 2.2, 0.45, 1.268, 1.146, 0.989, 1.191, 0.914, 1.069, 0.944, 1.332, 1.215, 0.677, 0.286]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

