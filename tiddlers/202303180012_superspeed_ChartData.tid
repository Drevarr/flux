created: 20230318001239000
creator: Drevarr
modified: 20230705163522429
modifier: drevarr
tags: ChartData
title: 202303180012_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Lucky Leipreach\u00e1n", "Grasszanine", "Mike The Archmagus", "Tegan Parker", "Arcanophage Farra", "Mac Chiato", "Venomina The Siren", "Kosa\u00edr", "Demon Sekhmet", "Cat Wigglebooty", "Smol Daddy Tika", "Zadie Miststep", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Spellbreaker", "Weaver", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Berserker", "Scrapper", "Berserker", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.166, 0.173, 1.144, 0, 0, 0, 0.284, 0, 0.894, 0, 0.242, 0, 0, 0, 0.271, 0, 0.241, 0.412, 0, 0, 0.154], [0.011, 0, 0.125, 0.087, 0, 0.418, 0, 0.148, 0.071, 0, 0.354, 0.081, 0.03, 0.351, 0.171, 0.745, 0.324, 0, 0, 0.121, 0.24, 0.402], [0.248, 0, 0, 0.384, 0, 0, 0, 0, 0, 0, 0.752, 0, 0.332, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.232], [0.096, 0, 0.182, 0.058, 0.626, 0, 0.139, 0.296, 0, 0.473, 0, 0, 0.207, 0.248, 0.699, 0.17, 0.271, 0, 0.482, 0.41, 0, 0, 0.195], [0, 0.446, 0.345, 0.495, 0.351, 0.171, 0, 0.325, 0.633, 0, 0, 0.24, 0.434], [0, 0, 0, 0, 0, 0.48, 0.413, 0, 0.326, 0, 0, 0, 0, 0.807, 0.399, 0.552], [0.352, 0.531, 0.083, 0.043, 0, 0.379, 0, 0, 0.385, 0.449, 0.528, 0, 0, 0.271, 0.444, 0, 0.412, 0.364, 0.419, 0.335], [0.493, 0, 0.051, 0.104, 0, 0, 0.384, 0.25, 0.41, 0.434, 0.351, 0.171, 0, 0.243, 0, 0.41, 0.486, 0.474, 0.594], [0.344, 0.906, 0.042, 0.523, 0, 0, 0, 0, 0.108, 1.055, 0.679, 0, 0.522, 0.233, 0.197, 0, 0, 0.332, 0.361, 0.36, 0, 0.245, 0, 0.331], [0.563, 0, 0.135, 0.192, 1.91, 0.771, 0, 0.494, 0, 0.16, 0, 0.493, 0.413, 0, 0, 0, 0.604, 0, 0, 0, 0.327, 0.604], [0.946, 0.811, 1.289, 2.144, 0.658, 0.566], [0.719, 0, 0.676, 0.289, 0, 0.902, 1.266, 0.521, 0, 0.803, 0, 0, 0.575, 0.488, 0.584, 0.284, 0.451, 0.404, 0, 0, 4.604, 0, 0.415, 0.454], [0.675, 0.707, 0.807, 0.55, 1.006, 0.83, 0.76, 0.591, 0.143, 0.276, 0.896, 0.499, 0.721, 0.787, 0.351, 0.51, 0.537, 1.297, 0.321, 0.512, 1.094, 0, 0.239, 0.673], [0.878, 0.724, 0.829, 0.587, 2.293, 1.768, 0.902, 1.334, 0, 0, 1.33, 1.181, 1.047, 0.784, 0.537, 0.812, 1.622, 0.644, 0.617, 1.641, 0.303, 0.727, 1.15], [1.685, 0.675, 1.26, 1.726, 1.72, 2.571, 1.896, 1.484, 0.461, 1.92, 1.799, 1.42, 1.447, 0.709, 0.863, 0.554, 0.541, 1.801, 1.606, 1.234, 2.735, 0.488, 1.007, 1.719]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

