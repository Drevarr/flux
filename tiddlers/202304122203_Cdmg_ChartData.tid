created: 20230412220340000
creator: Drevarr
modified: 20230705163525311
modifier: drevarr
tags: ChartData
title: 202304122203_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Xyntharos", "Minka Bringer", "Lucas Ryn", "Smol Gluvs", "Bella Sassy", "Jeckyll Mbs", "Panther B Me", "Koralia Danai", "Drevarr Moonwillow", "Be\u00eb", "Black Raspberry Pie", "Skye Nightroad", "Sub Train", "Mac Chiato", "Venomina The Siren", "Ark Darkness", "K\u00f4sair", "Mistwalker Caelon", "Solus Sanctus", "Sygaldry Verdandi", "Estryl", "Eibh\u00ebar", "Rozaalyna", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Panther B Me", "Nazhul Naxxremis", "Gavann", "Smol Gluvs", "Smol Daddy Tika", "Rina Of Theros", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Berserker", "Vindicator", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Berserker", "Reaper", "Firebrand", "Scrapper", "Reaper", "Chronomancer", "Scrapper", "Firebrand", "Tempest", "Tempest", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Scourge", "Berserker", "Weaver", "Scourge", "Scourge", "Firebrand", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.6145, 0.0, 0.0, 4.219, 3.0373, 0.0, 7.4053, 0.0, 5.0431, 4.64, 49.0515, 0.0, 13.3519, 18.0, 2.7879, 5.1436, 3.5714, 20.0556, 40.7778, 7.3789], [3.0696, 5.2121, 0.0, 7.8, 0.0, 0.1633, 8.9095, 0.0, 8.5431, 0.4267, 8.9706, 0.0, 5.5278, 43.4679, 8.8788, 17.9307, 0.0, 0.0, 21.0, 9.3918], [0.0, 73.0533, 44.8971, 40.9091, 58.2222, 5.1193, 12.9848, 14.9356, 37.2857, 18.7037, 11.5714, 8.2327], [16.0406, 0.0, 0.0, 5.6286, 8.3444, 3.7551, 13.3909, 2.6983, 5.56, 20.1176, 0.0, 39.463, 20.6239, 5.2273, 5.2624, 62.0714, 41.3519, 1.6032, 1.869], [52.3824, 41.5909, 42.9167, 29.0092, 30.2576, 9.7624, 26.1667, 55.2593, 25.4444, 12.3906], [0.6116, 0.0, 0.0, 13.3524, 1.7386, 9.602, 20.142, 0.0, 14.1931, 5.12, 12.4191, 18.8182, 4.4907, 40.0917, 0.0, 3.8812, 5.7381, 12.0926, 1.7302, 4.8292], [8.4899, 0.0, 0.0, 4.2, 0.2199, 40.7041, 0.1358, 10.6224, 20.2933, 5.5, 0.0, 122.7339, 2.1667, 4.0941, 0.0, 0.0, 0.0, 3.3988], [74.2206, 35.0455, 31.787, 60.5505, 11.5, 7.0693, 101.0, 41.0, 5.2063, 11.317], [0.9855, 0.0, 0.0, 1.0524, 7.9004, 7.5816, 24.4918, 6.5483, 20.6267, 28.4265, 42.5, 78.9074, 18.1743, 3.5455, 5.9406, 0.0, 42.463, 0.0, 0.3614], [5.3594, 37.8788, 2.4655, 9.4143, 19.61, 17.8316, 16.4136, 5.3191, 2.5931, 20.6933, 25.5882, 0.0, 55.0185, 4.9817, 1.9697, 2.4901, 14.2381, 13.4815, 15.7302, 5.3883], [62.9779, 44.4545, 27.5833, 10.5046, 15.3485, 24.5842, 8.6667, 60.5926, 27.0794, 20.1836], [14.3855, 1.7576, 0.0, 4.0429, 3.0996, 18.2041, 10.2181, 0.0, 4.2448, 32.3733, 16.5882, 0.0, 37.4352, 35.2752, 9.2576, 2.8168, 39.7619, 26.7593, 2.4127, 9.3357], [0.5565, 1.9091, 28.3276, 20.5714, 30.0, 20.5051, 12.4033, 0.0, 1.5707, 0.0, 21.4074, 0.055, 0.3485, 8.4604, 9.9524, 38.7593, 14.1746, 16.2468], [7.458, 4.4242, 0.0, 23.5524, 7.4066, 17.6786, 10.9342, 0.0, 5.4638, 44.5333, 42.0662, 14.6818, 27.0741, 11.5046, 8.2121, 10.8812, 44.4762, 64.1111, 49.6508, 1.5988], [10.9855, 0.0, 0.0, 5.5714, 3.3237, 18.6786, 14.8951, 0.0, 1.7914, 43.6324, 0.0, 27.6574, 21.2569, 51.0455, 8.2822, 99.5476, 37.6852, 32.9048, 12.3158], [16.0609, 2.1818, 0.0, 4.6952, 50.6763, 4.4184, 2.8313, 0.0, 4.0121, 1.2267, 6.1838, 0.0, 37.5278, 80.367, 2.8788, 23.0297, 87.7619, 16.0741, 0.0, 12.1708], [4.4087, 0.0, 0.0, 9.119, 34.3527, 22.5204, 20.4342, 12.0069, 21.4, 115.9779, 0.0, 6.787, 48.9541, 0.0, 18.9059, 0.0, 52.9259, 9.5079, 0.0], [23.3884, 0.0, 0.0, 103.1571, 1.6515, 36.5765, 11.2984, 0.0, 11.9356, 3.5238, 168.2222, 7.2857, 16.1029], [12.7391, 8.6061, 0.0, 15.2905, 0.6929, 24.8929, 18.428, 25.5052, 10.52, 14.7426, 0.0, 15.3611, 35.2385, 0.0, 6.8515, 0.0, 9.8333, 20.7937, 25.8327], [13.971, 33.1515, 6.8793, 11.4476, 13.6432, 53.0714, 26.7757, 0.0, 6.2241, 2.1067, 31.6691, 63.9091, 42.0463, 20.2477, 0.0, 21.3465, 65.3095, 55.963, 14.8889, 17.738], [6.4348, 0.0, 0.0, 32.0048, 23.1784, 48.6122, 23.1934, 0.0, 4.7345, 109.68, 86.2868, 0.0, 31.4537, 28.4404, 0.0, 6.1485, 113.3519, 69.6032, 8.8269], [71.1584, 0.0, 13.9155, 55.0933, 0.0, 110.5, 37.8981, 200.8716, 34.7879, 18.4109, 85.6905, 33.9815, 117.3016, 8.124], [16.8377, 45.4242, 0.1552, 19.4762, 12.2697, 86.9337, 30.5082, 0.0, 8.7207, 128.3867, 67.2059, 7.4091, 46.4537, 15.1927, 12.7576, 28.9554, 128.4524, 97.3889, 50.0476, 14.9719], [58.9333, 15.9394, 1.2759, 65.7286, 16.556, 190.0, 72.5453, 0.0, 23.4914, 123.92], [25.6116, 13.5152, 5.0, 94.1476, 13.2116, 89.7449, 42.4733, 0.0, 17.4138, 64.64, 109.6324, 0.0, 29.0833, 0.0, 8.8571, 170.1481, 195.2698, 10.4444], [30.342, 0.0, 0.0, 44.5286, 33.3942, 61.2908, 62.0453, 0.0, 21.9517, 7.8, 39.9853, 0.0, 120.8981, 83.7339, 0.0, 54.2822, 29.0714, 50.0926, 62.4286, 11.0164], [39.3942, 22.8485, 19.5862, 112.1, 29.195, 45.7092, 92.9506, 0.0, 61.4966, 172.9067], [94.1304, 41.3939, 18.7069, 55.5429, 35.9959, 44.0714, 119.6399, 0.0, 50.5259, 158.2133], [73.5758, 0.0, 90.1095, 19.0207, 54.5153, 66.0638, 0.0, 33.6362, 81.8933, 148.2647, 392.8182, 157.8704, 62.5138, 8.0909, 30.2475, 85.9762, 204.2963, 147.4127, 27.6515], [90.3014, 194.3939, 32.6552, 109.6905, 81.3195, 191.5612, 122.3292, 0.0, 40.5414, 86.6667], [17.8058, 7.6364, 3.8103, 91.5048, 11.9419, 108.6837, 75.7716, 0.0, 42.2362, 158.8676, 77.6364, 416.7315, 259.2661, 5.2727, 50.7327, 37.0, 96.1296, 49.381, 15.5158], [64.0406, 5.697, 13.8966, 144.6429, 41.9917, 73.75, 65.3971, 0.0, 68.1914, 128.6933, 108.8465, 219.119, 36.7407, 231.0159, 42.0175], [104.0145, 5.0303, 8.0862, 160.1857, 65.1867, 315.6429, 119.4465, 0.0, 75.2638, 203.7467], [65.9594, 0.0, 17.6034, 127.4143, 15.3942, 101.8724, 68.3313, 0.0, 29.1052, 111.9333, 66.3971, 37.7727, 494.9352, 314.5963, 40.0303, 28.7228, 187.7143, 278.463, 232.381, 42.0316]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

