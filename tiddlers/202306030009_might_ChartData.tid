created: 20230603000934000
creator: Drevarr
modified: 20230705163533162
modifier: drevarr
tags: ChartData
title: 202306030009_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Ana Larive", "Primal Clone", "Pu Ella", "Black Raspberry Pie", "High Sorcer Baradun", "Grothez", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Tika Fiery", "Cat Wigglebooty", "Tegan Parker", "Air One Com", "Aronorf Xideliesi", "Miphest\u00f6", "Sister Elon\u00edth", "Blanco Padre Guard", "Zadey Starbolt", "Koralia Danai", "Drevarr Moonwillow", "N\u00f3b\u00fa", "Venomina The Siren", "Sakis Ranger", "Bella Sassy", "Johosh Of The North", "Pamtastic", "Grasszanine", "Newtype Khan"];
const professions = ["Druid", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Herald", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Druid", "Tempest", "Druid", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.554, 1.6038, 0.0, 19.6798, 4.5408, 2.629, 7.9544, 4.842, 0.0, 4.4753, 0.0, 0.0, 0.0, 3.7835, 5.5717, 0.0, 7.3418, 0.0, 0.0, 3.109, 10.5291], [16.6082, 0.0, 33.709, 0.0, 0.0, 0.0, 0.0, 4.4597, 0.0, 28.733], [0.0, 2.7799, 0.0, 10.1322, 0.0, 0.0, 0.0, 5.1047, 9.1742, 14.9799, 4.4105, 0.0, 0.0, 5.0715, 9.3139, 3.9336, 0.0, 0.0, 4.9613, 0.0, 10.1871, 9.8627], [9.0526, 0.0, 22.6026, 0.8976, 3.7951, 0.7371, 0.6195, 8.5371, 13.0962, 1.0378, 5.1168, 1.6606, 0.0, 15.2145, 18.4615, 5.507], [3.0541, 13.5076, 0.5158, 28.4481, 12.1704, 0.0, 6.5481, 1.8809, 0.0, 2.9891, 1.2544, 7.0035, 17.2141, 3.8025, 11.7369, 0.0, 9.2698, 7.1217, 6.0197, 8.9298], [0.0, 25.0549, 5.102, 96.061, 0.0, 0.0, 0.0, 14.6945, 0.0, 6.279, 9.5344], [17.1785, 2.2862, 36.6318, 24.3144, 6.3806, 11.3022, 1.2142, 13.6339, 14.4417, 32.6894], [10.8589, 8.7674, 3.1783, 48.5177, 7.1544, 6.8342, 30.1985, 10.764, 10.5073, 19.3192, 4.1253], [0.0, 6.5578, 0.0, 23.7717, 1.5312, 6.5923, 0.8108, 2.8993, 18.0936, 15.1593, 4.2159, 3.1816, 1.9578, 0.0, 7.084, 21.7879, 9.4406, 5.3406, 1.39, 7.5725, 7.2324, 12.5685, 9.8627], [5.2151, 7.4488, 0.0, 25.5253, 3.3792, 1.2398, 0.8518, 3.6179, 20.8969, 14.6211, 10.7019, 2.6568, 3.3212, 0.336, 12.88, 9.4802, 4.6548, 3.3534, 3.6709, 7.3766, 2.952, 10.3194, 24.3902], [2.1075, 4.455, 9.9392, 78.5246, 0.0, 5.6246, 0.0, 4.163, 9.6839, 2.9601, 2.5944, 5.3464, 1.1362, 2.415, 26.0291, 0.7212, 18.9405, 5.9519, 0.0, 0.0, 7.6734, 28.2554], [0.0, 8.8744, 2.328, 46.3743, 0.0, 5.5692, 6.2198, 17.8388, 23.5911, 15.2421, 4.7888, 1.6082, 16.1805, 10.5613, 11.8664, 10.0602, 2.673, 12.2726, 0.0, 18.522, 29.5882], [4.9294, 13.9352, 0.0, 58.8447, 0.0, 0.0, 5.7242, 12.3597, 11.9301, 9.9884, 12.5624, 2.7968, 0.7616, 28.497, 21.2058, 15.1444, 4.2228, 5.0965, 8.5517, 0.0, 22.6895, 6.9306], [114.5718, 28.7969, 8.2524, 27.8898, 0.0, 7.2192, 0.0672, 38.479, 32.0998, 16.2589], [6.5221, 0.0, 59.0395, 3.5376, 5.8395, 1.6107, 22.6808, 10.764, 11.3505, 10.2336, 3.024, 0.5264, 17.9515, 24.3659, 8.3261, 8.3835, 4.9896, 22.4563, 9.963, 18.7866, 39.7174], [1.4109, 7.3062, 2.565, 61.1829, 0.0, 12.2774, 0.0, 5.179, 23.3179, 12.558, 2.5944, 9.1512, 1.6606, 0.0, 30.0265, 30.6029, 12.4564, 5.1543, 6.629, 0.9792, 11.439, 20.308, 34.6528], [10.2159, 11.583, 64.1056, 5.3328, 2.2378, 2.6781, 3.8409, 30.326, 13.6344, 17.7068, 4.6248, 5.5936, 0.896, 16.1805, 20.79, 16.39, 9.9981, 6.629, 19.1923, 1.476, 14.6853, 18.9258], [7.6798, 10.4782, 0.0, 65.6645, 4.3032, 6.6982, 4.9959, 1.9081, 30.1985, 2.691, 8.6264, 8.4952, 4.5798, 20.286, 27.9418, 12.522, 19.4994, 5.3104, 16.32, 16.7157, 17.1329, 46.648], [3.3041, 8.7318, 2.5092, 66.4439, 13.86, 4.8233, 2.6044, 6.9136, 25.2292, 25.2954, 20.5606, 10.8568, 4.0029, 0.3472, 18.2735, 35.9251, 23.0771, 10.2465, 4.6688, 18.0826, 1.4022, 17.7944, 31.7206], [22.1232, 0.0, 2.3423, 10.8784, 25.6114, 50.5011, 15.9556, 10.496, 0.874, 0.0, 21.8155, 39.2515, 5.7693, 17.2017, 16.2518, 32.183, 15.8301, 22.954, 75.0366], [2.6611, 23.1304, 66.4439, 15.576, 0.0, 0.0, 9.8624, 44.0873, 32.5611, 10.0533, 0.0, 4.7021, 8.7745, 45.738, 28.1252, 5.589, 31.465, 13.7268, 32.6781, 62.375], [0.0, 29.7238, 0.0, 105.8036, 9.7944, 16.4959, 5.2416, 8.1526, 83.0778, 45.1191, 12.064, 0.0, 3.933, 0.0, 37.2715, 20.8732, 19.4713, 7.1415, 10.4425, 8.2906, 0.0, 16.2729, 29.4549], [0.2143, 13.1155, 2.4953, 102.4911, 0.0, 0.9526, 5.2825, 12.836, 30.7082, 35.88, 19.3931, 7.7736, 2.4996, 0.0, 32.522, 47.5675, 24.5194, 29.3733, 12.5096, 16.6464, 9.0774, 30.5613, 61.5754], [0.0, 27.9418, 0.8643, 121.3915, 0.0, 0.0, 0.0, 16.8504, 56.5745, 29.601, 22.8307, 10.004, 2.8143, 0.0, 15.456, 40.9979, 28.1252, 22.8528, 0.0, 18.9312, 0.0, 14.7515, 69.4389], [16.7527, 27.3715, 0.0, 105.219, 0.0, 0.0, 0.0, 11.4731, 31.855, 23.8602, 27.7601, 0.0, 11.2222, 7.2128, 13.2825, 24.6154, 22.4871, 26.0199, 30.1158, 28.3315, 0.0, 46.9665, 68.6392], [17.7114, 44.7603, 77.1834, 23.4931, 0.0, 55.867, 79.4178, 49.76, 59.8644, 22.1324, 60.5146, 10.8855, 60.5272, 115.2872], [0.0, 30.686, 12.1696, 181.2105, 9.0024, 6.9552, 8.6814, 12.167, 63.0729, 49.4247, 43.0022, 12.5296, 10.086, 2.8448, 35.581, 51.5592, 28.0597, 46.1403, 21.2414, 50.8531, 3.9114, 33.7365, 70.5051]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

