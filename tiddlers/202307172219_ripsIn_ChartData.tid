created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Blade Stacker", "Panacea Vandrish", "Shaca Booey", "Permanent Dawn", "Sygaldry Verdandi", "Klengah", "Aira Draugr", "Xanvias Einzbern", "Bee Nemesis", "Willow Starrdust", "Xx Zen Xx", "Rina Of Theros", "Oo Dads Mad", "Inedible Plant", "I Mad X King I", "Cedryn X", "Cat Wigglebooty", "Ateriuz", "Tootsy Pop Star", "Dizzy Bunnyhopper", "Johosh The Mighty", "Mistwalker Cael", "Belvyn Brightblade", "Tribal S", "Legacy Of Mathus", "Venomina", "Be\u00eb", "Drevarr Moonwillow", "Bella Sassy", "Rozaalyna", "Koralia Danai", "Daphne Agla\u00e9", "Cyclotechnist Farra", "Crusader Siolith", "Solus Sanctus", "Primal Clone", "Morton Saltbringer", "Eibh\u00ebar", "Ryvalia Fazebringer", "Black Raspberry Pie", "Duke Silvver", "Soweng", "Glorious Gluvs", "Lucky Luprac\u00e1n", "Miphest\u00f6", "Drumina", "Sub Train", "Tegan Parker", "Newtype Khan", "High Sorcer Baradun"];
const professions = ["Virtuoso", "Firebrand", "Berserker", "Weaver", "Firebrand", "Druid", "Herald", "Berserker", "Berserker", "Herald", "Druid", "Scourge", "Berserker", "Vindicator", "Holosmith", "Berserker", "Scrapper", "Berserker", "Scourge", "Holosmith", "Berserker", "Vindicator", "Firebrand", "Druid", "Berserker", "Scourge", "Scourge", "Scrapper", "Firebrand", "Scourge", "Firebrand", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Reaper", "Berserker", "Scrapper", "Tempest", "Druid", "Firebrand", "Tempest", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0202, 0.037, 0.0391, 0.0, 0.1719, 0.0237, 0.019], [0.0559, 0.0, 0.3125, 0.0521, 0.0886], [0.0679, 0.0726, 0.0, 0.0938, 0.0095, 0.019], [0.0, 0.017, 0.0051, 0.0421, 0.0208, 0.0174, 0.0606, 0.0144, 0.0335, 0.0, 0.0156, 0.0142, 0.019], [0.0, 0.0425, 0.0153, 0.0, 0.0226, 0.0335, 0.0, 0.0312, 0.0142, 0.0253], [0.0226, 0.0233, 0.1919, 0.0535, 0.0223, 0.0, 0.0938, 0.0, 0.0253], [0.0, 0.0308, 0.0358, 0.0421, 0.0566], [0.0, 0.0287, 0.0384, 0.0187, 0.0302, 0.0087, 0.1818], [0.0208, 0.0029, 0.2121, 0.0617, 0.0559, 0.0, 0.2031, 0.0, 0.019], [0.0, 0.0489, 0.0818, 0.0701], [0.0087, 0.1919, 0.0638, 0.0391, 0.0, 0.1406, 0.0047, 0.1456], [0.0, 0.017, 0.0153, 0.0421, 0.0453, 0.0, 0.1414, 0.0329, 0.0056, 0.0, 0.125, 0.0047, 0.0127], [0.0, 0.0616, 0.0358, 0.0654, 0.0415], [0.0, 0.0266, 0.0281, 0.0607, 0.0264, 0.0203, 0.1616, 0.0123, 0.0223, 0.0, 0.1406, 0.0047, 0.0316], [0.0717, 0.0029, 0.1919, 0.0432, 0.0726, 0.0625, 0.0781, 0.0095, 0.0696], [0.017, 0.0153, 0.0234, 0.0473, 0.1341, 0.0, 0.375, 0.0047, 0.0886], [0.0245, 0.0116, 0.3333, 0.0638, 0.0112, 0.0, 0.1875, 0.019, 0.0886], [0.0, 0.0159, 0.0051, 0.0607, 0.0585, 0.0262, 0.1111, 0.0412, 0.0279, 0.0, 0.0156, 0.0047, 0.0443], [0.0, 0.034, 0.0179, 0.0935, 0.0491, 0.0378, 0.1818], [0.0128, 0.0358, 0.028, 0.0208, 0.0058, 0.2525, 0.0597, 0.0391, 0.0, 0.1094, 0.0095, 0.0443], [0.0, 0.0298, 0.0205, 0.0888, 0.0434, 0.0116, 0.1818, 0.0329, 0.0112, 0.0, 0.0, 0.0142, 0.0253], [0.0, 0.0563, 0.0153, 0.0888, 0.0358, 0.0058, 0.1212, 0.0165, 0.0056, 0.0, 0.0469, 0.0047, 0.0127], [0.0, 0.0531, 0.0153, 0.1495, 0.0755], [0.0, 0.0372, 0.0102, 0.0841, 0.0472, 0.0, 0.202, 0.037, 0.0112, 0.0, 0.0469, 0.0095, 0.0127], [0.0, 0.0414, 0.0435, 0.0514, 0.0736, 0.0, 0.2323], [0.0, 0.0213, 0.0102, 0.0748, 0.083, 0.0145, 0.1111, 0.0432, 0.0112, 0.0, 0.0156, 0.0237, 0.0253], [0.0, 0.0234, 0.0179, 0.0607, 0.0642, 0.0058, 0.0909, 0.0576, 0.0615, 0.0, 0.0625, 0.0237, 0.0443], [0.0, 0.0266, 0.0307, 0.0748, 0.0679, 0.0058, 0.2222, 0.0267, 0.0335, 0.0, 0.0625, 0.0237, 0.019], [0.0, 0.0329, 0.0205, 0.0607, 0.0717, 0.0145, 0.2222, 0.0288, 0.0168, 0.0, 0.0312, 0.0095, 0.0443], [0.0, 0.0383, 0.0307, 0.0841, 0.0151, 0.0087, 0.1414, 0.0658, 0.0838, 0.0, 0.1562], [0.0, 0.034, 0.0281, 0.1262, 0.0509, 0.0029, 0.2424, 0.0247, 0.0056, 0.0, 0.0312, 0.0, 0.0696], [0.0, 0.0308, 0.0409, 0.1075, 0.0774, 0.0349, 0.1313, 0.0185, 0.0056, 0.0, 0.0469, 0.0047, 0.0316], [0.0, 0.0489, 0.0102, 0.1121, 0.0283, 0.0, 0.2525, 0.0329, 0.0838, 0.0, 0.0156, 0.019, 0.0316], [0.0, 0.0383, 0.0205, 0.0654, 0.0509, 0.0174, 0.2727, 0.0473, 0.0223, 0.0, 0.0938, 0.0095, 0.0253], [0.0, 0.0329, 0.0409, 0.0607, 0.066, 0.0174, 0.1313, 0.0658, 0.0112, 0.0312, 0.0047, 0.0506], [0.0, 0.0372, 0.0281, 0.1308, 0.0491, 0.0058, 0.1212, 0.0576, 0.0112, 0.0, 0.1562, 0.0142, 0.0443], [0.0, 0.0383, 0.0077, 0.0561, 0.0811, 0.0058, 0.1616, 0.07, 0.0279, 0.0, 0.0, 0.0095, 0.0823], [0.0, 0.0266, 0.023, 0.1308, 0.083, 0.0291, 0.1919, 0.0288, 0.0279, 0.0, 0.0625, 0.0427, 0.0443], [0.0, 0.0287, 0.0281, 0.1355, 0.0717, 0.032, 0.2121, 0.0206, 0.0503, 0.0, 0.0781, 0.019, 0.057], [0.0, 0.0234, 0.0307, 0.1075, 0.0925, 0.0203, 0.1616, 0.0617, 0.0335, 0.0, 0.1094, 0.0, 0.019], [0.0, 0.0361, 0.0205, 0.1589, 0.0528, 0.0203, 0.2525, 0.0514, 0.0112, 0.0, 0.0781, 0.0237, 0.0443], [0.0, 0.0537, 0.0374, 0.0736, 0.0029, 0.2828, 0.0926, 0.0335, 0.0, 0.4531, 0.0, 0.019], [0.0, 0.0446, 0.0153, 0.1121, 0.0811, 0.0203, 0.1111, 0.0617, 0.0223, 0.0, 0.1875, 0.0237, 0.019], [0.0, 0.0266, 0.0281, 0.1168, 0.0887, 0.0262, 0.1616, 0.0617, 0.0447, 0.0, 0.0781, 0.0047, 0.0696], [0.0, 0.034, 0.0307, 0.014, 0.0755, 0.0349, 0.2222, 0.0947, 0.1229], [0.0, 0.0563, 0.0051, 0.0888, 0.0981, 0.0029, 0.2929, 0.037, 0.0279, 0.0, 0.3281, 0.0, 0.0443], [0.0, 0.0468, 0.0384, 0.1542, 0.083, 0.0058, 0.3434, 0.0453, 0.0503, 0.0, 0.0312, 0.0047, 0.0443], [0.0, 0.0542, 0.0077, 0.2804, 0.0755, 0.0, 0.2222, 0.072, 0.0447, 0.0, 0.0625, 0.0237, 0.0633], [0.0, 0.0489, 0.0665, 0.0841, 0.0887, 0.0203, 0.2525, 0.0576, 0.067, 0.0, 0.2656, 0.0379, 0.0253], [0.0, 0.0606, 0.0537, 0.1869, 0.0755, 0.0058, 0.0808, 0.0617, 0.0335, 0.0, 0.5, 0.0142, 0.1709]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

