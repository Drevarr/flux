created: 20230129012318000
creator: Drevarr
modified: 20230705163518324
modifier: drevarr
tags: ChartData
title: 202301290123_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Palatine Of Ruin", "Cpt Z Brannigan", "\u00c2 R K", "Venomina The Fierce", "Belvyn Brightblade", "Aronorf Xideliesi", "Drevarr Moonwillow", "Zaylen Harker", "Bubble Teabringer", "Bella Lunabringer", "Koralia Danai"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[437.1094, 276.3724, 180.7394], [70.9716, 62.7843, 40.2408, 38.312, 112.9837, 0.0, 233.6681, 283.7657, 9.3996, 37.152, 31.0355, 137.7852, 64.6602, 29.8224], [409.9754, 221.2808, 524.7785], [49.2082, 104.3419, 257.5807, 362.5828, 13.9822, 75.36, 45.9934, 163.3156, 166.45, 28.4098], [87.7649, 248.7351, 227.6667, 221.3295, 280.9607, 310.7777, 399.3671], [15.5652, 52.8933, 40.1193, 81.5898, 209.797, 192.7535, 195.5898, 659.1427, 0.0, 119.952, 0.0, 0.0, 170.1068, 21.9772, 20.7646, 105.0847], [98.8176, 188.5413, 33.0237, 127.7752, 338.2541, 36.6282, 305.0161, 370.9111, 38.3806, 18.336, 0.0, 13.0134, 0.0, 140.6146, 107.8225, 119.9567], [920.2168, 53.6139, 154.704, 177.9159, 431.7138, 268.7731, 390.2418], [162.7349, 73.0521, 103.8339, 202.032, 437.9948, 204.0714, 714.0002, 981.0496, 177.7642, 85.344, 355.8892, 486.0646, 253.0747, 167.908], [83.5094, 466.4313, 65.8773, 139.225, 702.6457, 541.3609, 1215.126, 1017.0182, 35.0962, 60.048, 141.1258, 67.2038, 332.7489, 919.4892, 477.2856, 361.832], [450.077, 647.0127, 214.326, 200.977, 712.6825, 369.034, 1512.2146, 1446.8309, 180.0633, 70.248, 55.6195, 303.9528, 957.1926, 388.1279, 511.1795]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

