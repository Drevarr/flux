created: 20230215221053000
creator: Drevarr
modified: 20230705163519295
modifier: drevarr
tags: ChartData
title: 202302152210_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "K\u00e2 \u00d4tik R\u00e6j", "Tribal S", "Etchery Howls", "Sassy Daddy Demon", "Xyntharos", "Johosh The Great", "Rozaalyna", "Lord Erin The Wise", "Jeckyll Mbs", "Ravioli Fetabringer", "Ark Darkness", "Smol Daddy Tika", "Sygaldry Verdandi", "Nekro Atsume", "Sp\u00edcy Cheese", "Dark Sidiuz", "Kosair", "Legacy Of Mathus", "Lord Charrior", "Smol Gluvs", "Be\u00eb", "Rina Of Theros", "Daring Deathblade", "Xanvias Tseli", "Kosair"];
const professions = ["Scrapper", "Berserker", "Druid", "Druid", "Vindicator", "Vindicator", "Firebrand", "Scourge", "Weaver", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Scourge", "Berserker", "Scourge", "Dragonhunter", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Guardian"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.8788, 9.7727, 14.5591, 3.252, 5.5773, 7.3143, 21.2083, 1.178, 46.9111, 26.0846, 21.2131, 4.4524, 7.1338, 2.6887, 0.0, 8.2015, 33.42, 1.8333, 0.0, 16.96, 1.8647, 0.0, 5.4685, 26.2051], [1.7636, 22.8048, 73.2292, 35.8898, 6.2889, 26.9769, 21.082, 2.2381, 29.4859, 19.1391, 17.9701, 27.58, 0.0, 64.3377, 4.3846, 13.9009, 0.0, 92.6923], [13.9577, 16.406, 2.5914, 5.3455, 5.4591, 10.1381, 1.0, 13.7797, 0.0, 0.9154, 0.8033, 3.2381, 2.9507, 6.0728, 0.0, 2.4328, 4.36, 1.0, 19.2727, 34.2, 5.8271, 3.6923, 1.009, 3.8182, 17.3077], [0.1241, 4.6594, 8.6129, 25.8008, 35.6136, 52.1476, 0.3125, 33.6017, 36.7556, 20.1538, 11.9508, 4.8333, 5.3803, 9.0662, 0.0, 9.1567, 15.64, 0.0, 0.0, 0.0, 17.203, 0.0, 0.0, 9.2308], [7.6672, 21.9069, 0.0, 6.5691, 25.5682, 10.9286, 1.5833, 3.2373, 0.0, 3.0615, 28.0656, 0.0, 9.0704, 20.0397, 0.0, 3.1791, 2.92, 13.5, 12.6623, 0.0, 37.4962, 1.7692, 0.8018, 0.0, 30.3846], [26.1109, 28.0419, 3.8602, 7.9919, 11.4, 6.1952, 0.0, 21.4915, 3.9778, 8.1462, 58.918, 0.0, 2.8421, 0.0, 0.0, 0.0, 19.2308], [25.965, 14.0092, 0.0, 8.935, 8.4773, 21.2048, 20.0208, 33.2542, 0.0, 40.6692, 0.0, 0.0, 8.0634, 0.0, 29.1119, 10.14, 0.0, 5.3247, 0.0, 30.5489, 0.0, 28.1622, 0.0, 51.4359], [24.7489, 48.1711, 1.4301, 10.7276], [40.6584, 5.38, 0.4194, 6.3943, 23.1409, 34.3762, 100.5208, 54.2966, 0.0, 11.8769, 119.6393, 3.2381, 9.338, 11.4967, 0.0, 33.5821, 0.0, 5.8333, 0.0, 20.48, 58.7669], [25.0467, 42.5185, 2.7204, 0.4268, 3.3727, 9.1714, 0.0, 10.7119, 0.0, 0.0, 3.541, 0.4286, 2.0704, 22.404, 55.3284, 39.0376, 0.0, 0.0, 3.0256], [39.0964, 14.4438, 137.129, 4.6992, 0.0, 19.9667, 35.0417, 5.8475, 0.0, 9.1385, 27.6066, 34.0476, 0.0, 25.2914, 0.1176, 42.597, 0.0, 0.0, 43.8831, 0.0, 6.812, 86.6923, 31.5225, 2.0256], [20.2131, 33.9203, 17.7204, 3.687, 3.2682, 37.3476, 0.0, 62.1186, 0.0, 47.6308, 59.2951, 0.0, 4.1408, 9.0795, 0.0, 18.2164, 71.22, 0.0, 22.2078, 0.0, 7.0301, 0.0, 0.0, 10.1282], [15.8949, 32.969, 10.4086, 1.9065, 0.0, 52.7714, 33.7083, 30.3051, 0.0, 8.7692, 53.3934, 0.0, 13.5915, 19.702, 0.0, 57.1567, 4.22, 0.0, 37.2338, 20.32, 41.6692, 11.4685, 0.0, 79.1538], [15.4248, 42.4413, 14.8925, 5.9431, 17.4773, 75.5619, 104.3958, 27.6864, 0.0, 9.2, 0.0, 72.9286, 11.2746, 0.0, 0.0, 3.5, 0.0, 0.0, 0.0, 67.76, 5.4962, 0.0, 4.2973, 7.3077], [44.9545, 40.6667, 92.5417, 101.1695, 0.0, 103.7385, 101.4426, 2.4524, 4.3803, 72.7483, 0.0, 33.8731, 39.86, 5.4444, 44.1429, 55.56, 67.7293, 74.0769, 42.4595, 226.359], [1.6577, 2.0, 26.5854, 52.7909, 63.381, 47.9583, 52.2881, 6.9111, 33.8923, 65.0164, 7.3333, 47.9366, 36.3179, 26.4118, 116.4925, 14.82, 2.75, 28.4286, 84.84, 69.4211, 0.0, 37.2432, 0.0, 300.4359], [23.5591, 50.2576, 10.7957, 24.9187, 19.9636, 45.6143, 218.0625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 56.9868, 85.8433, 12.14, 3.3056, 44.7662, 110.2, 77.1729, 2.7692, 34.6937, 9.5758, 50.5385], [48.5737, 101.4564, 31.9583, 22.3305], [42.8058, 51.5285, 0.0, 66.6748, 8.8455, 29.1095, 0.0, 0.0593, 0.4, 0.0, 166.6066, 3.9524, 41.8169, 4.0066, 5.9776, 13.34, 0.0, 12.6104, 0.0, 116.7594, 0.0, 29.6577, 0.0, 152.6667], [100.6102, 0.5556, 118.3615, 292.082, 4.4524, 0.0, 99.9007, 0.0, 271.4776, 18.22, 6.2778, 209.8961, 375.04, 205.6015, 0.6923, 98.6216, 0.0, 441.1026], [54.8423, 58.7324, 4.6559, 34.8943, 30.4182, 21.019, 99.0, 87.1949, 0.0, 60.1154, 87.4098, 25.0952, 15.5775, 24.404, 15.3657, 25.9, 0.0, 20.7532, 48.4, 135.9474, 0.0, 9.6306, 0.0, 71.7436], [7.1141, 3.5376, 37.3821, 24.4864, 59.281, 292.5625, 162.5169, 0.0, 180.6, 109.2787, 8.6905, 103.0845, 51.9272, 147.8433, 58.58, 0.0, 96.4805, 834.84, 213.1805, 37.8739, 20.8788, 142.5641], [35.4803, 27.0654, 44.1183, 48.1585, 38.7091, 62.5619, 69.75, 139.1695, 9.0, 144.5615, 161.7213, 31.8571, 91.0, 21.6026, 11.5882, 114.5299, 128.78, 9.2222, 38.5844, 49.0, 131.5714, 31.2564, 42.8919, 28.7879, 343.1795], [199.3475, 142.3333, 351.4769, 505.1311, 168.0238, 134.4225, 194.6093, 0.0, 84.0299, 38.3, 8.25, 144.3506, 31.92, 372.0752, 128.3846, 267.0631, 202.303, 336.0256], [66.7504, 83.2475, 16.9355, 24.9268, 94.8773, 63.519, 0.0, 102.8983, 0.0, 13.6692, 254.1803, 3.3333, 105.0845, 26.3576, 224.1791, 4.72, 0.0, 227.6623, 129.04, 231.4511, 0.0, 109.1712, 20.1515, 301.9744], [553.5376, 547.2033, 352.7182, 509.7762]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

