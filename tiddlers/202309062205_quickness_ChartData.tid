created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Belvyn Brightblade", "Venomina The Fierce", "Bella Sassy", "Jmbrage Gaurdian", "Sygaldry Verdandi", "Crusader Siolith", "Koralia Danai", "Solus Luxes"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[39.1442, 196.1305, 49.9565, 20.8893, 209.6964, 6.8229, 3.4503, 263.6251, 167.6059, 10.8344, 318.9532, 4.9453], [52.7904, 133.1112, 126.7603, 60.4581, 211.3868, 8.5842, 13.8338, 207.3456, 136.6315, 0.0, 12.2264, 458.5927], [55.7287, 156.8094, 94.0224, 38.1793, 139.0036, 0.0, 25.0635, 247.4208, 123.7255, 9.433, 2.204, 174.4627, 3.6936, 23.9568, 94.6099, 87.4317, 25.1392, 18.7229, 38.1383, 42.1662, 24.5549, 12.5462, 9.8196, 9.4343, 29.4745, 21.9328, 41.8246, 24.8968, 69.516], [403.7141, 287.0294, 13.717, 540.7133, 23.4851, 0.0, 161.92, 170.1597, 150.9274, 83.5072, 26.1533, 58.293, 63.118, 46.4628, 2.7701, 8.447, 30.3828, 15.8882, 55.7738, 35.1072, 9.9677, 31.8397, 152.136], [60.9137, 341.0928, 20.3148, 13.8446, 525.5078, 367.3048, 0.0, 638.4263, 11.5344, 140.2816, 167.1117, 134.0851, 82.2272, 46.5091], [57.9768, 232.1264, 154.4384, 98.8196, 290.4552, 7.9515, 408.2443, 272.6608, 417.5325, 10.017, 127.6224, 101.8845, 93.4374, 48.9472, 26.4125, 14.7691, 13.9574, 50.148, 29.2684, 58.4936, 71.6128, 68.6049, 39.9355, 100.368], [60.777, 193.1748, 138.8813, 85.4478, 204.6249, 21.9051, 44.3982, 374.9645, 244.8698, 0.0, 17.4812, 511.7805, 37.7568, 125.9664, 149.9616, 139.0464, 67.7888, 24.7536, 37.876, 69.9899, 64.728, 41.4955, 23.9904, 36.2376, 45.1614, 68.9795, 84.78], [85.3087, 248.9633, 155.7222, 83.2381, 239.2798, 0.0, 33.9388, 501.1142, 326.7799, 18.1601, 1.9952, 667.359, 18.8168, 100.5376, 141.671, 142.0058, 101.6576, 12.4589, 85.085, 72.2973, 60.0594, 26.0443, 25.7981, 21.4956, 69.828, 77.6186, 49.0829, 37.471, 102.384], [83.1987, 302.9044, 185.9302, 91.2567, 294.7582, 31.8915, 491.7053, 390.5356, 0.0, 604.6425, 31.3135, 24.6294, 132.2592, 148.5798, 167.8566, 75.9552, 50.3798, 64.6, 81.9447, 69.006, 32.6424, 30.9994, 12.054, 15.3364, 76.874, 47.104, 53.8315, 21.73, 116.496]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

