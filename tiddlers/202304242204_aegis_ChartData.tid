created: 20230424220408000
creator: Drevarr
modified: 20230705163526486
modifier: drevarr
tags: ChartData
title: 202304242204_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Rudjulin", "Fribble Bibble", "Sub Train", "Drevarr Moonwillow", "Gavann", "Sygaldry Verdandi", "Zaylen Harker", "Kiloak", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.7677, 7.0331, 9.577, 19.4458, 10.3944, 14.3693, 44.2764, 23.9007, 67.26], [153.3622, 0.0, 14.7345, 19.3651, 21.7459, 0.0, 0.0, 15.7594, 18.3691, 1.2863, 38.4111, 17.7919, 64.86], [164.4856, 0.0, 49.3838, 29.94, 21.3696, 39.3089, 46.103, 37.5091, 42.9749, 30.3555], [181.0526, 33.026, 20.4422, 28.3783, 21.5309, 0.0, 15.0614, 30.4435, 11.8939, 21.3885, 29.7234, 30.7349, 46.68], [385.0621, 0.0, 0.0, 30.9389, 12.8258, 0.0, 49.3056, 33.9778, 8.7832, 73.7352, 9.2777, 0.0], [387.4288, 10.535, 46.4059, 16.8217, 37.7395, 0.0, 0.3619, 10.2298, 25.6622, 26.5335, 30.9582, 99.4207, 76.86], [279.2706, 0.0, 46.7161, 36.5438, 43.0886, 13.4801, 13.3632, 33.6998, 132.9461, 29.547, 30.4731, 53.5665, 66.9], [430.2661, 46.7705, 49.57, 31.5017, 29.0573, 245.2426, 65.1264, 33.5688, 29.8043, 144.6039, 28.6732, 69.78], [571.0847, 0.0, 53.2924, 48.145, 72.6029, 38.3684, 68.375, 44.0218, 19.187, 28.4078, 74.6613, 119.0452, 94.2], [542.6843, 0.0, 59.4343, 68.6702, 64.0819, 0.0, 72.7738, 75.6019, 119.5186, 64.5697, 47.3634, 109.882, 77.16], [718.2935, 106.183, 136.457, 109.5867, 46.825, 89.1129, 65.4797, 71.3933, 42.4637, 72.3607, 57.1095, 85.2941, 171.72]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

