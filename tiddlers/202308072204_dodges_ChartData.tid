created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00f9gly", "Bella Sassy", "Cedryn X", "Masky De Googlieyes", "Zaylen Harker", "Kisumaiassu", "Lucky Luprac\u00e1n", "Jmbrage Rev", "Daphne Agla\u00e9", "Morton Saltbringer", "Xanvias Einzbern", "Oo Dads Mad", "Jimbo One Eye", "Tootsie Pop Rocks", "Jimbo The Pleb", "Legacy Of Mathus", "Luke The Ghastly", "Tribal S", "Arriasa", "Rina Of Theros", "Keypek The Drunk", "\u00c1rk\u00e1ntor", "Be\u00eb", "Mort\u00e4rion", "Sub Train", "Belvyn Brightblade", "Blancooo Padreee", "Drevarr Moonwillow", "Black Raspberry Pie", "Zaedy Zae", "Amiti\u00e9l", "Tegan Parker", "Lord Erin The Wise", "Necrotic Windrunner", "Xenryeth", "Newtype Khan", "Koralia Danai", "Rockdemon", "Ryvalia Fazebringer", "Klengah", "Rahani Sunray", "Mike The Archmagus", "Arcanophage Farra", "Venomina The Sly", "K\u00e2 \u00d4tik R\u00e6j", "Eibh\u00ebar", "Solus Sanctus", "Glorious Gluvs", "Inedible Plant", "Mistwalker Cael"];
const professions = ["Tempest", "Firebrand", "Berserker", "Mirage", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Scourge", "Chronomancer", "Berserker", "Berserker", "Scrapper", "Scrapper", "Berserker", "Berserker", "Scourge", "Druid", "Druid", "Scourge", "Scrapper", "Scourge", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Chronomancer", "Druid", "Firebrand", "Tempest", "Weaver", "Scourge", "Tempest", "Spellbreaker", "Firebrand", "Daredevil", "Chronomancer", "Druid", "Chronomancer", "Weaver", "Spellbreaker", "Druid", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 11, 3, 5], [1, 0, 1, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 5, 0, 1, 0, 0, 1, 2], [2, 2, 0, 0, 0, 0, 1, 3, 0, 0, 3, 0, 1, 3, 2, 0, 0, 0, 1, 2, 1], [0, 0, 4, 11, 4, 2], [0, 2, 0, 3, 0, 0, 3, 4, 0, 0, 2, 0, 1, 0, 3, 1, 0, 1, 0, 3], [1, 1, 2, 1, 0, 0, 4, 3, 1, 1, 0, 1, 0, 4, 0, 1, 0, 0, 2, 1], [1, 0, 1, 2, 7, 1, 0, 2, 0, 0, 1, 1, 1, 2, 3, 1], [13, 0, 4, 7, 0], [0, 0, 5, 1, 0, 2, 4, 1, 0, 0, 1, 0, 1, 2, 4, 2, 0, 0, 4], [2, 1, 2, 1, 0, 0, 0, 7, 2, 0, 0, 4, 1, 1, 1, 0, 3, 3], [0, 0, 4, 0, 0, 1, 3, 1, 2, 2, 5, 0, 1, 0, 2, 4, 0, 1, 2], [0, 1, 5, 4, 0, 1, 0, 12, 3, 3], [1, 0, 6, 3, 0, 1, 4, 6, 1, 3, 4], [0, 2, 4, 1, 0, 0, 2, 5, 1, 2, 3, 1, 1, 2, 2, 0, 1, 0, 3], [1, 0, 7, 4, 3, 6, 0, 4, 5], [0, 0, 0, 1, 8, 1, 4, 2, 1, 2, 1, 6, 3, 1, 3], [1, 2, 4, 0, 6, 4, 0, 6, 1, 2, 7], [2, 0, 1, 2, 0, 1, 3, 4, 0, 3, 5, 0, 0, 2, 3, 3, 1, 1, 0, 0, 5], [0, 1, 4, 1, 0, 1, 1, 3, 3, 2, 5, 0, 2, 2, 2, 3, 1, 2, 3, 1], [0, 0, 4, 1, 0, 1, 2, 5, 5, 1, 7, 0, 2, 3, 0, 3, 0, 2, 2], [0, 0, 2, 3, 0, 1, 4, 5, 2, 0, 2, 0, 0, 4, 6, 1, 1, 0, 0, 3, 4], [0, 1, 3, 1, 0, 1, 0, 6, 1, 5, 2, 1, 3, 2, 2, 2, 0, 3, 6], [0, 2, 0, 4, 0, 0, 3, 2, 1, 3, 6, 0, 0, 3, 1, 4, 4, 6], [0, 2, 1, 8, 0, 1, 5, 9, 2, 3, 3, 0, 2, 3], [0, 1, 2, 1, 0, 0, 1, 8, 1, 3, 1, 0, 2, 5, 4, 3, 4, 2, 0, 2, 4], [0, 3, 4, 1, 3, 6, 16, 5, 7], [0, 0, 4, 2, 0, 1, 1, 5, 2, 5, 5, 1, 1, 6, 1, 1, 4, 1, 3, 4], [1, 2, 2, 3, 0, 0, 0, 14, 1, 1, 5, 0, 1, 3, 6, 3, 1, 4, 0, 1, 3], [1, 1, 2, 4, 0, 0, 2, 14, 2, 3, 3, 0, 0, 4, 2, 3, 2, 1, 4, 3], [2, 0, 2, 1, 0, 1, 3, 9, 1, 4, 7, 0, 1, 4, 4, 5, 0, 2, 0, 2, 4], [4, 2, 7, 8, 4, 4, 5, 3, 3, 4, 0, 4, 5], [2, 1, 8, 5, 1, 0, 3, 16, 3, 2, 0, 3, 2, 1, 3, 3, 1], [4, 0, 0, 6, 0, 0, 2, 8, 1, 2, 5, 2, 4, 1, 4, 2, 4, 3, 6, 2], [1, 2, 4, 8, 0, 1, 5, 10, 3, 0, 5, 0, 3, 2, 2, 5, 1, 2, 2], [4, 0, 11, 8, 1, 2, 5, 8, 1, 2, 5, 3, 2, 1, 0, 1, 3, 3, 1], [6, 4, 12, 5, 2, 4, 2, 7, 1, 2, 0, 1, 4, 1, 7, 1, 1, 1, 2, 2], [3, 0, 2, 4, 0, 2, 4, 10, 1, 4, 8, 0, 2, 2, 4, 2, 3, 4, 0, 5, 5], [10, 7, 8, 11, 8, 0, 9, 0, 5, 8], [3, 3, 2, 7, 0, 1, 4, 8, 3, 7, 8, 3, 6, 1, 3, 2, 3, 3, 4], [3, 1, 5, 4, 1, 1, 5, 18, 4, 6, 5, 1, 3, 3, 3, 0, 0, 2, 1, 5], [0, 4, 7, 17, 4, 5, 2, 5, 5, 2, 3, 4, 5, 0, 2, 7], [6, 1, 8, 7, 2, 3, 3, 11, 2, 7, 6, 1, 2, 0, 3, 3, 4, 3, 1, 4], [3, 9, 4, 1, 2, 4, 15, 3, 5, 4, 1, 3, 6, 5, 1, 3, 5, 1, 4, 2], [3, 0, 2, 7, 0, 0, 5, 13, 2, 7, 7, 0, 3, 7, 5, 4, 1, 8, 1, 8, 7], [3, 0, 4, 10, 0, 3, 7, 12, 4, 7, 9, 1, 3, 6, 3, 5, 7, 0, 6, 6], [1, 2, 5, 10, 2, 0, 6, 15, 3, 6, 7, 2, 4, 6, 5, 6, 4, 2, 1, 7, 7], [6, 5, 9, 7, 0, 2, 6, 17, 3, 5, 8, 1, 5, 7, 4, 5, 5, 4, 0, 6, 4], [2, 2, 11, 9, 2, 5, 7, 17, 3, 3, 8, 3, 5, 4, 5, 3, 4, 7, 2, 6, 9], [10, 2, 12, 14, 3, 6, 10, 16, 2, 4, 10, 0, 5, 7, 4, 3, 1, 8, 5, 3], [6, 4, 11, 3, 2, 4, 9, 18, 3, 10, 12, 1, 5, 4, 6, 6, 5, 7, 5, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

