created: 20230208220141000
creator: Drevarr
modified: 20230705163518901
modifier: drevarr
tags: ChartData
title: 202302082201_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Koralia Danai", "Gabe Malhorn", "Blanco Padre Guard", "Arka\u00f1", "Stoic Rapidfire", "Zaylen Harker", "Mac Aaroni", "Etchery Howls", "Johosh The Great", "Stabby Beech", "Drevarr Moonwillow", "Whose Guardian", "Bella Sassy", "\u00c9\u00efbhear", "Veron Blackburn", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Tempest", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Herald", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[46.6214, 0.0, 14.9048, 4.4355, 5.221, 5.1587, 9.9792, 55.9416, 10.018, 5.2483, 63.84], [58.8902, 11.9659, 20.2439, 2.2481, 4.002, 4.2606, 18.6278, 43.2432, 2.28, 0.852, 58.8525], [29.476, 4.4051, 5.52, 5.1127, 19.9584, 90.6048, 7.1854, 2.2834, 93.765], [47.0304, 17.6928, 45.6043, 12.8204, 11.155, 4.7211, 31.9334, 57.3144, 1.9345, 0.6475, 30.59], [69.1142, 0.0, 22.1348, 8.6279, 4.761, 4.7211, 13.7214, 76.5336, 9.2581, 8.9971, 50.8725], [57.2544, 4.2835, 25.4717, 5.3165, 0.0, 0.0, 12.1414, 82.368, 8.6362, 11.1782, 80.1325], [81.792, 9.5448, 14.2374, 9.1444, 4.416, 4.0993, 28.607, 68.2968, 13.3344, 6.5093, 89.4425], [49.8931, 30.4968, 39.153, 9.6001, 6.118, 4.3296, 7.7339, 135.2208, 10.018, 2.0448, 80.465], [346.3891, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.1896, 12.6435, 6.0662, 10.64], [103.4669, 19.4621, 42.7123, 5.7114, 5.474, 12.298, 18.9605, 89.5752, 4.7672, 1.5336, 102.7425], [111.6461, 10.3829, 42.0449, 5.2861, 4.0763, 16.2162, 95.4096, 17.9634, 5.9299, 102.0775], [126.3686, 5.2147, 32.0342, 7.352, 3.335, 5.389, 15.9667, 113.5992, 18.5852, 9.9854, 101.08], [136.5926, 10.2432, 20.6888, 16.7394, 1.725, 4.7211, 15.6341, 122.1792, 17.8943, 11.7235, 95.4275], [123.5059, 15.7373, 47.384, 9.1444, 2.162, 7.2545, 27.526, 122.1792, 19.8979, 2.8968, 119.3675], [151.7242, 9.0792, 26.584, 16.4963, 2.576, 7.7151, 13.1393, 128.7, 23.5597, 13.2571, 138.985], [329.2128, 51.4022, 112.1198, 36.7902, 18.216, 21.6021], [514.4717, 50.471, 142.5969, 41.3776, 0.0, 34.6141, 67.027, 543.972, 80.4899, 52.1765, 235.0775], [675.193, 7.403, 148.492, 41.9244, 12.857, 28.9948, 131.476, 526.812, 100.2496, 54.971, 454.86]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

