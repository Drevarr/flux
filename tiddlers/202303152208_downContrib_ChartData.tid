created: 20230315220824000
creator: Drevarr
modified: 20230705163522182
modifier: drevarr
tags: ChartData
title: 202303152208_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Nelliel T", "Etcheriii", "Ace Hammers", "Arcanophage Farra", "Dark Sidiuz", "Smol Gluvs", "Panther B Me", "Lord Erin The Wise", "Seren Nightroad", "Rina Of Theros", "Nazhul Naxxremis", "Sp\u00edcy Cheese", "Elonith Requiem", "Smol Daddy Tika", "Be\u00eb", "K\u00f4sair", "Xyntharos", "Cerys Fireblade", "Demon Sekhmet", "Mistwalker Caelon", "Sofya De Nova", "Fruji", "Xanvias Tseli"];
const professions = ["Reaper", "Herald", "Vindicator", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Weaver", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Berserker", "Scourge", "Berserker", "Vindicator", "Berserker", "Berserker", "Vindicator", "Weaver", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7816.0, 2235.0, 13547.0, 0.0, 41911.0, 0.0, 568.0, 9952.0, 0.0, 5748.0, 5816.0, 0.0, 19560.0, 0.0, 2541.0, 0.0, 0.0, 7278.0, 0.0, 7066.0, 7207.0, 0.0, 0.0], [4115.0, 31985.0, 0.0, 40270.0, 0.0, 29.0, 43969.0, 0.0, 9622.0, 12374.0], [16024.0, 62648.0, 47855.0, 0.0, 12229.0, 3168.0, 8301.0, 19336.0], [2672.0, 28018.0, 18919.0, 14447.0, 0.0, 0.0, 18342.0, 0.0, 17907.0, 27988.0, 0.0, 5490.0, 0.0, 3558.0, 0.0, 0.0, 2112.0, 1587.0, 11173.0, 0.0, 35939.0], [4941.0, 16013.0, 15279.0, 0.0, 43504.0, 423.0, 546.0, 31452.0, 0.0, 32407.0, 40822.0, 0.0, 2996.0], [2840.0, 36228.0, 18151.0, 0.0, 23385.0, 0.0, 2604.0, 32200.0, 1709.0, 17573.0, 15956.0, 0.0, 9988.0, 0.0, 0.0, 157.0, 3810.0, 0.0, 2133.0, 10728.0, 0.0, 174.0, 13912.0], [6757.0, 16617.0, 35071.0, 0.0, 43841.0, 0.0, 6601.0, 31449.0, 1784.0, 21821.0, 11212.0, 2478.0, 8247.0, 0.0, 12367.0, 540.0, 0.0, 15045.0, 0.0, 2489.0, 14245.0, 0.0, 1019.0, 33285.0], [13019.0, 46391.0, 26612.0, 0.0, 69230.0, 1230.0, 649.0, 10307.0, 21422.0, 19396.0, 1275.0, 4446.0, 0.0, 2227.0, 14238.0, 0.0, 10529.0, 0.0, 6359.0, 27687.0, 0.0], [16140.0, 38494.0, 22432.0, 0.0, 26108.0, 436.0, 0.0, 38260.0, 0.0, 35963.0, 21450.0, 0.0, 18957.0, 0.0, 360.0, 3829.0, 0.0, 11271.0, 4808.0, 653.0, 26734.0, 0.0, 0.0, 30460.0], [5506.0, 37392.0, 51372.0, 0.0, 40048.0, 1703.0, 1109.0, 63110.0, 0.0, 19597.0, 34922.0, 0.0, 13745.0, 0.0, 2778.0, 1171.0, 0.0, 10750.0, 0.0, 364.0, 35857.0, 2024.0, 23916.0], [2763.0, 46083.0, 38611.0, 0.0, 34568.0, 342.0, 0.0, 30075.0, 2659.0, 31484.0, 49989.0, 0.0, 37564.0, 0.0, 0.0, 0.0, 11460.0, 0.0, 4640.0, 28064.0, 0.0, 32279.0], [3651.0, 76388.0, 53738.0, 4847.0, 612.0, 1589.0, 6180.0, 2035.0, 41131.0, 42029.0, 0.0, 14800.0, 4865.0, 0.0, 0.0, 12365.0, 0.0, 11695.0, 37071.0, 0.0, 0.0, 38193.0], [15180.0, 15765.0, 32683.0, 58018.0, 434.0, 1239.0, 101540.0, 1951.0, 18038.0, 49906.0, 6945.0, 0.0, 0.0, 13787.0, 0.0, 9992.0, 0.0, 6313.0, 3609.0, 0.0, 28121.0], [15932.0, 62427.0, 110117.0, 0.0, 101684.0, 479.0, 2223.0, 59376.0, 4370.0, 9171.0, 42741.0, 0.0, 13537.0, 0.0, 1883.0, 0.0, 0.0, 5532.0, 0.0, 1970.0, 32345.0, 2534.0, 12785.0], [21543.0, 55044.0, 47348.0, 0.0, 65354.0, 478.0, 1273.0, 61749.0, 3093.0, 36784.0, 32915.0, 886.0, 33093.0, 0.0, 8671.0, 7408.0, 9035.0, 21921.0, 0.0, 5384.0, 25084.0, 0.0, 858.0, 52969.0], [30773.0, 80593.0, 62805.0, 0.0, 66594.0, 0.0, 0.0, 76141.0, 0.0, 65530.0, 60885.0, 0.0, 41441.0, 0.0, 9786.0, 4539.0, 0.0, 13605.0, 0.0, 5763.0, 46212.0, 0.0], [15892.0, 75715.0, 78507.0, 0.0, 47103.0, 0.0, 0.0, 77115.0, 4146.0, 56928.0, 40250.0, 3871.0, 14722.0, 0.0, 8817.0, 10088.0, 0.0, 23994.0, 0.0, 7847.0, 40826.0, 0.0, 59765.0], [13784.0, 68630.0, 101213.0, 0.0, 19502.0, 0.0, 0.0, 66453.0, 6426.0, 88434.0, 24821.0, 0.0, 24365.0, 0.0, 15669.0, 0.0, 0.0, 17581.0, 0.0, 10661.0, 39955.0, 0.0, 0.0, 100742.0], [103293.0, 82038.0, 0.0, 58642.0, 0.0, 0.0, 152521.0, 0.0, 37936.0, 22090.0, 0.0, 11216.0, 0.0, 0.0, 28413.0, 0.0, 0.0, 101825.0, 0.0, 3927.0, 59431.0], [20156.0, 109155.0, 98780.0, 104442.0, 0.0, 0.0, 64910.0, 4840.0, 86802.0, 71212.0, 0.0, 28810.0, 0.0, 9010.0, 7293.0, 0.0, 34841.0, 19775.0, 13975.0, 50146.0, 0.0, 7522.0, 60359.0], [30585.0, 72064.0, 58978.0, 0.0, 91580.0, 0.0, 1299.0, 77587.0, 5551.0, 94873.0, 103460.0, 0.0, 68944.0, 0.0, 8726.0, 0.0, 0.0, 58951.0, 0.0, 6936.0, 75074.0, 0.0, 0.0, 67119.0], [20257.0, 85575.0, 60561.0, 0.0, 74548.0, 0.0, 1267.0, 161193.0, 6738.0, 45039.0, 128448.0, 0.0, 24777.0, 0.0, 0.0, 5671.0, 0.0, 77015.0, 5093.0, 10970.0, 93474.0, 0.0, 4390.0, 68142.0], [43712.0, 180468.0, 161555.0, 0.0, 187063.0, 1051.0, 3915.0, 142102.0, 3457.0, 168615.0, 75397.0, 6742.0, 44944.0, 0.0, 12134.0, 3954.0, 0.0, 20064.0, 0.0, 0.0, 30671.0, 0.0, 0.0, 164555.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

