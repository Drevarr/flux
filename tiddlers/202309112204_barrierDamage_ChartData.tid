created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Lil Choir Boy", "Mistwalker Cael", "Mannse Lee", "Ganbaatar Bloodwine", "Cat Wigglebooty", "Mistwalker Cael", "Pl\u00eeo", "Sub Train", "Tribal S", "Mort\u00e4rion", "Be\u00eb", "Xanvias Einzbern", "Tegan Parker", "Solus Luxes", "Koralia Danai", "Primal Clone", "Mike The Archmagus", "Arcanophage Farra", "Mister Jekyll", "Bella Sassy", "Ryvalia Fazebringer", "Eibh\u00ebar", "Drevarr Moonwillow", "Keypek The Drunk", "Daphne Agla\u00e9"];
const professions = ["Berserker", "Spellbreaker", "Vindicator", "Scrapper", "Berserker", "Scrapper", "Herald", "Scrapper", "Firebrand", "Druid", "Scrapper", "Reaper", "Berserker", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Weaver", "Spellbreaker", "Reaper", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 8232, 10005, 3413, 3091, 6115, 3414, 0, 0, 0, 427, 604, 0, 505, 0, 0, 2829, 0, 0, 310, 0, 10, 2969, 0, 1238], [8519, 0, 973, 0, 0, 0, 0, 5843, 6231, 6992, 1869, 2691, 0, 0, 0, 0, 2975, 2808, 2708, 2825, 2275], [11579, 2, 0, 2970, 4478, 5440, 0, 6375, 9203, 0, 3229, 3868, 2774, 4901], [1958, 12541, 0, 2058, 0, 41511], [0, 3064, 7478, 0, 2948, 2749, 7891, 2963, 0, 6468, 8912, 0, 5881, 1811, 3816, 5882], [0, 9775, 0, 136, 0, 7529, 9360, 49, 1380, 180, 947, 0, 719, 9621, 14719, 7577, 0, 1180, 510, 1312, 1578, 664, 813, 13, 0, 648, 513, 435, 1621], [0, 9988, 0, 1470, 532, 14560, 9076, 1629, 8139, 2880, 5486, 0, 3303, 18337, 9588], [0, 0, 16360, 9019, 2302, 2803, 9790, 0, 5450, 7286, 1852, 4252, 66, 2211, 0, 5882, 5783, 1650, 9544, 4565, 0, 4846, 1345, 2085, 936], [2727, 7718, 6451, 1989, 2529, 2161, 5692, 0, 2975, 14268, 9093, 10979, 747, 3315, 2983, 6433, 6394, 0, 4390, 10405, 0, 3769, 2869, 3218, 3026], [0, 7721, 0, 1211, 9449, 8138, 1043, 4238, 1255, 6435, 406, 3346, 9573, 10295, 8079, 505, 1138, 2972, 5072, 6426, 6726, 9432, 0, 2818, 3193, 2774, 3023], [11504, 0, 955, 30291, 28670, 6096, 5028, 16203, 5123, 0, 12598], [52, 1006, 310, 1691, 0, 7450, 9602, 198, 6628, 9114, 3538, 0, 3837, 13282, 7574, 6672, 184, 581, 3578, 10442, 3745, 0, 3611, 3701, 0, 6964, 9860, 3658, 3641], [0, 9037, 595, 4745, 1445, 9311, 12956, 1545, 3013, 306, 2799, 0, 5775, 5730, 5671, 5390, 44, 0, 3118, 5775, 5602, 0, 6094, 6042, 0, 7060, 11622, 2775, 6202], [1180, 606, 0, 2968, 1942, 13900, 5195, 899, 3509, 3218, 0, 10483, 7323, 7981, 13840, 275, 639, 3223, 9225, 0, 6853, 8762, 0, 4185, 10565, 3042, 3591], [0, 3417, 0, 0, 0, 1716, 19030, 2448, 2767, 1411, 5217, 0, 4345, 6513, 14476, 4546, 0, 1008, 3797, 11748, 4262, 0, 3038, 8095, 0, 5965, 10822, 4123, 4820], [0, 9537, 1641, 921, 0, 6235, 6930, 7741, 2736, 2153, 13772, 0, 3331, 8277, 15081, 5221, 1605, 379, 2967, 4566, 3707, 901, 4359, 9262, 0, 3006, 4968, 2087, 3569], [0, 2104, 644, 697, 0, 5141, 9761, 736, 6015, 6127, 7075, 0, 9725, 13894, 12865, 6863, 275, 275, 6420, 17525, 6549, 0, 3304, 4699, 0, 3203, 9545, 5771, 3068], [149, 7782, 0, 713, 0, 5220, 12307, 1708, 8222, 15816, 3804, 0, 3398, 13835, 16611, 10318, 0, 517, 3243, 6394, 6794, 0, 13231, 12128, 0, 7134, 9028, 3068, 6340], [96, 12953, 3659, 0, 0, 12517, 22625, 3391, 4073, 6949, 12141, 0, 3476, 14405, 13625, 13502, 882, 3050, 4559, 2360, 11539, 0, 5451, 9115, 0, 6175, 3345, 2801, 8326], [655, 15337, 0, 0, 0, 14681, 17832, 639, 6142, 12735, 6013, 23790, 29989, 17780, 2198, 1454, 3264, 6380, 11804, 518, 7834, 6063, 0, 3378, 11363, 7081, 12092], [27, 18362, 1299, 1067, 67, 14714, 23388, 3141, 15281, 6318, 6203, 0, 3898, 32166, 22002, 16951, 408, 2100, 3193, 13547, 4117, 0, 11889, 14510, 0, 4292, 16900, 7701, 10789], [0, 6764, 1534, 973, 2310, 24947, 32019, 6222, 20802, 10396, 6143, 0, 6074, 26463, 26024, 19563, 406, 4733, 5440, 13236, 1593, 306, 10129, 15185, 0, 3499, 13386, 7381, 7565], [1265, 14069, 1682, 1417, 0, 20046, 25237, 2751, 14859, 15663, 6183, 0, 13726, 11467, 32181, 19271, 589, 6399, 4713, 11506, 10306, 0, 14003, 13337, 604, 10178, 15270, 6698, 6969], [10, 23806, 1806, 761, 2968, 21352, 29778, 2421, 15546, 10311, 7840, 0, 5160, 31122, 22353, 18001, 948, 1372, 7273, 11991, 9365, 127, 14452, 13537, 10468, 15652, 8849, 12306], [573, 16733, 5876, 0, 9021, 42539, 5996, 4159, 34139, 12647, 10408, 0, 15275, 59733, 56425, 30501, 722, 12694, 8650, 28290, 33412, 364, 7987, 4725, 0, 24499, 14128, 30241, 33853], [340, 42732, 3138, 3529, 10418, 69043, 33762, 18822, 65799, 41079, 2508, 0, 19155, 101012, 69259, 93268, 2401, 4844, 11762, 32842, 50266, 102, 42331, 16760, 0, 42154, 31550, 20846, 31588]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

