created: 20230213220222000
creator: Drevarr
modified: 20230705163519220
modifier: drevarr
tags: ChartData
title: 202302132202_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Bringer", "Skye Nightroad", "Tribal S", "Uneeta Healah", "Xyntharos", "Mistwalker Caelon", "Lord Erin The Wise", "Etchery Howls", "Joh Oshi", "Veron Blackburn", "Newtype Khan", "Arriasa", "Arcanophage Farra", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Scrapper", "Scrapper", "Druid", "Scrapper", "Vindicator", "Vindicator", "Weaver", "Druid", "Druid", "Herald", "Spellbreaker", "Druid", "Spellbreaker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[120.24, 244.9085, 49.783, 0.0, 71.4322, 108.7095, 92.8427, 0.0, 53.3512, 113.844, 0.0, 0.0], [86.832, 499.0738, 52.5153, 0.0, 24.3123, 71.8911, 201.047, 3.9468, 88.9056, 382.702], [253.7343, 43.2432, 83.8488, 875.31, 65.847, 157.3536], [18.2491, 57.136, 76.3998, 139.127, 249.018, 0.0, 83.2608, 1050.73, 54.708, 122.988], [221.04, 560.4331, 47.2115, 0.0, 34.7008, 94.7968, 187.4373, 26.6448, 55.86, 618.624, 38.4084, 126.54], [324.288, 580.2691, 81.8467, 0.0, 29.5882, 85.9096, 195.657, 11.8248, 63.9744, 736.406, 35.4474, 128.6712], [183.312, 686.3256, 82.8913, 7.842, 53.7736, 4.5494, 258.3157, 27.612, 84.0056, 729.962, 39.9594, 173.5152], [576.864, 1070.0861, 259.8039, 47.148, 89.5985, 112.148, 241.472], [253.728, 665.6962, 62.9621, 0.0, 35.1541, 93.0511, 215.8695, 100.352, 993.092, 56.9076, 169.6968], [1263.744, 1765.933, 124.3571, 9.816, 76.001], [297.504, 938.6395, 89.5612, 35.262, 37.1846, 199.0627, 327.0383, 0.0, 112.5432, 1085.098, 94.3854, 268.5312], [389.808, 1060.8293, 87.4719, 24.51, 44.2916, 121.9874, 382.151, 106.0752, 1276.986, 75.6606, 291.4416], [420.768, 1123.2466, 195.1141, 105.7704, 171.6076, 474.0505, 43.9764, 175.812, 1257.654, 199.1202, 287.6232], [505.152, 1427.9275, 184.2253, 4.908, 73.6803, 283.9143, 582.5243, 258.0144, 2152.654, 136.0086, 370.5624], [712.368, 1626.2875, 231.3163, 148.5572, 297.9328, 761.607, 59.202, 274.1648, 2722.59, 130.7916, 495.8592]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

