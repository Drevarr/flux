created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Mort\u00e4rion", "Morton Saltbringer", "Kisumaiasu", "\u00c1rk\u00e1ntor", "Jimbo One Eye", "Zaylen Harker", "Necrotic Windrunner", "Cedryn X", "Lord Erin The Wise", "K\u00e2 \u00d4tik R\u00e6j", "Venomina The Sly", "Mistwalker Cael", "Cat Wigglebooty", "Newtype Khan", "Revitiel", "Arcanophage Farra", "Xanvias Einzbern", "Zaedy Zae", "Tootsie Pop Rocks", "Squishy Jellyfish", "Sub Train", "Crusader Siolith", "Tegan Parker", "Ryvalia Fazebringer", "Minnie Darley", "Tribal S", "Aelia Liore", "Elementsofmathus", "Sygaldry Verdandi", "Solus Sanctus", "Gabe Malhorn", "Drevarr Moonwillow", "Bella Sassy", "High Sorcer Baradun", "Daphne Agla\u00e9", "Inedible Plant", "Imalou", "Koralia Danai", "Glorious Gluvs", "Oo Dads Mad", "Tirluka", "Huma Shadowfist", "T\u00e2ntallo", "Aira Draugr", "Rayla Shadowmoon", "Belvyn Brightblade", "Kurtis Ruhr", "Lord Sahan", "Azarion Blightbane"];
const professions = ["Vindicator", "Scrapper", "Chronomancer", "Scourge", "Scourge", "Scrapper", "Dragonhunter", "Scourge", "Berserker", "Weaver", "Berserker", "Druid", "Vindicator", "Scrapper", "Spellbreaker", "Vindicator", "Spellbreaker", "Berserker", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Dragonhunter", "Druid", "Herald", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Scourge", "Vindicator", "Firebrand", "Firebrand", "Berserker", "Berserker", "Tempest", "Harbinger", "Renegade", "Herald", "Herald", "Firebrand", "Vindicator", "Firebrand", "Harbinger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[120.0645, 498.1374, 407.4873, 322.1765, 0.6905, 105.273, 117.4295, 32.6481, 0.0, 48.1923, 368.2121, 297.0526, 85.0161, 241.8908, 705.6264, 595.0676], [0.0, 585.1007, 283.176, 318.9337, 110.4455, 494.5948, 19.6622, 105.8026, 33.5312, 22.3333, 455.9531, 90.8442, 106.0135, 396.1453, 886.8759, 891.8219], [21.3836, 110.2388, 306.9407, 550.6029, 30.12, 319.1237, 75.2635, 198.6216, 1.8485, 247.8261, 114.0996, 425.3378, 101.5606, 154.7209, 671.7687, 662.6969], [42.8125, 136.2672, 416.265, 401.8458, 13.7292, 507.3452, 2.1286, 34.4603, 0.0, 22.5, 343.7065, 335.3243, 171.0968, 403.5657, 774.3259, 552.8259], [109.918, 68.0, 210.0944, 219.6952, 70.767, 197.4331, 0.0, 38.7188, 5.125, 53.8261, 309.2794, 407.8289, 85.7705, 256.92, 613.3383, 706.584], [21.6296, 82.6767, 259.75, 397.7905, 13.0485, 197.7724, 24.7823, 51.8868, 0.0, 196.92, 342.2105, 831.0137, 141.05, 172.1086, 613.7444, 547.5921], [309.3462, 166.806, 382.9322, 367.2126, 70.5833, 190.9176, 68.4196, 78.697, 71.0263, 380.4757, 509.5139, 239.8387, 398.948, 688.3585, 1019.4198], [103.8065, 161.1852, 272.3149, 164.1952, 21.3191, 230.0142, 8.1439, 36.6825, 95.913, 341.5547, 201.7105, 76.0946, 217.0291, 638.9401, 560.6831], [35.7925, 139.5852, 398.9402, 225.885, 83.2982, 340.8493, 0.0, 21.6415, 0.0, 52.0938, 317.8794, 211.8267, 195.8548, 177.0172, 559.1434, 955.5926], [365.0842, 64.268, 344.51, 29.0647, 0.0, 0.0, 0.0, 478.0364, 288.2603, 225.0645, 190.9138, 737.8635, 981.8293], [51.1373, 131.8731, 328.7458, 286.5222, 19.0123, 253.0627, 0.0, 54.8095, 27.5588, 206.8846, 430.3866, 154.1972, 125.46, 83.1047, 413.8953, 453.4014], [56.3396, 272.0507, 263.6496, 162.8143, 1358.1724, 18.8087, 47.2029, 12.3333, 1.1143, 14.3056, 332.5769, 143.9091, 126.8182, 185.2832, 458.4205, 505.8457], [32.623, 107.7206, 243.217, 135.9714, 32.7778, 201.9777, 13.5, 10.0, 39.7188, 41.9667, 289.4595, 343.8194, 159.6471, 100.6724, 551.3969, 473.1166], [12.2222, 197.1556, 249.5474, 191.4714, 25.2027, 126.5429, 29.7133, 102.8485, 0.0, 28.4595, 555.1268, 282.5753, 176.76, 94.0632, 487.5247, 440.849], [32.7458, 87.7554, 281.4958, 165.7157, 47.0952, 142.7617, 76.2906, 161.75, 112.4783, 242.3617, 201.1096, 142.0323, 156.7514, 469.9225, 481.3047], [332.5968, 554.7033, 267.5577, 255.6108, 2.6082, 147.8964, 0.2153, 64.9153, 71.3846, 305.0239, 341.6216, 123.8667, 135.454, 480.1321, 483.1265], [25.6481, 91.6, 207.1838, 132.3831, 30.5833, 130.4297, 57.3305, 347.5, 0.0, 22.0526, 257.5908, 282.8767, 191.6667, 59.763, 534.5778, 459.9201], [14.9516, 117.5556, 254.6426, 115.8621, 49.5366, 86.3915, 47.4861, 64.0303, 2.8095, 0.0, 280.1619, 277.1644, 132.7833, 92.9884, 395.8643, 481.0757], [134.9744, 118.7313, 136.0773, 198.6, 15.012, 108.2305, 11.3636, 23.0317, 17.1875, 95.68, 220.1943, 173.8611, 173.8529, 114.9713, 340.6288, 497.7067], [7.2, 324.6493, 202.2707, 178.0238, 5.7317, 48.6969, 0.0, 121.7838, 0.0, 141.7, 189.2206, 252.75, 118.2373, 94.592, 400.0039, 440.6999], [9.1837, 67.1094, 229.0513, 127.4975, 31.6582, 105.3525, 20.936, 11.0, 27.4848, 26.44, 219.7004, 57.1918, 194.6176, 94.4686, 319.0588, 494.2382], [70.1908, 179.8814, 174.9714, 15.9294, 173.8398, 0.0, 14.7581, 0.0, 80.2083, 238.9563, 140.9437, 77.0484, 59.2457, 434.8604, 390.538], [11.5455, 63.6071, 118.4224, 106.8039, 8.131, 139.9004, 0.0, 0.0, 13.8889, 14.913, 202.9049, 93.0694, 116.102, 136.0057, 454.7529, 450.6719], [81.8974, 29.9609, 144.5238, 157.0333, 56.9512, 135.2638, 0.0, 82.5778, 15.1765, 37.7619, 223.3725, 125.9306, 132.3077, 80.7442, 389.9662, 428.8159], [97.4516, 87.7929, 139.434, 83.8706, 32.8533, 184.0161, 9.5918, 41.4219, 0.0, 130.8846, 240.2287, 114.4085, 112.7941, 126.3448, 328.7926, 405.2421], [107.2319, 105.6849, 71.9023, 483.9432, 658.11], [53.3729, 111.8667, 177.0598, 135.8146, 24.5529, 48.8037, 23.5686, 53.8254, 4.2692, 171.0587, 215.2763, 110.1515, 44.9711, 404.8037, 409.3319], [362.2822, 782.9406], [92.5122, 104.4184, 215.3149, 108.4381, 41.2105, 149.8826, 21.2887, 94.7838, 88.2903, 171.5084, 196.1316, 62.3704, 93.5517, 343.0977, 348.4173], [0.0, 112.6259, 77.1907, 125.5025, 28.1972, 138.9623, 15.5986, 126.2, 180.7838, 0.0, 168.6417, 114.1781, 85.6825, 123.8713, 382.149, 386.7907], [102.3962, 74.0076, 131.583, 107.4505, 0.0, 88.9681, 26.4792, 21.0303, 0.9167, 435.881, 202.3097, 101.7808, 126.0208, 99.5402, 301.6038, 386.3986], [12.0333, 150.1515, 176.4378, 145.5286, 0.0, 75.1815, 7.0876, 8.36, 24.697, 9.9565, 188.3725, 77.1944, 117.6207, 99.0, 373.1859, 367.1105], [32.625, 161.9776, 155.3462, 131.4406, 36.0971, 103.6073, 32.2552, 57.7358, 0.0, 36.84, 209.1538, 277.0685, 113.6667, 107.0174, 369.2357, 314.5232], [13.6724, 66.7984, 97.1472, 125.8683, 0.0843, 149.0538, 3.931, 63.0588, 44.2222, 110.5506, 143.5692, 67.3509, 81.3176, 366.9259, 389.1163], [218.7222, 436.3548, 75.4686, 580.7293, 493.4577], [0.0, 193.5693, 283.9872, 185.7783, 5.2577, 277.8541, 70.9583, 233.8254, 4.28, 76.1905, 433.8563, 636.5479, 460.2727, 79.592], [17.8909, 58.9154, 157.29, 123.6571, 6.0843, 112.9609, 2.4714, 92.037, 208.8846, 141.7328, 83.2381, 168.4118, 45.8269, 336.5296, 289.3019], [32.0882, 67.2313, 17.8169, 7.3214, 55.1667, 192.6299, 80.5373, 56.1333, 50.7368, 394.9843, 351.9351], [0.0339, 20.5806, 106.9815, 140.9048, 1.3778, 49.8607, 0.0, 9.931, 6.15, 30.44, 187.7753, 64.4118, 82.7818, 44.569, 356.809, 263.3052], [93.9057, 112.3357, 448.6352, 232.6048, 25.3012, 229.1779, 29.958, 37.7097, 4.0909, 135.9583, 297.7915, 231.9863, 127.7097, 189.5988], [165.4717, 218.8015, 204.2076, 290.205, 10.8039, 147.1772, 54.6944, 76.0811, 14.8462, 91.2791, 508.334], [182.0411, 80.6935, 195.5115, 544.2331, 515.8285], [331.5278, 27.973, 200.1067, 662.9091, 907.4615], [25.8594, 742.8395, 476.3836, 1429.5224], [35.2203, 152.6259, 381.2735, 255.1407, 60.5435, 274.395, 10.687, 114.2432, 147.2059, 0.0], [0.0, 199.7571, 319.3191, 300.0297, 58.7564, 146.7806], [73.8846, 99.0071, 262.6553, 246.7327, 274.8627, 149.3819, 0.0, 169.72, 0.0, 7.2812], [411.4345], [4.2812, 57.5385, 17.4375, 22.0, 269.0061], [1170.7126]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

