created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Rahani Sunray", "Koralia Danai", "Fribble Bibble", "Black Raspberry Pie", "Bella Sassy", "Xanvias Einzbern", "Ateriuz", "Gavann", "Drevarr Moonwillow"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[101.3013, 30.4481, 46.3529, 3.6175, 19.9334, 0.0, 34.8365, 35.7696, 44.523, 13.8515, 55.8054, 0.0], [20.9151, 11.1665, 16.5852, 93.9179, 0.0, 8.3002, 0.0, 19.9454, 25.11, 18.6518, 49.149, 214.3159], [84.4407, 24.1207, 69.156, 80.1398, 28.8817, 9.0922, 58.5598, 0.0, 10.17, 88.9875, 0.0155, 38.3456], [175.3074, 45.0965, 58.2134, 17.8945, 49.2881, 43.9402, 77.2783, 62.869, 72.414, 0.0, 56.7342, 0.0], [18.4671, 46.3601, 26.9525, 5.7154, 50.497, 53.4125, 130.6822, 43.0402, 59.508, 123.5045, 77.9418, 78.8206], [77.112, 55.1304, 56.5243, 4.4906, 70.6801, 110.0563, 4.5511, 122.9904, 18.549, 82.6618, 115.5892, 7.3219], [57.5586, 5.7283, 73.4033, 45.36, 87.4993, 134.8618, 67.6771, 123.3533, 156.168, 134.1016, 47.2295, 77.7559], [132.9264, 59.4547, 23.4151, 94.2241, 39.4069, 56.8339, 34.02, 158.2286, 81.657, 199.0269, 98.685, 77.1662], [42.3963, 28.0051, 138.9607, 55.6227, 63.0326, 171.2621, 90.6595, 45.6192, 31.887, 52.9654, 114.3353, 309.9587], [154.071, 101.5466, 62.5709, 169.1361, 147.168, 61.871, 116.5601, 115.5254, 91.071, 118.2161, 38.344, 146.4372]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

