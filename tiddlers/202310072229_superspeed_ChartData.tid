created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Regis Hawkesburne", "Glorious Gluvs", "Grayson Kin", "Mort\u00e4rion", "Gadget Windrunner", "Skylar Shadowmoon", "K\u00e2 \u00d4tik R\u00e6j", "Newtype Khan", "Tootsie Pop Rocks", "K\u00e2fkaa", "Jimbo The Pleb", "Mitsuri Ai", "Kosa\u00efr", "Mistwalker Cael", "Xanvias Einzbern", "Leafzely"];
const professions = ["Berserker", "Berserker", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Berserker", "Spellbreaker", "Scrapper", "Weaver", "Berserker", "Druid", "Tempest", "Herald", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0.355, 0, 0, 0.81, 0.53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0.177, 0, 0, 0.542, 0.53, 0.244, 0.73, 0, 0, 0, 0, 0, 0.373, 0.253, 0, 0, 0], [1.11, 0.431, 0.703, 0, 0, 0, 0.244, 0, 0, 0, 0.5, 0.349, 0.647, 0, 0.242, 0, 0], [0, 0.082, 1.184, 1.218, 0.81, 1.53, 0, 0, 0.686, 1.931], [1.305, 0, 0, 0, 0.756, 0.344, 0.634, 0.477, 0, 0.7, 0.522, 0.33, 0.357, 0.519, 0.514, 0.365, 0.484, 0.153, 0.281], [1.22, 0, 1.478, 1.466, 1.263, 1.322, 1.154, 1.491, 0.657, 0], [2.291, 0, 0, 0.089, 0.917, 0.574, 0, 1.059, 0.785, 1.168, 0.183, 1.066, 0, 0, 0.27, 0.336, 0.665, 0, 0.623, 0, 0], [1.745, 0, 0, 0.251, 0.745, 0.574, 0, 1.815, 0, 1.251, 0.451, 0.608, 0, 0, 0.306, 0.381, 0.329, 0, 0.586, 0, 0], [0.444, 0, 0.704, 1.1, 0.634, 0, 1.39, 1.293, 1.229, 0.731, 0.366, 0, 0.15, 0.915, 0.469, 0, 0.182, 0.218], [1.039, 0.867, 0.643, 0.686, 0.918, 0.787, 1.014, 1.126, 0.613], [0.557, 0, 0, 1.374, 0.718, 0.704, 1.059, 0, 1.732, 0, 1.138, 0, 0, 1.921, 0, 0.375, 0.655, 0.319, 0.665, 0], [0.688, 0.949, 1.269, 0, 0.703, 1.05, 0.81, 0.887, 0, 0.526, 0.684, 0.986, 0.306, 1.014, 0, 0.29], [0.446, 0.241, 0.943, 1.099, 0.69, 0.708, 1.272, 0.942, 0.681, 1.171, 0.496, 0, 0.322, 0.858, 0.454, 0.593, 0.459, 0.653], [1.745, 0.743, 0, 0.355, 0.916, 0.818, 1.28, 0.927, 1.577, 0.584, 1.393, 0, 0, 0, 0.601, 0.381, 0.657, 0.511, 0.605, 0, 0.937], [0, 0, 0, 0.724, 0.917, 0.337, 1.229, 1.833, 1.2, 1.168, 0.731, 2.046, 0, 0, 0.778, 0.381, 0.904, 0.51, 0.773, 0, 0.967], [5.137, 0.446, 0.825, 0.559, 2.273, 1.539, 0.528, 2.864, 2.11, 2.397, 0.985, 2.315, 0, 0, 1.608, 1.558, 1.158]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

