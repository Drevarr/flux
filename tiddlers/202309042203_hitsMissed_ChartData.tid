created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Amiti\u00e9l", "Morv\u00e4rth", "Pope On Cope", "Melody Phoenixstorm", "Aira Draugr", "Bella Sassy", "Oo Dads Mad", "Smol Gluvs", "Black Raspberry Pie", "Koralia Danai", "Necrotic Windrunner", "A \u00da R A", "Gamora Titus", "Xanvias Einzbern", "Lord Erin The Wise", "Mort\u00e4rion", "Darks Na", "Kylo Milan", "Elementsofmathus", "Daphne Agla\u00e9", "Mistwalker Cael", "Zaedy Zae", "Tootsie Pop Rocks", "Belvyn Brightblade", "Sonja Wintersong", "Demons Vengence", "Blaize Harlot", "Air One Com", "Newtype Khan", "Sub Train", "Jmbrage Warrior", "Glass Tingle", "Glorious Gluvs", "Tegan Parker", "Selandir", "Glizzy Gobbl\u00e9r", "Rina Of Theros", "Dancing In The Mist", "Be\u00eb", "Rafaellagabriela", "Drevarr Moonwillow", "Nose Llama", "Jimbo The Pleb", "Hyde En Sikh", "Lucky Luprac\u00e1n", "Crusader Siolith", "Rhaevynn", "Darkened Sword", "Venomina The Fierce", "Darth Sammy"];
const professions = ["Firebrand", "Reaper", "Renegade", "Scrapper", "Herald", "Firebrand", "Berserker", "Reaper", "Chronomancer", "Firebrand", "Reaper", "Firebrand", "Firebrand", "Berserker", "Weaver", "Scrapper", "Dragonhunter", "Chronomancer", "Tempest", "Reaper", "Herald", "Druid", "Scrapper", "Firebrand", "Firebrand", "Druid", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Chronomancer", "Berserker", "Tempest", "Weaver", "Reaper", "Reaper", "Herald", "Reaper", "Firebrand", "Scrapper", "Tempest", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Reaper", "Spellbreaker", "Spellbreaker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 1, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 0, 2], [0, 0, 1, 0, 1, 1, 0, 2, 0, 0, 0, 0, 1], [0, 0, 4, 1, 2, 0], [0, 4, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1], [0, 5, 1, 1, 1, 0, 0], [1, 3, 3, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 4, 0, 1], [1, 0, 0, 0, 2, 0, 0, 4, 0, 1, 0, 0, 1], [0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 4], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 1, 0, 3, 0, 1, 0, 0, 0], [0, 1, 1, 0, 2, 0, 0, 1, 1, 1, 0, 0, 0, 2, 0, 0, 1, 0], [0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 2], [2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 2, 0, 0], [0, 0, 4, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 2], [0, 2, 2, 2, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 1, 0, 1, 0, 2, 0, 0, 2], [0, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 2], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 3], [0, 5, 1, 1, 1, 0, 4], [0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 2], [2, 1, 0, 0, 1, 0, 0, 2, 1, 1, 0, 4], [0, 1, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 2, 1, 1, 0, 0, 3], [0, 1, 0, 1, 3, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 2], [0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 1, 0, 3, 0, 3, 0, 0, 0], [0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 2, 0, 1, 3], [0, 1, 3, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 3], [0, 0, 2, 1, 0, 0, 3, 1, 0, 0, 0, 1, 0, 2, 4], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 1, 0, 1, 4, 0, 1, 2], [0, 1, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 1, 0, 0, 2], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 1, 3, 0, 0, 0, 3], [0, 4, 2, 1, 2, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 3, 3, 0, 2, 1, 2, 0, 0, 2], [0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 4, 0, 1, 0, 3, 1], [1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 1, 0, 0, 0, 4], [0, 4, 3, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 1, 3, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 5, 0, 0, 2], [0, 0, 1, 2, 1, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 2, 0, 1, 0, 3, 4], [0, 1, 1, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 4, 1, 1, 0, 6], [0, 3, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 1, 0, 3, 1, 1, 0, 2, 4], [0, 2, 2, 1, 3, 0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 2, 0, 0, 3], [0, 5, 1, 1, 2, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 1, 0, 4, 0, 1, 3], [0, 0, 0, 2, 0, 0, 0, 3, 4, 0, 3, 0, 4, 0, 3, 3], [0, 1, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 2, 0, 2, 7], [0, 12, 0, 3, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 2, 16]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

