created: 20230527220043000
creator: Drevarr
modified: 20230705163531989
modifier: drevarr
tags: ChartData
title: 202305272200_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Tegan Parker", "Daddy Demon", "Tootsie Pop Rocks", "Zadey Starbolt", "Johosh Of The North", "Drevarr Moonwillow"];
const professions = ["Druid", "Tempest", "Tempest", "Scrapper", "Scrapper", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.3443, 474.8571, 567.5476, 954.0741, 650.0097], [1017.7397, 329.1156, 965.6244, 336.7049, 1197.2236, 853.0278, 1370.8333, 1137.4951, 31.1304, 1118.8974, 534.6774, 14.0, 1022.0286, 15.5443, 677.9375], [724.7956, 837.9014, 365.623, 926.9814, 1230.4167, 1634.3056, 897.6942, 1801.7564, 1286.1613, 301.1852, 1772.1714], [3.8649, 3.0244, 0.0, 0.0, 0.0, 0.0, 122.7366, 0.0, 127.2832, 2320.2321, 299.8425, 345.5467, 800.6479, 333.0328, 317.8261, 206.4127, 1131.4259, 568.7524, 0.0, 1097.5769, 455.2903, 9.6667, 1171.2667, 15.7722, 1012.9062], [703.7297, 69.0488, 120.7541, 15.1053, 131.825, 6.3864, 1654.6565, 271.3333, 1477.6726, 2153.9831, 1955.4658, 377.2311, 1083.3568, 365.0164, 531.2298, 909.5635, 1968.537, 834.1602, 0.0, 1528.3846, 439.3548, 22.037, 2012.4476, 177.6076, 1357.4922], [948.4865, 113.3171, 208.7705, 22.8421, 388.15, 303.7159, 1715.9046, 420.8148, 2138.6018, 3303.3333, 1253.4247, 706.8089, 862.2958, 308.623, 1549.6398, 890.2063, 980.7315, 1909.1262, 31.6522, 1976.8462, 623.4194, 1802.6476, 277.3924, 1471.1719], [860.4234, 82.2927, 64.9836, 84.7632, 287.95, 44.4773, 1888.2595, 474.4074, 2197.7611, 3519.3797, 2093.9658, 602.7911, 1127.6432, 297.5246, 1876.472, 1141.5516, 1543.8333, 2651.8835, 11.8261, 2050.6026, 406.3548, 0.0, 1472.8476, 185.5063, 2074.0703]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

