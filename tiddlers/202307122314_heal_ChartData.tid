created: 20230712231437000
creator: Drevarr
tags: ChartData
title: 202307122314_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Sister Elon\u00edth", "Solus Sanctus", "Gestern Yesteryear", "Tegan Parker", "Klengah", "Tootsie Pop Rocks", "Artakama Nahid", "Arriasa", "Drevarr Moonwillow", "Tribal S", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Scrapper", "Tempest", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.7186, 20.75, 23.0, 206.8118, 892.2727, 224.4902, 189.2754, 195.4578, 258.819, 52.2958, 58.4535, 224.16, 20.2923, 5.4286, 33.6582, 19.7632, 45.1795, 205.5469, 117.3953, 96.6691, 30.7544, 115.9323, 355.0743], [87.2745, 742.8551, 430.1325, 436.8793, 200.662, 179.5465, 566.56, 116.3538, 84.8022, 361.6076, 22.5, 169.0513, 554.0156, 394.6124, 170.0935, 147.6491, 212.9023, 74.2229], [66.497, 0.4306, 0.0, 258.502, 467.1727, 94.5098, 69.5217, 167.0602, 701.2414, 14.6479, 278.3372, 595.4133, 57.2923, 51.3956, 141.3038, 97.0526, 26.5897, 33.2031, 248.9302, 102.9568, 198.6391, 131.6914], [1329.5098, 954.087, 598.8916, 1099.1379, 63.5775, 666.1453, 1265.8533, 6.9077, 96.9011, 691.8734, 408.8684, 138.9744, 911.2656, 459.9457, 264.8201, 408.7193, 573.0902, 352.0057], [255.521, 20.5556, 32.7, 1758.1569, 2193.9909, 1013.5542, 911.1293, 303.0704, 1361.9826, 1793.7867, 0.0, 178.6154, 1247.1646, 351.3158, 526.7436, 873.5469, 927.0543, 905.9424, 0.807, 762.797, 1380.6286], [592.2096, 31.0694, 15.4333, 1485.5804, 582.2818, 495.5294, 1648.3913, 1636.5301, 3037.4138, 677.1549, 1291.4942, 1820.6933, 4.7538, 139.2088, 1144.7975, 301.8947, 76.3846, 1043.2188, 1058.4884, 601.6331, 56.3684, 1129.6316, 868.2], [60.6407, 17.7361, 15.1667, 2181.2549, 3095.7545, 3471.4706, 1398.2754, 922.5301, 1520.2155, 436.7887, 1195.2035, 1766.0267, 20.0308, 252.0989, 732.519, 615.4211, 23.7436, 1060.0938, 883.3411, 517.9712, 15.9123, 329.3835, 1469.7657], [112.8084, 35.1528, 49.2333, 2403.4863, 3362.8455, 2808.8431, 2306.3623, 1381.3373, 2038.2414, 170.5915, 1441.3372, 2443.3733, 352.4769, 470.6703, 1001.2152, 495.5526, 471.8974, 1020.9219, 1100.4806, 1022.3309, 50.6316, 836.8421, 1693.2571], [532.9581, 135.2917, 107.2333, 3036.7922, 3226.7818, 3630.2745, 493.7101, 1909.6265, 2188.4741, 403.8873, 1443.3779, 1746.92, 195.6615, 377.1758, 1168.5316, 1708.6842, 328.4872, 1928.9531, 1288.4806, 1309.554, 1046.9323, 2389.9486], [360.6946, 56.5, 93.4, 3557.2471, 2270.5182, 4273.0392, 2223.8116, 1648.253, 1305.5431, 426.3662, 1962.6919, 3521.68, 219.4462, 590.4615, 1828.0127, 747.1053, 924.3846, 1902.5312, 1876.1628, 1151.4317, 20.8246, 987.7594, 2176.1314], [563.8563, 55.9167, 129.2333, 3874.1333, 4370.8545, 2508.5882, 3237.1159, 1616.9518, 2677.4138, 510.9718, 2301.7674, 3854.1067, 77.2615, 279.4505, 1722.4304, 1175.6316, 958.9487, 3050.9531, 1871.5349, 1591.6403, 50.9474, 1202.2481, 2212.4057], [727.3832, 52.8889, 84.3667, 4588.7412, 6282.1545, 2916.3725, 2511.6522, 2419.5181, 2771.4569, 990.4507, 2503.5116, 4401.64, 1.7538, 889.7582, 1931.1899, 1182.4737, 493.2821, 1703.2031, 2061.7519, 1933.9137, 204.7719, 1863.4211, 3814.8629]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

