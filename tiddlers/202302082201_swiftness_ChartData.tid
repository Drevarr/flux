created: 20230208220141000
creator: Drevarr
modified: 20230705163518933
modifier: drevarr
tags: ChartData
title: 202302082201_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Fungus", "Mac Aaroni", "Tegan Parker", "Smol Gluvs", "Nelliel T", "Etchery Howls", "Raziel Umbra", "Ryvalia Fazebringer", "Be\u00eb", "Black Raspberry Pie", "Veron Blackburn", "Zadie Miststep", "Elonith Primal", "Kahless The Drunk", "Stoic Rapidfire", "Gabe Malhorn", "Arka\u00f1", "\u00c9\u00efbhear", "Koralia Danai", "Newtype Khan", "Arcanophage Farra", "Blanco Padre Guard", "Drevarr Moonwillow", "Zaylen Harker", "Johosh The Great", "Bella Sassy", "Whose Guardian", "Stabby Beech"];
const professions = ["Berserker", "Scourge", "Tempest", "Tempest", "Scourge", "Scourge", "Druid", "Chronomancer", "Chronomancer", "Scourge", "Chronomancer", "Herald", "Tempest", "Tempest", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[418.3661, 52.8922, 0.0, 32.8408, 0.0, 0.0, 0.0, 257.4, 30.3305, 0.0, 69.825], [280.1376, 0.0, 0.0, 0.0, 0.0, 41.2928, 0.0, 322.2648, 66.6718, 50.0294, 157.2725], [265.415, 0.0, 0.0, 16.1014, 0.0, 31.9656, 0.0, 315.4008, 89.1261, 50.9496, 197.505], [9.913, 37.9074, 0.0, 503.1312, 68.1918, 63.4229, 429.9225], [260.9165, 0.0, 0.0, 0.0, 0.0, 21.2106, 0.0, 595.1088, 135.5546, 51.8357, 101.08], [299.3587, 0.0, 0.0, 42.1067, 0.0, 16.7428, 0.0, 627.3696, 18.7925, 90.3802, 89.775], [751.6685, 0.0, 7.2299, 3.2203, 0.0, 0.0, 0.0, 134.8776, 137.6964, 117.6442, 113.3825], [114.0998, 149.7835, 0.0, 29.7724, 62.606, 108.7937, 1.8295, 590.304, 17.8943, 21.5386, 171.57], [653.1091, 55.6858, 0.0, 0.0, 0.0, 9.212, 9.8129, 309.5664, 242.6441, 0.0, 240.065], [367.2461, 0.0, 42.8235, 66.1069, 0.0, 31.9656, 0.0, 555.984, 239.6732, 57.5611, 203.49], [810.1498, 0.0, 45.2706, 41.1649, 236.647, 137.4661, 17.8794, 381.6384, 7.3235, 0.0, 443.8875], [1322.1677, 190.4304, 425.8997, 95.6059, 94.829, 34.6371], [722.6323, 61.4592, 152.2739, 26.7344, 31.855, 30.8602, 275.5091, 482.8824, 105.0168, 27.9797, 585.865], [424.9094, 59.7365, 205.553, 64.1626, 76.199, 30.1232, 95.7172, 602.6592, 255.633, 109.1582, 661.3425], [974.0016, 208.9282, 164.1293, 1269.485], [806.0602, 0.0, 155.3883, 118.3605, 0.0, 0.0, 67.4428, 921.492, 219.4298, 67.5466, 698.25], [345.7028, 79.0184, 44.712, 95.943, 187.1932, 761.904, 159.8743, 96.3782, 1585.6925], [2197.751, 0.0, 124.9113, 52.4055, 4.623, 16.3743, 74.2619, 651.0504, 57.552, 52.6536, 439.565], [1418.6822, 39.4363, 111.0075, 48.8814, 0.0, 26.139, 60.9563, 918.4032, 148.6126, 93.0384, 897.75], [817.1021, 281.4552, 515.7735, 61.0942, 21.85, 77.4038, 309.9373, 589.2744, 70.6791, 133.355, 1307.0575], [1046.9376, 51.4488, 355.8248, 156.1836, 54.326, 14.5089, 267.2762, 1123.6368, 229.8624, 74.1922, 823.935], [994.5907, 160.9114, 551.2559, 90.1071, 12.006, 29.8929, 108.9396, 1010.3808, 287.069, 129.5381, 825.93], [955.7395, 146.1984, 446.6997, 95.7578, 163.001, 197.5974, 215.4676, 913.9416, 310.905, 134.2752, 846.8775], [1531.1462, 128.6453, 324.1242, 141.6923, 0.0, 55.3411, 399.9164, 1094.4648, 158.907, 100.8086, 744.135], [1331.5738, 252.4483, 562.4901, 134.5834, 147.614, 141.2891, 558.752, 1232.088, 312.2177, 23.5834, 1650.8625], [1745.8502, 323.4058, 586.627, 84.8817, 198.95, 139.746, 412.0578, 1368.6816, 299.8506, 196.5053, 1831.0775], [1765.0714, 158.4902, 500.8687, 116.2035, 170.798, 118.213, 679.5835, 1950.7488, 288.4507, 199.5725, 1741.635], [2579.3107, 0.0, 473.1724, 272.2048, 119.899, 177.7225, 251.4758, 1425.3096, 229.6552, 283.8523, 2001.65], [2603.0304, 243.2294, 673.2752, 186.0167, 52.0017, 645.1553, 1729.3848, 274.84, 150.5995, 1764.5775]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

