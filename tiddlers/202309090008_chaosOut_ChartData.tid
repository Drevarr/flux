created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Jobless Jennifer", "Gamora Titus", "Mort\u00e4rion", "K\u00f4sair", "Mew Mew", "Glorious Gluvs", "Regis Hawkesburne", "Amiti\u00e9l", "Xanvias Einzbern", "Philip Poundhouse", "Jimbo The Pleb", "Mistwalker Cael", "Kahlyanne", "No Reserv\u00e9", "Sub Train", "Drevarr Moonwillow", "Legoh Brave", "Graumas", "Koralia Danai", "Cupi Cupita", "Air One Com", "Loganlek", "Mew Mew", "Elon Illusionblade", "Firebrand pl1-2628", "J\u00e2sm\u00eene", "Solus Luxes", "Sofya De Nova", "Seiker Novus Terra", "K\u00e2 \u00d4tik R\u00e6j", "Heals For Daddy", "Gestern Yesteryear", "Tribal S", "Tegan Parker"];
const professions = ["Weaver", "Berserker", "Firebrand", "Scrapper", "Spellbreaker", "Holosmith", "Berserker", "Berserker", "Firebrand", "Berserker", "Herald", "Berserker", "Herald", "Tempest", "Vindicator", "Firebrand", "Scrapper", "Tempest", "Thief", "Firebrand", "Herald", "Firebrand", "Berserker", "Scrapper", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Berserker", "Druid", "Firebrand", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 1.1003, 4.5024, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 7.2038, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 10.4499], [0.0, 0.0, 0.0, 12.167, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 12.2208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 12.2443], [0.0, 11.1312, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0627, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0625, 0.0, 0.0, 0.0, 0.0, 0.0, 12.2516], [0.0, 15.4946], [0.2791, 0.0, 0.0, 0.0, 0.0, 0.5104, 5.9366, 0.0, 0.0, 0.0, 0.0, 9.0085], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.181, 0.0, 0.0, 0.0], [3.0444, 0.0, 3.3394, 0.0, 0.0, 12.2208, 0.3403, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 10.0181, 0.0, 0.0, 0.0, 9.1876, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.6669, 0.0], [0.0, 0.0, 11.8733, 0.0, 0.0, 0.0, 0.0, 6.3077, 0.0, 0.0, 0.0, 0.0, 6.1258], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0799, 12.2443, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 12.2443, 0.0, 12.2208, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 24.4886, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.2552, 0.0, 0.0, 0.0, 0.0, 0.0, 24.5031], [0.0, 0.0, 0.0, 0.0, 12.2501, 0.0, 0.0, 0.0, 0.0, 0.0, 15.1343], [0.0, 0.0, 12.2443, 6.1747, 9.1876, 0.0], [0.0, 0.0, 0.0, 0.0, 12.2208, 0.0, 12.2443, 0.0, 0.0, 0.0, 0.0, 3.6034], [0.0, 0.0, 19.2941, 0.0, 0.0, 0.0, 9.2726, 0.0, 0.0, 0.0, 0.4797, 0.0, 1.081], [0.0, 0.0, 12.2501, 19.6651, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.1765, 0.0], [0.0, 0.0, 11.8733, 0.0, 0.3859, 11.9949, 0.0, 0.0, 0.0, 0.0, 9.0979, 0.0], [0.0, 0.0, 16.3258, 0.0, 0.0, 17.4389], [0.0, 0.0, 21.8914, 0.0, 0.0, 0.0, 11.3143, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7207], [0.0, 0.0, 0.0, 0.0, 0.0, 16.3373, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.5394], [0.0, 0.0, 17.2242, 0.0, 20.4538, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 12.1458, 30.359, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 12.3206, 24.4886, 0.0, 0.0, 0.0, 0.6806, 11.8733], [0.0, 0.0, 2.9683, 15.1929, 0.0, 19.2258, 15.2126, 0.0, 0.0, 0.0, 0.0], [0.0, 9.4042, 12.2443, 0.0, 0.0, 0.0, 11.2292, 8.905, 0.0, 0.0, 0.0, 0.0, 12.2516], [0.0, 15.2371, 36.733, 0.0, 0.0, 0.0, 22.6334, 0.0, 0.0, 0.0, 0.0, 16.2153]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

