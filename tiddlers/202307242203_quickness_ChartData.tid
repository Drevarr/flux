created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Hey Yey Yeah Ah Ah", "Gabe Malhorn", "Jerryatric Reflexes", "Vee Nemesis", "Crusader Siolith", "Sub Train", "Sygaldry Verdandi", "Solus Sanctus", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.1002, 52.5826, 4.8824, 4.9056, 0.0, 10.9589, 0.0, 23.3092, 4.7188, 68.2394, 16.115, 0.0, 0.0, 0.0, 6.5903, 11.466], [402.9353, 113.2331, 289.8575, 77.614, 56.9264], [129.4031, 269.9349, 54.8012, 94.3874, 81.8496, 22.2496, 15.2401, 15.5734, 31.1648, 90.7189, 139.991, 30.8909, 10.8202, 31.3649, 0.0, 30.3503, 99.918], [0.0, 57.7377, 388.4907, 54.1839, 79.5598, 13.7842, 173.4667, 89.7752, 461.1174, 27.275, 19.535, 100.3496, 16.1478, 136.1425, 260.325], [402.8141, 44.198, 105.0019, 30.5573, 51.6028, 80.1696, 10.812, 43.1645, 60.1069, 69.0261, 145.693, 371.5533, 83.0304, 29.327, 61.7326, 42.4612, 103.7111, 171.405], [325.112, 128.0664, 253.9315, 71.3846, 55.1627, 94.7856, 0.0, 56.232, 46.8529, 95.7479, 137.671, 276.4698, 115.4837, 47.3933, 70.3444, 23.7872, 73.8812, 159.705], [482.4556, 148.3759, 226.8237, 76.8844, 29.6226, 87.4608, 17.5576, 57.9573, 74.5537, 97.5508, 103.8136, 359.0093, 66.0226, 26.977, 39.7953, 21.4428, 87.7556, 179.478], [463.3028, 108.4037, 242.3372, 75.4253, 50.2311, 94.8192, 13.2872, 75.434, 72.3006, 85.4455, 129.1772, 458.3578, 0.0, 56.2061, 57.4721, 7.1745, 78.8528, 195.741], [351.9017, 106.3339, 310.27, 62.2651, 65.1567, 117.7344, 27.2408, 66.9672, 74.1561, 114.3566, 239.951, 539.8938, 123.1171, 45.239, 183.8382, 32.4168, 109.1453, 261.729], [398.6926, 125.4792, 311.903, 80.7847, 77.9268, 105.2352, 11.4512, 65.6892, 91.3201, 167.6716, 232.4009, 646.5178, 89.28, 64.0397, 173.6854, 58.9526, 115.7356, 251.901]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

