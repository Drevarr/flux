created: 20230304223548000
creator: Drevarr
modified: 20230705163521154
modifier: drevarr
tags: ChartData
title: 202303042235_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Xmus Jaxnflaxn Waxn", "I Make Tools", "Nelliel T", "Morv\u00e4rth", "Lucky Leipreach\u00e1n", "Pinky Aldar", "Demon Maddx", "Smol Gluvs", "Kmpek", "Be\u00eb", "Your Devoted Buffer", "Sofya De Nova", "Nelliel T", "Nimplet", "Oo Dads Mad", "Govinda Ektar", "Smol Gluvs", "Madrigal Moonshade", "Be\u00eb", "Demon Maddx", "Husky Guard", "Lord Erin The Wise", "High Sorcer Baradun", "Koralia Danai", "Blanco Padre Guard", "Cerys Fireblade", "Legacy Of Mathus", "Ace Hammers", "Cat Wigglebooty", "Sp\u00edcy Cheese", "Venomina The Fierce", "Gabe Malhorn", "Aronorf Xideliesi", "Newtype Khan", "Sygaldry Verdandi", "Primal Clone", "Xanvias Tseli", "Tootsie Pop Bringer", "Bella Sassy", "Mac Aaroni", "Drevarr Moonwillow", "Tribal S", "Hyde En Sikh"];
const professions = ["Holosmith", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scourge", "Scourge", "Vindicator", "Scourge", "Tempest", "Weaver", "Reaper", "Scrapper", "Spellbreaker", "Renegade", "Reaper", "Vindicator", "Reaper", "Reaper", "Dragonhunter", "Weaver", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Vindicator", "Scrapper", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Tempest", "Scrapper", "Druid", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1361, 0.1504, 0.2667, 0.0, 0.1531, 0.2444, 0.0222, 0.0667, 0.0, 0.1452, 0.0404], [0.05, 0.2647, 0.1509, 0.1391, 0.0085, 0.0603, 0.0581, 0.18, 0.04, 0.1774], [0.216, 0.1955, 0.5556, 0.0, 0.0, 0.0, 0.1778, 0.0222, 0.0444, 0.0, 0.1774], [0.2101, 0.1504, 0.2444, 0.6667, 0.0612, 0.2778, 0.0, 0.0333, 0.0, 0.1452], [0.2189, 0.7333, 0.0, 0.0769, 0.0612, 0.1778, 0.0667, 0.0, 0.5806, 0.019], [0.0882, 0.1983, 0.3521, 0.0638, 0.0948], [0.2189, 0.2481, 0.5111, 0.3077, 0.2551, 0.3667, 0.1111, 0.0333, 0.4, 0.4355], [0.2337, 0.2481, 0.6, 0.3333, 0.0, 0.2041, 0.2444, 0.0444, 0.8226], [0.05, 0.1176, 0.0776, 0.2633, 0.0979, 0.0, 0.1516, 0.4, 0.42, 0.1613], [0.287, 0.218, 0.6222, 0.0385, 0.2449, 0.4111, 0.0, 0.1222, 0.4516], [0.2143, 0.3222, 0.0444, 0.0333, 0.04, 0.3226, 0.2399, 0.2, 0.0588, 0.1552, 0.1598, 0.017], [0.0301, 0.4222, 0.6667, 0.0769, 0.0816, 0.2444, 0.0444, 0.0111, 0.0, 0.0484, 0.1401, 0.0, 0.0, 0.1207, 0.1213, 0.0426, 0.0172, 0.0645, 0.16, 0.12, 0.4355], [0.2542, 0.05, 0.0294, 0.1595, 0.2929, 0.0596, 0.0, 0.0903, 0.09, 0.2], [0.1306, 0.1, 0.0294, 0.0388, 0.2041, 0.0723, 0.0086, 0.1774, 0.38, 0.44, 0.5968], [0.2574, 0.188, 0.7333, 0.0, 0.0, 0.1889, 0.0, 0.0444, 0.0, 0.4355, 0.3349], [0.2426, 0.2222, 0.2827, 0.0216, 0.1213, 0.0426, 0.0, 0.1226, 0.26, 0.38], [0.2898, 0.0431, 0.2012, 0.0638, 0.0, 0.2387, 0.26, 0.5, 0.5323], [0.2278, 0.0677, 0.2889, 0.0952, 0.0, 0.0204, 0.4222, 0.0444, 0.04, 0.3387, 0.0879, 0.0, 0.0294, 0.1681, 0.2071, 0.0638, 0.0, 0.1258, 0.1], [0.3088, 0.05, 0.0, 0.1164, 0.284, 0.0298, 0.0086, 0.1484, 0.25, 0.68, 0.4194], [0.2447, 0.2371, 0.2988, 0.1277, 0.0086, 0.1806, 0.27, 0.62, 0.3065], [0.2781, 0.1278, 0.4667, 0.0385, 0.1531, 0.2444, 0.0222, 0.2742, 0.247, 0.0, 0.0, 0.0948, 0.1953, 0.0383, 0.0172, 0.1065, 0.25], [0.1893, 0.0301, 0.8444, 0.381, 0.5, 0.3469, 0.1222, 0.0222, 0.0222, 0.0, 0.3548, 0.3777, 0.2, 0.1176, 0.0819, 0.2278, 0.017], [0.2811, 0.218, 0.3556, 0.0952, 0.2755, 0.3444, 0.0444, 0.0444, 0.5968, 0.1449, 0.2059, 0.0862, 0.3964, 0.0085], [0.2396, 0.1429, 0.5333, 0.0385, 0.0306, 0.3111, 0.0, 0.0444, 0.0, 0.7419, 0.1853, 0.05, 0.1176, 0.1034, 0.213, 0.0894, 0.0, 0.1387, 0.27, 0.5, 0.3871], [0.1568, 0.2105, 0.7333, 0.0, 0.6538, 0.0, 0.2667, 0.0, 0.0111, 0.3387, 0.304, 0.1176, 0.0647, 0.2396, 0.1021, 0.0, 0.1387, 0.46, 0.4, 0.1613], [0.2308, 0.1504, 0.3333, 0.0476, 0.0, 0.0714, 0.2444, 0.0444, 0.0222, 0.0, 0.4516, 0.2922, 0.05, 0.2059, 0.0948, 0.2219, 0.0809, 0.0, 0.1226, 0.41, 0.36, 0.5645], [0.2071, 0.1504, 0.6, 0.1905, 0.0769, 0.1837, 0.1889, 0.0444, 0.0, 0.3548, 0.3753, 0.05, 0.1471, 0.1207, 0.1775, 0.0851, 0.0086, 0.1419, 0.32, 0.38, 0.3871], [0.2722, 0.1654, 0.6, 0.0, 0.2308, 0.2959, 0.4444, 0.0, 0.0111, 0.1613, 0.2542, 0.05, 0.1176, 0.0948, 0.2219, 0.0596, 0.0172, 0.1452, 0.47, 0.26, 0.4677], [0.1953, 0.1955, 1.0889, 0.0, 0.0, 0.0714, 0.3889, 0.0556, 0.2742, 0.3753, 0.05, 0.1765, 0.1164, 0.2485, 0.0596, 0.0, 0.1258, 0.24, 0.66, 0.1935], [0.2189, 0.2632, 0.0, 0.0385, 0.1224, 0.2778, 0.0111, 0.0, 0.9032, 0.3848, 0.05, 0.0, 0.2371, 0.1716, 0.0255, 0.0086, 0.2032, 0.22, 0.6774], [0.1953, 0.1429, 0.5111, 0.1154, 0.0918, 0.5333, 0.1556, 0.0444, 0.0, 0.5323, 0.3088, 0.15, 0.0294, 0.1207, 0.3432, 0.0383, 0.1258, 0.2, 0.54, 0.3871], [0.2663, 0.2481, 0.3556, 0.2857, 0.0, 0.1122, 0.5, 0.0, 0.0, 0.4032, 0.2827, 0.05, 0.0294, 0.1509, 0.2426, 0.0766, 0.0259, 0.1129, 0.4, 0.64, 0.371], [0.2515, 0.203, 0.7333, 0.051, 0.6111, 0.0444, 0.0444, 0.0, 0.2742, 0.3943, 0.05, 0.0294, 0.0862, 0.1598, 0.0638, 0.0, 0.1387, 0.31, 0.46, 0.6129], [0.1953, 0.3985, 0.8, 0.4286, 0.3846, 0.1224, 0.4556, 0.0222, 0.0556, 0.0, 0.5968, 0.4323, 0.2, 0.2647, 0.125, 0.3225, 0.0723], [0.2337, 0.2481, 0.3556, 0.0, 0.4615, 0.3061, 0.4444, 0.0222, 0.5806, 0.2542, 0.05, 0.0294, 0.2155, 0.2041, 0.0553, 0.0, 0.0903, 0.24, 0.76, 0.8387], [0.2308, 0.2556, 1.0667, 0.0476, 0.0769, 0.2041, 0.3778, 0.0556, 0.0, 0.2419, 0.2969, 0.0, 0.1471, 0.0819, 0.2041, 0.1064, 0.0086, 0.2065, 0.21, 0.36, 0.8548], [0.2899, 0.1805, 0.8222, 0.3333, 0.0769, 0.051, 0.4111, 0.0111, 0.0, 0.4516, 0.3397, 0.05, 0.2059, 0.1121, 0.2396, 0.0979, 0.0172, 0.2129, 0.31, 0.74, 0.4032], [0.2456, 0.2331, 0.4444, 0.0, 0.0385, 0.0, 0.5222, 0.0, 0.0111, 0.04, 0.3226, 0.4228, 0.1, 0.0882, 0.0733, 0.2337, 0.0851, 0.0, 0.1645, 0.35, 0.8, 0.8548], [0.2544, 0.2481, 0.5556, 0.0952, 0.2692, 0.3776, 0.3444, 0.0222, 0.0333, 0.0, 0.4839, 0.3539, 0.0, 0.1471, 0.1897, 0.2189, 0.1149, 0.0172, 0.229, 0.42, 0.66, 0.8871], [0.3077, 0.2556, 0.7556, 0.1905, 0.0769, 0.4286, 0.5556, 0.0, 0.0444, 0.0, 0.5323, 0.3872, 0.15, 0.1176, 0.1379, 0.3047, 0.0723, 0.0, 0.2935, 0.29, 0.54, 0.5968], [0.287, 0.2331, 0.8444, 0.1905, 0.3462, 0.3265, 0.2111, 0.0, 0.0222, 0.5323, 0.4751, 0.0, 0.0588, 0.194, 0.2781, 0.1489, 0.0086, 0.1677, 0.36, 0.62, 0.9032], [0.3462, 0.2105, 0.6667, 0.619, 0.1327, 0.4111, 0.0, 0.0556, 0.0, 0.9032, 0.4798, 0.0, 0.0882, 0.3017, 0.358, 0.0851, 0.0259, 0.2645, 0.35, 1.12, 0.7581], [0.2604, 0.2105, 1.2, 0.0952, 0.2692, 0.3673, 0.5333, 0.0778, 0.8065, 0.4632, 0.05, 0.0588, 0.2198, 0.3254, 0.0766, 0.0345, 0.2742, 0.44, 1.2, 0.7903]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

