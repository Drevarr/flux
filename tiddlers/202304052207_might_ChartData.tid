created: 20230405220700000
creator: Drevarr
modified: 20230705163524529
modifier: drevarr
tags: ChartData
title: 202304052207_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Tribal S", "Raelyn Sunray", "Sister Elon\u00edth", "Mac Chiato", "Koralia Danai", "Sygaldry Verdandi", "Johosh The Great", "Drevarr Moonwillow", "Solus Sanctus", "Venomina The Siren", "Bella Sassy", "Newtype Khan", "Grasszanine", "Blancooo Padreee"];
const professions = ["Firebrand", "Druid", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 7.1614, 8.0256, 15.0757, 1.9232, 0.0, 1.0226, 3.7506, 0.0, 1.1427, 2.8096, 10.9613, 4.4616, 16.3438, 11.4761, 7.9092, 1.8144, 35.8441, 4.0572, 28.4022, 21.8282, 6.0273, 7.0308], [2.5245, 2.5168, 5.7758, 27.0805, 0.0, 0.0, 0.0, 2.4816, 0.0, 2.9865, 0.0, 24.0095, 9.8195, 0.0, 4.8944, 0.0, 16.3508, 31.9032, 47.9536, 2.9527, 18.0792, 5.6828, 0.0, 22.7664], [1.354, 6.475, 3.761, 13.8659, 2.3575, 2.4305, 5.5931, 7.473, 0.0, 2.2854, 5.8548, 15.9212, 21.6181, 0.0, 6.2054, 0.0, 11.2554, 35.3808, 48.2765, 3.922, 33.5916, 13.8086, 12.2125, 15.2892], [23.4986, 22.0748, 5.0565, 25.6956, 5.544, 31.7889, 59.724, 51.6672, 8.9033, 16.5168, 21.3502, 12.1862, 15.624], [6.3572, 0.2974, 7.1861, 34.06, 5.7697, 0.0, 0.0, 3.2614, 0.0, 0.0, 27.7556, 35.8525, 8.9918, 0.0, 0.0, 62.1328, 52.4664, 29.7086, 9.9401, 4.2966, 0.0, 25.8726, 46.0908], [8.5603, 11.0478, 25.0331, 4.9632, 0.9271, 3.9718, 0.4927, 6.627, 0.0, 4.7525, 19.7525, 24.3584, 0.0, 30.8522, 2.1806, 33.386, 62.1432, 79.2769, 7.0099, 14.1732, 7.9665, 8.2908, 26.784], [9.5931, 7.5733, 12.5253, 49.601, 3.4329, 0.0, 5.7353, 16.8664, 4.5402, 2.3206, 3.5579, 7.0329, 32.7789, 33.3406, 12.401, 24.909, 0.8131, 3.9546, 50.3496, 66.3601, 3.4035, 19.0836, 16.9421, 9.1067, 28.2348], [4.5212, 12.4238, 13.7006, 17.6814, 5.108, 1.3244, 0.6817, 8.0854, 6.5706, 2.1638, 4.7785, 4.9623, 28.8625, 30.2196, 12.0806, 22.8988, 0.0, 19.0125, 86.7888, 81.0529, 4.7559, 16.2936, 13.8617, 5.922, 33.9264], [5.9211, 7.9851, 8.7644, 44.0174, 0.9926, 13.2818, 10.8631, 3.7674, 10.434, 5.0803, 6.3886, 2.8798, 42.57, 28.545, 9.2206, 22.287, 6.5604, 23.3474, 49.896, 56.1881, 8.7004, 13.5036, 13.8617, 9.8963, 39.9528], [6.2654, 16.9312, 10.8128, 37.5962, 4.8805, 5.2976, 4.9054, 0.8694, 1.1562, 2.4774, 4.9862, 4.4506, 45.0391, 17.6598, 6.1776, 40.1166, 5.0266, 18.8604, 70.308, 71.3653, 8.0693, 18.6372, 6.4794, 8.6593, 29.7972], [0.0, 0.0, 0.0, 34.6183, 0.0, 0.0, 0.0, 23.8795, 0.0, 0.0, 25.7363, 50.5732, 52.0661, 14.1398, 57.3344, 42.7401, 29.6352, 59.0944, 0.0, 27.5652, 2.9211, 6.1326, 60.1524], [8.1243, 14.2542, 12.5925, 31.9196, 5.1493, 0.0, 2.4898, 11.4761, 6.0912, 10.8819, 2.4931, 52.1908, 43.3123, 15.2381, 42.4764, 2.9938, 40.0784, 72.1224, 78.1466, 5.8379, 43.1892, 16.0392, 8.9225, 57.1392], [20.5862, 14.2542, 35.9642, 152.1531, 4.198, 7.7383, 19.1919, 20.5178, 21.714, 21.4502, 21.5032, 3.9865, 116.0458, 81.829, 30.2931, 87.4, 17.4821, 74.0727, 145.3032, 169.533, 28.1074, 61.38, 36.3272, 14.3707, 135.9288], [18.8649, 18.876, 23.2709, 132.4244, 22.8307, 13.7738, 14.8645, 23.0971, 18.8094, 14.457, 10.362, 0.0, 115.6201, 74.5215, 39.1706, 87.4874, 9.739, 65.6312, 169.7976, 186.8092, 21.2101, 50.7222, 55.0751, 22.8984, 136.152], [22.9271, 36.8826, 46.7098, 130.1909, 10.3193, 17.274, 16.5539, 17.388, 27.1284, 30.1683, 32.3586, 130.3493, 99.7172, 45.4854, 88.0992, 30.9725, 56.9615, 156.9456, 234.7628, 36.7627, 88.5546, 17.4201, 30.9523, 138.1608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

