created: 20230329220116000
creator: Drevarr
modified: 20230705163523354
modifier: drevarr
tags: ChartData
title: 202303292201_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Panther B Me", "Nazhul Naxxremis", "Domina Flagbringer", "Seren Nightroad", "Baidu Sugiyama", "Iced Coffeebringer", "Smol Gluvs", "Newtype Khan", "Rina Of Theros", "Morton Saltbringer", "Bee Honeybringer", "Jorja Peachbringer", "Brioche Bunbringer"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0042, 0.2468, 0.04, 0.0, 0.0, 0.4571], [0.0952, 0.0, 0.0146, 0.013, 0.0311, 0.0723, 0.0, 0.0526, 0.0123, 0.2857], [0.5238, 0.025, 0.0428, 0.026, 0.0378], [0.1905, 0.1, 0.0292, 0.0195, 0.0723, 0.1191, 0.0267, 0.0263, 0.0], [0.0214, 0.0325, 0.1068, 0.0553, 0.0, 0.0], [0.0, 0.125, 0.0097, 0.013, 0.0849, 0.1617, 0.0, 0.0, 0.0247, 0.3429], [0.1746, 0.025, 0.0272, 0.0, 0.0732, 0.2255], [0.2222, 0.05, 0.0807, 0.0065, 0.0715, 0.0085, 0.0267, 0.0526, 0.0123, 0.2], [0.381, 0.0, 0.0331, 0.039, 0.0807, 0.166, 0.0, 0.0526, 0.1235, 0.1143], [0.2222, 0.05, 0.0623, 0.0779, 0.0791, 0.2, 0.08, 0.1053, 0.3951, 0.0857], [0.3175, 0.0, 0.0671, 0.0195, 0.1413, 0.1149, 0.0, 0.321, 0.2857], [0.4444, 0.05, 0.1216, 0.0584, 0.1758, 0.1915, 0.0, 0.0526, 0.6667, 0.4286], [0.5397, 0.225, 0.2636, 0.1234, 0.3238], [0.4921, 0.05, 0.2014, 0.1104, 0.2817, 0.3957, 0.1467, 0.1579, 0.2346, 0.5714]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

