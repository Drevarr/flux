created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Mother Ship", "Wall Knot", "Aronorf Xideliesi", "Drevarr Moonwillow", "Legoh Brave", "Geradenil", "A\u00fcrora Windrunner", "Kittendoo", "Emobilized", "Twinks R Us", "Gestern Yesteryear"];
const professions = ["Vindicator", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[107.4581, 115.3984, 25.1132, 12.9665, 5.2423, 21.8085, 0.0, 16.2043, 62.8705, 33.013, 6.9043, 102.4582], [78.8352, 51.7132, 200.9059, 5.7229, 0.0, 0.0, 0.0, 46.129, 0.0, 175.9615, 63.3233, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.7703], [175.2234, 83.0953, 26.8185, 49.6515, 8.8258, 32.6585, 30.167, 136.9032, 0.0, 114.7355, 0.0, 0.0, 0.0, 0.0, 107.4892, 0.0, 43.5371, 0.0], [252.6826, 22.2378, 27.9482, 59.241, 43.844, 64.068, 15.4268, 228.3325, 49.8698, 0.0, 14.9827, 4.6054, 209.0768, 17.9703, 78.7802, 23.6905], [326.044, 176.3208, 305.0794, 74.2638, 4.9442, 50.065, 75.175, 326.477], [549.0033, 30.5219, 0.0, 67.6265, 49.47, 271.1762, 121.3892, 480.8897], [191.492, 51.0048, 324.5344, 62.1511, 5.9486, 3.906, 65.8872, 187.6855, 31.9381, 140.7945, 136.9568, 0.0, 21.0464, 4.3375, 228.9105, 2.1668, 89.5497, 25.8397], [5.1986, 264.304, 347.4773, 0.0, 24.9998, 0.0, 130.659, 133.6661, 102.4841, 273.8092, 138.2781, 0.0, 67.5328, 0.0, 144.351, 0.0, 44.1496, 53.9284], [94.581, 156.3155, 294.3756, 88.7555, 473.616, 174.9147, 0.0, 72.1829, 2.3659, 381.3885], [83.662, 292.6003, 43.8219, 14.755, 53.7385, 60.6493, 202.3874, 46.7511, 354.1368, 201.3211, 0.0, 41.0672, 58.6867, 372.4875, 2.0805, 51.627, 68.6975], [319.0717, 344.5658, 507.613, 28.5876, 50.7902, 19.3595, 132.308, 318.1145, 621.8107, 205.1049, 32.357, 63.2016], [409.8332, 563.0363, 668.8338, 89.9516, 50.8032, 123.38, 110.4588, 308.9426, 162.8821, 633.512, 146.3062, 60.8855, 48.5169, 75.1142, 592.3035, 112.1443, 122.2408, 132.1721]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

