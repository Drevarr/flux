created: 20230603000934000
creator: Drevarr
modified: 20230705163533026
modifier: drevarr
tags: ChartData
title: 202306030009_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Cyclotechnist Farra", "Be\u00eb", "Arriasa", "Venomina The Siren", "Xyntharos", "Sakis Ranger", "Smol Gluvs", "Pamtastic", "Newtype Khan", "Xanvias Tsoli", "Johosh Of The North", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Scourge", "Druid", "Tempest", "Vindicator", "Druid", "Scourge", "Tempest", "Spellbreaker", "Holosmith", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[378, 327, 249, 1428, 461, 265, 336, 292, 722, 377, 498, 1038, 1031, 1195, 301, 1802, 712, 553, 444, 272, 373, 232], [323, 343, 2968, 16271, 672, 331, 1012, 17674, 329, 3766, 290, 271, 511, 3401, 440, 1671, 703, 332, 423, 783, 259, 247], [398, 355, 771, 1332, 499, 466, 657, 1248, 304, 6104, 403, 237, 437, 247, 2985, 382, 363, 437, 307, 303, 814], [498, 337, 496, 1434, 381, 303, 346, 7044, 481, 393, 417, 4663, 306, 2197, 295, 1896, 321, 428, 253, 404, 255], [404, 497, 1435, 455, 1717, 641, 11935, 324, 6029, 466, 316, 427, 389, 1590, 593, 456, 243, 329, 271], [519, 299, 410, 15254, 461, 493, 397, 1848, 10941, 338, 417, 2215, 312, 1773, 234, 4301, 402], [352, 318, 363, 1301, 332, 423, 253, 347, 315, 2564, 470, 321, 476, 3064, 250, 2074, 455, 416, 437, 191, 347, 279], [173, 314, 339, 439, 431, 266, 348, 468, 8319, 310, 329, 4882, 317, 1210, 217, 3523, 410, 437, 369, 270, 319, 250], [264, 430, 258, 2414, 385, 205, 374, 328, 336, 3427, 291, 200, 428, 2099, 271, 1730, 570, 632, 432, 215, 334, 279], [189, 740, 495, 1339, 606, 225, 333, 276, 310, 318, 295, 222, 437, 1903, 263, 1648, 455, 396, 334, 222, 282, 233], [281, 379, 302, 16624, 521, 257, 297, 13079, 279, 241, 312, 3681, 298, 7256, 228, 2281, 661, 398, 298, 262, 235, 213], [300, 247, 645, 1289, 421, 179, 264, 258, 250, 249, 283, 929, 189, 1920, 250, 1617, 561, 341, 462, 916, 231, 209], [166, 233, 929, 1309, 349, 176, 349, 511, 243, 235, 330, 260, 344, 1239, 257, 1603, 327, 262, 292, 252, 214, 185], [365, 234, 132, 1256, 241, 250, 230, 262, 241, 243, 214, 159, 208, 1611, 183, 1679, 358, 299, 216, 199, 246, 183]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

