created: 20230902151000000
creator: Drevarr
tags: ChartData
title: 202309021510_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Christiana", "Leoric Von", "Leo Zoavar", "Fontaine Sadri", "Danaeryn", "Uriel Fasulo", "Banish Evil", "Wall Knot", "Banish Evil", "Veichiizh", "Unbreakable Nemesis", "Drevarr Moonwillow", "Aezlenne", "Mortuus Araden", "Govinda Ektar", "Gestern Yesteryear", "Klee Flamepumpkin", "Lurker Holystrike", "Surethang Jr", "Nose Llama", "Barrett Provencal", "Ria Zerrah", "Trodek", "San Kell", "Drac Tepes", "Frozen Chaos", "Minnie Darley", "Necrophagya", "Christiana", "Smol Gluvs", "Serene Azura", "Legoh Brave", "Pinksta", "Koisx", "Aloe Pen", "Xerox T\u00f6sen", "Xuerreux", "Liu Mira", "Jimbo The Pleb", "Elonith Requiem"];
const professions = ["Tempest", "Vindicator", "Druid", "Catalyst", "Tempest", "Druid", "Willbender", "Firebrand", "Firebrand", "Druid", "Firebrand", "Scrapper", "Virtuoso", "Harbinger", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Tempest", "Scourge", "Vindicator", "Scrapper", "Berserker", "Scourge", "Firebrand", "Dragonhunter", "Reaper", "Weaver", "Reaper", "Dragonhunter", "Tempest", "Reaper", "Dragonhunter", "Vindicator", "Mirage", "Berserker", "Berserker", "Berserker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.2195, 14.7967], [29.5545, 4.2428, 29.2317, 4.6463], [174.6316, 0.0, 33.7273, 0.0, 51.0222], [281.5222], [189.7368, 95.8485, 0.0], [33.6951, 17.2215, 237.1184, 0.0, 8.4848], [146.25, 481.6379], [8.1091, 41.2456, 22.9933, 19.6901, 96.8148, 27.9167, 63.3092, 41.9722, 52.3056, 14.6638, 51.8328, 34.2409, 38.6896, 35.0247, 70.7805, 30.2248, 43.9474, 31.7547, 72.1894], [27.6399, 3.4818, 23.0474, 27.0947, 260.3659, 51.6628, 137.9605, 45.2197, 12.7037, 306.5333], [125.5, 171.1389, 85.1293, 15.1093, 17.4307, 17.6209, 99.5432, 343.5244, 43.8579, 60.2368, 10.0, 12.3409, 33.1667, 88.3333], [122.5833, 103.5, 119.1466, 30.7042, 25.8613, 38.2986, 157.1193, 321.4512, 34.7074], [120.2432, 9.9455, 171.3596, 131.5333, 84.3662, 206.5556, 97.2639, 213.6425, 378.0, 196.1944, 86.6207, 47.5916, 51.3066], [130.06, 118.169, 259.6852, 106.0972, 273.1353, 224.8264], [0.0, 0.0, 124.0702, 73.66, 7.6761, 383.2037, 58.4167, 78.9372, 158.4583, 48.9722, 145.1983, 133.6045, 365.562, 146.9005], [64.5352, 452.037, 226.3527, 204.25, 0.0, 0.0, 55.2555, 0.0, 777.1316, 345.0566, 164.7424, 409.3889, 561.2333], [48.2568, 0.0, 54.3509, 54.6533, 0.0, 24.9074, 0.0, 68.9179, 159.2778, 195.4722, 29.8276, 16.3312, 17.9781, 71.8578, 202.0617, 184.5366, 62.0628, 111.1316, 230.0566, 151.1439, 75.4259, 292.3222], [0.1486, 33.1091, 224.4386, 309.7867, 5.9014, 409.6852, 77.7917, 228.1787, 379.3056, 71.4722, 73.0948, 159.3248, 116.1241, 117.5024, 43.5844, 325.8659], [139.3521, 869.8889, 30.6528, 96.9758, 56.8472, 0.0, 55.5948, 336.8714, 268.365, 94.0261, 124.2222, 192.878, 78.6116, 146.0377, 0.0, 251.2444], [11.8784, 141.6316, 192.0933, 0.0, 138.3148, 0.0, 213.4686, 245.5694, 94.5833, 133.1552, 26.074, 51.7956, 109.9716, 127.4856, 753.3171, 47.5521, 216.9211, 297.3019, 173.7955, 157.8333, 403.1889], [99.3514, 0.0, 143.0351, 361.42, 50.8732, 46.1667, 109.4444, 229.2029, 189.1806, 142.5556, 79.4138, 9.9196, 73.781, 153.0284, 112.7531, 594.6098, 104.081, 238.1447, 31.1887, 77.0, 9.8519, 521.3444], [222.2251, 84.7153, 751.5, 619.7572], [419.1273, 245.0877, 71.4533, 263.6197, 805.4074, 772.7778, 575.8937, 694.0833, 365.5278, 655.3362, 122.8842, 10.9343, 197.7938], [353.5833, 808.1552, 444.4887, 136.2555, 562.9479, 319.1728, 223.4634], [0.0, 142.3947, 157.2, 103.8169, 334.2407, 0.0, 558.8696, 743.6806, 68.6752, 195.1752, 270.7322, 128.963, 592.939, 331.2], [294.3704, 1352.8171, 122.4083, 1084.2368, 1198.4717, 953.5909, 1186.6296, 1090.8444], [23.6056, 117.5, 119.5694, 339.9034, 512.6528, 631.2222, 172.5086, 71.3666, 113.0511, 107.9716, 535.7737, 585.4146, 181.8793, 789.1053, 637.6981, 338.9015, 107.2037, 943.3778], [274.7331, 253.3139, 147.519, 200.6337, 1303.4024, 345.9917, 200.3026, 1261.717, 485.6515, 412.963, 704.7], [240.0, 217.2727, 1088.9474, 924.7867, 985.3662, 2593.2593, 372.7222, 886.2947, 1428.4444, 1224.3611, 711.1034], [33.0909, 582.3158, 393.3, 33.2535, 249.7963, 254.8889, 268.0628, 1235.3056, 2807.1944, 556.681, 515.1929, 699.1825, 552.0877, 96.5267], [469.2441, 601.9794, 1919.7073, 316.7471, 1332.4474, 471.5094, 1292.3333], [21.4727, 437.0, 48.0533, 360.9155, 503.9815, 58.4306, 728.7391, 1369.2917, 78.1389, 414.2586, 251.865, 302.3066, 310.3365, 329.0, 2314.9634, 352.4397], [0.0, 26.0423, 351.2593, 169.0, 584.7874, 802.4444, 1037.8056, 423.9741, 94.3055, 78.7007, 508.2299, 690.4856, 1451.7805, 322.9802, 612.4474, 791.0377, 781.8258, 193.3704, 1527.3222], [186.2026, 556.1606, 473.782, 273.251, 1964.4268, 387.8694, 1617.5, 878.6792, 1308.7121, 1013.3148, 2095.1667], [1199.7361, 2587.2222, 741.181, 322.5273, 318.708, 539.0427, 393.7202, 195.5122, 372.8479, 1800.8816, 1428.1132, 1313.6439, 0.0, 867.8667], [592.5172, 141.4051, 294.2993, 340.3839, 379.9259, 3059.3659, 498.3719, 2092.9737, 1003.4528, 854.9621, 1018.6296, 1661.4667], [353.0435, 688.6806, 300.1667, 676.1983, 110.2154, 388.2628, 695.2891, 1074.177, 121.9146, 535.2694, 1615.5921, 1228.5849, 1045.4545, 695.7778, 1487.5444], [1364.973, 40.2364, 273.6754, 12.92, 200.8592, 217.6296, 47.8472, 1854.715, 2481.6111, 6582.8611, 1182.6552, 111.045, 352.5182, 669.9336, 961.1481, 5068.0488, 476.8281], [1308.75, 819.6334, 844.0949, 961.3294, 1622.4115, 3735.8659, 1106.6909, 5064.8421, 2878.0377, 2687.2652, 1791.3889, 4692.3111], [1881.5676, 332.1636, 3973.5439, 2570.1467, 270.7606, 1918.4815, 495.4861, 1569.3382, 87.4444, 3129.6111, 1737.3793, 519.6109, 418.9124, 1271.6659, 1157.5844, 3192.4146, 1040.6298, 4296.4868, 2605.8302, 2622.7652, 3806.8333], [295.6892, 743.8182, 1057.8509, 1361.7533, 192.5211, 2479.6667, 902.7778, 2222.8551, 1271.0, 3381.1667, 643.5259, 514.283, 1312.3285, 1894.3033, 1962.1152, 3948.0, 1099.5934, 3484.3421, 2328.8868, 3447.5303, 940.7407]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

