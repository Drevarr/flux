created: 20230325172304000
creator: Drevarr
modified: 20230705163523011
modifier: drevarr
tags: ChartData
title: 202303251723_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Venomina The Siren", "Elonith Primal", "Mac Chiato", "Tika Sumiko", "Zadie Miststep", "Zefirokai", "Abigail Ryn"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.9233, 73.2105, 19.7316, 17.4168, 19.9332, 0.0, 365.9021, 34.4266, 20.0869, 50.1768], [52.2433, 19.9733, 0.0, 0.0, 19.1394, 17.736, 411.7205, 34.6371, 19.0082, 18.0835, 20.0873, 4.0186, 20.0429, 16.0944, 29.5113, 19.9064, 54.6065, 59.8423], [164.8469, 160.6027, 37.9966, 66.361, 84.7602, 340.7342, 117.9136, 92.4523], [57.3348, 76.626, 14.0616, 38.2579, 79.6446, 0.0, 730.5136, 26.7411, 116.4499, 0.0, 20.1178, 0.0, 36.4416, 40.1856, 79.6697, 79.7957, 79.7797, 119.0107], [76.1513, 66.8992, 0.0, 19.9555, 79.38, 0.0, 696.3111, 4.0006, 20.0869, 39.9427, 40.1747, 20.1178, 12.1312, 52.0694, 20.0928, 99.0196, 79.6255, 119.8632, 177.3705], [58.9582, 95.7825, 18.0835, 79.2907, 98.6958, 12.0054, 810.5345, 43.1648, 56.9287, 139.7002, 40.1747, 20.0928, 60.0586, 40.1184, 132.3144, 95.7888, 124.8978, 156.6144], [178.4242, 108.9248, 18.8395, 39.7339, 96.0498, 800.8545, 92.4358, 50.361, 104.9242, 54.7296, 3.5942, 0.0, 37.2125, 47.9136, 138.8004, 153.5514, 131.1911, 183.0312], [129.7966, 135.729, 13.5778, 59.7485, 104.4288, 9.0675, 1222.9004, 73.7486, 18.0015, 192.8578, 40.1004, 20.0429, 20.2232, 27.4714, 12.5328, 138.9085, 193.9596, 192.6718, 270.773]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

