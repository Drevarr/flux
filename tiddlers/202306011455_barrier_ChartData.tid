created: 20230601145547000
creator: Drevarr
modified: 20230705163532655
modifier: drevarr
tags: ChartData
title: 202306011455_barrier_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Maddx", "\u00c1rk\u00e1ntor", "Solus Nex", "Smol Daddy Tika", "Demon Sekhmet", "Mrs Stealth Monkey", "Zaedy Sagemist", "Tootsie Pop Rocks", "Elonith Requiem", "\u00c1rkantor", "Mac Adaymia", "Zaidy Sagemist"];
const professions = ["Scourge", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Vindicator", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[282.8453, 15.4356, 213.1897, 209.5763, 0.0, 0.0, 0.0, 378.1087, 140.3868, 88.3907, 0.0, 232.4878, 227.1268, 281.0227, 115.3566, 0.0, 0.0, 138.7118, 255.8382, 152.9244, 0.0, 243.2099, 52.617, 0.0, 187.9471, 257.6042, 0.0, 51.3469, 0.0, 199.2792, 213.7493, 0.0, 329.5167, 204.1935, 107.8333, 519.2346, 40.4667, 89.3738, 184.7162, 0.0, 189.489], [293.7736, 561.0504, 432.1373, 332.4612, 0.0, 291.2168, 0.0, 66.7308, 297.4211, 334.9953, 456.5222, 365.2539, 517.2174, 91.28, 305.4348, 262.1754, 434.7234, 34.7302, 344.8947, 95.0685, 166.5241, 0.0, 337.4565, 359.2453, 19.5263], [424.2532, 296.6359, 66.303, 337.4286, 91.3158, 134.3429, 32.1765, 66.3014, 429.0909, 0.0, 139.4725, 373.2011, 346.1235], [197.6067, 130.0, 0.0, 0.0, 51.5238, 0.0, 0.0, 149.87, 230.9167, 0.0, 155.0056, 120.1616, 223.104, 102.6796, 160.1275, 0.0, 32.8501, 140.3979, 172.6596, 204.9242, 140.8854, 159.1176, 80.506, 126.4019, 108.2, 131.407, 208.0769, 135.0171, 140.5641, 154.1813, 169.1975, 99.9323, 108.7698, 162.9931, 158.8986, 338.3951, 145.5398, 0.0, 92.6014, 100.2805], [0.0, 0.0, 167.4932, 279.727, 361.5882, 238.6026, 196.5797, 347.7949, 233.8621, 282.5833, 387.5429, 347.7949, 311.908, 380.2991, 0.0, 190.5056, 13.6762, 344.5081, 404.4848, 227.074, 517.2712, 376.7778, 347.7949, 0.0, 494.9275, 302.7679, 234.7615, 182.3118, 219.1745, 213.0471, 82.621, 0.0, 320.1562, 309.7996, 230.7432, 202.2039, 78.2061, 310.4545, 157.9191, 145.3191, 249.0104, 333.4961, 330.4839, 110.1613, 247.4638, 252.963, 196.0766, 0.0, 307.6577, 240.493, 339.1, 443.6822], [309.6972, 390.4295, 306.1081, 278.6522, 562.8947, 509.609, 558.7745, 571.2576, 201.6771, 329.6765, 280.3651, 428.7477, 73.0283, 551.6425], [975.4167, 922.7749, 209.7097, 211.6579, 817.9283, 776.3514, 1201.9145, 1017.4351, 600.6136, 883.3353, 1087.883, 574.5, 233.3906], [112.1099, 8.4313, 21.0897, 48.5909, 236.1429, 61.5654, 200.4704, 106.3621, 122.0632, 17.9091, 95.4741, 0.0, 57.1082, 98.9447, 56.22, 54.3939, 0.0, 71.9737, 49.0667, 81.3235, 91.2957, 43.6667, 34.4835, 134.1383, 172.0723, 74.6355, 46.2615, 45.8846, 1.7063, 2.2387, 3.7526, 2.3333, 9.4559, 0.0, 3.6637, 0.0, 13.5541, 258.7927, 72.4493, 4.7781, 0.0, 0.4583, 2.217, 3.5164, 2.9858, 1.1321, 5.5976, 8.8814, 0.0, 0.8205, 0.6047, 0.7391, 1.9643, 5.5538, 0.0, 5.8353, 3.6761, 0.0, 3.7419, 0.0, 3.5263, 1.3913, 0.2941, 0.3359, 1.4444, 10.1705, 3.791, 0.4103, 5.0455, 1.7164, 0.0, 0.4909, 0.0, 0.0, 7.0993, 9.0256, 0.0, 1.2625, 1.3046, 11.6083, 2.6148, 6.4516, 0.0, 0.0, 1.9722, 6.7664, 0.0, 3.2216, 2.6918, 6.3609, 1.2353, 2.4444, 2.3524, 4.0789, 6.5767, 8.3938, 5.7614, 6.268, 3.2188, 143.0516, 42.7362, 23.6034, 180.4407, 53.725, 129.9355, 44.6667, 93.25, 0.0, 42.6981, 113.19, 59.7255, 74.7205, 401.6056, 96.75, 160.8372, 0.0, 42.987, 61.1585, 216.9118, 60.7216, 83.7216, 57.9091, 280.6605, 13.2766, 54.8571, 95.5176, 281.7083, 27.6486, 254.8378, 8.0244, 493.2295, 26.0789, 349.925, 29.2841, 69.3168, 280.8519, 130.6018, 6.0169, 0.0, 6.5244, 8.5869, 7.4918, 1.5217, 5.25, 0.0, 1.534, 14.1304, 6.641, 9.4194, 1.037, 0.0, 0.0, 5.7422, 20.2267, 77.4384, 55.1739, 27.6389, 432.6173, 59.6379, 153.3761, 24.2, 116.7586, 136.5641, 73.3636, 81.7561, 178.3168, 172.6, 202.662, 190.3725, 131.5936, 146.2889, 105.5183, 235.875, 27.6296, 57.6304], [339.2754, 66.303, 188.0, 276.9714, 0.0, 48.8219, 316.1381, 0.0, 63.2088, 435.736, 248.7096, 149.2185, 607.6538, 477.7447, 215.9864, 292.5222, 259.3882, 375.6965, 123.529, 757.1026, 491.4857, 346.5513, 246.6274, 205.972, 171.8571, 115.3736, 0.0, 217.3077, 559.339, 273.8889, 286.3256, 37.3333, 415.8393, 433.8692, 287.4194, 341.6899, 145.5572, 121.0769, 787.1364, 487.5522, 234.2115, 242.4364, 16.3137, 0.0, 338.9433, 491.95, 284.3553, 305.6917, 255.8811, 342.6667, 141.5294, 60.9474, 473.5278, 486.5981, 289.9868, 126.1138, 142.4041, 362.3669, 250.6912, 170.319, 124.2632, 389.4444, 178.0518], [779.7329, 676.9649, 432.9394, 157.0, 216.9079, 476.2333, 64.6471, 138.4932, 592.7756, 0.0, 157.0, 715.4944, 649.8778, 633.0644, 797.3134, 479.4295, 421.1757, 191.1304, 736.1735], [470.1841, 538.414, 273.697, 40.3214, 341.6711, 279.5619, 298.8529, 148.3562, 550.8585, 470.4167, 62.033, 621.5978, 250.6938, 642.7475, 665.8715, 469.7852, 350.9054, 196.3478, 0.0, 705.0719, 578.346, 662.9872, 547.3939, 352.8125, 464.8824, 618.2619, 485.3645, 468.6667, 505.2823], [824.7277, 791.7077, 594.2282, 425.0676, 202.6087, 379.8913, 894.9703, 786.8685, 520.5319, 325.5147, 705.0099, 450.0935, 576.7083, 832.9743, 886.6656, 1292.8205, 985.2538, 481.6875, 721.0782, 997.7812, 877.504, 1057.4311, 462.7391, 1046.6296, 948.5841, 751.4762, 458.75, 1071.2432, 636.5106, 706.4632, 620.1775, 860.3294, 926.559, 1185.6923, 285.4444, 817.8857, 522.2692, 781.6061, 586.514, 471.8571, 599.9831, 46.7096, 520.6279, 447.8644, 774.7778, 710.3226, 1065.7, 445.6429, 1029.9677, 430.8261, 1187.0156, 239.3478, 47.4348, 1015.608, 694.8631, 557.6222, 653.6934, 533.6413, 623.4286, 495.9091, 1320.6842, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

