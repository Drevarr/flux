created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Glorious Gluvs", "Dakk Regia", "Aira Draugr", "Tootsie Pop Rocks", "Edgy Nekrodancer", "Jimbo The Pleb", "Charr Surethang", "Mistwalker Cael", "Belvyn Brightblade", "Sirius Quack", "Xanvias Einzbern", "Johosh The Mighty", "Zaedy Zae", "Rahani Sunray", "Tegan Parker", "Vee U", "Venomina The Sly", "Be\u00eb", "Name Is What", "Nina Chan Fanboy", "Sygaldry Verdandi", "Keypek The Drunk", "Aronorf Xideliesi", "Sub Train", "Yummy Kiwi", "Crusader Siolith", "Bella Sassy", "Drevarr Moonwillow", "Newtype Khan"];
const professions = ["Druid", "Berserker", "Chronomancer", "Herald", "Scrapper", "Harbinger", "Berserker", "Berserker", "Vindicator", "Firebrand", "Reaper", "Berserker", "Berserker", "Druid", "Chronomancer", "Tempest", "Tempest", "Druid", "Scourge", "Scourge", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.6786, 0.0, 1.5385, 10.7278, 0.0, 1.8795, 5.4194, 3.0135, 1.5697, 3.6015, 1.8009], [2.4279, 21.4594, 0.0, 2.4864, 0.0, 0.0, 0.0, 0.0, 4.2663, 0.0, 0.0, 2.1567, 0.0, 0.0, 0.6174, 0.2871, 0.0, 2.3256, 1.8144], [4.3265, 0.0, 4.2326, 4.3006, 0.0, 0.0, 6.71, 0.0, 1.0185, 3.2627, 0.7749, 1.9803, 4.5447, 2.4624, 1.8354, 5.208], [0.5765, 24.2284, 0.0, 4.2024, 3.5627, 0.6178, 2.2052, 3.3766, 3.7278], [0.2517, 9.1722, 0.0, 3.537, 4.3544, 3.1838, 0.0, 7.1242, 0.0, 1.428, 4.5346, 3.0709, 0.0, 0.9776, 0.0174, 5.4432, 0.2736, 7.056], [10.079, 3.0175, 0.0, 3.1369, 8.781, 2.6448, 0.7665, 10.3964, 8.4952, 4.2745, 3.773, 3.2538, 0.8208], [0.0, 30.4586, 0.0, 4.5176, 4.3544, 8.7912, 0.0, 0.0, 4.639, 0.0, 0.0, 2.3779, 2.4969, 0.0, 0.0, 0.0, 0.0, 3.6252, 0.0], [4.9938, 46.5531, 0.0, 2.8716, 2.2228, 7.8646, 0.0, 0.0, 3.645, 0.0, 1.512, 3.0415], [2.1193, 19.0366, 1.6077, 2.8366, 2.1619, 4.4194, 4.4574, 5.9141, 4.1834, 3.2376, 0.9975, 6.4148, 0.9758, 1.932, 1.9551, 2.2794, 7.3008, 2.0976, 4.3008], [0.0, 43.9572, 3.4155, 9.7356, 1.0353, 5.3222, 0.4223, 5.5744, 11.5976], [1.827, 26.6512, 1.4145, 5.0429, 3.2581, 3.1838, 3.8709, 4.3756, 5.3846, 3.0096, 2.2155, 6.1936, 4.9364, 2.9946, 2.3496, 2.2185, 5.4864, 1.8468, 2.688], [3.0288, 34.612, 0.8004, 10.2609, 3.654, 5.3698, 3.7067, 1.9381, 7.0828, 8.3904, 0.7455, 4.2581, 2.87, 3.6949, 5.1964, 2.5491, 7.6464, 1.8924, 10.0464], [3.4429, 51.918, 2.2356, 5.8133, 6.1509, 11.1434, 5.4662, 4.8152, 10.9349, 5.3352, 1.6275, 7.742, 4.9938, 3.4293, 1.9379], [1.7783, 60.9171, 0.0, 14.6734, 1.7661, 5.9875, 0.0, 0.0, 15.2426, 0.0, 1.3125, 16.0923, 2.0951, 0.966, 0.7546, 1.0962, 5.5296, 0.0, 3.3936], [51.0527, 3.2016, 7.9145, 5.2374, 5.0609, 8.0233, 3.6364, 9.4023, 2.964, 2.8665, 7.4655, 8.8683, 4.2987, 5.4537, 3.654, 2.4168, 3.3264], [66.1089, 0.0, 0.0, 0.0, 6.7003, 6.2873, 0.0, 7.0828, 32.6496, 3.297, 7.0231, 0.6027, 5.6752, 2.0065, 0.0, 0.0, 0.0, 0.0], [0.0, 62.3016, 0.0, 7.6694, 4.263, 6.8191, 0.0, 8.8639, 0.9576, 21.672, 6.4148, 2.296, 19.0544, 1.9551, 1.0614, 1.3824], [1.6808, 65.5897, 0.3519, 16.0742, 8.0084, 8.0309, 0.0, 0.0, 7.6627, 18.4149, 4.5633, 5.5303, 5.7281, 2.0793, 6.7392, 2.109, 4.368], [1.2018, 50.5335, 2.2908, 9.5605, 7.9779, 6.0588, 3.7067, 5.3147, 12.426, 6.2472, 3.99, 8.848, 7.8064, 5.5062, 5.5052, 3.0015, 12.0528, 1.425, 4.6032], [2.6796, 36.6887, 10.3309, 11.7842, 16.3706, 4.3401, 4.6953, 9.9822, 4.4232, 3.2865, 13.3826, 8.8109, 2.5116, 2.7269, 4.1934, 11.0592, 5.472, 7.0896], [71.1277, 0.3864, 21.1521, 5.9986, 6.1776, 1.4545, 10.6294, 2.568, 11.514, 9.45, 18.7467, 11.2791, 4.8542, 4.8363], [0.4385, 62.3016, 2.4426, 7.004, 9.1046, 7.4606, 10.557, 2.9371, 12.0946, 6.6576, 5.4915, 15.0969, 6.4288, 2.4874, 3.0527, 2.1315, 9.936, 5.5404, 10.3824], [5.3836, 69.224, 2.2563, 14.6033, 8.9523, 7.817, 4.9266, 4.3756, 18.3905, 6.2244, 0.5145, 12.719, 5.3382, 6.3514, 3.1385, 1.7661, 17.7552, 0.9576, 13.2384], [0.9988, 85.6647, 15.9341, 6.1204, 5.5123, 1.5953, 5.2148, 14.6627, 5.8368, 6.048, 14.0462, 5.74, 4.6368, 7.9919, 3.2973, 11.3616, 5.7798, 4.4688], [1.0069, 48.6299, 1.0281, 20.0314, 3.9585, 0.0, 11.7535, 5.5345, 7.6627, 20.0868, 9.135, 16.2029, 10.1885, 2.3426, 4.1846, 1.4442, 6.7824, 13.0644, 23.4864], [5.4729, 78.3962, 3.8709, 24.3389, 10.5966, 4.2055, 18.8149, 5.6144, 22.6567, 22.12, 10.4181, 2.6565, 7.7175, 1.8531, 10.7136, 7.2162, 6.72], [1.8189, 90.5104, 0.6003, 24.1288, 7.7648, 7.1518, 11.6127, 7.952, 11.6804, 11.3088, 8.4315, 13.3826, 11.0208, 7.9695, 9.7927, 10.0746, 10.6704, 11.0808, 10.3488], [2.0462, 102.4515, 0.759, 25.0393, 14.9814, 2.6136, 12.5276, 12.9271, 21.3727, 12.7908, 9.135, 24.332, 7.0602, 7.1242, 8.455, 0.8439, 22.8528, 5.4378, 1.5456], [5.6028, 101.5862, 1.0212, 22.5879, 11.8451, 10.6682, 4.2463, 10.1698, 14.9526, 4.56, 9.7335, 22.3965, 13.2307, 9.8532, 5.951, 8.7, 17.928, 1.7328, 20.3952], [17.7178, 220.6515, 7.797, 50.779, 51.1865, 23.7125, 27.3526, 30.6094, 24.5784, 11.361, 37.2169, 28.5565, 22.1456, 12.468, 44.3664, 12.312, 20.7648]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

