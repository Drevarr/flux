created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Salty Pam", "N\u00eec\u00f4le", "Kurtis Ruhr", "Astraea Lumena", "Elonith Primal", "Tegan Parker", "Gestern Yesteryear", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Spellbreaker", "Vindicator", "Firebrand", "Tempest", "Tempest", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[133.3, 114.3293, 356.6406, 79.5775, 115.6292, 167.956, 111.1091, 106.0349, 616.4286, 101.9624, 220.24, 170.6226, 125.0, 570.2785, 81.5962, 0.0, 219.0075, 10.4474], [1734.4872, 290.6101, 1610.7143, 1726.9174], [0.641, 799.3646, 2970.8571, 3108.8624, 26.0156, 2131.1042], [669.2344, 203.2535, 302.618, 228.0989, 406.7636, 254.6395, 461.7143, 288.1285, 281.56, 355.4214, 153.8462, 266.557, 56.4231, 20.4583, 166.8134, 93.886, 934.0175, 1230.1714, 1051.9359, 625.7597, 204.3514, 258.7463, 290.3577, 25.2258, 248.1831, 539.2254, 535.0976, 158.9548], [2183.2171, 64.4857, 657.1892, 805.2585, 832.1971, 3.5161, 353.5423, 2274.3239, 1434.3171, 759.3051], [2502.6667, 537.639, 1858.6122, 1907.5688, 1.5179, 14.2812, 781.5417, 42.6744, 888.8235, 558.4211, 257.1739, 1066.2121, 952.3265, 413.1758, 933.3473, 2395.5781, 780.2113, 774.0, 129.5714, 600.1273, 1032.3837, 772.9643], [2692.6154, 507.7292, 1673.6531, 728.6147, 0.0, 20.125, 12.4375, 1506.2917, 1052.3412, 1523.807, 209.5435, 1243.1515, 1015.102, 808.1242, 981.5269, 1733.3125, 685.0423, 751.1798, 510.3187, 473.0364, 165.1163, 836.5714, 900.6395, 616.28, 633.8616, 261.4615, 563.2278, 236.7885, 478.9925, 360.2632, 2423.0877, 2242.6952, 2040.1667, 1531.6434, 10.8, 776.3784, 665.9317, 734.5985, 72.8387, 278.5845, 1307.6056, 878.8049, 635.9944], [958.2094, 2564.102, 1949.6606, 2.5556, 263.6786, 23.1094, 1048.25, 19.907, 1339.8588, 1231.4561, 358.0652, 2875.0606, 1559.1633, 731.4091, 1992.4132, 2806.2188, 1140.1549, 1891.5843, 785.5604, 2046.8545, 938.314, 4350.0714, 1360.9906, 1068.28, 2136.6226, 299.3846, 2313.9873, 2970.0833, 882.806, 710.5702]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

