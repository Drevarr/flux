created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Venport", "Pet Pirate", "Conky Jr", "Geradenil", "Herm E Licious", "F\u00f9gly", "Kittendoo", "Emobilized", "Rapiorel", "Drevarr Moonwillow", "Warrior W Warrior", "Twinks R Us", "A\u00fcrora Windrunner", "Heymerino", "Heymerino", "Wall Knot", "Gestern Yesteryear", "Aronorf Xideliesi", "Mother Ship", "Free H\u00e4nd", "My Heel Your Sack", "Ain Sof Aur", "Govinda Ektar", "Synomi\u00f1 Spyce", "Aronorf Xideliesi", "Luke The Knight", "Lost Uber Driver", "Rapiorel", "Free H\u00e4nd", "Legoh Brave", "Bae Ken", "Elonith Requiem", "Elonith Requiem", "Legacy Of Mathus", "No Reserv\u00e9", "Shaca Booey", "Ateriuz", "Charr Surethang"];
const professions = ["Spellbreaker", "Specter", "Druid", "Herald", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Vindicator", "Dragonhunter", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Virtuoso", "Firebrand", "Firebrand", "Guardian", "Tempest", "Renegade", "Dragonhunter", "Guardian", "Vindicator", "Scourge", "Firebrand", "Berserker", "Herald", "Willbender", "Vindicator", "Tempest", "Reaper", "Reaper", "Scourge", "Berserker", "Vindicator", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[119.5699], [42.5102, 106.3793, 22.605], [42.8387, 36.0233, 7.8367, 24.2155], [188.2581, 43.8243, 118.9388, 183.8707, 8.3193], [24.3453, 2.7671, 47.6588, 43.0517, 0.0, 4.5484, 11.1031, 4.032, 35.6129, 36.3927, 27.0659, 0.0, 64.8788, 33.3871, 18.3385, 66.2653, 18.0862, 10.4538], [267.1935, 100.2506, 96.3469, 61.4828, 182.4202], [0.0, 48.9318, 19.8793, 25.2593, 68.1613, 30.2784, 14.4306, 35.28, 36.3516, 0.0, 40.1515, 80.9677, 94.1266], [0.0, 58.0206, 50.968, 17.6667, 151.7709, 45.4615, 0.0, 13.697, 186.0, 49.137], [11.1646, 37.9614, 12.8448, 39.7407, 87.6129, 63.299, 5.2633, 16.871, 120.8327, 91.8352, 0.0, 82.4545, 54.4839, 9.8966, 10.102, 30.6121, 54.2605], [1212.4021], [65.8165, 102.4814, 97.2226, 101.0862, 322.8519, 135.4032, 95.4536, 49.4947], [145.6129, 194.1886, 282.1633, 164.5603, 153.395], [96.2662, 40.1739, 102.8872, 19.1207, 37.6667, 0.0, 79.2165, 46.0854, 125.2, 214.8791, 0.0, 59.1212], [59.3201, 56.7174, 30.8012, 67.4483, 10.7778, 13.7581, 73.2268, 53.089, 62.7527, 46.5091, 288.5165, 0.0, 0.0, 466.0, 12.1447, 10.0612, 13.6034, 126.1008], [60.1724, 48.963, 23.7419, 43.433, 7.0463, 195.7097, 167.6545, 145.3956, 0.0, 15.7879, 199.3871, 129.1731, 67.7551, 31.5345, 25.4034], [560.8273, 187.3199], [112.4676, 28.646, 121.0712, 58.3276, 73.1481, 0.0, 155.3918, 5.2776, 115.7527, 131.0364, 130.8132, 0.0, 230.7273, 289.6129, 74.907, 101.1633, 39.7328, 13.4622], [34.2914, 91.0311, 135.1513, 59.7586, 58.5185, 48.5323, 158.4536, 53.8505, 32.8925, 406.6145, 225.0659, 3.7385, 58.9394, 69.0323, 23.5711, 9.7959, 27.0517, 121.0672], [741.3094, 280.7919], [50.0072, 47.323, 159.2611, 285.8621, 59.1852, 9.9677, 43.3814, 20.9288, 186.4194, 342.7527, 230.9451, 6.1077, 167.4242, 318.5484, 79.8114, 129.0612, 142.6552, 46.4622], [454.9748, 358.7422, 692.5556, 837.1129, 815.2887], [479.8273, 86.354, 445.3205, 185.8103, 1257.2963, 265.0484, 343.5979], [128.0288, 115.882, 20.178, 595.5556, 458.1129, 359.0, 18.5872, 139.2366, 417.5673, 144.9121, 0.0, 224.7879, 319.0645, 140.5788, 170.6735, 45.5517, 176.8908], [317.7266, 154.6025, 108.181, 54.8966, 374.5185, 150.7097, 206.1546, 83.0108, 448.4109, 696.5055, 40.5806, 107.907], [194.4911, 215.6882, 569.5709, 451.956, 0.0, 775.2121, 328.0968, 319.0724, 322.3878, 423.0259, 61.8908], [226.7953, 87.5, 290.2593, 296.2581, 138.3711, 116.8648, 91.3548, 986.2691, 542.2637, 0.0, 610.1818, 287.1613, 108.9561, 174.7959, 123.5948, 84.8487], [205.8957, 0.0, 194.8694, 1176.0517, 0.0, 1548.7903, 584.9897, 1.8007, 343.8495, 1542.5709, 1753.8571, 0.0, 1067.7576, 1042.7419, 123.6537], [1536.9273, 2715.4505, 0.0, 2180.8485, 825.8387, 686.8708, 230.4286, 647.4052, 358.3109], [952.5863, 55.5155, 1566.1543, 591.2241, 1501.1852, 1860.0484, 397.548, 1072.7742], [795.3264, 37.8448, 92.0107, 454.4194, 1183.3964, 2191.1538, 0.0, 939.1212, 715.5484, 752.5917, 628.4082, 436.1379, 67.6555], [1494.3858, 699.6552, 963.2593, 1154.7097, 916.9175, 565.79, 382.0108, 1429.4255], [448.4568, 308.0248, 549.1424, 84.7241, 634.5926, 266.0968, 828.1443, 103.274, 413.8065, 1040.5673, 1013.5934, 33.6615, 792.3636, 887.129, 486.5478, 511.9388, 319.3017, 357.1681], [0.0, 499.3509, 2575.4036, 1374.6034, 2375.7778, 1495.7419, 2216.0309], [357.5409, 782.9032, 2423.0727, 2394.1648, 2668.0909, 2019.129, 669.832, 1687.2653, 547.9914, 668.7983], [632.3201, 1162.2267, 1528.3858, 2541.6379, 2416.037, 1233.0323, 1933.701, 1158.032, 682.5161], [198.554, 20.4441, 1286.4006, 165.1897, 1219.4815, 349.9839, 1954.0619, 203.6975, 391.5591, 2180.4218, 1608.0, 0.0, 79.1818, 739.3871, 610.8786, 881.2041, 302.5259, 373.3277], [798.7266, 1584.3168, 2602.5816, 1088.1379, 3286.0, 567.0, 1214.5773, 24.6797, 1273.914, 1197.3345, 2255.5934, 27.1538, 268.1515, 1085.7494, 131.2041, 80.9741, 1559.5126], [797.3417, 320.9037, 2103.4273, 1354.7759, 4428.7778, 1979.871, 2217.3711, 1054.9181, 752.5269, 3017.1491, 4732.7912, 0.0, 2553.7576, 1370.9677, 661.1059, 421.6327, 1437.4224, 1787.5378], [383.3489, 262.2671, 3771.1513, 224.4655, 5835.037, 2743.6452, 2947.7629, 1383.8185, 2184.9273, 4370.2198, 2571.9697, 5180.2258, 926.863, 522.3061, 91.0172, 4.4286]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

