created: 20230330095927000
creator: Drevarr
modified: 20230705163523458
modifier: drevarr
tags: ChartData
title: 202303300959_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Tootsie Pop Rocks", "Flanneryflame", "O Noah Bear", "Sofya De Nova", "Lord Erin The Wise", "Mistwalker Caelon", "Xyntharos", "Khailerian", "Fribble Bibble", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Weaver", "Herald", "Weaver", "Weaver", "Vindicator", "Vindicator", "Herald", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 125.0578, 7.889, 70.5099, 1456.7744, 31.4524, 27.1524, 0.0, 61.1005, 26.5075, 0.0, 29.9037, 29.2032], [0.0, 237.695, 53.268, 43.8877, 1936.5504, 15.9894, 127.6962, 22.9838, 101.2752, 109.7366, 0.0, 86.48, 0.0, 27.8208], [2466.4848, 121.9702, 34.1617, 64.3752, 102.6605, 0.0, 4.0498, 89.6525, 44.2728, 113.9904], [3218.8608, 102.0229, 31.8933, 88.7558, 178.5893, 131.1898, 21.9629, 129.72, 78.7829, 181.44], [49.611, 304.5403, 3133.8096, 82.9409, 132.4986, 0.0, 153.8296, 128.6626, 12.0701, 5.4437, 101.6375, 29.0044, 148.7232], [4.752, 202.0164, 31.786, 263.7715, 3504.5456, 68.103, 131.3904, 3.9892, 105.029, 78.961, 4.0349, 8.0995, 87.2437], [17.1936, 216.7506, 14.099, 152.0474, 3561.2464, 28.1295, 89.3996, 42.849, 79.7103, 97.6061, 3.036, 87.185, 49.0123, 84.3264], [0.0, 225.3963, 45.379, 258.759, 3753.1568, 62.3126, 98.4504, 29.7878, 82.6654, 78.4555, 12.0701, 6.035, 63.3325, 17.851, 119.7504], [1.656, 370.0376, 4987.4896, 141.5029, 349.0403, 147.096, 410.3721, 207.6797, 29.4192, 35.5397, 236.88, 234.9013, 238.8096], [537.371, 83.536, 581.233, 8995.8, 200.5913, 285.6848, 27.4387, 309.3365, 171.5688, 195.6375, 95.5271, 329.2992], [52.583, 803.8038, 39.307, 723.4781, 9091.7552, 167.8887, 220.5437, 126.2993, 388.6474, 283.7765, 41.0314, 212.6162, 144.3123, 299.0016], [43.7357, 922.1642, 169.625, 660.7655, 11612.76, 192.0373, 366.6494, 162.4253, 474.5875, 374.3626, 414.1875, 63.4009, 403.0272]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

