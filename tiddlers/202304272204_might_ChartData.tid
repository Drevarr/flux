created: 20230427220456000
creator: Drevarr
modified: 20230705163527041
modifier: drevarr
tags: ChartData
title: 202304272204_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Bell Delinger", "Solikai", "Rylov", "Report Me Today", "Evil Stepmother", "Al Darasuum", "Rhyce", "Sole Tempesta", "Binkety Bonk", "Mysterious Nature", "Chio Slayer", "Zadie Miststep", "Mistwalker Caelon", "Red Date Sayaccho", "Mac Aaroni", "Koralia Danai", "Johosh The Great", "Klenga", "Drevarr Moonwillow", "Clem Storage Xviii", "Morv\u00fcs", "Xkaet"];
const professions = ["Scrapper", "Tempest", "Catalyst", "Spellbreaker", "Firebrand", "Firebrand", "Herald", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Herald", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 7.7112, 7.6894, 22.1206, 3.1605, 7.2946, 26.8013, 3.2805, 0.9572, 2.6875], [22.9086, 13.5554, 1.7712, 2.4786, 0.0, 10.557, 0.0, 3.4272, 0.0, 25.447, 1.3696, 0.0, 6.4973], [8.9012, 9.3122, 30.5197, 2.6789, 11.9438, 16.2432, 2.3328, 6.0166, 11.5989, 0.2419, 1.7734], [39.8825, 54.8826, 8.1043], [22.308, 0.0, 3.3264, 0.0, 2.8694, 9.9144, 10.985, 4.4744, 3.3617, 0.0, 0.0, 19.3186, 5.9558, 1.0206, 5.9254, 3.0176, 13.1846, 0.0], [0.7342, 12.5572, 4.7859, 13.9478, 36.6826, 4.9086, 5.5608, 9.5715, 18.265, 0.0], [3.4012, 16.9946, 35.7561, 39.7967, 12.3284, 4.5209, 0.0, 0.0, 1.6038], [56.3706, 2.219, 5.7456, 6.3342, 3.3477, 2.754, 20.1392, 20.23], [1.3524, 25.3638, 6.0802, 2.1643, 45.887, 1.6038, 7.6119, 9.4771, 14.6362, 3.4381], [33.6126, 3.6551, 0.5049, 0.0, 2.2848, 10.7806, 4.0748, 19.1285, 24.8496, 24.6355, 0.0, 4.6036, 0.0, 2.2982], [8.7713, 53.9708, 8.5785, 15.6312, 36.9533, 12.0285], [56.199, 0.0, 0.0, 6.9401, 1.4518, 4.7277, 8.8651, 9.5676, 2.8207, 15.4678, 1.9264, 5.1302, 12.1824, 0.0, 6.7003, 3.0648, 7.8624], [15.3582, 38.6402, 7.7616, 5.1775, 13.3566, 35.4807, 49.1436], [10.6304, 0.0, 90.1017, 95.2037], [73.2732, 1.5437, 0.0, 6.5821, 2.6816, 0.0, 19.3684, 21.0868, 3.7094, 10.9771, 1.4147, 6.5731, 45.0749, 1.9683, 19.964, 28.5729, 3.8707, 1.0118], [43.329, 18.6206, 3.3264, 6.1827, 5.346, 29.9268, 26.7881, 12.4236, 2.4343, 14.7193, 1.5802, 18.036, 30.456, 0.3159, 15.4516, 12.4476, 18.023, 1.817], [41.0982, 18.1382, 4.4784, 7.7387, 7.037, 15.5601, 30.7388, 10.472, 13.9104, 9.896, 7.4347, 27.575, 28.4256, 3.7665, 10.3011, 23.1978, 19.3536, 1.7843], [47.4474, 18.6689, 4.8816, 10.176, 0.5636, 29.7891, 29.1971, 3.7128, 9.0804, 28.4407, 6.3662, 19.3186, 31.945, 3.4506, 15.406, 18.2471, 26.2483, 0.0], [31.4886, 22.0457, 6.1056, 6.5132, 6.4904, 8.8587, 32.1842, 20.6584, 9.3509, 31.5176, 3.3562, 23.8877, 53.6026, 16.2324, 5.6519, 8.7699, 17.5392, 2.7635], [0.0, 22.5148, 12.0943, 52.5571, 5.5835, 37.1141, 76.4784, 21.6756, 23.2458, 40.549, 28.9094, 5.6576], [109.9098, 42.4512, 13.968, 15.6703, 16.2089, 26.9433, 88.6512, 32.4156, 23.4545], [124.4592, 20.2464, 36.8623, 0.9394, 56.6865, 117.7519, 50.932, 16.7698, 65.5301, 9.9631, 46.573, 111.672, 4.6656, 21.8328, 54.2225, 29.6352, 1.9802]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

