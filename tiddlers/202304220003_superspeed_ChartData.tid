created: 20230422000344000
creator: Drevarr
modified: 20230705163526268
modifier: drevarr
tags: ChartData
title: 202304220003_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Klee Flamepumpkin", "Demon Sekhmet", "Tegan Parker", "Solo Bloodborn", "Blancooo Padreee", "Burnockholmes", "Domina Flagbringer", "Venomina The Siren", "Smol Daddy Tika", "Zadie Miststep", "Xanvias Einzbern", "Elonith Primal", "Skye Nightroad", "Drevarr Moonwillow"];
const professions = ["Weaver", "Berserker", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Spellbreaker", "Tempest", "Berserker", "Tempest", "Berserker", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.457, 0.475, 0, 0, 0, 0.133, 0.191, 0.434, 0.434, 0.443, 0, 0, 0, 0, 0.271, 0, 0.277, 0, 0.149, 0.255, 0], [0.124, 0.188, 0, 0.778, 0.836, 0.156, 0.471, 0, 0, 0, 0, 0.371, 0, 0.942, 0, 1.128, 0.222], [0.127, 0.351, 0.86, 0.6, 0.306, 0.208, 0, 0.541, 0.297, 0.273, 0.561, 0.411, 0.338, 0.415, 0, 0.363, 0, 0.603], [0, 0.706, 0.735, 0.567, 0.706, 1.122, 0.195, 0.478, 0, 0.213, 0, 0, 0.626, 0, 0.495, 0.455, 0.936, 0.406, 0.972, 0.462, 0, 0.62, 0, 0], [0.441, 0.704, 0.766, 0.566, 0, 0.944, 0.691, 0.958, 0.733, 0.111, 0, 0, 0.722, 1.117, 0.681, 0.456, 0.823, 0.844, 0.99, 0.462, 0.692, 0.465, 0, 0.129], [0, 1.268, 0.588, 0.299, 0.227, 1.18, 0.234, 1.21, 0.187, 0.591, 0.096, 0.29, 0.844, 0.59, 0.972, 0.532, 1.201, 0, 0.548, 0.211, 0.208, 0, 0.558, 0], [0.328, 0, 0.784, 1.135, 0, 0.566, 1.179, 0.954, 0.707, 0.388, 0.397, 0, 0, 1.392, 0.409, 0, 0, 0.797, 0.572, 0.519, 0.518, 0.605, 0, 0.483], [0.948, 1.08, 0.68, 0, 0.939, 0.882, 0.83, 0.564, 0.389, 0.172, 0, 0.433, 0.59, 0.595, 0.547, 0.561, 0.484, 0.573, 0.139, 0.827, 0.713, 0, 0.874], [0.718, 0, 0.792, 0.834, 0.566, 1.17, 0, 0.478, 0, 0.221, 0.318, 0, 0.653, 0, 0.495, 0.454, 0.942, 0, 0.551, 1.128, 0.461, 0.693, 0.527, 0.85, 0], [0, 1.014, 0.903, 0.675, 0.847, 0.998, 0.748, 0.563, 0.382, 0.577, 0.433, 0.662, 0.489, 0.273, 0.564, 0.527, 0.605, 0.7, 0.414, 0.465, 0.255, 0.926], [0.231, 1.585, 0.786, 1.132, 0.74, 0.424, 0.419, 1.074, 0.557, 0.553, 0, 0, 0.935, 0.462, 0.409, 0.455, 0.707, 0, 0.847, 1.128, 0.231, 0, 1.288, 0, 1.203], [0.918, 1.262, 0.932, 1.019, 0.615, 0.961, 0.934, 0.787, 1.122, 0.408, 0.19, 1.726, 0.433, 0.59, 0.827, 0.7, 0.757, 0.376, 0.548, 0.677, 0.241, 1.245, 0.567, 0.254, 0.858], [0.165, 1.48, 1.119, 1.219, 0.34, 1.237, 1.398, 1.817, 1.119, 0.481, 0.647, 0, 0.735, 0.59, 0.794, 0.864, 0.809, 0, 0.704, 1.013, 0.416, 1.039, 1.117, 0.255, 0.878], [0.394, 2.538, 1.664, 2.433, 1.754, 2.998, 2.335, 2.288, 1.871, 1.2, 0.755, 0, 0.873, 1.337, 1.428, 0.747, 1.412, 1.335, 1.069, 1.106, 0.831, 1.121, 0.829, 2.413]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

