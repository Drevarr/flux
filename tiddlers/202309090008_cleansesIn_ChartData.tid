created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Graumas", "Seiker Novus Terra", "Mew Mew", "Permanent Dawn", "Mew Mew", "Graumas", "Air One Com", "Heals For Daddy", "Cupi Cupita", "Raziel Umbra", "Gestern Yesteryear", "Koralia Danai", "Tribal S", "Lucky Luprac\u00e1n", "Oo Dads Mad", "J\u00e2sm\u00eene", "Snugglies Wugglies", "Loganlek", "Wren Raveness", "No Reserv\u00e9", "Glorious Gluvs", "Tegan Parker", "Legoh Brave", "Firebrand pl1-2628", "Trooobi", "Jobless Jennifer", "Philip Poundhouse", "Xanvias Einzbern", "Mort\u00e4rion", "K\u00f4sair", "High Sorcer Baradun", "Lord Erin The Wise", "Rina Of Theros", "Th\u00f6rfinn Stormcloak", "Sofya De Nova", "Solus Luxes", "K\u00e2 \u00d4tik R\u00e6j", "Elon Illusionblade", "Regis Hawkesburne", "Brutal Araden", "Jimbo The Pleb", "Daphne Agla\u00e9", "Sub Train", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Mistwalker Cael", "Black Raspberry Pie", "Be\u00eb", "Mister Jekyll", "Kahlyanne"];
const professions = ["Deadeye", "Tempest", "Scrapper", "Weaver", "Holosmith", "Thief", "Firebrand", "Druid", "Herald", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Scrapper", "Berserker", "Tempest", "Virtuoso", "Berserker", "Chronomancer", "Vindicator", "Berserker", "Tempest", "Tempest", "Firebrand", "Herald", "Berserker", "Herald", "Berserker", "Scrapper", "Spellbreaker", "Tempest", "Weaver", "Reaper", "Berserker", "Tempest", "Firebrand", "Berserker", "Chronomancer", "Berserker", "Renegade", "Berserker", "Reaper", "Firebrand", "Scrapper", "Chronomancer", "Herald", "Chronomancer", "Reaper", "Reaper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1855, 0.3299], [0.2097, 0.1113, 0.6522, 0.0, 0.1119, 0.1326, 0.1022, 0.0293, 0.0859, 0.0], [0.4348, 0.1828, 0.1436, 0.1358, 0.0634, 0.0391, 0.0667, 0.0, 0.0871], [0.0, 0.0968, 0.0556, 0.1957, 0.0, 0.1642, 0.1215, 0.1048, 0.0341, 0.0547, 0.0667, 0.0, 0.1062], [0.1532, 0.4075], [0.413, 0.0, 0.1493, 0.1934, 0.1074, 0.0341, 0.1172, 0.1444, 0.0556, 0.1456], [0.0, 0.1129, 0.2251, 0.3043, 0.097, 0.1271, 0.0621, 0.0488, 0.0625, 0.0667, 0.0, 0.099], [0.0, 0.2258, 0.3169, 0.2174, 0.0, 0.1418, 0.0884, 0.0957], [0.0, 0.1532, 0.4217, 0.0784, 0.1547, 0.0401], [0.0339, 0.1774, 0.1462, 0.2826, 0.0, 0.1866, 0.1492, 0.1113, 0.0293, 0.0938, 0.0778, 0.0, 0.1396], [0.0339, 0.3387, 0.3105, 0.1739, 0.0896, 0.1878, 0.0323, 0.0341, 0.0547, 0.0111, 0.0895], [0.2258, 0.2911, 0.2391, 0.097, 0.1878, 0.075, 0.039, 0.0781, 0.0556, 0.0, 0.0835], [0.0, 0.1774, 0.2962, 0.1957, 0.0, 0.1157, 0.1271, 0.0776, 0.0244, 0.0859, 0.0778, 0.0, 0.099], [0.0339, 0.2258, 0.1022, 0.4348, 0.0, 0.2313, 0.3536, 0.1048, 0.1366, 0.1094, 0.1444, 0.0, 0.1384], [0.0, 0.2258, 0.3803, 0.3478, 0.1381, 0.1934, 0.1268], [0.0, 0.2419, 0.4204, 0.0634, 0.2376, 0.1539], [0.0, 0.0403, 0.3583, 0.4348, 0.0, 0.1716, 0.2155, 0.0453, 0.0293, 0.0781, 0.2, 0.0278, 0.0919], [0.0, 0.1532, 0.4256, 0.2391, 0.0, 0.1269, 0.1436, 0.0893, 0.0195, 0.0781, 0.0889, 0.0, 0.043], [0.0, 0.1935, 0.3687, 0.2174, 0.0, 0.1828, 0.0939, 0.0893, 0.0146, 0.0703, 0.0667, 0.0, 0.1229], [0.0, 0.2339, 0.3558, 0.2391, 0.0, 0.1119, 0.2376, 0.097, 0.0439, 0.0703, 0.0556, 0.0556, 0.1074], [0.25, 0.392, 0.1522, 0.0, 0.0933, 0.1271, 0.1255, 0.0537, 0.0391, 0.0444, 0.0, 0.0907], [0.0, 0.2823, 0.3648, 0.3913, 0.1119, 0.1823, 0.0763, 0.0634, 0.0703, 0.1111, 0.0, 0.1134], [0.0169, 0.2258, 0.3739, 0.3478, 0.0, 0.0821, 0.1602, 0.11, 0.0293, 0.0781, 0.0778, 0.0, 0.1169], [0.0339, 0.1935, 0.3777, 0.4565, 0.2313, 0.1492, 0.0569, 0.039, 0.0469, 0.1, 0.0, 0.1169], [0.0508, 0.1532, 0.4592, 0.3043, 0.1978, 0.2265, 0.1488], [0.0169, 0.2097, 0.4722, 0.4783, 0.0, 0.1754, 0.2486, 0.1371], [0.0, 0.4355, 0.3338, 0.2391, 0.1679, 0.232, 0.1125, 0.0078, 0.0, 0.1372], [0.0, 0.3145, 0.445, 0.3478, 0.1418, 0.1602, 0.0918, 0.0293, 0.0547, 0.0444, 0.0278, 0.0764], [0.0, 0.3306, 0.4334, 0.2174, 0.0, 0.1418, 0.0718, 0.097, 0.0488, 0.1406, 0.0444, 0.0, 0.0895], [0.0508, 0.1855, 0.3519, 0.5217, 0.0, 0.1493, 0.221, 0.1332, 0.0469, 0.0778, 0.0, 0.1217], [0.0, 0.25, 0.489, 0.6304, 0.0, 0.1604, 0.2541, 0.1229], [0.0, 0.1532, 0.3713, 0.1739, 0.1754, 0.1934, 0.1332, 0.0244, 0.0938, 0.1556, 0.0, 0.1229], [0.0, 0.25, 0.3868, 0.3043, 0.0, 0.1828, 0.2044, 0.1216, 0.0341, 0.0469, 0.0556, 0.0556, 0.1074], [0.0, 0.2097, 0.5433, 0.6304, 0.2052, 0.1602, 0.1009], [0.0339, 0.2177, 0.3984, 0.3913, 0.0, 0.1082, 0.1602, 0.0931, 0.0488, 0.0781, 0.0889, 0.0278, 0.1516], [0.0, 0.2419, 0.414, 0.3696, 0.0, 0.153, 0.2486, 0.1113, 0.0293, 0.0859, 0.0889, 0.0, 0.0955], [0.0339, 0.2742, 0.3803, 0.3043, 0.2388, 0.1492, 0.0789, 0.0341, 0.0938, 0.1444, 0.0, 0.1468], [0.0, 0.3548, 0.4321, 0.6304, 0.0, 0.1381, 0.1768, 0.0712, 0.0488, 0.0547, 0.0778, 0.0, 0.1289], [0.0, 0.1774, 0.4127, 0.3261, 0.0, 0.1418, 0.2265, 0.1229, 0.039, 0.0938, 0.0444, 0.0, 0.1384], [0.0, 0.3548, 0.3713, 0.2609, 0.0, 0.1418, 0.2431, 0.1436, 0.0341, 0.1016, 0.1, 0.0556, 0.1265], [0.0508, 0.3548, 0.4864, 0.3913, 0.0, 0.2164, 0.2928, 0.1475, 0.039, 0.0938, 0.0667, 0.0], [0.0, 0.2016, 0.4398, 0.1304, 0.194, 0.1878, 0.1397, 0.0341, 0.0625, 0.1222, 0.0556, 0.1325], [0.0339, 0.2581, 0.4709, 0.413, 0.0, 0.1045, 0.1657, 0.1177, 0.1171, 0.0547, 0.2111, 0.0, 0.1146], [0.0, 0.3387, 0.4528, 0.3043, 0.1567, 0.2431, 0.1113, 0.0585, 0.0391, 0.0333, 0.0, 0.1575], [0.0339, 0.1935, 0.4761, 0.3478, 0.0, 0.209, 0.1934, 0.097, 0.0341, 0.0781, 0.0333, 0.0, 0.179], [0.0, 0.2258, 0.4502, 0.4565, 0.0, 0.1828, 0.2044, 0.1345, 0.0341, 0.0469, 0.0222, 0.0, 0.1754], [0.0, 0.25, 0.3933, 1.0217, 0.1716, 0.1934, 0.1048, 0.0293, 0.0625, 0.0444, 0.0278, 0.2303], [0.0, 0.371, 0.4269, 0.1957, 0.0, 0.1642, 0.3149, 0.1125, 0.1171, 0.1172, 0.1, 0.0278, 0.1611], [0.0, 0.3306, 0.4683, 0.413, 0.0, 0.1903, 0.1823, 0.1384, 0.1171, 0.0781, 0.0111, 0.0833, 0.1575], [0.0, 0.3871, 0.5343, 0.2391, 0.2015, 0.2099, 0.1552, 0.0488, 0.0938, 0.0889, 0.0, 0.1325]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

