created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Magister Boombottom", "Valaria Emberstorm", "Tika Fiery", "Whip \u00d1 Sl\u00e0pper", "Perpetual Hope", "Boof Floof", "Miphest\u00f6", "Enter Effore", "Erin Celes", "Zaedy Zae", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Firebrand", "Herald", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[88.1525, 78.5155, 68.3136, 315.5942], [24.8363, 45.8102, 161.1641, 361.0494], [5.2262, 15.3571, 7.1456, 42.6611, 135.3564, 122.5098, 11.4109, 43.8306, 129.587, 0.0, 45.4282, 22.2878, 26.3505], [47.9612, 21.7709, 7.5841, 34.8361, 109.2063, 116.424, 46.1761, 74.0335, 157.7476, 18.249, 31.1296, 0.0], [0.0, 0.0, 0.0, 24.6035, 192.2625, 183.1032, 0.0, 28.2124, 147.8834, 0.0, 77.6711, 24.4948, 24.674], [101.6112, 20.7754, 10.491, 51.5018, 178.296, 244.1376, 21.1723, 38.1652, 107.3925, 38.9229, 33.6908, 22.0241], [1070.9646, 205.506], [150.1737, 104.7418, 4.6771, 125.8765, 839.477, 928.8342, 0.0, 275.1949, 734.4852, 146.4138, 63.7534, 152.0054], [153.365, 129.6461, 53.1535, 180.1998, 907.0809, 717.066, 180.6746, 381.9961, 346.6789, 84.0494, 113.1231, 368.2078, 142.0817], [1076.0987, 279.2189, 251.517, 250.963, 3315.117], [502.09, 254.0534, 72.0047, 1272.5877, 978.8436, 68.4446, 576.9562, 925.6438, 135.8858, 423.8294, 156.1314]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

