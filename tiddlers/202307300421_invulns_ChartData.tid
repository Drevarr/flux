created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Loganlek", "Drac Tepes", "Morv\u00e4rth", "Ellhee", "Kurtis Ruhr", "Free H\u00e4nd", "Raziel Umbra", "Big Boy Belkins", "Lord Sahan", "Ax Axun", "Dagmar Avangerkin", "Smol Gluvs", "Elvezio Figone", "Vera Khin", "Velexter", "Gwyn Ghosthouse", "Sub Train", "Sanellek Cairek", "Astraea Lumena", "Abserns Sorcerer", "Luke The Ghastly", "Whobear", "Salty Pam", "Bella Sassy", "Brigitte Du Bardo", "Drevarr Moonwillow", "Govinda Ektar", "Newtype Khan", "Gamora Titus", "Elonith Requiem", "Vee Nemesis", "Kisumaiasu", "Kosa\u00efr", "Aronorf Xideliesi", "Alarics Bane", "Charr Surethang", "Gestern Yesteryear", "Lillith Bella", "Avatar Shazbott", "Jimbo The Pleb", "Whip \u00d1 Sl\u00e0pper", "Tegan Parker"];
const professions = ["Spellbreaker", "Scourge", "Reaper", "Firebrand", "Vindicator", "Herald", "Chronomancer", "Holosmith", "Firebrand", "Vindicator", "Untamed", "Reaper", "Chronomancer", "Dragonhunter", "Weaver", "Scourge", "Firebrand", "Reaper", "Firebrand", "Weaver", "Scourge", "Chronomancer", "Chronomancer", "Firebrand", "Reaper", "Scrapper", "Vindicator", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Weaver", "Firebrand", "Reaper", "Berserker", "Firebrand", "Dragonhunter", "Tempest", "Berserker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 7, 23, 0, 12, 0, 0, 10], [42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17], [0, 0, 0, 0, 22, 0, 0, 38], [0, 0, 7, 5, 24, 0, 0, 0, 25], [16, 3, 42, 0, 0, 0], [3, 13, 0, 0, 0, 4, 0, 0, 0, 20, 23], [0, 0, 31, 0, 6, 0, 0, 0, 27], [0, 0, 12, 0, 0, 0, 0, 0, 12, 10, 19, 10, 0, 0, 0, 5], [10, 20, 24, 21, 0, 0, 9, 0], [0, 9, 5, 16, 18, 0, 0, 0, 12, 0, 30], [0, 60, 0, 2, 0, 4, 0, 14, 11], [10, 20, 39, 0, 0, 0, 0, 0, 19, 0, 0, 5], [0, 62, 39, 0], [2, 2, 25, 29, 0, 0, 0, 45, 0, 0], [9, 0, 11, 0, 0, 6, 0, 0, 0, 25, 0, 59], [0, 16, 0, 14, 13, 10, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 17, 16, 0, 0, 0, 0, 0, 0, 0, 0, 19], [20, 6, 0, 0, 0, 7, 0, 93], [0, 0, 11, 0, 0, 0, 0, 52, 41, 7, 22, 0, 0, 0, 0], [0, 53, 19, 9, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25], [46, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 11, 0, 11], [60, 0, 12, 0, 0, 0, 16, 0, 29, 19, 0, 0, 0, 0, 0, 29], [53, 4, 32, 0, 41, 3, 0, 39, 1, 0, 7, 0, 0, 0, 0, 0], [59, 107, 29, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 13, 0, 38, 0, 0, 0, 18, 0, 0, 18, 0, 0, 0, 130, 0], [0, 29, 0, 180, 0, 2, 15, 0, 0], [21, 25, 14, 0, 0, 0, 26, 0, 0, 9, 0, 0, 0, 0, 0, 47, 0, 6, 16, 15, 0, 41, 7, 0, 0, 0, 0, 0, 0, 0], [28, 0, 65, 0, 24, 0, 0, 11, 0, 0, 0, 9, 0, 22, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 17], [30, 0, 213], [0, 45, 21, 0, 13, 0, 0, 29, 0, 5, 0, 0, 18, 27, 0, 8, 27, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 30, 0, 200, 0, 0, 27], [0, 31, 0, 36, 25, 4, 31, 33, 0, 8, 0, 5, 25, 0, 0, 0, 0, 0, 0, 8, 13, 7, 15, 0, 0, 11, 0, 0, 0, 10, 0, 18], [7, 0, 15, 14, 7, 0, 0, 12, 0, 17, 0, 69, 27, 94, 8, 9, 12], [31, 0, 1, 0, 0, 0, 17, 0, 0, 18, 0, 31, 0, 100, 0, 0, 89, 5, 15, 16, 0, 18], [0, 13, 0, 0, 0, 0, 27, 0, 0, 22, 0, 34, 0, 173, 0, 29, 0, 34, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 11, 13, 0, 0, 0, 0, 0, 0, 0, 0], [0, 11, 2, 18, 27, 0, 0, 0, 1, 0, 0, 22, 0, 0, 26, 161, 0, 19, 0, 24, 7, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [34, 0, 17, 0, 0, 16, 0, 0, 20, 0, 5, 9, 160, 55, 13, 9, 1, 14, 23, 21, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 5, 14], [17, 16, 26, 4, 0, 0, 0, 19, 0, 12, 0, 30, 39, 204, 0, 18, 2, 23, 18, 57, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 2, 17, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [15, 0, 0, 0, 46, 3, 46, 55, 94, 44, 10, 0, 3, 12, 0, 5, 0, 0, 0, 0, 0, 0, 15, 63, 29, 69, 0, 6, 9, 17, 0, 0, 20, 0, 10], [30, 0, 85, 0, 0, 84, 0, 0, 58, 4, 27, 91, 81, 3, 64, 0, 56, 70], [18, 0, 15, 0, 34, 0, 423, 21, 17, 36, 23, 16, 104, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 35, 1, 32], [22, 24, 308, 41, 52, 45, 0, 10, 91, 36, 0, 0, 49, 0, 0, 0, 0, 36, 54, 40, 49, 0, 27, 0, 0, 24, 0, 23], [41, 64, 58, 40, 0, 0, 48, 0, 0, 38, 0, 78, 0, 339, 112, 20, 22, 18, 44, 29, 0, 65]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

