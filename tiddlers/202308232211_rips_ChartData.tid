created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Vee Usagi", "Klengah", "Solus Luxes", "Luke The Ghastly", "Zaedy Zae", "Venomina The Sly", "Tribal S", "Necrotic Windrunner", "Rozaalyna", "Morton Saltbringer", "Alarics Bane", "Elonith Requiem", "Be\u00eb", "Arcanophage Farra", "Newtype Khan", "Vee Usagi", "Daphne Agla\u00e9", "\u00c1rk\u00e1ntor", "Rina Of Theros", "Rahani Sunray", "Eibh\u00ebar"];
const professions = ["Reaper", "Scourge", "Druid", "Firebrand", "Scourge", "Druid", "Druid", "Druid", "Reaper", "Reaper", "Chronomancer", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Reaper", "Scourge", "Reaper", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3788], [0.2088], [0.0256, 0.0455, 0.0217, 0.0, 0.0, 0.0455, 0.0667, 0.0645, 0.0606, 0.0109, 0.0253, 0.0824, 0.0615, 0.0661, 0.0141, 0.1], [0.011, 0.0227, 0.0652, 0.1923, 0.0, 0.0119, 0.0, 0.2444, 0.0, 0.0, 0.0, 0.0435, 0.0127, 0.0118, 0.1077, 0.0579, 0.0, 0.0286, 0.0891, 0.0079, 0.0123], [0.0769, 0.5833], [0.022, 0.0227, 0.087, 0.0, 0.0449, 0.0833, 0.0227, 0.1111, 0.0, 0.0303, 0.0652, 0.0886, 0.1059, 0.1385, 0.0248, 0.0, 0.0143, 0.0198, 0.1349, 0.0988], [0.0549, 0.053, 0.0652, 0.0337, 0.119, 0.0455, 0.0778, 0.0323, 0.0455, 0.087, 0.038, 0.0706, 0.1231, 0.0248, 0.0423, 0.0286, 0.0495, 0.1349, 0.0123], [0.0549, 0.0682, 0.0978, 0.0449, 0.0238, 0.0455, 0.0778, 0.0645, 0.0455, 0.1196, 0.0759, 0.1059, 0.1385, 0.0744, 0.0423, 0.1143, 0.0792, 0.119, 0.0247], [0.0379, 0.0, 0.0, 0.0119, 0.1591, 0.2111, 0.4839, 0.0, 0.0326, 0.3038, 0.1529, 0.0308, 0.0413, 0.0, 0.1143, 0.2079, 0.3016, 0.0], [0.1061, 0.0, 0.0, 0.4167, 0.0, 0.5222, 0.0, 0.2903, 0.303, 0.0761, 0.3924, 0.2, 0.3538, 0.1653, 0.0704, 0.3571], [0.9571, 0.3069, 0.9762, 0.5309], [0.044, 0.2424, 0.3913, 0.0, 0.0, 0.4167, 0.0, 0.4889, 0.0, 0.0, 0.3636, 0.163, 0.2152, 0.2235, 0.0615, 0.1901, 0.0141, 0.3429, 0.0693, 0.2222, 0.0], [0.337, 0.0385, 0.0899, 0.25, 0.0455, 0.2222, 0.1071, 0.0645, 0.3636, 0.3696, 0.038, 0.2824, 0.2154, 0.3306, 0.1127, 0.3286, 0.0099, 0.5714, 0.0], [0.1212, 0.0326, 0.0, 0.236, 0.2381, 0.0682, 0.3444, 0.0, 0.7742, 0.2273, 0.1848, 0.443, 0.2706, 0.1231, 0.0826, 0.0704, 0.5, 0.396, 0.4206, 0.0], [0.011, 0.1212, 0.3152, 0.0, 0.0674, 0.6667, 0.25, 0.4, 0.0, 0.2581, 0.197, 0.0435, 0.443, 0.1412, 0.3077, 0.1901, 0.0, 0.4, 0.1782, 0.619, 0.0864], [0.1136, 0.1591, 0.3913, 0.0, 0.4045, 0.1071, 0.1364, 0.2889, 0.0357, 0.1935, 0.5, 0.1196, 0.481, 0.2471, 0.2615, 0.1322, 0.0704, 0.3286, 0.1287, 0.2857, 0.3704], [0.4545, 0.3261, 0.0769, 0.0787, 0.1905, 0.5682, 0.2111, 0.0714, 0.0645, 0.3333, 0.4891, 0.0253, 0.2235, 0.2308, 0.3306, 0.0282, 0.4286, 0.1584, 0.3492, 0.2222], [0.1355, 0.5152, 0.4565, 0.2921, 0.1548, 0.0, 0.2222, 0.2258, 0.0, 0.3696, 0.2278, 0.0941, 0.3846, 0.0579, 0.0, 0.7286, 0.1485, 0.2619, 0.2716], [0.0806, 0.3864, 0.4022, 0.0769, 0.0112, 0.3333, 0.0909, 0.4333, 0.2143, 0.5484, 0.3485, 0.6522, 0.6203, 0.6353, 0.4769, 0.3223], [0.1832, 0.0761, 0.5618, 0.6786, 0.5227, 0.8667, 0.0357, 0.6774, 0.3485, 0.2283, 0.5063, 0.3529, 0.3538, 0.3306, 0.1831, 0.3857, 0.3267, 0.7619, 0.2716], [0.1026, 0.9773, 0.337, 0.0, 0.1236, 0.0, 0.3409, 0.7667, 0.0, 0.871, 0.5758, 0.4783, 0.9494, 0.6941, 0.8615, 0.314, 0.0282, 1.1571, 0.2277, 0.7778, 0.642], [0.3077, 0.3788, 0.5543, 0.1923, 0.5281, 0.0476, 0.25, 0.9111, 0.0357, 0.1935, 0.8485, 0.1957, 0.557, 1.0706, 0.9385, 0.5537, 0.1268, 0.5857, 0.4851, 1.4206, 0.4444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

