created: 20230506220820000
creator: Drevarr
modified: 20230705163528875
modifier: drevarr
tags: ChartData
title: 202305062208_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Im Killin It", "Drevarr Moonwillow", "Jupi Jupi Jupi", "Lord Erin The Wise", "Demon Dalham", "Sygaldry Verdandi", "Abigail Ryn", "Freylk Nasferatu", "Needragee", "Ria Zerria", "Kira Dragonblaze", "Rock Danger", "Weather Forecast J", "Na Ting Wong", "Grilo Gringo", "Puny Demon", "Aronorf Xideliesi", "Mammary Mission", "Tootsie Pop Rocks", "Dargon Spiritwalker", "Smol Gluvs", "Kmpek", "Cerys Fireblade", "Guard Ferro", "Gavann", "Kosa\u00efr", "Blancooo Padreee", "Smol Daddy Tika", "Tac Mancer", "Venomina The Fierce", "Artofliving", "Husky Guard", "My Birthday Girl", "Skylar Shadowmoon", "Kosa\u00efr", "Miphest\u00f6", "Johosh The Mighty", "Permanent Dawn", "High Sorcer Baradun"];
const professions = ["Scourge", "Scrapper", "Firebrand", "Weaver", "Dragonhunter", "Firebrand", "Catalyst", "Scourge", "Tempest", "Scourge", "Dragonhunter", "Renegade", "Catalyst", "Scrapper", "Dragonhunter", "Scourge", "Firebrand", "Scourge", "Scrapper", "Scourge", "Scourge", "Vindicator", "Berserker", "Willbender", "Firebrand", "Weaver", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Herald", "Dragonhunter", "Scrapper", "Scrapper", "Catalyst", "Tempest", "Spellbreaker", "Weaver", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9, 0, 2, 0, 0, 6], [18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 19, 0, 0, 0, 0, 0, 0], [0, 2, 18, 0, 0], [17, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [18, 0, 0, 5, 3, 0, 0], [26, 0, 0, 0, 0, 0, 0, 0], [4, 19, 0, 0, 4, 0, 0, 0, 0], [6, 0, 0, 0, 14, 8], [0, 0, 29], [4, 27, 0], [0, 0, 0, 13, 0, 0, 19], [0, 0, 32, 0, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26], [12, 13, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0], [7, 10, 10, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0], [6, 21, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 34, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 9, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 14, 0], [0, 0, 14, 0, 0, 11, 0, 0, 12, 0, 0, 4, 0], [18, 0, 7, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0], [31, 0, 11], [52, 5], [3, 0, 3, 3, 4, 39, 0, 0, 0, 0, 5], [30, 6, 6, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 9], [15, 0, 5, 0, 10, 0, 0, 0, 0, 10, 24, 0, 0, 0, 0], [0, 32, 0, 35], [46, 0, 18, 11, 0, 0, 0, 0], [18, 47, 0, 0, 1, 0, 8, 0, 0, 0, 6, 0, 0, 0, 0], [38, 0, 0, 0, 5, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0], [23, 16, 0, 0, 17, 0, 0, 31], [12, 37, 13, 0, 35, 0], [23, 78], [14, 0, 30, 0, 0, 0, 18, 0, 0, 45], [33, 37, 5, 0, 47], [26, 35, 0, 24, 15, 18, 13, 3, 0, 0, 11, 0], [34, 0, 39, 0, 11, 28, 0, 39, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

