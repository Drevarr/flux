created: 20230531221142000
creator: Drevarr
modified: 20230705163532457
modifier: drevarr
tags: ChartData
title: 202305312211_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Mildly Ecstatic", "Melody Phoenixstorm", "Mel E Tonin", "Gavann", "Smol Gluvs", "Eibh\u00ebar", "Newtype Khan", "Sumatra Satyricon", "Kira Dragonblaze", "Cedryn X", "Grasszanine", "No Reserv\u00e9", "Tootsie Pop Rocks", "Irin The Undeath", "Rosie Sunray", "Soxx", "Sister Elonith", "Zayde Sunsabre", "Permanent Dawn", "Jeckyll Mbs", "Kosair", "Lord Erin The Wise", "My Birthday Girl", "Shaca Booey", "Be\u00eb", "Kary\u00edna", "Cyclotechnist Farra", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Scourge", "Scrapper", "Dragonhunter", "Firebrand", "Scourge", "Chronomancer", "Spellbreaker", "Soulbeast", "Dragonhunter", "Berserker", "Spellbreaker", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Willbender", "Berserker", "Berserker", "Weaver", "Berserker", "Guardian", "Weaver", "Scrapper", "Berserker", "Scourge", "Vindicator", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 61.0724, 127.7593, 17.7065, 42.6811, 60.084, 48.4561, 67.9929, 77.1311, 21.901, 12.2344, 0.0], [56.273, 26.1837, 186.7889, 26.7563], [0.0, 0.0, 58.7174, 6.4865, 186.048, 19.4035, 0.0, 49.4795, 52.5529, 0.0, 198.1667], [38.463, 7.8198, 170.9444, 5.9534, 42.1732, 0.0, 8.5761, 27.3405, 57.268, 0.0, 101.95, 12.2951, 20.4676, 0.0, 10.0088], [23.4299, 14.6749, 196.7333, 22.5863, 7.9408, 0.0, 48.5543, 30.9405, 51.6, 38.5205, 9.1643, 78.9467, 4.1433, 0.0, 0.0], [15.454, 20.7703, 25.2222, 40.83, 47.0461, 21.7037, 18.3804, 52.6541, 27.448, 25.4094, 68.4571, 17.127, 16.5392, 0.0, 0.0], [51.7934, 22.1519, 6.8778, 33.2645, 18.4386, 0.0, 52.5652, 27.3946, 59.18, 7.3216, 12.3714, 39.9918, 43.058, 0.0, 0.0], [72.6395, 0.0, 47.8444, 21.4081, 41.7917, 74.463, 26.7283, 99.0757, 26.448, 46.9591, 21.0643, 48.8689, 5.157, 16.1562, 8.2281], [46.0302, 190.9011, 91.0889, 57.2097], [73.6486, 75.9781, 35.6848, 162.9351, 122.456, 67.2515, 30.3643, 80.5492, 16.6724, 6.375, 0.0], [31.0362, 26.1378, 161.5, 37.2399, 34.3443, 39.9259, 62.0652, 79.5784, 50.096, 15.6901, 71.0643, 88.5779, 30.7099, 0.0, 0.0], [76.8462, 25.311, 198.6556, 42.1839, 51.7654, 154.2778, 4.3478, 0.0, 97.18, 22.7836, 82.5, 38.1434, 73.3823, 0.0, 0.0], [69.7692, 27.742, 148.6333, 55.272, 79.1206, 113.8333, 247.2717, 4.3275, 80.7714, 35.2213, 49.372, 0.0, 0.0], [110.2398, 54.7173, 234.3222, 72.3589, 71.7039, 15.5435, 55.4865], [58.5732, 81.6007, 157.2111, 50.6984, 72.2105, 69.9444, 54.9891, 148.8432, 196.044, 28.848, 42.5, 36.918, 13.6724, 0.0, 28.8684], [58.9367, 42.8163, 146.6556, 58.4144, 89.8092, 0.0, 41.2391, 30.5622, 169.872, 190.4269, 62.3071, 57.1967, 15.9625, 0.0, 0.0], [0.0, 76.2049, 434.6111, 53.5838, 100.4189, 0.0, 24.087, 142.2216, 444.62], [116.8477, 44.1131, 371.7, 69.3892, 32.9079, 98.9259, 0.0, 99.2649, 1.108, 116.3743, 233.5429, 51.5902, 57.5836, 37.5938, 0.0], [149.641, 56.629, 189.5333, 76.4931, 108.1601, 0.0, 23.3587, 59.1514, 134.396, 45.4094, 29.4643, 60.5533, 39.4334, 0.0, 0.0], [46.9774, 59.3322, 392.0778, 77.4565, 100.4232, 112.3333, 18.4891, 63.6541, 240.488, 123.4854, 67.0214, 82.4631, 39.9454, 39.7656, 0.0], [271.8567, 119.523, 188.0, 84.9887, 126.5066, 0.0], [104.8341, 86.5866, 265.8556, 75.2733, 123.0044, 93.1481, 0.0, 63.6108, 121.82, 160.8538, 99.9214, 214.3811, 0.0], [220.7526, 173.9081, 353.8667, 74.5649, 123.4386, 0.0, 143.0978, 190.1297, 35.152, 62.3099, 168.0786, 62.4508], [119.4329, 7.6184, 541.2111, 88.9383, 212.0241, 268.5741, 95.8587, 52.8757, 204.94, 57.9006, 176.65, 103.6148, 57.2935, 0.0, 50.5789], [170.81, 95.1908, 419.6, 121.8476, 0.0, 0.0, 272.6196, 165.1459, 206.04, 107.1754, 137.7643, 128.7418, 89.9249, 76.6875, 0.0], [165.1207, 54.7739, 312.1556, 112.0491, 156.1382, 20.2407, 93.413, 383.8919, 256.084, 231.4327, 100.7857, 89.8484, 96.4027, 49.6094, 0.0], [199.5988, 119.7774, 524.6889, 119.9049, 146.1974, 244.5926, 98.0, 228.1297, 254.032, 144.9357, 199.6357, 259.8238, 43.5666, 0.0, 0.0], [171.2866, 102.5124, 236.9222, 139.0611, 228.0329, 63.9815, 124.3696, 213.5622, 385.776, 215.7076, 129.4714, 71.5451, 72.413, 0.0, 64.4298], [234.5747, 95.7633, 522.7111, 255.3552, 101.3531, 190.4259, 178.2174, 226.9946, 485.424, 139.6725, 94.1571, 354.4795, 66.901, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

