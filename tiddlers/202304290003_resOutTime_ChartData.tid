created: 20230429000309000
creator: Drevarr
modified: 20230705163527291
modifier: drevarr
tags: ChartData
title: 202304290003_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Kos\u00e4ir", "Zadie Miststep", "Drevarr Moonwillow", "Blancooo Padreee", "Mistwalker Caelon", "Rudjulin", "Koisx", "Air One Com", "Tika Rucola", "Venomina The Siren", "Cat Wigglebooty", "Oo Dads Mad", "Granfel", "Bella Sassy", "Johosh The Great", "Rina Of Theros", "Lord Erin The Wise", "Morv\u00e4rth", "Panther B Me", "Redoxone", "Aronorf Xideliesi", "Tegan Parker", "Cyclotechnist Farra", "Miphest\u00f6", "Primal Clone", "Newtype Khan", "Hyde En Sikh", "Koralia Danai"];
const professions = ["Herald", "Tempest", "Scrapper", "Spellbreaker", "Vindicator", "Firebrand", "Dragonhunter", "Firebrand", "Chronomancer", "Tempest", "Scrapper", "Spellbreaker", "Engineer", "Firebrand", "Firebrand", "Scourge", "Weaver", "Reaper", "Scourge", "Soulbeast", "Firebrand", "Tempest", "Scrapper", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[513.9, 345.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 513.9, 0.0, 0.0, 124.96, 0.0, 0.0, 0.0, 0.0, 162.36, 644.28], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 127.26, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2254.98], [0.0, 0.0, 0.0, 0.0, 1027.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1932.84], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 509.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [4509.96], [0.0, 0.0, 0.0, 0.0, 1284.75, 0.0, 0.0, 3543.54], [0.0, 0.0, 0.0, 770.85, 0.0, 0.0, 562.32, 0.0, 0.0, 0.0, 0.0, 270.6, 644.28], [0.0, 0.0, 0.0, 0.0, 3597.3, 0.0, 42.42, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1610.7], [145.96, 0.0, 0.0, 0.0, 2826.45, 0.0, 0.0, 249.92, 0.0, 0.0, 0.0, 0.0, 0.0, 966.42], [0.0, 154.4, 0.0, 4111.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.81, 0.0, 966.42], [72.98, 0.0, 0.0, 0.0, 6166.8, 0.0], [530.4, 0.0, 0.0, 0.0, 378.84, 1610.7], [0.0, 0.0, 0.0, 0.0, 4111.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3865.68], [0.0, 0.0, 0.0, 0.0, 770.85, 0.0, 0.0, 1374.56, 0.0, 0.0, 0.0, 0.0, 0.0, 1288.56], [0.0, 77.2, 0.0, 0.0, 4625.1, 57.54, 84.84, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2254.98], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1183.2, 0.0], [145.96, 0.0, 0.0, 0.0, 3083.4, 287.7, 169.68, 374.88, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 3083.4, 0.0, 0.0, 62.48, 0.0, 0.0, 0.0, 0.0, 0.0, 6120.66], [0.0, 0.0, 1284.75, 0.0, 0.0, 0.0, 0.0, 518.24, 0.0, 0.0, 0.0, 6120.66], [218.94, 386.0, 0.0, 0.0, 1541.7, 632.94, 0.0, 0.0, 0.0, 0.0, 0.0, 92.43, 0.0, 1932.84], [0.0, 0.0, 0.0, 1027.8, 0.0, 0.0, 62.48, 0.0, 0.0, 0.0, 0.0, 9664.2], [218.94, 308.8, 0.0, 0.0, 4368.15, 115.08, 0.0, 0.0, 0.0, 0.0, 53.96, 0.0, 0.0, 2577.12], [0.0, 231.6, 0.0, 0.0, 0.0, 1145.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1932.84], [0.0, 77.2, 0.0, 6166.8, 0.0, 0.0, 187.44, 0.0, 388.68, 0.0, 0.0, 0.0, 7087.08], [218.94, 77.2, 0.0, 0.0, 5139.0, 0.0, 0.0, 749.76, 0.0, 0.0, 0.0, 30.81, 0.0, 6764.94], [145.96, 0.0, 0.0, 0.0, 3597.3, 0.0, 805.98, 62.48, 0.0, 0.0, 0.0, 0.0, 0.0, 7409.22], [145.96, 0.0, 0.0, 7194.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1353.0, 8053.5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

