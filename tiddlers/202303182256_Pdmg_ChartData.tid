created: 20230318225613000
creator: Drevarr
modified: 20230705163522545
modifier: drevarr
tags: ChartData
title: 202303182256_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Kmpek", "Tootsie Pop Rocks", "Smol Gluvs", "Nelliel T", "Nazhul Naxxremis", "Morv\u00e4rth", "Rina Of Theros", "Sp\u00edcy Cheese", "Be\u00eb", "Lord Erin The Wise", "Cerys Fireblade", "Legacy Of Mathus", "Jupi Jupi Jupi", "Xanvias Tseli"];
const professions = ["Scourge", "Vindicator", "Scrapper", "Scourge", "Reaper", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Weaver", "Berserker", "Berserker", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[143.7075, 1048.7037, 535.2188, 455.7157, 357.5763, 10.0, 715.1146, 1079.725, 0.0, 0.0, 296.0893, 1079.6818, 356.6705, 126.8889, 142.4444, 158.5], [396.7343, 613.3837, 456.5089, 2851.6136, 2159.3977, 0.0, 159.4028, 883.1579, 427.5968, 910.5259, 929.7941, 603.8409, 402.3519], [545.8302, 285.6667, 67.2034, 728.9259, 614.3255, 578.25, 232.2881, 0.0, 109.2708, 121.0083, 719.5556, 385.5233, 853.6339, 1760.0909, 0.0, 0.0, 234.5], [18.9151, 247.6131, 27.4068, 855.5926, 442.2396, 332.5392, 77.6102, 95.3077, 517.9792, 779.0417, 440.0097, 701.7209, 404.2054, 1038.9545, 821.625, 0.0, 21.9444, 416.3947, 499.4516, 455.837, 236.6691, 894.2045, 250.5185], [105.5, 315.0476, 55.2881, 981.9259, 797.7682, 361.0196, 60.2034, 104.1923, 225.3854, 1694.7917, 708.8502, 52.6279, 382.125, 335.5, 138.2386, 0.0, 461.125, 580.0, 445.4677, 299.8963, 343.7426, 260.4444], [119.8962, 425.6964, 67.1525, 1502.2593, 305.4089, 579.5539, 57.7458, 0.0, 767.7917, 1447.4, 728.5797, 529.3023, 270.0179, 847.0227, 2428.1136, 132.125], [1063.7531, 445.0807, 452.5098, 156.3729, 126.0769, 523.875, 1057.775, 610.4831, 658.907, 781.6786, 3384.1818, 899.1705, 17.2778, 65.5556, 373.5, 798.9516, 830.0741, 572.5074, 1793.8182], [130.7264, 302.1964, 411.9831, 1594.1481, 726.4401, 506.8725, 328.0678, 57.6538, 550.2604, 1270.4167, 837.8551, 1489.686, 453.2143, 1649.0455, 0.0, 48.3333, 19.1944, 656.0526, 415.5968, 640.4963, 557.1691, 159.375, 649.5833], [214.7547, 521.4048, 1921.3704, 1861.3203, 533.049, 7.1017, 237.1154, 1373.5312, 2464.65, 406.5507, 1414.5814, 580.2946, 548.8548, 463.9111, 625.7868, 43.0556], [187.4151, 531.0774, 349.1017, 1894.9383, 999.6641, 613.701, 193.1695, 79.8077, 1046.0729, 2093.925, 128.2367, 1218.0, 661.3929, 2427.4091, 2555.1364, 3.4444, 236.2639, 1452.5526, 801.2258, 1026.6444, 785.5, 774.3636, 365.787], [255.6698, 1488.1726, 422.8814, 4185.4198, 1722.2708, 1973.5637, 704.5932, 211.6154, 1518.6979, 1863.9333, 2119.5942, 470.8023, 1296.8304, 0.0, 589.1477], [262.5755, 702.7143, 329.7797, 1626.3827, 1452.3464, 794.0196, 215.5085, 188.4231, 1364.1771, 2484.3417, 566.1304, 1810.407, 447.8482, 4196.3864, 3017.2727, 0.0, 89.6389, 1107.9211, 801.8548, 1730.7259, 1042.9853, 2076.9886, 765.7315], [269.7642, 95.8036, 172.2881, 3251.0123, 1746.1146, 1062.9314, 488.2881, 0.0, 399.3229, 1370.2333, 1355.9855, 766.7326, 985.7589, 2509.1818, 4891.5909, 148.3056, 80.3472, 704.4211, 1502.6129, 1339.5407, 1183.5809, 1448.375, 1373.5741], [529.9623, 1996.5357, 612.5932, 2740.1481, 1344.5729, 1354.2941, 301.6441, 238.1538, 1513.5938, 3873.0083, 1717.1014, 1810.5814, 795.4821, 3658.1591, 3842.1591, 0.0, 129.0139, 0.0, 2298.871, 2717.1259], [191.6698, 2710.0952, 588.7119, 3720.2222, 3659.5, 2450.0245, 289.9831, 450.1538, 712.0521, 3719.5333, 2127.372, 1168.8721, 2812.6607, 7725.6136, 6323.8182, 94.4444, 32.1389, 3264.0526, 4002.4677, 3093.3481, 1369.125, 3735.7841, 2515.8704]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

