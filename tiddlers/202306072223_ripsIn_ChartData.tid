created: 20230607222341000
creator: Drevarr
modified: 20230705163534437
modifier: drevarr
tags: ChartData
title: 202306072223_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Slingsshot", "Kira Dragonblaze", "Belvyn Brightblade", "Blanco Padre Guard", "Manuel Radiador", "Sumatra Satyricon", "Ria Zerria", "Husky Guard", "Lord Erin The Wise", "Skye Nightroad", "Oo Dads Mad", "Permanent Dawn", "Blanco Padre Guard", "Chrozz", "Kaehln Lao", "Etcherii", "Mistwalker Cael", "Sister Elonith", "Solus Sanctus", "Inedible Plant", "Kary\u00edna", "Duke Silvver", "Uneeta Healah", "Gabe Malhorn", "Smol Gluvs", "Rafaellagabriela", "Xanvias Einzbern", "Koralia Danai", "Cyclotechnist Farra", "Be\u00eb", "Arriasa", "Rozaalyna", "No Reserv\u00e9", "Shaca Booey", "Grasszanine", "Crusader Siolith", "Sygaldry Verdandi", "Tootsie Pop Rocks", "Johosh The Great", "Zayde Sunsabre", "Venomina The Siren", "Drevarr Moonwillow", "Artakama Nahid", "Primal Clone", "Tegan Parker", "Sub Train", "Ryvalia Fazebringer", "Newtype Khan", "Eibh\u00ebar"];
const professions = ["Scrapper", "Untamed", "Dragonhunter", "Firebrand", "Dragonhunter", "Scrapper", "Soulbeast", "Reaper", "Dragonhunter", "Weaver", "Scrapper", "Spellbreaker", "Weaver", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Firebrand", "Reaper", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Reaper", "Druid", "Reaper", "Vindicator", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0049, 0.02, 0.0355], [0.0, 0.0, 0.0391], [0.0, 0.01, 0.0426], [0.0, 0.01, 0.0452], [0.3151, 0.0, 0.0741, 0.0, 0.2088, 0.0, 0.4615, 0.2625, 0.1756], [0.0, 0.1667, 0.0741, 0.3187, 0.0, 0.8718, 0.2125, 0.1374], [0.0, 0.0, 0.0404, 0.0, 0.0961, 0.0822], [0.726, 0.0, 0.6296, 0.0741, 0.1978, 0.0, 0.4103, 0.175], [0.0114, 0.0135, 0.2402, 0.1918, 0.0, 0.2222, 0.0, 0.1429, 0.0, 0.2051, 0.025, 0.0916], [0.0, 0.0, 0.0443, 0.1397, 0.1644, 0.0, 0.0185, 0.0, 0.033, 0.0], [0.0, 0.01, 0.0448, 0.2707], [0.0, 0.02, 0.072], [0.0, 0.01, 0.0619, 0.0068, 0.0218, 0.0137, 0.0, 0.0, 0.037, 0.1099, 0.0, 0.0, 0.075, 0.0076], [0.0, 0.01, 0.0509, 0.0, 0.2664], [0.0, 0.05, 0.0386, 0.0, 0.0917, 0.0822, 0.0, 0.2037, 0.037, 0.1758, 0.0, 0.1026, 0.0375, 0.1832], [0.0135, 0.2882, 0.2466, 0.0, 0.2593, 0.0741, 0.1429, 0.0, 0.7692, 0.325, 0.1603], [0.0, 0.0, 0.0518, 0.0, 0.1616, 0.274, 0.0, 0.0926, 0.037, 0.1538, 0.0, 0.6154, 0.2], [0.0, 0.0, 0.0373, 0.0, 0.2183, 0.411, 0.0926, 0.4074, 0.1319, 0.0, 0.1538, 0.2375, 0.1527], [0.0, 0.02, 0.0483, 0.0, 0.1834, 0.0822, 0.0926, 0.037, 0.2857, 0.359, 0.075, 0.3206], [0.0, 0.0, 0.0711, 0.0135, 0.1354, 0.1507, 0.0, 0.0185, 0.0741, 0.0989, 0.0, 0.2308, 0.1875, 0.1985], [0.0, 0.04, 0.0566, 0.0, 0.1834, 0.3288, 0.0, 0.0741, 0.0741, 0.0989, 0.0, 0.1795, 0.0, 0.374], [0.0, 0.03, 0.0553, 0.0, 0.1703, 0.5479, 0.0, 0.1667, 0.0, 0.0879, 0.0, 0.359, 0.125, 0.1679], [0.0, 0.01, 0.0689, 0.0, 0.0655, 0.274, 0.0, 0.2778, 0.2222, 0.2088, 0.0, 0.4103, 0.15, 0.1985], [0.0, 0.0, 0.0619, 0.0, 0.1528, 0.2466, 0.0, 0.0185, 0.7407, 0.2088, 0.0, 0.2821, 0.275, 0.1679], [0.0544, 0.0, 0.1354, 0.1781, 0.0, 0.2037, 0.4815, 0.1758, 0.0, 0.8718, 0.1875, 0.2443], [0.0, 0.0, 0.0487, 0.0203, 0.2664, 0.5753, 0.0, 0.3519, 0.0741, 0.0989, 0.0, 0.3077, 0.1, 0.1832], [0.0531, 0.0068, 0.2052, 0.4521, 0.0, 0.0741, 0.0741, 0.3077, 0.0, 0.0513, 0.15, 0.3435], [0.0, 0.0, 0.0553, 0.0, 0.2969, 0.5753, 0.0, 0.1296, 0.0741, 0.0989, 0.0, 0.2051, 0.2625, 0.1069], [0.0, 0.0, 0.0544, 0.0068, 0.2096, 0.3288, 0.0, 0.1296, 0.2222, 0.2418, 0.0, 0.1795, 0.15, 0.3664], [0.0, 0.01, 0.0746, 0.0068, 0.1397, 0.1918, 0.1296, 0.0741, 0.2198, 0.2821, 0.25, 0.229], [0.0, 0.01, 0.0483, 0.0068, 0.2969, 0.8219, 0.0, 0.1852, 0.0, 0.1209, 0.0, 0.2051, 0.1375, 0.2595], [0.0, 0.0, 0.054, 0.0, 0.3319, 0.2466, 0.0, 0.2222, 0.037, 0.3516, 0.0, 0.4615, 0.25, 0.1298], [0.0, 0.01, 0.0417, 0.0338, 0.4716, 0.4795, 0.0, 0.0741, 0.037, 0.2747, 0.0, 0.641, 0.2625], [0.0049, 0.02, 0.0702, 0.0, 0.1441, 0.2329, 0.0, 0.0926, 0.2963, 0.2637, 0.0, 0.1795, 0.2125, 0.3664], [0.0, 0.0, 0.0636, 0.0068, 0.2358, 0.274, 0.0, 0.1296, 0.0, 0.0769, 0.0, 0.4359, 0.3, 0.3664], [0.0, 0.01, 0.0685, 0.0068, 0.1703, 0.4247, 0.0, 0.1296, 0.0741, 0.2198, 0.0, 0.6154, 0.2625, 0.2061], [0.0, 0.0, 0.0518, 0.0, 0.2707, 0.5753, 0.0, 0.2037, 0.1852, 0.2857, 0.0, 0.359, 0.3125, 0.2366], [0.0, 0.0, 0.0627, 0.0203, 0.1747, 0.5205, 0.0, 0.1481, 0.037, 0.3187, 0.0, 0.2564, 0.275, 0.3893], [0.0, 0.05, 0.0548, 0.0, 0.2882, 0.4795, 0.0, 0.1852, 0.0, 0.2088, 0.0, 0.4872, 0.25, 0.374], [0.0, 0.01, 0.0645, 0.0068, 0.1921, 0.3973, 0.0, 0.2222, 0.1111, 0.3736, 0.0, 0.4359, 0.2, 0.3435], [0.0, 0.03, 0.0733, 0.0, 0.083, 0.5068, 0.0, 0.3148, 0.2593, 0.2198, 0.641, 0.2625, 0.2672], [0.0, 0.0706, 0.0878, 0.2445, 0.3425, 0.0, 0.2222, 0.1481, 0.1868, 0.0, 0.3333, 0.2125, 0.2824], [0.0, 0.01, 0.0614, 0.0068, 0.3406, 0.589, 0.0, 0.1852, 0.0741, 0.2857, 0.0, 0.3846, 0.3875, 0.2519], [0.0, 0.02, 0.0663, 0.0, 0.31, 0.3425, 0.0, 0.1852, 0.0741, 0.2308, 0.0, 0.7436, 0.6, 0.4198], [0.0, 0.0, 0.0737, 0.0, 0.476, 0.3562, 0.0, 0.037, 0.4444, 0.0879, 0.0, 0.6923, 0.275, 0.3435], [0.0, 0.0, 0.097, 0.0203, 0.2838, 0.1781, 0.0, 0.1852, 0.3333, 0.2088, 0.0, 0.5897, 0.3125, 0.2519], [0.0921, 0.0, 0.3057, 0.3151, 0.0, 0.3148, 0.0741, 0.1429, 0.0, 0.3846, 0.3, 0.4046], [0.0, 0.0, 0.068, 0.0, 0.2445, 1.0, 0.0, 0.2593, 0.1111, 0.2747, 0.0, 0.7179, 0.1625, 0.4809], [0.0, 0.02, 0.0799, 0.0, 0.4934, 0.2466, 0.0, 0.1111, 0.2963, 0.2857, 0.0, 0.2821, 0.3125, 0.374], [0.0, 0.01, 0.0812, 0.0068, 0.4105, 0.863, 0.0, 0.2407, 0.1111, 0.2527, 0.0, 0.6667, 0.35, 0.3435]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

