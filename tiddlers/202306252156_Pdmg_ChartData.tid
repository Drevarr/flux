created: 20230625215649000
creator: Drevarr
modified: 20230705163536977
modifier: drevarr
tags: ChartData
title: 202306252156_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zayde Sunsabre", "Grasszanine", "Shaca Booey", "Eibh\u00ebar", "Newtype Khan", "Rina Of Theros", "Arcanophage Farra", "Rina Of Theros", "Irish Mini Rev", "Cedryn X", "Tootsy Pop Star", "Rozaalyna", "Mister Jekyll", "Elonith Requiem", "Smol Gluvs", "Cerys Fireblade", "Jacob Pine", "Inedible Plant", "Lord Erin The Wise", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Spellbreaker", "Berserker", "Chronomancer", "Spellbreaker", "Reaper", "Spellbreaker", "Scourge", "Herald", "Berserker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Berserker", "Reaper", "Vindicator", "Weaver", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[155.6226, 0.0, 66.8413, 0.0, 222.7281, 152.9796, 44.0428, 162.9737, 165.075, 415.9767, 419.1604, 94.2476, 995.9756, 664.1905, 604.069, 424.8444, 338.1446, 58.1034, 356.8636, 314.832], [78.7516, 676.0526, 184.7, 770.7093, 558.6321, 411.3429, 535.1429, 451.0488, 860.6429, 5.24, 506.0, 601.0, 814.3614, 268.2126, 140.1364, 279.624], [293.2453, 17.2934, 160.3365, 717.6598, 626.966, 166.1756], [79.8563, 76.0433, 8.7975, 227.8378, 129.034, 75.1756, 522.4386, 206.7125, 391.1047, 675.7075, 543.6762, 519.3571, 412.0, 310.1429, 0.0, 434.931, 267.0667, 602.3012, 207.2471, 220.6136, 227.414], [107.6226, 40.7784, 24.3413, 0.0, 217.434, 333.1497, 72.5525, 686.6228, 171.225, 424.9535, 508.7453, 734.7429, 566.8214, 50.122, 355.9524, 0.0, 415.6897, 441.7111, 696.3012, 216.0287, 259.3409, 242.566], [1272.7073, 580.2857, 1211.6552, 1416.6222, 3029.6386, 522.5862, 659.8636, 739.196], [0.0, 0.0, 51.4038, 0.0, 266.318, 297.1497, 63.2398, 600.6404, 99.175, 806.6163, 854.1509, 928.4095, 0.0, 373.561, 654.5952, 0.0, 219.6207, 796.0222, 969.6024, 65.3103, 747.2273, 329.704], [238.1509, 144.6826, 153.976, 0.0, 449.8458, 496.7007, 117.561, 903.2281, 819.2375, 1294.2326, 1162.783, 1110.1048, 892.1429], [151.4906, 41.0479, 77.0, 0.1899, 259.4165, 438.6871, 99.2912, 435.3684, 0.0, 912.9651, 846.8302, 1365.0, 206.8214, 447.5854, 1107.119, 15.8276, 211.0, 1541.1928, 571.3793, 336.9091, 424.176], [403.4717, 71.1856, 151.9663, 0.0, 545.9078, 468.1497, 57.2784, 0.0, 0.0, 1154.814, 251.9811, 26.819, 180.9286, 18.0, 227.119, 0.0, 742.1778, 3680.8193, 345.1552, 513.9773, 263.232], [137.4717, 33.6707, 135.2308, 0.0, 328.1892, 421.5034, 62.2612, 1603.1053, 75.5875, 1449.6744, 1573.6887, 1499.3905, 1465.2927, 590.1429, 116.64, 572.6207, 757.1333, 2466.3735, 307.0, 0.0, 185.762], [195.8113, 0.0, 57.1635, 0.0, 530.6105, 351.4898, 70.561, 1982.5088, 295.7625, 1144.1047, 1997.0, 2454.9048, 159.0357, 1157.3902, 1499.7857, 1862.4483, 29.1333, 2509.0843, 431.8851, 484.6591, 201.696], [85.6415, 62.0599, 150.8221, 616.5215, 512.9252, 86.7066, 2.5875, 1680.5814, 285.434, 2749.9143, 547.8214, 1049.1707, 1041.2381, 0.0, 791.6552, 2879.6667, 3736.9518, 1069.9425, 679.3409, 791.628], [1782.8246, 460.7375, 1547.8488, 3150.5849, 1002.9238, 1710.3571, 2374.7317, 1413.5, 0.0, 1221.2414, 2009.8, 2607.6024, 632.0057, 2030.0455, 1353.292], [178.0377, 37.491, 53.3365, 0.0, 754.496, 493.9932, 101.6531, 1871.5526, 448.8625, 1471.407, 2289.2925, 2077.5619, 1081.3929, 1315.0244, 1065.9524, 0.0, 3442.2414, 1260.1556, 1241.8072, 320.3161, 638.3409, 911.914], [337.3962, 87.9281, 98.1779, 9.2405, 402.3688, 700.7619, 88.5118, 1706.2105, 558.6125, 1347.8488, 1968.6792, 978.8857, 474.3214, 2657.439, 3534.1667, 0.0, 1138.7586, 1637.5556, 4852.6265, 137.6092, 1254.4318, 1019.394], [98.3362, 1994.3421, 800.6125, 2771.2326, 3016.9528, 2768.8, 1136.1429, 3349.3902, 3102.7619, 61.26, 2188.2759, 1855.4667, 1624.9277, 903.2874, 2499.0909, 1174.53], [737.7547, 0.0, 143.5048, 74.9747, 768.0636, 666.2313, 267.7473, 2691.7368, 217.5875, 2624.9535, 2733.1132, 3536.4762, 387.4643, 420.3902, 776.2381, 1559.4, 3059.0602, 520.8966, 990.25, 1019.506], [232.5094, 165.8503, 21.7885, 163.2025, 1335.3196, 315.5918, 217.6424, 2281.8246, 615.5875, 2823.5, 2533.3774, 4363.5429, 225.561, 2212.7619, 4.54, 671.0, 5747.4889, 2012.6506, 2400.2989, 2707.7045, 113.76], [1062.8113, 47.8862, 99.6923, 35.0, 1387.4515, 1175.9796, 366.6274, 4316.8333, 1184.275, 3878.9651, 3814.6792, 5174.0286, 942.1786, 4243.5122, 5372.3095, 35.2, 3390.931, 3843.3778, 5629.3494, 992.9828, 1925.25, 1405.03], [305.3585, 13.9281, 128.7933, 123.4684, 1610.8696, 1477.4354, 248.257, 4035.1842, 609.6875, 3762.3721, 2103.1038, 5990.3905, 2524.5714, 5598.4878, 4339.4286, 0.0, 2588.3448, 4860.9778, 4325.1205, 1051.1149, 3789.0227, 1831.6], [378.5094, 0.0, 162.9663, 104.2911, 1657.8601, 1257.2721, 78.6809, 4093.7193, 1342.7375, 4441.6163, 3496.9434, 8447.0762, 664.0357, 4510.7073, 2921.8095, 1618.6552, 5824.7778, 3191.9639, 2999.4483, 5114.2273, 1988.392]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

