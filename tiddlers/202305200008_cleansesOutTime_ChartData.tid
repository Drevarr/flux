created: 20230520000848000
creator: Drevarr
modified: 20230705163530656
modifier: drevarr
tags: ChartData
title: 202305200008_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rk\u00e1ntor", "Madame Charrlotte", "Kosa\u00efr", "Xanvias Einzbern", "Hauzzy", "Stoic Rapidfire", "Zaylen Harker", "Lucky Leipreach\u00e1n", "Smol Gluvs", "Solus Sanctus", "Newtype Khan", "Jupi Jupi Jupi", "Grilo Gringo", "Needragee", "Spreadflamesoflight", "Air One Com", "Grasszanine", "Aronorf Xideliesi", "Paul Bjart Mist Cop", "Black Raspberry Pie", "Miphest\u00f6", "Primal Clone", "Cat Wigglebooty", "Venomina The Siren", "High Sorcer Baradun", "Tegan Parker", "Artakama Nahid", "Drevarr Moonwillow"];
const professions = ["Scourge", "Scourge", "Weaver", "Berserker", "Berserker", "Druid", "Firebrand", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Dragonhunter", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0, 61.7096, 4.9608, 4.9961, 0.0, 8.021, 0.0, 0.0, 4.9605, 0.0, 3.0, 5.0, 0.0, 0.9783, 0.98, 6.9783, 2.9942, 0.0, 0.0, 0.0, 2.0, 0.9863, 0.0, 0.0, 3.9946, 2.0, 0.0], [0.0, 70.7049, 0.0, 2.9961, 0.0, 7.014, 0.0, 0.0, 1.9868, 0.0, 4.0, 0.9944], [5.0, 71.6358, 0.0, 3.9961, 0.0, 1.0, 0.0, 3.9808, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.9942, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9946, 1.0], [0.0, 62.1019, 0.0, 22.062, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 4.0, 1.9944, 8.0155, 0.9783, 0.0, 6.9783, 5.9942, 0.0, 0.0, 0.0, 0.0, 0.0, 1.9697, 3.9946, 0.0, 11.0263], [0.0, 72.4813, 0.0, 13.0233, 0.0, 9.021, 0.0, 0.9904, 5.0263, 3.9794, 1.0, 0.0], [53.1226, 60.8497, 32.3261, 14.18, 61.3551, 74.5556, 20.9362, 0.0, 0.0, 92.3684, 46.4384, 85.8235], [0.0, 79.6405, 0.0, 1.9961, 0.0, 1.0, 0.0, 0.9904, 0.0, 0.0, 6.0, 0.0, 0.0, 0.9783, 0.0, 0.9928, 1.9942], [0.0, 55.3033, 0.0, 1.9961, 0.9744, 2.0, 0.0, 4.0, 14.9868, 0.0, 21.0095, 24.9889, 1.0, 0.0, 0.0, 2.9855, 0.0, 3.9787, 0.0, 0.9583, 25.0658, 0.0, 0.0, 0.0, 41.0435, 13.0943, 12.0263], [1.1038, 82.0972, 1.9804, 7.0039, 0.0, 4.007, 0.0, 0.0, 1.9868, 0.0, 2.0, 2.9944, 2.0, 1.9783, 0.0, 0.0, 5.0117, 0.9894, 0.9841, 0.0, 3.0, 3.9863, 5.0053, 0.9697, 2.9946, 0.0, 5.0088], [0.0, 94.1452, 0.0, 11.0, 0.0, 0.0, 0.0, 0.9904, 1.9868, 0.0, 8.0, 1.9944, 2.0, 1.9783, 0.0, 1.9928, 1.9942, 2.9787, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 12.4674, 0.0, 5.0088], [0.0, 100.24, 1.9804, 8.9922, 0.0, 0.0, 0.0, 0.0, 11.9211, 0.0, 6.0, 9.0, 4.0052, 0.0, 0.0, 4.9783, 0.0, 0.0, 0.0, 0.0, 4.0, 0.0, 5.0053, 0.0, 4.9946, 6.0189, 25.0702], [0.0, 97.7319, 1.9804, 8.9922, 0.0, 8.014, 0.0, 0.0, 0.9868, 0.0, 19.0095, 8.9944, 1.0, 0.0, 0.0, 6.9783, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9863, 2.0, 0.0, 12.9946, 1.0, 18.0526], [8.0, 113.1827, 0.0, 1.9961, 1.9744, 4.007, 0.0, 1.9904, 0.0, 0.0, 5.0, 0.0, 2.0, 0.0, 0.98, 5.9783, 1.9942], [29.0176, 16.9608, 43.2132, 2.9744, 36.6224, 0.0, 0.0, 38.0395, 0.9897, 55.1374, 63.2944, 24.1917, 16.913, 1.98, 34.9348, 51.3099, 13.9468, 0.0, 20.1316, 6.9726, 15.0267, 0.0, 65.1793, 0.0, 27.1842], [4.0, 110.3349, 4.9608, 3.9961, 0.0, 7.014, 0.0, 16.8947, 0.9897, 21.1137, 0.9944, 0.0, 1.9783, 0.0, 0.9928, 3.9942, 0.0, 0.0, 0.0, 5.0132, 0.0, 0.0, 0.0, 37.0217, 0.0, 3.0], [0.0, 118.4637, 0.0, 3.9961, 0.0, 2.0, 0.0, 0.0, 2.9737, 0.0, 12.0047, 23.0278, 2.0, 1.9783, 0.0, 12.9565, 3.9942, 1.9894, 0.0, 0.0, 0.0, 2.0, 2.9394, 20.2228, 0.0, 2.0], [1.0, 129.6159, 1.9804, 14.9961, 0.0, 3.007, 0.0, 2.9808, 4.9605, 0.0, 19.0095, 20.0111, 0.0, 1.9783, 1.98, 6.9783, 0.0, 2.9787, 0.0, 0.0, 3.0, 4.9863, 4.0053, 0.0, 15.0163, 0.0, 12.0263], [1.0, 134.0047, 0.0, 0.0, 0.0, 3.007, 0.0, 4.9808, 0.9868, 0.0, 22.0284, 11.9944, 0.0, 0.0, 0.0, 4.9783, 4.0526, 0.0, 0.0, 0.0, 3.0, 4.9863, 3.0053, 0.0, 24.0217, 0.0, 15.2018], [19.0094, 156.9871, 12.9961, 0.0, 15.035, 1.0, 7.9615, 39.2368, 8.0103, 39.1185, 37.0111, 35.6114, 7.9565, 0.0, 18.942, 24.9942, 9.0, 0.0, 0.0, 19.1842, 0.9863, 19.0695, 0.0, 42.9076, 9.0189, 0.0], [4.0, 204.4098, 8.9608, 41.0388, 0.9744, 38.1399, 0.0, 6.9615, 30.1316, 9.9485, 30.0427, 21.0278, 15.0311, 0.9783, 0.0, 3.9855, 9.9942, 1.9894, 0.0, 0.0, 1.0, 4.9863, 2.0, 0.0, 40.0054, 11.0755, 15.0351], [0.0, 237.8197, 0.0, 20.0581, 0.0, 17.0629, 0.0, 0.0, 0.0, 0.0, 15.09, 34.9833, 2.0, 0.0, 0.0, 0.9928, 2.9942, 4.9787, 0.0, 2.0, 0.0], [20.0, 221.308, 14.0196, 31.0233, 0.0, 41.2448, 1.0, 13.9327, 31.8026, 5.0103, 12.0095, 9.0222, 18.1606, 23.9348, 0.0, 47.0, 14.0936, 0.9894, 0.0, 1.0, 17.9863, 22.0749, 1.9697, 16.4946, 35.6792, 32.4825], [2.0, 239.37, 16.3725, 56.1202, 0.0, 13.028, 0.0, 2.9808, 25.8684, 11.0, 36.109, 50.6056, 16.0466, 0.9783, 0.0, 42.2464, 32.6433, 8.0, 0.0, 24.0921, 0.0, 18.0535], [20.0, 305.2998, 6.9412, 43.2868, 0.0, 34.3566, 0.0, 5.9712, 36.6053, 0.0, 54.0474, 45.5611, 16.0933, 8.9783, 6.98, 20.9348, 25.0643, 9.9574, 3.9841, 0.0, 31.9342, 11.9726, 15.0267, 2.9394, 27.125, 12.0377, 13.0877], [43.2453, 354.6792, 13.9804, 48.1822, 5.9487, 42.1049, 0.0, 4.9712, 30.2632, 0.0, 79.3033, 59.5944], [3.0, 383.1452, 9.9216, 106.3876, 1.9744, 49.3566, 3.0, 8.9712, 39.7763, 10.9485, 52.0948, 110.3, 42.1347, 18.9348, 0.0, 11.9638, 51.5029, 29.883, 0.0, 0.9583, 44.6842, 11.9863, 32.1497, 4.9091, 109.875, 43.4717, 0.0], [53.4623, 406.1698, 37.1765, 117.7946, 16.2051, 79.7692, 4.0, 27.9423, 62.1316, 22.9897, 126.1848, 95.0889, 63.544, 22.2174, 10.96, 61.4348, 66.462, 38.0106, 11.0, 48.2237, 19.9589, 50.1765, 13.7879, 104.7011, 27.3396, 51.7719], [55.0849, 424.7927, 45.4314, 103.0426, 6.9487, 83.5105, 8.5667, 38.8942, 89.4342, 32.8866, 117.0142, 138.5333, 85.0052, 32.9348, 15.08, 92.1304, 102.8129, 43.0745, 5.9841, 0.0, 67.2632, 35.0137, 76.2941, 10.9697, 156.038, 47.5283, 89.114]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

