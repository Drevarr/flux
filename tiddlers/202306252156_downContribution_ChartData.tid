created: 20230625215649000
creator: Drevarr
modified: 20230705163536869
modifier: drevarr
tags: ChartData
title: 202306252156_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Zayde Sunsabre", "Shaca Booey", "Newtype Khan", "Eibh\u00ebar", "Irish Mini Rev", "Arcanophage Farra", "Cedryn X", "Rina Of Theros", "Rozaalyna", "Tootsy Pop Star", "Mister Jekyll", "Elonith Requiem", "Cerys Fireblade", "Smol Gluvs", "Jacob Pine", "Lord Erin The Wise", "Inedible Plant", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Spellbreaker", "Berserker", "Spellbreaker", "Chronomancer", "Herald", "Spellbreaker", "Berserker", "Scourge", "Reaper", "Reaper", "Reaper", "Reaper", "Berserker", "Reaper", "Reaper", "Weaver", "Vindicator", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.5289, 145.8509, 71.5875, 187.3721, 149.9811, 81.019, 306.6429, 74.878, 184.0714, 0.0, 146.2069, 23.0, 148.1325, 28.1149, 0.0, 92.06], [68.3774, 0.0, 15.2163, 0.0, 80.8553, 73.4558, 5.9315, 5.0965, 84.9, 19.593, 87.2075, 15.4857, 57.6829, 206.3333, 270.4483, 37.9556, 51.8313, 0.0, 24.1591, 109.616], [0.0, 0.0, 37.3221, 225.4356, 278.8639, 29.0343], [107.6226, 9.6048, 12.8317, 0.0, 97.469, 73.034, 16.6552, 154.4123, 73.025, 119.8372, 182.7264, 90.819, 246.6071, 1.7073, 22.2857, 0.0, 155.0, 11.1111, 137.0241, 25.9368, 7.2045, 65.35], [38.5329, 47.8702, 0.2278, 87.6836, 64.2041, 28.2163, 139.2456, 120.45, 79.0581, 218.4717, 89.8476, 242.25, 74.122, 3.381, 0.0, 421.7241, 23.6667, 108.2651, 22.431, 0.0, 56.484], [0.0, 32.5509, 22.3269, 0.0, 64.8903, 80.1497, 4.4732, 28.5263, 0.0, 225.3605, 299.1509, 145.381, 62.9643, 89.0244, 33.4524, 0.0, 0.0, 331.6506, 74.7184, 36.6136, 99.29], [0.0, 0.0, 26.5288, 0.0, 104.1351, 131.0, 37.6852, 122.5175, 65.0, 333.1744, 400.4151, 175.0, 0.0, 9.9756, 162.619, 0.0, 33.2069, 18.4222, 129.7711, 0.0, 224.2045, 119.242], [236.2264, 57.3772, 58.875, 0.0, 186.3863, 205.3673, 8.0193, 0.0, 0.0, 304.8256, 55.2925, 0.0, 105.9643, 0.0, 0.0, 0.0, 124.3333, 407.253, 66.1034, 0.0, 90.836], [12.566, 110.9102, 42.024, 0.0, 207.8553, 276.1565, 19.3833, 365.2544, 142.275, 524.9302, 251.9434, 327.4571, 208.4643], [63.3019, 0.0, 29.5817, 0.0, 204.4928, 126.1361, 26.379, 404.3421, 141.325, 131.3023, 339.5755, 360.0857, 17.8214, 49.9024, 0.0, 564.931, 29.1333, 327.1566, 29.6724, 48.5227, 35.058], [127.2075, 19.6886, 44.6202, 0.0, 128.9857, 174.7007, 8.561, 362.8947, 37.4, 254.7791, 432.8774, 320.581, 13.2439, 230.9048, 0.0, 39.2759, 195.2, 538.0843, 74.9713, 0.0, 74.612], [42.1887, 62.0599, 12.4952, 144.4992, 187.3469, 25.5246, 0.0, 441.5465, 32.283, 377.2095, 490.8214, 33.5854, 107.5952, 0.0, 624.1034, 188.8667, 727.1325, 185.3736, 40.6591, 196.252], [479.5614, 21.425, 352.4767, 886.5377, 325.9714, 384.0357, 149.2439, 247.2619, 0.0, 558.6897, 378.3333, 401.7229, 17.1839, 158.6136, 330.6], [144.3962, 37.982, 59.6635, 9.2405, 113.9539, 123.5238, 11.6103, 357.2807, 74.1375, 562.9767, 613.5472, 78.0286, 296.4286, 168.9512, 309.5238, 0.0, 385.3793, 183.2222, 753.4337, 0.0, 0.0, 379.476], [39.0755, 0.0, 0.0, 0.0, 202.0572, 74.8299, 36.6274, 489.2982, 128.3625, 375.1977, 850.0755, 352.8857, 313.0357, 105.4878, 29.4048, 0.0, 407.7931, 29.7556, 450.2651, 70.6897, 103.0682, 297.656], [30.9872, 461.0, 134.3, 996.314, 1022.7736, 437.3429, 761.3571, 317.9756, 324.9762, 0.0, 432.3103, 181.0222, 604.4217, 85.8621, 112.4545, 412.622], [25.4717, 66.5928, 0.0, 83.3291, 377.3593, 34.2721, 53.591, 660.5351, 260.7375, 823.8837, 543.434, 576.1619, 1.5122, 214.1905, 0.0, 285.1724, 309.1111, 233.4458, 60.1724, 223.6136, 45.138], [651.434, 0.0, 43.726, 78.0, 277.911, 144.9184, 72.349, 593.4298, 41.075, 1079.5116, 805.7736, 754.3048, 134.5, 0.0, 60.9524, 0.0, 442.7831, 125.592, 54.6591, 352.478], [456.2453, 0.0, 50.9904, 37.6582, 558.027, 391.5918, 189.5653, 1061.9825, 480.125, 1428.6977, 1065.7075, 931.0762, 0.0, 219.6098, 53.0952, 0.0, 1048.4483, 439.2444, 1463.241, 0.0, 190.1818, 419.232], [286.9623, 0.0, 27.8894, 45.1392, 617.3052, 472.6599, 87.97, 1319.5439, 293.775, 1392.7442, 337.1415, 1253.3524, 1027.0714, 513.8049, 414.381, 0.0, 1002.8966, 361.8, 457.4217, 222.4828, 179.7955, 513.33], [123.7358, 0.0, 76.5721, 10.5063, 623.1526, 436.8776, 31.5225, 712.114, 499.075, 1228.5, 1058.566, 1330.3524, 273.1429, 356.1463, 576.9048, 612.7241, 693.9556, 700.9518, 492.2126, 424.2727, 635.334]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

