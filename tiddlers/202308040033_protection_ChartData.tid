created: 20230804003338000
creator: Drevarr
tags: ChartData
title: 202308040033_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["World Devourerer", "Eternal Depravity", "Surethang", "Rennok Mistveil", "Govinda Ektar", "Jerryatric Reflexes", "Tirluka", "Squishy Jellyfish", "Scarlet Merc\u00fcry", "Chocolate Teapot", "Drevarr Moonwillow", "Astraea Lumena", "Rafaellagabriela"];
const professions = ["Guardian", "Scrapper", "Firebrand", "Soulbeast", "Vindicator", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 62.667, 0.0, 0.0, 0.0, 21.522, 0.0, 0.0, 0.0, 10.2672, 0.0, 0.0, 16.641, 0.0, 0.0, 20.3006, 0.0, 28.9397, 0.5845], [14.0927, 0.0, 2.5488, 20.3148, 0.0, 34.4589, 22.8421, 18.3396, 5.7868, 9.0423, 8.8828, 25.3778, 27.3775, 0.0, 25.4491, 0.0, 0.0], [0.0, 0.0, 162.3996, 0.0, 0.0, 52.3043], [49.2456, 27.589, 0.0, 13.714, 40.5778, 28.5754, 13.0364, 29.5823, 6.9366, 20.5234, 0.0, 3.486], [0.0, 38.8912, 27.3748, 55.7124, 24.1482, 10.251, 0.0, 55.9786, 36.2637, 13.7028, 4.0248, 3.4776, 0.0, 13.9475], [203.2668, 16.722, 66.1252, 55.3161], [0.0, 0.0, 202.1382, 42.273, 11.5403, 0.0, 55.0215, 0.0, 0.0, 54.1706, 21.7364, 17.6537, 0.0, 0.0, 0.0, 0.0, 7.5348], [74.5212, 37.317, 26.5531, 22.5749, 126.5098, 68.5634, 20.0515, 10.6502, 15.3054, 37.8491], [56.9998, 16.7622, 32.9328, 362.34, 199.7079, 187.0012, 24.9084], [17.16, 4.8984, 18.7488, 177.012, 9.8685, 57.1326, 69.9577, 64.3008, 100.8154, 16.9983, 56.3274, 92.3825, 88.4486, 22.4553, 16.8732, 17.1188, 35.1714, 48.2174, 11.2056, 148.8715, 14.861], [32.1464, 68.8896, 382.833, 0.0, 50.8557, 101.6266, 97.8588, 117.7692, 27.1346, 25.5724, 73.9462, 45.0846, 0.0, 19.8918, 11.3179, 9.7614, 0.0, 4.1454, 236.507, 2.3695], [159.6708, 268.5701, 105.1951, 40.9993, 254.2694, 217.7129, 47.0585, 130.419, 42.1146, 72.0064, 55.4526], [212.7125, 49.3701, 120.5712, 666.2304, 0.0, 211.9543, 153.0064, 123.6852, 282.4897, 125.789, 164.3926, 193.3805, 122.3383, 0.0, 92.3692, 0.0, 20.8692, 77.1808, 12.4026, 358.465, 44.975]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

