created: 20230218220736000
creator: Drevarr
modified: 20230705163519592
modifier: drevarr
tags: ChartData
title: 202302182207_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Adalvarn", "Aveliad Frostmoon", "Mini Mei Rev", "Gabeulon", "Venomina The Fierce", "Xmus Jaxnflaxn Waxn", "Lord Erin The Wise", "El Mas Prron Aki", "Sheep Poh", "Minka Bringer", "Irish Mini Rev", "Aronorf Xideliesi", "Kia Forte", "Drevarr Moonwillow"];
const professions = ["Berserker", "Mirage", "Scrapper", "Renegade", "Firebrand", "Spellbreaker", "Engineer", "Weaver", "Firebrand", "Catalyst", "Scrapper", "Herald", "Firebrand", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[59.8853, 104.7285, 0.0, 0.0, 0.0, 113.1909, 0.0, 0.0, 0.0, 0.0, 0.0], [95.3964, 51.3599, 27.2962, 0.0, 3.9753, 124.3956], [99.787, 107.3925, 73.3824, 56.9296, 15.8621], [100.1664, 81.2146, 93.6601, 93.2122, 9.7324], [48.3849, 82.2377, 43.4088, 0.0, 211.3496, 24.5076, 0.0, 14.4811, 0.0, 41.2339], [97.6014, 0.0, 99.1866, 67.3235, 0.0, 72.4786, 36.6078, 134.2085], [52.5807, 83.2961, 95.1381, 34.7549, 155.2038, 55.4391, 27.2338, 17.3626, 34.9221, 12.0431], [3.9967, 90.0765, 87.1416, 110.3558, 7.9114, 139.2081, 63.8224, 15.7509, 5.3339, 134.258], [271.5425, 138.5336, 0.0, 254.6393], [92.1866, 125.2451, 31.6848, 161.6921, 89.7112, 16.6394, 33.7973, 46.7473, 138.768], [107.3545, 94.0392, 87.6355, 87.6387, 35.1091, 153.1482, 56.0173, 38.0931, 18.5104, 32.3809, 95.0065], [481.1576, 197.6022, 0.0, 100.586, 125.4729], [90.4176, 153.5463, 128.1017, 153.491, 244.7544, 179.0048, 42.2222, 63.7303, 155.3706], [286.7281, 4.1328, 320.6861, 240.4824, 80.0968, 83.8094, 101.9986, 376.1604], [366.224, 189.7434, 214.6435, 233.8493, 103.1232, 429.5729, 208.1697, 132.6793, 84.7618, 134.4047, 309.1553]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

