created: 20230625212343000
creator: Drevarr
modified: 20230705163535633
modifier: drevarr
tags: ChartData
title: 202306252123_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Deutzaqio", "Lord Erin The Wise", "Audra Storm", "Belvyn Brightblade", "Miphest\u00f6", "Sumatra Satyricon", "Shaca Booey", "Tuff Spuffles", "Seiker Novus Terra", "Latedoctor", "Blancooo Padreee", "Irish Necroman", "K\u00f4sair", "Rina Of Theros", "Tegan Parker", "Mike The Archmagus", "Tootsie Pop Khorne", "Elzy Lou", "Johosh The Mighty", "Zayde Sunsabre", "Duke Silvver", "Caelon Cai", "Smol Gluvs", "Palm Sauce", "Artakama Nahid", "Venomina The Siren", "Xanvias Einzbern", "Fribble Bibble", "Enter Effore", "Sakis Ranger", "Ateriuz", "Grasszanine", "Crusader Siolith", "Newtype Khan", "Eibh\u00ebar", "Black Raspberry Pie", "Be\u00eb", "Tika Fiery", "Aronorf Xideliesi", "Axunar", "Koralia Danai", "Traidoruns Maximus", "Sygaldry Verdandi", "Yummy Kiwi", "Morton Saltbringer", "Rahani Sunray", "Drevarr Moonwillow", "Primal Clone", "Bella Sassy", "Ryvalia Fazebringer"];
const professions = ["Vindicator", "Weaver", "Weaver", "Firebrand", "Tempest", "Soulbeast", "Berserker", "Firebrand", "Tempest", "Reaper", "Spellbreaker", "Reaper", "Berserker", "Reaper", "Tempest", "Weaver", "Reaper", "Spellbreaker", "Berserker", "Spellbreaker", "Vindicator", "Reaper", "Reaper", "Vindicator", "Tempest", "Tempest", "Berserker", "Scrapper", "Firebrand", "Druid", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer", "Chronomancer", "Reaper", "Firebrand", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 8, 3, 3, 3, 10, 2, 0, 3, 3, 6, 21], [1, 6, 1, 3, 6, 3, 4, 1, 0, 8, 0, 3, 2, 6, 6, 2, 0, 5, 4, 5, 6, 0, 2], [0, 14, 0, 2, 4, 3, 0, 8, 0, 5, 9, 6, 8, 3, 0, 2, 5, 2, 5], [5, 14, 6, 9, 16, 12, 12, 13, 9], [4, 11, 4, 0, 5, 6, 8, 1, 0, 5, 4, 9, 8, 9, 0, 5, 12, 5, 3], [0, 15, 7, 10, 6, 10, 5, 6, 5, 9, 2, 1, 6, 0, 7, 3, 0, 6, 3, 1, 2], [7, 9, 3, 0, 5, 0, 6, 9, 10, 6, 10, 0, 8, 9, 7, 6, 9, 19], [1, 5, 8, 4, 18, 4, 11, 6, 1, 10, 5, 5, 6, 7, 13, 8, 2, 9, 4], [2, 10, 3, 7, 7, 6, 3, 14, 7, 10, 5, 5, 10, 10, 12, 9, 0, 7, 9], [0, 3, 4, 2, 5, 2, 3, 7, 3, 1, 7, 5, 9, 8, 10, 1, 6, 6, 3, 9, 11, 11, 12, 9], [2, 6, 4, 2, 0, 1, 5, 12, 3, 7, 3, 6, 7, 10, 7, 4, 0, 8, 13, 1, 5, 5, 15, 6, 11], [3, 6, 6, 0, 3, 11, 2, 11, 3, 0, 8, 2, 8, 4, 4, 10, 3, 4, 1, 9, 9, 7, 15, 2, 16], [12, 9, 15, 7, 8, 3, 6, 3, 7, 5, 1, 5, 12, 3, 7, 6, 19, 9, 12], [6, 6, 6, 15, 3, 3, 5, 0, 5, 4, 5, 7, 8, 9, 5, 0, 11, 6, 4, 8, 9, 21, 1, 12], [4, 8, 3, 4, 9, 9, 9, 5, 4, 2, 0, 4, 3, 5, 9, 7, 0, 6, 7, 6, 10, 5, 25, 1, 15], [1, 11, 4, 6, 7, 1, 5, 3, 11, 0, 7, 1, 2, 7, 6, 10, 6, 0, 10, 14, 4, 1, 7, 19, 7, 13], [1, 9, 6, 3, 5, 12, 5, 18, 5, 4, 2, 4, 5, 9, 7, 4, 0, 8, 5, 4, 6, 6, 19, 4, 12], [1, 8, 5, 12, 7, 1, 9, 19, 7, 0, 8, 3, 6, 7, 12, 9, 13, 1, 10, 5, 3, 6, 11], [1, 7, 5, 6, 8, 14, 4, 11, 6, 0, 9, 3, 5, 6, 2, 13, 10, 1, 8, 6, 5, 10, 3, 15, 5, 13], [6, 5, 8, 7, 7, 7, 8, 17, 5, 0, 9, 4, 4, 8, 8, 11, 10, 0, 10, 3, 5, 6, 3, 15, 2, 12], [13, 6, 13, 6, 0, 9, 0, 6, 4, 8, 5, 17, 2, 7, 9, 3, 12, 5, 27, 6, 24], [1, 11, 3, 11, 5, 11, 5, 12, 5, 4, 1, 7, 5, 6, 7, 10, 0, 7, 16, 2, 10, 9, 18, 8, 15], [0, 12, 3, 8, 10, 16, 10, 5, 7, 0, 9, 3, 5, 8, 9, 10, 7, 1, 11, 14, 3, 9, 10, 5, 8, 13], [0, 7, 5, 0, 4, 2, 2, 22, 12, 0, 8, 2, 8, 10, 8, 6, 5, 1, 19, 6, 2, 10, 7, 14, 21, 15], [4, 8, 6, 12, 12, 18, 6, 13, 4, 0, 6, 2, 4, 5, 10, 10, 6, 0, 8, 9, 4, 10, 7, 20, 8, 10], [1, 12, 1, 9, 6, 21, 8, 17, 5, 8, 4, 3, 7, 11, 9, 12, 0, 11, 8, 6, 6, 5, 15, 7, 11], [1, 13, 3, 13, 11, 12, 9, 15, 7, 10, 5, 5, 7, 13, 12, 13, 1, 7, 9, 7, 9, 3, 5, 7, 13], [3, 15, 2, 12, 17, 16, 11, 4, 11, 0, 7, 3, 2, 7, 8, 10, 11, 1, 16, 11, 3, 8, 6, 6, 8, 14], [11, 48, 9, 6, 11, 15, 18, 1, 9, 12, 8, 7, 10, 23, 10, 17], [1, 16, 4, 10, 8, 12, 4, 12, 9, 0, 15, 3, 8, 8, 10, 10, 13, 2, 11, 11, 5, 0, 4, 20, 4, 17], [0, 8, 4, 13, 9, 9, 11, 17, 8, 0, 11, 0, 3, 5, 10, 11, 13, 1, 11, 14, 7, 8, 8, 22, 7, 9], [4, 12, 4, 8, 7, 4, 13, 19, 12, 1, 11, 2, 2, 11, 10, 9, 7, 1, 8, 19, 6, 9, 5, 28, 0, 9], [6, 15, 8, 9, 5, 14, 3, 12, 5, 1, 4, 3, 6, 4, 11, 10, 12, 1, 11, 16, 6, 6, 6, 19, 8, 21], [3, 15, 5, 9, 13, 9, 3, 13, 10, 1, 10, 3, 7, 7, 10, 13, 18, 1, 10, 8, 5, 8, 5, 24, 2, 15], [11, 18, 1, 10, 7, 20, 11, 22, 0, 12, 35, 7, 8, 11, 31, 15, 16], [37, 6, 18, 8, 0, 6, 0, 12, 11, 5, 13, 8, 2, 17, 6, 8, 7, 15, 29, 27, 21], [6, 14, 6, 11, 9, 15, 15, 15, 7, 13, 3, 7, 7, 7, 13, 17, 0, 13, 17, 6, 11, 8, 14, 4, 20], [7, 10, 7, 14, 12, 15, 7, 14, 5, 11, 5, 8, 8, 14, 15, 16, 1, 14, 7, 6, 11, 5, 21, 10, 15], [5, 21, 6, 11, 17, 14, 16, 14, 8, 12, 5, 5, 7, 10, 12, 13, 2, 14, 12, 7, 7, 6, 21, 10, 16], [4, 17, 4, 12, 0, 25, 6, 11, 14, 0, 13, 12, 10, 12, 11, 9, 9, 1, 26, 22, 3, 11, 9, 21, 10, 1], [3, 17, 3, 12, 13, 12, 13, 17, 8, 1, 8, 9, 9, 10, 12, 15, 12, 13, 16, 8, 10, 9, 28, 6, 13], [6, 15, 5, 9, 14, 4, 18, 21, 12, 2, 14, 6, 3, 8, 11, 18, 16, 13, 26, 7, 12, 10, 23, 12], [6, 17, 4, 8, 9, 26, 8, 20, 9, 1, 13, 5, 10, 8, 9, 11, 12, 2, 13, 21, 6, 9, 9, 27, 9, 16], [3, 17, 6, 13, 11, 19, 16, 20, 10, 17, 4, 8, 9, 8, 11, 10, 1, 13, 17, 9, 14, 10, 29, 17, 18], [4, 14, 3, 11, 12, 28, 8, 18, 7, 1, 13, 1, 0, 18, 11, 18, 0, 13, 33, 9, 10, 10, 45, 18, 16], [2, 13, 3, 13, 9, 22, 14, 19, 11, 16, 14, 5, 7, 10, 9, 15, 1, 12, 45, 7, 11, 17, 30, 11, 31], [4, 17, 9, 11, 13, 25, 15, 16, 5, 1, 13, 2, 11, 8, 21, 16, 18, 1, 15, 20, 18, 12, 14, 36, 8, 22], [4, 11, 3, 18, 7, 43, 41, 16, 10, 0, 10, 26, 22, 9, 14, 11, 12, 1, 15, 14, 5, 7, 15, 27, 21, 15], [4, 23, 7, 15, 11, 25, 14, 22, 11, 3, 18, 6, 11, 9, 15, 12, 17, 3, 16, 29, 6, 13, 12, 42, 10, 27], [3, 20, 8, 20, 21, 62, 18, 23, 10, 0, 19, 8, 12, 10, 15, 16, 18, 3, 20, 27, 11, 15, 8, 38, 18, 24]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

