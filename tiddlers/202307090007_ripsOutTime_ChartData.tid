created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Boof Floof", "Jello Jawn", "K\u00e2 \u00d4tik R\u00e6j", "Tika Fiery", "Scythe User", "Zayde Sunsabre", "Glorious Gluvs", "Jerryatric Reflexes", "Newtype Khan", "Tantai Jin", "Red Reaper Robin", "Sarette Fay", "S\u00e2ucy K\u00e2t"];
const professions = ["Firebrand", "Virtuoso", "Spellbreaker", "Firebrand", "Reaper", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Reaper", "Reaper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.992, 1.0, 0.0, 1.3509, 4.1739, 1.0198, 0.0, 0.9914, 0.0, 0.0, 0.9868, 1.0385], [3.984, 2.1569, 0.0, 0.9912, 5.1327], [2.2143, 0.9722, 0.0, 8.5209, 2.0, 0.0, 22.0385], [0.992, 1.0, 0.0, 1.0088, 5.0938, 2.1468, 0.0, 0.0, 5.4698, 0.0, 0.0, 3.9737, 3.0385], [4.024, 0.0, 3.5172, 0.0, 9.8535], [4.0595, 0.9722, 0.0, 12.3116, 0.0, 0.0, 11.5395, 25.7885], [0.992, 1.0, 0.0, 5.0175, 7.3684, 1.2341, 0.9722, 3.9828, 5.1814, 0.0, 1.0, 0.9868, 0.0], [8.984, 5.2745, 0.0, 36.807, 16.135], [0.0, 8.451, 16.8246, 13.3227, 7.4206, 0.0, 10.6552, 13.0605, 0.0, 1.0], [0.0, 11.1961, 5.4828, 12.0175, 14.016, 6.2659, 0.0, 8.3707, 13.8326, 0.0, 3.5932, 6.1316, 26.4231], [8.696, 20.7843, 22.3448, 17.5439, 13.5195, 6.5, 0.0, 11.9224, 12.4279, 0.0, 3.322, 8.2763, 16.7308], [11.864, 2.1569, 0.0, 30.3772, 11.8467, 9.5635, 3.1944, 12.9914, 11.2791, 0.0, 7.7966, 2.0263, 16.7308], [7.176, 8.4706, 8.4828, 27.0789, 16.8627, 14.8333, 9.7222, 15.7155, 11.5535, 1.0, 4.5254]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

