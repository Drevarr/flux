created: 20230902151000000
creator: Drevarr
tags: ChartData
title: 202309021510_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Aezlenne", "Danaeryn", "Necrophagya", "Ria Zerrah", "Uriel Fasulo", "Christiana", "Christiana", "Trodek", "Leo Zoavar", "Drevarr Moonwillow", "Mortuus Araden", "Govinda Ektar", "Leoric Von", "Barrett Provencal", "Serene Azura", "Drac Tepes", "Xuerreux", "Klee Flamepumpkin", "Minnie Darley", "Pinksta", "Xerox T\u00f6sen", "Unbreakable Nemesis", "Koisx", "San Kell", "Banish Evil", "Smol Gluvs", "Liu Mira", "Veichiizh", "Nose Llama", "Wall Knot", "Lurker Holystrike", "Aloe Pen", "Legoh Brave", "Surethang Jr", "Jimbo The Pleb", "Frozen Chaos", "Gestern Yesteryear", "Elonith Requiem"];
const professions = ["Virtuoso", "Tempest", "Reaper", "Vindicator", "Druid", "Tempest", "Weaver", "Scrapper", "Druid", "Scrapper", "Harbinger", "Vindicator", "Vindicator", "Scourge", "Dragonhunter", "Scourge", "Berserker", "Tempest", "Dragonhunter", "Reaper", "Mirage", "Firebrand", "Dragonhunter", "Berserker", "Firebrand", "Reaper", "Berserker", "Druid", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Tempest", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 1, 0, 0, 0, 5], [1, 6, 0], [0, 0, 1, 2, 0, 2, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 2, 2, 1, 0, 0, 0, 3], [0, 4, 4, 1, 3], [7, 10], [0, 1, 1, 1, 2, 0, 2, 0, 0, 0, 3, 4, 5, 0], [4, 1, 5, 0, 5, 3, 1], [0, 1, 15, 2, 3], [1, 0, 3, 4, 0, 1, 2, 2, 2, 2, 1, 4, 2], [1, 0, 2, 0, 1, 2, 0, 1, 8, 1, 0, 2, 2, 4], [1, 7, 4, 2, 0, 2, 0, 0, 0, 1, 1, 5, 1], [6, 5, 4, 12], [7, 0, 13, 8], [0, 3, 0, 1, 0, 0, 4, 1, 1, 1, 5, 0, 3, 4, 2, 4], [4, 6, 9, 0, 2, 9, 2, 1], [0, 1, 0, 0, 1, 0, 0, 3, 1, 2, 1, 2, 0, 6, 0, 9, 9], [0, 0, 0, 0, 0, 0, 0, 6, 4, 2, 1, 2, 2, 13, 1, 10], [2, 4, 1, 3, 9, 14, 2, 4, 0, 2, 0], [2, 4, 6, 1, 5, 10, 0, 6, 5, 2, 0], [1, 1, 6, 0, 2, 1, 12, 4, 0, 4, 1, 1, 3, 4, 2], [4, 5, 2, 4, 0, 6, 11, 8, 9], [3, 3, 0, 6, 2, 13, 0, 0, 12, 4, 3, 4, 0, 0], [1, 2, 1, 2, 1, 1, 5, 4, 1, 0, 12, 0, 7, 14], [3, 4, 6, 15, 3, 14, 0, 4, 1, 1], [11, 8, 10, 11, 1, 2, 9], [2, 4, 0, 7, 8, 7, 17, 1, 2, 3, 0, 3], [8, 3, 1, 3, 2, 2, 4, 4, 19, 0, 3, 6, 2, 2], [2, 0, 1, 0, 2, 1, 0, 4, 3, 1, 0, 4, 1, 7, 8, 6, 10, 4, 0, 3, 4, 1], [0, 0, 1, 1, 0, 0, 3, 6, 0, 0, 4, 1, 18, 2, 9, 11, 1, 1, 4], [1, 1, 0, 10, 2, 0, 0, 4, 0, 13, 8, 7, 13, 0, 0, 4], [1, 3, 5, 3, 9, 7, 12, 4, 5, 14, 4, 0], [0, 1, 3, 0, 3, 4, 1, 1, 5, 2, 11, 6, 10, 9, 0, 3, 5, 1, 3], [2, 1, 1, 1, 0, 0, 11, 3, 2, 0, 2, 2, 12, 7, 1, 8, 5, 4, 7, 3, 1], [0, 0, 2, 0, 1, 3, 0, 0, 3, 2, 2, 2, 2, 7, 9, 5, 14, 5, 10, 8, 1], [1, 1, 0, 6, 2, 3, 0, 3, 2, 4, 7, 9, 14, 2, 1, 14, 4, 4], [5, 0, 3, 3, 1, 0, 0, 8, 2, 0, 1, 3, 0, 14, 12, 4, 6, 3, 2, 8, 5, 3], [1, 0, 1, 0, 2, 0, 1, 9, 9, 3, 0, 4, 5, 11, 10, 5, 13, 2, 1, 9, 1]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

