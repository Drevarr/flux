created: 20230403221011000
creator: Drevarr
modified: 20230705163524239
modifier: drevarr
tags: ChartData
title: 202304032210_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Rozaalyna", "Seren Nightroad", "Drevarr Moonwillow", "Smol Gluvs", "Newtype Khan", "Be\u00eb", "Lagertha Scorned", "Fribble Bibble", "Your Arch Nemesis", "Tootsie Pop Rocks", "My Birthday Girl"];
const professions = ["Scrapper", "Scourge", "Scourge", "Scrapper", "Scourge", "Spellbreaker", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4407, 8222, 6949, 8302, 1260, 876, 10888, 2027, 362, 547, 0, 8113, 1333, 254, 278, 0], [16961, 32310, 1039, 11300, 78], [4192, 36720, 9313, 12107, 147, 0, 10286], [6834, 23657, 4666, 10237, 557, 397, 3643, 12413, 1408, 910, 0, 10711, 0, 2178, 1142, 8, 0], [12297, 33352, 6049, 14433, 0, 450, 3612, 8791, 2335, 5290, 0, 0, 2854], [10477, 27238, 3454, 11562, 1308, 1028, 5974, 10561, 0, 2312, 0, 0, 18098, 0, 3068, 1898, 0, 0], [6669, 29654, 7403, 14311, 1188, 0, 11305, 17088, 2496, 4722, 0, 0, 21312, 0, 10409, 0, 0], [38991, 19663, 14602, 804, 521, 22538, 14344, 10823, 15100, 0, 0, 46121, 0, 11067], [15633, 1072, 843, 29926, 23312, 3734, 32497, 55653, 10586, 1024, 0, 0, 26415, 0, 9537, 527, 19, 0], [25384, 64295, 30257, 7664, 2804, 48742, 42080, 7373, 9565, 0, 0, 45489, 10988, 0, 271], [21127, 110565, 10230, 32815, 3744, 6837, 29809, 20036, 14335, 5334, 0, 35351, 0, 14076, 2695, 0, 0], [47235, 154768, 22617, 57310, 34777, 12717, 40940, 39728, 13275, 14018, 0, 0, 72801, 1836, 18105, 0, 1199, 735]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

