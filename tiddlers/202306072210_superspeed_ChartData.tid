created: 20230607221050000
creator: Drevarr
modified: 20230705163534190
modifier: drevarr
tags: ChartData
title: 202306072210_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Manuel Radiador", "Tootsie Pop Rocks", "Zayde Sunsabre", "Newtype Khan", "Tegan Parker", "Artakama Nahid", "Grasszanine", "Venomina The Siren", "Skye Nightroad", "Shaca Booey", "Uneeta Healah", "Cyclotechnist Farra", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1.107, 2.835, 1.441, 0.673, 2.093, 1.661], [0.536, 0.262, 0.259, 0, 0.979, 0.503, 0, 0.18, 0, 0.631, 0.592, 0, 0.553], [0.216, 0.435, 0.431, 0.076, 0.363, 0.428, 0, 0.4, 1.317, 0.579, 0.598, 0.795, 0], [0, 0, 0.414, 0, 0.771, 0.13, 0, 0.801, 0, 0.857, 1.041, 0, 0.969], [0.259, 0, 0.497, 0.369, 0.781, 0.209, 0, 1.072, 1.057, 0.513, 0.523, 0.615, 0.718], [0.13, 0, 0.52, 0.553, 0.741, 0.279, 0, 0.48, 0.718, 0.563, 0.523, 0.99, 0.444], [0, 0.435, 0.568, 0.077, 1.08, 0.929, 0, 0.801, 0, 0.935, 0.698, 0.772, 0], [0.26, 0.574, 0.738, 0.828, 0.556, 1.442, 1.146, 0.76, 0.421, 0.523, 0.889, 0.945], [1.284, 0.392, 0.762, 1.434], [0.217, 0.867, 0.776, 0.638, 0.499, 0.465, 0, 0.544, 1.59, 1.5, 0.769, 0.333, 0.712], [0.789, 0.572, 0.847, 0.834, 0.374, 0.546, 0, 2.313, 1.076, 0.407, 1.045, 1.607, 1.044], [0.395, 0.131, 0.786, 0.183, 0.599, 1.52, 1.715, 2.08, 2.239, 1.615, 1.443, 2.074], [0.433, 0.434, 1.039, 0.921, 1.317, 0.965, 0, 0.568, 1.201, 1.398, 1.046, 1.853, 0.922], [0.868, 1.306, 1.524, 1.682, 1.91, 1.592, 1.268, 1.441, 1.396, 1.96, 1.763, 1.287, 1.445]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

