created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Avatar Shazbott", "Grasszanine", "Tirluka", "Audra Storm", "Jerryatric Reflexes", "Fluffys Dankest", "Newtype Khan", "Reyga Bannerclaw", "Drevarr Moonwillow", "Rosetendril"];
const professions = ["Tempest", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Vindicator", "Spellbreaker", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[108.4174, 22.3293, 17.3779, 95.2019, 178.3452, 112.2709], [133.0872, 0.0, 32.5542, 0.0, 171.0903, 39.7888, 138.2573, 265.9272], [59.2628, 83.1365, 179.4153, 25.8944, 107.7344, 83.336, 71.75, 53.1936, 148.5235, 52.7632, 93.5424], [83.173, 86.76, 76.9116, 0.0, 10.2106, 0.0, 0.0, 0.0, 0.0, 214.2312, 0.0, 0.0, 0.0, 143.2243, 0.0, 95.1653, 230.5217, 120.8844], [64.5174, 77.9398, 189.9173, 38.3542, 130.331, 67.2826, 57.8443, 87.4463, 41.9528, 78.7093, 0.0, 0.0, 96.9554, 0.0, 94.4298, 47.411, 49.896, 0.0, 39.7894, 163.8819, 0.0, 37.169, 0.0, 73.8003, 115.2511, 78.3432], [191.9256, 139.0684, 197.79, 40.2761, 261.1715, 396.9322, 54.8785, 130.1762, 192.542, 37.6956, 222.5812, 30.9187, 54.5292, 12.502, 8.2152, 4.9966, 137.0785, 8.2398, 72.1404, 57.694, 86.8903], [153.4853, 292.572, 235.6782, 198.623, 11.2153, 181.8538, 33.628, 81.2763, 55.4928, 37.128, 389.712, 35.8882, 37.2232, 27.857, 136.8187, 159.0205, 133.4589, 166.668, 96.5869, 160.8125, 211.5277, 58.9243, 208.0828, 126.6398, 49.5149, 165.51, 46.0221, 62.1578, 0.0, 63.0216, 153.4472, 81.4576, 154.4598, 174.1376, 148.6663, 37.8267, 66.5215, 180.2074], [213.1272, 154.17, 122.2154, 83.2093, 36.6742, 89.2962, 78.631, 62.1692, 25.7664, 32.4826, 257.508, 0.0, 95.8079, 15.089, 144.6232, 27.3125, 90.3798, 386.7969, 5.4726, 79.1762, 15.4759, 112.7077, 213.9178, 148.0641, 81.8254, 105.7207, 58.9202, 153.8044, 316.7195, 92.5361, 110.9539, 29.631, 0.0, 253.53, 3.9538, 96.748, 64.932, 95.4576, 54.8957, 144.0188, 46.3658, 177.9237, 105.7056, 93.258, 65.2944, 115.5352, 169.8327], [219.8383, 120.222, 160.0078, 164.1024, 25.9033, 86.0798, 4.977, 83.7207, 39.9036, 385.0752, 30.0023, 21.9089, 29.7677, 305.9207, 9.7888, 130.909, 519.9358, 211.4456, 35.0784, 4.1328, 0.0, 12.7151, 39.7165, 122.5012, 92.7048, 36.126, 110.4518, 83.9998, 165.1331, 278.4564, 95.8409, 125.2434, 83.4904, 45.4301, 156.5325, 68.0038, 130.2642, 21.077, 0.0, 0.0, 87.0294, 18.3613, 76.6035, 43.2978, 107.419, 4.9642, 33.2327, 148.6134, 93.9484, 10.121, 39.4128, 40.4026, 292.9368, 84.2189], [399.1291, 280.62, 294.5924, 347.9414, 41.6346, 104.5704, 67.991, 36.9104, 7.3814, 804.1536, 0.0, 100.5509, 22.8798, 686.4784, 26.2244, 393.8609, 929.8689, 445.3672, 1.4328, 0.0, 7.6824, 44.2442, 154.8842, 239.1995, 158.2805, 101.0416, 168.1785, 180.3162, 328.4291, 469.4542, 156.7956, 124.9559, 235.977, 47.3038, 131.2537, 15.1419, 150.7677, 39.3624, 70.9553, 188.5942, 65.0642, 198.4905, 107.1434, 194.5231, 44.8267, 103.6994, 369.7326, 151.4058, 136.7321, 75.0221, 51.8496, 578.8387, 283.594]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

