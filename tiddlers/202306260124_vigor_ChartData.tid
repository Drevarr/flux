created: 20230626012458000
creator: Drevarr
modified: 20230705163538393
modifier: drevarr
tags: ChartData
title: 202306260124_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Arriasa", "Mememonoko", "Newtype Khan", "Elon The Archmagus", "Miphest\u00f6", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Spellbreaker", "Druid", "Vindicator", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.4534, 25.762, 78.1805, 0.0, 59.7878, 32.4403, 66.834, 4.5346], [0.0, 0.0, 0.0, 90.6539, 28.4891, 88.4048, 10.6042, 0.0, 0.0, 0.0, 0.0, 21.3875, 45.3446, 43.6992, 46.1174], [59.587, 32.4, 32.9868, 146.6746, 30.307, 160.9586], [0.0, 36.2621, 34.839, 118.9681, 50.3818, 144.4633, 3.7094, 26.292, 68.112, 0.0, 0.0, 15.7243, 0.0, 7.7299, 0.0, 31.9027], [85.7261, 52.712, 59.351, 57.3926, 96.6995, 107.0784, 58.2375, 74.3861], [243.0456, 53.5766, 69.4575, 486.323, 13.2707, 115.4675, 20.16, 0.0, 6.0509, 0.0, 2.9837, 0.0, 0.0, 0.0, 0.0, 23.1552], [203.4741, 79.704, 50.6268, 681.7272, 67.9895, 430.0392, 8.0035, 67.8216, 133.056, 48.862, 9.6163, 45.1426, 41.3168, 26.4422, 101.8945, 3.409], [157.5201, 157.7232, 133.9758, 930.6002, 103.023, 1025.8052, 69.048, 42.7392, 108.8208, 52.6579, 76.3205, 100.011, 116.3923, 71.5116, 47.4038]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

