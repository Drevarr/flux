created: 20230222220539000
creator: Drevarr
modified: 20230705163519863
modifier: drevarr
tags: ChartData
title: 202302222205_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Kosair", "Bella Sassy", "Tootsie Pop Bringer", "Sygaldry Verdandi", "My Birthday Girl", "Rina Of Theros", "Primal Clone", "Ace Hammers", "Drevarr Moonwillow", "Kiloak", "Sp\u00edcy Cheese", "Smol Gluvs", "Venomina The Siren", "Xanvias Tseli", "Xyntharos", "Ravioli Fetabringer", "Zaylen Harker", "Ark Darkness", "Ryvalia Fazebringer", "Zadie Miststep", "One Whole Keg", "Sofya De Meme", "Eibh\u00ebar", "Legacy Of Mathus", "Dark Sidiuz", "Sassy Daddy Demon", "Mustache Bloodclaw", "Lord Erin The Wise", "Kmpek", "Acme Corporation", "Black Raspberry Pie", "Mike The Archmagus", "Arcanophage Farra", "Blanco Padre Guard", "Husky Guard", "Newtype Khan", "Sumatra Satyricon", "Mac Aaroni", "Smol Daddy Tika"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Scourge", "Chronomancer", "Vindicator", "Scrapper", "Firebrand", "Berserker", "Scourge", "Tempest", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Berserker", "Catalyst", "Chronomancer", "Berserker", "Scourge", "Vindicator", "Herald", "Weaver", "Vindicator", "Scrapper", "Chronomancer", "Tempest", "Spellbreaker", "Firebrand", "Dragonhunter", "Spellbreaker", "Soulbeast", "Tempest", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 16, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 3, 2], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0], [0, 0, 0, 0, 0, 22, 0, 0, 0, 0], [0, 0, 0, 0, 0, 23, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0], [0, 5, 0, 0, 0, 0, 21, 0, 0, 0, 0], [0, 0, 0, 0, 0, 26, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 20, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 11, 22, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 34, 0, 0, 0], [0, 0, 8, 0, 0, 20, 11, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 13, 1, 26, 0, 0], [0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 19, 16, 12, 0, 0], [0, 0, 0, 0, 0, 44, 2, 0, 0, 1], [0, 0, 0, 1, 2, 0, 2, 38, 2, 4, 2, 5], [0, 0, 0, 0, 0, 0, 0, 29, 20, 0, 8, 0], [2, 0, 13, 45, 0, 0, 0], [0, 0, 0, 0, 0, 0, 21, 16, 0, 27, 0, 0], [0, 0, 0, 0, 5, 30, 29], [0, 0, 0, 0, 0, 0, 0, 13, 23, 37, 0, 0], [0, 0, 0, 0, 0, 33, 27, 0, 0, 16], [0, 0, 0, 18, 4, 19, 14, 2, 19], [0, 0, 0, 0, 0, 2, 0, 13, 35, 0, 0, 30], [0, 0, 0, 0, 0, 0, 0, 20, 0, 60, 0, 0], [0, 0, 0, 0, 0, 0, 34, 36, 9, 5, 0, 0], [0, 0, 0, 0, 0, 0, 14, 0, 0, 61, 20, 0], [0, 0, 0, 0, 39, 46, 0, 7, 4], [0, 0, 0, 0, 0, 0, 34, 61, 3, 11, 0, 0], [3, 0, 0, 0, 0, 0, 0, 28, 80, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 56, 20, 0], [0, 0, 0, 0, 0, 0, 49, 6, 100, 5, 11, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

