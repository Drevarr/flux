created: 20230524221126000
creator: Drevarr
modified: 20230705163531374
modifier: drevarr
tags: ChartData
title: 202305242211_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Creator Zim", "Pie Snarglebringer", "Legacy Of Mathus", "Morton Saltbringer", "Ravioli Ryebringer", "Queen Josie", "Kary\u00edna", "Pieca Pizzabringer", "Bella Lunabringer", "Sizzln Sisigbringer", "Spicy Gyrosbringer", "Ryvalia Fazebringer", "Band Aidbringer", "Panther B Me", "Newtype Khan", "No Reserv\u00e9", "Inedible Plant", "Blanco Padre Guard", "Brioche Bunbringer", "Cinder Flamebringer", "Ria Zerria", "Tin Holo", "Bee Honeybringer", "Nocta Asthariel", "Demon Maddx", "Smol Gluvs", "Pepper Cornbringer", "Tootsie Pop Bringer", "Mixon Cue Bringer", "Plum Crazybringer"];
const professions = ["Spellbreaker", "Mechanist", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Willbender", "Vindicator", "Firebrand", "Firebrand", "Weaver", "Scrapper", "Chronomancer", "Scrapper", "Scourge", "Spellbreaker", "Vindicator", "Vindicator", "Firebrand", "Chronomancer", "Weaver", "Scourge", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5538, 0, 0, 2025, 0, 6874, 452, 0], [4199, 3426, 3112, 4583], [3511, 0, 0, 573, 1440, 0, 1009, 0, 0, 1097, 1248, 6842], [3017, 0, 0, 0, 4851, 269, 0, 0, 5231, 261, 807, 2383], [1854, 4350, 3771, 28, 0, 0, 0, 4168, 3343, 1099], [2465, 0, 0, 2496, 4881, 1586, 1248, 0, 0, 1591, 4606, 0], [2516, 0, 0, 1603, 4596, 0, 0, 0, 1188, 0, 3712, 6147], [3744, 0, 0, 3742, 1018, 2465, 0, 0, 6180, 1368, 538, 1400], [3609, 0, 2656, 2465, 1248, 0, 3606, 5254, 0, 5005], [4356, 0, 0, 0, 3367, 0, 2506, 0, 7141, 1226, 2097, 5169], [0, 0, 0, 3134, 10953, 269, 0, 10770, 530, 807, 1576], [3320, 0, 0, 905, 2450, 3767, 1570, 256, 7842, 2882, 2216, 3535], [5483, 0, 0, 894, 4211, 4740, 1258, 0, 3526, 12, 1109, 7648], [3215, 0, 0, 831, 4856, 7906, 592, 0, 3266, 1896, 1096, 5333], [6586, 0, 0, 4883, 3696, 0, 0, 0, 7726, 2603, 0, 3560], [4039, 0, 3640, 13584, 250, 1000, 0, 12, 718, 4606, 2259], [9726, 0, 0, 1456, 3700, 1248, 1248, 0, 4782, 269, 1109, 6909], [1882, 0, 0, 699, 4419, 1380, 0, 0, 3226, 8400, 4454, 8776], [2596, 0, 0, 1033, 6357, 2465, 1248, 0, 9623, 3870, 2260, 3990], [2261, 0, 0, 5168, 11399, 1413, 1258, 0, 3703, 802, 0, 7803], [6577, 0, 0, 7162, 7150, 1248, 0, 2420, 0, 1109, 8501], [6154, 0, 0, 4722, 1075, 4528, 0, 6906, 1188, 3713, 10095], [11764, 0, 0, 6855, 15045, 848, 4317], [12638, 5036, 9545, 31, 1248, 0, 2465, 2336, 8945], [5325, 0, 0, 4284, 3774, 2439, 0, 11168, 4158, 1496, 10961], [9969, 0, 0, 1914, 6849, 2037, 3487, 0, 6010, 5716, 3497, 7154], [13278, 1959, 0, 10776, 11085, 4303, 2058, 530, 7021, 1662, 0, 12386], [25772, 8713, 1955, 7063, 30261], [19330, 891, 724, 13680, 27031, 9507, 7090, 0, 4447, 2384, 2078, 45473], [18044, 0, 0, 17292, 31721, 2887, 10556, 45, 12204, 19841, 2471, 17773], [19057, 0, 198, 11496, 22307, 7219, 8960, 434, 14644, 2569, 2980, 52824]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

