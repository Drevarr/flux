created: 20230625214748000
creator: Drevarr
modified: 20230705163536329
modifier: drevarr
tags: ChartData
title: 202306252147_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Gestern Yesteryear", "Tegan Parker", "Elonith Primal", "Sakis Ranger", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[152.2445, 91.8218, 205.7289, 129.0667, 204.2249, 200.9704, 284.9247, 485.0984, 337.3917, 93.4549, 15.1455, 392.3643, 74.2373], [404.6841, 254.4257, 142.2229, 275.1111, 287.3526, 395.142, 540.2048, 1052.3703, 607.5622, 0.3433, 190.9882, 1.3091, 609.0406, 163.3529, 241.5424], [405.5165, 560.5149, 155.9157, 108.0222, 535.8845, 356.2219, 831.1792, 1311.093, 922.5023, 0.0, 150.9725, 0.0, 792.4877, 0.0], [567.6154, 295.4752, 631.512, 128.2667, 519.2036, 550.213, 864.5316, 1465.4007, 861.0691, 5.2836, 212.4588, 117.0545, 986.6691], [483.0027, 710.6337, 566.9217, 811.1778, 657.2857, 645.5976, 1076.3494, 2206.737, 1250.6313, 5.2537, 214.498, 141.6182, 1229.2366, 267.7647, 1.2203], [699.4038, 621.297, 689.4096, 129.9556, 741.0, 1013.8521, 1350.884, 2362.5689, 1713.3548, 10.0149, 356.4039, 162.6, 1767.5486, 49.2059, 913.9322], [1000.0659, 674.1881, 747.4458, 115.7778, 1027.9605, 1102.929, 1783.2982, 2912.4454, 2349.0461, 48.4925, 296.1882, 158.0727, 2354.0406, 44.9412, 237.2712]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

