created: 20230419215809000
creator: Drevarr
modified: 20230705163526010
modifier: drevarr
tags: ChartData
title: 202304192158_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Cedryn X", "Smol Gluvs", "Nazhul Naxxremis", "Elonith Requiem", "Panther B Me", "Rina Of Theros", "Daddys Lil Orchid", "Smol Daddy Tika", "My Birthday Girl", "Kmpek", "Be\u00eb", "Lord Erin The Wise", "Kos\u00e4ir", "Sp\u00edcy Cheese", "Xyntharos", "Mike The Archmagus", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Vindicator", "Berserker", "Scrapper", "Vindicator", "Scourge", "Weaver", "Vindicator", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 318.7059, 203.0138, 160.3514, 134.5498, 353.9699, 520.0452, 597.069, 0.0, 477.4124, 84.9016, 132.4755, 443.3596, 197.95, 678.7285, 162.6045, 238.75, 141.7281, 105.6667, 415.9643, 341.1831], [443.5676, 122.0, 314.2231, 506.3378, 248.681, 940.4436, 33.5176, 975.4483, 0.0, 81.4412, 637.4124, 203.8689, 386.8226, 657.1478, 32.9286, 533.5364, 122.0, 142.4828, 84.8772, 797.8571, 473.3036, 70.4225], [61.7027, 318.0588, 230.0992, 383.0811, 175.4389, 586.8195, 733.4925, 1119.1552, 0.0, 25.0294, 422.6392, 23.0984, 288.5887, 882.7143, 277.5643, 648.0, 222.9727, 456.2328, 333.2105, 202.4762, 577.75, 495.4789], [1366.2703, 266.9457, 1077.1654, 779.4271, 1992.2759, 211.8529, 665.2474, 26.1311, 497.3472, 593.7143, 0.0, 713.9139, 253.3409, 171.4828, 247.6053], [753.0677, 713.6131, 1931.4483, 0.0, 225.5588, 912.701, 92.5082, 41.6226, 631.803, 941.4929, 1962.9007, 240.4182, 1187.6552, 922.614, 527.9524, 602.0893, 1450.169], [160.8649, 441.9412, 408.5234, 793.6081, 304.3756, 1175.4586, 810.4171, 463.4052, 1.4746, 374.3235, 904.1443, 180.9672, 520.1358, 1268.4384, 740.7143, 95.8146, 451.7045, 642.7069, 455.386, 387.6667, 944.1071, 1242.0282], [206.5946, 220.1471, 522.3912, 818.2297, 191.6244, 1044.9774, 1120.6382, 798.75, 0.0, 104.9706, 622.1959, 131.2131, 466.5094, 743.6798, 372.2786, 1455.596, 439.4273, 829.1121, 762.7018, 451.9524, 256.6964, 1478.9437], [223.7838, 446.2941, 517.9642, 1272.5946, 300.4208, 1566.7744, 1401.5327, 1538.8879, 0.0, 49.8824, 801.9381, 34.0164, 774.717, 735.7071, 1765.9801, 324.0545, 666.2155, 339.0702, 453.6667, 322.5714, 1707.9014], [440.3529, 572.3388, 886.1622, 348.0656, 1699.1654, 670.9296, 1600.0, 0.0, 219.5, 877.1031, 35.3279, 723.7925, 1725.8177, 185.4286, 1669.0265, 491.6727, 676.3966, 617.5526, 1562.5238, 1424.4821, 295.662], [774.9189, 250.2353, 539.0523, 1126.527, 539.8122, 1458.6391, 1110.5528, 1750.0345, 0.0, 782.5, 1004.4433, 297.1148, 130.0943, 1504.064, 768.3429, 671.0066, 344.8773, 795.7328, 1015.4825, 2742.1905, 909.1964, 1375.0986], [140.6216, 44.7353, 623.7107, 1275.7432, 512.8982, 1705.797, 923.2915, 1842.3362, 0.0, 481.5, 1148.6907, 103.6393, 961.7925, 43.8128, 535.2786, 2036.7748, 601.3545, 1219.75, 190.2544, 326.7143, 935.4286, 1030.9155], [1153.1471, 515.708, 1176.5405, 401.4548, 1317.1203, 1131.3065, 1827.0172, 0.0, 64.3529, 1025.9175, 146.377, 836.1774, 1328.7734, 417.35, 1896.5762, 367.8864, 1148.1983, 673.7544, 269.2857, 168.6071, 1529.5915], [428.2941, 547.5179, 2202.8784, 613.2308, 1640.4211, 1526.2915, 1526.9052, 21.9661, 364.4706, 911.5979, 177.2459, 476.5925, 1314.4039, 456.6571, 1384.7086, 596.2182, 1635.2931, 2582.5702, 1769.9524, 1572.8571], [118.7568, 1494.6471, 285.3416, 1327.3919, 766.7127, 3287.6767, 1834.7789, 3736.2069, 0.0, 171.0588, 986.1237, 141.3934, 1182.2226, 3483.8768, 1246.6357, 1176.381, 2280.6429, 494.9577], [0.0, 1298.2353, 766.6556, 2132.4324, 440.0, 2213.7143, 0.0, 547.9741, 0.0, 318.2059, 1918.5361, 76.4098, 1130.4792, 2208.7635, 760.6143, 2151.0464, 794.7227, 2261.3966, 926.6228, 1079.1429, 2808.8393, 3922.0282], [81.5135, 887.0882, 1131.9174, 1912.9595, 444.7783, 2451.406, 2218.6231, 2991.931, 0.0, 0.0, 1534.4536, 55.459, 1386.1962, 3662.8227, 548.4357, 2633.4901, 814.2227, 1478.7069, 738.4737, 1299.0476, 1821.5179, 1907.9577], [946.7568, 461.7941, 1462.3278, 3241.7568, 775.3348, 946.8571, 2626.593, 4313.1466, 0.0, 297.4412, 1462.4845, 608.4754, 1722.2528, 1702.601, 3081.3143, 690.053, 88.2955, 2750.3707, 2591.5965, 6561.8095, 3971.9821, 154.3944], [673.0811, 1423.7647, 1576.2121, 2567.6486, 770.638, 3116.7895, 3151.4573, 2981.7328, 0.0, 547.5294, 2821.5258, 326.7541, 1612.3736, 3759.936, 2163.8786, 3193.6291, 1302.0045, 928.0345, 1002.4386, 865.4286, 2567.3929, 1255.7324], [160.4324, 651.6176, 2115.124, 3269.2568, 1233.9434, 4878.0, 3841.2714, 4421.681, 0.0, 2022.5155, 149.8033, 2235.1321, 4039.7685, 3130.05, 5148.1656, 1774.3636, 3588.6293, 2329.7895, 438.1429, 5708.7857, 2159.1408]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

