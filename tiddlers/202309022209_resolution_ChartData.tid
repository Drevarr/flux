created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Melmyr", "Newtype Khan", "Unnamed Charr", "Sygaldry Verdandi", "Belvyn Brightblade", "Sygaldry Verdandi", "Zaedy Zae", "Unbreakable Nemesis", "Greg The Knight", "Koralia Danai", "Crusader Siolith", "Gabe Malhorn", "Bella Sassy"];
const professions = ["Willbender", "Spellbreaker", "Dragonhunter", "Willbender", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.2525, 13.8291, 0.0, 0.0, 18.7956, 28.3383, 79.212, 9.0051, 0.0, 65.995, 78.2548, 19.9162, 14.9856, 55.8734], [0.0, 101.5479, 0.0, 0.0, 0.0, 0.0, 0.0, 21.8492, 138.252, 49.3284, 9.3392, 15.0035, 19.0199, 0.0, 41.1312, 17.8399, 28.0314, 80.6673, 30.044, 15.2544, 56.2212], [160.7656, 22.2881, 451.0618, 16.0717, 0.0], [79.1509, 0.0, 348.4239, 27.6816, 1.26, 55.7414, 72.9882, 148.427, 249.69, 82.735, 7.1913], [47.2236, 0.0, 433.9857, 0.0, 0.0, 191.8848, 47.196, 0.0, 784.002, 213.0401], [151.7431, 252.6619, 197.2971, 301.1272, 152.5495, 114.4746, 422.7871, 266.8313, 151.2, 539.6076], [52.7672, 426.1744, 63.1888, 0.0, 49.9533, 0.0, 75.0996, 161.4872, 515.37, 222.6127, 14.4304, 57.7372, 50.6771, 92.9643, 155.4124, 71.1776, 36.2921, 248.787, 48.772, 112.3584, 189.5292], [195.0326, 0.0, 0.0, 69.9246, 90.1897, 663.462, 286.2024, 0.0, 278.6388, 28.3072, 191.7959, 306.2342, 143.3171, 83.8656, 339.7615], [49.64, 67.7069, 1.0695, 16.146, 217.671, 795.318, 275.2622, 94.3312, 177.008, 96.4821, 297.616, 113.9115, 117.8415, 158.319, 138.1684, 35.4144, 258.1538], [259.6785, 56.3157, 1389.8807, 116.3094, 227.1974, 47.8584, 463.0232, 800.484, 493.284, 73.0587, 209.521, 216.1114, 269.5407, 362.4896, 211.1209, 139.648, 662.6781, 218.1159, 283.1808, 516.4236], [173.5981, 1421.3078, 215.8464, 18.1008, 230.5779, 0.0, 0.0, 353.6948, 842.55, 610.0116, 90.7029, 268.1527, 256.1085, 372.3291, 446.842, 25.5766, 84.1725, 775.16, 211.8355, 184.5312, 464.0278], [178.5257, 33.075, 1585.1652, 245.2566, 34.9272, 201.175, 0.0, 0.0, 357.3911, 1293.468, 415.433, 105.9129, 215.9046, 258.0657, 315.1005, 546.9948, 139.7157, 110.4422, 488.678, 207.9315, 255.36, 764.2606], [307.9287, 1420.9445, 186.553, 16.2, 235.4906, 228.9834, 393.7792, 1514.622, 563.2229, 142.8082, 312.7161, 286.8295, 153.9252, 260.2468, 206.3423, 120.6212, 591.6607, 322.6192, 261.9456, 609.5074]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

