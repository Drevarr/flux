created: 20230510220110000
creator: Drevarr
modified: 20230705163529625
modifier: drevarr
tags: ChartData
title: 202305102201_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Mac Aaroni", "Miphest\u00f6", "Tegan Parker", "Mike The Archmagus", "Blancooo Padreee", "Venomina The Siren", "Artakama Nahid", "Oops All Beans", "Xanvias Einzbern", "Drevarr Moonwillow", "Johoshua"];
const professions = ["Berserker", "Tempest", "Tempest", "Tempest", "Weaver", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.587, 0.509, 0.39, 0, 0.119], [0, 0, 0.147, 0.139, 0, 0.2, 0.182, 0.651, 0, 0, 0.606, 0.578, 0.299, 0.135, 0, 0.193], [0.441, 0.196, 0.261, 0.294, 0.267, 0, 0.648, 0.228, 0.011, 0.302, 0.274, 0.232, 0.215], [0, 0.195, 0.174, 0.293, 0.267, 0, 0.648, 0, 0.627, 0.315, 0.404, 0.234, 0, 0.221], [0.568, 0, 0.195, 0.5, 0, 0.12, 0.409, 0, 0, 0, 0.349, 0.519, 0, 0.535, 0.328], [2.365, 0.226, 0.354, 0.144, 0, 0.467, 0, 1.35, 0, 0.376, 1.247, 0.532, 0.205, 0.568, 0, 0.209], [0.26, 0.347, 0.636, 0.533, 0.197, 0.702, 0, 0.695, 0.474, 0.36, 0.252, 0.316], [1.297, 0.951, 0.195, 0.522, 0, 0.354, 0.545, 0.647, 0, 0, 0.699, 0, 0.401, 0.698, 0.731, 0.5], [0, 0.974, 0.653, 0.404, 0, 0.445, 0, 0.336, 0.258, 1.538, 0.698, 0.578, 0.435, 0, 0.233], [2.167, 0, 0.789, 0.602, 0.49, 0.712, 0, 1.08, 0.442, 0.917, 0.145, 0.574, 0, 0, 0.238], [3.244, 1.724, 1.174, 1.262, 1.47, 1.369, 0.703, 2.366, 1.372, 0.452, 2.78, 1.027, 1.321, 0.795, 2.33, 0.93], [2.608, 1.147, 1.704, 1.782, 1.418, 1.698, 0.702, 1.943, 1.79, 0.337, 1.142, 0.552, 0.973, 1.036, 1.352, 0.712]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

