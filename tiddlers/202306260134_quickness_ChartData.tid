created: 20230626013408000
creator: Drevarr
modified: 20230705163538916
modifier: drevarr
tags: ChartData
title: 202306260134_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Traidoruns Maximus", "Zayde Sunsabre", "Newtype Khan", "Arcanophage Farra", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.96, 25.2475, 6.5239, 118.1534, 6.4414, 12.4114, 25.106, 14.9176, 12.61, 18.5416, 17.9661, 21.4038, 12.8925, 25.7472, 17.901, 47.8441, 0.0, 1.8315, 24.2163, 9.7121, 19.3673, 29.0347, 26.2467, 19.3536, 9.6848, 6.5366, 17.4502, 11.3367], [22.8787, 24.5376, 35.276, 14.1696, 127.1651, 26.3256, 33.2186, 62.574, 35.4165, 0.0, 17.4328, 10.5706, 0.0, 0.0, 21.0816, 16.5672, 35.188, 0.0, 20.8458, 14.021, 21.0823, 14.0967, 19.1497, 0.0, 20.9933, 29.1658, 0.0, 0.7742, 52.0309, 38.0084, 24.381, 16.0192, 41.1248], [57.1104, 118.5408, 40.1141, 0.0, 255.1312, 40.6087, 41.2191, 71.6427, 25.37, 16.5427, 14.8148, 43.0566, 17.7331, 20.205, 66.2256, 18.7434, 28.3805, 0.0, 0.0, 16.1718, 33.6031, 13.051, 26.6358, 35.6298, 0.0, 21.4848, 21.5257, 0.0, 48.6431, 39.9344, 34.4314, 46.36, 21.5138], [16.8307, 48.8592, 48.1561, 14.1401, 211.4746, 33.7345, 0.0, 43.3866, 34.7315, 20.6378, 20.944, 64.2365, 13.8556, 18.135, 75.7296, 0.0, 50.1452, 29.2243, 1.5651, 21.9828, 24.8047, 61.1973, 50.5833, 36.927, 42.3629, 42.2459, 21.0749, 30.1702, 25.4283, 62.3612, 41.8089, 34.9599], [52.8595, 53.8704, 42.9977, 7.7638, 307.9999, 29.5336, 0.0, 113.7406, 20.2706, 38.4974, 54.7624, 80.4989, 98.1783, 61.3575, 96.8976, 59.6466, 51.8711, 1.748, 7.043, 31.7645, 41.8262, 58.562, 61.7505, 44.6237, 32.5517, 24.5461, 0.0, 1.6856, 35.8591, 13.4821, 35.6234, 37.5829, 59.7464]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

