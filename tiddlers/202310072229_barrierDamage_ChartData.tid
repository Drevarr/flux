created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["One And Onlyy", "Efreet White", "Morton Saltbringer", "Smurf Komdol Fri", "Un Bearahble", "Demon Zen", "Morv\u00e4rth", "Regis Hawkesburne", "Kalisha Lafay", "K\u00e2 \u00d4tik R\u00e6j", "Aira Draugr", "Lord Erin The Wise", "Amiti\u00e9l", "Zaylen Harker", "Ax Axun", "Belvyn Brightblade", "Kosa\u00efr", "Xanvias Einzbern", "Sygaldry Verdandi", "Kurn The Drunk", "Ryvalia Fazebringer", "K\u00e9ld\u00e1", "Grayson Kin", "Crusader Siolith", "Darks Na", "Mistwalker Cael", "Etchery Howls", "Latedoctor", "Jimbo The Pleb", "Glorious Gluvs", "Be\u00eb", "Rina Of Theros", "Atria Ruinheart", "Zaedy Zae", "Nickhia", "Gabe Malhorn", "K\u00e2fkaa", "Mort\u00e4rion", "Mitsuri Ai", "Skylar Shadowmoon", "Tootsie Pop Rocks", "Mc Thornbody", "Newtype Khan", "Efreet White", "Gadget Windrunner", "Leafzely", "Kasaka"];
const professions = ["Berserker", "Reaper", "Chronomancer", "Chronomancer", "Reaper", "Reaper", "Reaper", "Berserker", "Chronomancer", "Berserker", "Herald", "Weaver", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Berserker", "Firebrand", "Reaper", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Herald", "Druid", "Reaper", "Berserker", "Berserker", "Reaper", "Reaper", "Firebrand", "Druid", "Scourge", "Firebrand", "Weaver", "Scrapper", "Druid", "Scrapper", "Scrapper", "Berserker", "Spellbreaker", "Scourge", "Scrapper", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 1505, 2771, 5786, 5817, 6047], [25772], [0, 5874, 3207, 7245, 2872, 4600, 4005, 3635, 4959, 0, 0], [0, 445, 5278, 1692, 3079, 9446, 7732, 0, 6184, 2831], [2760, 0, 9094, 2593, 416, 0, 0, 0, 3908, 5523, 8749, 5580], [5593, 0, 0, 398, 0, 3808, 2736, 0, 1763, 3834, 1651, 6271, 0, 0, 51, 3405, 2757, 0, 8985, 0, 470], [8136, 2458, 0, 7688, 0, 13717, 783, 348, 670, 14334, 0, 0], [0, 0, 0, 2936, 0, 4608, 9019, 8223, 0, 4001, 7424, 7567, 3080, 0, 0, 1769, 1761, 1242], [3022, 0, 0, 2918, 2906, 1878, 2892, 3221, 2889, 5820, 5438, 2911, 0, 0, 7742, 3147, 3294, 987, 2048, 943, 0], [0, 0, 0, 0, 2886, 280, 6253, 8573, 5783, 4884, 5972, 2205, 0, 0, 11096, 2477, 5765, 0, 1044, 0, 0], [623, 0, 0, 6243, 6244, 720, 3122, 3986, 0, 2229, 3122, 22833, 8588], [0, 9128, 2772, 548, 0, 5841, 12979, 2927, 0, 28967, 0, 0], [5937, 0, 2134, 2863, 0, 2736, 5633, 0, 4746, 7013, 6591, 6189, 0, 0, 637, 11243, 806, 0, 6699, 0], [807, 355, 64435, 0, 261], [12942, 16863, 3679, 719, 32108, 0, 0], [5691, 0, 0, 6244, 1290, 2715, 5046, 9993, 0, 5518, 5891, 21656, 3853], [0, 0, 7909, 2146, 3105, 3451, 1294, 2918, 2143, 21461, 6574, 0, 0, 11311, 2312, 3473, 0, 5093], [2887, 0, 0, 2909, 2918, 0, 3192, 10408, 3637, 4269, 5838, 5838, 0, 0, 10019, 10579, 3786, 0, 7932, 0, 0], [0, 0, 11386, 1880, 1744, 2888, 5020, 4224, 4796, 12449, 3050, 75, 0, 5532, 9152, 3270, 2778, 7870, 0, 0], [0, 0, 2936, 0, 2998, 2850, 2936, 0, 730, 2898, 5920, 2936, 749, 0, 2368, 12378, 5971, 0, 29771, 0, 1842], [3963, 0, 0, 12847, 3352, 3278, 7396, 9391, 0, 8735, 3572, 8461, 0, 164, 0, 6156, 7001, 3335, 2780, 295, 0, 0], [0, 0, 0, 11151, 3, 2632, 7852, 6365, 0, 6479, 4752, 0, 740, 0, 0, 3347, 10334, 2705, 0, 25041, 0, 0], [2914, 274, 5831, 5645, 1486, 5739, 8267, 1346, 0, 0, 2918, 9777, 6152, 0, 33620, 0, 1486], [1384, 0, 2918, 3291, 0, 2090, 8727, 4095, 1948, 8229, 9076, 0, 0, 15444, 15399, 2178, 0, 10867, 521], [1983, 12289, 9105, 6875, 7038, 14642, 2895, 264, 2580, 11923, 11361, 7081], [2930, 0, 0, 4038, 0, 2919, 3082, 8845, 7891, 3988, 8418, 5453, 0, 0, 5702, 10497, 175, 0, 24214, 0, 0], [0, 3972, 2851, 5103, 8536, 4044, 2941, 8407, 8630, 0, 8696, 16114, 4130, 0, 18555, 0], [579, 0, 2961, 2915, 5639, 11734, 7879, 8524, 6552, 5725, 0, 0, 0, 15592, 10062, 10753, 0, 5508, 0, 0], [0, 0, 0, 5749, 4005, 4280, 11899, 0, 3262, 3243, 13990, 2918, 0, 0, 15444, 15818, 755, 0, 13473, 0], [0, 0, 0, 0, 1171, 3356, 2658, 7303, 3, 5576, 12100, 2872, 3461, 0, 15613, 7433, 3740, 0, 30840, 0], [0, 7672, 0, 5937, 0, 9616, 0, 7028, 0, 25581, 5539, 0, 0, 14379, 7070, 3025, 0, 10379, 0, 0], [0, 0, 0, 3789, 5660, 4025, 6694, 8643, 0, 300, 4512, 20006, 6059, 0, 0, 14111, 6610, 7150, 2778, 6656, 0, 0], [5925, 0, 0, 4963, 2771, 3449, 2761, 5015, 6090, 3560, 12381, 8428, 0, 0, 8580, 9698, 4418, 0, 21795, 0], [2614, 0, 0, 8202, 5045, 2180, 8180, 8892, 5839, 4073, 16504, 2545, 266, 9983, 9080, 6105, 2778, 7616, 0, 0], [0, 12038, 5645, 4437, 261, 69116, 13076, 0], [2829, 0, 0, 0, 2936, 2936, 6327, 6910, 0, 4020, 16769, 2853, 0, 274, 15085, 8963, 411, 0, 39128, 0, 505], [0, 0, 6937, 4777, 1161, 0, 101867, 0, 173], [0, 3754, 9871, 10269, 8720, 28403, 0, 0, 17894, 38212], [4294, 14261, 6527, 0, 5977, 11598, 18999, 5718, 0, 18547, 10678, 7669, 0, 17257, 0, 0], [7174, 0, 20092, 8804, 25067, 12818, 32916, 21880, 15369, 64], [0, 0, 9240, 3256, 4135, 2882, 10857, 8427, 4243, 9641, 4895, 0, 1372, 9585, 396, 2549, 77307, 277], [0, 5828, 0, 3892, 2771, 5720, 0, 0, 3470, 7550, 840, 119872], [2829, 0, 0, 12032, 3243, 7142, 8897, 12370, 0, 10937, 5650, 31494, 12538, 1643, 20448, 1517, 12146, 0, 19257, 0, 460], [1797, 1724, 36482, 31748, 8529, 100521, 1785], [13500, 29, 0, 0, 13001, 10215, 15809, 15052, 0, 14270, 13969, 25117, 3732, 2683, 29880, 10711, 11417, 0, 30730], [31402, 0, 0, 14527, 21891, 24281, 11930, 2860, 2466, 27350, 24144, 29591, 0, 0, 34332, 9633, 1311], [14077, 9955, 10707, 26647, 28733, 81, 16593, 23171, 11393, 3964, 38621, 44037, 25698, 9243, 146495]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

