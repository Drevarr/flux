created: 20230503220838000
creator: Drevarr
modified: 20230705163528065
modifier: drevarr
tags: ChartData
title: 202305032208_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Smol Daddy Tika", "Skylar Shadowmoon", "Maaaathexxs", "Smol Gluvs", "Kmpek", "Oops All Beans", "Binkety Bonk", "Mannse Lee", "Husky Guard", "Cedryn X", "Farra The Bloodless", "Tootsie Pop Rocks", "Inedible Plant", "Solus Nex", "Allie Mistwalker", "Be\u00eb", "Slautorn", "Elonith Requiem", "Lord Erin The Wise", "Kary\u00edna", "Kosa\u00efr", "Mistwalker Caelon", "Hauzzy", "Xanvias Einzbern"];
const professions = ["Chronomancer", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Vindicator", "Spellbreaker", "Scrapper", "Scrapper", "Dragonhunter", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Scourge", "Vindicator", "Scourge", "Weaver", "Scourge", "Weaver", "Vindicator", "Catalyst", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37192.0, 17387.0, 0.0, 0.0, 2275.0, 3471.0, 0.0, 3554.0, 17118.0, 461.0, 410.0, 48175.0, 19493.0], [65807.0, 21798.0, 0.0, 0.0, 6179.0, 10449.0, 0.0, 0.0, 26826.0, 3103.0, 5175.0, 32648.0, 21753.0], [106694.0, 49526.0, 0.0, 10508.0, 13256.0, 0.0, 593.0, 26116.0], [117477.0, 73512.0, 32.0, 0.0, 6165.0, 15377.0], [78529.0, 25370.0, 357.0, 2528.0, 6286.0, 0.0, 0.0, 20489.0, 0.0, 68.0, 38779.0, 42181.0], [8063.0, 0.0, 7774.0, 138288.0, 70870.0], [139667.0, 42428.0, 2956.0, 0.0, 3530.0, 0.0, 0.0, 38984.0, 0.0], [0.0, 145720.0, 99239.0], [168854.0, 71118.0, 9595.0, 19368.0, 0.0, 0.0, 0.0, 58209.0], [93558.0, 54149.0, 1479.0, 0.0, 660.0, 32571.0, 0.0, 0.0, 40124.0, 0.0, 0.0, 56751.0, 60756.0], [114431.0, 73339.0, 2083.0, 0.0, 19927.0, 0.0, 0.0, 36960.0, 0.0, 0.0, 11684.0, 89353.0], [125303.0, 69197.0, 0.0, 5607.0, 11168.0, 0.0, 9882.0, 53138.0, 0.0, 2188.0, 141931.0, 79175.0], [105181.0, 34557.0, 810.0, 0.0, 0.0, 25349.0, 0.0, 121454.0, 6828.0, 0.0, 68551.0, 147836.0], [138879.0, 90289.0, 8288.0, 0.0, 3179.0, 6676.0, 0.0, 0.0, 58410.0, 1004.0, 0.0, 145159.0, 69179.0], [235152.0, 35547.0, 1302.0, 0.0, 5940.0, 23171.0, 0.0, 0.0, 120083.0, 2632.0, 4026.0, 110718.0, 80625.0], [155475.0, 108904.0, 0.0, 0.0, 11024.0, 46224.0, 0.0, 0.0, 6438.0, 0.0, 162344.0, 129466.0], [249189.0, 0.0, 1979.0, 0.0, 4456.0, 30169.0, 0.0, 0.0, 126562.0, 11994.0, 4801.0, 129820.0, 112822.0], [117268.0, 96691.0, 3966.0, 0.0, 3679.0, 18877.0, 0.0, 673.0, 190354.0, 4241.0, 0.0, 156703.0, 99779.0], [84535.0, 1294.0, 3507.0, 57060.0, 0.0, 7871.0, 111849.0, 0.0, 3900.0, 272932.0, 152629.0], [208562.0, 121525.0, 0.0, 0.0, 4868.0, 31816.0, 0.0, 0.0, 101624.0, 0.0, 0.0, 154021.0, 100444.0], [246104.0, 115219.0, 0.0, 0.0, 0.0, 35670.0, 0.0, 7671.0, 112363.0, 1360.0, 7351.0, 174213.0, 186123.0], [201397.0, 112514.0, 2052.0, 0.0, 35458.0, 0.0, 0.0, 123213.0, 3517.0, 1308.0, 255095.0, 155939.0], [257752.0, 170129.0, 0.0, 3961.0, 66340.0, 0.0, 0.0, 161274.0, 0.0, 4739.0, 242654.0, 210554.0], [345960.0, 96537.0, 1343.0, 0.0, 13156.0, 50168.0, 0.0, 10666.0, 133922.0, 0.0, 15481.0, 287485.0, 188475.0], [517850.0, 237368.0, 0.0, 17015.0, 50584.0, 0.0, 0.0, 161684.0, 2220.0, 9247.0, 254276.0, 203922.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

