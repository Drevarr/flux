created: 20230401000636000
creator: Drevarr
modified: 20230705163523564
modifier: drevarr
tags: ChartData
title: 202304010006_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Fungus", "Lord Erin The Wise", "Nelliel T", "Dark Sidiuz", "Legacy Of Mathus", "Cat Wigglebooty", "Blancooo Padreee", "Gavann", "Sp\u00edcy Cheese", "Rina Of Theros", "Arcanophage Farra", "Ateriuz", "Nazhul Naxxremis", "Estryl", "Jeckyll Mbs", "Smol Daddy Tika", "Rozaalyna", "Oo Dads Mad", "Abigail Ryn", "Mike The Archmagus", "Grasszanine", "Xyntharos", "Air One Com", "Zadie Miststep", "Arkintor", "Whose Guardian", "Aronorf Xideliesi", "Tegan Parker", "Panther B Me", "Ark Darkness", "Sassy Daddy Demon", "Koralia Danai", "Zaylen Harker", "Be\u00eb", "Smol Gluvs", "Etcherii", "Sister Elon\u00edth", "Ju\u00e7", "Newtype Khan", "Mac Chiato", "Xanvias Tlesel", "Raziel Umbra", "Johosh The Great", "Drevarr Moonwillow", "Bella Lunabringer", "Primal Clone", "Mistwalker Caelon", "Brioche Bunbringer", "Ryvalia Fazebringer"];
const professions = ["Tempest", "Scourge", "Weaver", "Reaper", "Scourge", "Berserker", "Scrapper", "Berserker", "Firebrand", "Berserker", "Scourge", "Spellbreaker", "Berserker", "Scourge", "Berserker", "Berserker", "Berserker", "Scourge", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Vindicator", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scourge", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Scourge", "Scourge", "Firebrand", "Dragonhunter", "Firebrand", "Spellbreaker", "Tempest", "Berserker", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Vindicator", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 1, 7, 6, 3, 4, 3, 2, 7, 0, 4, 0, 3, 5], [2, 0, 18, 9, 3, 11, 2, 0, 2, 5, 0, 4], [3, 0, 0, 3, 4, 5, 3, 2, 5, 0, 2, 0, 3, 5, 0, 0, 8, 1, 4, 0, 4, 0, 0, 3, 1, 0, 1, 2, 3], [11, 2, 0, 5, 2, 6, 0, 0, 1, 0, 3, 0, 0, 1, 2, 3, 2, 3, 1, 0, 8, 3, 5, 1, 0, 4], [7, 1, 5, 4, 5, 5, 1, 8, 0, 1, 0, 1, 8, 1, 1, 2, 0, 7, 5, 0, 0, 3, 0, 1], [8, 2, 13, 6, 3, 4, 1, 2, 8, 1, 8, 0, 1, 4, 1, 0, 4, 0, 2, 0, 1, 1], [11, 3, 11, 3, 6, 7, 5, 2, 5, 0, 14, 0, 2, 2], [10, 3, 4, 0, 2, 6, 4, 1, 8, 0, 4, 0, 0, 8, 3, 0, 8, 1, 0, 0, 0, 3, 4, 0, 1, 1, 0, 5], [1, 20, 10, 5, 7, 3, 0, 8, 7, 0, 1, 3, 1, 13], [10, 2, 2, 4, 2, 6, 5, 0, 4, 0, 11, 0, 12, 2, 8, 2, 1, 0, 2, 6, 0, 1, 5, 0, 3, 0, 5], [6, 2, 7, 3, 1, 11, 7, 1, 5, 0, 5, 0, 2, 7, 3, 12, 1, 5, 0, 4, 2, 1, 3, 4, 0, 3, 1, 0, 4], [15, 0, 10, 4, 3, 12, 12, 2, 13, 1, 24, 0, 5, 6], [2, 7, 2, 7, 6, 7, 1, 8, 0, 17, 0, 0, 12, 0, 1, 11, 4, 3, 0, 4, 4, 0, 2, 5, 0, 2, 1, 0, 3], [8, 0, 6, 5, 5, 6, 9, 4, 7, 0, 5, 0, 2, 12, 0, 0, 14, 2, 4, 0, 5, 3, 0, 2, 10, 3, 0, 0], [9, 0, 7, 4, 6, 8, 10, 0, 6, 0, 6, 0, 13, 1, 0, 9, 3, 0, 0, 7, 2, 0, 2, 1, 0, 6, 2, 2, 14], [10, 3, 9, 6, 6, 7, 13, 2, 12, 1, 3, 14, 1, 0, 20, 4, 6, 0, 6], [8, 1, 10, 7, 3, 6, 12, 3, 12, 0, 9, 0, 3, 15, 0, 0, 12, 1, 5, 0, 2, 1, 0, 4, 5, 0, 2, 1, 0, 2], [8, 3, 10, 8, 2, 11, 13, 0, 0, 5, 0, 3, 20, 1, 18, 6, 0, 4, 6, 0, 2, 6, 1, 2, 0, 5], [18, 4, 1, 4, 4, 15, 14, 4, 12, 0, 5, 0, 6, 19, 0, 9, 7, 5, 0, 8], [1, 3, 15, 3, 17, 15, 13, 5, 22, 2, 17, 1, 3, 23], [11, 0, 8, 3, 9, 12, 13, 1, 4, 0, 20, 0, 0, 11, 3, 0, 14, 8, 6, 0, 3, 2, 6, 2, 3, 0, 0, 9], [12, 2, 7, 5, 15, 10, 7, 4, 9, 1, 9, 2, 22, 1, 0, 12, 0, 4, 3, 4, 0, 2, 8, 0, 2, 2, 1, 5], [7, 1, 4, 2, 5, 19, 17, 2, 6, 0, 6, 0, 4, 11, 2, 0, 20, 1, 7, 1, 6, 2, 0, 5, 4, 0, 5, 1, 0, 15], [7, 3, 9, 8, 8, 13, 4, 3, 12, 0, 3, 0, 3, 13, 4, 21, 4, 6, 12, 7, 2, 4, 0, 3, 2, 0, 2], [6, 6, 8, 3, 6, 11, 12, 4, 10, 1, 7, 0, 2, 18, 1, 1, 20, 5, 0, 0, 3, 4, 0, 5, 8, 3, 3, 0, 12], [12, 2, 7, 4, 3, 18, 8, 2, 8, 0, 26, 0, 1, 11, 2, 13, 3, 4, 5, 2, 0, 8, 7, 0, 2, 1, 0, 12], [8, 4, 10, 7, 4, 14, 16, 1, 15, 0, 7, 0, 4, 17, 2, 1, 14, 9, 6, 0, 6, 4, 1, 5, 3, 4], [7, 3, 6, 2, 14, 12, 9, 3, 11, 0, 18, 0, 0, 16, 2, 12, 7, 7, 0, 5, 3, 0, 6, 3, 3, 1, 1, 16], [13, 1, 6, 5, 13, 8, 11, 0, 10, 0, 13, 0, 3, 20, 2, 0, 7, 9, 7, 0, 7, 4, 0, 5, 4, 0, 4, 1, 0, 18], [3, 2, 9, 7, 14, 16, 11, 3, 15, 0, 9, 0, 3, 26, 2, 0, 19, 6, 1, 0, 4, 2, 0, 12, 5, 0, 3, 1, 1, 0], [10, 3, 7, 2, 14, 11, 11, 4, 13, 3, 6, 1, 4, 21, 4, 27, 12, 2, 11, 2, 7, 0], [15, 3, 9, 6, 5, 14, 10, 2, 16, 0, 4, 0, 1, 22, 4, 0, 22, 12, 4, 0, 5, 1, 0, 9, 4, 0, 5, 0, 1, 10], [7, 4, 8, 8, 9, 15, 12, 1, 16, 1, 11, 0, 1, 13, 3, 20, 11, 6, 5, 2, 1, 7, 7, 0, 5, 4, 0, 16], [12, 3, 17, 5, 6, 11, 17, 2, 15, 1, 31, 0, 2, 14, 4, 1, 17, 3, 6, 5, 4, 0, 9, 3, 3, 1, 1, 11], [12, 3, 6, 7, 21, 12, 13, 3, 10, 1, 8, 0, 4, 12, 3, 23, 11, 7, 0, 10, 1, 1, 8, 6, 0, 3, 1, 1, 18], [7, 3, 12, 0, 8, 18, 17, 2, 17, 0, 7, 0, 5, 22, 1, 2, 19, 11, 4, 0, 7, 3, 1, 6, 4, 0, 9, 1, 0, 19], [13, 7, 7, 8, 16, 17, 16, 2, 16, 0, 33, 0, 4, 21, 2, 0, 21, 10, 5, 1, 8], [21, 17, 13, 2, 28, 2, 10, 3, 32, 3, 1, 31, 1, 1, 1, 7, 4, 0, 12, 6, 0, 2, 2, 1, 9], [16, 19, 16, 3, 18, 0, 8, 0, 3, 26, 4, 31, 12, 4, 7, 3, 1, 11, 5, 0, 5, 3, 2, 19], [11, 6, 9, 6, 7, 15, 10, 4, 15, 0, 26, 0, 2, 32, 2, 22, 12, 4, 8, 2, 0, 2, 3, 0, 2, 3, 0, 15], [20, 5, 5, 1, 14, 11, 18, 4, 16, 0, 27, 0, 2, 15, 5, 0, 24, 9, 4, 0, 8, 2, 0, 4, 2, 0, 4, 2, 0, 17], [25, 1, 7, 5, 9, 14, 10, 5, 16, 1, 6, 0, 1, 19, 4, 25, 11, 9, 0, 8, 2, 2, 5, 2, 0, 9, 2, 1, 24], [11, 3, 37, 0, 8, 19, 40, 2, 12, 1, 24, 0, 2, 11, 2, 0, 23, 0, 3, 0, 9, 1, 0, 2, 4, 0, 0, 2, 0, 16], [16, 5, 9, 9, 15, 16, 15, 4, 17, 1, 8, 0, 2, 23, 3, 0, 26, 9, 5, 11, 7, 7, 5, 0, 8, 3, 2, 20], [12, 8, 12, 12, 12, 16, 17, 1, 21, 1, 22, 0, 4, 15, 2, 1, 24, 7, 9, 13, 3, 0, 3, 10, 0, 7, 2, 1, 17], [8, 5, 18, 7, 14, 13, 21, 3, 17, 1, 29, 0, 5, 22, 3, 1, 26, 9, 6, 6, 5, 0, 6, 7, 0, 6, 3, 1, 24], [38, 4, 7, 7, 12, 30, 8, 2, 27, 0, 38, 2, 25, 2, 0, 13, 12, 4, 1, 5, 1, 0, 4, 7, 0, 1, 2, 0, 15], [22, 10, 6, 5, 11, 12, 4, 2, 27, 0, 65, 0, 3, 19, 6, 0, 28, 12, 8, 1, 16, 3, 0, 5, 5, 0, 1, 6, 1, 20], [33, 10, 4, 8, 4, 23, 20, 6, 22, 1, 51, 0, 5, 30, 6, 57, 8, 11, 0, 9, 17, 0, 7, 8, 0, 1, 3, 0, 39], [15, 6, 72, 7, 17, 25, 25, 3, 23, 1, 33, 0, 7, 27, 5, 0, 34, 17, 8, 13, 4, 0, 7, 13, 0, 7, 4, 1, 19]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

