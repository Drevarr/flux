created: 20230318001239000
creator: Drevarr
modified: 20230705163522335
modifier: drevarr
tags: ChartData
title: 202303180012_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Sister Elonith", "Eibh\u00ebar", "Shaca Booey", "Newtype Khan", "Lucky Leipreach\u00e1n", "Nazhul Naxxremis", "Seren Nightroad", "Grasszanine", "King Squid", "Smol Gluvs", "Hauzzy", "Permanent Dawn", "F\u00f4xy Lat\u00eena", "Kmpek", "Rina Of Theros", "Smol Daddy Tika", "Lord Erin The Wise", "Khailerian", "Demon Sekhmet", "Xyntharos", "Mike The Archmagus", "Kosa\u00edr", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Berserker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Spellbreaker", "Reaper", "Scourge", "Spellbreaker", "Weaver", "Scourge", "Vindicator", "Scourge", "Berserker", "Weaver", "Herald", "Berserker", "Vindicator", "Weaver", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24865.0, 515.0, 4500.0, 0.0, 2035.0, 1194.0, 0.0, 32230.0, 6751.0, 5361.0, 3983.0, 34163.0, 0.0, 7495.0, 0.0, 0.0, 4458.0], [6634.0, 4771.0, 0.0, 31109.0, 0.0, 9376.0, 2031.0, 0.0, 0.0, 93745.0], [11954.0, 4120.0, 5203.0, 14056.0, 1752.0, 7923.0, 4135.0, 1088.0, 4470.0, 8253.0, 9897.0, 0.0, 15245.0, 4745.0, 8040.0, 0.0, 0.0, 1770.0, 1503.0, 9000.0, 8049.0, 338.0, 0.0, 30655.0], [7025.0, 5708.0, 57589.0, 0.0, 2352.0, 0.0, 0.0, 0.0, 14360.0, 7392.0, 29310.0, 0.0, 14275.0, 0.0, 0.0, 654.0, 3734.0, 0.0, 456.0, 0.0, 2703.0, 26440.0], [24305.0, 4382.0, 20011.0, 32053.0, 1843.0, 1249.0, 510.0, 0.0, 21316.0, 551.0, 5381.0, 2184.0, 41341.0, 1336.0, 216.0, 0.0, 0.0, 4061.0, 2501.0, 3322.0, 0.0, 0.0, 1720.0, 24915.0], [6786.0, 15401.0, 18624.0, 3851.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2742.0, 24577.0, 32473.0, 20369.0, 14515.0, 0.0, 0.0, 8913.0, 3141.0, 10156.0, 0.0, 5718.0, 58376.0], [39495.0, 4299.0, 69284.0, 0.0, 4253.0, 5165.0, 2748.0, 41041.0, 23871.0, 33401.0, 5274.0], [45282.0, 14982.0, 9746.0, 20343.0, 1482.0, 1510.0, 2567.0, 6213.0, 11217.0, 1779.0, 6729.0, 3518.0, 17395.0, 34256.0, 10047.0, 0.0, 0.0, 0.0, 1318.0, 9899.0, 0.0, 0.0, 51948.0], [15857.0, 11308.0, 5015.0, 58965.0, 361.0, 3460.0, 1194.0, 5226.0, 1644.0, 15067.0, 9218.0, 1882.0, 60953.0, 3430.0, 10069.0, 0.0, 0.0, 5819.0, 1679.0, 10010.0, 974.0, 0.0, 2181.0, 32672.0], [14775.0, 6828.0, 1549.0, 18375.0, 18006.0, 15022.0, 0.0, 60153.0, 4414.0, 22.0, 0.0, 39182.0, 15691.0, 12639.0, 4656.0, 54910.0], [36974.0, 30654.0, 2599.0, 57639.0, 2162.0, 2816.0, 0.0, 3191.0, 41605.0, 7842.0, 10302.0, 5567.0, 41468.0, 6326.0, 10345.0, 1019.0, 1229.0, 466.0, 591.0, 19336.0, 479.0, 2470.0, 0.0, 24362.0], [53213.0, 26348.0, 26825.0, 32755.0, 1803.0, 7620.0, 9378.0, 5672.0, 0.0, 15925.0, 10551.0, 64581.0, 36483.0, 18809.0, 4430.0, 0.0, 20482.0], [6780.0, 8711.0, 7646.0, 21599.0, 5420.0, 7506.0, 12172.0, 0.0, 0.0, 16060.0, 914.0, 154319.0, 17018.0, 9213.0, 705.0, 0.0, 9311.0, 10483.0, 1837.0, 0.0, 0.0, 55136.0], [54425.0, 21295.0, 49616.0, 39230.0, 0.0, 24451.0, 4782.0, 14976.0, 22783.0, 7569.0, 5988.0, 0.0, 26338.0, 36978.0, 7183.0, 1777.0, 0.0, 3325.0, 124.0, 16402.0, 0.0, 0.0, 108744.0], [43477.0, 33533.0, 36364.0, 16782.0, 0.0, 3109.0, 17611.0, 10096.0, 15824.0, 9623.0, 26686.0, 108526.0, 41605.0, 35287.0, 0.0, 0.0, 10011.0, 10022.0, 865.0, 0.0, 0.0, 59971.0], [79062.0, 8598.0, 22829.0, 93468.0, 1471.0, 2937.0, 2765.0, 17524.0, 55023.0, 27477.0, 17396.0, 4637.0, 60683.0, 40133.0, 20509.0, 0.0, 4034.0, 1154.0, 10143.0, 11479.0, 9039.0, 1695.0, 6270.0, 57641.0], [100814.0, 2025.0, 25843.0, 33646.0, 1303.0, 2921.0, 2201.0, 18528.0, 0.0, 0.0, 9050.0, 1962.0, 120932.0, 71546.0, 8096.0, 5957.0, 0.0, 5005.0, 0.0, 49708.0, 7578.0, 0.0, 6676.0, 84635.0], [72786.0, 37161.0, 21511.0, 209079.0, 5585.0, 5845.0, 15993.0, 40081.0, 0.0, 23043.0, 5090.0, 128394.0, 13240.0, 3598.0, 0.0, 0.0], [90358.0, 14757.0, 56405.0, 121869.0, 3309.0, 3146.0, 0.0, 0.0, 20312.0, 17462.0, 32293.0, 9222.0, 69745.0, 13832.0, 0.0, 0.0, 0.0, 22942.0, 10109.0, 0.0, 13624.0, 87765.0], [80046.0, 0.0, 9744.0, 44391.0, 0.0, 0.0, 4275.0, 3986.0, 12660.0, 0.0, 45403.0, 148853.0, 60352.0, 7735.0, 0.0, 0.0, 30214.0, 0.0, 8317.0, 11090.0, 5470.0, 117258.0], [96820.0, 8797.0, 10466.0, 116615.0, 0.0, 5129.0, 888.0, 21311.0, 0.0, 26709.0, 33070.0, 7244.0, 97012.0, 71235.0, 21918.0, 0.0, 0.0, 7426.0, 5570.0, 16255.0, 2461.0, 0.0, 9120.0, 168209.0], [162560.0, 27595.0, 16971.0, 86689.0, 7004.0, 15303.0, 2421.0, 13295.0, 32643.0, 22410.0, 13372.0, 7925.0, 290257.0, 48611.0, 19106.0, 6853.0, 0.0, 17655.0, 5784.0, 41446.0, 2520.0, 0.0, 84459.0], [150563.0, 64508.0, 19085.0, 124647.0, 2565.0, 28611.0, 14070.0, 20900.0, 13319.0, 47630.0, 59872.0, 0.0, 220318.0, 33526.0, 44093.0, 0.0, 0.0, 11298.0, 19014.0, 49471.0, 3710.0, 23389.0, 8122.0, 237122.0], [139650.0, 60762.0, 78482.0, 111553.0, 4671.0, 21062.0, 16230.0, 77581.0, 11932.0, 72320.0, 227501.0, 110881.0, 13083.0, 6376.0, 0.0, 13761.0, 24288.0, 37671.0, 0.0, 8816.0, 206220.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

