created: 20230419215809000
creator: Drevarr
modified: 20230705163526031
modifier: drevarr
tags: ChartData
title: 202304192158_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupi Jupi Jupi", "Smol Daddy Tika", "Zadie Miststep", "Belvyn Brightblade", "Ark Darkness", "Xyntharos", "Solus Sanctus", "Panther B Me", "Fecund Algorithm", "Mistwalker Caelon", "Eibh\u00ebar", "Bella Sassy", "Smol Gluvs", "Etchery Howls", "Be Leaf Me Too", "Nazhul Naxxremis", "Miphest\u00f6", "Tootsie Pop Rocks", "Gabe Malhorn", "Venomina The Siren", "Tegan Parker", "My Birthday Girl", "Grasszanine", "Skye Nightroad", "Ryvalia Fazebringer", "Mac Chiato", "Sumatra Satyricon", "Sygaldry Verdandi", "Arcanophage Farra", "Oo Dads Mad", "Newtype Khan"];
const professions = ["Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Mechanist", "Vindicator", "Chronomancer", "Firebrand", "Scourge", "Druid", "Catalyst", "Scourge", "Tempest", "Scrapper", "Firebrand", "Tempest", "Tempest", "Scrapper", "Spellbreaker", "Scrapper", "Chronomancer", "Tempest", "Soulbeast", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 477.05, 0.0, 0.0, 215.6, 0.0, 164.16, 0.0, 0.0, 0.0], [0.0, 522.72, 0.0, 212.16, 65.17, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 284.2, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 195.51, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 537.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1697.28, 195.51, 0.0], [0.0, 0.0, 0.0, 0.0, 260.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 477.05, 134.4, 0.0, 0.0, 0.0], [0.0, 0.0, 1568.16, 0.0, 424.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 190.82, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 696.96, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 95.41, 67.2, 0.0, 0.0, 341.04, 54.72, 0.0, 0.0, 34.08], [0.0, 0.0, 348.48, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 890.4, 190.82, 0.0, 0.0, 0.0, 227.36, 0.0, 0.0, 0.0, 0.0], [369.95, 0.0, 56.84, 383.04, 0.0, 52.64], [0.0, 0.0, 1742.4, 0.0, 1060.8, 0.0, 0.0, 56.84, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1219.68, 0.0, 424.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 190.82, 0.0, 0.0, 431.2, 0.0, 164.16, 0.0, 0.0, 0.0], [0.0, 0.0, 522.72, 0.0, 848.64, 0.0, 97.51, 0.0, 0.0, 0.0, 0.0, 0.0, 667.87, 0.0, 0.0, 0.0, 56.84, 0.0, 0.0, 0.0, 102.24], [0.0, 0.0, 1568.16, 0.0, 1272.96, 260.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 522.72, 0.0, 1909.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 215.6, 341.04, 54.72, 0.0, 0.0, 0.0], [0.0, 0.0, 1368.57, 0.0, 0.0], [0.0, 0.0, 521.36, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1335.74, 0.0, 0.0, 0.0, 56.84, 0.0], [0.0, 0.0, 0.0, 2545.92, 195.51, 0.0, 0.0, 0.0, 0.0, 95.06, 254.4, 0.0, 201.6, 0.0, 323.4, 56.84, 0.0, 0.0, 0.0, 0.0], [0.0, 696.96, 0.0, 1060.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1526.56, 0.0, 0.0, 215.6, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 780.08, 0.0, 0.0, 0.0, 0.0, 127.2, 286.23, 0.0, 73.99, 1401.4, 56.84, 0.0, 0.0, 0.0, 0.0], [0.0, 1219.68, 0.0, 1697.28, 65.17, 0.0, 113.68, 0.0, 0.0, 0.0, 254.4, 381.64, 134.4, 0.0, 539.0, 113.68, 0.0, 0.0, 0.0, 0.0], [0.0, 1742.4, 0.0, 2333.76, 0.0, 292.53, 56.84, 0.0, 0.0, 142.59, 0.0, 0.0, 381.64, 134.4, 0.0, 0.0, 0.0, 54.72, 0.0, 0.0], [0.0, 0.0, 696.96, 0.0, 0.0, 0.0, 390.04, 170.52, 0.0, 0.0, 0.0, 0.0, 0.0, 763.28, 0.0, 0.0, 215.6, 852.6, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 348.48, 0.0, 0.0, 130.34, 0.0, 341.04, 0.0, 0.0, 0.0, 0.0, 1049.51, 134.4, 0.0, 1078.0, 227.36, 0.0, 0.0, 0.0, 0.0], [0.0, 696.96, 0.0, 2758.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1049.51, 336.0, 0.0, 0.0, 397.88, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 7425.6, 195.51, 0.0, 56.84, 0.0, 0.0, 0.0, 0.0, 127.2, 0.0, 134.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1045.44, 0.0, 212.16, 912.38, 487.55, 170.52, 0.0, 0.0, 95.06, 0.0, 381.6, 286.23, 0.0, 0.0, 215.6, 170.52, 54.72, 0.0, 78.96, 0.0], [0.0, 0.0, 174.24, 0.0, 4879.68, 521.36, 487.55, 227.36, 0.0, 0.0, 0.0, 0.0, 508.8, 286.23], [0.0, 0.0, 522.72, 0.0, 2121.6, 260.68, 487.55, 56.84, 0.0, 0.0, 0.0, 0.0, 0.0, 858.69, 67.2, 221.97, 646.8, 170.52, 109.44, 0.0, 0.0, 136.32], [0.0, 871.2, 0.0, 2333.76, 1173.06, 0.0, 341.04, 0.0, 0.0, 0.0, 0.0, 0.0, 763.28, 0.0, 443.94, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1916.64, 0.0, 1485.12, 1824.76, 487.55, 511.56, 0.0, 95.06, 0.0, 127.2], [0.0, 1045.44, 0.0, 13366.08, 0.0, 0.0, 341.04, 0.0, 0.0, 0.0, 0.0, 508.8, 667.87, 0.0, 591.92, 539.0, 0.0, 0.0, 0.0, 0.0, 34.08]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

