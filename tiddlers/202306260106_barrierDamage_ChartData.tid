created: 20230626010646000
creator: Drevarr
modified: 20230705163537090
modifier: drevarr
tags: ChartData
title: 202306260106_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Yngvar The Burdened", "Elonith Requiem", "Gestern Yesteryear", "Aribel Darkbringer", "Xanvias"];
const professions = ["Scrapper", "Scourge", "Scourge", "Firebrand", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 15006, 1411, 0, 2531, 121, 1144, 2584, 4212, 354, 6145, 7345, 82, 367, 0, 1709, 647, 9738, 151, 1357, 3764, 3893, 1262, 56, 667, 253, 0, 3727, 3601, 6055, 2224, 4474, 65, 207, 736, 6312, 2360, 0, 7239, 568, 1128], [5936, 0, 0, 0, 1539, 0, 11325, 1004, 1960, 3691, 3537, 0, 0, 0, 7087, 4690, 2781, 2522, 7763, 2349, 4738, 2922, 21225, 1248, 0, 16111, 0, 8402, 9750], [1359, 2512, 2510, 7744, 5962, 0, 3513, 1448, 6850, 5167, 14049, 5741, 4428, 1398, 0, 10994, 5299, 13797, 778, 2495, 3630, 1790, 2883, 1418, 2079, 4764, 0, 2044, 1327, 8001, 2172, 9325, 0, 2809, 3495, 5933, 5250, 2226, 10873, 3743, 8309, 14085], [0, 0, 0, 0, 1288, 0, 0, 0, 992, 1288, 18170, 9929, 0, 7155, 161, 14084, 2512, 38938, 253, 10959, 12094, 1195, 10264, 0, 0, 0, 3193, 1288, 9686, 3419, 16511, 0, 792, 0, 21619, 639, 0, 30325, 0, 0, 0], [2, 19125, 1126, 10270, 25536, 0, 28404, 14856, 74378, 8650, 89685], [9183, 0, 31031, 17227, 55935, 8787, 64914, 73403, 13, 7625, 158, 13307, 5233, 88707, 533, 11699, 16318, 3460, 14109, 16166, 13178, 1747, 0, 10233, 23221, 17508, 1607, 33026, 3785, 30195, 20664, 61796, 5735, 0, 61016, 1379, 13690, 48433]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

