created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Vampdru", "Artakama Nahid", "Gestalia Yesteryear", "Drevarr Moonwillow", "Arriasa", "Tribal S"];
const professions = ["Firebrand", "Druid", "Tempest", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[190.6782, 232.6684, 279.8239, 213.6957, 318.6883, 61.5949, 152.1607, 17.2931, 450.1325, 155.9318, 397.4337, 612.0388, 0.9104, 179.9951, 175.717, 0.52, 11.0, 18.931, 451.4719, 51.4819, 120.4497, 451.9185, 9.4113, 325.7979], [1952.6453, 1571.0755, 318.96, 6.25, 3801.236, 0.0, 353.5973, 4542.9946, 2.974, 4522.6915], [1383.7792, 1397.7465, 1584.7522, 840.8571, 1983.5455, 71.8291, 1130.4107, 1010.4483, 2116.4337, 353.75, 1784.0, 2243.7282, 36.1791, 1092.7734, 927.1887, 382.26, 75.05, 2415.1236, 501.3735, 627.8859, 1840.6033, 58.9351, 1841.8191], [1564.3943, 1789.8399, 1929.6457, 1455.5155, 1717.0909, 187.8101, 1133.6786, 404.0517, 2373.6747, 1624.5227, 2425.7229, 2375.7282, 1501.5222, 975.6604, 331.04, 88.025, 0.0, 252.0, 2838.1236, 93.4458, 1529.9195, 2893.9565, 35.1039, 1958.6702], [2109.6025, 2628.402, 2083.0478, 1824.4286, 1889.026, 124.9304, 1369.7321, 561.5517, 3475.2731, 2153.8636, 2306.3614, 3884.1845, 1689.9458, 970.0566, 148.76, 48.0417, 2896.4382, 820.6747, 1458.3826, 4192.3043, 141.8961, 3347.5], [2525.082, 3419.6837, 2819.2043, 2579.4969, 3501.6753, 240.7215, 1502.9286, 933.6724, 4984.1486, 1035.0227, 2336.0723, 2277.835, 0.0, 2172.3892, 1477.566, 312.88, 170.069, 1587.573, 253.3133, 1880.8725, 5841.9511, 32.1515, 3033.3404], [2476.3912, 3785.0179, 3325.7522, 2246.1366, 3753.9221, 103.1582, 1936.125, 1127.931, 6200.1647, 1479.8864, 2572.8795, 4525.5728, 0.0, 2369.2069, 2243.6415, 272.88, 35.975, 22.6897, 2675.8539, 935.8554, 860.0403, 3166.0978, 4062.4149]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

