created: 20230517220640000
creator: Drevarr
modified: 20230705163530557
modifier: drevarr
tags: ChartData
title: 202305172206_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Soxxdodendron", "Raelyn Sunray", "Asureon", "Sygaldry Verdandi", "Itsy Bitsy Tika", "Lucas Ryn", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "Koralia Danai", "Gabe Malhorn"];
const professions = ["Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 23.8547, 71.3952, 0.0, 0.0, 29.1912, 50.2975, 0.0, 0.0, 9.7675, 39.276, 85.1414, 73.43, 0.0, 4.6464, 68.9795, 24.8724, 163.3824, 41.0688, 0.0, 0.0, 0.0, 14.2531, 67.6347, 21.3385, 17.6753, 25.039, 54.489, 0.0, 0.0, 83.5632, 0.0, 130.6727, 20.4734, 0.0, 47.6842, 66.528], [0.0, 213.1897, 9.8532, 69.9602, 416.3991, 157.7859, 114.9712, 364.9971, 322.4621, 73.0374, 258.1488, 21.9936, 351.3623, 101.8114, 64.1916, 26.0494, 146.1456], [0.0, 142.594, 17.1734, 0.0, 0.0, 52.1474, 110.9087, 0.0, 0.0, 176.256, 0.0, 267.9451, 101.0716, 141.6192, 292.677, 99.7716, 309.1968, 56.2018, 21.2915, 56.1393, 24.003, 45.617, 408.5346, 120.2852, 105.8062, 267.1304, 75.1915, 0.0, 0.0, 151.704, 0.0, 186.5165, 0.0, 42.966, 118.9123, 113.0112], [0.0, 45.0004, 230.7139, 128.9938, 58.2941, 51.4725, 124.8578, 65.2059, 49.296, 0.0, 220.981, 95.76, 249.6715, 286.3513, 29.0628, 163.392, 273.4183, 285.2712, 313.6474, 163.2931, 69.7864, 45.3583, 13.0284, 109.7737, 405.2839, 91.1263, 66.2005, 188.7941, 297.2051, 89.4975, 279.6192, 0.0, 254.5849, 122.3774, 94.4784], [40.1174, 61.5562, 163.1257, 205.02, 49.7578, 40.9361, 80.5514, 94.9005, 134.7819, 39.3437, 311.459, 40.176, 332.8502, 241.0762, 0.0, 192.3456, 259.252, 279.8568, 220.537, 103.4309, 25.6612, 72.3387, 0.0, 81.8496, 543.0699, 48.1141, 99.0143, 379.8059, 247.3535, 141.61, 15.462, 344.232, 0.0, 434.804, 168.6974, 47.718, 0.0, 29.8944], [0.0, 23.8469, 250.7708, 188.8114, 31.225, 18.033, 172.9116, 27.5194, 55.7067, 0.0, 178.4592, 85.896, 216.6437, 266.1516, 47.304, 144.3072, 381.5634, 369.3072, 341.1706, 171.5069, 39.3914, 96.4981, 43.1802, 117.5882, 444.8161, 181.0609, 219.3862, 310.269, 314.678, 133.0801, 0.0, 395.3376, 0.0, 313.6701, 299.5978, 102.6828, 41.9971, 174.528], [12.0468, 29.025, 248.8219, 164.2867, 28.2075, 168.1566, 180.636, 62.3243, 0.0, 273.1968, 71.748, 269.0957, 281.6221, 32.643, 143.3472, 571.4655, 409.5768, 385.2077, 212.8882, 0.0, 57.3403, 0.0, 45.864, 505.4252, 168.8462, 285.0957, 352.406, 363.9499, 88.1647, 0.0, 361.4688, 0.0, 417.3007, 309.1397, 151.3512, 200.2022, 127.5696], [63.3464, 191.4721, 460.1224, 425.5733, 49.9075, 17.6607, 235.7026, 25.8086, 88.407, 63.7853, 507.1032, 135.324, 269.2987, 245.9886, 56.5866, 230.784, 571.5581, 347.8188, 363.072, 197.0856, 11.3098, 163.6419, 129.2306, 650.3417, 86.9554, 370.7717, 314.6329, 306.0658, 144.2423, 0.0, 394.5312, 0.0, 373.3109, 338.6918, 73.5768], [60.522, 111.456, 407.9625, 485.3909, 65.2579, 61.1508, 122.874, 50.1753, 106.5537, 23.8397, 537.8011, 122.076, 391.5965, 160.5708, 45.3924, 244.224, 655.1668, 313.302, 472.1107, 266.4562, 6.019, 140.851, 47.7414, 69.8191, 498.3996, 158.4934, 297.2884, 403.271, 386.5571, 138.1447, 4.248, 459.9504, 85.736, 505.0023, 218.4451, 145.2528, 56.4336, 154.7424], [80.1772, 107.764, 405.1142, 434.2565, 67.8974, 58.6278, 198.6389, 49.2466, 39.9641, 60.5933, 377.4082, 177.12, 284.1206, 236.2737, 66.9546, 231.0528, 703.9618, 364.7388, 503.0304, 229.5835, 162.3292, 33.957, 133.5701, 599.6943, 113.433, 238.2071, 314.4183, 615.4439, 123.384, 560.3472, 536.2119, 334.9862, 63.7956, 75.8414, 113.0544], [148.3077, 172.5246, 325.4206, 461.3674, 97.6997, 41.7426, 156.2534, 61.1733, 190.3077, 49.3757, 473.8349, 186.264, 248.2502, 282.6853, 148.2138, 273.792, 618.5938, 325.0332, 435.2179, 178.2922, 26.3894, 128.7573, 105.3738, 104.1642, 605.2519, 125.7222, 260.6286, 513.4426, 382.5822, 229.9413, 0.0, 652.68, 41.7487, 339.0452, 227.8944, 262.7856, 254.9655, 216.648]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

