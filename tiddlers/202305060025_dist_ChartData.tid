created: 20230506002551000
creator: Drevarr
modified: 20230705163528278
modifier: drevarr
tags: ChartData
title: 202305060025_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Rojin Rumei", "Mac Adaymia", "Demon Dalham", "Rina Of Theros", "Mistwalker Caelon", "Koralia Danai", "Lucas Ryn", "Johosh The Great", "Smol Gluvs", "Newtype Khan", "Artakama Nahid", "Eibh\u00ebar", "Air One Com", "Drevarr Moonwillow", "Bella Sassy", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Vindicator", "Dragonhunter", "Scourge", "Vindicator", "Firebrand", "Firebrand", "Willbender", "Scourge", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[336, 584, 366, 616, 310, 356, 393, 337, 5250, 281], [220, 313, 948, 1409, 558, 1057, 583, 412, 368, 346, 563, 483, 318, 515, 349, 5122], [312, 303, 640, 436, 711, 1284, 7633, 475, 322, 199, 351, 392, 280, 304, 311, 225], [264, 352, 730, 1092, 739, 1005, 7687, 462, 241, 184, 588, 247, 305, 373, 7484, 278], [231, 494, 851, 1797, 661, 528, 1420, 308, 196, 503, 267, 291, 309, 311, 532], [258, 277, 427, 620, 809, 1578, 293, 480, 325, 289, 380, 273, 302, 345, 314, 259], [219, 317, 563, 642, 574, 889, 381, 410, 283, 344, 512, 396, 289, 278, 335, 255], [267, 408, 388, 1373, 1130, 1303, 296, 339, 275, 380, 713, 204, 302, 219, 324, 289], [273, 317, 433, 485, 1058, 727, 321, 9352, 310, 258, 380, 206, 257, 331, 296, 231], [246, 315, 374, 983, 792, 1614, 6535, 432, 255, 288, 484, 166, 281, 398, 277, 11893], [271, 240, 584, 807, 694, 309, 459, 295, 317, 331, 201, 242, 537, 358, 258], [259, 453, 628, 1043, 1274, 294, 294, 254, 133, 487, 265, 257, 258, 291, 294], [224, 427, 868, 1459, 1035, 1863, 259, 299, 301, 334, 337, 188, 241, 339, 290, 195], [262, 222, 269, 461, 424, 1235, 601, 251, 330, 271, 206, 447, 371, 269, 315, 249, 199], [198, 190, 749, 936, 625, 885, 211, 261, 178, 191, 280, 184, 220, 209, 194], [215, 269, 417, 504, 504, 436, 294, 278, 226, 166, 318, 214, 214, 237, 264, 214]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

