created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Lord Erin The Wise", "Crusader Siolith", "Wergrh", "Nose Llama", "Tootsie Pop Rocks", "Stratager", "Minnie Darley", "Irish Mini Rev", "Xanvias Tsolice", "Darks Na", "Drevarr Moonwillow", "Klengah", "Tegan Parker", "Hyde En Sikh", "Gabe Malhorn", "Blancooo Padreee", "Sub Train", "Rahani Sunray", "Milvia Rosalyn", "Nadumi", "Koralia Danai", "Mmathuss", "K\u00e2 \u00d4tik R\u00e6j", "Grand Magus Karen", "Vini Boy", "Govinda Ektar", "Gwyn Cassel", "Storm Dragonbane", "Mort\u00e4rion", "Pr\u00e6tor Lightbringer", "Gwyn Cassel", "Jimbo The Pleb", "Belvyn Brightblade", "Faz Zypher", "Aira Draugr", "Faz Zypher", "Sylia Raskae", "Bee Nemesis", "Vini Boy", "Joe White Flame", "Vini Boy", "Ab Synthe", "Claw Ironstrick", "Melody Phoenixstorm", "Hypotenusa", "Ez Mode Mathus", "Cuz Imasir", "Blue Hawk Blade", "Irish Mini Rev"];
const professions = ["Spellbreaker", "Weaver", "Firebrand", "Renegade", "Weaver", "Scrapper", "Daredevil", "Dragonhunter", "Herald", "Weaver", "Firebrand", "Scrapper", "Druid", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Druid", "Daredevil", "Firebrand", "Firebrand", "Berserker", "Tempest", "Tempest", "Vindicator", "Virtuoso", "Soulbeast", "Scrapper", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Soulbeast", "Herald", "Untamed", "Berserker", "Berserker", "Catalyst", "Harbinger", "Weaver", "Reaper", "Mechanist", "Scrapper", "Tempest", "Scourge", "Mechanist", "Dragonhunter", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[191.7327, 0.0, 238.1438, 0.0, 130.3021, 326.8949, 681.1126, 0.0, 716.558, 1173.3233, 48.7368, 545.3669, 2568.1], [227.0694, 574.0588, 209.5798, 1.6735, 550.3978, 1166.1986, 0.0, 671.1439, 772.6364, 312.4, 450.7627, 1913.9756], [51.9709, 0.0, 107.8742, 1.3855, 123.6893, 1854.25, 177.3448, 647.5933, 0.0, 1052.6788, 798.6589, 3.6261, 885.5243, 2494.2364], [324.7547, 199.2383, 11.5588, 628.3759, 1329.9671, 722.6176, 1597.7872, 22.5556, 528.6014, 1769.4324], [296.1827, 0.0, 219.1906, 5.475, 361.3886, 18.8919, 480.3469, 1303.1842, 0.0, 460.5106, 699.2385, 14.0, 699.4686], [52.0481, 6.8727, 63.6095, 0.0, 99.7914, 16.58, 439.0669, 568.9865, 0.0, 927.5145, 1027.1654, 0.0, 842.1378, 1873.76], [308.8509, 36.9494, 684.3448, 32.4286, 539.2319, 1457.9839, 647.4138, 964.4211, 228.6966, 363.8313, 4448.3846], [162.901, 50.95, 285.4635, 6.9231, 486.2555, 596.9605, 18.9091, 1030.3333, 1031.0746, 424.2154, 590.7842, 2331.5116], [115.6786, 65.3235, 324.2218, 701.4481, 0.0, 1500.8611, 1077.4179, 0.0, 706.6078, 2325.8448], [38.4082, 0.0, 162.3766, 0.0, 149.9316, 349.4109, 1124.5329, 0.0, 411.7266, 491.7727, 39.6327, 722.4081, 1949.4706], [78.8431, 0.0, 145.5879, 40.6731, 428.0051, 11.6667, 402.9927, 569.7, 502.2152, 550.0391, 1.3956, 695.5056, 2369.9455], [172.7745, 7.0862, 175.429, 32.95, 92.8889, 49.7407, 242.4473, 638.4868, 0.0, 601.1295, 672.1783, 0.0, 807.5187, 2100.6964], [146.4375, 0.0, 106.2454, 0.0, 150.3138, 0.0, 449.4419, 603.3649, 0.0, 1284.2429, 2603.1277, 0.0, 675.7946, 2703.4545], [144.5719, 92.4694, 325.7931, 746.3774, 762.1141, 0.0, 731.0, 475.6136, 368.5949, 1880.8571], [159.1731, 0.0, 82.3115, 9.4524, 147.774, 0.0, 349.9222, 514.8101, 0.0, 722.4385, 860.504, 1.1478, 680.8745, 1792.0758], [70.8163, 0.0, 88.9562, 0.0, 147.5134, 37.931, 389.3538, 629.9865, 0.0, 469.3212, 571.375, 791.0039, 2935.9302], [41.2277, 0.0, 131.6289, 61.2115, 132.9541, 104.8571, 343.2563, 567.4935, 1834.2836, 563.8828, 59.4923, 461.8109, 1807.0548], [144.2277, 1.9649, 127.0159, 1.9481, 303.8556, 31.08, 280.413, 761.1565, 0.0, 714.5224, 507.9773, 6.0536, 419.0037, 1928.0741], [1076.1589, 0.0, 907.0576, 1432.6883, 614.9962, 7300.0], [515.5417, 110.6667, 507.4203, 1728.4714, 145.1304, 0.0, 0.0, 623.5795, 2303.4524], [451.8885, 0.0, 302.551, 11.5849, 698.1349, 1120.9299, 0.0, 598.0857, 1924.375], [51.2525, 0.0, 57.1885, 0.0, 62.6811, 93.6897, 183.4545, 500.9342, 0.0, 617.3813, 687.3256, 815.2621, 1722.8431], [129.4769, 108.5497, 3.4909, 307.5616, 515.1722, 0.0, 411.8273, 490.124, 7.697, 763.0487, 2197.6], [154.7767, 9.9455, 111.4647, 0.0, 102.4922, 67.9796, 837.2325, 323.6486, 0.0, 956.9137, 1702.274], [33.4321, 88.6702, 3.5588, 201.7436, 813.8986, 0.0, 926.9197, 443.8636, 44.0, 718.1715], [709.6599, 458.0455, 875.7183, 922.0977, 122.4211, 609.3498, 2781.52], [76.5057, 62.9483, 92.7744, 51.2692, 204.4531, 41.8636, 985.8579, 3860.5405], [167.454, 95.2857, 422.9601, 950.8101, 0.0, 430.2806, 1062.4127], [832.8095, 773.0526, 209.0379, 1546.777, 288.381, 195.0538, 59.8, 293.2105, 27.6408], [0.0, 505.3276, 32.5556, 944.7985], [5.2903, 720.5285, 2440.8889], [113.5192, 0.0, 185.0671, 8.9268, 8.0962, 432.7254, 2439.4118], [264.3493, 0.0, 287.2211, 277.3056, 623.6593], [76.4343, 0.0, 236.9219, 1762.6471, 287.4689, 23.6735, 379.36], [151.4636, 806.7313, 1840.7143], [108.1782, 0.0, 122.4747, 37.4444, 249.1474, 7.3514, 465.5277], [1030.8198, 728.2083, 481.4679, 112.8815], [665.7381, 701.5385], [3224.4167], [449.3053, 0.0], [5.0517, 852.5697], [174.2032, 124.9706, 302.9782], [523.3175, 0.0, 4.8462], [301.1442], [160.64, 10.8393, 233.5755], [171.2853, 77.0123], [147.4423, 8.8571, 140.3722], [253.4615, 678.1026], [155.0297, 0.0], [21.7778]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

