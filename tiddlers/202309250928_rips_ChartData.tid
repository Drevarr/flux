created: 20230925092820000
creator: Drevarr
tags: ChartData
title: 202309250928_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Dinosaur Kale", "Reina Armitage", "Necrotic Windrunner", "Morv\u00e4rth", "Grasszanine", "Morton Saltbringer", "Hawaiian Supreme", "Elonith Requiem", "Drac Tepes", "Necrophagya", "Illusive Heart"];
const professions = ["Harbinger", "Druid", "Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Spellbreaker", "Reaper", "Scourge", "Reaper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0263, 0.0227, 0.1217, 0.1667, 0.0, 0.037, 0.0, 0.0584, 0.0441, 0.0488, 0.0, 0.1039, 0.0, 0.0, 0.0203, 0.0, 0.0881, 0.0, 0.0, 0.0732], [0.0, 0.0109, 0.0, 0.0575, 0.0303, 0.1043, 0.037, 0.0, 0.0556, 0.0, 0.0649, 0.0735, 0.0122, 0.0085, 0.0, 0.2278, 0.039, 0.0488, 0.0, 0.0421, 0.0333, 0.0617, 0.0404, 0.0, 0.0, 0.0732, 0.0, 0.1053, 0.1368, 0.0909, 0.0438, 0.1429, 0.09, 0.0, 0.0752, 0.0, 0.0696, 0.0556, 0.0192, 0.0083], [0.0, 0.3924, 0.3117, 0.5854, 0.0, 0.0296, 0.163, 0.1515, 0.0, 0.0, 0.1524, 0.0, 0.0876, 0.0, 0.14, 0.3784, 0.2481, 0.0, 0.1076, 0.2083, 0.0, 0.05], [0.0, 0.7565, 0.5741, 0.0, 0.1852, 0.0, 0.3052, 0.5294, 0.4146, 0.0855, 0.0, 0.6203, 0.4675], [0.6481, 0.0811, 0.6296, 0.0, 0.5584, 0.5147, 0.439, 0.0171, 0.7342, 0.6494, 0.0, 1.0244, 0.037], [0.0, 0.1954, 0.8289, 0.197, 0.9478, 1.1296, 0.1081, 0.4259, 0.0185, 0.0779, 0.6765, 0.6463], [0.0, 0.9825, 0.5789, 0.1515, 0.3869, 0.1633, 0.34, 0.4324, 0.406, 0.0, 0.2785, 0.375, 0.0385, 0.35], [0.0833, 0.2115, 0.4545, 0.0182, 0.0, 0.378, 0.0172, 0.4561, 0.6105, 0.0606, 0.1752, 0.0612, 0.3, 0.2162, 0.4361, 0.0, 0.1013, 0.3681, 0.0577, 0.0833], [0.0171, 0.1212, 0.3924, 1.026, 0.0, 0.9756, 0.1111, 0.0952, 0.6667, 0.3128, 0.5556, 0.0, 0.0286, 0.5183, 0.5965, 0.8842, 0.1818, 0.0876, 0.2653, 0.22, 0.5113, 0.0, 0.2722, 0.0486, 0.0, 0.1083], [0.4138, 0.3908, 0.3816, 0.1591, 0.6348, 0.7778, 0.027, 0.0741, 0.463, 0.2597, 0.3529, 0.4146, 0.0, 0.4304, 0.5325, 0.1026, 0.0976, 0.0741, 0.1482, 0.45, 0.0485, 0.1212, 0.0, 0.0, 0.0976, 0.0, 0.4211, 0.9368, 0.0303, 0.1314, 0.1633, 0.35, 0.1081, 0.3684, 0.0606, 0.1519, 0.1389, 0.0, 0.275], [0.0, 0.4023, 0.6447, 0.1894, 0.7826, 0.9815, 0.1892, 0.3704, 0.0, 0.4481, 0.9118, 0.4756, 0.0769, 0.0, 0.8228, 0.4545, 0.0, 1.4146, 0.0741, 0.1732, 0.1333, 0.1894, 0.2626, 0.0, 0.0, 0.6341, 1.0351, 0.8211, 0.2424, 0.2701, 0.5714, 0.74, 1.027, 0.6241, 0.0, 0.5823, 0.4792, 0.0769, 0.3333]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

