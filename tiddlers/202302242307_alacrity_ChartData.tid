created: 20230224230708000
creator: Drevarr
modified: 20230705163520050
modifier: drevarr
tags: ChartData
title: 202302242307_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Tegan Parker", "Viral Marketing", "Primal Clone", "Abigail Ryn", "Zadie Miststep", "Venomina The Siren", "Black Raspberry Pie", "Arka\u00f1"];
const professions = ["Tempest", "Scrapper", "Chronomancer", "Tempest", "Willbender", "Chronomancer", "Tempest", "Tempest", "Tempest", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[280.6054, 119.6582, 128.3981, 74.2368, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 120.7987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [10.486, 48.4786, 65.2013, 30.5827, 31.584, 12.5126, 35.72, 61.3343, 3.6491, 5.45, 5.3861, 15.2454, 0.0, 55.7837, 10.7393, 25.74, 31.2174, 12.767, 22.3692, 40.7525, 40.9562, 30.0154, 8.1497, 5.3933, 51.9792, 38.1456, 50.7473, 28.835, 27.3827], [103.1822, 68.2094, 50.5018, 26.6045, 72.072, 71.8825, 33.2308, 109.0108, 0.0, 0.0, 0.0, 0.0, 0.0, 56.3568, 0.0, 0.0, 0.0, 18.6595, 48.0763, 25.6579, 72.8179, 32.8408, 0.0, 0.0, 29.792, 21.8592, 65.8751, 79.9572, 0.0], [260.1577, 133.979, 67.3728, 42.0202, 83.9664, 38.9065, 57.2516, 122.7524, 17.0978, 0.0, 44.0059, 0.0, 142.0382, 0.0, 63.288, 53.9452, 84.325, 41.4038, 90.944, 83.9096, 0.0, 0.0, 113.8368, 133.4016, 122.107, 106.9214, 63.8852], [92.8011, 79.0296, 72.9965, 76.7587, 25.9392, 121.7376, 133.7945, 44.4087, 42.2509, 16.0677, 7.1501, 27.2765, 114.815, 51.984, 33.9711, 86.4677, 36.7672, 67.2317, 99.7875, 73.3373, 8.0203, 15.7982, 240.9232, 155.2176, 123.9754, 114.364, 125.3062], [134.0111, 123.371, 77.2838, 97.4314, 67.5024, 145.7853, 122.5931, 0.0, 42.9395, 39.4119, 2.7754, 13.0675, 0.0, 113.0957, 0.0, 31.104, 31.0397, 116.5997, 148.8123, 73.2355, 129.1405, 41.1953, 0.0, 31.0877, 159.3088, 100.7856, 105.4725, 104.6846, 56.1702], [411.1561, 575.8022, 174.3341, 164.9549, 206.4048, 244.4527, 251.6581, 133.2261, 54.0014, 90.6593, 59.341], [294.342, 136.7371, 43.4054, 78.4224, 120.0431, 168.4566, 203.1908, 17.9928, 21.4286, 27.589, 43.4928, 0.0, 223.1347, 41.016, 38.844, 17.4107, 128.7418, 160.1215, 81.1934, 197.8816, 86.1881, 12.2461, 0.0, 134.6912, 28.2096, 148.6861, 146.6154, 42.3522], [255.439, 153.2856, 155.0688, 111.5328, 102.9168, 125.4522, 89.4867, 171.3505, 78.2136, 44.5352, 71.6419, 0.0, 236.3165, 41.2387, 72.576, 11.4464, 82.5394, 186.0279, 98.8651, 121.9277, 96.2135, 16.6443, 297.4496, 155.4768, 175.9281, 128.8832], [388.2966, 233.376, 139.367, 147.7277, 99.6912, 188.993, 94.2162, 57.1448, 50.031, 60.8107, 76.1342, 25.6102, 279.6826, 67.6334, 206.748, 73.2594, 175.6138, 221.699, 96.9394, 135.977, 118.1782, 67.8062, 90.4138, 251.8208, 140.5296, 195.094, 141.1249, 116.9003], [217.7942, 167.3942, 136.6944, 63.3322, 135.4416, 172.114, 127.3848, 185.3435, 99.2129, 58.212, 39.4901, 42.4432, 351.3226, 0.0, 135.576, 104.9844, 259.9834, 225.1864, 97.8456, 255.8976, 149.1962, 28.6964, 30.7315, 423.2032, 267.408, 376.808, 246.5009, 148.2902]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

