created: 20230217231312000
creator: Drevarr
modified: 20230705163519531
modifier: drevarr
tags: ChartData
title: 202302172313_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Nelliel T", "Sofya De Meme", "Be\u00eb", "Arka\u00f1", "Tegan Parker", "Zadie Miststep", "\u00c9\u00efbhear", "Air One Com", "Ark Darkness", "Veron Blackburn", "Drevarr Moonwillow", "Arcanophage Farra", "Tyrisai", "Aronorf Xideliesi", "Zaylen Harker", "Johosh The Great", "Blanco Padre Guard", "Koralia Danai", "Ravioli Fetabringer", "Bella Sassy"];
const professions = ["Chronomancer", "Scourge", "Weaver", "Scourge", "Chronomancer", "Tempest", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Herald", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 40.6426, 228.8261, 92.7648, 0.0, 0.0, 0.0, 0.0, 41.8454, 0.0, 0.0, 0.0, 0.0, 34.1112, 92.9143, 1.9003, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 37.3067, 71.0748, 45.474], [11.9232, 65.1168, 66.8752, 78.9645, 32.097, 9.6089, 0.0, 42.4483, 6.6816, 31.3622, 0.0, 0.0, 0.0, 1.9891, 85.3339, 23.2659, 5.7907, 29.7888, 0.0, 0.0, 29.1125, 0.0, 5.9762, 5.911, 38.8483, 126.0108, 0.0], [35.2728, 31.6008, 24.0296, 1.8816, 9.9176, 0.0, 37.7294, 0.0, 0.0, 39.8362, 0.0, 0.0, 39.6288, 0.0, 80.1893, 19.6291, 38.807, 18.4896, 114.912, 45.7277, 0.0, 29.7909, 20.0705, 0.0, 98.6624, 38.9794, 9.812], [22.1573, 0.0, 0.0, 48.608, 76.4557, 42.2013, 12.6677, 0.0, 43.2072, 5.929, 48.9216, 84.0398, 0.0, 69.4656, 15.9667, 89.2483, 102.4797, 24.4454, 6.1632, 0.0, 1.2144, 44.3477, 0.0, 12.2951, 0.2415, 0.0, 33.1895, 0.0], [0.0, 0.7661, 29.3608, 108.0038, 44.4038, 0.0, 8.0165, 0.0, 9.4248, 18.9235, 43.4179, 16.1436, 0.0, 32.0256, 209.6909, 165.4114, 38.3116, 0.8909, 66.6653, 0.0, 0.0, 0.0, 0.0, 0.0], [69.4195, 72.9144, 0.0, 86.3654, 31.5109, 40.3574, 28.5682, 19.2922, 68.8397, 38.1151, 0.0, 62.7072, 15.7517, 123.1358, 44.1903, 7.3728, 31.6378, 0.0, 0.0, 30.9672, 0.0, 14.33, 0.0, 76.7717, 0.0, 8.514], [15.4008, 20.0275, 13.2104, 98.784, 9.7373, 2.4671, 8.208, 0.0, 15.4714, 23.0707, 67.0925, 18.5913, 0.0, 48.6912, 0.0, 243.252, 46.8806, 30.251, 93.36, 51.9542, 89.1922, 61.6082, 0.0, 0.0, 46.248, 7.112, 48.62], [22.8528, 11.7374, 39.8664, 85.4874, 51.4814, 24.6455, 6.6211, 7.0502, 68.567, 112.9565, 29.548, 0.0, 82.0608, 19.4342, 129.5107, 122.5572, 15.0451, 45.8131, 72.528, 17.9731, 9.1742, 9.0297, 36.157, 11.799, 0.0, 34.466, 23.76], [27.2246, 17.3736, 16.8952, 24.2099, 7.4382, 7.5573, 41.0126, 0.0, 58.5072, 35.4202, 195.6864, 0.0, 0.0, 4.9536, 14.8378, 321.2045, 0.0, 0.0, 35.6952, 0.0, 36.984, 41.1682, 0.0, 2.6347, 0.0, 81.7819, 40.028, 80.63], [50.0774, 88.102, 119.0426, 14.6059, 35.8646, 31.163, 63.4766, 111.2064, 461.0861, 0.0, 0.0, 128.5248, 8.2253, 254.3242, 162.6125, 0.3082], [39.181, 60.6298, 33.9864, 168.4032, 107.2453, 31.19, 6.5938, 0.0, 23.8365, 112.3236, 19.9296, 74.807, 357.888, 103.6256, 12.8102, 81.8165, 220.656, 79.201], [43.2216, 91.4098, 60.9168, 157.9917, 69.9642, 32.7482, 35.4586, 14.639, 29.8445, 215.7792, 136.6666, 78.6048, 17.5526, 231.7325, 130.2793, 24.5146, 62.7106, 55.92, 12.3869, 16.3282, 61.4659, 70.5789, 32.499, 50.3332, 40.4383, 32.736], [50.8723, 150.6442, 70.0308, 188.16, 113.3311, 65.6522, 41.1768, 117.1613, 27.049, 245.1322, 63.5835, 183.5136, 37.7126, 235.1995, 92.6154, 0.0, 70.2605, 18.384, 10.8854, 63.1267, 190.0859, 52.3291, 0.0, 233.0899, 37.7941, 101.948], [140.2301, 17.483, 54.7036, 280.1702, 98.9957, 13.1928, 53.1331, 77.3813, 85.9392, 648.5606, 106.1279, 0.0, 250.7136, 23.52, 557.1869, 245.6624, 63.6864], [56.2709, 34.0632, 31.5756, 208.7322, 74.0664, 33.2935, 132.6139, 69.5963, 58.2379, 63.3293, 81.9437, 90.4506, 0.0, 38.2464, 7.2845, 600.2453, 347.8931, 203.591, 86.784, 76.9709, 145.7942, 95.5939, 117.2317, 46.368, 66.9825, 47.5504, 67.342], [166.4611, 159.6456, 46.7656, 324.3251, 131.7238, 34.9816, 138.6605, 14.6648, 176.7456, 129.6077, 130.1664, 30.7136, 121.5043, 57.1776, 57.7382, 392.8939, 108.5578, 0.0, 50.2814, 73.2, 51.623, 42.1618, 216.1796, 206.8958, 19.4695, 425.4045, 241.3535], [233.7941, 167.0054, 109.2308, 214.5651, 172.7466, 50.174, 144.8986, 35.3457, 186.9538, 126.6125, 382.1126, 160.0369, 0.0, 259.5456, 97.6819, 306.6653, 135.8093, 142.7294, 22.656, 67.9843, 112.6742, 151.9762, 158.915, 8.993, 228.2339, 121.9532, 93.412], [198.7862, 201.2054, 38.416, 252.009, 114.7737, 53.3684, 188.1274, 37.8097, 141.2741, 16.4045, 211.1491, 0.0, 67.6992, 36.9062, 592.752, 224.1402, 230.1442, 96.144, 83.7494, 177.457, 189.1616, 84.3948, 15.456, 656.8758, 88.627, 6.952], [90.5832, 62.2987, 54.9192, 40.5171, 55.223, 35.7607, 118.5509, 91.237, 82.6368, 135.4954, 65.3902, 80.7936, 29.0573, 436.7352, 235.2999, 158.0347, 584.976, 123.648, 284.4014, 219.3791, 122.8651, 38.6745, 782.6703, 238.9828, 49.72], [261.5486, 230.1523, 208.3676, 382.5293, 121.2201, 61.2632, 99.1253, 65.8546, 138.1896, 70.9171, 366.9994, 92.3155, 69.1358, 40.6656, 24.7834, 648.672, 418.2389, 51.9475, 174.2131, 646.56, 130.824, 312.2885, 284.2223, 142.3573, 13.179, 498.091, 264.9691, 194.656], [156.6576, 159.2078, 173.3032, 388.0486, 260.4722, 130.0318, 135.0763, 0.0, 240.8342, 119.5776, 351.0125, 180.2018, 78.907, 278.4, 87.8438, 941.6928, 257.1708, 64.2125, 184.177, 255.792, 81.7843, 284.1696, 212.589, 246.3514, 65.9525, 496.3181, 262.1425, 141.548]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

