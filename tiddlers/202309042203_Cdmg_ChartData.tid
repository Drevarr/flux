created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Zefirokai", "Venomina The Fierce", "Tootsie Pop Rocks", "Dancing In The Mist", "Darkened Sword", "Morv\u00e4rth", "Mistwalker Cael", "Sonja Wintersong", "Daphne Agla\u00e9", "Crusader Siolith", "Rina Of Theros", "Ballthaa", "Necrotic Windrunner", "Rhaevynn", "A \u00da R A", "Belvyn Brightblade", "Bella Sassy", "Oo Dads Mad", "Drevarr Moonwillow", "Mort\u00e4rion", "Glorious Gluvs", "Kosa\u00edr", "Sub Train", "K\u00e2 \u00d4tik R\u00e6j", "Gamora Titus", "Lord Erin The Wise", "Lucky Luprac\u00e1n", "Rafaellagabriela", "Boo Boo Knee Capper", "Darth Sammy", "Glizzy Gobbl\u00e9r", "Electric Raikou Rom", "Selandir", "Pope On Cope", "Nose Llama", "Be\u00eb", "Darks Na", "Jmbrage Warrior", "Blaize Harlot", "Jimbo The Pleb", "Xanvias Einzbern"];
const professions = ["Catalyst", "Spellbreaker", "Scrapper", "Herald", "Spellbreaker", "Reaper", "Herald", "Firebrand", "Reaper", "Firebrand", "Reaper", "Firebrand", "Reaper", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Scrapper", "Berserker", "Holosmith", "Firebrand", "Berserker", "Firebrand", "Weaver", "Scrapper", "Firebrand", "Berserker", "Reaper", "Reaper", "Mechanist", "Weaver", "Renegade", "Tempest", "Reaper", "Dragonhunter", "Berserker", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.6286, 0.0, 0.0, 9.8617, 1.3636, 0.0, 19.8889, 11.4831, 0.0, 5.8307, 0.0], [0.0, 3.7148, 2.9457, 5.641, 0.0182, 9.3333, 6.0513, 2.9429, 0.0, 20.45, 0.0, 0.0, 7.9123, 16.4889, 0.5225, 3.8, 0.0351, 0.0, 23.7586, 0.0, 0.0, 5.599], [8.2759, 0.4677, 1.5217, 10.141, 5.9636, 24.3077, 22.0513, 0.0, 0.0, 8.825, 2.2553, 0.9697, 0.0, 23.2222, 0.0337, 0.0, 3.5591, 7.0732, 8.1034, 0.0, 6.2115, 2.3619], [0.0, 0.251, 6.4457, 0.1795, 3.5909, 14.7949, 3.0769, 0.0, 6.2241, 8.3, 11.4787, 1.4848, 0.0, 2.2, 0.8596, 19.8, 5.8339, 67.0976, 0.0, 0.0, 10.1218, 0.5281], [0.0, 98.8571, 0.0, 19.5875, 15.4149, 0.3939, 0.0, 4.4444, 6.5112, 0.0, 7.8978, 0.0, 3.5862, 0.0, 0.0, 2.6186], [0.0, 1.7143, 0.0, 66.225, 0.1809, 0.0, 0.0, 27.9333, 3.8146, 0.0, 5.3195, 19.0244, 23.8276, 0.75, 3.7042], [2.6379, 1.1977, 8.163, 1.7692, 5.2818, 19.6923, 0.0, 44.1429, 8.2241, 9.725, 0.0, 0.0, 17.2889, 0.0, 0.0, 7.8594, 2.561, 34.6897, 0.0, 5.1987, 7.3423], [0.0, 2.9772, 2.8587, 0.0, 0.0, 0.0, 0.0, 0.0, 6.2625, 3.1277, 1.8485, 0.0, 187.3778, 0.0, 2.0863, 8.0244, 0.0, 0.0, 13.1731, 3.313], [26.9655, 5.0646, 21.3152, 4.7308, 9.9727, 15.0513, 0.0, 0.0, 0.0, 18.7, 28.9468, 9.7273, 0.0, 12.7778, 0.1461, 0.0, 6.3578, 7.7073, 3.7069, 0.0, 1.5128, 0.5746], [13.7759, 5.9696, 8.3804, 11.5128, 9.2182, 1.1538, 0.4359, 6.9429, 0.0, 6.5375, 0.0, 23.5152, 0.0, 8.9778, 0.618, 0.0, 18.2907, 26.1463, 0.0, 0.0, 0.0, 3.379], [2.8448, 9.7567, 18.3696, 4.3846, 3.2455, 56.7436, 0.0, 0.0, 2.8103, 1.9375, 3.117, 0.2121, 0.0, 16.9556, 1.618, 8.9, 4.8147, 11.2439, 12.6034, 0.0, 6.9744, 5.9291], [469.2857, 0.0], [4.7414, 4.8327, 23.8804, 32.9103, 15.0818, 87.4359, 0.0, 0.0, 2.1552, 6.575, 0.0, 0.0, 0.0, 45.0667, 0.427, 0.0, 0.7636, 0.0, 2.3276, 0.0, 16.5769, 2.2005], [0.0, 27.3152, 28.9487, 6.9, 14.6923, 22.5128, 0.0571, 1.1034, 1.5875, 30.0532, 11.697, 0.0, 20.7556, 1.8933, 6.8333, 6.0447, 3.4146, 23.5517, 0.0, 5.641, 5.3056], [0.0, 0.0, 30.2625, 5.4468, 11.0606, 3.5263, 69.2444, 4.8876, 8.5333, 12.7987, 14.9756, 44.9655, 4.2115, 7.4841], [42.6724, 1.1939, 54.087, 0.0, 39.3455, 144.3333, 39.0513], [2.2241, 2.2243, 71.5, 51.4103, 6.5, 18.7179, 11.1538, 44.3429, 0.0, 0.0, 3.7021, 0.0, 0.0, 8.4222, 0.618, 0.0, 5.476, 11.0488, 12.3793, 0.0, 4.2821, 6.7408], [21.3966, 33.6084, 32.0217, 62.7949, 21.6545, 54.0, 0.0], [28.2069, 10.4335, 15.2391, 19.0897, 8.4909, 27.9487, 7.7692, 15.4, 0.0, 11.3125, 15.2553, 17.6667, 0.0, 19.2222, 5.6966, 7.6667, 12.2109, 4.3659, 3.0517, 0.0, 4.359, 6.6406], [19.3448, 15.711, 27.8043, 30.7692, 19.6636, 44.2051, 5.3333, 2.7143, 0.0, 10.0375, 0.0, 0.2424, 0.0, 120.1111, 0.7022, 0.5667, 6.5942, 56.0244], [0.0, 0.0, 19.5125, 2.234, 3.1515, 0.0, 2.3111, 10.8034, 0.0, 18.4281, 66.9268, 77.7069, 0.0, 8.1859, 17.8117], [10.9655, 32.9202, 35.0, 82.2308, 50.7091, 37.1026, 4.8718], [15.2241, 10.9886, 17.663, 20.0513, 26.9818, 17.4103, 0.0, 0.0, 0.0, 21.6625, 0.0, 16.9394, 2.7018, 71.4444, 8.9045, 0.0, 2.0383, 4.5854, 24.3966, 0.0, 4.5833, 18.4817], [55.431, 26.2471, 116.6522, 41.1154, 41.9909, 51.9487], [35.5375, 2.0319, 73.6364, 0.0, 14.2222, 11.0562, 4.8667, 24.8466, 3.7317, 72.3621, 0.0, 34.891, 17.9731], [0.0, 22.5627, 8.75, 5.7179, 0.0, 45.2821, 23.7692, 49.5143, 0.0, 49.5, 0.0, 26.697, 0.0, 118.8667, 12.7528, 0.0, 13.8147, 0.0, 72.0172, 17.4545, 1.0192, 0.3325], [29.8793, 10.73, 13.1957, 14.5385, 14.3273, 18.6923, 2.2564, 19.6286, 1.569, 44.45, 0.1277, 7.3636, 0.0, 44.1556, 0.8933, 0.0, 24.7572, 6.6341, 46.1552, 0.0, 10.1859, 21.8313], [2.3793, 5.8441, 90.9783, 166.5769, 12.9, 0.5641, 40.0, 0.8571, 0.431, 0.0, 12.1064, 5.4848, 0.0, 1.6667, 0.0, 33.2, 3.1246, 0.0, 31.8966, 0.0, 25.0192, 6.7653], [98.8166], [14.069, 13.27, 19.2826, 12.6667, 34.5636, 11.4103, 23.6, 7.0172, 17.9375, 14.7021, 11.697, 8.7018, 16.8667, 8.0393, 46.0333, 13.984, 47.0, 14.5172, 0.0, 37.6474, 28.132], [37.7414, 19.1597, 46.0, 75.1282, 17.0727, 40.7436, 1.3846, 12.0571, 2.7586, 15.8125, 5.2979, 27.9091, 3.9123, 24.4889, 5.264, 0.0, 5.8051, 24.8293, 24.8276, 30.5844, 19.7436, 20.2567], [199.3718, 233.4636, 143.2564, 0.8974], [8.2931, 11.6464, 48.5435, 59.0128, 69.3818, 36.6923, 0.0, 0.0, 0.0, 3.125, 0.0, 28.9394, 4.5965, 19.6222, 11.6124, 0.0, 19.3706, 6.3415, 12.4483, 0.0, 16.5064, 31.5183], [71.1714, 20.2759, 56.425, 63.2447, 100.5455, 73.7247, 4.3333, 20.3035, 0.0, 0.0, 0.0, 49.6731, 18.846], [9.9696, 82.7935, 36.5128, 22.6091, 103.0769, 9.0769, 20.3714, 0.931, 21.5, 0.0, 9.3636, 3.9825, 155.6, 0.0, 0.0, 20.6006, 39.8049, 128.1207, 0.0, 36.0513, 13.3496], [0.0, 33.0798, 73.1522, 52.5385, 33.8273, 45.6923, 29.8462, 3.5429, 3.4483, 57.35, 28.2424, 7.614, 47.0889, 20.3258, 0.9333, 9.9233, 54.7317, 39.9828, 0.0, 13.2692, 25.1858], [15.4828, 8.7681, 11.913, 56.7821, 43.0, 29.4872, 45.0513, 0.0, 11.7586, 37.075, 0.0, 58.3333, 6.9474, 216.6889, 11.0, 0.0, 15.3578, 5.2439, 54.5172, 0.0, 46.5, 31.1345], [65.1207, 28.4297, 52.8804, 78.9103, 32.9818, 170.6923, 23.8205, 16.3714, 5.1724, 52.2875, 0.0, 10.697, 0.0, 224.3111, 17.9831, 0.0, 17.2843, 0.0, 128.8793, 0.0, 5.5192, 18.1467], [48.8793, 25.8099, 50.4565, 134.4615, 93.8636, 44.4359, 4.7949, 20.4857, 0.8621, 5.8125, 9.8617, 11.1515, 0.0, 23.9333, 2.6067, 3.6, 28.0351, 18.2195, 72.6552, 0.0, 21.8013, 38.8802], [23.8621, 0.0, 131.8152, 42.4615, 106.4727, 32.8205, 36.2051, 95.9714, 0.0, 54.8, 13.2021, 31.7273, 12.614, 126.8667, 1.0225, 0.0, 31.869, 0.0, 39.6724, 0.0, 87.0705, 34.2763], [38.7414, 40.5703, 31.4348, 120.3462, 57.9, 42.641, 0.0, 3.0857, 50.9483, 31.8375, 0.0638, 306.7879, 0.0, 247.1333, 43.1236, 0.0, 52.4856, 0.0, 45.0862, 88.4936, 44.4328]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

