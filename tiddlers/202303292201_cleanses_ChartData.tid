created: 20230329220116000
creator: Drevarr
modified: 20230705163523245
modifier: drevarr
tags: ChartData
title: 202303292201_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Jorja Peachbringer", "Tootsie Pop Bringer", "Brioche Bunbringer", "Boysto Yardbringer", "Avian Nefaris", "Bork Borkbringer", "Abigail Ryn", "Charred Fishbringer", "Arkintor", "Big Macbringer", "Spicy Gyrosbringer", "Band Aidbringer"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Vindicator", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0635, 0.0, 0.1858, 0.0, 0.2262, 0.1064, 0.0, 0.1579, 0.0123, 0.0571], [0.6984, 0.0, 0.2062, 0.2338, 0.2279], [0.3492, 0.075, 0.213, 0.0455, 0.3852, 0.1702, 0.0, 0.0789, 0.1728, 0.0], [0.0476, 0.0, 0.3191, 0.0649, 0.3802, 0.2468, 0.0, 0.0526, 0.2222, 0.2857], [0.0317, 0.0, 0.0642, 0.0974, 0.7754, 0.3021, 0.0, 0.0263, 0.037, 0.2286], [0.0, 0.0, 1.3389, 0.5915, 0.0, 0.3947, 0.0247, 0.5429], [0.2698, 0.05, 0.6158, 0.0, 0.8537, 0.4085, 0.0533, 0.0263, 0.0857], [0.4127, 0.075, 0.6401, 0.1104, 0.9184], [0.1587, 0.0, 0.7685, 0.0, 1.0597, 0.183, 0.0133, 0.0, 0.0, 0.2286], [0.746, 0.175, 0.9377, 0.3247, 0.9933, 0.0, 0.5263, 0.0988, 0.3714], [0.0, 0.0, 1.072, 0.3052, 1.5526, 0.4809, 0.0, 0.4737, 0.0494, 0.1714], [0.8571, 0.175, 1.3366, 0.539, 1.4247, 0.6298, 0.0, 0.0, 0.3704, 0.4571], [0.746, 0.45, 1.5837, 0.4545, 1.6207, 0.6383, 0.0, 0.1053, 0.6914, 0.4571]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

