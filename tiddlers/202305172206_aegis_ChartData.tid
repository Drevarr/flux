created: 20230517220640000
creator: Drevarr
modified: 20230705163530371
modifier: drevarr
tags: ChartData
title: 202305172206_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Asureon", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Raelyn Sunray", "Itsy Bitsy Tika", "Lucas Ryn", "Gabe Malhorn", "Solus Sanctus", "Johosh The Great", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy"];
const professions = ["Dragonhunter", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 23.2613, 97.2518, 1.5725, 0.0, 22.0115, 0.0, 0.0, 0.0, 62.1302, 20.16, 16.5139, 5.7556, 16.0866, 9.4464, 88.1457, 8.9676, 10.775, 6.5174, 0.0, 0.0, 6.8796, 26.949, 0.0, 8.9195, 14.5942, 14.4917, 0.0, 0.0, 31.9536, 0.0, 8.1497, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 52.0992, 7.8624, 2.1404, 14.202, 3.1528, 0.0, 0.0, 28.1275, 0.0, 26.5306, 17.2302, 0.0, 97.4047, 6.768, 49.3075, 1.3838, 0.0, 27.0083, 0.0, 2.7166, 86.7192, 0.0, 41.897, 30.9768, 0.0, 0.0, 0.0, 78.624, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [16.3121, 0.7895, 27.5931, 31.6454, 0.0562, 0.0, 6.172, 9.0917, 16.2338, 0.0, 10.7957, 15.588, 26.869, 46.6315, 9.558, 12.1728, 24.9993, 50.8164, 40.7578, 27.0072, 2.1634, 0.0, 0.0, 19.4922, 57.9876, 11.0975, 27.2494, 41.9224, 44.1377, 0.0, 0.0, 83.0592, 0.0, 5.0936, 5.3731, 17.9388, 0.0, 26.9568], [0.0, 37.3378, 43.5556, 19.8749, 0.0, 0.0, 14.7373, 0.2688, 39.9382, 0.0, 16.6709, 0.0, 20.7101, 48.6845, 0.0, 22.3872, 29.1659, 18.9504, 34.3162, 25.0877, 16.9861, 52.3129, 0.0, 0.0, 113.878, 27.5576, 79.4569, 67.033, 29.4804, 26.9892, 0.0, 39.1104, 0.0, 55.1029, 20.6587, 0.0, 0.0, 0.0], [0.0, 44.5204, 0.0, 11.8894, 154.5636, 42.677, 108.5884, 134.996, 105.5828, 31.754, 127.1088, 13.938, 72.421, 62.532, 11.682, 6.4825, 40.8672], [0.0, 24.9151, 108.4142, 12.8318, 0.0, 0.0, 8.3449, 17.2302, 37.0689, 0.0, 1.3219, 33.444, 24.6355, 56.3098, 0.0, 12.864, 64.4426, 42.0744, 54.8122, 13.2134, 0.0, 85.1865, 109.053, 21.2562, 121.1133, 38.9903, 23.8944, 113.0332, 222.1792, 86.4987, 0.0, 72.2736, 0.0, 53.0655, 178.332, 30.5712, 24.1404, 18.144], [0.0, 14.1178, 133.2776, 197.8805, 3.5381, 11.2292, 25.6014, 7.2342, 64.3923, 0.0, 34.5902, 13.536, 23.4173, 97.0024, 0.0, 53.1456, 169.7175, 94.6956, 103.6512, 34.3282, 21.2486, 0.0, 0.0, 33.4278, 89.5504, 48.561, 19.3119, 43.9256, 110.1373, 41.2168, 0.0, 98.3808, 0.0, 69.7353, 24.5496, 44.9064, 14.9933, 50.4144], [18.099, 13.7927, 109.8977, 92.0419, 41.5397, 4.8908, 52.5253, 7.9186, 21.9466, 4.1952, 161.3477, 45.9, 39.5928, 34.2404, 16.8156, 16.3584, 131.1074, 57.4152, 178.2566, 48.2112, 42.026, 50.7209, 0.0, 31.4698, 151.8373, 24.3177, 15.3022, 124.4796, 69.312, 28.8551, 0.0, 70.2576, 0.0, 305.613, 124.045, 17.7408, 31.6967, 62.208], [28.7624, 82.4078, 315.3931, 9.6408, 10.2263, 7.4316, 34.4848, 144.2172, 12.4944, 225.2405, 101.088, 91.9094, 39.8861, 14.1102, 77.8752, 232.9564, 98.0796, 112.5523, 44.9525, 21.9127, 40.0237, 61.3242, 30.8876, 208.1471, 52.6201, 111.2888, 196.3058, 179.0352, 108.2567, 0.0, 316.1088, 9.8203, 225.6906, 71.1475, 20.7108, 32.6512, 77.5008], [0.0, 85.1942, 227.8063, 165.1738, 31.693, 44.2242, 68.8056, 18.941, 96.4205, 59.0794, 81.0043, 95.076, 59.1523, 130.3263, 36.5634, 84.48, 349.6198, 132.0324, 139.3728, 53.7912, 21.6342, 42.6212, 71.195, 240.0245, 118.3487, 203.1021, 223.7056, 204.5407, 167.7995, 50.112, 186.2784, 1.0621, 163.7345, 132.9384, 190.1196], [188.5404, 47.2991, 226.0261, 289.1506, 85.3445, 1.582, 86.3771, 10.6314, 167.1978, 63.8218, 230.675, 171.072, 113.0256, 90.037, 6.2046, 46.656, 171.1063, 173.2044, 103.6512, 64.728, 21.6985, 40.8895, 6.7536, 22.0324, 236.669, 124.5306, 207.0299, 201.9574, 219.6949, 69.5722, 158.9616, 36.5036, 124.8383, 172.0325, 40.3056], [143.466, 55.2172, 181.5211, 295.0358, 36.0734, 37.0999, 23.775, 22.2648, 154.5572, 24.4051, 150.8458, 146.736, 93.9398, 88.3506, 16.0218, 106.368, 264.2519, 136.488, 182.2387, 69.3259, 51.6426, 0.0, 60.9638, 310.2807, 128.2173, 209.0757, 155.1703, 146.3253, 93.8624, 247.968, 230.3211, 194.6366, 189.0504, 23.5836, 78.0624], [92.2816, 73.4913, 260.6213, 363.0542, 34.1078, 61.8539, 52.1789, 0.4399, 168.2577, 6.9859, 122.6448, 74.052, 165.5453, 76.1428, 25.029, 88.9728, 385.7299, 176.9832, 195.0048, 66.335, 34.8932, 52.2012, 86.7762, 19.7215, 258.375, 145.9808, 199.9925, 148.4455, 200.6486, 52.7122, 19.674, 279.8208, 31.7813, 249.3987, 154.4309, 112.9788, 12.0105, 54.7776]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

