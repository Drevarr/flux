created: 20230408001602000
creator: Drevarr
modified: 20230705163524862
modifier: drevarr
tags: ChartData
title: 202304080016_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Air One Com", "Sofya De Nova", "Arriasa", "Patsby", "Mac Chiato", "Smol Gluvs", "Ark Darkness", "Tegan Parker", "Kos\u00e4ir", "Ryvalia Fazebringer", "Black Raspberry Pie", "Zadie Miststep", "Drevarr Moonwillow", "Mike The Archmagus", "Venomina The Siren", "Gavann", "Solus Sanctus", "Mmathuss", "Koralia Danai", "Arcanophage Farra", "Viral Marketing", "Sister Elon\u00edth", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Firebrand", "Weaver", "Druid", "Firebrand", "Tempest", "Scourge", "Firebrand", "Tempest", "Herald", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[54.2513, 164.9188, 49.464, 23.2476, 90.4016, 58.0176, 126.7776, 57.624, 30.723, 95.8994, 24.336, 10.224], [19.3217, 62.8013, 16.073, 34.6724, 61.6788, 29.0846, 5.521, 7.4603, 0.0, 20.0312, 0.0, 6.912, 13.4593, 125.8978, 0.0, 89.8001, 35.8281, 16.5088, 55.7856, 7.5254, 7.4929, 9.4944, 29.3832, 0.0, 196.5713], [0.0, 34.7758, 23.0908, 38.5375, 0.0, 98.7816, 58.2768, 60.0495, 0.0, 49.8276, 32.976, 42.336, 0.0, 62.5502, 0.0, 57.9716, 80.7272, 20.0925, 42.1825, 89.7312, 9.9965, 30.1392, 16.836, 38.3645, 0.0, 18.4426], [0.0, 0.0, 0.0, 28.944, 24.2784, 91.9617, 0.0, 0.0, 51.9369, 6.5565, 1.175, 168.7296, 115.8019, 0.0, 0.0, 0.0, 0.0, 431.6773], [242.6112, 393.5693, 81.2084, 176.5848, 72.3307, 0.0], [0.0, 9.7838, 20.827, 71.5616, 15.1145, 0.0, 19.0166, 0.3307, 0.0, 0.0, 0.0, 11.0016, 31.3022, 68.2762, 8.7509, 60.2064, 96.7298, 68.2299, 145.7587, 64.6464, 103.1098, 25.1579, 37.2048, 40.4342, 0.0, 282.0371], [57.5236, 88.0545, 54.633, 13.8121, 0.0, 0.0, 7.2931, 7.0928, 191.1779, 42.1371, 0.0, 12.6432, 123.3565, 0.0, 0.0, 150.667, 96.021, 208.8562, 218.4, 38.1888, 30.7671, 54.8688, 59.3947, 42.6572, 0.0], [11.5566, 14.4045, 93.2308, 72.2436, 23.8405, 186.5285, 105.239, 0.0, 17.8193, 7.6548, 33.7392, 34.3872, 96.8701, 75.0168, 45.1421, 28.5492, 180.4574, 51.5637, 123.4338, 278.6784, 47.8483], [34.5141, 63.0022, 59.4248, 29.6136, 76.196, 74.3232, 20.6525, 0.0, 0.0, 35.1619, 60.8688, 20.1024, 76.6811, 21.9614, 0.0, 8.7172, 64.7246, 107.7804, 95.175, 146.7648, 34.033, 47.846, 157.2096, 220.9099, 28.1436, 224.6101], [127.1458, 122.7562, 40.5936, 80.8992, 27.1022, 28.934, 219.4637, 53.4249, 159.9762, 390.4992, 575.303, 37.1717], [55.4979, 0.0, 0.0, 129.5952, 4.337, 0.0, 49.007, 0.0, 0.0, 0.0, 0.0, 3.3696, 0.0, 61.1006, 43.4995, 51.8148, 2.7862, 163.2357, 125.02, 596.9184, 95.6966, 141.6542, 250.8288, 6.431, 95.2596, 0.0], [0.0, 9.824, 0.0, 95.1502, 90.2198, 74.7403, 409.7098, 22.785, 32.4694, 14.2365, 13.2336, 35.5104, 22.9981, 0.0, 0.0, 22.8512, 101.6591, 431.7561, 137.1225, 104.832, 78.961, 46.5065, 32.7888, 16.1146, 29.516, 132.547], [124.3963, 43.1131, 35.2776, 6.764, 43.318, 39.2472, 38.1696, 15.6555, 67.6876, 90.82, 29.6208, 20.9088, 17.0402, 353.8474, 109.7117, 33.9512, 121.1622, 55.2861, 56.7525, 269.8176, 46.3882, 0.0, 49.0728, 64.643, 0.0, 464.3642], [6.7522, 0.6429, 49.5018, 36.2071, 38.8252, 45.959, 155.5411, 13.6342, 0.0, 93.6101, 0.0, 63.0144, 62.3265, 50.3011, 38.147, 13.986, 128.6634, 40.7772, 230.0062, 261.5808, 210.7123, 24.9067, 84.0696, 64.3474, 40.5892, 584.9159], [29.1383, 59.9486, 0.0, 30.2957, 80.8186, 121.7611, 80.497, 53.2875, 87.4797, 50.6503, 36.6192, 95.184, 16.2376, 147.2069, 56.7816, 0.0, 67.9394, 70.5141, 128.0162, 233.0016, 29.2032, 69.8225, 218.3712, 108.4037, 32.7684, 436.7752], [2.571, 107.6221, 64.8201, 47.6319, 37.7863, 112.2811, 99.4454, 33.9203, 55.9805, 61.5244, 0.0, 27.9936, 104.5876, 216.7152, 80.2589, 0.0, 247.111, 21.4038, 94.4112, 178.2144, 126.2477, 31.1438, 83.904, 60.06, 19.8528, 453.8684], [53.7167, 29.4745, 103.0608, 76.896, 0.0, 84.1493, 138.3432, 136.379, 52.1982, 165.2638, 682.5312, 541.0454, 116.8313, 159.3072, 142.9982, 499.3002], [107.9313, 73.0472, 75.9882, 137.1549, 56.3549, 41.6741, 113.2819, 180.4057, 15.41, 28.6518, 23.6736, 55.2096, 54.856, 239.6914, 52.477, 7.178, 205.39, 163.9548, 122.435, 244.1088, 497.4653, 68.3574, 150.5304, 32.6357, 176.7764, 957.5168], [79.65, 55.3078, 62.5941, 133.1761, 157.3263, 115.9214, 143.6131, 103.5248, 36.3502, 94.4328, 86.5728, 31.1328, 37.9084, 531.5683, 109.5134, 91.2716, 215.2487, 40.6503, 237.115, 240.3648, 356.279, 49.8553, 155.2224, 72.2198, 70.1052, 578.9183], [61.2892, 32.144, 90.7029, 73.0394, 118.4492, 78.3806, 199.6406, 199.92, 0.0, 87.6723, 20.4768, 61.8912, 78.7802, 321.3763, 62.1341, 31.6276, 86.7282, 56.4705, 47.0, 389.8752, 496.4544, 38.6786, 158.6448, 109.993, 0.0, 1024.0902], [77.6763, 57.5579, 75.3091, 73.9488, 126.7596, 226.1549, 189.0077, 175.4813, 65.2945, 178.9573, 89.2224, 70.9344, 152.1274, 374.2867, 163.8312, 18.7516, 178.4571, 217.9719, 163.1488, 440.544, 147.1392, 175.6446, 327.5568, 143.1091, 123.3092, 333.9164], [93.8036, 108.4056, 137.5636, 38.367, 131.0706, 213.3, 354.0912, 182.7945, 56.5465, 120.1157, 70.992, 31.1328, 60.2274, 383.8541, 230.893, 87.0832, 223.1786, 296.0154, 224.6012, 369.0336, 708.2899, 180.5003, 191.544, 102.2314, 17.0328, 696.7712], [41.0845, 50.5665, 216.872, 199.7358, 140.1341, 296.6482, 295.4054, 53.7653, 93.8507, 123.9073, 66.24, 132.8544, 30.5922, 440.9683, 315.8246, 133.0076, 379.1321, 2.8764, 128.6037, 615.1392, 595.8576, 101.5105, 68.1168, 126.5141, 75.2752, 925.8795], [169.636, 34.6753, 225.8895, 254.359, 215.4471, 316.7458, 231.9485, 253.5015, 14.8602, 114.2852, 107.1648, 158.8032, 33.4013, 605.4979, 177.6797, 213.6676, 500.0086, 179.5635, 135.8888, 362.1696, 714.5798, 289.2945, 261.0408, 167.1331, 0.0, 1133.2465], [84.5583, 64.7099, 78.3275, 68.4922, 203.4749, 211.5178, 391.8518, 207.1965, 17.1079, 261.3356, 89.6832, 101.5776, 128.5735, 799.8168, 169.0138, 478.7194, 333.7893, 454.02, 910.1664, 607.2019, 284.7317, 379.8864, 383.2382, 47.1316, 562.7248]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

