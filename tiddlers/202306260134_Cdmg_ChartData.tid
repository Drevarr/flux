created: 20230626013408000
creator: Drevarr
modified: 20230705163538726
modifier: drevarr
tags: ChartData
title: 202306260134_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Be\u00eb", "Smol Gluvs", "Traidoruns Maximus", "Miphest\u00f6", "Tika Fiery", "Lord Erin The Wise", "Argentum Boomstick", "Be\u00eb", "Melli Dragonswrath", "Xanvias Einzbern", "Fuuko Kazari", "Johosh The Mighty"];
const professions = ["Berserker", "Scourge", "Scourge", "Firebrand", "Tempest", "Firebrand", "Weaver", "Holosmith", "Reaper", "Berserker", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36.2074, 5.4382, 0.7195, 7.2182, 18.194, 19.1538, 76.7117, 27.8136, 189.561, 37.8143, 1.0341, 47.6091, 22.3, 30.3958, 59.9615, 1.5098, 24.1481, 0.0, 32.0909, 93.2917, 13.9213, 0.0, 27.7391, 6.0179, 7.3388, 68.4286, 0.0, 12.6324, 0.0, 0.0, 14.8333, 44.5763], [411.3429, 22.4853, 319.5283, 252.8413, 154.2857, 232.5593], [667.4857, 115.0882, 417.7358, 7.2222, 35.7381, 146.5085], [0.0, 16.7865, 2.8293, 52.7799, 156.2388, 32.8205, 120.6757, 4.8136, 53.7317, 20.1429, 4.0682, 28.4, 4.72, 0.0, 19.0192, 14.549, 0.0, 0.0, 117.3409, 54.625, 8.6854, 58.0795, 5.163, 5.8571, 18.0165, 0.0571, 9.4191, 12.0755], [248.0156, 74.8444, 14.5618, 3.2195, 23.3871, 20.4925, 0.0, 46.964, 1.9153, 9.7561, 20.8143, 14.7273, 120.1455, 0.0, 47.4479, 38.4423, 0.201, 11.4865, 18.8636, 3.7778, 24.0, 127.3523, 1.7283, 1.6071, 19.9091, 12.0286, 0.0, 7.5294, 22.7736], [69.5625, 43.8296, 17.1461, 0.0, 32.4554, 85.6269, 1.7692, 179.6577, 19.0339, 0.0, 2.7714, 24.2614, 4.3909, 20.82, 0.0, 105.25, 20.549, 0.0, 0.0, 33.3636, 18.3611, 35.1236, 41.5795, 42.5, 33.0179, 20.9669, 61.2571, 33.6429, 0.5735, 0.0, 74.4444, 0.0, 98.5085], [65.4844, 7.5926, 79.9438, 14.3902, 26.2391, 58.8955, 183.4144, 10.8136, 88.7073, 130.7571, 18.8182, 27.6364, 22.5, 58.6458, 47.8269, 10.4069, 0.0, 9.9459, 57.4091, 31.7917, 46.3708, 55.7159, 24.4891, 95.8571, 10.3223, 0.0, 10.3571, 39.5368, 15.6415, 64.381], [235.7108, 0.0, 0.0, 370.0909, 549.5972, 0.0, 122.8603, 8.3585, 0.0, 119.1667, 64.5932], [81.7031, 29.3852, 7.4494, 6.0244, 40.5693, 64.209, 1.1538, 59.0991, 22.4068, 26.1707, 41.1714, 107.7955, 79.6273, 123.7, 59.1979, 192.4231, 30.9853, 0.0, 53.6757, 128.2045, 94.0972, 85.0562, 147.5682, 30.5109, 67.4107, 17.1405], [115.375, 65.3704, 68.5955, 3.061, 52.1499, 120.791, 4.641, 86.1171, 4.1186, 126.1707, 117.4857, 77.8523, 79.2455, 57.4, 90.8438, 201.6731, 13.7549, 5.8889, 16.0541, 0.0, 40.4306, 15.7865, 35.1932, 24.6413, 58.5, 4.1983, 66.9429, 0.0, 25.1029, 35.1698, 0.0, 0.0, 111.1017], [41.7753, 1.0732, 62.0759, 124.3731, 0.0, 150.8018, 79.6949, 311.5366, 85.6143, 120.9091, 41.1727, 251.74, 155.6667, 218.6346, 22.1912, 32.8889, 0.0, 207.0909, 61.1389, 84.0225, 164.1932, 81.8043, 54.5536, 68.562, 9.2286, 18.9779, 205.3585, 99.2222, 53.5238, 167.1186], [326.6705, 360.3455, 513.62, 342.4583, 840.1538, 80.8529, 142.8108, 505.3409, 253.9167, 219.9438, 455.6932, 212.6304, 170.3214, 93.6694, 174.5714, 0.0714, 40.2426, 90.7358, 60.0635, 224.619, 230.4237], [76.9062, 169.037, 83.236, 2.439, 231.9905, 22.5373, 6.7179, 284.1171, 208.0339, 523.2439, 227.4429, 561.4432, 600.2727, 495.14, 374.8229, 504.0385, 55.348, 42.3514, 420.1364, 167.8333, 297.4944, 352.0682, 156.25, 212.3214, 235.2645, 175.9714, 21.25, 56.9853, 166.7358, 37.2063, 47.6667, 98.339]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

