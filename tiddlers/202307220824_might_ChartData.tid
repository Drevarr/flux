created: 20230722082451000
creator: Drevarr
tags: ChartData
title: 202307220824_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Achinoam", "Kayrin Willowroot", "Amina Khan", "Sister Elon\u00edth", "Jmbrage Warrior", "Luke The Ghastly", "Cyra Cymbidium", "Xx Zen Xx", "Gestern Yesteryear", "Charr Surethang", "Audra Storm", "Drevarr Moonwillow", "Sister Elon\u00edth", "Pixzil", "Vee Nemesis", "Nyriss Hrafn", "Aronorf Xideliesi", "Legoh Brave"];
const professions = ["Vindicator", "Druid", "Berserker", "Dragonhunter", "Berserker", "Scourge", "Druid", "Druid", "Firebrand", "Berserker", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Warrior", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.0984, 0.0, 2.9796, 5.2706, 0.0, 0.0, 3.036, 0.0, 1.2882, 0.0, 0.0, 2.8329, 0.0, 0.0, 8.617], [1.377, 0.0, 1.3165, 6.7135, 1.1287, 1.2672, 7.223, 1.7334, 0.0, 6.4672, 0.0, 0.0, 0.0, 2.0172, 2.0899, 2.6208, 0.0, 2.8596], [0.0, 0.0, 11.696, 5.1068, 3.2121, 0.0, 0.383, 5.7138, 0.0, 0.0, 0.0, 0.54, 0.0, 0.1968, 0.5225, 5.4163, 0.3432, 8.3544], [1.944, 4.3395, 5.0662, 4.131, 2.2914, 9.7632, 1.0512, 9.177, 4.8195, 4.847], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.2916, 0.0, 16.8982, 0.0, 0.756, 4.3902, 6.1746, 0.0, 3.7565, 4.9712, 8.4105, 3.551, 0.0, 5.4698], [0.841, 2.5376, 5.5659, 5.7147, 1.6358, 8.4816, 1.0272, 0.0, 5.751, 5.6088, 11.6905, 3.1886, 0.0, 8.1302, 2.6892, 0.495, 0.0, 0.1368], [5.0706, 4.4526, 18.548, 3.407, 0.1092, 29.2125, 3.2082], [7.7877, 0.5645, 4.9226, 7.6602, 3.5669, 3.8016, 14.3093, 10.0152, 2.3083, 20.2361, 1.7345, 0.0, 3.8556, 2.583, 0.0, 0.8081, 0.3952, 17.3817], [0.0, 1.417, 0.0, 17.0992, 0.0, 0.0, 5.4446, 14.3166, 8.3362, 20.5143, 0.0, 3.2535, 1.8468, 0.0738, 10.1884, 7.2946, 0.0, 15.1389, 0.0, 0.4212, 0.6352, 0.0, 0.1026, 9.6615, 0.8672, 10.6932, 4.8042, 4.6411, 7.3498], [0.0765, 0.0, 0.4961, 4.6478, 2.5736, 4.0446, 0.0, 28.1637, 0.6395, 1.7415, 7.6302, 6.1992, 12.8661, 0.0, 0.0, 21.8673, 3.0464, 10.962, 8.415, 0.0, 0.0, 0.855, 11.248, 0.0, 8.6982, 14.3667, 0.0, 15.048], [5.9962, 1.1868, 1.9354, 6.1013, 24.9096, 4.6267, 45.3401, 0.0, 3.9555, 2.4624, 9.4218, 28.2139, 4.4772, 0.0, 19.4563, 7.1495, 6.1236, 3.2258, 12.3561, 0.0, 0.4788, 0.7119, 2.4703, 17.7555, 3.8097, 2.6928, 13.0838], [4.8578, 6.192, 10.8756, 26.7104, 8.0625, 3.9629, 29.5214, 39.7398, 61.682, 8.1299, 7.425, 11.9718, 12.8658], [6.885, 6.1978, 7.7656, 12.8244, 0.0, 1.9354, 18.6869, 36.7866, 6.7637, 30.8062, 1.6764, 5.9805, 17.0748, 6.6174, 36.3124, 13.104, 4.524, 19.3441, 2.3752], [9.0373, 11.481, 2.8339, 12.1205, 32.5494, 4.1328, 51.5291, 0.0, 4.32, 10.1412, 6.9864, 8.1638, 3.2323, 2.3972, 19.1199, 5.6501, 1.134, 7.8127, 4.4615, 4.674, 14.2787, 0.0, 23.5011, 6.1506], [1.9507, 0.0, 4.999, 12.0211, 1.7673, 4.0896, 15.6499, 12.519, 4.7578, 25.5212, 2.9264, 9.0855, 7.5492, 3.321, 17.8296, 8.0808, 1.1024, 24.5026, 3.6604, 2.4732, 7.0208, 6.6211, 2.5369, 0.7068, 8.8072, 1.1038, 18.5136, 10.0827, 4.6253, 22.5562], [12.1559, 4.7635, 27.2462, 4.5043, 6.5203, 0.0, 49.434, 11.1182, 74.3383, 3.2268, 17.0748, 17.3676, 20.2461, 0.8518, 47.3231, 8.111, 19.5696, 18.414, 16.0679, 3.7714, 7.7064, 7.6885, 8.7644, 50.0745, 18.0259, 6.9379], [9.9068, 0.985, 6.0102, 16.7836, 1.7222, 7.2806, 25.4995, 43.7844, 4.1227, 48.7475, 5.8721, 8.667, 12.1662, 18.4008, 38.5329, 15.4409, 5.902, 35.7727, 7.2685, 15.9192, 9.207, 6.8719, 19.3525, 4.3776, 8.5631, 20.0385, 27.2916, 17.1054, 1.8058, 29.7792], [49.248, 61.5036, 5.6851, 114.8105, 18.0622, 11.421, 17.253, 21.0822, 36.5083, 19.0663, 14.638, 76.3113, 5.5406, 5.67, 25.905, 22.8517, 6.555, 27.4387, 5.9918, 48.4785, 19.2168, 2.6136, 18.311]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

