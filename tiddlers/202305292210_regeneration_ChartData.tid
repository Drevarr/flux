created: 20230529221000000
creator: Drevarr
modified: 20230705163532301
modifier: drevarr
tags: ChartData
title: 202305292210_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Cat Wigglebooty", "Johosh Of The North", "Artakama Nahid", "Fribble Bibble", "Tribal S", "Zadey Starbolt", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Tempest", "Tempest", "Scrapper", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.065, 715.0282, 0.0, 25.2374, 126.2401, 0.0, 65.4807, 128.4816, 200.5263, 347.6444, 18.92, 124.2595, 329.1885, 6.909, 378.58], [0.0, 882.4754, 107.6027, 19.309, 128.7527, 0.0, 80.5957, 345.8208, 435.7395, 933.2809, 0.0, 80.0435, 829.9332, 47.3928, 1081.92], [111.258, 1589.0213, 161.4582, 52.2965, 463.7687, 244.4352, 341.7706, 311.8128, 257.3721, 834.5938, 104.0978, 456.6646, 939.4335, 160.9062, 1164.03], [147.3885, 1686.725, 198.7094, 174.4099, 496.5851, 123.7488, 422.0458, 584.5632, 591.4782, 975.9064, 220.4748, 575.7827, 556.0965, 134.6814, 949.67], [241.1955, 2336.0938, 73.7458, 69.5851, 464.3017, 0.0, 123.0032, 375.648, 577.5408, 1418.2225, 0.0, 302.8555, 1437.084, 138.0624, 1896.81], [114.786, 2023.1904, 56.385, 363.641, 896.5485, 0.0, 236.8733, 510.432, 551.8584, 1128.0298, 57.1762, 432.7435, 1294.5789, 319.6956, 2248.02], [69.363, 3045.1529, 115.494, 5.1667, 692.5694, 2.5891, 392.4033, 505.8144, 475.0461, 1234.2845, 83.721, 284.9418, 2078.9586, 149.499, 3290.61], [175.077, 4486.519, 251.419, 108.0043, 762.5421, 161.4442, 752.3333, 943.2384, 1205.82, 2495.1326, 261.4744, 600.8944, 2191.5531, 499.5942, 3450.46]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

