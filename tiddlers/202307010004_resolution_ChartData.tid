created: 20230701000406000
creator: Drevarr
modified: 20230705163540191
modifier: drevarr
tags: ChartData
title: 202307010004_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Klengah", "Arcanophage Farra", "Smol Daddy Tika", "Arriasa", "Tribal S", "Traidoruns Maximus", "Seiker Soulkeeper", "Gavann", "Gamora Titus", "Dingle Mcbingle", "Aronorf Xideliesi", "Air One Com", "Bella Sassy", "Gestern Yesteryear", "Mmathuss", "Solus Sanctus", "Koralia Danai"];
const professions = ["Druid", "Spellbreaker", "Berserker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 8.601, 29.6525, 9.9994, 22.1389, 0.0, 0.0, 34.02, 23.3485, 34.1496, 71.3533, 19.9755, 17.3944, 44.4175, 32.5184, 21.385, 35.814, 0.0, 0.0, 38.2792, 135.7949, 38.2941], [50.1152, 23.8248, 1.7597, 39.8131, 87.9502, 36.36, 24.2885, 6.7133, 25.8965, 26.1446, 0.0, 79.2465, 26.8576, 0.0, 0.0, 29.657, 24.816, 28.5074, 44.1386, 76.9392, 0.0], [0.0, 7.4131, 16.9114, 47.9964, 14.736, 26.5186, 32.1149, 16.121, 4.4554, 41.8504, 15.111, 28.6617, 21.4502, 50.8502, 50.572, 0.0, 32.0747, 0.0, 29.8107, 67.6166, 140.7743], [17.0013, 20.413, 28.2672, 30.3667, 66.4599, 23.256, 57.0125, 23.1034, 38.563, 11.1139, 84.6843, 24.9435, 39.0098, 54.7898, 53.2914, 39.151, 0.0, 22.8617, 0.0, 53.377, 171.7373, 270.2344], [28.2973, 7.5689, 24.5606, 37.9699, 60.8819, 33.024, 17.2589, 46.5091, 34.6675, 26.5363, 107.6309, 53.8545, 44.3201, 30.0938, 65.9119, 70.218, 23.312, 17.123, 0.0, 38.7069, 94.4611, 275.8914], [91.4, 136.7846, 161.8157, 13.9622, 145.8053, 98.736, 262.8586, 186.732, 152.8065], [106.0503, 100.0296, 183.1939, 267.817, 230.5989, 136.92, 209.4821, 151.8048], [65.64, 42.9048, 98.8243, 67.7915, 60.5146, 169.3685, 74.5545, 49.392, 5.6095, 95.7587, 0.0, 81.357, 48.9496, 34.1305, 131.7514, 397.5187], [123.2525, 139.945, 77.9185, 36.384, 136.3742, 66.9514, 59.1185, 102.155, 197.888, 142.002, 100.1797, 50.0623, 139.6079, 54.567, 126.383, 138.5974, 0.0, 66.4218, 122.7658, 382.0705], [104.9818, 112.7117, 64.9032, 160.2991, 131.2725, 103.3795, 123.6917, 157.7094, 107.395, 124.597, 136.1468, 161.7989, 334.9382, 576.1518], [69.0374, 84.0031, 112.5446, 145.7971, 110.3052, 47.064, 160.2264, 67.284, 68.8695, 69.9638, 203.7885, 80.937, 80.1302, 96.4555, 126.2965, 120.32, 141.893, 67.2514, 129.5503, 316.6301, 442.1226], [64.9089, 56.9673, 65.1456, 130.729, 88.469, 99.984, 112.4736, 101.0923, 32.732, 50.9674, 285.7411, 188.025, 193.4153, 81.9202, 108.8398, 34.075, 93.342, 77.3018, 0.0, 147.3854, 310.2278, 677.9793], [155.4774, 119.8979, 94.8355, 198.5126, 191.9424, 108.144, 145.537, 145.152, 41.9685, 100.7597, 453.9076, 153.801, 126.0161, 203.0717, 202.3876, 133.151, 225.929, 127.5853, 22.7674, 128.9515, 466.3526, 954.3059], [148.2812, 131.6813, 194.5757, 180.1267, 233.6257, 98.832, 252.6778, 183.7382, 197.519, 114.5419, 482.3178, 203.1015, 170.3362, 176.6117, 222.8383, 245.998, 192.136, 186.4302, 16.2758, 246.5691, 345.9456, 722.3656], [145.1849, 89.8518, 82.2182, 186.4397, 184.5916, 100.776, 231.5405, 159.8184, 139.3315, 180.3931, 401.2394, 180.0555, 280.5577, 201.6958, 168.9941, 262.025, 198.293, 139.3108, 26.5574, 291.1782, 447.2582, 1116.1854], [195.7588, 164.7092, 184.2048, 241.8278, 237.7335, 152.616, 275.7058, 179.7768, 126.3955, 143.0856, 573.886, 162.495, 212.1032, 98.537, 201.2822, 292.246, 268.041, 169.6174, 0.0, 245.3715, 471.1824, 1104.0009], [122.937, 112.6731, 200.903, 289.6589, 261.9479, 161.064, 272.3606, 178.2043, 137.347, 116.0352, 666.1099, 185.7825, 162.0304, 236.8699, 242.6901, 226.164, 198.763, 176.9381, 43.8682, 235.1067, 606.7526, 1099.4317]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

