created: 20230712220412000
creator: Drevarr
tags: ChartData
title: 202307122204_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Tribal S", "Sister Elon\u00edth", "Mistwalker Cael", "Gestern Yesteryear", "Alaric Mist", "Mort\u00e4rion", "Black Raspberry Pie", "Tootsie Pop Rocks", "Cat Wigglebooty", "Blade Stacker", "Lord Of Bones", "Scarlet Merc\u00fcry", "Sygaldry Verdandi", "Drevarr Moonwillow", "Zaedy Zae", "Legacy Of Mathus", "Il Dim Il", "Rina Of Theros", "Vivian Vivisection", "Johosh The Mighty", "Artakama Nahid", "Tika Fiery", "Arriasa", "Belvyn Brightblade", "Ka Otik Nightm\u00e6r", "Venomina The Siren", "Klengah", "Sofya De Nova", "Koralia Danai", "Tegan Parker", "Be\u00eb", "Amitiels Revenge", "Crusader Siolith", "Alaric Mist", "Lord Erin The Wise", "Sub Train", "Bae Ken", "Solus Sanctus", "Eibh\u00ebar", "Glorious Gluvs", "Mike The Archmagus", "Rozaalyna", "Newtype Khan", "Xanvias Einzbern", "Primal Clone", "Arcanophage Farra", "Tuandha Lan", "Mistwalker Cael", "Ryvalia Fazebringer"];
const professions = ["Herald", "Druid", "Firebrand", "Herald", "Firebrand", "Herald", "Scrapper", "Chronomancer", "Scrapper", "Scrapper", "Virtuoso", "Scourge", "Firebrand", "Firebrand", "Scrapper", "Druid", "Berserker", "Scourge", "Scourge", "Reaper", "Berserker", "Tempest", "Firebrand", "Druid", "Firebrand", "Reaper", "Tempest", "Druid", "Weaver", "Firebrand", "Tempest", "Scourge", "Reaper", "Firebrand", "Renegade", "Weaver", "Firebrand", "Scourge", "Firebrand", "Chronomancer", "Berserker", "Weaver", "Scourge", "Spellbreaker", "Berserker", "Chronomancer", "Spellbreaker", "Herald", "Vindicator", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 0, 39, 0, 1, 15], [1, 0, 0, 21, 3, 5, 1, 0, 14, 0, 0, 5, 0, 0, 0, 0, 0, 2, 7, 0, 0, 1, 2], [0, 1, 4, 6, 1, 9, 16, 0, 0, 3, 0, 0, 0, 8, 5, 0, 0, 11], [0, 22, 51], [8, 8, 2, 9, 1, 6, 7, 0, 1, 4, 0, 1, 1, 8, 2, 0, 4, 12], [43, 9, 22], [0, 0, 0, 10, 10, 14, 5, 2, 10, 6, 6, 16], [1, 0, 0, 6, 6, 0, 10, 8, 16, 0, 7, 7, 0, 0, 5, 0, 4, 0, 0, 2, 1, 4, 7], [0, 0, 0, 51, 11, 9, 2, 0, 1, 0, 7, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 2, 0], [21, 0, 6, 2, 0, 0, 4, 0, 0, 6, 16, 7, 10, 14], [13, 0, 8, 10, 2, 1, 12, 13, 12, 0, 4, 13], [0, 0, 0, 26, 0, 1, 0, 0, 12, 1, 8, 0, 0, 0, 2, 0, 2, 3, 8, 3, 0, 10, 13], [0, 0, 2, 76, 11], [0, 0, 0, 19, 14, 0, 0, 3, 18, 0, 15, 12, 0, 0, 0, 0, 0, 3, 0, 7, 6], [0, 0, 0, 30, 14, 17, 6, 1, 8, 0, 0, 1, 0, 1, 0, 0, 5, 1, 3, 7, 0, 0, 9], [0, 0, 0, 29, 24, 0, 7, 10, 6, 0, 13, 0, 0, 0, 0, 0, 0, 2, 6, 3, 0, 1, 9], [1, 0, 1, 38, 11, 0, 1, 3, 6, 0, 0, 5, 0, 0, 5, 12, 7, 0, 7, 14], [22, 2, 13, 8, 13, 8, 0, 16, 2, 0, 7, 0, 0, 4, 0, 7, 0, 0, 12], [0, 0, 0, 27, 7, 18, 12, 0, 20, 0, 9, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 15], [16, 3, 29, 21, 0, 3, 3, 2, 0, 3, 7, 2, 6, 22], [39, 17, 12, 17, 24, 2, 7, 0, 0, 0], [0, 0, 0, 49, 33, 13, 1, 1, 1, 0, 1, 4, 0, 1, 1, 0, 0, 0, 6, 0, 0, 0, 10], [0, 0, 0, 42, 1, 28, 2, 1, 0, 0, 1, 8, 0, 0, 1, 0, 4, 7, 9, 13, 0, 2, 7], [0, 0, 0, 26, 15, 23, 3, 15, 0, 0, 7, 14, 0, 3, 5, 0, 0, 1, 2, 0, 0, 1, 12], [0, 0, 0, 47, 24, 24, 17, 17], [10, 6, 4, 0, 1, 16, 5, 1, 6, 12, 1, 1, 16, 12, 3, 0, 8, 27], [37, 7, 18, 5, 5, 16, 0, 12, 4, 0, 0, 0, 0, 1, 6, 4, 3, 0, 9, 6], [1, 0, 0, 41, 0, 0, 8, 1, 11, 0, 10, 1, 0, 0, 0, 0, 0, 9, 26, 0, 0, 0, 28], [10, 1, 3, 13, 6, 12, 14, 2, 7, 2, 4, 15, 11, 15, 0, 13, 16], [0, 0, 0, 27, 34, 12, 2, 5, 8, 0, 5, 3, 0, 1, 3, 0, 11, 5, 1, 5, 0, 13, 11], [0, 0, 0, 49, 14, 2, 0, 0, 9, 15, 0, 0, 1, 0, 0, 0, 22, 7, 0, 3, 29], [0, 0, 0, 42, 29, 1, 18, 1, 17, 1, 8, 6, 0, 1, 6, 0, 2, 6, 3, 2, 0, 5, 16], [1, 0, 0, 29, 7, 28, 6, 12, 12, 2, 6, 6, 0, 0, 5, 9, 0, 1, 19, 14, 0, 6, 3], [4, 0, 0, 52, 27, 7, 2, 2, 13, 0, 20, 7, 0, 1, 5, 0, 1, 3, 4, 13, 0, 12, 0], [19, 0, 12, 12, 0, 2, 11, 41, 15, 0, 16, 45], [0, 0, 0, 10, 27, 1, 16, 1, 22, 4, 19, 9, 0, 0, 0, 0, 0, 0, 17, 20, 0, 12, 24], [0, 0, 0, 39, 31, 39, 5, 0, 10, 0, 18, 8, 0, 0, 6, 0, 0, 13, 4, 8, 0, 5], [14, 18, 0, 40, 13, 0, 6, 11, 4, 3, 5, 25, 6, 0, 3, 45], [1, 0, 0, 46, 34, 20, 5, 3, 39, 2, 5, 6, 0, 1, 2, 0, 2, 20, 4, 10, 0, 8, 3], [0, 0, 0, 55, 28, 18, 10, 15, 19, 0, 7, 8, 0, 3, 4, 2, 2, 1, 18, 2, 0, 11, 9], [0, 0, 0, 44, 40, 11, 12, 14, 10, 1, 16, 26, 0, 0, 0, 3, 1, 4, 13, 9, 0, 6, 16], [1, 0, 0, 7, 30, 7, 26, 1, 35, 1, 24, 15, 0, 10, 0, 5, 0, 2, 20, 16, 0, 19, 10], [1, 0, 59, 25, 0, 14, 0, 7, 1, 11, 26, 0, 1, 11, 10, 3, 5, 16, 10, 8, 22], [4, 0, 0, 21, 29, 15, 26, 8, 41, 1, 16, 13, 0, 1, 3, 1, 0, 4, 16, 4, 1, 9, 31], [0, 0, 1, 30, 47, 19, 1, 8, 17, 9, 28, 13, 0, 0, 4, 2, 3, 5, 13, 3, 0, 3, 39], [3, 0, 0, 45, 6, 26, 2, 23, 36, 3, 33, 10, 0, 0, 1, 0, 2, 0, 12, 5, 0, 16, 47], [1, 1, 0, 17, 59, 30, 23, 1, 19, 1, 27, 5, 4, 1, 6, 0, 3, 0, 35, 12, 0, 7, 34], [52, 15, 35, 20, 13, 10, 30, 28, 1, 10, 17, 10, 4, 3, 7, 12, 0, 5, 27], [2, 0, 46, 15, 28, 17, 6, 14, 41, 4, 3, 14, 4, 2, 30, 28, 10, 3, 7, 34], [1, 0, 0, 37, 41, 12, 13, 37, 40, 2, 35, 23, 0, 5, 0, 0, 8, 0, 6, 22, 0, 22, 47]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

