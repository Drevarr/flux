created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Lady Bear Snoogans", "Ra Kilian", "Philip Poundhouse", "Mannse Lee", "Sylia Raskae", "Sygaldry Verdandi", "Aira Draugr", "Xanvias Einzbern", "Zihbb", "Ruck Fangers", "Zihbb", "Tribal S", "Mort\u00e4rion", "Ganbaatar Bloodwine", "Oo Dads Mad", "Belvyn Brightblade", "Lil Choir Boy", "Etchery Howls", "Bella Sassy", "Daphne Agla\u00e9", "Rafaellagabriela", "Mistwalker Cael", "Tootsie Pop Rocks", "No Reserv\u00e9", "Irish Necroman", "Be\u00eb", "Keypek The Drunk", "Primal Clone", "Mistwalker Cael", "Koralia Danai", "Sub Train", "Jimbo The Pleb", "Drevarr Moonwillow", "Y U So Mean", "Cat Wigglebooty", "Crusader Siolith", "Pl\u00eeo", "Arcanophage Farra", "Rina Of Theros", "Tegan Parker", "Lord Erin The Wise", "Mister Jekyll", "Sister Elonith", "Ryvalia Fazebringer", "Rahani Sunray", "Mike The Archmagus", "Eibh\u00ebar", "Solus Luxes", "Glorious Gluvs"];
const professions = ["Dragonhunter", "Willbender", "Herald", "Herald", "Scrapper", "Berserker", "Firebrand", "Herald", "Berserker", "Chronomancer", "Soulbeast", "Virtuoso", "Druid", "Scrapper", "Berserker", "Berserker", "Firebrand", "Spellbreaker", "Druid", "Firebrand", "Reaper", "Firebrand", "Vindicator", "Scrapper", "Vindicator", "Reaper", "Reaper", "Scrapper", "Chronomancer", "Herald", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Mirage", "Scrapper", "Firebrand", "Scrapper", "Spellbreaker", "Reaper", "Tempest", "Weaver", "Reaper", "Berserker", "Chronomancer", "Chronomancer", "Weaver", "Chronomancer", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 6, 0, 1, 5], [4, 1, 6, 0, 5], [3, 1, 3, 4, 7], [3, 3, 3, 2, 3, 1, 3, 1], [3, 6, 0, 1, 0, 10], [2, 3, 0, 0, 2, 10, 4], [0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 2, 0, 2, 1, 3, 1, 0, 0, 2, 2, 0, 0, 0, 3, 0, 1, 0, 3, 1], [0, 0, 0, 1, 4, 7, 3, 1, 5, 0, 1, 2], [0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 8, 0, 0, 1, 1, 3, 1, 0, 0, 1, 0, 0, 1, 2, 2], [0, 4, 2, 2, 4, 17], [1, 1, 3, 0, 11, 9, 4, 4], [5, 5, 6, 9, 1, 5, 3], [0, 2, 0, 1, 1, 4, 0, 3, 2, 0, 1, 1, 5, 3, 4, 0, 0, 0, 5, 0, 1, 1, 0, 2, 3, 1, 0], [6, 1, 3, 9, 8, 3, 1, 8, 2, 0, 5], [0, 9, 5, 0, 2, 2, 6, 2, 0, 1, 4, 0, 6, 3, 3, 3], [0, 2, 0, 2, 1, 8, 11, 3, 3, 13, 4], [0, 0, 0, 2, 0, 12, 6, 4, 5, 11, 3, 1, 6], [7, 4, 4, 3, 0, 0, 2, 5, 9, 3, 2, 1, 1, 1, 1, 0, 3, 1, 1, 0, 2], [3, 4, 2, 4, 10, 4, 4, 1, 1, 1, 4, 0, 0, 3, 1, 1, 5, 3, 0, 3], [0, 2, 0, 0, 0, 1, 4, 2, 4, 2, 0, 1, 4, 8, 8, 2, 0, 0, 0, 4, 1, 0, 3, 0, 0, 4, 3, 1, 3], [0, 3, 0, 1, 0, 3, 3, 3, 4, 1, 1, 0, 4, 7, 1, 5, 0, 0, 2, 4, 1, 0, 1, 1, 0, 4, 4, 2, 2], [1, 4, 4, 0, 0, 4, 6, 7, 5, 0, 0, 3, 4, 4, 0, 3, 2, 0, 4, 4, 1, 2], [10, 1, 1, 3, 5, 4, 0, 7, 6, 1, 4, 8, 4, 6], [1, 1, 1, 4, 0, 3, 4, 1, 2, 2, 1, 1, 3, 5, 8, 5, 1, 1, 2, 2, 2, 0, 1, 1, 0, 4, 1, 3, 3], [1, 8, 1, 2, 0, 15, 8, 5, 2, 6, 9, 1, 3, 3], [9, 1, 1, 2, 9, 9, 4, 5, 6, 2, 2, 2, 7, 5], [1, 1, 0, 0, 0, 4, 6, 0, 1, 2, 2, 1, 6, 8, 7, 2, 0, 0, 3, 4, 1, 0, 4, 2, 1, 3, 7, 2, 4], [0, 2, 2, 0, 0, 2, 5, 3, 4, 11, 1, 0, 3, 5, 9, 6, 1, 1, 2, 7, 0, 1, 0, 0, 0, 2, 2, 1, 3], [0, 0, 0, 0, 0, 9, 6, 0, 2, 6, 2, 0, 3, 10, 7, 3, 0, 0, 2, 5, 4, 0, 1, 5, 0, 0, 3, 2, 4], [1, 2, 0, 1, 0, 14, 8, 4, 5, 10, 2, 0, 6, 12, 10], [0, 1, 0, 0, 0, 2, 7, 2, 4, 7, 3, 1, 4, 9, 5, 5, 0, 0, 2, 8, 3, 0, 1, 3, 0, 4, 1, 3, 5], [3, 7, 6, 1, 4, 2, 0, 0, 4, 6, 5, 6, 0, 0, 4, 5, 5, 1, 5, 4, 1, 1, 4, 3, 3], [1, 3, 0, 4, 0, 4, 9, 6, 3, 7, 1, 1, 3, 4, 6, 5, 1, 2, 3, 5, 0, 1, 1, 3, 0, 4, 0, 0, 4], [2, 3, 2, 3, 1, 5, 8, 0, 6, 7, 1, 2, 3, 7, 6, 2, 2, 2, 0, 4, 3, 3, 4, 2, 1, 4, 0, 3], [3, 11, 11, 7, 15, 8, 3, 7, 10, 3, 9], [0, 2, 0, 0, 1, 2, 8, 2, 4, 8, 3, 1, 5, 7, 11, 4, 1, 2, 3, 6, 3, 0, 2, 4, 1, 3, 1, 3, 1], [1, 5, 0, 2, 3, 7, 4, 3, 1, 7, 2, 5, 7, 7, 6, 1, 1, 1, 4, 2, 1, 6, 5, 4, 2, 3, 2], [2, 0, 8, 9, 1, 1, 11, 3, 6, 9, 4, 4, 2, 1, 3, 6, 6, 0, 3, 2, 2, 8, 0, 2, 1], [0, 2, 0, 1, 0, 5, 9, 2, 2, 6, 5, 2, 5, 8, 10, 6, 1, 1, 4, 4, 6, 1, 3, 2, 2, 2, 1, 3, 2], [0, 5, 0, 0, 0, 8, 7, 2, 2, 5, 3, 1, 5, 10, 10, 6, 1, 1, 3, 5, 3, 1, 3, 4, 2, 3, 1, 2, 3], [1, 0, 2, 1, 8, 10, 3, 2, 5, 2, 1, 5, 12, 8, 9, 1, 1, 1, 5, 1, 4, 5, 1, 3, 1, 3, 1], [0, 4, 1, 2, 7, 10, 4, 2, 5, 2, 1, 4, 11, 8, 8, 3, 1, 3, 1, 1, 0, 3, 6, 0, 3, 5, 3, 3], [1, 0, 0, 3, 0, 12, 11, 2, 6, 11, 3, 10, 11, 4, 1, 0, 2, 5, 3, 4, 5, 3, 0, 0, 2, 5, 1], [2, 4, 2, 3, 2, 16, 7, 1, 2, 8, 4, 0, 0, 4, 6, 6, 0, 1, 4, 4, 5, 4, 8, 5, 1, 7, 3, 3, 6], [0, 4, 1, 3, 4, 10, 8, 0, 3, 6, 2, 2, 8, 11, 10, 8, 0, 1, 2, 5, 6, 2, 7, 4, 1, 2, 4, 3, 3], [2, 11, 6, 4, 12, 3, 5, 12, 12, 15, 3, 2, 4, 5, 6, 0, 5, 3, 2, 5, 7, 2, 7], [1, 7, 5, 5, 4, 20, 3, 3, 3, 10, 2, 3, 7, 8, 9, 10, 0, 2, 2, 5, 6, 3, 6, 5, 1, 6, 2, 1, 4], [2, 5, 4, 3, 2, 8, 11, 4, 4, 10, 2, 5, 7, 5, 11, 12, 1, 2, 4, 7, 4, 0, 5, 5, 1, 5, 7, 3, 5], [1, 5, 0, 5, 1, 14, 12, 5, 5, 15, 4, 3, 8, 10, 11, 10, 2, 2, 3, 8, 7, 3, 8, 6, 4, 6, 3, 1, 5], [3, 6, 1, 4, 2, 13, 10, 4, 3, 9, 3, 5, 8, 9, 8, 13, 3, 1, 3, 7, 7, 4, 13, 6, 2, 6, 8, 3, 6]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

