created: 20230603000934000
creator: Drevarr
modified: 20230705163533074
modifier: drevarr
tags: ChartData
title: 202306030009_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Casian Of Phoenicia", "Grilo Gringo", "Dargon Spiritwalker", "Latedoctor", "Primal Clone", "Tika Fiery", "Husky Guard", "A Girl Named Jeff", "Morv\u00e4rth", "Ana Larive", "Sakis Ranger", "Zadey Starbolt", "Xanvias Tsoli", "Morv\u00e4rth", "Bella Sassy", "The Fancy Cheese", "Sumatra Satyricon", "Air One Com", "Tegan Parker", "Wild Doggy", "Arriasa", "Sureting", "Johosh Of The North", "Cat Wigglebooty", "Be\u00eb", "Cyclotechnist Farra", "High Sorcer Baradun", "Grasszanine", "N\u00f3b\u00fa", "Newtype Khan", "Pu Ella", "Miphest\u00f6", "Black Raspberry Pie", "Koralia Danai", "Drevarr Moonwillow", "Melli Dragonswrath", "Aronorf Xideliesi", "Blanco Padre Guard", "Smol Gluvs", "Sister Elon\u00edth", "Pamtastic", "Dusknant", "Hyde En Sikh", "Lord Erin The Wise", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Mistwalker Cael", "Xyntharos", "Kary\u00edna", "Duke Silvver", "Venomina The Siren"];
const professions = ["Ranger", "Dragonhunter", "Scourge", "Reaper", "Chronomancer", "Firebrand", "Dragonhunter", "Spellbreaker", "Reaper", "Tempest", "Druid", "Scrapper", "Holosmith", "Scourge", "Firebrand", "Scrapper", "Soulbeast", "Firebrand", "Tempest", "Dragonhunter", "Druid", "Reaper", "Tempest", "Scrapper", "Scourge", "Scrapper", "Tempest", "Spellbreaker", "Druid", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Scourge", "Firebrand", "Tempest", "Vindicator", "Chronomancer", "Weaver", "Herald", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 1, 4, 14, 30, 3], [30, 4, 2, 12, 10, 0, 4], [0, 0, 0, 21, 0, 0, 0, 2, 28, 14, 1], [33, 0, 17, 2, 3, 3, 0, 7, 1], [0, 0, 0, 19, 0, 0, 1, 1, 7, 31, 6, 4, 0, 2, 1, 13, 2, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 28, 5, 17, 0, 6, 0, 11, 2, 5, 1, 0, 0, 0, 6, 0], [2, 0, 0, 45, 2, 0, 0, 8, 21, 9, 1, 1, 0, 0], [0, 20, 4, 52, 2, 0, 4, 0, 6, 4], [2, 0, 0, 61, 2, 9, 15, 0, 3, 2], [9, 0, 17, 0, 0, 0, 11, 33, 15, 9], [0, 0, 0, 20, 0, 0, 0, 4, 26, 5, 0, 0, 6, 0, 0, 4, 19, 0, 0, 1, 0, 7, 4], [0, 1, 31, 1, 0, 0, 0, 4, 6, 4, 0, 5, 0, 12, 9, 25, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 18, 17, 3, 0, 19, 0, 10, 10, 9, 1, 1, 2, 0, 14, 0], [26, 13, 0, 14, 0, 27, 3, 19, 1, 1, 2], [1, 0, 0, 14, 0, 0, 0, 0, 38, 7, 1, 4, 7, 0, 17, 2, 13, 0, 0, 0, 0, 0, 3], [0, 1, 0, 5, 1, 2, 0, 2, 14, 19, 14, 0, 12, 3, 31, 0, 0, 6, 0, 3, 3], [0, 2, 0, 47, 2, 0, 1, 32, 13, 5, 2, 8, 0, 5], [0, 0, 0, 34, 0, 0, 0, 11, 9, 10, 0, 8, 40, 6, 3, 0, 0, 0, 0, 1, 0], [0, 0, 0, 10, 0, 0, 0, 6, 52, 1, 7, 0, 7, 11, 1, 3, 13, 0, 2, 0, 5, 7], [2, 0, 0, 0, 44, 1, 1, 0, 0, 8, 17, 10, 12, 8, 5, 0, 14, 3], [3, 2, 1, 25, 1, 0, 0, 34, 7, 17, 0, 2, 0, 24, 4, 4, 0, 1, 0, 5, 4], [0, 2, 0, 12, 0, 0, 34, 19, 9, 8, 0, 27, 2, 16, 0, 0, 0, 0, 4, 1], [0, 0, 1, 11, 2, 0, 0, 0, 50, 13, 0, 1, 9, 0, 17, 4, 2, 5, 0, 3, 0, 1, 16], [0, 2, 0, 14, 1, 0, 0, 2, 36, 12, 6, 0, 13, 0, 12, 11, 18, 0, 0, 0, 0, 6, 3], [0, 0, 0, 22, 0, 0, 0, 0, 51, 30, 17, 0, 3, 0, 1, 7, 0, 0, 0, 0, 3, 6], [0, 5, 0, 7, 1, 0, 0, 0, 15, 19, 18, 0, 9, 0, 22, 8, 18, 7, 0, 5, 0, 8, 1], [0, 2, 0, 46, 1, 0, 0, 2, 11, 12, 69], [2, 45, 20, 14, 0, 31, 8, 11, 5, 0, 5, 0, 3, 7], [0, 1, 0, 3, 19, 30, 26, 3, 7, 0, 1, 15, 15, 6, 2, 13, 1, 8, 4], [3, 2, 0, 30, 0, 1, 0, 1, 45, 13, 3, 0, 3, 0, 26, 0, 8, 2, 1, 0, 0, 12, 5], [5, 0, 26, 2, 0, 0, 5, 44, 14, 17, 0, 11, 0, 20, 6, 15], [31, 30, 15, 25, 4, 29, 0, 17, 5, 17], [5, 2, 0, 41, 1, 0, 21, 15, 1, 12, 0, 45, 7, 8, 1, 0, 3, 0, 9, 7], [0, 3, 0, 18, 1, 0, 0, 3, 49, 15, 14, 0, 13, 17, 12, 17, 4, 0, 5, 0, 1, 7], [1, 0, 2, 41, 1, 0, 1, 2, 37, 6, 13, 0, 9, 0, 29, 7, 18, 6, 1, 2, 0, 2, 5], [0, 2, 0, 19, 0, 2, 0, 3, 54, 18, 8, 8, 6, 0, 40, 7, 10, 0, 0, 4, 1, 3, 4], [1, 5, 0, 38, 1, 0, 7, 32, 8, 12, 0, 10, 0, 35, 8, 20, 0, 0, 9, 0, 2, 2], [0, 1, 0, 47, 1, 0, 0, 3, 66, 9, 2, 0, 2, 0, 54, 1, 7, 0, 0, 1, 0, 0, 2], [0, 6, 0, 32, 0, 0, 0, 0, 71, 32, 9, 0, 1, 0, 22, 2, 5, 1, 0, 2, 0, 3, 10], [0, 0, 38, 3, 0, 4, 52, 10, 13, 0, 8, 0, 11, 8, 35, 6, 3, 14, 0, 4, 1], [0, 2, 0, 21, 1, 0, 0, 1, 55, 27, 20, 0, 13, 0, 13, 1, 46, 3, 1, 2, 0, 3, 2], [0, 6, 0, 97, 7, 15, 103], [0, 3, 0, 25, 0, 1, 8, 83, 32, 17, 0, 9, 0, 22, 4, 9, 4, 0, 1, 0, 17, 0], [2, 0, 0, 61, 2, 0, 0, 1, 88, 25, 15, 2, 9, 0, 19, 10, 23, 2], [0, 4, 0, 106, 3, 1, 60, 28, 39, 3, 16], [0, 0, 4, 45, 2, 0, 1, 8, 56, 33, 22, 13, 7, 1, 21, 27, 17, 9, 1, 6, 0, 9, 17], [1, 5, 0, 22, 3, 1, 0, 8, 124, 20, 38, 7, 6, 0, 63, 8, 14, 14], [0, 6, 0, 93, 0, 0, 1, 14, 35, 26, 34, 0, 1, 0, 22, 36, 38, 10, 0, 14, 0, 9, 6], [4, 7, 1, 14, 8, 2, 1, 18, 51, 65, 38, 12, 10, 0, 21, 17, 46, 6, 1, 8, 0, 18, 25], [3, 3, 41, 0, 0, 1, 10, 23, 31, 59, 1, 12, 82, 5, 79, 8, 1, 0, 4, 26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

