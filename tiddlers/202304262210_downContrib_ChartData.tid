created: 20230426221022000
creator: Drevarr
modified: 20230705163526755
modifier: drevarr
tags: ChartData
title: 202304262210_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Blancooo Padreee", "Freylk Nasferatu", "Aira Draugr", "Eibh\u00ebar", "Leana Deeb", "Tootsie Poppa", "Skylar Shadowmoon", "Seren Nightroad", "Al Darasuum", "Permanent Dawn", "Long Poke", "Smol Gluvs", "Grasszanine", "Kmpek", "Solo Bloodborn", "Sassy Daddy Demon", "Rozaalyna", "Lord Erin The Wise", "Panther B Me", "Xyntharos", "Inedible Plant", "Be\u00eb", "Kary\u00edna", "Daddys Lil Orchid", "Khailerian", "Mike The Archmagus", "Cyclotechnist Farra", "Xanvias Tsoli", "Mistwalker Caelon"];
const professions = ["Spellbreaker", "Spellbreaker", "Scourge", "Herald", "Chronomancer", "Weaver", "Scourge", "Scrapper", "Scourge", "Dragonhunter", "Weaver", "Reaper", "Scourge", "Spellbreaker", "Vindicator", "Spellbreaker", "Vindicator", "Scourge", "Weaver", "Scourge", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Vindicator", "Vindicator", "Weaver", "Scrapper", "Holosmith", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[42145.0, 29288.0, 465.0, 2658.0, 0.0, 5868.0, 7782.0, 0.0, 10529.0, 0.0, 4316.0, 13039.0, 8837.0, 529.0, 23233.0], [3480.0, 43498.0, 14850.0, 0.0, 2778.0, 0.0, 21927.0, 8983.0, 216.0, 12746.0, 1848.0, 16643.0, 1852.0, 3374.0, 573.0, 17250.0], [709.0, 45195.0, 49105.0, 3309.0, 6665.0, 0.0, 12681.0, 36864.0], [11319.0, 77522.0, 41677.0, 0.0, 751.0, 555.0, 8104.0, 18625.0], [12207.0, 42643.0, 17549.0, 1815.0, 2500.0, 2366.0, 5062.0, 15190.0, 1342.0, 20015.0, 2871.0, 1906.0, 13479.0, 2451.0, 1328.0, 20501.0], [65335.0, 19420.0, 33167.0, 0.0, 33819.0, 19206.0], [0.0, 82787.0, 48029.0, 1267.0, 4248.0, 564.0, 8214.0, 6370.0, 0.0, 5534.0, 1719.0, 8308.0, 0.0, 973.0, 4351.0, 12217.0], [10129.0, 101650.0, 61701.0, 0.0, 9348.0, 0.0, 24987.0, 222.0], [8575.0, 70708.0, 55499.0, 2816.0, 7826.0, 6963.0, 24503.0, 33881.0, 1754.0, 3089.0], [12655.0, 51832.0, 9506.0, 28189.0, 23083.0, 81.0, 0.0, 98061.0], [0.0, 83129.0, 869.0, 27744.0, 0.0, 0.0, 6823.0, 106710.0], [178794.0, 79033.0, 0.0], [81112.0, 36167.0, 4193.0, 4667.0, 2242.0, 30816.0, 19644.0, 274.0, 24704.0, 0.0, 21210.0, 6496.0, 1307.0, 0.0, 25399.0], [81652.0, 43649.0, 0.0, 682.0, 0.0, 16274.0, 37106.0, 0.0, 16813.0, 0.0, 13120.0, 3544.0, 5262.0, 3464.0, 70739.0], [42558.0, 2877.0, 41660.0, 14091.0, 40778.0, 21902.0, 14871.0, 149.0, 151719.0], [8424.0, 51967.0, 53932.0, 7102.0, 2235.0, 12690.0, 26042.0, 64360.0, 0.0, 24398.0, 3301.0, 12839.0, 19109.0, 5341.0, 0.0, 85493.0], [2948.0, 103102.0, 149761.0, 0.0, 7649.0, 0.0, 75306.0, 47635.0], [6559.0, 154715.0, 66496.0, 875.0, 5886.0, 4176.0, 6510.0, 15144.0, 0.0, 28258.0, 5592.0, 25955.0, 20641.0, 0.0, 840.0, 79880.0], [60403.0, 82772.0, 4949.0, 32523.0, 10499.0, 30543.0, 62105.0, 977.0, 7929.0, 7287.0, 18411.0, 0.0, 21501.0, 102639.0], [14295.0, 159324.0, 69046.0, 914.0, 9148.0, 4058.0, 25580.0, 44300.0, 3301.0, 0.0, 1542.0, 40989.0, 24195.0, 5224.0, 185.0, 70484.0], [4152.0, 198291.0, 91539.0, 8343.0, 40183.0, 16640.0, 35861.0, 79138.0, 0.0], [16311.0, 99240.0, 138689.0, 8296.0, 10555.0, 9386.0, 69302.0, 99821.0, 0.0, 6664.0, 2978.0, 5557.0, 22946.0, 5928.0, 0.0, 101043.0], [222716.0, 105565.0, 252.0, 4866.0, 4915.0, 57911.0, 98230.0, 7439.0, 78480.0, 9968.0, 42045.0, 32170.0, 15633.0, 4439.0, 132721.0], [29787.0, 257771.0, 147715.0, 8262.0, 14204.0, 15888.0, 40264.0, 93283.0, 8123.0, 34723.0, 7042.0, 21401.0, 5184.0, 9219.0, 5771.0, 140218.0], [22418.0, 240130.0, 132264.0, 4172.0, 18324.0, 0.0, 68580.0, 103272.0, 13087.0, 59928.0, 19615.0, 22513.0, 48684.0, 1181.0, 0.0, 105096.0], [35933.0, 300784.0, 149657.0, 19646.0, 33777.0, 9122.0, 38115.0, 87698.0, 433.0, 50003.0, 0.0, 62343.0, 18095.0, 0.0, 1282.0, 90795.0], [7246.0, 237162.0, 99866.0, 16528.0, 48346.0, 23406.0, 67776.0, 109643.0, 47180.0, 63573.0, 0.0, 55619.0, 20587.0, 969.0, 22780.0, 131818.0], [55713.0, 292574.0, 167640.0, 0.0, 8539.0, 5568.0, 62846.0, 86069.0, 0.0, 40827.0, 2268.0, 66409.0, 38403.0, 0.0, 8728.0, 120304.0], [395573.0, 235551.0, 627.0, 32537.0, 12261.0, 56543.0, 88656.0, 3858.0, 104028.0, 0.0, 102426.0, 88021.0, 5982.0, 1847.0, 206734.0], [50549.0, 470171.0, 138072.0, 16600.0, 45226.0, 25156.0, 117752.0, 131673.0, 15589.0, 129645.0, 0.0, 60473.0, 29739.0, 4847.0, 17871.0, 137488.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

