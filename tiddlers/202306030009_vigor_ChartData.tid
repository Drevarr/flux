created: 20230603000934000
creator: Drevarr
modified: 20230705163533302
modifier: drevarr
tags: ChartData
title: 202306030009_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "N\u00f3b\u00fa", "Newtype Khan", "Zadey Starbolt", "Drevarr Moonwillow", "Pamtastic", "Johosh Of The North"];
const professions = ["Spellbreaker", "Druid", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[57.5938, 60.1887, 93.139, 36.4808, 0.0, 74.9455, 112.266, 178.3888, 55.5174, 131.1552, 85.9738, 37.4904, 113.7118, 33.5866], [0.0, 0.0, 0.0, 85.714, 139.0152, 211.3332, 107.6027, 39.2616, 41.9695, 0.0, 68.747, 89.6465, 120.9582, 121.9644, 0.0, 75.7901, 0.0, 111.3305, 345.9949], [0.0, 50.9296, 59.7747, 396.5198, 0.0, 68.9623, 0.0, 0.0, 110.3457, 178.2339, 166.1065, 0.0, 47.4407, 0.0, 165.991, 226.7773, 168.8826, 125.3178, 135.3607, 323.4624, 0.0, 173.9084, 145.5418], [91.6039, 164.3004, 898.2585, 90.4728, 50.395, 30.0327, 72.7045, 503.4364, 156.6162, 222.2104, 67.2072, 74.4998, 12.0064, 182.091, 252.058, 247.8824, 211.4505, 74.3807, 184.9382, 31.0329, 253.0899, 187.525], [79.6556, 137.9268, 44.831, 1178.6477, 91.2912, 53.7214, 76.0523, 119.8361, 547.7786, 360.5043, 242.8358, 116.5056, 77.0169, 74.1552, 339.4685, 288.1494, 177.7332, 216.1701, 73.454, 304.4659, 156.3084, 249.2532, 482.3403], [92.0147, 242.0669, 22.8198, 1171.8279, 46.4904, 18.0382, 18.534, 147.7384, 631.1113, 369.4743, 287.5892, 46.2808, 84.9703, 9.4192, 216.223, 368.3988, 184.5514, 214.866, 87.5675, 264.9715, 89.2611, 350.5289, 558.1766], [154.7748, 336.3703, 55.3557, 2056.4469, 111.3816, 25.7494, 58.3374, 198.7852, 844.1575, 729.5301, 494.1035, 93.4472, 108.5508, 30.128, 318.136, 628.357, 481.9971, 383.7159, 171.7848, 452.7168, 242.8389, 342.5908, 812.6082]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

