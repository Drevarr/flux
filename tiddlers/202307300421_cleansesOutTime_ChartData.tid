created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Jade Quufu", "Luke The Ghastly", "Drac Tepes", "Raziel Umbra", "Astraea Lumena", "Kosa\u00efr", "Aronorf Xideliesi", "Whobear", "Vee Nemesis", "Elvezio Figone", "Newtype Khan", "Abserns Sorcerer", "Gestern Yesteryear", "Gwyn Ghosthouse", "Scarlet Merc\u00fcry", "Kosa\u00edr", "Salty Pam", "Loganlek", "Kurtis Ruhr", "N\u00eec\u00f4le", "Kosa\u00efr", "Avatar Shazbott", "Elonith Primal", "F\u00f9gly", "Tegan Parker", "Whip \u00d1 Sl\u00e0pper", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scourge", "Scourge", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Chronomancer", "Chronomancer", "Virtuoso", "Spellbreaker", "Weaver", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Chronomancer", "Spellbreaker", "Vindicator", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.0095, 0.0, 10.1163, 0.0, 7.973, 8.9854, 0.0, 0.0, 0.0, 9.9296, 0.0, 27.0169], [12.9848, 17.0719, 4.0156, 0.0, 6.9551, 1.0, 12.0545, 0.0, 3.9643, 0.0, 1.0, 0.0, 0.0, 2.9925, 1.9912, 7.0095], [11.0095, 11.0641, 17.1395, 5.9865, 9.9805, 13.0584, 0.0, 4.0141, 3.9718, 5.9512, 8.0508], [0.0, 16.4615, 35.0217, 6.1429, 0.0, 0.0, 0.0, 4.0, 27.9167], [15.5938, 0.0, 0.0, 0.0, 16.0727, 0.9884, 0.9643, 1.0, 0.0, 10.9686, 0.0, 0.0, 0.0, 2.0, 0.9925, 0.0, 0.0, 17.0476, 15.359, 17.9767, 0.0, 0.9865, 13.9854, 2.9854, 0.0, 1.0, 3.9718, 12.9268, 0.0], [21.0686, 19.7347, 9.5138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.0227, 0.0, 0.0, 5.988, 6.0312, 0.0, 2.9775, 14.033, 0.0, 6.9535, 0.0], [12.0513, 4.9964, 0.0, 19.4587, 0.0, 0.0, 0.0, 0.0, 1.9882, 0.0, 0.0, 3.9924, 2.2041, 5.9909, 6.982, 2.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 3.9874, 0.0, 4.0127, 0.0, 0.9925, 0.0, 7.9298, 0.0, 6.0256, 13.0775, 1.9865, 0.9951, 0.0, 0.0, 3.007, 7.9577, 0.0, 6.0], [6.982, 21.4062, 7.0423, 0.0, 2.0, 27.8182, 9.9419, 19.7143, 26.5737, 0.0, 0.0, 0.0, 0.0, 0.0, 5.9925, 0.0], [0.0, 12.6288, 14.5918, 10.9939, 4.988, 9.3438, 0.0, 3.9775, 15.1099, 5.0182, 0.0, 17.9643, 1.0, 0.0, 0.0, 0.0, 0.0, 0.9925, 0.0, 17.8596, 1.0, 25.1026, 11.062, 0.0, 0.9865, 3.9902, 0.9927, 0.0, 0.0, 0.9859, 0.0, 0.0], [30.0543, 0.0, 5.973, 17.9707, 25.8613, 0.0, 6.0141, 0.0, 23.2373], [17.9848, 6.9592, 43.0606], [10.0351, 0.0, 5.0076, 0.0, 1.997, 0.0, 0.0, 0.0, 4.9663, 3.0, 1.0, 4.9651, 15.5357, 10.0031, 0.0, 6.0881, 3.0, 4.0127, 4.0, 0.0, 9.0075, 0.0, 1.9825, 18.0667, 7.0385, 10.9845, 0.0, 1.9865, 4.9902, 6.9781, 0.0, 3.007, 6.9437, 0.9756, 6.0], [1.0, 13.9964, 0.0, 11.2018, 0.0, 0.0, 0.0, 4.9792, 3.9765, 0.0, 0.0, 3.9924, 0.0, 0.997, 5.988, 13.125, 0.0, 0.0, 14.033, 1.0, 2.9767, 0.0, 12.0, 0.0, 3.9874, 0.0, 2.0, 0.0, 1.9925, 0.0, 0.0, 6.3714, 12.0641, 5.9922, 0.0, 4.9865, 1.9951, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0], [13.982, 13.2188, 2.9718, 2.9775, 9.9121, 14.0727, 1.9884, 3.9643, 8.0219, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 14.2105, 21.2762, 19.2308, 33.0853, 0.0, 0.9865, 5.9902, 15.9489, 0.0, 4.007, 11.4225, 4.9512, 9.0282], [18.0419, 13.0781, 0.0, 16.0112, 19.0659, 14.0727, 8.9535, 17.1071, 10.0, 8.04, 6.9811, 0.0, 7.0253, 0.0, 5.9925, 5.9825, 20.0702, 17.0476, 16.2179, 20.0388, 0.0, 0.9865, 6.9854, 20.9489], [60.2696, 0.0, 19.9874, 0.0, 3.0127, 0.0, 2.9925, 0.0, 19.2632, 47.0286], [21.0061, 13.0, 21.4844, 6.7465, 5.0, 10.4615, 4.0727, 0.0, 13.7857, 52.1442, 4.0, 3.9874, 0.0, 1.2785, 0.0, 0.0, 13.194, 10.9912], [2.0, 33.1538, 67.0217, 49.0816, 81.9266, 8.0536, 15.0, 32.625], [0.0, 74.3357, 42.4898, 94.4771, 0.0, 36.4792], [47.6154, 85.4152, 48.4082, 94.1009], [60.8205, 140.8915, 0.0, 58.7162, 78.1463, 62.3431], [53.7942, 53.102, 94.4128, 0.0, 7.0156, 9.9583, 0.0, 43.0941, 26.193, 19.4348, 51.2273, 36.2041, 47.9364, 26.1978, 30.1091, 26.4535, 2.0357, 41.3887], [118.1938, 5.7714, 70.527, 116.9951, 79.2482, 5.6129, 87.3944, 105.6197, 53.4146, 128.8475], [115.7519, 9.9714, 91.3784, 103.6976, 89.5547, 1.9677, 95.9296, 110.831, 64.9268, 144.5932], [53.4872, 115.0722, 67.2245, 129.6055, 6.9643, 17.0, 37.5, 0.0, 53.2118, 22.1579, 23.8478, 83.1136, 36.9184, 68.6424, 77.5449, 76.8125, 30.5493, 62.573, 31.3516, 40.4545, 35.5814, 6.9643], [55.2105, 42.7348, 50.1788, 8.0659, 8.0225, 9.022, 40.8, 26.6628, 2.9643, 89.1411, 10.68, 45.5346, 1.0, 13.0506, 0.0, 12.0224, 17.1754, 25.0351, 66.3524, 52.5769, 54.9612, 25.5135, 77.8195, 24.1898, 55.7113, 76.2676, 33.4634, 69.4181], [125.9458, 71.7347, 99.8716, 0.963, 12.0, 17.1094, 62.8333, 0.0, 70.1294, 62.386, 10.087, 97.7727, 61.0408, 75.7485, 102.3293, 94.8438, 47.5211, 54.3596, 41.7802, 39.5455, 46.6395, 74.9286, 81.0878, 6.28, 46.2579, 3.0, 28.6962, 6.1667, 65.4403, 40.4649]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

