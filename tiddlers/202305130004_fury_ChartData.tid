created: 20230513000456000
creator: Drevarr
modified: 20230705163529747
modifier: drevarr
tags: ChartData
title: 202305130004_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Arriasa", "Lord Erin The Wise", "Cyclotechnist Farra", "Aronorf Xideliesi", "Mike The Archmagus", "Bubblesparklepuff", "Venomina The Techie", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Tempest", "Druid", "Weaver", "Scrapper", "Firebrand", "Weaver", "Vindicator", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.6826, 52.4966, 211.261, 242.8224, 35.3473, 45.0129, 0.0, 0.0, 69.8688, 0.0, 0.0, 136.0819, 0.0, 61.065, 48.384, 0.0, 66.593, 5.9357, 3.0029, 0.0, 22.6733, 0.0, 109.5175, 8.7435, 0.0, 3.9457], [16.5763, 173.376, 36.2443, 11.0809, 205.5667, 21.4452, 98.6797, 159.39, 255.6288, 22.7232, 149.0286, 112.0339, 23.3433, 165.5338, 38.3414, 167.6518, 53.1796, 33.63], [51.1488, 95.8003, 252.4627, 538.608, 13.3386, 146.4002, 7.1445, 49.2974, 15.84, 8.0153, 18.3287, 11.7746, 90.8416, 15.9392, 36.374, 127.765, 164.425, 31.8816, 68.8082, 27.6696, 47.9136, 77.8982], [74.8224, 96.3648, 294.3209, 622.9899, 30.4363, 97.1376, 15.7737, 37.5422, 35.7696, 4.0404, 25.7002, 0.0, 124.4109, 44.0869, 93.61, 98.7034, 20.1096, 0.0, 3.9744, 0.0, 104.5699, 0.0, 102.1771, 0.0], [70.0877, 107.735, 208.4705, 738.7906, 0.0, 126.0187, 0.0, 22.439, 95.5008, 2.546, 77.9072, 0.0, 143.1175, 144.023, 26.136, 188.0983, 0.0, 67.8298, 7.7922, 61.9046, 0.0, 145.6304, 28.7361, 0.0], [63.4522, 96.3648, 330.9264, 925.5081, 30.3657, 8.1986, 128.6822, 25.8279, 62.4643, 134.3775, 139.5878, 29.4192, 117.6118, 16.524, 66.9024, 127.7136, 25.1731, 125.4844, 16.0254, 13.5811, 49.5504], [86.953, 148.9421, 205.3516, 923.2639, 58.7505, 190.2856, 17.6772, 21.8736, 36.0576, 21.1411, 25.8869, 2.9362, 127.5994, 23.794, 53.2915, 103.155, 168.5376, 35.2728, 120.4984, 11.8195, 74.5421, 84.672, 27.0083, 120.9301, 0.0, 26.0173, 51.1103], [171.4867, 207.3254, 580.1061, 1225.782, 35.5292, 175.1946, 85.2134, 62.2133, 160.704, 65.437, 245.5731, 21.2239, 0.0, 218.155, 266.5152, 27.3672, 163.7972, 14.0746, 59.8368, 53.2967, 141.5904, 0.0, 174.6172, 0.0, 20.8525], [249.2813, 521.4989, 1031.5186, 1456.4858, 113.1356, 330.7882, 63.2977, 105.2611, 219.5712, 113.3933, 109.7859, 338.8211, 231.0355, 388.4125, 591.6557, 58.2984, 305.5086, 226.2758, 55.7442, 260.0842, 295.4937, 30.2238, 59.6543, 157.0472], [235.9411, 386.5075, 778.7276, 2176.4252, 119.8655, 187.5103, 76.3557, 123.0874, 183.6864, 109.9207, 127.2482, 21.7672, 311.5686, 29.3765, 146.5118, 291.985, 571.8182, 145.4328, 303.8304, 28.6027, 187.68, 100.5161, 300.2093, 5.4584, 353.0386, 87.2262, 121.322, 84.2816]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

