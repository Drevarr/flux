created: 20230222220539000
creator: Drevarr
modified: 20230705163519875
modifier: drevarr
tags: ChartData
title: 202302222205_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Blanco Padre Guard", "Sygaldry Verdandi", "Ravioli Fetabringer", "Kiloak", "Zaylen Harker", "Newtype Khan", "Venomina The Siren", "Drevarr Moonwillow", "Bella Sassy", "Arcanophage Farra"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Scrapper", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.1244, 5.92, 1.9127, 5.0241, 6.501, 9.2618, 7.7184, 3.7248, 30.5575, 16.9402, 27.8122, 9.1669], [4.4428, 4.884, 6.5419, 3.7582, 19.2888, 13.9205, 0.4608, 0.0, 20.9639, 19.2902, 31.968, 11.0694], [4.6414, 0.0, 5.4054, 2.8879, 7.6441, 2.2184, 17.3184, 6.9504, 37.1309, 7.1482, 49.5504, 1.1675], [2.113, 0.074, 6.5696, 6.6065, 31.5765, 7.2653, 7.3728, 1.7664, 45.1256, 16.3526, 39.6403, 10.1614], [9.7852, 3.0066, 23.1466, 14.7524, 6.3744, 11.5968, 53.6533, 12.3379, 36.923, 9.902], [5.3277, 5.1948, 10.0087, 14.7881, 6.4888, 8.256, 4.3392, 40.3288, 25.4592, 60.5794, 12.5828], [15.5858, 14.208, 24.9203, 21.7976, 27.2186, 17.8027, 20.2368, 11.0976, 13.6798, 5.8752, 26.0539, 5.7942], [0.0, 0.5143, 8.0013, 0.0, 13.8624, 4.608, 11.5479, 35.8387, 132.9869, 11.1127], [10.5059, 10.0878, 17.6457, 15.2515, 13.1712, 13.5552, 51.6991, 25.1654, 62.4974, 13.8368], [8.741, 3.8036, 7.5121, 12.8174, 35.72, 21.2412, 8.7168, 7.4112, 55.0746, 38.0909, 50.8291, 15.134], [43.6871, 33.67, 49.2584, 40.905, 100.5875, 92.7846, 61.1328, 56.64, 285.1443, 137.8714, 243.2765, 86.307]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

