created: 20230427220456000
creator: Drevarr
modified: 20230705163527114
modifier: drevarr
tags: ChartData
title: 202304272204_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xkaet", "Xanvias Tlesia", "Mysterious Nature", "Bell Delinger", "Zadie Miststep", "Red Date Sayaccho", "Mac Aaroni", "Chio Slayer", "Drevarr Moonwillow", "Solikai"];
const professions = ["Tempest", "Daredevil", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[50.3143, 5.4288, 3.0019, 0.5807, 48.9294, 95.4928, 45.6484, 23.2226, 76.5904, 2.9799, 35.9117, 43.8566, 0.0, 34.8687, 9.0057, 3.024, 2.9702], [9.9528, 39.7015, 13.7376, 30.0324, 0.0, 94.9212, 120.6427, 2.0944, 0.0, 140.1246, 30.6719, 0.0, 0.8122, 39.3174, 0.0, 0.0, 0.0, 0.0], [30.1976, 24.4586, 20.5173, 32.0879, 19.3256, 0.0, 101.2057, 14.3276, 14.4288, 97.1885, 25.8795, 57.2941, 4.6678, 105.961], [0.0, 37.4612, 51.8549, 206.1536, 0.0, 0.0, 228.623, 42.1119, 0.0, 69.3105], [44.7018, 0.0, 0.0, 54.9423, 23.69, 29.1465, 105.996, 44.6488, 62.4809, 61.1226, 15.5466, 77.8354, 123.8544, 31.1769, 31.359, 31.3076, 0.0], [148.9226, 32.674, 366.9246, 472.5494], [220.5918, 33.0444, 31.6656, 19.2229, 0.0, 133.3395, 10.1178, 53.7404, 63.1378, 95.2182, 18.1352, 59.639, 176.6448, 23.0364, 0.0, 31.6377, 63.504, 0.0], [175.5802, 572.1408, 47.2118, 292.7443, 741.5021, 70.6158], [703.3884, 234.4464, 97.9776, 81.5184, 112.096, 270.8559, 357.9774, 220.4356, 200.1938, 389.5214, 48.7921, 161.0414, 529.5283, 70.1784, 23.4737, 53.6095, 368.2022, 57.9904], [857.571, 413.7062, 123.3936, 180.1254, 70.1305, 350.217, 553.9736, 303.926, 176.0052, 620.7062, 72.6313, 355.189, 703.7366]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

