created: 20230911002610000
creator: Drevarr
tags: ChartData
title: 202309110026_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aezlenne", "Glizzy Gobbl\u00e9r", "Govinda Ektar", "Be\u00eb", "Drac Tepes", "Gamora Titus", "Trodek", "Aloe Pen", "Reina Armitage", "Darks Na", "Gestern Yesteryear", "Necrotic Windrunner", "Drevarr Moonwillow", "Ax Axun", "Gamora Titus", "Flick Embermage", "Glizzy Gobbl\u00e9r", "Be\u00eb"];
const professions = ["Chronomancer", "Reaper", "Vindicator", "Scourge", "Scourge", "Firebrand", "Scrapper", "Vindicator", "Druid", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Vindicator", "Dragonhunter", "Weaver", "Scourge", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[359.8485, 189.8125, 0.0], [423.5781, 317.1463, 72.3415], [85.9492, 226.1774, 25.4545, 37.716, 271.0141, 66.2927, 29.2647, 38.3034, 0.0, 0.0, 195.75, 0.0], [570.8174], [233.0808, 1303.1818], [158.1852, 20.6901, 318.3924, 115.2647, 28.8652, 0.0, 32.6364, 213.0, 148.875, 0.0, 18.3049], [312.0506, 235.4412, 342.4719, 63.0625, 0.0], [1835.1212, 140.2656, 0.0, 111.9268], [0.0, 45.4059, 71.9677, 170.5, 121.2881, 16.2581, 172.1818, 10.9383, 284.6761, 56.7317, 93.2405, 64.0882, 3.5506, 18.825, 53.0909, 225.3939, 103.0938, 0.0], [50.7791, 307.1983, 27.3652, 79.2574, 452.7527, 111.4211, 87.0339, 165.5161], [33.8023, 19.1653, 0.0, 403.802, 288.3226, 21.8644, 95.6935, 39.9773, 292.7037, 21.2535, 43.7073, 8.4051, 52.2941, 19.4607, 0.0, 12.9697, 406.9697, 35.2812, 105.2683, 0.0366], [167.8989, 485.175, 298.3131, 1372.5455, 225.5, 308.9024, 0.6585], [1380.7907, 70.3306, 60.6522, 1.802, 115.2473, 295.3684, 0.1864, 137.2742, 162.8636, 201.2716, 96.9577, 37.7595, 0.0882, 0.0, 0.0, 47.5455, 354.8788, 87.125, 68.8537, 64.6341], [18.0465, 199.7273, 40.7739, 29.0594, 1437.4731, 660.7632, 202.3898, 101.6774, 407.9318, 163.6049, 0.0, 7.9747, 0.0, 0.0, 0.0, 0.0, 508.1818], [140.407, 324.7273, 338.1304, 526.297, 1994.8172, 675.3421, 203.6102, 998.871, 440.5682], [1287.9604, 1034.0968, 368.8158, 343.0, 313.9194, 825.9091, 565.8148, 760.6056, 261.6098, 720.962, 73.5618, 42.475, 261.0707, 464.9697, 253.0781, 55.9756], [41.7791, 885.7934, 193.3565, 2082.8614, 1998.9462, 896.1864, 1113.129, 789.25, 1093.9012, 1692.169, 665.878, 622.7722, 169.1765, 286.5506, 984.4875, 556.8586, 75.7879], [77.6977, 491.6942, 770.0891, 3423.1935, 1448.5263, 1009.9153, 1570.6613, 2432.5682, 961.7901, 704.6901, 795.9268, 573.8608, 1466.2353, 296.8539, 759.4375, 101.6667, 941.2121]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

