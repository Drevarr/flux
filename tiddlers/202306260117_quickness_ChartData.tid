created: 20230626011754000
creator: Drevarr
modified: 20230705163538004
modifier: drevarr
tags: ChartData
title: 202306260117_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Traidoruns Maximus", "Warrior Constantine", "Blancooo Padreee", "Newtype Khan", "Zayde Sunsabre", "Grasszanine", "Arcanophage Farra"];
const professions = ["Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.3555, 27.7784, 0.0, 55.0721, 97.4592, 37.0709, 45.2188, 20.9412, 0.0, 104.1579], [17.9091, 19.3565, 24.3261, 71.7419, 25.8336, 13.4904, 6.3571, 25.4772, 4.9031, 39.1532, 35.9453, 45.0175, 32.0084, 30.193, 12.9037, 35.512, 69.4199, 12.5901, 12.2623, 31.803, 12.9123, 17.3352, 6.4832, 126.2, 12.9168, 12.6988], [36.693, 61.0008, 103.4762, 84.4128, 0.0, 37.9157, 78.4728, 0.0, 99.5737, 47.4495, 79.5804, 27.6196, 198.5581, 118.996, 5.1862, 83.306, 104.3546, 70.3963], [31.7844, 41.4117, 14.2574, 141.3846, 113.616, 22.8043, 24.2176, 74.2392, 22.0829, 93.7121, 22.3942, 64.6786, 109.4188, 144.7675, 34.2916, 0.0, 67.62, 72.3405, 32.2567, 58.1581, 15.7153, 22.1577, 46.9636, 0.0, 64.6, 0.0], [39.0987, 0.0, 0.0, 128.7896, 111.2832, 14.9688, 0.0, 64.2222, 32.3835, 60.3875, 159.5124, 138.195, 43.7184, 0.0, 93.932, 104.3546, 63.2061, 67.3628, 55.5621, 38.4639, 34.7425, 0.0, 235.6, 40.6728, 21.7283], [76.1319, 77.1467, 104.5876, 0.0, 31.3421, 98.5446, 82.5147, 39.589, 75.3673, 137.2654, 170.7115, 0.0, 88.55, 53.0198, 54.7653, 47.2017, 40.8523, 41.8187, 20.7446, 0.0, 280.2, 36.3312, 20.7294], [42.0633, 82.3116, 29.3202, 152.9917, 27.4752, 108.297, 0.0, 208.391, 69.4752, 148.16, 217.1729, 128.3363, 44.1283, 82.9374, 86.7692, 56.7205, 44.1304, 14.8792, 161.6, 63.3528, 17.9405], [36.7416, 54.6727, 76.2003, 167.8093, 121.824, 64.4582, 62.8522, 138.0834, 11.4741, 176.0764, 88.5942, 119.0585, 87.8529, 326.2026, 124.3242, 94.392, 128.1685, 34.1893, 76.1215, 64.4252, 47.6702, 47.0116, 0.0, 383.2, 38.2104, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

