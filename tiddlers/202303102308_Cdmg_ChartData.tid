created: 20230310230833000
creator: Drevarr
modified: 20230705163521560
modifier: drevarr
tags: ChartData
title: 202303102308_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Arcanophage Farra", "Sumatra Satyricon", "Zaylen Harker", "Kiloak", "Nano", "Mistwalker Caelon", "Tootsie Poppa", "Xmus Jaxnflaxn Waxn", "Ark Darkness", "Aronorf Xideliesi", "K\u00f4sair", "Lord Erin The Wise", "Cerys Fireblade", "Legacy Of Mathus", "Zefirokai", "Sofya De Nova", "Xanvias Tseli", "Sp\u00edcy Cheese", "Dark Sidiuz", "Dark L\u00e1la", "Rozaalyna", "Smol Gluvs", "Demon Sekhmet", "Morton Saltbringer", "Be\u00eb"];
const professions = ["Scrapper", "Spellbreaker", "Soulbeast", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Scourge", "Holosmith", "Firebrand", "Firebrand", "Berserker", "Weaver", "Berserker", "Berserker", "Tempest", "Weaver", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.2545, 11.9683, 10.4318, 2.4343, 0.0, 13.2485, 0.0, 22.2977, 3.3711, 2.5275, 0.0, 1.0862, 19.2708, 9.5741, 26.5158, 0.0, 0.0, 1.7273, 0.0, 10.7531, 17.8065, 14.7669, 13.8025, 14.0233, 9.2308, 63.569, 33.1, 5.2065, 0.7451, 22.4066, 9.0405], [31.5818, 8.8698, 0.0318, 2.0686, 0.0, 23.6852, 0.0, 14.8058, 13.2474, 9.6813, 0.0, 11.2812, 8.0185, 4.8421, 18.1739, 0.0, 0.0, 0.0, 0.0, 24.6933, 8.4395, 27.1628, 13.2727, 40.6897, 5.15, 0.0, 0.0, 0.0, 0.0], [9.6364, 17.6, 8.8636, 13.7429, 8.1538, 19.2643, 0.0, 19.1197, 12.4845, 8.7253, 0.0, 10.9828, 11.625, 11.5, 5.1158, 32.5897, 0.0, 0.0, 0.0, 0.0, 0.0, 25.8957, 4.949, 0.0, 20.2308, 47.6724, 3.4583, 3.3913], [0.2455, 5.7937, 5.0864, 3.8629, 8.9538, 23.5659, 0.0, 4.9871, 14.2268, 0.0, 0.8596, 10.6207, 92.8854, 2.537, 41.7789, 4.1026, 0.0, 105.6591, 20.9506, 1.6687, 17.8981, 32.4651, 1.014, 6.0517, 2.0833, 8.1413, 1.7451, 0.0, 6.1149], [7.6455, 16.0794, 27.5182, 7.4057, 81.5538, 19.0754, 3.2571, 6.3269, 0.9381, 0.0, 36.9474, 25.6379, 25.4271, 61.6852, 8.2211, 0.0, 8.087, 0.0, 0.0, 0.0, 0.0, 16.8037, 12.2229, 66.0698, 20.972, 5.9828, 22.625, 3.3696, 7.8627, 0.0, 5.1081], [79.2182, 55.6032, 26.1455, 0.0, 272.8308, 19.0662], [36.2727, 30.2952, 16.3182, 6.5143, 0.0, 25.5436, 4.9857, 21.699, 4.8454, 3.9451, 0.0, 44.1034, 14.1667, 13.037, 8.8737, 0.0, 0.0, 0.0, 0.0, 1.0741, 0.0, 14.4785, 9.0191, 47.6977, 9.3706, 49.5172, 4.6667, 0.0761, 0.902, 1.8791, 25.1081], [30.4364, 32.8508, 28.8318, 78.5886, 299.8923, 22.3626], [0.0, 0.0, 9.2265, 4.2268, 49.3626, 0.8246, 4.5862, 38.4167, 6.6852, 50.9263, 3.6538, 3.913, 0.0, 0.0, 66.0988, 36.4194, 41.4785, 27.7261, 81.3023, 20.4615, 161.8103, 34.55, 0.3587, 2.0392, 12.2527, 194.5811], [10.2256, 0.0, 4.9968, 10.4948, 2.5604, 54.2281, 28.9138, 77.375, 0.3519, 21.6526, 0.0, 3.8261, 3.5, 63.321, 11.2581, 20.9939, 12.5796, 98.907, 20.049, 195.069, 44.4167, 90.4565, 35.9804, 64.1538, 22.2095], [28.7364, 7.6127, 12.1364, 8.0057, 14.3231, 35.8498, 0.0, 10.7411, 5.701, 7.3077, 22.9649, 23.4138, 80.9792, 0.0, 57.7158, 15.1538, 0.0, 0.0, 0.0, 43.6173, 36.0968, 41.8037, 11.3822, 40.6163, 7.4685, 29.6207, 15.4583, 41.2391, 3.7059, 2.3736, 21.3108], [75.7, 66.6222, 118.1955, 19.64, 134.5538, 33.3528], [134.6727, 72.5746, 65.9091, 20.2286, 80.1692, 13.6184, 0.0, 16.0518, 89.9381, 87.8571, 54.0702, 109.6207, 22.8229, 54.1481, 51.9789, 26.4359, 24.5217, 12.5, 39.5, 99.0741, 0.0, 6.2945, 0.0, 0.0, 52.6552, 26.575, 37.0109, 4.1765, 35.033], [45.1636, 31.1841, 88.7955, 17.0629, 147.3846, 30.3974, 16.7, 49.4498, 20.3505, 23.7582, 110.9825, 164.5172, 7.1562, 0.0, 159.0842, 0.0, 0.5217, 0.0, 0.0, 104.4691, 0.6452, 39.2638, 54.4076, 247.4767, 54.3077, 219.3966, 5.3917, 26.0761, 10.8039, 17.4725, 39.7973], [115.6091, 93.8571, 70.9864, 46.6171, 0.0, 28.421, 0.0, 12.8641, 25.9381, 45.8571, 61.614, 164.4655, 31.8958, 15.6481, 41.7579, 25.5, 7.3043, 0.0, 0.0, 116.3951, 0.0, 51.9632, 65.3248, 73.1395, 48.979, 71.6724, 39.9667, 30.9783, 27.1373, 10.5055, 200.4324], [34.3909, 9.6476, 38.2636, 18.4457, 0.0, 71.0289, 0.0, 10.9644, 32.2165, 89.4286, 2.4211, 38.7069, 81.0208, 0.0, 77.7895, 2.7949, 0.0, 0.0, 0.0, 0.7037, 1.5161, 81.6933, 13.6752, 44.3023, 88.3706, 357.569, 141.7667], [51.3545, 57.7556, 55.9409, 20.0914, 108.4769, 60.1246, 0.0, 39.5372, 27.8454, 24.0, 116.4737, 180.6552, 82.6979, 0.0, 155.1368, 5.4872, 0.0, 3.4091, 0.0, 47.2222, 0.0, 36.1718, 95.8153, 90.9651, 29.0839, 101.3621, 30.5, 101.5109, 65.2941, 33.5275, 60.1419], [72.4818, 63.8794, 70.95, 19.9714, 117.7077, 20.4046, 1.7429, 37.3754, 85.0412, 57.5714, 129.8246, 385.2069, 154.5938, 15.2222, 121.6947, 28.1923, 12.7391, 0.0, 0.0, 46.8025, 62.3548, 62.589, 111.5541, 88.0, 47.1399, 233.2241, 19.3667, 79.4239, 0.0, 0.0, 288.9797], [5.4545, 64.8603, 123.0545, 11.2343, 34.2923, 65.2354, 0.0, 44.4531, 90.866, 22.4615, 173.9649, 278.7414, 21.8333, 0.0, 126.1474, 7.1538, 0.0, 0.0, 3.25, 54.2222, 0.0, 72.3006, 92.242, 127.5349, 20.9301, 108.0, 74.7833, 82.7609, 25.7451, 18.1978, 147.9527], [15.4727, 1.4222, 105.6727, 107.16, 140.4923, 125.1744, 16.5571, 4.3333, 63.7835, 22.8462, 134.3333, 154.7586, 89.0312, 79.1481, 315.3158], [0.0, 105.4854, 191.1237, 233.8242, 215.0877, 234.8966, 413.8125, 232.3889, 430.1789, 308.3974, 8.3913, 39.2727, 0.0, 213.0, 160.9355, 300.1779, 171.2357], [212.1, 100.8857, 89.1136, 22.7257, 35.3077, 50.3075, 0.3714, 57.3463, 22.1031, 6.1099, 50.8421, 247.5345, 17.9271, 10.1481, 206.5053, 0.0, 0.0, 4.5909, 0.0, 86.3457, 0.0, 6.2638, 128.9108, 172.3372, 37.8462, 358.1207, 0.0, 13.6848, 47.1569, 13.1538, 194.0676], [3.8273, 136.7111, 107.0364, 27.16, 380.2769, 70.8807, 0.0, 84.6343, 62.0, 54.6484, 59.2281, 1.0345, 110.6875, 37.0556, 257.4737, 9.4231, 6.5652, 9.0682, 10.25, 110.3951, 78.7097, 151.0368, 130.9299, 159.8372, 52.4476, 222.2931, 58.125, 36.7065, 47.7647, 7.4505, 112.5203], [246.2364, 147.946, 58.05, 37.3943, 131.9692, 115.1646, 8.7857, 48.9806, 76.866, 5.3956, 86.9298, 203.4828, 155.1979, 38.5, 294.0105, 0.859, 32.8261, 9.9091, 133.6914, 37.5161, 59.816, 45.6943, 51.1279, 36.5105, 39.0345], [59.1727, 69.873, 62.85, 40.4743, 94.5231, 112.0197, 0.0, 38.7023, 65.2784, 0.1319, 84.4035, 283.0521, 39.2407, 103.3474, 1.5, 0.0, 58.3864, 104.7917, 217.1605, 0.3548, 71.5031, 211.8471, 209.5, 38.4336, 88.1034, 19.1167, 108.0326, 9.0588, 8.8132, 128.2635], [280.5091, 146.6159, 200.5591, 21.52, 421.8615, 118.2387, 5.1429, 106.7152, 142.3505, 144.5934, 195.1754, 78.6667, 50.1296, 241.7684, 16.2949, 0.0, 44.0227, 9.5, 91.0988, 47.6452, 114.9877, 151.4904, 202.0, 61.2797, 335.1379, 33.0333, 64.2826, 12.5294, 13.7802, 177.2365]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

