created: 20230306221045000
creator: Drevarr
modified: 20230705163521370
modifier: drevarr
tags: ChartData
title: 202303062210_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Estryl", "Demon Sekhmet", "Newtype Khan", "Arcanophage Farra"];
const professions = ["Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.5307, 0.0, 0.0, 2.7518, 0.0, 0.0, 11.0586, 0.0, 0.0745, 7.767, 0.0, 12.6224, 13.4067, 11.0872, 8.0556, 8.0527, 0.0, 0.0, 5.4816, 10.3363, 34.0099, 0.0, 8.3366, 0.203, 8.1051, 0.0, 2.8829, 2.2464, 15.0058, 5.5366, 12.7461, 0.0, 2.4624, 2.7843], [82.1176, 32.8731, 0.0, 45.7493, 7.693, 42.2145, 42.4262, 0.0, 48.2527, 0.0, 42.6903, 21.0634, 93.9859, 0.0, 70.621, 0.0, 57.0272, 0.0, 21.865, 20.5632, 59.7307, 35.2594, 12.0782, 56.5018, 44.802, 14.2222], [90.9489, 38.1965, 25.7412, 12.5448, 35.2947, 24.6156, 36.997, 24.8298, 24.8528, 5.3319, 12.3323, 24.6367, 36.6736, 19.1526, 12.3714, 0.0, 24.6154, 61.5283, 36.3926, 12.3629, 63.0914, 2.0128, 40.3229, 26.5421, 78.6341, 40.5775, 45.7525, 47.1114, 22.0248, 67.3487], [83.3039, 13.9395, 0.0, 13.9312, 0.0, 0.0, 20.333, 26.7991, 0.0, 40.1408, 32.4226, 74.7647, 53.5697, 13.3403, 15.3419, 39.811, 0.0, 177.3878, 58.597, 0.0, 53.4703, 39.9485, 23.5354, 63.5309, 74.817, 25.7706, 34.1398, 39.1932, 40.1083], [95.5622, 68.9293, 10.9461, 67.8214, 27.8986, 32.7388, 48.7746, 46.699, 51.6416, 14.1884, 98.2352, 43.8569, 91.1287, 111.033, 66.9438, 61.8625, 30.232, 39.5693, 155.6554, 0.0, 92.184, 35.1259, 101.2845, 0.0, 71.6602, 51.5981, 158.1451, 115.4672, 39.6299, 49.3396, 86.7312, 32.2822]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

