created: 20230220220953000
creator: Drevarr
modified: 20230705163519788
modifier: drevarr
tags: ChartData
title: 202302202209_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Xyntharos", "Blanco Padre Guard", "Etchery Howls", "Jupi Jupi Jupi", "Zadie Miststep", "Donnica Hackdead", "Fribble Bibble", "Newtype Khan", "Sofya De Meme", "Drevarr Moonwillow", "Mac Aaroni"];
const professions = ["Tempest", "Vindicator", "Firebrand", "Druid", "Dragonhunter", "Tempest", "Tempest", "Scrapper", "Spellbreaker", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 241.3152, 589.6358, 0.0, 0.0, 0.0, 0.0, 0.0, 38.3732, 0.0, 0.0, 0.0, 61.871, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 92.6078, 0.0, 30.7122, 0.0, 0.0, 0.0, 0.0], [9.5836, 187.5938, 558.3584, 13.6534, 9.476, 22.772, 20.1736, 12.6217, 12.5964, 34.0431, 50.337, 30.6768, 77.616, 8.4753, 14.875, 16.0123, 6.5801, 22.842, 13.8138, 26.1792, 20.5834, 85.1822, 29.9484, 48.2621, 29.9174, 26.6537, 12.4211, 10.0233], [0.0, 525.4351, 1047.7909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.1453, 22.1944, 0.0, 0.0, 12.2472, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 567.0907, 1086.598, 0.0, 23.8182, 13.7425, 54.6401, 0.0, 54.2783, 54.7747, 54.9226, 54.6444], [26.9477, 89.9186, 756.4483, 58.4917, 59.2192, 0.0, 92.2165, 62.0578, 23.8164, 127.5681, 171.9598, 56.5488, 140.8176, 0.0, 0.0, 0.0, 0.0, 0.0, 34.0798, 0.0, 119.5191, 127.4021, 59.3046, 70.0215, 0.0, 33.2299], [0.0, 564.5052, 1245.3015, 0.0, 30.6205, 23.0391, 0.0, 0.0, 30.6986, 30.8009, 30.7591, 30.8246, 108.2928, 30.7858, 0.0, 0.0, 1.0678, 0.0, 3.6894, 0.0, 0.0, 153.6038, 30.9213, 92.1959, 61.6268, 39.2083, 0.0, 24.6764], [91.885, 81.3419, 175.3488, 90.9137, 276.5232, 169.1469, 783.2947, 273.5541, 360.6611, 455.3839, 284.1733, 165.1196, 200.2274], [6.5455, 946.5876, 1943.2495, 0.0, 0.0, 0.0, 12.7472, 27.5177, 25.8185, 148.3306, 58.0482, 0.0, 121.3766, 0.0, 0.0, 0.0, 0.0, 0.0, 35.4526, 0.0, 5.1903, 289.7045, 69.2874, 151.4267, 0.0, 0.0, 0.0, 64.0537], [9.8306, 583.4657, 1793.2342, 46.1992, 48.4277, 0.0, 106.3036, 0.0, 159.2905, 103.4387, 61.6039, 0.0, 204.3149, 46.2852, 45.9, 97.7576, 0.0, 75.9132, 47.3444, 48.2112, 61.8926, 137.5858, 60.5313, 145.3791, 233.4963, 93.9356, 61.4674, 70.6881], [201.1363, 596.4605, 197.757, 62.169, 191.561, 116.479, 191.6298, 156.9968, 208.3104, 275.0503, 860.2027, 289.9242, 338.0716, 527.7623, 144.2289, 101.6341, 341.6513], [83.0661, 1902.6554, 2980.0354, 65.9308, 71.4722, 116.5534, 108.141, 44.4353, 225.234, 306.4502, 166.3049, 144.0331, 396.7286, 143.7705, 0.0, 89.4186, 17.2294, 98.5365, 46.0918, 91.5408, 30.7508, 530.0818, 143.4816, 169.6287, 314.3668, 95.3306, 45.6221, 54.5077], [0.0, 682.8646, 2652.2026, 161.3682, 126.1361, 121.4506, 105.1169, 72.5515, 227.111, 342.738, 92.2345, 205.2758, 641.4778, 150.7365, 126.2196, 89.1052, 208.5183, 72.6726, 93.2688, 862.3243, 278.3763, 351.1154, 453.2804, 157.4063, 87.8069, 194.8339]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

