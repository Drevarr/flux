created: 20230520000848000
creator: Drevarr
modified: 20230705163530862
modifier: drevarr
tags: ChartData
title: 202305200008_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Smol Gluvs", "Primal Clone", "High Sorcer Baradun", "Tegan Parker", "Black Raspberry Pie", "Needragee", "Madame Charrlotte", "Spreadflamesoflight", "Air One Com", "Venomina The Siren", "Artakama Nahid", "Miphest\u00f6", "Grasszanine", "Jupi Jupi Jupi", "Ryvalia Fazebringer", "Zaylen Harker", "Drevarr Moonwillow", "Koralia Danai", "Blanco Padre Guard", "Solus Sanctus", "Tika Fiery", "Aronorf Xideliesi", "Bella Sassy"];
const professions = ["Scourge", "Scourge", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Scourge", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.7495, 541.4787, 10.6672, 15.5522, 0.0, 87.9622, 0.0, 0.0, 164.0566, 0.0, 50.9692, 0.0, 0.0, 100.0224, 0.0, 139.2972, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.3138, 55.4051, 56.6352], [106.1802, 336.6468, 0.0, 25.9961, 0.0, 58.7044, 0.0, 0.0, 77.1795, 249.8177, 124.6841, 31.3632, 83.9318, 27.9533, 0.0, 98.1842, 0.0, 19.6272, 8.023, 0.0, 0.0, 45.0322, 0.0, 0.0, 0.0, 38.0201, 18.9308], [50.7051, 426.9573, 14.2871, 1.2487, 59.312, 20.6378, 0.0, 47.9846, 17.0544, 0.0, 33.9794, 49.0248, 1.6675, 8.4787, 229.2895, 25.4927, 23.7126, 0.0, 0.0, 0.0, 0.0, 43.945, 27.3725, 136.631, 24.2411, 326.8061], [113.0013, 568.764, 0.1928, 175.729, 45.5692, 155.0978, 43.164, 72.9383, 97.7117, 10.8776, 241.6625, 96.228], [0.0, 678.2895, 49.0732, 77.6477, 67.3218, 141.2554, 0.0, 126.4234, 31.8683, 0.0, 0.0, 94.8024, 90.1387, 44.2042, 0.0, 121.0398, 196.4876, 21.573, 0.0, 30.7507, 14.3123, 83.4799, 134.4717, 38.1711, 68.0064, 41.4259, 0.0], [352.9323, 534.177, 30.4164, 65.047, 66.4209, 329.2604, 0.0, 36.3126, 9.2294, 0.0, 237.1134, 18.8496, 25.9392, 26.2973, 95.8095, 54.9074, 31.8402, 6.7257, 79.862, 7.3114, 0.0, 101.8846, 101.7766, 0.0, 75.1934, 52.9343, 30.7298], [17.2935, 56.0347, 203.3143, 0.0, 79.7826, 2.3232, 75.5768, 130.3491, 0.0, 152.9075, 184.2192, 211.4971, 75.889, 49.9375, 212.1239, 210.0615, 108.3303, 0.0, 55.6107, 61.7025, 233.1722, 0.0, 157.8058, 25.599, 124.9645], [98.5005, 1512.6048, 43.5683, 235.781, 0.0, 218.1436, 31.218, 81.5246, 13.1419, 23.8329, 127.9335, 210.672], [227.2428, 597.5865, 15.9793, 251.5603, 31.3677, 195.2408, 0.0, 40.8302, 138.7197, 131.4614, 59.7168, 235.3056, 49.3709, 0.0, 0.0, 82.6169, 5.3298, 0.0, 11.9117, 15.8506, 58.4584, 217.0004, 0.0, 228.4397, 0.0, 36.6031], [111.141, 1303.9299, 6.7901, 201.271, 0.0, 53.7337, 0.0, 95.03, 8.2931, 26.0329, 105.6519, 210.672, 27.4214, 72.3341, 0.0, 229.5699, 132.3882, 101.097, 0.0, 29.795, 12.4626, 58.359, 0.0, 79.1347, 52.311, 24.8041], [138.7593, 845.46, 104.6795, 198.887, 15.561, 193.7936, 15.4176, 20.3029, 74.5712, 0.0, 189.9506, 138.7584, 262.4491, 0.0, 53.3215, 45.373, 186.0976, 142.5087, 62.0581, 0.0, 40.4624, 0.0, 91.5814, 72.3548, 172.9526, 46.2785, 77.4539], [25.1379, 704.4219, 0.0, 110.682, 10.172, 55.1179, 13.0944, 103.5715, 80.9248, 98.1019, 106.0233, 349.1136, 179.0731, 0.3754, 25.333, 67.4848, 195.3983, 61.8849, 100.9544, 97.6448, 109.3044, 272.8985, 4.257, 440.8051, 45.0542, 136.9208], [105.0831, 1377.7155, 34.7861, 198.2059, 0.0, 39.1992, 0.0, 218.9044, 171.4134, 12.5479, 76.6858, 209.3256, 727.224, 43.1222, 34.8975, 297.1223, 55.469, 97.1631, 0.0, 0.0, 46.2207], [53.5194, 700.5789, 61.4326, 61.8684, 61.4578, 245.8284, 4.488, 215.1479, 90.589, 272.5913, 67.1233, 455.2416, 277.8274, 59.2186, 79.665, 58.6265, 89.3201, 6.9372, 0.0, 24.6451, 36.483, 174.3474, 418.0048, 7.9606, 380.9904, 61.7047, 135.0854], [290.97, 1336.9797, 6.2118, 701.3266, 73.71, 129.804, 0.0, 147.0394, 25.2472, 239.5105, 139.6314, 0.0, 219.1862, 0.0, 0.0, 73.3001, 204.3638, 112.095, 64.7514, 0.0, 0.0, 0.0, 126.9132, 0.0, 9.3509, 82.5401, 123.4962], [0.0, 599.508, 0.0, 0.0, 0.0, 0.0, 0.0, 17.8433, 0.0, 0.0, 1071.1879, 134.9568, 24.3643, 11.327, 0.0, 100.2128, 825.6667, 0.0, 0.0, 17.4413, 859.107, 18.7902, 35.6833, 0.0, 441.7325, 0.0, 73.5733], [366.4314, 1941.0993, 46.0958, 865.1359, 65.4381, 391.3624, 6.7452, 118.6869, 99.0493, 314.2684, 536.5224, 171.3096, 179.629, 85.4938, 78.349, 43.8854, 267.709], [126.0711, 1780.8462, 31.8515, 367.2372, 18.5258, 343.0398, 2.0328, 101.4697, 129.4128, 87.8762, 172.0325, 308.484, 238.0848, 15.6106, 93.154, 226.7299, 396.8294, 217.2951, 3.9407, 0.0, 153.6902, 51.3599, 198.8072, 12.6575, 555.2568, 3.6729, 73.6258], [57.4785, 886.1958, 30.3093, 436.2574, 99.6232, 175.6097, 131.142, 188.3606, 122.0894, 136.1123, 248.5327, 499.5936, 464.219, 148.1347, 59.032, 277.7153, 397.4998, 122.247, 0.0, 0.0, 74.4374, 255.2898, 623.6674, 111.5192, 607.9618, 63.8417, 79.971], [204.7284, 1372.7196, 168.8324, 895.1052, 7.7314, 223.1143, 125.9544, 93.1965, 148.2061, 184.4707, 191.9003, 79.596, 434.6669, 81.8726, 47.094, 220.4412, 224.9761, 97.6284, 24.0408, 28.3162, 160.2779, 132.4308, 528.3068, 26.2373, 430.9133, 77.7987, 222.0834], [158.5548, 1066.4325, 73.5777, 776.5903, 0.0, 88.2138, 0.0, 254.2332, 184.455, 204.4333, 539.5861, 446.7672, 697.5792, 136.0128, 0.0, 253.1693, 240.2259, 229.9005, 30.533, 76.7078, 131.9542, 7.6767, 250.8381, 26.8901, 699.384, 138.0343, 32.6701], [139.1886, 1136.3751, 141.2006, 1023.0422, 175.6919, 309.2518, 207.8472, 285.895, 102.7946, 106.2499, 478.3117, 38.6496, 186.4843, 167.4326, 41.736, 561.4489, 543.8809, 284.4675, 124.173, 2.4346, 168.5042, 127.677, 498.9515, 218.3699, 220.6344, 120.3821, 47.5106], [159.6996, 2503.7145, 39.3485, 421.1592, 0.0, 290.8162, 41.4084, 334.1478, 136.4686, 99.813, 701.499, 578.3976, 378.2491, 89.5786, 0.0, 14.2678, 866.3886, 376.4277, 11.5952, 0.0, 20.3984, 57.3021, 363.9525, 141.7723, 499.6152, 121.8067, 351.5053], [315.9648, 1919.1942, 167.2902, 994.3217, 145.2742, 345.9342, 72.666, 311.7431, 116.3043, 381.4486, 769.0866, 923.6304, 919.6373, 168.4925, 108.57, 342.6305, 691.3513, 302.022, 115.0159, 263.641, 221.082, 771.5863, 53.9078, 380.6813, 133.9384, 371.0654]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

