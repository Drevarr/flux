created: 20230208220141000
creator: Drevarr
modified: 20230705163518827
modifier: drevarr
tags: ChartData
title: 202302082201_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Tegan Parker", "Raziel Umbra", "Zadie Miststep", "Mac Aaroni", "Arka\u00f1", "Black Raspberry Pie"];
const professions = ["Scrapper", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[289.1347, 22.861, 26.6952, 2.7038, 0.0, 18.6082, 0.0, 224.4528, 25.4942, 11.8598, 61.5125], [334.9382, 30.3106, 23.8032, 0.0, 0.0, 10.8932, 0.0, 282.4536, 26.1851, 34.2163, 48.2125], [185.2589, 0.0, 0.0, 34.299, 9.338, 37.631, 0.0, 407.3784, 53.8902, 35.5114, 165.585], [0.0, 42.3982, 85.8211, 564.2208, 128.8528, 88.7784, 266.3325], [902.5747, 0.0, 32.3679, 0.0, 0.0, 93.8242, 0.0, 447.876, 140.46, 74.124, 124.355], [928.7482, 42.8818, 256.8301, 86.3096, 0.0, 36.0189, 172.557, 821.2776, 129.8892, 33.9778, 598.8325], [1133.2282, 178.2782, 383.7435, 121.3377, 40.825, 46.5436, 135.8834, 1188.5016, 237.7387, 92.5613, 855.855], [1325.4394, 0.0, 317.7841, 88.4969, 68.218, 115.0118, 149.8543, 1550.9208, 280.7127, 182.2598, 822.9375], [1417.8643, 33.0576, 383.8547, 101.2565, 121.831, 55.272, 275.3428, 1307.2488, 233.5933, 101.5925, 1210.3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

