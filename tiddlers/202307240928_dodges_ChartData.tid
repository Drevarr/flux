created: 20230724092821000
creator: Drevarr
tags: ChartData
title: 202307240928_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Whip \u00d1 Sl\u00e0pper", "Panacea Vandrish", "Audra Storm", "Erin Celes", "Charr Surethang", "Jerryatric Reflexes", "Danaeryn", "World Devourerer", "Surethang Smarts", "Alfir Strom", "Mierin Farshaw", "Fluffernaut", "Morv\u00e4rth", "Master Marcovius", "A\u00fcrora Windrunner", "Trodek", "Govinda Ektar", "Dinah M\u00f3e Humm", "Suredude", "Jakeki", "Nyriss Hrafn", "Gamora Titus", "Reina Armitage", "Smol Gluvs", "Lady Fluffs", "Mmathuss", "Sakis Ranger", "Free H\u00e4nd", "Luke The Ghastly", "Darth Sies", "Flick Embermage", "Jimbo The Pleb", "Legoh Brave", "Alarics Clone", "Jerryatric Reflexes", "Elonith Requiem", "Gestern Yesteryear", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Weaver", "Renegade", "Berserker", "Berserker", "Tempest", "Guardian", "Holosmith", "Druid", "Chronomancer", "Firebrand", "Reaper", "Harbinger", "Firebrand", "Scrapper", "Vindicator", "Dragonhunter", "Weaver", "Berserker", "Berserker", "Firebrand", "Druid", "Reaper", "Druid", "Firebrand", "Druid", "Renegade", "Scourge", "Willbender", "Tempest", "Berserker", "Tempest", "Chronomancer", "Spellbreaker", "Reaper", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 2, 0, 2, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 6, 1], [1, 5, 3, 2], [3, 4, 1, 3, 0, 0], [3, 3, 3, 3, 0], [6, 3, 2, 0, 0, 1, 0], [2, 2, 2, 0, 2, 1, 4], [0, 5, 2, 7], [2, 4, 3, 6, 0], [7, 5, 1, 1, 1, 0, 0, 0, 0], [4, 3, 2, 1, 1, 2, 2], [5, 1, 7, 4], [7, 2, 1, 3, 4], [5, 4, 6, 0, 0, 1, 1], [1, 2, 5, 2, 1, 8, 1, 0, 0, 1, 0], [3, 2, 1, 2, 2, 3, 0, 1, 2, 5, 1], [3, 3, 3, 4, 3, 4, 3, 0, 0, 0, 0], [8, 2, 12, 1, 3], [0, 6, 10, 2, 2, 4, 2], [5, 5, 7, 5, 4], [0, 3, 1, 7, 1, 1, 5, 0, 0, 0, 0, 3, 1, 4, 0, 1, 0, 0, 0, 0, 0], [4, 5, 4, 5, 0, 4, 4, 5, 1, 0, 0, 2, 0], [0, 9, 0, 2, 8, 4, 2, 0, 3, 5, 0, 1, 1, 0, 0], [1, 3, 10, 6, 11, 6], [0, 8, 7, 0, 10, 1, 10, 5], [10, 7, 4, 5, 9, 3, 5], [5, 1, 5, 11, 9, 0, 5, 2, 3, 3, 0, 0, 1, 1, 0, 0, 0], [8, 13, 2, 3, 2, 5, 4, 2, 1, 4, 2, 4, 0, 0, 0, 0], [9, 4, 5, 13, 0, 2, 2, 5, 3, 2, 3, 1, 0, 4], [0, 3, 3, 6, 14, 5, 7, 6, 3, 5, 0, 3, 7, 0, 2, 4, 3, 1, 0, 0, 0, 0], [8, 12, 1, 8, 13, 3, 1, 7, 3, 3, 4, 6, 0, 6], [3, 4, 3, 1, 7, 1, 12, 3, 5, 4, 2, 7, 1, 0, 2, 2, 6, 0, 6, 3, 0, 1, 2, 1, 1], [0, 4, 11, 6, 5, 6, 7, 6, 5, 7, 4, 7, 3, 5, 1, 0], [3, 11, 9, 1, 8, 1, 8, 4, 9, 14, 3, 5, 6, 2, 6, 1, 5, 4, 0, 8], [13, 1, 13, 1, 10, 3, 8, 17, 5, 3, 9, 5, 5, 2, 6, 4, 0, 6], [5, 3, 2, 18, 3, 12, 3, 0, 14, 3, 9, 6, 6, 5, 2, 2, 2, 6, 8, 0, 3, 3, 8, 0, 0, 1, 0], [6, 10, 2, 11, 4, 12, 8, 0, 12, 2, 11, 4, 4, 10, 3, 3, 4, 5, 4, 3, 4, 4, 7, 4, 3, 3, 0, 2, 2], [7, 8, 2, 21, 2, 16, 9, 0, 13, 8, 8, 5, 10, 13, 7, 1, 3, 5, 0, 3, 7, 7, 1, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

