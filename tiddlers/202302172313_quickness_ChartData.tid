created: 20230217231312000
creator: Drevarr
modified: 20230705163519499
modifier: drevarr
tags: ChartData
title: 202302172313_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Rag Man", "Arcanophage Farra", "Ark Darkness", "Blanco Padre Guard", "Tyrisai", "Aronorf Xideliesi"];
const professions = ["Scrapper", "Harbinger", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.3056, 0.0, 2.6852, 11.2269, 21.6384, 6.7262, 2.7086, 0.0, 2.5958, 7.6003, 2.2729, 0.0, 6.6816, 4.9728, 16.3286, 1.1459, 0.0, 11.1965, 5.424, 5.1226, 2.3846, 0.0, 0.0, 5.3705, 0.0, 10.8048, 16.038], [28.0426, 175.584, 37.801, 56.2046, 0.0, 38.41, 77.4654, 40.3016], [29.9074, 41.1221, 20.5016, 39.9526, 39.1745, 17.0883, 0.0, 18.8006, 16.0666, 94.6109, 50.6453, 54.6816, 35.1322, 71.8013, 37.4148, 0.0, 49.8706, 0.0, 18.2602, 28.5494, 28.1201, 14.18, 14.835, 15.0306, 14.9079, 7.546], [73.2946, 6.5268, 45.8483, 64.1038, 42.0454, 30.6158, 50.3064, 13.4093, 105.0067, 0.0, 0.0, 85.0944, 70.8557, 139.9118, 77.1214, 15.3566], [20.3026, 9.193, 21.8148, 100.2893, 47.9651, 23.7366, 27.8251, 0.0, 35.7898, 14.8685, 102.0365, 11.0149, 36.5952, 7.3382, 149.5301, 91.071, 104.4662, 13.632, 9.2736, 48.8189, 0.0, 74.4345, 25.2655, 7.5538, 26.6246, 36.234], [45.9374, 35.6227, 21.266, 160.4378, 25.1096, 6.6483, 25.9099, 65.1168, 28.6157, 201.6269, 34.6766, 0.0, 108.7104, 44.809, 208.8053, 81.3062, 86.0794], [77.9314, 23.9947, 29.0472, 133.5936, 114.954, 41.1624, 19.5077, 0.0, 35.0064, 20.3059, 30.2266, 66.614, 10.5977, 55.8336, 55.1846, 123.4714, 100.3375, 102.3091, 17.472, 48.3331, 56.7014, 7.0389, 36.671, 28.1175, 7.0914, 33.9646, 35.464]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

