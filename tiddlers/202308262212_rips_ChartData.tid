created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Illusionist Zeroo", "Kylo Milan", "Jamaass", "Luke The Ghastly", "Forever Dreaming", "Darkandshadow", "Loganlek", "Rhaevynn", "Bee Nemesis", "Zaedy Zae", "Vee Usagi", "Blaize Harlot", "Morv\u00e4rth", "Daphne Agla\u00e9", "Talia The Pestilent", "Be\u00eb", "Venomina The Fierce", "Rahani Sunray", "Rina Of Theros", "Newtype Khan"];
const professions = ["Chronomancer", "Chronomancer", "Reaper", "Scourge", "Scourge", "Virtuoso", "Spellbreaker", "Reaper", "Spellbreaker", "Druid", "Reaper", "Scourge", "Reaper", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Chronomancer", "Reaper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0396, 0.0426, 0.0417, 0.1667, 0.13, 0.0, 0.0641], [0.0, 0.0263, 0.54, 0.0], [0.2083, 0.0351, 0.03, 0.0833, 0.2464, 0.0616, 0.0175, 0.2353, 0.25, 0.1118], [0.2564, 0.2174, 0.1644, 0.1462, 0.2059], [0.1014, 0.0548, 0.0819, 0.0, 0.23, 0.2434, 0.1422], [0.117, 0.0294, 0.14, 0.3158, 0.0403, 0.0671, 0.0544], [0.2678, 0.0735, 0.0599], [0.0907, 0.1188, 0.0426, 0.0, 0.1228, 0.11, 0.0, 0.1346, 0.2174, 0.3219, 0.0526, 0.0588, 0.18], [0.1981, 0.245], [0.101, 0.0198, 0.0426, 0.0417, 0.0877, 0.1, 0.0705, 0.0435, 0.089, 0.0409, 0.0588, 0.05, 0.1842, 0.1114, 0.0288, 0.0454], [0.0825, 0.0693, 0.0, 0.125, 0.0877, 0.25, 0.0, 0.2756, 0.1159, 0.3014, 0.1462, 0.0294, 0.14, 0.0132, 0.09], [0.1052, 0.1683, 0.3191, 0.25, 0.0526, 0.26, 0.0, 0.1987, 0.2319, 0.2534, 0.117, 0.3529, 0.24], [0.0907, 0.0297, 0.0426, 0.0, 0.1228, 0.12, 0.1218, 0.1594, 0.1575, 0.117, 0.0, 0.27, 0.2697, 0.128, 0.0256, 0.029], [0.0907, 0.1089, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1218, 0.029, 0.089, 0.076, 0.0294, 0.26, 0.375, 0.282, 0.0927, 0.0708], [0.1096, 0.2749, 0.2059, 0.24, 0.6316, 0.1185, 0.147, 0.2341], [0.1216, 0.1188, 0.1277, 0.0, 0.0175, 0.17, 0.0, 0.0513, 0.2029, 0.1233, 0.0409, 0.0, 0.1, 0.4539, 0.5308, 0.0511, 0.1034], [0.1594, 0.1438, 0.0936, 0.1765, 0.22, 0.6908, 0.6066, 0.0735, 0.1434], [0.56, 0.0, 0.6161, 0.262, 0.3031], [0.0784, 0.1881, 0.2553, 0.0417, 0.0175, 0.25, 0.2244, 0.1884, 0.1986, 0.1988, 0.0882, 0.39, 0.6842, 0.4953, 0.1342, 0.2033], [0.099, 0.2772, 0.3191, 0.1667, 0.0088, 0.38, 0.0, 0.2372, 0.4928, 0.2808, 0.1228, 0.1176, 0.21, 0.5724, 0.5616, 0.1885, 0.1797]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

