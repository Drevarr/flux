created: 20230310230833000
creator: Drevarr
modified: 20230705163521641
modifier: drevarr
tags: ChartData
title: 202303102308_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Alatreon", "Rayge Storm", "Tegan Parker", "Venomina The Siren", "High Sorcer Baradun", "Mac Chiato", "Zadie Miststep", "Zefirokai"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.0475, 79.4052, 75.4952, 60.053, 20.1526, 194.4375], [54.8504, 56.028, 0.0, 456.7375], [20.0475, 59.9886, 39.974, 0.0, 0.0, 196.725, 0.0, 0.0, 0.0, 0.0, 19.901, 19.9514, 37.3142, 0.0, 19.9586, 0.0, 0.0, 0.0, 0.0, 20.1204, 0.0, 39.8894, 20.0332, 16.9902, 14.9292, 18.1656, 0.0, 20.0376, 0.0, 19.9563, 19.9534], [38.214, 77.8113, 57.2792, 39.6865, 34.983, 247.05, 0.0, 59.98, 0.0, 17.9998, 0.0, 19.9514, 19.8979, 0.0, 19.9586, 0.0, 0.0, 0.0, 15.6773, 20.1204, 0.0, 19.9447, 17.9608, 34.5479, 20.0129, 17.1216, 18.198, 0.0, 0.0, 0.0, 49.5415], [27.522, 90.2727, 20.0376, 71.323, 20.1526, 455.2125, 0.0, 120.3957, 2.5433, 0.0, 19.901, 59.6486, 19.9233, 19.9586, 36.6194, 0.0, 19.8528, 40.2408, 0.0, 0.0, 19.9404, 20.088, 8.0316, 0.0, 19.9563, 54.6386], [19.9962, 36.3308, 54.74, 16.445, 674.05, 19.9395, 114.7317, 34.4466, 17.9998, 19.901, 19.9514, 37.1789, 19.5172, 32.2819, 53.7108, 0.0, 0.0, 31.7115, 0.0, 55.8601, 53.1916, 35.6831, 39.897, 29.754, 49.356, 36.1008, 19.1923, 39.8343, 81.4918], [36.135, 136.7856, 67.9052, 97.566, 17.4317, 791.475, 0.0, 134.7734, 40.2026, 54.125, 12.0874, 33.3633, 55.9488, 19.9233, 33.3535, 31.3685, 18.8163, 19.8528, 0.0, 40.2408, 14.9553, 72.0558, 79.9946, 40.1861, 53.3461, 39.8025, 59.076, 20.0376, 16.8575, 59.8298, 70.6138], [63.5085, 216.9153, 191.774, 90.965, 37.4647, 1022.5125, 57.015, 276.9536, 109.2298, 96.5292, 19.901, 46.4661, 74.3578, 38.9583, 76.8873, 0.0, 19.7892, 55.2363, 0.0, 40.2408, 16.66, 105.7968, 107.8339, 46.7324, 155.4052, 57.8637, 121.122]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

