created: 20230227222028000
creator: Drevarr
modified: 20230705163520459
modifier: drevarr
tags: ChartData
title: 202302272220_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Nova", "Skye Nightroad", "Sp\u00edcy Cheese", "Mike The Archmagus", "What Charr U Saying", "Tootsie Pop Bringer", "Mac Aaroni", "Tegan Parker", "Jeckyll Mbs", "High Sorcer Baradun", "Venomina The Siren", "Arcanophage Farra", "Zadie Miststep", "My Birthday Girl", "Xanvias Tseli", "Smol Daddy Tika", "Cat Wigglebooty", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Weaver", "Scrapper", "Berserker", "Weaver", "Berserker", "Scrapper", "Tempest", "Tempest", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.877, 0, 0, 0, 0, 0, 0.202, 0, 0.168, 0.228, 0, 0, 0.51, 0, 0.611, 0.168, 0.481], [0.995, 0.294, 0.767, 0.487, 1.394, 1.171, 0.463, 0.197, 0.27, 0.391, 1.714], [0, 0.36, 0.249, 0.454, 0.587, 0, 0, 1.048, 0, 0, 0, 0.28, 0.139, 0, 0, 0, 0, 0, 0.208, 0], [0, 0.406, 0, 0, 0, 0, 0, 0, 0, 0, 0.404, 0, 0.168, 0.309, 0.544, 0, 0.774, 0.622, 0.306, 0.042], [0, 0.297, 0.404, 0, 0.543, 0, 0.509, 0.467, 0.802], [0.075, 0.646, 0.968, 0, 0.45, 0.352, 0.675, 0, 0.646, 0, 0, 0, 0.253, 0.239, 0, 0.462, 0.026, 0, 0.153, 0.345, 0.241], [0.041, 0.456, 0.375, 0, 0.256, 0.704, 0.925, 0, 0.646, 0.827, 0.202, 0.763, 0.168, 0.297, 0.273, 0, 0.465, 0, 0.305, 0.345, 0.477], [0.526, 0.985, 0.605, 0.711, 0.202, 0.744, 0.337, 0.479, 0, 0, 0.481, 0, 0.611, 0.454, 0.478], [0, 0.489, 0.329, 0, 0.408, 0.767, 0.877, 0, 0, 0, 0.0, 0, 0.272, 0.455, 0, 0.558, 0, 0, 0.517, 0.8], [0.166, 0, 0.337, 0.372, 0.611, 0, 0, 0.044, 0.404, 0, 0.042, 0.447, 0.545, 0.529, 0.369, 0.621, 0.611, 0.627, 0.962], [0, 0.504, 0.56, 0.298, 0.704, 0.429, 0.525, 0.323, 0.62, 0, 0.763, 0.337, 0.424, 0.273, 0, 0.51, 0, 0.611, 0.545, 0.947], [0.277, 0.635, 0.455, 1.0, 0.586, 0, 0, 0, 0, 0, 1.271, 0, 0.477, 0.455, 0, 0.567, 0, 0.509, 0.491, 0.802], [0.166, 0.297, 0.332, 0.283, 0.525, 0.526, 0.72, 0.485, 0.621, 0.402, 0.763, 0.337, 0.651, 0.273, 0.526, 0.511, 0.621, 0.914, 0.661, 0.481], [0.083, 0.846, 0.875, 0, 0.145, 0.724, 0.894, 0.302, 1.787, 0.413, 0, 1.181, 0, 0.743, 0.401, 0, 0.606, 0.311, 0.458, 0.621, 0.241], [0.276, 0.782, 0.665, 0, 0.625, 0.761, 1.095, 0, 0.808, 0.306, 0.336, 0, 0.281, 0.667, 0.455, 0, 0.284, 0, 0.509, 0.795, 0.663], [0.504, 0.445, 0.332, 0.556, 0.472, 1.087, 1.589, 0, 0, 0, 0.337, 1.171, 0.561, 0.608, 0.455, 0.22, 1.074, 1.265, 0.509, 0.716, 1.0], [1.013, 0.896, 0.753, 0.65, 0.79, 0.329, 0.142, 0.62, 0.93, 0.655, 0.413, 0.821, 0.979, 0.034, 0, 1.063, 0, 0.916, 0.951], [0.723, 0.845, 0.498, 0, 0.944, 0.879, 1.571, 0.985, 0.56, 0.309, 0.801, 0.763, 1.117, 1.495, 0.954, 0, 1.744, 1.321, 0.837, 1.078], [1.184, 1.804, 1.347, 1.597, 1.183, 1.315, 0.294, 0.646, 1.196, 0.505, 0.763, 1.431, 1.666, 1.195, 1.189, 2.239, 2.484, 2.248, 1.77, 2.065]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

