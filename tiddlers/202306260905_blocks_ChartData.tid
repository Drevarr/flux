created: 20230626090515000
creator: Drevarr
modified: 20230705163539027
modifier: drevarr
tags: ChartData
title: 202306260905_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Necrotic Windrunner", "Geradenil", "Latedoctor", "Koralia Danai", "Yngvar The Burdened", "Louie Runesoldier", "Urilstormwalker", "Utopia Skye", "Elonith Requiem", "Gamora Titus", "Charr Surethang", "Brace Stonebrow", "Drevarr Moonwillow", "Koralia Danai", "Traidoruns Maximus", "Gestern Yesteryear", "Illusive Heart"];
const professions = ["Vindicator", "Reaper", "Vindicator", "Reaper", "Firebrand", "Scourge", "Tempest", "Firebrand", "Tempest", "Reaper", "Dragonhunter", "Berserker", "Firebrand", "Scrapper", "Dragonhunter", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 3, 2, 4, 2, 9, 2, 0, 2, 14, 0, 1, 6], [0, 20, 32], [5, 0, 3, 36, 9, 1, 29], [4, 24, 12, 3, 2, 1, 30, 7, 3, 12], [2, 11, 11, 5, 9, 10, 12, 7, 37], [1, 4, 1, 4, 3, 4, 9, 8, 2, 16, 20, 3, 0, 1, 23, 2, 3, 5], [6, 7, 12, 6, 21, 23, 2, 1, 0, 34, 1], [45, 7, 1, 43, 7, 1, 12], [2, 25, 46, 4, 2, 0, 53], [9, 3, 7, 5, 1, 5, 3, 10, 5, 8, 1, 28, 22, 3, 2, 3, 35, 5], [0, 2, 13, 7, 57, 7, 12, 4, 4, 6, 19, 13, 2, 2, 11, 5, 1], [0, 4, 6, 0, 6, 7, 2, 9, 5, 10, 9, 8, 3, 27, 20, 3, 1, 3, 35, 0, 1, 6], [7, 10, 5, 29, 47, 8, 2, 0, 43, 8, 3, 8], [1, 2, 5, 2, 10, 10, 10, 13, 9, 1, 31, 32, 8, 0, 1, 37], [77, 43, 5, 1, 0, 67], [2, 11, 10, 53, 4, 8, 7, 5, 9, 5, 14, 10, 11, 28, 42, 5, 0, 0, 39, 6, 4, 12], [1, 1, 10, 6, 43, 2, 12, 10, 3, 9, 8, 7, 13, 14, 7, 35, 32, 8, 1, 3, 43, 5, 3, 11], [0, 0, 8, 6, 63, 2, 7, 22, 26, 31, 6, 11, 9, 36, 3, 76, 69, 6, 0, 4, 54, 3, 4, 10]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

