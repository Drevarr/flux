created: 20231009220917000
creator: Drevarr
tags: ChartData
title: 202310092209_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Jmbrage Warrior", "Ryvalia Fazebringer", "Mythical Moonz", "Drevarr Moonwillow", "Belvyn Brightblade", "Fang Shiyu", "Amiti\u00e9l", "Sub Train", "Atria Ruinheart", "Ka Otik Praetor", "Sygaldry Verdandi", "Bella Bitty", "Solus Luxes"];
const professions = ["Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.9361, 82.8076, 13.212, 12.1105, 17.8888, 176.2368, 21.7, 29.7254], [8.527, 33.0072, 111.3525, 0.0, 93.8345, 0.0, 104.5048, 58.2434, 9.236, 118.653, 6.276, 9.3272, 0.0, 60.4992, 0.0, 0.0], [196.0078, 49.4082, 262.7155, 0.0, 77.4005, 0.0, 208.0646, 0.0], [11.3864, 47.6392, 291.991, 0.0, 82.6988, 0.0, 100.0825, 51.2109, 6.9943, 149.0536, 5.076, 0.0888, 130.9939, 5.068, 0.8155], [88.3338, 216.2479, 487.9714, 0.0, 268.2389, 6.8019, 318.1692], [0.0, 322.2452, 269.2256, 0.0, 131.008, 0.0, 177.821, 229.7277, 36.137, 152.6835, 0.0, 0.0, 0.0, 341.8205, 3.43, 0.0], [90.7847, 186.1332, 198.4549, 0.0, 104.8064, 0.0, 561.393, 104.7659, 25.1973, 220.0639, 5.1, 0.0, 0.0, 210.0374, 0.0, 0.0], [18.9943, 111.1014, 551.3186, 0.0, 296.7331, 16.5742, 418.7172, 230.0883, 57.7475, 237.7598, 8.6757, 0.0, 132.0461, 0.0, 0.0], [138.6279, 253.6787, 670.5895, 221.2398, 29.8623, 412.2002, 159.5832, 29.9498, 410.4078, 18.288, 105.5893, 68.1274, 25.102, 0.0], [80.6237, 133.73, 645.3496, 44.5826, 295.0955, 0.0, 593.978, 317.1829, 51.2016, 415.6258, 50.436, 14.953, 0.0, 201.0941, 29.974], [68.3183, 690.9385, 806.687, 29.1621, 296.8969, 661.4755, 207.5483, 41.1585, 462.5879, 0.0, 22.2963, 0.0, 211.6157, 71.918, 10.2176], [215.9327, 581.0281, 1053.1472, 54.7079, 428.5599, 70.8029, 840.9258, 404.4578, 99.3544, 514.768, 118.2327, 63.9693, 567.9034, 50.512, 113.7689], [171.868, 584.9413, 1301.587, 39.6749, 343.896, 7.4333, 1185.6285, 451.1606, 106.0796, 645.8989, 61.632, 81.8124, 116.409, 640.2394, 86.9536]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

