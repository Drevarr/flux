created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Crusader Siolith", "Sub Train", "Arcanophage Farra", "Newtype Khan", "Darks Na", "Sygaldry Verdandi", "Bella Sassy", "Solus Luxes", "Koralia Danai"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 6.5472, 8.2506, 0.0, 0.0, 2.5553, 12.8242, 2.5623, 0.0, 0.0, 4.1633, 2.7628, 12.7862, 2.8509, 2.5604, 7.9751, 0.0, 5.0008, 5.1611, 8.2908, 10.5178], [131.4768, 116.1072, 46.5667], [80.2256, 47.4397, 165.9483, 37.904], [226.2624, 59.5584, 22.1646, 14.1856, 0.0, 27.9443, 0.0, 48.087, 10.6504, 14.4717, 27.3372, 48.438, 79.6439, 9.2157, 15.2354, 33.4577, 30.5257, 22.9026, 15.3419, 80.703, 7.0592], [178.1052, 66.0528, 83.065, 3.5636, 36.3903, 0.0, 13.1586, 45.5598, 17.0736, 11.5943, 34.0586, 15.2849, 79.952, 46.5426, 42.157, 41.3384, 22.9863, 24.0198, 0.0, 53.5374, 14.175], [125.9076, 131.4192, 55.5514, 6.2229, 41.8673, 31.5841, 76.7286, 4.0015, 33.9366, 50.2854, 93.4315, 83.5567, 59.67, 69.5097, 76.1175, 22.277, 9.7888, 9.6506, 58.3002, 41.1359], [117.39, 169.6464, 27.7582, 22.1521, 103.7182, 35.3126, 117.1638, 9.9039, 33.0057, 57.4081, 102.9038, 102.1043, 89.4056, 95.7469, 106.0359, 41.743, 15.3482, 51.9645, 121.5396, 34.2751], [285.4488, 123.2352, 64.4662, 25.9402, 45.5217, 25.6838, 22.9398, 100.4562, 18.8182, 50.2581, 46.2475, 113.2732, 93.7856, 84.3668, 62.9947, 90.3688, 52.6713, 56.3654, 31.3908, 108.8829, 0.0], [260.8788, 78.936, 105.754, 15.8902, 11.8708, 112.1702, 53.8551, 137.6973, 0.0, 33.453, 57.358, 27.4482, 116.7083, 123.55, 95.2653, 71.2097, 53.0391, 78.3902, 64.1249, 187.9983, 38.3008], [217.854, 57.2352, 84.6731, 53.3003, 17.199, 36.4496, 89.0136, 10.8587, 29.7535, 65.7347, 121.2385, 126.1053, 136.1802, 103.3013, 148.6957, 58.6084, 102.8888, 63.0997, 166.3452, 52.4475]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

