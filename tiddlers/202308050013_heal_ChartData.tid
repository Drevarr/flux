created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Head Bobber", "Solus Sanctus", "Tegan Parker", "Emily Melia", "Heals For Daddy", "J\u00e2sm\u00eene", "Sakis Ranger", "Klengah", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Druid", "Tempest", "Druid", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.5682, 292.1643, 126.8286, 68.7209, 0.0, 147.515, 233.4255, 479.3176, 296.1622, 124.087, 236.8154, 3.6531, 375.3425, 262.587], [178.5417, 174.8858, 16.7065, 10.0508], [33.8919, 68.7292, 119.4898, 50.9674, 0.0, 82.5096, 0.0, 6.0571, 287.2471, 121.5912, 4.9, 51.0773, 9.1463, 284.2766, 75.2973, 74.2045, 93.3286, 45.7143, 15.0698, 67.1617, 81.8989, 103.0118, 114.8919, 172.6848, 108.3385, 47.3469, 419.8356, 267.4638], [5.9348, 0.0, 2.3694, 0.0, 312.4588, 214.9434, 0.0, 252.9662, 1.1463, 585.3546, 304.2568, 240.6214, 44.0286, 60.0814, 22.9667, 15.5868, 395.766, 414.8919, 4.9783, 159.7538, 630.6301, 346.5217], [0.0, 418.463, 629.9839, 14.0272, 0.0, 315.5732, 0.0, 79.2571, 110.3412, 695.8176, 19.75, 184.1884, 70.7805, 25.8652, 171.2027, 395.3786, 108.2929, 34.8605, 172.7126, 341.2553, 890.7647, 31.2391, 78.1385, 175.7808, 92.2319], [231.6216, 27.2199, 599.6726, 48.7283, 62.5085, 193.4586, 373.7714, 143.2353, 669.6289, 48.2375, 179.0918, 322.4878, 693.0, 365.4527, 66.9773, 367.2286, 188.6929, 7.0349, 385.018, 342.1968, 0.1724, 1064.8706, 657.8649, 97.8587, 370.7538, 2.2959, 761.1507, 96.6087], [520.3935, 654.8283, 20.0543, 26.0169, 678.7325, 246.0286, 356.8353, 775.9937, 176.7125, 264.9614, 127.2927, 560.6383, 736.7973, 56.2045, 394.9643, 182.2643, 270.7305, 347.1383, 0.0, 929.3176, 6.6892, 407.6739, 432.0308, 800.6301, 91.6812], [11.2973, 666.0093, 833.3486, 45.1359, 43.9322, 349.9809, 79.5, 465.5714, 38.0471, 617.327, 721.3617, 666.5946, 50.8864, 706.8571, 161.7071, 108.5233, 330.1737, 306.9681, 0.4138, 1136.2, 935.5811, 30.9891, 559.7538, 0.0, 680.7671, 242.6812], [114.4865, 619.2917, 895.1371, 128.0978, 3.4068, 286.2994, 462.5143, 276.1765, 1124.4277, 43.7375, 370.6377, 140.8293, 1418.5461, 1155.1014, 711.1, 112.0571, 19.593, 239.8383, 546.4521, 63.6897, 0.5412, 381.3243, 4.2935, 158.6462, 182.6327, 363.9315, 300.8841], [958.6944, 1191.7521, 105.9185, 55.7452, 74.9429, 332.0118, 890.0818, 7.2125, 1545.5532, 832.25, 375.0227, 633.2929, 51.4286, 40.4535, 339.2994, 511.5479, 85.5294, 473.6081, 163.913, 64.7385, 0.0, 354.9041, 449.9638], [11.4054, 741.787, 1106.9772, 119.3098, 25.4237, 1225.3758, 1086.0, 417.9529, 1017.2138, 145.1125, 527.5024, 1104.122, 1650.2979, 655.1081, 432.8636, 1075.5357, 101.5, 278.1512, 448.2275, 716.6968, 1.1379, 1241.2235, 887.2162, 867.7609, 697.0923, 107.5306, 489.5479, 239.0942], [809.8634, 1258.4763, 267.0924, 25.7797, 614.8408, 134.1765, 383.0, 439.0471, 914.0566, 268.5, 272.6087, 347.6341, 2062.0, 1765.9054, 0.0, 716.0429, 197.6357, 127.7674, 837.3174, 606.016, 3.4138, 564.3412, 509.7568, 358.6413, 297.9077, 68.1224, 747.7808, 298.6377]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

