created: 20230527220043000
creator: Drevarr
modified: 20230705163532040
modifier: drevarr
tags: ChartData
title: 202305272200_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Aira Draugr", "Nickzinzx", "Rx Medic", "Grilo Gringo", "Newtype Khan", "K U S A T T A", "Splitting Hairs", "Cedryn X", "Legacy Of Mathus", "Morv\u00e4rth", "Kary\u00edna", "Lord Erin The Wise", "Mistwalker Cael", "Permanent Dawn", "Be\u00eb", "Xanvias"];
const professions = ["Spellbreaker", "Herald", "Chronomancer", "Firebrand", "Dragonhunter", "Spellbreaker", "Reaper", "Reaper", "Berserker", "Berserker", "Reaper", "Vindicator", "Weaver", "Vindicator", "Weaver", "Scourge", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.7328, 569.463, 188.4159, 392.1814, 118.6233, 275.4, 294.5305, 261.7049, 199.9814, 177.1032, 366.3796, 105.4806, 278.3043, 279.641, 336.8065, 88.9259, 275.2571, 164.1013, 192.8438], [0.0, 0.0, 36.1311, 103.5, 738.15, 197.1705, 36.9008, 778.3519, 47.5487, 264.2489, 250.0068, 537.3022, 692.5681, 325.1311, 410.1739], [284.6575, 517.76, 294.5822, 0.0, 225.3665, 226.9405, 155.5093, 237.9854, 429.3043, 686.9615, 1083.0, 155.2593, 629.581, 669.1266, 171.7578], [128.9795, 344.3644, 368.6667, 321.1148, 351.087, 219.4206, 766.8981, 300.3107, 271.1304, 382.4487, 423.871, 655.2593, 521.8381, 345.443, 187.9453], [1093.8, 127.3977, 132.7366, 914.4444, 342.5133, 189.1408, 973.1311, 0.0, 199.5357, 495.8704, 607.8058, 130.4348, 103.3205, 1197.0, 345.0, 128.4, 421.1266, 155.8125], [209.0, 49.8689, 90.5526, 287.625, 219.2386, 84.126, 376.8333, 174.7699, 530.4388, 45.6644, 244.56, 345.7934, 218.5082, 270.4472, 157.9008, 368.8889, 181.3204, 219.6522, 361.0641, 531.3548, 318.037, 146.5905, 321.3038, 116.4219], [212.4932, 579.4578, 479.9953, 205.2295, 361.3913, 215.9563, 1444.8056, 146.8204, 138.6522, 298.4359, 782.0645, 605.4444, 155.5524, 149.8734, 195.3594], [597.52, 734.0704, 494.7888, 348.1071, 1602.463, 533.6893, 867.4103, 1179.2903, 287.963, 787.6476, 424.6329, 381.9141], [9.3415, 426.8421, 383.225, 152.9318, 121.2634, 223.2963, 138.9381, 292.6203, 230.1781, 441.6533, 886.0094, 470.5082, 833.8323, 505.6667, 1917.1296, 531.7864, 0.0, 1465.3718, 326.6571, 357.9494, 232.5078], [129.7637, 664.3562, 1225.7022, 274.5211, 835.2733, 1068.2222, 2203.2315, 550.801, 250.9565, 1954.2821, 990.9677, 258.5185, 1992.2952, 658.038, 214.2422], [850.4955, 0.0, 69.9016, 373.2632, 1753.15, 414.2159, 95.7328, 990.0741, 339.8673, 883.4304, 1141.2958, 964.7213, 1047.2981, 504.7897, 1298.2222, 456.8495, 818.3478, 1171.3205, 1412.4839, 1182.3333, 447.2476, 668.8481, 401.1328], [873.2613, 130.9756, 66.0492, 690.4474, 2304.425, 360.7727, 146.7061, 1190.4444, 699.1504, 631.2447, 318.9452, 1256.6133, 476.169, 40.2787, 1192.4783, 843.8175, 2157.0185, 358.9369, 51.8696, 1605.8205, 866.8065, 660.0741, 254.5048, 708.4051, 494.8438], [1404.8559, 76.8537, 325.0492, 243.5789, 552.45, 418.6136, 277.9084, 1662.7222, 505.9115, 249.4684, 764.0068, 731.0622, 2098.6338, 1812.0164, 1328.4969, 1018.8651, 1146.287, 399.2913, 479.4783, 137.0513], [1333.3243, 0.0, 79.2787, 931.6053, 1140.0, 287.5114, 401.2863, 1951.8333, 954.5929, 1838.1814, 143.8288, 2011.1778, 249.7418, 1101.246, 4325.0926, 1518.3981, 354.8696, 1314.5256, 1994.4194, 877.037, 1466.4476, 1657.7975, 712.6953], [1414.6726, 1280.7468, 1253.9247, 909.3156, 2306.6948, 1759.3416, 1502.7222, 5264.7315, 1429.0388, 258.3043, 3056.0128, 700.0645, 1098.2593, 1725.8857, 77.0859], [1227.4144, 106.6829, 321.1967, 222.5789, 2109.225, 17.1023, 324.1527, 2339.963, 1352.292, 1841.3755, 744.0, 1257.1644, 1584.6244, 1150.2459, 1095.7453, 1028.0675, 2417.8889, 1969.5291, 60.4348, 1481.9615, 1487.9032, 733.6667, 1037.9524, 731.9494, 759.6406], [0.0, 0.0, 116.4262, 161.0, 4552.5, 730.1818, 618.1374, 2522.3148, 1894.9823, 3304.2954, 1313.7945, 1992.4622, 2561.4977, 2653.9672, 1824.528, 1026.8889, 3398.7407, 1423.7913, 380.8261, 1378.3462, 2659.871, 993.3333, 1800.7524, 688.8734, 737.9844]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

