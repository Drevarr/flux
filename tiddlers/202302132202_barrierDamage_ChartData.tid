created: 20230213220222000
creator: Drevarr
modified: 20230705163519175
modifier: drevarr
tags: ChartData
title: 202302132202_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Xyntharos", "Raziel Umbra", "Sassy Daddy Demon", "Ravioli Fetabringer", "Blanco Padre Guard", "Arriasa", "Uneeta Healah", "Daring Deathblade", "Arka\u00f1", "Jeckyll Mbs", "Lord Erin The Wise", "Ryvalia Fazebringer", "Oo Dads Mad", "Whose Guardian", "Drevarr Moonwillow", "Bella Sassy", "Abigail Ryn", "Grasszanine", "Arcanophage Farra", "Tootsie Pop Bringer", "Tegan Parker", "Smol Gluvs", "\u00c9\u00efbhear", "Newtype Khan", "Elonith Tenebris", "Nelliel T", "Rina Of Theros", "Be\u00eb", "Dark Sidiuz", "Skye Nightroad"];
const professions = ["Berserker", "Vindicator", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Druid", "Scrapper", "Scourge", "Chronomancer", "Berserker", "Weaver", "Chronomancer", "Spellbreaker", "Dragonhunter", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Tempest", "Scourge", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3164, 5935, 0, 0, 0, 0, 0, 0, 1248, 3407, 3662, 2358], [1451, 4461, 0, 0, 0, 5837, 0, 0, 0, 6897, 0, 1245], [2689, 3232, 0, 0, 0, 2444, 2869, 0, 2374, 9530, 0, 0], [1814, 0, 0, 0, 0, 4402, 2420, 0, 209, 11282, 1319, 1928], [1322, 5158, 166, 0, 817, 9580, 0, 0, 0, 10686, 986, 0], [1647, 1248, 3708, 5777, 1182, 0, 2446, 14504, 0, 0], [0, 5444, 2462, 0, 0, 13222, 0, 2239, 5787, 1288, 1637], [34, 1747, 10800, 6328, 1128, 0, 71, 13896, 0, 1371], [0, 0, 6350, 24118, 4158, 2464], [2496, 8714, 1119, 0, 0, 13570, 2614, 0, 1239, 8080, 0, 231], [825, 16409, 0, 0, 0, 8281, 0, 0, 3674, 5499, 4815, 381], [3730, 21382, 1637, 0, 1059, 0, 341, 0, 1841, 9704, 0, 772], [1252, 3069, 0, 0, 630, 14184, 3610, 0, 1242, 14457, 2968, 0], [950, 4913, 7083, 480, 19713, 3583, 0, 1675, 5944], [4594, 14759, 176, 1131, 4836, 1690, 0, 0, 17554, 0, 0], [5938, 11400, 279, 0, 2314, 10298, 2881, 1586, 12748, 831, 2158], [6268, 1397, 0, 2737, 12886, 1823, 0, 3023, 23496, 0, 0], [5549, 15719, 3078, 2355, 18464, 1188, 1345, 5678], [2818, 8217, 0, 1288, 10222, 4670, 0, 1166, 26493, 2484, 1073], [11068, 17467, 0, 1282, 10741, 1212, 0, 1249, 19529, 0, 0], [1460, 15293, 39, 0, 6605, 19159, 8527, 0, 63, 15901, 31, 166], [9747, 19329, 1428, 0, 9259, 2328, 0, 3884, 19222, 411, 1796], [6430, 10797, 0, 0, 3120, 15426, 5380, 0, 5065, 19720, 1262, 365], [723, 21101, 1760, 1481, 19852, 2151, 0, 3627, 21367, 4311, 0], [6833, 20868, 1124, 0, 2836, 16719, 6788, 0, 9548, 17615, 3343, 0], [6882, 83, 0, 3718, 14971, 10788, 0, 5178, 46876, 5860, 4722], [17225, 32595, 3111, 1668, 10151, 2992, 0, 5795, 19373, 6018, 639], [11215, 27474, 5402, 0, 4316, 15179, 3912, 64, 7024, 23214, 6034, 3202], [10930, 27079, 4641, 0, 2884, 31793, 8343, 0, 4722, 32170, 4827, 3103], [16599, 41266, 1310, 1288, 20537, 3583, 0, 7904, 45915, 0, 1248], [17254, 55618, 8566, 0, 8701, 32611, 23801, 0, 11826, 38647]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

