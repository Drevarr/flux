created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias", "Darks Na", "Maass X Menos", "Daring Deathblade", "Xuerreux", "Apyen", "Jimbo The Pleb", "World Devourerer"];
const professions = ["Reaper", "Dragonhunter", "Berserker", "Scourge", "Berserker", "Berserker", "Berserker", "Guardian"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.8373, 37.804, 130.6923, 47.3333, 100.2614, 157.0377, 95.2927, 217.7027, 28.7931, 118.5613, 161.1, 138.3488, 42.1938, 176.9508, 102.4833, 8.8471, 92.7931, 69.169], [0.0, 88.1667, 225.1667, 39.25, 76.4737, 15.0769, 22.24, 39.7347, 73.875, 70.3168, 53.4176, 33.1631, 23.4545, 23.0, 25.9016, 158.5909, 2.4694, 114.2083, 56.6382, 87.3077, 0.3485, 112.5227, 140.6981, 63.5976, 19.7838, 77.7877, 126.7778, 0.5116, 23.6512, 13.0984, 37.1, 30.4529, 82.9212, 27.9069], [261.6477, 632.0189, 229.6585, 190.0811, 374.6552, 193.9151, 389.7556, 127.093, 42.3101, 101.9672], [285.6818, 124.7925, 52.8049, 35.5405, 361.1552, 152.8019, 182.8778, 224.0465, 68.8837, 363.9344, 267.3667, 35.6824, 266.4335, 45.9345], [1.8864, 0.2245, 171.9583, 4.494, 71.9749, 267.8077, 121.6364, 135.125, 314.9245, 309.3049, 144.973, 0.0, 16.2547, 492.4889, 0.0, 153.9302, 868.6557, 216.1667, 0.0, 96.0296, 91.3759], [307.1304, 7.1319, 68.6809, 2.7879, 134.0909, 0.0, 109.2841, 0.0, 0.0, 98.7771, 91.9146, 122.4038, 149.803, 113.0795, 139.434, 0.0, 225.0541, 151.1207, 49.0566, 167.4333, 0.0, 91.0543, 469.4262, 589.1167, 8.9118, 48.3202, 98.0621], [55.0, 501.6458, 316.7308, 158.2604, 201.7281, 98.9231, 0.0, 277.4694, 155.375, 142.3416, 64.7802, 97.5035, 131.3131, 0.0, 215.3636, 9.2755, 491.625, 334.8068, 364.3396, 88.1829, 412.7027, 128.7586, 59.3774, 224.9556], [1543.775, 1923.875, 1089.3974, 2128.3333, 1940.5702, 505.7846, 634.64, 5439.4082, 3201.7812, 2507.0683, 3582.7692, 1325.6525, 1777.6263, 250.0909]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

