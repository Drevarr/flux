created: 20230415000841000
creator: Drevarr
modified: 20230705163525620
modifier: drevarr
tags: ChartData
title: 202304150008_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Grasszanine", "Blancooo Padreee", "Smol Daddy Tika", "Aronorf Xideliesi", "Arcanophage Farra"];
const professions = ["Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.8672, 11.3476, 25.4925, 0.0, 43.6545, 14.58, 26.0337, 11.5368, 0.0, 14.2885, 0.0, 50.2729, 0.0, 13.9087, 13.8442, 13.9546, 0.0, 27.8405, 0.0, 0.0, 14.553], [13.392, 26.7534, 10.4751, 0.0, 25.5519, 0.0, 13.07, 26.3511, 13.1508, 33.1094, 0.0, 60.3814, 22.8114, 38.4507, 9.9986, 38.9201, 13.2925, 44.5447, 23.2716, 25.9207, 26.1954], [38.1024, 19.4639, 40.0464, 19.584, 24.4305, 19.575, 0.0, 19.5339, 19.5156, 47.6284, 0.0, 59.7075, 19.8748, 19.8899, 0.0, 17.4432, 75.5487, 51.2939, 39.99, 0.0], [79.1246, 27.163, 205.6743, 76.2478, 28.8143, 33.7603, 75.7689, 151.7705, 150.5072, 49.8972, 26.4335, 31.3051], [69.552, 51.7783, 76.8483, 32.652, 140.8158, 23.085, 22.8459, 78.9222, 38.7036, 35.8749, 8.901, 171.0358, 67.1232, 32.7068, 43.3136, 54.728, 150.4244, 176.9978, 64.0872, 62.8438, 70.3072], [71.8416, 86.3474, 24.4728, 35.316, 92.2752, 83.16, 90.321, 147.3564, 47.8296, 78.1259, 0.0, 198.9353, 62.3512, 36.7418, 48.2117, 49.3861, 163.8852, 196.7392, 75.7488, 87.4591, 86.3478]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

