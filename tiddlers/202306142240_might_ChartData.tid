created: 20230614224052000
creator: Drevarr
modified: 20230705163535517
modifier: drevarr
tags: ChartData
title: 202306142240_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Shaca Booey", "Sakis Ranger", "Tika Fiery", "Artakama Nahid", "Momomeko", "Black Raspberry Pie", "Xanvias Einzbern", "Crusader Siolith", "Solus Sanctus", "Venomina The Siren", "Johosh The Mighty", "Zayde Sunsabre"];
const professions = ["Firebrand", "Berserker", "Druid", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.925, 2.0539, 3.7411, 7.2094, 0.8704, 1.401, 2.0135, 1.6449, 0.0], [4.1988, 2.6611, 1.9646, 8.3431, 0.0, 2.1071, 0.8033, 4.2378, 0.9823], [3.6961, 1.1252, 1.996, 6.221, 3.7672, 8.2577, 1.885, 3.8614], [1.3686, 3.8845, 3.2604, 11.628, 1.6864, 1.8224, 0.814, 3.7499, 3.5652], [6.6473, 1.6699, 5.2772, 12.2385, 5.1, 1.4807, 0.0, 1.8401, 2.6375], [0.8938, 3.6077, 3.0827, 9.7094, 2.3936, 3.0981, 4.616, 8.0434, 2.0373], [0.0, 4.1971, 3.6888, 19.0408, 4.5968, 1.7085, 0.8568, 3.485, 0.0], [5.8653, 2.7772, 8.6421, 5.4444, 10.6993, 9.5768, 11.4779], [1.3686, 3.9292, 12.122, 22.3258, 10.1864, 4.2599, 0.0214, 10.9429, 0.0], [3.6775, 5.9474, 3.971, 22.6455, 7.4256, 7.2099, 8.1396, 7.1233, 8.5493], [14.4212, 7.8584, 5.852, 23.8374, 7.6024, 6.9137, 6.0297, 7.7367, 0.1455], [54.84, 68.6309], [21.6737, 29.4958, 24.7038, 82.8204, 25.8536, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

