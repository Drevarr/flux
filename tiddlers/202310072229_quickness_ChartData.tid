created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Darks Na", "Newtype Khan", "Amiti\u00e9l", "Atria Ruinheart", "Crusader Siolith", "Sygaldry Verdandi", "Gabe Malhorn", "Smurf Komdol Fri"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.3476, 8.6016, 0.0, 78.8337, 47.7834, 51.3005, 63.9601, 72.3476, 0.0, 66.7561, 55.4268, 222.6597, 43.9668], [56.8653, 55.527, 75.1026, 54.9172, 57.1428, 162.7223, 42.2334, 30.5151, 5.1792, 85.0349, 61.787, 107.92], [21.0452, 0.0, 15.4336, 51.8984, 98.5831, 53.8394, 12.3647, 119.3716, 0.0, 34.4474, 73.8223, 201.1542, 12.7494, 14.5183, 31.2887, 37.1458, 43.9584, 51.8942, 195.7862, 0.0, 0.0], [32.4231, 41.449, 7.72, 73.3894, 63.1605, 14.5299, 137.1849, 0.0, 68.742, 71.8661, 95.998, 34.4412, 14.9919, 9.2456, 15.2248, 54.4314, 101.9616, 32.0615, 223.0706, 0.0], [39.8013, 0.0, 0.0, 64.8025, 67.2917, 57.387, 12.8205, 54.4588, 61.1549, 62.8399, 246.9454, 52.0992, 33.5412, 5.4392, 35.7642, 84.747, 112.8448, 35.3539, 272.844, 16.5745], [29.1467, 33.8957, 75.1709, 58.0258, 75.2987, 60.3418, 105.2569, 72.3573, 79.2449, 116.1134, 66.2904, 9.8984, 8.008, 75.3246, 72.5052, 93.5712, 111.7841, 294.3408, 27.8303], [32.4061, 23.9232, 115.0103, 59.7184, 93.1756, 69.5441, 123.0324, 75.3107, 94.7918, 216.9358, 25.9848, 41.1758, 5.8656, 68.3316, 74.239, 153.824, 105.9833, 414.2268, 17.822, 37.7667], [50.192, 23.2781, 0.0, 57.9278, 61.0638, 69.0731, 92.0797, 96.6521, 96.8244, 121.8017, 233.3716, 47.3526, 11.5962, 11.232, 112.0478, 132.7686, 175.5904, 67.8073, 386.281, 0.0, 43.6213], [61.609, 13.4043, 264.4505, 362.3249, 363.4162, 232.2505, 308.7887, 60.4867, 178.7801, 294.3283]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

