created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Scarlet Merc\u00fcry", "Elonith Requiem", "The Arch\u00eetect", "Yummy Kiwi", "Tekka Whitefang", "Mortuus Araden", "Daphne Agla\u00e9", "Forever Dreaming", "Lord Fluffernaut", "Solla Capriccio", "Air One Com", "Luke The Ghastly", "Greg The Knight", "Venomina The Sly", "Mort\u00e4rion", "Lord Erin The Wise", "Gestern Yesteryear", "Koralia Danai", "Sub Train", "Bella Sassy", "Elleerie", "Loganlek", "Sofya De Nova", "Budget Chicken", "Bee Nemesis", "Liu Mira", "Glorious Gluvs", "Mistwalker Cael", "Tegan Parker", "Rod Reaper", "Ryvalia Fazebringer", "Cat Wigglebooty", "Zaedy Zae", "Regis Hawkesburne", "Rahani Sunray", "Arcanophage Farra", "Rina Of Theros", "Primal Clone", "Newtype Khan", "Drevarr Moonwillow", "Be\u00eb", "Elizabeth Conbolt", "Xanvias Einzbern", "Eibh\u00ebar", "J\u00e2sm\u00eene", "Lucky Luprac\u00e1n", "Mike The Archmagus", "Mister Jekyll", "Jimbo The Pleb", "Keypek The Drunk"];
const professions = ["Firebrand", "Reaper", "Reaper", "Firebrand", "Spellbreaker", "Harbinger", "Reaper", "Scourge", "Berserker", "Reaper", "Firebrand", "Scourge", "Firebrand", "Druid", "Scrapper", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Berserker", "Weaver", "Firebrand", "Berserker", "Berserker", "Berserker", "Herald", "Tempest", "Reaper", "Chronomancer", "Scrapper", "Druid", "Berserker", "Chronomancer", "Spellbreaker", "Reaper", "Chronomancer", "Spellbreaker", "Scrapper", "Reaper", "Tempest", "Berserker", "Chronomancer", "Tempest", "Scrapper", "Weaver", "Reaper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1581, 0.0182, 0.1523, 0.0625, 0.0, 0.0, 0.0357], [0.037, 0.125, 0.2727, 0.1053, 0.3175, 0.3186, 0.0596, 0.0, 0.0179, 0.0154, 0.0714, 0.0175], [0.1587, 0.1947, 0.1424, 0.0485, 0.0, 0.0, 0.0308, 0.1786, 0.0702], [0.1368, 0.0, 0.1494, 0.1161, 0.0, 0.1471, 0.0357, 0.0, 0.1094, 0.2121], [0.5079, 0.177, 0.149, 0.1165, 0.0, 0.0, 0.0308, 0.0571, 0.0], [0.0, 0.125, 0.1818, 0.0526, 0.3016, 0.2832, 0.1093, 0.0485, 0.0, 0.0, 0.0462, 0.1, 0.0175], [0.1239, 0.2069, 0.1161, 0.2059, 0.0714], [0.125, 0.1818, 0.0877, 0.1746, 0.3186, 0.1093, 0.0777, 0.0, 0.0, 0.0769, 0.0929, 0.0175], [0.1795, 0.0182, 0.1667, 0.1518, 0.0, 0.0, 0.0179, 0.0741, 0.1562, 0.0], [0.3077, 0.1636, 0.1552, 0.0625, 0.0, 0.0882], [0.1325, 0.0364, 0.158, 0.0536, 0.0, 0.0294, 0.0536, 0.0, 0.0312, 0.0606, 0.0317, 0.1062, 0.0497, 0.0097, 0.0, 0.0, 0.0308, 0.0929, 0.0], [0.1581, 0.0, 0.2557, 0.1161, 0.0, 0.1176, 0.1607], [0.2308, 0.0182, 0.2615, 0.0893, 0.0, 0.0], [0.1368, 0.1351, 0.0446, 0.0208, 0.0, 0.0714, 0.0, 0.0469, 0.0606, 0.1587, 0.177, 0.0695, 0.0, 0.0615, 0.0786, 0.0], [0.2179, 0.1091, 0.227, 0.2143, 0.0, 0.0], [0.2051, 0.0, 0.2155, 0.1518, 0.0, 0.2353, 0.125, 0.0, 0.1562, 0.1515], [0.1111, 0.1273, 0.1523, 0.0446, 0.0, 0.0, 0.0714, 0.0, 0.0781, 0.1212, 0.0877, 0.0952, 0.1504, 0.0728, 0.0097, 0.0, 0.0308, 0.1], [0.141, 0.0727, 0.1408, 0.1161, 0.0, 0.0882, 0.0536, 0.0, 0.125, 0.1515, 0.0175, 0.0952, 0.1416, 0.0762, 0.0388, 0.0179, 0.0, 0.05, 0.0], [0.1538, 0.0182, 0.1466, 0.1161, 0.0, 0.0294, 0.1071, 0.0741, 0.0469, 0.1818, 0.0, 0.1587, 0.1062, 0.0762, 0.0485, 0.0, 0.0, 0.0462, 0.0857, 0.0], [0.1325, 0.0909, 0.1293, 0.1161, 0.0, 0.0294, 0.0893, 0.0, 0.3125, 0.0606, 0.0877, 0.1587, 0.2124, 0.0762, 0.0583, 0.0, 0.0, 0.0, 0.0286, 0.0], [0.1368, 0.0, 0.1408, 0.1161, 0.0, 0.0, 0.0536, 0.0781, 0.2121, 0.0, 0.1587, 0.1947, 0.0795, 0.0485, 0.0, 0.1077, 0.1286, 0.0], [0.141, 0.0545, 0.1667, 0.0536, 0.0, 0.0294, 0.0536, 0.0312, 0.0606, 0.1053, 0.127, 0.1504, 0.096, 0.1165, 0.0, 0.0615, 0.0929, 0.0], [0.1368, 0.0, 0.1293, 0.1429, 0.0208, 0.0882, 0.0536, 0.0, 0.0469, 0.1818, 0.254, 0.1593, 0.0993, 0.165, 0.0, 0.0, 0.0, 0.0857, 0.0], [0.1111, 0.0545, 0.1868, 0.1161, 0.0, 0.0, 0.0893, 0.037, 0.0469, 0.1515, 0.0175, 0.2222, 0.1858, 0.0762, 0.0485, 0.0, 0.0, 0.0462, 0.1, 0.0175], [0.1795, 0.0, 0.1925, 0.1071, 0.0208, 0.1471, 0.0536, 0.0, 0.0781, 0.0909, 0.0351, 0.2381, 0.0, 0.1159, 0.0874, 0.0, 0.0, 0.0154, 0.0857, 0.0175], [0.2137, 0.0364, 0.1925, 0.125, 0.0, 0.0882, 0.1481, 0.1094, 0.3333, 0.0702, 0.1587, 0.1623], [0.1624, 0.0364, 0.1782, 0.125, 0.0208, 0.0, 0.0357, 0.1852, 0.0625, 0.1212, 0.0175, 0.2698, 0.2124, 0.0762, 0.0583, 0.0, 0.0, 0.0154, 0.1286, 0.0351], [0.1667, 0.0, 0.1868, 0.0625, 0.0, 0.0179, 0.0, 0.1094, 0.3636, 0.0877, 0.1587, 0.1947, 0.1192, 0.068, 0.0115, 0.0, 0.0462, 0.0714, 0.0526], [0.1838, 0.0545, 0.1925, 0.1071, 0.0, 0.0882, 0.0, 0.0741, 0.0312, 0.0606, 0.0, 0.254, 0.1239, 0.1093, 0.165, 0.0, 0.0357, 0.0462, 0.0714, 0.0], [0.2051, 0.0364, 0.1839, 0.125, 0.0, 0.0882, 0.125, 0.0741, 0.2188, 0.2121, 0.0, 0.0635, 0.115, 0.0828, 0.0485, 0.0, 0.0, 0.0615, 0.1143, 0.0351], [0.1752, 0.0909, 0.1753, 0.1607, 0.0, 0.0294, 0.1964, 0.037, 0.125, 0.2424, 0.0702, 0.2063, 0.2655, 0.0695, 0.068, 0.0, 0.0, 0.0308, 0.05, 0.0], [0.2863, 0.0182, 0.2011, 0.125, 0.0208, 0.0, 0.0714, 0.0469, 0.0606, 0.2698, 0.1239, 0.0728, 0.0485, 0.0115, 0.0536, 0.0154, 0.0929, 0.0], [0.2009, 0.0, 0.2098, 0.25, 0.0, 0.0882, 0.0179, 0.0741, 0.0156, 0.2121, 0.0, 0.1429, 0.2743, 0.0861, 0.0388, 0.0, 0.0, 0.0308, 0.0357, 0.0], [0.0, 0.2989, 0.1696, 0.0, 0.0588, 0.1071, 0.037, 0.125, 0.1515, 0.1053, 0.1429, 0.2478, 0.0828, 0.0291, 0.1494, 0.0, 0.0154, 0.1, 0.0], [0.2949, 0.0364, 0.2241, 0.0804, 0.0, 0.1471, 0.0714, 0.037, 0.0156, 0.0351, 0.1429, 0.1239, 0.0629, 0.0388, 0.0714, 0.0769, 0.1143, 0.1404], [0.2265, 0.0364, 0.2213, 0.0625, 0.0417, 0.0, 0.0536, 0.1111, 0.0781, 0.1515, 0.0794, 0.2743, 0.1159, 0.0874, 0.0, 0.0, 0.0615, 0.0786, 0.0], [0.2265, 0.0, 0.2471, 0.1875, 0.0, 0.0294, 0.1071, 0.0781, 0.2121, 0.0, 0.1746, 0.1239, 0.0861, 0.0388, 0.0, 0.0179, 0.0308, 0.1214, 0.0526], [0.188, 0.0, 0.1466, 0.1696, 0.1765, 0.1964, 0.037, 0.125, 0.1515, 0.0, 0.2698, 0.3363, 0.1093, 0.0583, 0.0, 0.0357, 0.0769, 0.0714, 0.0175], [0.1581, 0.0727, 0.2069, 0.1607, 0.0, 0.0882, 0.125, 0.2031, 0.3636, 0.0175, 0.2222, 0.2832, 0.0795, 0.0583, 0.0179, 0.0, 0.0929, 0.0], [0.1966, 0.0, 0.2098, 0.1875, 0.0208, 0.0588, 0.0357, 0.0, 0.125, 0.2727, 0.1754, 0.1429, 0.1593, 0.0861, 0.0777, 0.0, 0.0, 0.1385, 0.1357, 0.0351], [0.2051, 0.0364, 0.227, 0.2232, 0.0833, 0.0294, 0.0179, 0.0, 0.125, 0.0303, 0.0877, 0.1587, 0.2124, 0.1159, 0.0583, 0.023, 0.0179, 0.0462, 0.0286, 0.0702], [0.2179, 0.0545, 0.2471, 0.1696, 0.0, 0.0294, 0.125, 0.1562, 0.0909, 0.0877, 0.127, 0.177, 0.1192, 0.0291, 0.0, 0.0462, 0.1071, 0.0351], [0.1496, 0.0545, 0.2356, 0.1607, 0.0208, 0.0, 0.0357, 0.037, 0.0469, 0.303, 0.1053, 0.3016, 0.3805, 0.106, 0.0583, 0.0, 0.0, 0.0154, 0.0857, 0.0175], [0.2308, 0.0182, 0.1667, 0.1964, 0.1176, 0.1071, 0.0, 0.2188, 0.2121, 0.1053, 0.2063, 0.2035, 0.1159, 0.0971, 0.0, 0.0, 0.0769, 0.0929, 0.1228], [0.1752, 0.0727, 0.204, 0.0268, 0.0, 0.1607, 0.0, 0.1406, 0.1818, 0.1404, 0.1905, 0.2389, 0.2219, 0.068, 0.0115, 0.1077, 0.0857, 0.0175], [0.2436, 0.0182, 0.2011, 0.1429, 0.0, 0.0588, 0.1964, 0.1562, 0.2727, 0.0175, 0.1746, 0.3097, 0.1126, 0.0583, 0.0, 0.0, 0.0308, 0.1929, 0.0], [0.2863, 0.0182, 0.1954, 0.1161, 0.0, 0.0536, 0.0, 0.1875, 0.2121, 0.0, 0.1746, 0.2389, 0.1921, 0.0388, 0.0, 0.0154, 0.15], [0.2564, 0.0364, 0.2385, 0.0982, 0.0208, 0.0882, 0.037, 0.2188, 0.2424, 0.0, 0.1746, 0.1858, 0.1523, 0.0971, 0.0, 0.0, 0.0923, 0.1286, 0.0175], [0.2094, 0.0182, 0.2557, 0.2054, 0.0, 0.0, 0.1786, 0.0, 0.1406, 0.2121, 0.0526, 0.2222, 0.177, 0.1821, 0.0583, 0.0, 0.0, 0.0462, 0.1071, 0.0], [0.3419, 0.0, 0.2098, 0.1429, 0.0, 0.1176, 0.125, 0.037, 0.1875, 0.3333, 0.0526, 0.2381, 0.1947, 0.1093, 0.0971, 0.0, 0.0, 0.0308, 0.1286, 0.0175]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

