created: 20230807220400000
creator: Drevarr
tags: ChartData
title: 202308072204_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Jmbrage Gaurdian", "Ryvalia Fazebringer", "Belvyn Brightblade", "Drevarr Moonwillow", "Amiti\u00e9l", "Zaylen Harker", "Kisumaiassu", "Sub Train", "Solus Sanctus", "Bella Sassy", "Koralia Danai"];
const professions = ["Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.6996, 0.0, 7.098, 10.0716, 0.0, 7.097, 24.1542, 22.4434, 1.584, 0.0, 7.2468, 4.7165, 1.8954, 0.0, 0.176, 1.0156, 2.0628, 5.8581, 8.7312], [24.2, 70.2038, 33.2732, 38.7919, 25.4592], [2.3478, 0.3997, 23.2596, 1.2474, 0.0, 1.41, 21.546, 46.6785, 25.1064, 15.6209, 44.0298, 1.1844, 5.5367, 1.6262, 1.892, 10.2858, 5.0901, 4.8222, 0.0], [0.0, 0.0, 0.0, 8.0661, 3.008, 23.4454, 131.6428, 57.6048, 48.7406], [77.1252, 31.734, 67.0488, 13.4904, 37.703, 6.486, 27.6129, 40.549, 0.924, 12.1211, 17.7327, 0.0, 2.961, 7.2575, 8.2328, 9.086, 7.9943, 8.9479, 0.0, 9.1086, 10.9344], [46.1127, 53.4864, 8.1946, 67.8015, 65.4804, 17.2834, 34.998, 6.38, 55.986, 30.0048, 5.8688, 25.4326, 10.7304], [4.9304, 26.7525, 105.1596, 62.139, 5.3806, 19.8105, 33.368, 192.372, 54.0408, 44.2592, 80.703, 0.0, 18.5063, 26.2119, 30.2887, 1.672, 4.6883, 0.0, 20.8605, 16.3608], [7.9825, 124.7835, 217.581, 136.1514, 14.036, 16.1915, 21.0924, 85.7187, 19.6416, 23.3033, 90.8046, 74.871, 13.9415, 8.3345, 16.94, 51.3248, 4.6615, 0.0, 33.291, 11.9544], [57.2081, 66.1432, 98.553, 107.0454, 4.0379, 32.571, 86.5809, 221.9822, 31.4424, 32.5648, 103.4865, 0.0, 30.1176, 43.3457, 50.7522, 19.91, 61.7408, 40.2386, 0.0, 71.9401, 39.0456], [128.7768, 91.0507, 237.51, 131.5776, 1.8354, 37.5765, 106.029, 251.4981, 28.4856, 114.0836, 140.2695, 7.7674, 16.2855, 54.0699, 29.1707, 28.952, 60.4388, 54.7588, 0.0, 53.5443, 72.9504], [206.4499, 178.719, 244.335, 86.3478, 68.3445, 115.949, 62.1716, 295.8191, 84.5592, 60.2642, 112.2156, 99.4473, 24.0172, 38.9959, 19.536, 33.7218, 26.0935, 1.0304, 45.5787, 41.208], [154.8765, 157.3478, 225.3342, 137.0754, 1.9223, 72.4975, 97.524, 386.63, 122.8392, 97.5665, 111.8313, 21.085, 60.066, 41.3256, 53.5643, 23.65, 66.1937, 65.4748, 4.9616, 41.078, 100.8576]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

