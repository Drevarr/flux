created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Fluffernaut", "Sakis Ranger", "Drevarr Moonwillow", "Mmathuss", "The C\u00fcre", "Gamora Titus", "Mierin Farshaw", "Thought Bound", "Gestern Yesteryear", "Violet Stab"];
const professions = ["Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.1751, 21.96, 20.7812, 26.5751], [5.3047, 0.8467, 0.0, 8.6211, 33.2992, 0.0, 123.779, 8.3461], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.0181, 0.1294, 2.0968, 18.1691, 44.5934, 15.8112, 5.0069, 6.0113, 4.606, 9.9175, 16.3447, 3.8896, 4.0194, 7.5953, 0.0, 10.431, 23.5421, 12.4626, 1.1334, 9.7128, 0.0, 2.0328, 12.4992], [9.9436, 134.9875, 61.8686, 14.8663], [0.0, 1.4696, 3.2256, 179.7692, 117.2556], [13.7112, 4.5549, 30.7446, 11.6991, 5.5406, 28.4861, 12.6984, 28.6348, 85.9874, 87.21, 81.2889, 17.4561, 10.6691, 2.0824], [29.4386, 0.0, 0.0, 0.0, 23.8919, 68.281, 0.0, 7.3249, 44.6292, 14.3864, 0.0, 15.755, 0.0, 3.0631, 33.8877, 0.0, 31.635, 25.0553, 0.0, 33.9662, 34.1088, 0.0, 0.8272, 12.4704, 36.4511, 95.823], [2.471, 26.8534, 50.7715, 0.0, 29.4734, 33.3555, 6.4988, 44.6536, 21.6821, 6.0174, 4.5322, 51.1711, 11.3006, 102.999, 138.1911, 71.6811, 4.583, 7.6152, 0.0, 1.54, 52.2432, 82.5101, 127.575], [6.693, 18.018, 14.9688, 0.3834, 31.499, 50.5428, 119.1101, 23.9092, 5.3354, 7.3441, 4.1164, 43.3417, 20.7888, 5.25, 12.1463, 36.1082, 12.9781, 13.9944, 11.2644, 56.5594, 18.4754, 20.79, 0.0, 57.684, 35.0492, 19.8249, 25.4408, 31.312, 8.0276, 8.1224, 27.7344, 86.682, 137.0439], [40.5128, 12.7296, 277.191, 141.0063, 32.3941, 24.6523, 30.818, 10.878, 10.5952, 131.4432, 30.8043, 363.5037]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

