created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Yngvar The Burdened", "Legoh Brave", "Xanvias Einzbern", "Luke The Knight", "Hit The Gas", "Latedoctor", "Anti Jimbo", "Mirhayna", "Charr Surethang", "Elonith Requiem"];
const professions = ["Vindicator", "Scourge", "Tempest", "Berserker", "Berserker", "Berserker", "Reaper", "Weaver", "Berserker", "Berserker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.7977, 0.0, 0.0, 32.3265, 86.6062, 9.678, 191.1091, 80.3148, 17.9243, 28.1754, 13.9815, 0.0, 0.0, 0.0, 33.5085, 21.7563, 0.0], [0.0, 0.0, 0.0, 48.0054, 49.7719, 121.2037, 2.686, 0.0, 0.0, 79.6497, 182.5378, 0.0, 46.625, 0.0, 223.5135], [72.8136, 400.0727, 0.0, 0.0, 73.0054, 43.4737, 0.0, 0.564, 0.0, 0.0, 108.2203, 20.9664, 0.0, 14.775, 0.0, 260.8649], [197.0348, 603.6042, 0.0, 0.0, 220.6818, 0.0, 157.0973, 187.7059], [98.9767, 39.451, 55.1667, 16.1429, 304.5544, 300.6441, 321.7636, 155.2407], [31.5514, 109.4737, 147.2778, 42.1105, 5.4416, 0.0, 300.3164, 180.521, 0.0, 767.8, 35.5594, 394.8649], [0.0, 0.0, 0.0, 0.0, 237.9242, 0.0, 73.0156, 142.3137, 0.0, 21.0612, 80.2332, 166.1695, 548.3818, 0.0, 0.0, 34.9351, 80.8596, 44.7222, 29.1047, 0.0, 0.0, 171.7627, 108.4454, 350.55, 4.2797, 193.8108], [82.642, 0.0, 0.0, 27.1939, 449.9016, 25.3559, 511.0545, 0.0, 0.0, 38.5622, 141.7018, 172.2222, 78.6337, 23.6753, 0.0, 218.7288], [216.1837, 189.5544, 398.9492, 988.3273, 0.0, 0.0, 57.5514, 81.6842, 54.7963, 177.0, 0.0, 0.0, 326.4068, 414.8824, 0.0, 232.0], [98.1913, 0.0, 0.0, 106.4697, 0.0, 128.4202, 82.902, 0.0, 0.0, 52.8187, 417.0678, 1947.5818, 0.0, 0.0, 578.3333, 33.3889, 37.5814, 0.0, 0.0, 120.3729, 757.7815, 0.0, 306.75, 0.0], [0.0, 50.2653, 411.8653, 287.8475, 1667.9636, 0.0, 0.0, 180.5784, 261.7719, 16.1852, 42.5872, 12.9481, 0.0, 321.5198, 602.0588, 0.0, 1092.15, 6.2762, 21.4865]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

