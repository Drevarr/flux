created: 20231009220917000
creator: Drevarr
tags: ChartData
title: 202310092209_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Tidalblade", "Hayuf", "Aira Draugr", "Mythical Moonz", "Skyra Lightmoon", "Apogeal", "Necrotic Windrunner", "Jmbrage Warrior", "Elonith Requiem", "Adjudicatrix Farra", "Mister Jekyll", "Black Raspberry Pie", "Zaedy Zae", "Belvyn Brightblade", "Klengah", "Kurn The Drunk", "Jimbo The Pleb", "Lhea Firehands", "Glorious Gluvs", "Mort\u00e4rion", "Cat Wigglebooty", "Momomeko", "Amiti\u00e9l", "Xanvias Einzbern", "Rina Of Theros", "Daray Darkblood", "Tootsie Pop Rocks", "Venomina The Sly", "Lucky Leipreach\u00e1n", "Daphne Agla\u00e9", "High Sorcer Baradun", "Tribal S", "Mistwalker Cael", "Cedryn X", "Sub Train", "Fang Shiyu", "Sygaldry Verdandi", "Newtype Khan", "Ka Otik Praetor", "Atria Ruinheart", "Tegan Parker", "Kalisha Lafay", "K\u00e9ld\u00e1", "Be\u00eb", "Bella Bitty", "Eibh\u00ebar", "Solus Luxes", "Rozaalyna", "Ryvalia Fazebringer", "Drevarr Moonwillow"];
const professions = ["Renegade", "Firebrand", "Herald", "Firebrand", "Herald", "Scrapper", "Reaper", "Berserker", "Reaper", "Reaper", "Reaper", "Chronomancer", "Druid", "Firebrand", "Druid", "Reaper", "Berserker", "Tempest", "Berserker", "Scrapper", "Scrapper", "Chronomancer", "Firebrand", "Berserker", "Reaper", "Reaper", "Scrapper", "Druid", "Scrapper", "Reaper", "Tempest", "Druid", "Herald", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Reaper", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 2, 31, 0, 20, 0, 16], [27, 16, 30], [6, 7, 47, 0, 13, 0, 12], [23, 17, 36, 0, 1, 1, 9, 1], [7, 9, 73], [8, 38, 0, 10, 0, 16, 17], [4, 4, 36, 0, 19, 0, 20, 13, 6, 5], [5, 7, 62, 0, 0, 18, 23], [31, 15, 0, 16, 12, 13, 17, 1, 2, 0, 5, 2, 1], [3, 3, 38, 0, 12, 0, 18, 16, 7, 25, 1, 0, 3, 0, 0], [4, 11, 33, 0, 11, 12, 14, 10, 23, 1, 1, 0, 7, 1], [6, 6, 11, 0, 27, 0, 16, 22, 7, 31, 0, 1, 0, 6, 0, 0], [2, 4, 43, 0, 13, 0, 8, 22, 16, 24, 1, 1, 5, 0, 0], [6, 9, 79, 0, 22, 6, 24], [0, 9, 37, 0, 14, 0, 21, 20, 10, 29, 0, 1, 0, 5, 0, 0], [4, 3, 50, 0, 15, 0, 11, 21, 11, 27, 0, 3, 0, 2], [6, 6, 56, 0, 13, 0, 20, 20, 13, 7, 1, 1, 6, 0, 0], [0, 6, 44, 0, 16, 15, 17, 13, 31, 0, 0, 1, 6, 0, 1], [3, 7, 57, 0, 14, 0, 15, 19, 13, 23, 0, 1, 0, 2, 0, 0], [5, 4, 43, 23, 0, 12, 26, 4, 26, 0, 0, 8, 1, 3], [4, 3, 52, 20, 0, 19, 14, 13, 26, 0, 2, 0, 6, 0], [77, 0, 14, 0, 14, 21, 10, 22, 0, 0, 5, 0, 0], [4, 6, 51, 1, 20, 0, 19, 21, 14, 27, 0, 1, 1, 7, 0, 0], [4, 11, 81, 0, 18, 17, 9, 28, 0, 1, 0, 4, 0, 0], [7, 4, 53, 0, 26, 0, 22, 14, 11, 36, 0, 0, 0, 2, 1, 2], [3, 8, 66, 0, 22, 0, 21, 11, 42, 0, 0, 1, 4, 1, 0], [6, 4, 70, 0, 21, 0, 14, 13, 6, 41, 0, 0, 0, 4], [4, 5, 73, 0, 18, 0, 23, 15, 17, 18, 0, 1, 6, 2], [11, 4, 62, 0, 23, 0, 20, 13, 8, 36, 0, 0, 6, 0, 0], [4, 4, 66, 19, 0, 16, 24, 11, 35, 0, 0, 5, 0, 0], [7, 10, 63, 0, 23, 0, 1, 15, 12, 48, 1, 0, 3, 2], [6, 10, 80, 17, 0, 19, 22, 11, 24, 0, 0, 1, 9, 1], [5, 7, 81, 0, 28, 0, 18, 24, 10, 21, 1, 1, 0, 7, 0], [4, 3, 78, 0, 29, 0, 18, 20, 12, 39, 0, 0, 0, 1, 0], [4, 5, 73, 1, 21, 0, 28, 20, 10, 37, 2, 1, 6, 0, 0], [2, 14, 68, 2, 26, 0, 17, 22, 14, 34, 0, 2, 1, 5, 1, 0], [4, 10, 80, 1, 26, 19, 18, 14, 23, 3, 1, 0, 8, 1, 1], [6, 13, 71, 0, 26, 0, 20, 24, 14, 31, 0, 1, 0, 3, 0, 0], [3, 5, 79, 1, 21, 0, 20, 15, 13, 43, 1, 1, 0, 8, 2], [8, 6, 81, 27, 0, 22, 21, 14, 64, 0, 4, 4, 1, 0], [4, 13, 123, 0, 23, 0, 24, 17, 55, 1, 2, 0, 5, 0], [4, 10, 102, 0, 31, 0, 29, 21, 15, 50, 2, 1, 2, 8, 0, 0], [6, 8, 128, 0, 21, 0, 28, 23, 13, 56, 1, 1, 5, 0, 0], [4, 16, 125, 0, 37, 0, 30, 17, 14, 55, 0, 0, 1, 6, 1, 0], [8, 13, 119, 1, 24, 0, 32, 29, 20, 51, 1, 2, 8, 1, 1], [7, 13, 114, 0, 35, 0, 33, 27, 16, 51, 1, 1, 1, 9, 2, 2], [7, 10, 118, 0, 36, 2, 26, 28, 24, 48, 1, 1, 3, 7, 6], [6, 9, 133, 35, 30, 34, 18, 55, 1, 3, 1], [10, 16, 143, 0, 32, 1, 31, 33, 17, 49, 0, 3, 0, 7, 2, 0], [11, 14, 139, 0, 33, 1, 28, 44, 16, 55, 0, 3, 9, 0, 3]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

