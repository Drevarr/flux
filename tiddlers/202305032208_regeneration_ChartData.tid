created: 20230503220838000
creator: Drevarr
modified: 20230705163528158
modifier: drevarr
tags: ChartData
title: 202305032208_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Zadie Miststep", "Johosh The Great", "Skye Nightroad", "Mac Adaymia", "\u00c1rkantor", "Tribal S", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Tempest", "Tempest", "Willbender", "Scrapper", "Vindicator", "Vindicator", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1310.6496, 535.7469, 37.0293, 122.2217, 187.5867, 38.9592, 21.581, 885.4936, 17.0683, 148.0588, 732.0384, 933.3437], [1129.0469, 515.6001, 27.3596, 47.4709, 148.7738, 277.7271, 99.2678, 26.8647, 1234.7273, 10.2138, 986.7053, 1305.8608], [1796.0342, 887.5213, 32.5017, 0.0, 139.0542, 258.6906, 102.6555, 56.0282, 1144.3166, 0.0, 851.639, 1077.6521], [1867.6757, 774.593, 22.638, 8.1852, 57.0517, 259.1022, 45.511, 37.6724, 1862.7276, 79.827, 2504.3962, 2530.0586], [2099.8162, 876.1225, 91.7647, 0.0, 147.5821, 278.0358, 171.9448, 132.5395, 2195.5633, 44.7768, 0.0, 3251.9002, 1391.6255], [4893.8323, 2443.3345, 61.3813, 67.895, 288.3493, 741.909, 148.9975, 82.79, 3126.2623, 67.2494, 104.7756, 2795.4931, 3077.4612], [7155.2582, 4009.4862, 13.6475, 0.0, 394.9302, 1593.921, 85.9085, 121.08, 4762.9629], [9003.4963, 4763.1371, 367.6573, 308.2615, 890.5574, 1554.4074, 340.0864, 374.1849, 5632.5017, 768.9682, 5521.5629, 7860.8941], [9684.3677, 5045.7231, 227.803, 24.9029, 432.915, 1915.8951, 260.9534, 161.0855, 8292.5281, 133.6306, 466.5716, 6822.3917, 5622.8083]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

