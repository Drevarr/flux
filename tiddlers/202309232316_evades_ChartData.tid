created: 20230923231628000
creator: Drevarr
tags: ChartData
title: 202309232316_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Mystik Charm", "Tomebringer", "Xanvias Einzbern", "Kayes", "Lumerence", "Fqa Necr", "Varen Frostwood", "Necrotic Windrunner", "Smol Gluvs", "Alhana Lafay", "Spirita Demon", "Hawaiian Supreme", "Minka Bringer", "Govinda Ektar", "Mort\u00e4rion", "Kodarrin", "Lord Erin The Wise", "Bella Sassy", "Mellody Moon", "Black Raspberry Pie", "Ax Axun", "Xanvias", "Oo Dads Mad", "Rina Of Theros", "Leriel Nova", "Aira Draugr", "Demon Maddx", "Tootsie Pop Rocks", "Kosair", "Zaedy Zae", "Gamora Titus", "Belvyn Brightblade", "Newtype Khan", "Regis Hawkesburne", "Ryzen Grimsaw", "Sub Train", "Koralia Danai", "Mistwalker Cael", "Morv\u00e4rth", "Pr\u00e6tor Lightbringer", "Hyde En Sikh", "Nothingwillsaveyou", "Be\u00eb"];
const professions = ["Mirage", "Firebrand", "Berserker", "Spellbreaker", "Virtuoso", "Scourge", "Tempest", "Reaper", "Reaper", "Reaper", "Druid", "Spellbreaker", "Scrapper", "Vindicator", "Scrapper", "Daredevil", "Weaver", "Firebrand", "Dragonhunter", "Chronomancer", "Vindicator", "Reaper", "Berserker", "Reaper", "Tempest", "Herald", "Reaper", "Scrapper", "Firebrand", "Druid", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Herald", "Reaper", "Firebrand", "Chronomancer", "Berserker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 6, 0, 3, 0, 2, 0, 0, 3], [1, 3, 0, 0, 5, 7], [0, 8, 9], [0, 21], [0, 6, 2, 0, 6, 2, 2, 0, 4, 0], [24], [0, 0, 4, 0, 3, 23, 0, 0, 4, 0, 1, 0], [4, 22, 7, 1, 2, 5, 1, 1, 0, 0, 2], [2, 1, 5, 0, 8, 1, 8, 4, 0, 7, 0, 0, 3, 15], [0, 0, 8, 2, 1, 7, 2, 0, 5, 0, 0, 15, 22], [24, 0, 0, 38, 0], [0, 0, 21, 46], [3, 2, 0, 0, 3, 7, 18, 7, 2, 7, 0, 26], [3, 1, 0, 12, 0, 26, 0, 33], [0, 22, 2, 0, 37, 14], [27, 13, 2, 38], [2, 69, 1, 6, 3], [1, 4, 16, 5, 24, 12, 1, 3, 0, 13, 0, 7], [20, 5, 10, 4, 6, 35, 3, 5], [0, 3, 8, 0, 4, 33, 0, 4, 0, 2, 37], [10, 1, 7, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 67], [18, 14, 27, 14, 11, 0, 0, 12, 0, 3], [2, 2, 37, 4, 20, 2, 5, 4, 0, 9, 0, 6, 9], [12, 1, 10, 0, 5, 4, 2, 11, 0, 36, 1, 14, 6], [20, 0, 0, 3, 4, 5, 6, 51, 1, 0, 0, 0, 13], [11, 12, 10, 14, 15, 3, 12, 0, 0, 33, 0, 0], [35, 32, 7, 3, 21, 9, 5, 0], [4, 25, 7, 3, 7, 0, 13, 0, 0, 30, 22, 2], [10, 7, 2, 0, 9, 3, 1, 4, 0, 48, 0, 20, 9], [23, 0, 18, 0, 21, 2, 11, 1, 0, 22, 0, 17, 0], [20, 4, 12, 12, 0, 30, 0, 55], [27, 1, 10, 11, 20, 3, 21, 6, 0, 3, 0, 0, 32], [3, 24, 27, 2, 19, 8, 9, 7, 1, 22, 1, 5, 9], [13, 3, 2, 16, 30, 0, 5, 15, 0, 14, 3, 15, 22], [0, 57, 0, 45, 58], [0, 43, 22, 21, 4, 2, 1, 12, 0, 28, 0, 0, 5, 43], [21, 2, 2, 27, 8, 10, 24, 8, 1, 16, 0, 36, 27], [27, 20, 8, 8, 4, 20, 9, 5, 5, 33, 4, 24, 18], [25, 0, 11, 1, 17, 12, 1, 49, 1, 29, 0, 0, 9, 33], [41, 2, 11, 14, 4, 8, 4, 38, 0, 27, 0, 0, 21, 24], [27, 15, 26, 25, 9, 0, 7, 21, 2, 55, 0, 15, 13], [5, 0, 33, 3, 32, 8, 6, 29, 2, 70, 0, 33, 0], [21, 9, 11, 29, 22, 18, 1, 7, 0, 0, 106, 9]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

