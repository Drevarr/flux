created: 20230220220953000
creator: Drevarr
modified: 20230705163519782
modifier: drevarr
tags: ChartData
title: 202302202209_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Ch\u00e4\u00ef\u00ef", "Mac Aaroni", "Zadie Miststep", "Jeckyll Mbs", "My Birthday Girl", "Venomina The Siren", "Skye Nightroad", "Demon Sekhmet", "Smol Daddy Tika", "Xanvias Tseli", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scrapper", "Tempest", "Tempest", "Berserker", "Scrapper", "Tempest", "Scrapper", "Berserker", "Berserker", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.124, 0.552, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.028, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1.378, 0.841, 1.128, 0.85, 1.204, 0.9, 1.633, 1.369, 0.241], [0, 0.282, 0.46, 0.456, 0.487, 0, 0.312, 0.721, 0.214, 0.143, 0, 0.322, 0.162, 0.617, 0.303, 0, 0, 0, 0.203, 0, 0.281, 0.201, 0.153, 0.479, 0, 0.062], [0, 0, 0.165, 0.525, 0.485, 0.547, 0.312, 0.783, 0.279, 0.574, 0.556, 0.323, 0.648, 1.233, 0, 0.603, 0.83, 0.485, 0.69, 0, 0.672, 0.592, 0.282, 0.4, 0.459, 0.957, 0.909, 0.25], [0, 0.278, 0.724, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.028, 0, 0.505, 0, 0, 0, 0, 0.188, 0.876, 0.335, 0, 0.414, 0, 0.417], [0, 0.448, 0.603, 0, 0.061, 0, 0.274, 0, 0.175, 0.096, 0.139, 0.161, 0.487, 1.541, 0.087, 0.152, 1.661, 0, 0, 0, 0, 0.226, 0, 0, 0, 0, 0, 0.626], [0.121, 0.367, 0.602, 0.525, 0.487, 0, 0.31, 0.885, 0.785, 0, 0, 0.321, 0.323, 0.613, 0.694, 0.431, 0, 0.485, 0.69, 0, 0.337, 0.449, 0.283, 0.551, 0.46, 0, 0.907, 0], [0.728, 0.727, 0.91, 0.525, 0.122, 0, 0.625, 0], [0.607, 0.549, 0.863, 0.875, 0.812, 0.915, 0, 0, 0.592, 0.319, 0.116, 0, 0.27, 1.028, 0, 0, 0, 0.809, 1.143, 0.46, 0, 0.376, 0.47, 0.663, 0.192, 0.797, 0], [1.011, 0.696, 0.936, 0.437, 0, 0.915, 0.912, 0.196, 0.681, 0.637, 0.463, 0.536, 0.878, 1.028, 0, 1.089, 0, 0.23, 0.559, 0.564, 0.472, 0.752, 0.511, 1.241, 0], [0, 1.185, 1.273, 0.874, 1.621, 1.54, 1.042, 0, 0.944, 1.273, 0.463, 1.075, 1.349, 1.028, 1.16, 0.505, 1.384, 0.808, 1.149, 0.906, 0.56, 1.104, 1.146, 1.003, 0.765, 1.591, 1.519, 0.835], [2.139, 1.488, 1.579, 0.919, 0.485, 0, 0.468, 0.163, 1.237, 0.763, 0.817, 0.847, 1.479, 1.848, 0, 0.602, 0.208, 0.728, 1.721, 0.069, 0.841, 0.957, 0.637, 0.683, 0.456, 0.237, 0, 0.148], [1.881, 1.918, 1.969, 2.089, 1.511, 2.607, 1.564, 2.22, 2.138, 1.982, 1.39, 1.856, 2.028, 2.466, 0.985, 1.637, 1.038, 2.121, 1.724, 1.048, 1.007, 1.633, 2.047, 1.303, 1.473, 2.386, 2.622, 1.037]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

