created: 20230206215940000
creator: Drevarr
modified: 20230705163518824
modifier: drevarr
tags: ChartData
title: 202302062159_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Arkintor", "Zadie Miststep", "Arcanophage Farra", "Newtype Khan", "\u00c9\u00efbhear", "Drevarr Moonwillow", "Mac Aaroni"];
const professions = ["Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[220.704, 124.254, 155.0928, 98.8621, 26.0753, 79.2672, 28.4693, 0.0], [160.809, 146.367, 88.657, 79.6462, 0.0, 85.4496, 20.8723, 16.0582, 30.9566, 17.8244, 61.8985, 26.9526, 0.0, 51.1483, 22.2394, 30.7917, 7.5081], [198.682, 216.7776, 162.601, 148.5976, 0.0, 111.136, 23.731, 0.0, 33.2904, 16.5168, 241.7492, 0.0, 102.8879, 56.5684, 99.0662, 0.0, 0.0], [328.757, 196.1388, 139.5456, 279.6312, 48.6499, 77.5008, 67.3552, 52.3197, 124.4443, 83.9604, 160.7375, 0.0, 16.9319, 109.43, 153.3168, 83.7149, 69.4695], [476.619, 170.7264, 382.537, 295.543, 0.0, 154.3392, 5.4041, 57.8646, 5.9717, 26.5989, 286.2881, 5.3648, 71.6917, 121.7031, 14.7701, 0.0], [517.275, 192.348, 472.7866, 263.7193, 0.0, 245.5296, 76.4012, 65.6329, 295.2893, 69.0953, 272.7277, 57.6498, 169.0962, 137.3092, 271.6459, 165.3549, 51.7128], [1214.235, 502.4916, 589.8077, 614.4756, 144.4238, 549.7184, 201.8306, 140.2695, 398.2493, 256.0448, 479.29, 105.8346, 249.2354, 302.778, 409.7995, 195.6655, 150.6579]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

