created: 20230625214748000
creator: Drevarr
modified: 20230705163536268
modifier: drevarr
tags: ChartData
title: 202306252147_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Wall Knot", "Arriasa", "Fluffy No Care Bear", "Ephrem Rowf", "Drumina", "Wrath Symphony", "Koralia Danai", "Tribal S", "Xokaa", "Gavann", "Tegan Parker", "Elonith Primal", "Sumatra Satyricon", "Air One Com", "Bella Sassy", "Sakis Ranger", "Bellatrix Astra", "Seiker Novus Terra", "Traidoruns Maximus", "Gestern Yesteryear", "Aronorf Xideliesi", "Primal Clone", "Ryvalia Fazebringer", "Tacitus Kilgore I", "Oo Dads Mad", "Drevarr Moonwillow", "Avatar Sarvity", "Solus Sanctus", "Tika Fiery", "Blancooo Padreee", "Raziel Umbra", "Wild Doggy", "Newtype Khan", "Bardyne", "Grasszanine", "Morton Saltbringer", "Zayde Sunsabre", "Palm Sauce", "Gavann", "Mammary Mission", "K\u00f4sair", "Jacob Pine", "Irish Necroman", "Rozaalyna", "Smol Gluvs", "Tootsie Pop Khorne", "Mort\u00e4rion", "Cedryn X", "Riann Swordbreak", "Ateriuz", "Sp\u00edcy Cheese", "Shaca Booey", "No Reserv\u00e9", "Lord Erin The Wise", "Duke Silvver", "Legacy Of Mathus", "Be\u00eb", "Kary\u00edna", "Xyntharos", "Caelon Cai", "Xanvias Tsolice"];
const professions = ["Firebrand", "Dragonhunter", "Druid", "Berserker", "Scrapper", "Druid", "Vindicator", "Firebrand", "Druid", "Willbender", "Firebrand", "Tempest", "Tempest", "Soulbeast", "Firebrand", "Firebrand", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scrapper", "Catalyst", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Guardian", "Spellbreaker", "Dragonhunter", "Spellbreaker", "Chronomancer", "Spellbreaker", "Vindicator", "Dragonhunter", "Scourge", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Berserker", "Berserker", "Berserker", "Vindicator", "Weaver", "Vindicator", "Berserker", "Reaper", "Vindicator", "Vindicator", "Reaper", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.9258, 5.3861, 17.4819, 0.0, 2.8237, 3.503, 1.5437, 4.0179, 4.447], [11.2874, 106.0294, 66.9322], [5.3434, 0.0, 1.5904, 0.0, 3.2796, 1.0947, 3.5889, 2.5045, 1.4378, 26.6119, 17.6863, 8.2182, 2.5704, 21.2353, 28.9492], [449.2373], [21.9403, 0.0, 21.0909, 31.5733, 1.6765, 55.9322], [26.7612, 8.5804, 168.0364, 18.3106, 0.0, 105.0169], [2.7137, 0.0, 70.3962, 120.9118, 66.8814], [14.261, 29.2079, 44.512, 0.0, 8.9027, 3.9763, 29.3539, 13.297, 2.4793, 10.2239, 4.4196, 2.5818, 16.3295, 0.0, 20.4407], [14.9615, 83.3762, 62.3373, 0.0, 22.5745, 7.4024, 14.1145, 8.4633, 17.5853, 19.8507, 5.8941, 45.7636, 7.2206, 13.5], [295.2239, 17.3176, 44.8171, 215.3729], [0.0, 4.6727, 97.7692, 14.0882, 196.1695], [8.6703, 36.901, 67.1446, 4.1778, 11.9818, 28.6154, 31.9337, 17.4633, 7.0092, 0.0, 30.4627, 55.5273, 16.2293, 0.0, 39.7627], [22.9011, 47.7921, 40.1687, 0.0, 22.0669, 25.5592, 16.4774, 9.2612, 4.1797, 160.5224, 14.702, 100.8182, 35.0537, 6.0294], [157.3399, 5.8571, 109.9254, 36.8196, 0.6865], [16.2885, 113.4059, 32.247, 0.0, 26.5957, 11.4911, 41.2786, 11.9946, 38.8065, 9.5821, 5.4314, 19.7636, 45.7968, 0.0], [20.3159, 15.3861, 46.1325, 0.0, 30.5502, 16.5858, 34.2048, 18.2934, 18.8249, 39.3284, 5.8353, 2.3818, 58.7779, 27.4706, 55.6271], [28.9643, 97.505, 74.4337, 0.0, 42.1884, 7.7219, 32.5648, 26.0304, 17.8756, 75.5672, 14.3137, 31.3273, 29.2061, 10.5882, 63.9153], [44.706, 40.4356, 59.741, 2.7778, 59.5836, 15.932, 45.1762, 13.2916, 25.9401, 44.5821, 10.0784, 44.3818, 33.2671, 25.0, 39.0], [48.2747, 119.9505, 185.6867, 0.0, 43.31, 40.9201, 42.1386, 21.1431, 24.1336], [67.0687, 77.0099, 133.8976, 6.1333, 22.6809, 28.8935, 52.6732, 42.6172, 17.9539], [151.1401, 55.1485, 34.9337, 0.0, 14.6626, 13.8994, 21.2982, 26.2308, 22.9032, 41.1791, 1.5176, 36.2, 42.4775, 11.6765, 20.4407], [56.6374, 104.4257, 203.1506, 31.6889, 9.9666, 22.7604, 38.4307, 10.102, 7.2074, 84.7612, 29.3059, 46.3818, 42.106, 65.5932], [49.2633, 78.2696, 45.9696, 17.106, 47.2239, 11.0235, 0.0, 64.5385, 56.5588, 238.4746], [84.4451, 74.8713, 60.5, 0.0, 37.9119, 21.6923, 27.4413, 20.6458, 33.1382, 27.3284, 5.5882, 53.8727, 78.836, 15.5588, 28.5085], [71.1664, 86.0599, 260.6866, 55.9333, 197.2545, 100.7547, 53.2353, 31.3898], [108.033, 329.5842, 175.4699, 0.0, 34.4742, 18.2899, 84.491], [53.5549, 86.7525, 87.5783, 3.2222, 55.9666, 27.4822, 40.4834, 25.7549, 19.0691, 106.9254, 50.6784, 28.1091, 39.6546, 53.2353, 190.9492], [506.9636, 246.1393, 38.0339], [74.9945, 85.7129, 157.8976, 11.2444, 43.3678, 37.5325, 39.8117, 23.6923, 40.3134, 130.8358, 22.7412, 127.6909, 76.0189, 25.7353, 29.339], [95.6511, 200.2277, 125.6566, 27.3556, 39.5532, 62.1805, 171.8991, 61.3864, 32.6037, 37.5224, 3.2392, 50.0909, 72.1858, 133.2353, 97.7627], [95.5604, 285.2178, 136.988, 0.0, 82.5106, 43.574, 111.9383, 56.1664, 81.1244, 51.3731, 24.1137, 85.4909, 78.1611, 105.0882, 207.1017], [109.522, 252.5545, 201.5241, 0.0, 73.3161, 66.0621, 99.0316, 54.8104, 36.9309, 243.6418, 1.3412, 68.0545, 94.1379, 0.0, 103.5763], [48.6824, 358.1818, 516.3701, 5.6471, 177.8983], [132.3571, 340.7921, 266.2229, 0.0, 108.9787, 70.1657, 120.1687, 37.0787, 22.871, 86.9851, 3.5569, 186.7636, 120.6836, 80.6765, 125.4237], [157.8049, 580.3663, 883.2831, 0.0, 428.6505], [212.0027, 431.8911, 282.4096, 115.4667, 100.6778, 63.6006, 147.2816, 64.9642, 72.6175, 141.2537, 10.7647, 43.8545, 104.9289, 126.8235, 14.8983], [130.467, 92.8317, 233.3614, 0.0, 51.6596, 167.0592, 142.5843, 82.4902, 33.0138, 33.2706, 57.1091, 210.6212, 5.7059, 44.6271], [200.1758, 332.6139, 336.241, 12.1111, 116.5258, 36.0651, 131.2244, 75.3327, 73.1336, 0.0, 27.0196, 76.4909, 158.9231, 0.0, 41.6949], [87.3626, 807.8317, 804.6145, 0.0, 318.6565, 115.6982, 187.4503], [281.2041, 322.7229, 280.7281, 78.6544, 599.0746], [199.7775, 146.0495, 261.3253, 0.0, 145.6809, 57.1036, 217.1581, 59.2308, 41.0922, 340.1343, 25.898, 164.0348, 11.4412, 135.9661], [252.967, 407.2079, 464.1446, 0.0, 125.9119, 62.4882, 117.6807, 115.4794, 97.8986, 0.0, 0.0, 139.2308, 104.1471, 262.2373], [549.772, 1862.8812, 233.7952, 0.0, 375.9179, 0.0, 0.0, 208.6583, 76.3963], [189.1593, 571.1089, 541.988, 0.0, 285.4742, 181.5118, 236.6837, 152.3667, 69.3502, 287.1493, 173.7765, 295.0909, 154.5036, 248.3235, 311.5085], [440.3242, 616.0, 492.7892, 59.3333, 256.2067, 14.4379, 229.1536, 122.9678, 111.3733, 182.2836, 116.4314, 187.7455, 212.7562, 227.3235, 141.8305], [285.7253, 615.0594, 633.3735, 6.8222, 480.3161, 120.2633, 142.7003, 207.1717, 119.7419, 71.749, 559.7273, 157.8345, 4.4118, 233.3559], [214.6896, 993.2871, 864.6084, 41.1778, 281.9605, 110.5444, 287.9714, 104.4562, 136.1336, 212.7463, 15.6549, 5.3636, 141.9216, 164.9118, 501.0], [851.0385, 67.8317, 1453.5422, 0.0, 402.1702, 205.3994, 403.4593, 127.2826], [609.2308, 898.0396, 896.1506, 0.0, 355.3191, 235.3757, 413.5045, 265.3739, 225.3733, 0.0, 41.2902, 180.0624], [814.4863, 679.1584, 605.6084, 0.0, 256.1003, 247.2751, 631.491, 447.5313, 289.576], [560.6456, 1741.2079, 186.1506, 185.8667, 426.6657, 210.3876, 421.1446, 307.8479, 165.7097, 154.9254, 136.0, 91.4909, 317.9739, 198.8824, 260.3729], [522.8187, 1044.4356, 745.0482, 238.8222, 246.304, 229.9497, 515.5919, 492.737, 154.2304, 238.9254, 60.3961, 242.8182, 230.209], [1088.4698, 1513.4455, 826.7952, 107.6444, 574.921, 238.9645, 120.0226, 492.4454, 106.6129, 0.0, 29.0157, 236.8909, 322.9797, 175.3235, 245.9661], [711.2637, 831.9109, 897.1446, 0.0, 432.2918, 101.8284, 512.2831, 403.1288, 197.3825, 0.0, 121.6471, 560.8182, 423.1466, 615.0588, 742.8136], [804.6538, 953.1683, 847.9277, 134.4444, 660.6748, 464.2692, 551.2605, 386.0197, 265.2765, 0.0, 60.8549, 0.0, 229.7634], [547.8159, 1401.5842, 1066.2711, 0.0, 456.2006, 267.287, 487.869, 305.8694, 319.0415, 974.7761, 146.702, 301.4, 366.4514, 78.6471, 570.0169], [749.7253, 1543.3267, 1120.7651, 0.0, 680.6201, 216.1272, 204.6867, 418.4902, 101.3456, 505.3433, 69.3529, 65.1636, 537.1495, 200.2353, 313.9153], [633.4725, 874.4059, 1213.6566, 152.5556, 435.0669, 346.0089, 582.0015, 262.347, 263.6313, 199.0149, 174.5843, 558.9091, 481.3033, 387.5, 191.1017], [933.6703, 1075.7525, 1001.6747, 0.0, 425.5015, 295.0118, 768.9232, 413.2916, 290.3041, 136.0, 97.8549, 618.4182, 474.4398, 337.5588, 262.5932], [615.772, 1023.0891, 1353.7108, 74.3778, 531.8906, 354.1509, 718.9503, 361.3721, 240.3733, 891.5224, 110.3098, 1397.9455, 516.5443, 404.6765, 356.5763], [1133.7033, 1209.8614, 1380.6747, 67.1111, 577.5562, 417.5059, 718.2274, 450.2487, 377.7558, 198.5672, 105.5647, 206.8364, 506.9129, 360.0588, 722.0169], [1800.9258, 1376.9604, 1983.9337, 0.0, 927.465, 1216.1183, 2328.9503, 953.39, 1079.9263, 509.7015, 206.9882, 1395.4182, 1193.389, 230.0588, 485.3729]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

