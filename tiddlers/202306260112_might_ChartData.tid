created: 20230626011254000
creator: Drevarr
modified: 20230705163537689
modifier: drevarr
tags: ChartData
title: 202306260112_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Mighty", "Sub Train", "Yummy Kiwi", "Gestern Yesteryear", "Fribble Bibble", "Mmathuss", "Sygaldry Verdandi", "Xanvias Einzbern", "Drevarr Moonwillow", "Warrior Constantine", "Oo Dads Mad", "Grasszanine", "Bella Sassy", "Tribal S", "Miphest\u00f6", "Newtype Khan", "Blancooo Padreee", "Arcanophage Farra", "Smol Daddy Tika"];
const professions = ["Berserker", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Druid", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.2708, 2.6855, 1.4001, 15.4, 24.6901, 8.4816, 0.9747, 3.1487, 9.9882, 13.1036, 3.7825, 2.738, 0.9234, 2.3805, 1.99, 4.7656, 4.7846, 1.8753, 2.2085, 4.597, 6.3893, 4.1184, 4.5457, 8.2697, 2.4922, 5.06], [3.6208, 0.0, 5.3354, 21.12, 31.4731, 13.7045, 0.0, 5.023, 0.0, 14.2222, 7.565, 0.6772, 1.5805, 0.0, 2.9201, 4.3856, 0.5152, 5.2147, 5.7152, 7.5646, 4.7434, 3.0902, 5.2704, 2.4343, 1.8377, 0.4858, 2.9146], [2.3906, 18.4426, 14.9274, 46.342, 18.0029, 3.267, 4.6301, 2.3342, 4.3166, 4.8686, 5.52, 4.3008, 0.2322, 6.0517, 1.4933, 8.8949, 2.2176, 8.9176, 4.0749, 3.4426, 8.9258], [9.1104, 4.7141, 4.3516, 22.88, 15.3296, 3.6158, 0.0, 19.6421, 10.8662, 38.352, 13.2149, 2.0196, 2.738, 1.7186, 4.7293, 0.0, 1.3248, 9.4618, 4.0519, 0.0, 0.5846, 0.6624, 2.0369, 1.7977, 1.1405, 1.599], [4.9932, 3.381, 8.287, 16.984, 34.1863, 2.723, 10.1959, 4.7746, 35.4756, 4.4528, 2.9606, 3.2832, 2.7296, 2.8207, 7.268, 5.2416, 1.0002, 2.3998, 4.4798, 6.7234, 2.7936, 1.8382, 2.2771, 2.3866, 2.7931], [13.3027, 15.2939, 15.6957, 83.096, 15.9919, 3.2789, 1.3801, 0.2052, 3.5549, 4.6561, 3.7904, 18.5203, 8.1977, 6.7473, 3.4258, 8.7696, 3.3696, 0.9439, 5.0736, 1.7107, 2.2871], [5.0516, 5.9506, 13.9251, 17.424, 27.2677, 12.1867, 0.5643, 32.462, 14.5432, 15.98, 15.8004, 0.9623, 1.0685, 2.8984, 3.3962, 6.9166, 3.8456, 11.2358, 9.8766, 3.2171, 1.8446, 5.053, 4.5216, 1.8133, 6.0724, 2.5766, 2.105], [12.8772, 4.6561, 7.1896, 24.552, 28.3529, 10.2226, 0.9747, 9.5962, 13.1712, 28.6042, 9.5281, 3.6472, 9.3937, 3.5397, 13.1086, 2.415, 2.4472, 5.0803, 1.8396, 2.5389, 10.8922, 3.0902, 6.3648, 6.8062, 10.9863, 4.7098, 4.048], [10.1908, 2.7628, 6.0544, 15.576, 52.7717, 12.5885, 0.8824, 16.1186, 12.7322, 40.4294, 5.9371, 3.564, 5.0085, 5.6686, 6.475, 1.6422, 8.0592, 4.1664, 2.3397, 3.3389, 5.9438, 12.528, 4.7232, 5.4896, 4.6742, 3.9494, 4.1897], [22.0522, 4.658, 30.063, 26.2875, 88.5292, 27.3395, 2.5542, 5.2088, 3.5141, 3.3327, 5.371, 2.5576, 10.8595, 5.8045, 9.1993, 8.052, 15.7435, 12.4128, 3.6515], [26.5428, 10.7419, 16.6496, 38.456, 36.4925, 10.9814, 36.1355, 18.1653, 39.151, 22.5994, 7.5794, 0.0, 0.3591, 0.9205, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0203, 1.7957, 7.0272, 1.5152, 4.9538, 7.8778, 6.1125], [36.0562, 86.1322, 29.3026, 5.3222, 6.3886, 4.0014, 14.7274, 4.2118, 12.7144, 10.3757, 23.0573, 8.7298, 6.0902, 17.2051, 10.8288, 13.6372, 17.7777, 5.6602, 9.9176], [6.5116, 11.5727, 13.9251, 58.168, 59.4191, 17.1864, 4.3708, 15.069, 19.8666, 74.6266, 27.7704, 0.095, 2.1815, 1.5133, 1.0474, 3.2071, 7.2312, 14.8915, 7.0368, 11.7035, 3.7771, 9.563, 7.5744, 7.9985, 3.1561, 2.7245, 3.542], [24.7032, 2.8014, 29.1368, 60.632, 71.2215, 25.3555, 40.6337, 18.769, 19.975, 2.3879, 4.3184, 2.7189, 30.9782, 3.806, 12.1992, 1.0752, 0.0, 15.3032, 5.9731, 0.0, 18.7488, 14.5314, 14.5818, 11.7005, 7.59], [3.1786, 84.128, 110.8342, 27.409, 0.0, 39.2843, 28.4827, 163.4754, 5.5541, 0.0, 0.0, 5.1813, 13.553, 4.289, 0.0, 8.7898, 0.7323, 11.2687, 5.8267, 5.8464, 0.0, 0.9191, 6.1523, 0.0, 0.0], [29.2, 27.048, 39.1266, 76.208, 58.4695, 44.015, 9.2237, 53.3037, 57.1301, 123.6852, 28.3928, 8.0428, 4.452, 5.1557, 11.5534, 19.0495, 10.948, 12.983, 21.682, 18.9899, 10.8043, 27.5198, 19.3536, 13.4136, 30.4419, 12.2707, 13.6215], [21.754, 17.7937, 28.9098, 79.904, 145.9702, 46.9613, 0.0, 51.2795, 34.5744, 148.4542, 12.2573, 8.3252, 7.8745, 20.5358, 22.6237, 15.8608, 13.4938, 7.0904, 12.5208, 8.3155, 35.4125, 18.9216, 15.4008, 16.2197, 9.1872, 4.4933], [26.4844, 27.2219, 37.9157, 93.28, 177.3076, 37.8547, 11.7785, 65.2239, 35.1781, 202.946, 43.2356, 11.9988, 13.1111, 18.2885, 16.5048, 9.2156, 10.6904, 20.9126, 4.9472, 19.5116, 14.845, 31.0694, 25.2288, 9.6628, 17.3782, 13.0099, 9.3509], [39.7704, 32.7667, 57.5168, 126.456, 211.6296, 55.8893, 12.1068, 90.6387, 65.0328, 181.8524, 66.3138, 6.237, 6.2773, 16.4416, 28.7564, 18.8563, 23.4784, 14.999, 27.2008, 26.9197, 28.9579, 48.901, 20.016, 16.6676, 32.6791, 12.672, 15.0383]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

