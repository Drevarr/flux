created: 20230304223548000
creator: Drevarr
modified: 20230705163521243
modifier: drevarr
tags: ChartData
title: 202303042235_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Aronorf Xideliesi", "Blanco Padre Guard", "Sygaldry Verdandi", "Gabe Malhorn", "Koralia Danai", "Bella Sassy"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[83.4995, 38.5793, 39.6288, 14.6804, 41.8499, 42.8094, 0.0, 54.8533, 213.6575, 0.0, 0.0, 136.01, 183.8382, 85.9512, 29.3004, 73.935, 25.085], [353.2506, 81.1526, 111.0672, 83.1001, 133.569, 0.0, 28.8387, 0.0, 39.7333, 465.7733, 0.0, 24.0666, 228.0096, 449.0668, 167.9545, 53.7231, 207.855, 153.004, 79.492, 94.1247], [201.8266, 122.8042, 42.2928, 0.0, 85.3, 76.4694, 39.8412, 25.137, 111.7908, 56.9197, 559.7826, 30.5619, 250.2584, 399.7357, 92.6958, 62.4358, 429.195, 157.006, 119.21, 0.0], [680.0019, 70.4873, 13.6512, 42.0092, 0.0, 146.3081, 127.9386, 23.9382, 120.2639, 626.0901, 0.0, 30.8448, 522.116, 427.2996, 114.6565, 0.0, 475.695, 76.444, 177.702, 34.7708], [704.9869, 339.4014, 9.4896, 20.1256, 19.5663, 256.9638, 72.4914, 111.078, 12.213, 123.2715, 653.4972, 26.724, 89.5859, 514.2396, 670.4061, 278.5807, 117.4372, 330.429, 195.953, 171.626, 42.6696], [627.8688, 120.8731, 33.0336, 27.4004, 190.7903, 123.8382, 42.2321, 147.9654, 20.3263, 151.5063, 653.3499, 67.524, 69.3274, 412.1712, 820.5288, 220.0187, 133.4835, 540.237, 248.182, 105.112, 56.952], [597.3677, 171.9171, 48.3984, 61.8181, 16.8067, 132.347, 41.8302, 0.0, 72.5571, 0.0, 139.1485, 999.7698, 1.284, 27.0042, 493.7772, 956.4555, 307.4505, 258.0524, 735.351, 249.574, 158.144, 117.0151]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

