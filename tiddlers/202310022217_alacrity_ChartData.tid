created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Tegan Parker", "Drell The Silent", "High Sorcer Baradun", "Venomina The Sly", "Soft And Chewy", "Zaedy Zae", "Tribal S"];
const professions = ["Scrapper", "Tempest", "Druid", "Tempest", "Druid", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.5261, 9.993, 0.0, 38.7912, 0.0, 9.988, 161.6044, 14.5736, 9.5604, 0.0, 10.0165, 35.0226, 38.9367, 57.0855, 16.5581, 29.8469, 22.419, 67.4001, 28.1034, 22.086, 7.5411, 0.0, 12.4956, 0.0], [53.4446, 41.9302, 90.3929, 0.0, 0.0, 546.0908, 13.673, 0.0, 12.328, 227.5896, 39.1552, 126.1245, 72.0535, 101.3804, 39.096, 46.0161, 0.0, 55.7739, 0.0], [0.0, 31.6342, 562.3114, 55.5577, 52.6623, 10.1706, 110.3356, 101.4171, 81.0198, 140.5271, 43.6806, 13.4006, 96.4993, 13.4688, 0.1638, 41.526, 63.4324, 0.0, 13.2151, 53.5058], [40.4669, 35.3661, 27.0178, 129.903, 336.1252, 121.0433, 114.0838, 0.0, 209.576, 309.1568, 141.9813, 136.2705, 55.6679], [225.0798, 90.3279, 272.8908, 181.104, 159.2849, 125.9664, 66.1094, 83.7018, 66.258, 104.8829, 86.6285, 91.1547, 169.3718], [86.4438, 0.0, 54.2488, 1795.6716, 27.5561, 71.1421, 385.0959], [172.2068, 0.0, 0.0, 118.6284, 2436.3822, 121.1706, 264.7534, 0.0, 339.4823, 621.0515, 200.9326, 290.0339, 124.0131, 166.8227, 0.0, 185.7011, 3.5802, 63.558, 163.3136, 147.3903, 134.3453, 194.0435], [124.208, 144.6138, 0.0, 232.943, 0.0, 3055.4654, 226.0493, 205.2012, 147.3978, 670.9514, 731.7091, 187.5604, 496.5097, 233.2361, 210.8317, 183.2511, 230.8216, 127.8342, 147.825, 113.6808, 100.3429, 127.9571, 291.8221]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

