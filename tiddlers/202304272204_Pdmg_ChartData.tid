created: 20230427220456000
creator: Drevarr
modified: 20230705163527045
modifier: drevarr
tags: ChartData
title: 202304272204_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Choo Sayaccho", "Tuandha Lan", "Zanos De Lione", "Red Reaper Robin", "Forever Broke", "Blaize Harlot", "Mistwalker Caelon", "Skye Nightroad", "Heal Warriior", "Joint Lee", "Necrotic Windrunner", "Puny Tinker", "Smol Gluvs", "Tootsy Pop Tart", "Morv\u00fcs", "Kmpek", "Binkety Bonk", "Mistwalker Caelon", "Rylov", "Clem Storage Xviii", "Xanvias Tlesia", "Abserns Sorcerer", "Heal Warriior"];
const professions = ["Firebrand", "Herald", "Vindicator", "Reaper", "Scourge", "Scourge", "Herald", "Scrapper", "Spellbreaker", "Scrapper", "Scourge", "Scrapper", "Scourge", "Reaper", "Berserker", "Vindicator", "Scrapper", "Vindicator", "Catalyst", "Scrapper", "Daredevil", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[258.3571, 106.6413, 144.7222, 95.0286, 327.7365, 329.9479, 305.3519, 274.8019, 675.3739, 118.1215, 226.9118], [454.7323, 1217.1714, 310.6527, 651.2986, 539.9444, 154.5943], [107.0744, 157.995, 471.2333, 956.8431, 255.9344, 241.9935, 135.9384, 171.3786, 46.7717, 267.298, 968.2571, 21.5509, 90.1493, 404.8889, 53.7642, 64.2609, 4.8993], [1116.2358, 864.2, 583.375, 2088.3235], [60.959, 137.3582, 907.8, 2554.7451, 365.3443, 515.4379, 292.1884, 622.3429], [213.1077, 32.99, 84.75, 1046.9608, 95.5574, 188.2353, 269.6062, 174.5214, 102.7065, 204.4798, 1215.2571, 177.2335, 323.0694, 31.3704, 190.2453, 93.7826, 59.2569, 488.3235], [126.0615, 187.9602, 2014.6333, 1591.2157, 73.7541, 565.4379, 662.5171], [638.641, 0.0, 841.45, 1737.3137, 128.1967, 609.1503, 328.2021], [2832.549, 66.3607, 728.7778, 259.0753, 1380.1071, 676.4674], [353.9674, 557.2525, 1814.1143, 254.7305, 1224.6562], [561.8071, 330.2609, 725.0859, 1661.5429, 276.9461, 558.8646, 829.1852, 213.9434, 436.8522, 138.8576, 821.6471], [545.3804, 663.1364, 1202.5429, 373.1497, 925.1354, 1289.3704, 294.4245, 283.6609, 156.9688, 702.1471], [176.7256, 4.2587, 747.05, 949.6471, 44.2623, 292.2026, 172.613, 855.8429, 80.4674, 390.298, 1155.3429, 217.8802, 512.316, 202.6481, 440.6604, 415.2609, 108.1979, 1804.2353], [110.5333, 223.99, 874.65, 1215.9608, 0.5246, 58.2288, 190.7123, 480.55, 104.1522, 999.3687, 2531.2571, 231.7545, 562.2604, 557.2593, 323.4057, 347.3826, 324.5104], [2287.601, 2101.8, 460.7844, 1441.0243, 1057.0185, 281.4528, 108.4, 94.8854, 2048.0], [590.5109, 1519.197, 3571.0571, 723.994, 1792.0625, 552.6111, 190.9528, 601.1304, 50.9375], [599.2609, 1403.3838, 3030.2571, 359.3293, 1281.8368, 330.2222, 490.1981, 807.1913, 599.0382, 1862.9118], [1785.3143, 1342.4783, 2581.1515, 3417.4, 933.5509, 2002.8889, 1507.0556, 932.1604, 369.0435, 156.3264], [2095.5929, 1849.7283, 1211.1667, 2156.9429, 483.7305, 1694.6076, 756.4815, 361.5189, 1258.3739, 700.1701, 7288.1765], [0.0, 1276.1857, 1078.7283, 2432.8939, 3315.9143, 673.4611, 2247.4479, 1605.037, 1054.0094, 1452.6522, 68.7431, 2845.2941], [453.9051, 238.4627, 863.8667, 3691.8431, 536.3607, 1067.4575, 1058.5719, 1322.0357, 278.3587, 1640.3535, 4324.8, 880.0299, 1790.1354, 775.2593, 736.1698, 341.3565, 6.7361, 3716.9118], [919.8623, 3303.5382, 2252.1481, 4181.3019, 3544.7565, 1571.5868, 7973.3824], [4585.2323, 3386.5714, 183.2635, 3185.6458, 3909.963, 1958.0377, 2069.8087, 2127.8056, 9273.7647]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

