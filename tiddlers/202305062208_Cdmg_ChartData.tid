created: 20230506220820000
creator: Drevarr
modified: 20230705163528746
modifier: drevarr
tags: ChartData
title: 202305062208_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Kosa\u00efr", "Hauzzy", "Sygaldry Verdandi", "Husky Guard", "Ark Darkness", "Im Killin It", "Miphest\u00f6", "Demon Dalham", "Lord Erin The Wise", "Freylk Nasferatu", "Kosa\u00efr", "Antherisa", "Aronorf Xideliesi", "Ria Zerria", "Cerys Fireblade", "Dargon Spiritwalker", "Grilo Gringo", "Smol Gluvs", "Im Killin It", "Puny Demon", "Rina Of Theros", "Xanvias Einzbern", "Be\u00eb", "Mammary Mission"];
const professions = ["Catalyst", "Catalyst", "Berserker", "Firebrand", "Dragonhunter", "Firebrand", "Harbinger", "Tempest", "Dragonhunter", "Weaver", "Scourge", "Weaver", "Reaper", "Firebrand", "Scourge", "Berserker", "Scourge", "Dragonhunter", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.4034, 2.0744, 0.0, 18.0082, 6.0312, 14.8135, 22.5768, 28.5362, 11.9136, 11.3599, 0.0, 0.0, 25.1081, 38.7805], [18.9498, 74.1333], [63.4916, 45.3863, 37.8513], [8.3679, 18.6786, 9.8688, 0.0, 8.8255, 12.7659, 28.2448, 4.8261, 17.7778, 28.469, 0.0, 0.0, 28.6757, 39.2195], [7.3579, 39.6701, 7.3744, 1.8562, 6.321, 3.7891, 25.246, 17.2022, 25.5507, 6.4444, 27.6283, 12.8095, 0.0, 8.3986, 30.9268], [12.1371, 11.9179, 14.5667, 1.1438, 17.893, 8.4323, 24.7698, 24.5491, 5.971, 14.6173, 25.6018, 0.0, 0.0, 63.1622, 62.4146], [146.4427], [37.6689, 46.6256, 35.9974, 0.0, 20.3359, 10.8254, 21.4618, 24.3478, 25.0, 9.4897], [26.9231, 110.0137, 28.4897, 11.4625, 26.3786], [85.1786, 41.3023, 44.4938, 44.6313, 0.0, 0.0, 87.5608, 22.6829], [17.1672, 58.4291, 63.9282, 66.6688, 1.3045, 40.974, 42.9841], [18.7026, 26.5562, 22.037, 105.5286, 41.1111, 27.6056, 29.1358, 20.6047, 0.0, 0.0, 18.5946], [49.3312, 32.823, 38.3438, 63.7937, 34.5391, 18.0725, 59.7037, 38.3776, 14.9365, 11.5833, 56.0676, 95.1098], [1.2809, 20.1162, 23.1154, 107.4437, 40.2551, 22.3828, 10.0317, 37.4638, 35.8025, 52.2301, 15.6984, 8.0, 9.9122, 44.1829], [0.8452, 58.4163, 76.058, 191.3457, 64.0088, 10.3333, 0.0, 126.3716, 89.6341], [58.107, 58.388, 17.2103, 5.7375, 11.9547, 41.3073, 51.5357, 17.0159, 35.4928, 50.7037, 44.2006, 0.0, 0.0, 99.9257, 14.6585], [7.8662, 40.7043, 8.859, 3.8188, 37.7901, 25.3125, 50.1706, 39.7284, 52.4058, 194.4568, 42.4071, 1.9048, 0.0, 94.8311, 185.9512], [60.8021, 25.1825, 47.1814, 31.942, 156.1975, 161.5516, 86.3016, 159.9797, 155.5366], [51.3512, 26.6359, 3.3103, 0.0, 33.2222, 68.0807, 78.7937, 52.8385, 84.6812, 59.3827, 74.5192, 0.0, 56.9257, 149.9634], [37.7051, 59.9062, 179.7202, 102.6979, 161.5754, 57.002], [49.2475, 106.7504, 43.9641, 15.7312, 95.8477, 27.6979, 105.8651, 66.5114, 91.1159, 38.679, 41.3746], [27.9365, 60.1641, 30.8974, 3.775, 79.1029, 44.0156, 109.7698, 89.8365, 32.5507, 105.2222, 90.0796, 26.5714, 1.5833, 149.0811, 162.6341], [68.8595, 101.5299, 51.5718, 11.9563, 52.5967, 104.8906, 62.2579, 48.7245, 233.0725, 43.1235, 92.2183, 31.8571, 52.4167, 162.3581, 153.1951], [46.2843, 131.2684, 33.9564, 4.4625, 106.7901, 93.9323, 133.2063, 93.2745, 1.9855, 245.4321, 79.3451, 0.0, 5.0417, 168.8446, 151.5366], [71.204, 51.294, 25.6308, 19.5312, 175.3045, 84.7578, 205.9286, 117.0922, 0.0, 49.6543, 190.5015, 6.0, 3.7083, 408.4662, 53.6463]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

