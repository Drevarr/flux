created: 20230206215940000
creator: Drevarr
modified: 20230705163518730
modifier: drevarr
tags: ChartData
title: 202302062159_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c9\u00efbhear", "Gavann", "Drevarr Moonwillow", "\u00c2 R K", "Ravioli Fetabringer", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy", "Johosh The Great"];
const professions = ["Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[122.331, 176.904, 10.3142, 46.7791, 0.0, 16.56, 0.0783, 10.6232, 0.0686, 5.0927, 50.9684, 6.2738, 0.0, 21.4935, 2.471, 0.0], [169.279, 181.1862, 50.9645, 109.9918, 0.0, 156.9888, 16.5647, 51.9079], [147.62, 292.5234, 9.025, 44.2576, 0.0, 35.328, 2.8195, 15.2073, 14.9635, 23.6053, 29.2834, 11.2533, 5.7798, 23.3937, 135.0648, 0.0, 12.6672], [67.639, 161.1792, 60.5962, 87.1239, 0.0, 116.4352, 11.0431, 23.1678, 26.8382, 9.1187, 55.9367, 9.4156, 0.0, 177.5861, 3.3696, 0.0, 56.1498], [326.821, 318.9888, 118.4621, 71.212, 7.0686, 124.752, 60.7763, 37.0026, 91.8403, 72.089, 156.5291], [101.882, 297.0864, 105.6451, 103.2966, 0.0, 168.8384, 32.1112, 22.8109, 52.5782, 83.7539, 89.5454, 0.0, 0.0, 179.1125, 132.4253, 46.2477, 0.0], [277.695, 338.4342, 158.5056, 82.6025, 55.9205, 132.848, 66.4937, 28.4657, 165.1478, 124.0136, 140.28, 32.8115, 128.8228, 73.7632, 132.7622, 70.7246, 17.835], [433.422, 291.8916, 242.0054, 134.6855, 42.8604, 103.9968, 62.7735, 29.0695, 275.315, 75.4267, 153.8988, 36.141, 77.7309, 52.9862, 295.5139, 192.448, 37.2708], [638.638, 626.1138, 290.4672, 218.5053, 118.1466, 323.84, 103.0691, 70.9857, 442.9339, 191.6981, 289.4444, 126.6616, 162.5754, 206.7737, 178.5326, 141.8101, 115.8666]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

