created: 20230517220640000
creator: Drevarr
modified: 20230705163530603
modifier: drevarr
tags: ChartData
title: 202305172206_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Tootsie Pop Rocks", "Newtype Khan", "Miphest\u00f6", "Tegan Parker", "Grasszanine", "Venomina The Siren", "Artakama Nahid", "Arriasa", "Blancooo Padreee", "Cyclotechnist Farra", "Xanvias Einzbern", "Zadie Miststep", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Weaver", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Druid", "Berserker", "Scrapper", "Berserker", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.406, 0.805, 0, 0, 0.288, 0.497, 0.749, 0, 0, 0, 0.51, 0, 0, 0, 0.135, 0.213, 0.291, 0, 0.423, 0.43, 0, 0, 0.114, 0, 0, 0, 0, 0, 0, 0.141, 0, 0, 0, 0, 0, 0.346], [0, 0, 0.304, 0.062, 0, 0, 0.24, 0, 0.463, 0.134, 0, 0, 0.508, 0.326, 0, 0.466, 0.286, 0.96, 0.554, 0.805, 0, 0, 0, 0.612, 0, 0.147, 0.521, 0.48, 0.537, 0, 0.119, 0, 0.453, 0.114, 0.301, 0, 0.173], [0, 0, 0.506, 0, 0, 0, 0.697, 0.797, 0, 0, 0, 0, 0.646, 1.011, 0, 0, 0.312, 0.795, 0.306, 0.45, 0, 0, 1.139, 0.804, 0.538, 0.298, 0.28, 0.301, 0, 0, 0.199, 0, 0.38, 0.188, 0.503, 0, 0.626], [0, 0, 0, 0.41, 0.395, 0, 0.767, 0.122, 0.438, 0, 0.452, 0.335, 0.532, 0.65, 0.738, 0.623, 0.612, 0.592, 0.398, 0.684, 0.564, 0, 0, 0.683, 0.386, 0.327, 0.139, 0.671, 0.249, 0.359, 0.315, 0, 0.133, 0], [0, 0, 0.406, 0.248, 0.234, 0, 1.145, 0.365, 0.116, 0, 0.325, 0.32, 0.488, 0.651, 0, 0.623, 0.518, 0.427, 0.3, 0.749, 0, 0.801, 0.457, 0.33, 0.142, 0.336, 0.546, 0.359, 0, 0.454, 0, 0.502, 0.195, 0.365, 0, 0.277], [0.087, 0, 0.758, 0.414, 1.075, 0, 1.375, 0.517, 0, 0, 0.863, 0, 0.473, 0.492, 0, 0.514, 0.62, 0.691, 0.342, 0, 0, 0, 0, 0, 0.33, 0.538, 0.539, 0.28, 0.482, 0.598, 0, 0.199, 0, 0.17, 0.418, 0, 0.378, 0.6], [0.038, 0, 0.406, 0.473, 0.679, 0.06, 0.735, 0.86, 0.406, 0, 0.165, 0, 0.531, 0.664, 0.746, 0.243, 0.388, 0.591, 0.391, 0.457, 0.407, 0.943, 0.683, 0.493, 0.42, 0.412, 0.46, 0.545, 0.624, 0, 0.565, 0, 0.389, 0.357, 0.246, 0, 0.277], [0, 0, 0.406, 0.496, 0.878, 0, 0.384, 0.491, 0.462, 0, 0.333, 0.302, 0.355, 0.561, 0.201, 0.622, 0.484, 0.427, 0.579, 0.202, 0.565, 0.425, 0, 0.683, 0.53, 0.322, 0.588, 0.463, 0.253, 0.358, 0.933, 0.464, 0, 0.13, 0.386, 0.604, 0.378, 0.829], [0, 0, 0.202, 0.372, 0.631, 0, 0.764, 0.118, 0, 0.653, 0.632, 0.333, 0.177, 0.609, 0.746, 0.613, 0.645, 0.636, 0.371, 0.655, 0, 0.428, 0, 0.589, 0.655, 0.323, 0.438, 0.425, 0.562, 0.359, 0, 0.55, 0, 0.519, 0.259, 0.302, 0.227, 0.275], [0, 0, 0.338, 0.414, 1.217, 0, 0.64, 0.53, 0.749, 0, 0, 0.588, 0.295, 0.512, 0, 0.868, 0.606, 0.356, 0.452, 0, 0, 0.719, 0, 1.248, 0.735, 0.777, 0.731, 0.478, 0.719, 0.575, 0, 0.336, 1.216, 0, 0.486, 0, 0.503, 0.674], [0, 0, 0.304, 0.249, 0, 0, 1.025, 0.35, 0, 0, 0, 0.467, 0.465, 1.376, 0, 1.236, 0.758, 1.11, 0.947, 1.38, 0, 0, 0, 0.683, 0.331, 0.666, 0.586, 1.239, 0.871, 0.315, 0, 0.544, 0, 0.716, 0.427, 0.453, 0.227, 0.343], [0, 0.465, 1.015, 0.621, 1.066, 0, 1.166, 0, 0.773, 0, 0.274, 0.561, 0.591, 1.656, 1.245, 0.511, 0.865, 1.038, 0.342, 0.45, 0, 0.713, 0, 1.139, 0.889, 0, 0.73, 0.873, 0.988, 0.598, 0, 0.777, 0, 0.722, 0.238, 0.503, 0, 0.713], [0, 0.514, 0.59, 0.743, 1.289, 0.992, 0.767, 0.429, 0, 0.654, 0.487, 0.907, 0.473, 0.977, 0.746, 0.621, 0.747, 0.806, 0.58, 0.271, 0.423, 0.802, 0.683, 0.683, 0.735, 0.311, 0.381, 0.771, 0.558, 0.588, 0.495, 0.722, 1.46, 0.906, 0.486, 0.9, 0.755, 0.971], [0.339, 0.257, 0.659, 0.835, 1.374, 1.744, 1.574, 0.776, 0.654, 0.884, 1.147, 1.156, 0.462, 0.595, 1.276, 0.959, 0.359, 0.782, 0.692, 1.069, 2.001, 0.683, 0.974, 0.848, 1.162, 1.254, 0.939, 1.268, 0, 1.451, 0, 0.707, 0.301, 0.302, 0.139], [0.209, 1.284, 1.697, 1.043, 1.611, 0.035, 1.875, 1.017, 1.85, 0.981, 0.737, 1.109, 1.395, 1.579, 1.12, 1.556, 1.712, 1.641, 1.315, 1.672, 0.685, 1.067, 0.101, 1.849, 1.581, 1.316, 1.537, 1.592, 1.46, 1.545, 0.837, 2.016, 1.095, 1.604, 0.776, 2.1, 1.509, 1.866]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

