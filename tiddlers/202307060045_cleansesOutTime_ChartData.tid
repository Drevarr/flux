created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Solus Sanctus", "Artakama Nahid", "Mike The Archmagus", "Primal Clone", "Newtype Khan", "Eibh\u00ebar", "Tegan Parker", "Stoic Rapidfire", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.1707, 0.0, 19.1176, 10.0755, 10.2923, 15.0625, 14.9647, 12.2051, 9.9483, 10.531, 16.1467, 0.0], [22.1341, 11.6346, 22.6324, 0.0, 8.0462, 15.1125, 10.9647, 10.0513, 13.6379, 13.0973, 7.9733, 0.0], [63.0122, 21.9231, 60.6029, 52.434, 44.4308], [78.7561, 57.7692, 65.2353, 60.4151], [19.2195, 16.0962, 6.9853, 13.9057, 17.2308, 23.2375, 44.2, 22.9744, 32.2586, 34.3009, 34.2667], [22.1585, 13.8654, 31.0, 15.1321, 18.1231, 41.375, 21.9882, 20.141, 18.2241, 43.7699, 27.7867], [4.0122, 14.0192, 8.0441, 19.6981, 16.4462, 48.125, 44.2235, 34.3974, 22.8621, 35.6903, 36.4267, 0.0], [55.4268, 31.8462, 43.6765, 34.4906, 67.9077, 72.9, 47.3412, 32.359, 32.7759, 78.3628, 86.92, 6.0], [73.6462, 127.7, 78.4118, 101.6026, 86.0517, 146.0796, 107.7067, 0.0], [96.5488, 37.0, 48.5, 68.7547, 51.5692, 73.7625, 79.3647, 92.0256, 37.7241, 108.2301, 77.6667, 4.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

