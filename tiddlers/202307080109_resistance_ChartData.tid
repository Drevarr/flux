created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Pale Pam", "Gamora Titus", "Morton Saltbringer", "Drumina", "Gestern Yesteryear", "Tribal S", "Rahani Sunray", "Ryvalia Fazebringer", "Arriasa", "Air One Com", "Aronorf Xideliesi", "Melli Dragonswrath", "Arcanophage Farra", "Johosh The Mighty", "Bella Sassy", "Grasszanine", "Xanvias Einzbern", "Ateriuz", "Koralia Danai", "Tika Fiery", "Newtype Khan", "Solus Sanctus", "K\u00f4sair"];
const professions = ["Druid", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Druid", "Chronomancer", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.9787, 27.1848, 30.8734, 46.3651, 0.0, 0.0, 40.3166, 0.0, 25.1873, 27.9418, 10.4949, 96.4675, 34.2, 0.0, 27.8639, 27.2182, 27.2803, 86.2914], [13.5736, 6.4296, 7.2869, 12.9744, 11.388, 0.0, 35.5992, 0.0, 29.2411, 11.9232, 22.2869, 37.13, 21.5939, 9.747, 6.4747, 11.9131, 3.6883, 11.3362, 40.6203, 71.4909, 6.4363, 37.6974, 4.8558, 0.0, 0.0, 4.6488, 29.9846, 21.7404, 27.8369, 6.5205, 32.537, 6.776], [8.0816, 5.2452, 3.6434, 15.1776, 4.8672, 3.4515, 17.5157, 3.3669, 11.5127, 10.2902, 14.4525, 7.8448, 10.7302, 7.3013, 6.4404, 3.6557, 7.5201, 16.675, 37.8534, 9.4107, 9.7929, 14.8025, 0.0, 0.0, 4.2046, 13.3452, 8.8099, 4.914, 22.9055, 4.858, 274.3885], [21.0748, 42.0744, 31.4486, 44.7494, 20.9664, 0.0, 30.9254, 13.6611, 21.1876, 19.1808, 21.1666, 12.5725, 24.5322, 21.204, 0.0, 19.5882, 15.319, 26.2642, 36.018, 67.0956, 20.8205, 21.2004, 21.2247, 0.0, 9.3864, 11.4374], [19.3781, 0.0, 0.0, 0.0, 0.0, 0.0, 24.8976, 0.0, 34.8082, 19.5696, 23.3776, 56.5175, 16.5488, 20.5628, 19.4045, 13.6817, 16.2187, 10.4052, 37.1358, 0.0, 25.4826, 25.8064, 0.0, 0.0, 9.1791, 35.3556, 38.0952, 14.8056, 0.0, 48.2807, 1.61, 189.1709, 0.0, 71.0226, 61.5223], [43.1319, 0.0, 0.0, 62.0323, 0.0, 0.0, 40.6661, 0.0, 24.7549, 15.9149, 7.5469, 65.33, 9.8683, 69.7253, 35.9357, 14.4826, 0.0, 29.912, 41.0872, 121.1847, 0.0, 28.9224, 27.0596, 0.0, 18.3582, 44.3201, 30.2148, 46.3744, 0.0, 51.1825, 16.828], [6.6529, 6.6552, 7.8302, 13.3171, 6.3336, 3.8317, 21.84, 0.0, 10.1074, 10.057, 11.6446, 41.595, 5.2391, 11.286, 6.6518, 7.0744, 12.5148, 19.4764, 52.4745, 0.0, 16.6023, 18.2877, 0.0, 0.0, 10.0378, 11.9398, 11.682, 9.9723, 14.8995, 28.03, 6.622, 371.6937, 14.8247, 77.4792, 68.0379], [7.6352, 7.614, 7.6065, 24.8717, 14.9136, 4.6507, 22.6699, 0.0, 13.5666, 17.9366, 10.2885, 55.3425, 9.2585, 26.4195, 0.0, 12.0466, 0.0, 21.1011, 32.2161, 55.7037, 13.3602, 26.676, 27.8819, 5.1546, 0.0, 16.3151, 20.4792, 16.236, 15.295, 7.812, 22.7821, 5.726, 436.3624, 5.4094, 0.0, 86.6619, 79.5655], [26.8346, 32.0916, 0.0, 60.7594, 0.0, 0.0, 30.3576, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 107.1915, 30.2312, 7.8273, 22.7911, 0.0, 0.0, 0.0, 25.9274, 60.1128, 0.0, 29.0745, 0.0, 0.0, 720.421, 0.0, 0.0, 298.008, 153.6178], [9.957, 0.0, 3.7393, 13.6598, 9.5472, 3.7147, 46.1698, 0.0, 36.8621, 33.1258, 27.2985, 3.6425, 6.5419, 53.6085, 7.0061, 39.5101, 36.029, 40.02, 84.4077, 9.8983, 44.4015, 37.3586, 2.7804, 0.0, 44.5334, 41.8471, 39.8772, 33.8325, 3.969, 45.9963, 37.618, 573.5566, 0.0, 111.9144, 145.8492], [38.8008, 9.1932, 16.7151, 17.9194, 4.524, 0.0, 60.4968, 0.0, 36.3757, 35.329, 21.9626, 68.385, 38.4476, 25.5645, 26.0366, 40.5112, 54.0436, 21.0105, 101.2713, 9.1181, 51.2811, 14.9983, 14.6828, 0.0, 53.4461, 77.5505, 59.202, 63.7496, 0.0, 18.0281, 34.398, 339.6616, 26.199, 0.0, 88.9576, 165.0201], [7.278, 9.3624, 26.4309, 12.191, 21.7152, 0.0, 19.3939, 17.1441, 1.7296, 6.3245, 0.0, 144.6425, 0.0, 30.9937, 0.0, 27.9641, 0.0, 28.5651, 37.6188, 32.6508, 0.0, 43.9803, 11.2389, 0.0, 62.6035, 10.3339, 0.0, 7.7616, 12.1136, 26.7435, 50.5033, 0.0, 614.0501, 9.7369, 4.8922, 95.1272, 264.5083], [21.6106, 44.8944, 38.6077, 0.0, 39.8112, 0.0, 157.8595, 0.0, 26.4305, 39.4762, 0.0, 131.7175, 0.0, 55.1047, 0.0, 76.1503, 62.2371, 92.9798, 165.4068, 27.9395, 109.0206, 79.3773, 0.0, 0.0, 81.9309, 38.6014, 47.2428, 118.3221, 0.0, 90.2639, 0.0, 360.2105], [21.8339, 0.0, 2.429, 28.4947, 14.508, 0.0, 37.8706, 0.0, 0.0, 20.2954, 7.311, 99.7575, 29.7713, 21.8453, 18.0466, 36.2064, 9.6397, 40.5748, 42.688, 149.799, 19.309, 47.5254, 69.3132, 0.0, 38.6534, 55.2523, 72.8364, 34.4916, 12.1136, 36.666, 42.4154, 11.368, 1029.8635, 0.0, 0.0], [33.37, 10.0905, 0.0, 33.0151, 29.946, 82.962, 37.8704, 18.963, 66.4322, 37.772, 1169.4753, 27.8365, 6.0333, 343.7781, 235.564], [65.3648, 11.2963, 36.9406, 0.0, 77.5578, 64.6323, 222.456, 0.0, 110.4597, 69.1566, 0.0, 0.0, 78.9699, 54.6756, 61.8948, 74.7008, 0.0, 0.0, 18.032, 918.0532, 0.0, 0.0, 284.6643], [81.7095, 75.3504, 18.4409, 43.7702, 12.0744, 0.0, 44.3352, 0.0, 16.4852, 9.6163, 0.0, 94.3525, 32.0166, 52.326, 35.0894, 23.6593, 0.0, 97.256, 124.4622, 158.2308, 21.3569, 94.1382, 73.3467, 0.0, 0.0, 13.7983, 53.2459, 67.1616, 15.295, 14.1435, 74.8289, 43.204, 838.8794], [62.51, 0.0, 0.0, 0.0, 0.0, 0.0, 69.5386, 0.0, 23.4036, 0.0, 10.6128, 58.3975, 21.7602, 92.2973, 10.4107, 29.1988, 0.0, 14.1984, 21.4107, 138.0483, 0.0, 71.0073, 71.8194, 0.0, 9.1258, 0.0, 51.0821, 69.6564, 17.008, 23.121, 54.4547, 25.228, 893.878, 0.0, 304.0341, 274.6576], [36.7469, 7.332, 34.8044, 30.2573, 15.5064, 0.0, 27.3437, 0.0, 51.5637, 51.3475, 32.428, 129.1325, 64.643, 84.7733, 30.0317, 5.1056, 69.5327, 71.369, 281.8374, 15.847, 56.4408, 54.3149, 0.0, 56.0221, 62.8673, 28.2348, 30.7124, 18.4275, 77.3602, 27.958, 1043.1599, 55.5852, 265.2945, 236.5664], [29.7816, 40.7208, 7.3508, 56.2061, 12.9168, 19.0418, 70.9363, 0.0, 37.3485, 37.6358, 42.6281, 156.8625, 20.2079, 45.6142, 24.6787, 37.8416, 49.6101, 60.7637, 122.4405, 27.842, 51.1758, 38.2593, 0.0, 0.0, 36.9829, 29.9074, 20.1564, 46.2521, 15.624, 54.7634, 13.426, 1315.1309, 30.9067, 0.0, 339.1867, 256.3638], [113.6789, 0.0, 20.742, 0.0, 87.9216, 104.3055, 161.747, 0.0, 20.485, 36.1584, 29.9222, 97.8775, 0.0, 23.4697, 0.0, 21.824, 0.0, 19.3053, 43.5551, 107.1018, 21.6982, 17.3745, 80.2388, 0.0, 0.0, 85.9578, 67.9678, 41.4612, 72.2536, 21.0735, 127.9253, 20.65, 1359.2506, 21.7838, 2.9429, 242.7682, 463.3594], [64.8765, 22.56, 9.4282, 68.2992, 17.3472, 26.8223, 114.4853, 5.7276, 55.8336, 21.7469, 60.375, 178.2475, 35.8142, 45.7852, 22.5533, 52.5244, 16.1024, 59.8239, 51.0922, 177.7854, 11.5074, 84.3102, 64.0658, 10.7466, 23.0496, 81.9901, 36.0125, 109.7712, 76.5362, 35.2485, 71.5567, 45.822, 1379.1952, 48.8308, 479.9406, 367.2543], [77.5124, 0.0, 42.7944, 0.0, 0.0, 0.0, 124.5754, 0.0, 42.5374, 91.705, 83.4284, 234.4125, 35.2598, 65.322, 47.6846, 43.7814, 104.1587, 40.2868, 392.2581, 0.0, 134.4681, 158.9113, 0.0, 0.0, 67.8365, 64.4902, 199.584, 66.8697, 0.0, 135.581, 46.648, 2090.5504, 10.5556, 534.75, 337.057]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

