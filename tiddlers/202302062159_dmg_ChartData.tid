created: 20230206215940000
creator: Drevarr
modified: 20230705163518756
modifier: drevarr
tags: ChartData
title: 202302062159_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Arcanophage Farra", "Daring Deathblade", "Johosh The Great", "Newtype Khan", "Skye Nightroad", "Kira Dragonblaze", "Sumatra Satyricon", "Tootsie Pop Bringer", "Veron Blackburn", "Ace Rages", "I Il Il I", "Smol Gluvs", "Fungus", "Rina Of Theros", "Sigmund Mistwalker", "Sp\u00edcy Cheese", "Legacy Of Mathus", "Be\u00eb", "Lord Erin The Wise", "Demon Sekhmet", "Xanvias Tsollice"];
const professions = ["Scourge", "Spellbreaker", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Dragonhunter", "Ranger", "Scrapper", "Herald", "Berserker", "Elementalist", "Scourge", "Scourge", "Scourge", "Vindicator", "Berserker", "Berserker", "Scourge", "Weaver", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[374.9782, 1118.3797], [107.7018, 21.4231, 143.0823, 371.8108, 71.6078, 264.7688, 278.2135, 17.2787, 98.4261, 51.0645, 220.7784, 177.4231, 0.0, 362.0899, 37.4038, 11.4536, 55.1724], [270.2787, 592.0739, 36.3226, 418.024, 340.3462, 237.6632, 871.4494, 0.0], [53.5273, 24.3526, 142.8165, 339.4865, 12.8824, 322.1062, 509.7416, 374.2623, 90.9773, 600.4839, 209.4671, 247.4615, 0.0, 218.5843, 15.1859, 9.7938, 235.3103], [178.3236, 55.9103, 143.8608, 469.5892, 41.8824, 157.4375, 462.7079, 113.1803, 69.0398, 168.3226, 204.7066, 202.5385, 0.0, 372.5056, 24.2628, 82.6701, 435.2069], [572.08, 94.5513, 457.3101, 351.7189, 220.1765, 782.05, 464.0225, 303.8361], [546.12, 142.9359, 512.2785, 848.7405, 198.9608, 16.4875, 1093.4045, 607.9672], [53.8945, 378.5385, 471.3987, 165.3027, 467.549, 97.6375, 989.1461, 105.1639, 332.1705, 417.0753, 342.2156, 703.4615, 144.2737, 593.6404, 51.8333], [853.1673, 257.3077, 821.7722, 1587.3405], [356.1927, 165.0128, 667.1835, 929.8378, 117.6078, 850.2125, 1235.3708, 923.5738], [146.3527, 35.6266, 1115.1568, 174.549, 577.35, 714.3146, 10.0656, 596.3125, 1118.2903, 286.1557, 497.3846, 28.2, 803.2921, 0.0, 23.1546, 0.0], [1518.8627, 1019.5, 3669.6292, 3487.0656], [289.4, 98.9423, 485.1076, 1115.7676, 0.0, 602.7188, 799.0899, 649.4754, 458.0057, 104.8925, 674.9281, 487.3846, 42.1579, 898.7528, 71.1731, 63.6804, 583.1379], [209.6145, 72.641, 377.3671, 1703.3946, 44.3725, 782.9875, 1147.573, 1012.7705, 703.3239, 700.2903, 810.9461, 112.2692, 44.6526, 1372.2472, 12.7628, 65.8969, 1255.4828], [308.3455, 128.2885, 409.6013, 400.8, 179.6275, 1003.1875, 2092.5843, 1371.1967, 637.0284, 710.9247, 1038.5928, 819.8077, 32.4211, 1824.6629, 115.1731, 100.3711, 833.6897], [482.4509, 153.609, 986.1266, 1541.7027, 157.3922, 276.4812, 1586.6404, 257.4754, 821.4091, 926.4946, 1502.3772, 1383.8077, 60.8842, 1239.809, 232.7115, 387.1443, 1162.1379], [261.76, 159.9615, 955.6076, 623.0757, 141.2353, 1349.7812, 2673.1011, 1536.7377, 0.0, 531.1505, 1908.8084, 183.7308, 131.9684, 2861.7191, 15.9744], [722.5964, 189.6154, 337.3101, 1523.5568, 406.2157, 443.9937, 1321.3708, 353.9508, 1795.9205, 838.2366, 1592.9701, 1174.9615, 0.0, 2568.7191, 0.0, 188.6701, 88.0], [676.7491, 409.5577, 1006.9494, 1693.9189, 228.0196, 1476.3, 1861.618, 902.377, 857.8295, 1650.129, 1417.0539, 2947.3462, 72.2105, 1981.6629, 323.609, 605.7938], [779.56, 304.4936, 1007.2532, 1643.773, 797.0784, 1023.7875, 638.4382, 2347.9508, 1198.8239, 2075.4839, 1599.8084, 1743.2308, 176.0632, 2720.7753, 833.891, 421.2887], [906.8582, 419.8654, 1763.7911, 3088.6, 308.8039, 1169.6437, 501.3596, 903.7541, 1499.3807, 1293.914, 1561.6766, 1304.2308, 30.9158, 2634.1124, 3.0769], [897.6509, 279.5321, 1382.9241, 2955.3243, 401.902, 2034.0625, 3044.2472, 2666.1967, 312.1364, 1725.9892, 1878.1557, 1949.6154, 312.5053, 2396.5506, 84.2885]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

