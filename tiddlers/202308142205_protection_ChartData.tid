created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Zeke Lightbringer", "My Birthday Girl", "High Sorcer Baradun", "Alizayd Delnbone", "Cat Wigglebooty", "Tootsie Pop Rocks", "Squishy Jellyfish", "Ryvalia Fazebringer", "Klengah", "Kisumaiassu", "Zaedy Zae", "Mielikki Embla", "Tropcaller", "Pr\u00e6tor Lightbringer", "Drevarr Moonwillow", "Crusader Siolith", "Sygaldry Verdandi", "Bella Sassy", "Koralia Danai", "Sister Elon\u00edth"];
const professions = ["Tempest", "Reaper", "Scrapper", "Tempest", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[50.5795, 0.0, 93.3631, 31.311, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.672, 59.7656, 0.0, 64.8225, 0.0, 19.0051, 0.0, 0.0], [60.0572, 353.4696, 56.4237, 31.7126, 27.6, 36.0326, 0.0, 0.0], [29.6982, 0.0, 79.932, 0.0, 7.8936, 50.6778, 0.0, 0.0, 32.3544, 15.6348, 24.313, 19.1539, 58.894, 143.4455, 0.0, 46.2852, 69.9524, 48.0946, 33.9412, 36.2284], [18.3702, 90.3774, 218.8301, 50.0337, 36.9715, 29.532, 41.1227, 0.0, 0.0, 46.956, 45.8237, 18.2935, 31.504, 19.1478, 32.1984, 4.6143, 16.1138, 7.102], [234.418, 0.0, 234.4446, 127.2839, 136.6325, 25.5036, 0.0], [0.0, 68.4147, 348.5558, 33.867, 40.597, 32.5128, 16.6991, 0.0, 0.0, 0.0, 42.4368, 12.8192, 40.216, 66.121, 95.3955, 22.6292, 40.1611, 0.0], [28.1501, 0.0, 305.9691, 89.1405, 22.7486, 77.7768, 38.1758, 24.7702, 42.8464, 0.0, 50.521, 16.1736, 62.964, 145.8085, 0.0, 115.2099, 0.0, 62.1281, 0.0, 45.2819], [134.3999, 747.888, 156.2994, 62.7082, 40.848, 36.3451, 24.8794], [22.4861, 125.9453, 483.8504, 96.4251, 37.1309, 51.336, 55.8571, 40.1016, 17.5122, 32.7204, 38.9064, 6.5722, 21.9846, 16.742, 82.9466, 0.0, 41.3703, 39.2745, 62.4807, 27.3056, 23.3764], [23.9398, 251.2103, 619.8003, 112.1445, 83.664, 47.748, 65.7695, 0.0, 21.4083, 28.4504, 34.8816, 0.0, 10.0882, 35.838, 75.7764, 0.0, 30.4182, 40.6651, 42.9114, 0.0, 0.0], [92.6064, 176.1873, 929.7004, 192.2112, 37.4496, 67.2336, 38.4436, 22.697, 0.0, 43.9444], [41.3283, 108.2585, 810.4577, 164.0313, 26.3741, 49.9008, 92.7827, 12.879, 29.8168, 5.5212, 55.6416, 48.1966, 37.774, 93.6613, 152.478, 0.0, 72.2477, 0.0, 9.6961], [202.0372, 1103.3231, 235.5993, 107.2493, 189.7224, 141.4512, 44.3573, 37.0494], [817.9922, 143.775, 55.5768, 115.092, 109.6158, 59.1976, 15.2988, 104.4384, 24.5146, 26.7856, 38.06, 212.948, 28.9677, 107.8182, 38.7688, 107.7193, 20.1188, 36.2426], [186.0997, 1125.9268, 171.5715, 240.5141, 58.3464, 101.1322, 0.0, 0.0, 173.8012, 39.7836, 87.0106, 62.8987], [63.6256, 204.1752, 791.785, 161.0919, 130.0776, 47.5272, 103.1415, 47.3854, 17.2935, 57.9012, 103.2, 29.4134, 26.0872, 53.152, 113.135, 43.1155, 113.6619, 25.6422, 119.1435, 64.1088, 7.7683], [333.2302, 1158.3582, 328.5099, 52.9075, 67.6752, 140.8261, 59.1703, 24.1316, 119.5572, 95.8406, 117.9911, 108.746, 227.4514, 0.0, 113.3523, 84.0904, 153.9452, 28.2596, 72.1997], [80.6554, 296.7877, 1783.4, 413.2413, 130.8346, 91.0248, 54.2497, 63.5351, 23.5216, 17.1828, 98.5018, 92.8392, 165.88, 184.0226, 0.0, 183.1671, 121.005, 110.6811, 0.0, 91.4777], [44.1414, 413.7924, 1722.1406, 255.1527, 156.372, 151.0272, 156.4536, 72.6194, 30.78, 97.4048, 105.0576, 110.6784, 54.2694, 129.118, 152.938, 0.0, 159.2118, 98.3969, 129.0163, 23.85, 17.8072], [109.2963, 256.458, 1747.3651, 327.6792, 192.5467, 226.5408, 186.0565, 7.6059, 132.8336, 67.596, 78.5434, 58.4968, 145.816, 216.8183, 0.0, 144.6606, 140.2841, 155.8139, 29.7224, 36.0856], [22.8373, 2190.9219, 545.6421, 271.2706, 333.9048, 193.2006, 184.9311, 11.6721, 131.028, 73.788, 126.1008, 103.9873, 135.982, 232.6254, 24.2637, 295.7841, 123.8916, 210.4669, 109.0952, 64.8026]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

