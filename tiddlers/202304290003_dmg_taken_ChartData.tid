created: 20230429000309000
creator: Drevarr
modified: 20230705163527180
modifier: drevarr
tags: ChartData
title: 202304290003_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Mistwalker Caelon", "Drevarr Moonwillow", "Endless Endings", "Venomina The Siren", "Hyde En Sikh", "Tegan Parker", "Bella Sassy", "Johosh The Great", "Redoxone", "Koisx", "Tika Rucola", "Permanent Dawn", "Miphest\u00f6", "Zadie Miststep", "Koralia Danai", "Aronorf Xideliesi", "Morv\u00e4rth", "Air One Com", "Xyntharos", "Jupi Jupi Jupi", "Oo Dads Mad", "Primal Clone", "Khailerian", "Lord Erin The Wise", "X Devastation X", "Cat Wigglebooty", "Kos\u00e4ir", "Sister Elon\u00edth", "Rudjulin", "Jr Baldassari", "Badd Sain", "High Sorcer Baradun", "Brewery Tour", "Viral Marketing", "Rhongobojango", "Rudjulin", "Kos\u00e4ir", "Maaaathexxs", "Macstar", "Decara Morningfrost", "Granfel", "Ark Darkness", "Killer Beard", "Mistaeva", "Sub Train", "Da Omichli", "Kisarag", "Saramancer", "Spreadflamesoflight"];
const professions = ["Spellbreaker", "Vindicator", "Scrapper", "Spellbreaker", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Soulbeast", "Dragonhunter", "Chronomancer", "Weaver", "Tempest", "Tempest", "Firebrand", "Firebrand", "Reaper", "Firebrand", "Vindicator", "Dragonhunter", "Spellbreaker", "Chronomancer", "Vindicator", "Weaver", "Reaper", "Scrapper", "Vindicator", "Firebrand", "Willbender", "Herald", "Willbender", "Tempest", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Herald", "Scourge", "Tempest", "Ranger", "Engineer", "Firebrand", "Ranger", "Herald", "Firebrand", "Renegade", "Deadeye", "Reaper", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[244.2849, 420.9171, 591.8358, 0.0, 878.0236, 163.5727, 1.2727, 243.8603, 229.0211, 18.4258, 698.4375, 19.9459, 39.8837, 599.8876], [300.5291, 217.3179, 283.8806, 0.0, 792.6713, 10.5526, 73.3069, 536.8542, 60.3846, 11.1538, 0.0, 84.9474, 4.2018, 533.6343], [103.6927, 101.1789, 291.2388, 1.8393, 854.3657, 4.0, 70.2772, 62.1628, 0.0, 0.0, 26.4583, 100.1447, 12.4692, 545.9324], [1006.5217, 9.115, 127.4845, 154.1032, 0.0, 0.0, 98.4783, 0.0, 29.6061, 413.2415], [167.6429, 248.5781, 283.3929, 0.0, 1148.633, 47.6357, 431.7021, 159.5486, 384.4026, 10.4178, 54.8939, 26.2429, 40.32, 218.8343], [249.9272, 159.9585, 644.1765, 10.9649, 838.9683, 13.6754, 0.0, 200.5769, 0.0, 4.3241, 117.0139, 37.2208, 18.4533, 404.9519], [153.2184, 395.2934, 514.0943, 767.2874, 17.4052, 0.0, 251.9302, 11.05, 12.1553, 229.25, 53.4471, 597.0322], [164.6307, 94.4105, 632.5, 0.0, 734.8421, 5.3509, 74.3673, 204.9843, 0.0, 0.0, 3.2429, 21.5833, 12.2137, 522.1472], [235.7356, 153.1302, 428.9242, 0.0, 785.7112, 41.0088, 7.5773, 271.8682, 48.4253, 0.0588, 66.75, 0.0, 16.7176, 409.8847], [711.1935, 0.0, 886.8151, 41.1504, 2.4043, 268.7519, 18.5122, 19.8662, 86.0429, 47.6111, 86.3692, 714.4808], [338.452, 438.3676, 185.5085, 0.0, 731.0595, 107.8824, 113.9778, 615.4352], [92.1186, 172.0632, 218.6562, 0.0, 753.9279, 20.5175, 83.7959, 376.0, 0.0, 58.9419, 63.0141, 0.0, 3.9346, 565.718], [133.8261, 519.25, 380.8769, 983.9921, 25.5702, 174.0208, 32.5208, 33.6104, 800.9693], [192.1788, 298.6875, 321.2424, 777.8677, 270.558, 5.94, 207.1462, 0.0, 1.5641, 88.4789, 2.2373, 4.4615, 702.4359], [126.6, 125.6108, 367.2206, 0.0, 701.5104, 6.3363, 71.2828, 331.1008, 0.0, 7.0577, 10.0882, 27.6071, 0.0, 533.2689], [70.6889, 116.2699, 309.5088, 754.324, 4.3451, 51.7708, 438.4191, 0.0, 0.0, 0.0, 43.5294, 86.4474, 451.0177], [322.1503, 898.9022, 349.5385, 7.5741, 808.7041, 249.0263, 34.0, 240.3968, 173.4375, 79.0435, 42.7083, 139.325, 117.112, 595.042], [158.8182, 287.3958, 505.8955, 0.0, 1129.0559, 282.4831, 6.1287, 169.6142, 55.1134, 0.0], [300.0759, 77.9476, 231.4107, 707.8275, 130.8974, 0.0, 73.1102, 0.0, 0.0, 4.2464, 0.0, 1.845, 501.3397], [143.6494, 231.6789, 372.0154, 0.0, 765.1579, 11.1593, 51.2323, 200.96, 0.0, 0.0, 8.0857, 0.0, 13.7934, 606.1354], [456.8158, 250.4555, 220.3438, 0.0, 759.524, 47.1239, 162.4688, 0.0, 0.0, 196.2985, 38.6667, 39.5455, 689.6833], [219.233, 285.2147, 516.1618, 0.0, 1139.4631, 88.0846], [73.5771, 90.4869, 301.6338, 785.0189, 171.9923, 5.5408, 108.3704, 104.6207, 0.0, 10.7222, 46.4697, 15.2824, 432.2432], [115.4522, 578.8049, 130.2388, 0.0, 586.7978, 133.2655, 2.4796, 106.5079, 0.0, 0.0, 95.6901, 0.0, 74.6543, 642.1562], [453.2236, 412.8177, 475.2754, 50.5238, 951.9315, 49.7594, 14.0619, 500.9856, 0.0, 8.0065], [19.9655, 1241.0984, 672.1579, 0.0, 0.0, 89.4262, 995.2617], [149.904, 213.9006, 323.5556, 720.4322, 22.6324, 2.9787, 195.6562, 491.4151, 0.0, 3.2319, 44.5926, 7.7383, 95.6844], [279.096, 284.1503, 570.4478, 632.8853], [128.8075, 147.7432, 214.5156, 0.0, 866.361, 32.1062, 1.7143, 171.4409, 0.0, 0.0, 4.338], [373.5058, 488.9524, 409.5079, 0.0, 924.5621, 31.7913, 141.29, 218.031, 0.0, 11.5975, 291.5352, 157.5065, 23.5581], [987.5988, 848.2679, 377.7746, 10.7308, 1008.0, 1354.0769, 69.1806], [874.1228, 57.7426, 85.5054, 204.0923, 0.0, 0.0, 170.4478, 68.8194, 18.2344, 700.7505], [470.0056, 392.7656, 354.5571, 714.0912, 22.5248, 4705.0], [1060.3432], [278.5294, 826.418, 1.8509, 12.7525, 135.1935, 0.0, 0.0, 70.9583, 0.0, 9.8062], [206.1377, 243.4323, 181.4348, 832.5356], [665.8989], [922.39, 102.4561, 88.1633, 59.3798, 0.0, 4.506, 219.0, 19.4583, 72.8462], [332.0562, 819.1463, 488.303, 62.1739, 949.5851, 11.823, 0.0, 140.8284, 10.5484, 250.6406, 49.4795, 44.5391], [703.9162], [0.0, 67.7939, 310.8831], [0.0, 6.2179, 175.8, 0.0, 105.1527, 278.802], [962.3538, 572.2101], [1341.4722, 93.2439, 0.0, 1491.5833, 15.1341, 26.6456, 78.8769, 0.0, 10.9508], [185.7519, 96.1789, 405.1328, 938.3143, 93.2222, 1.7162, 4.6899], [256.9429, 215.0681, 267.6944], [218.8358, 20.1163, 2355.1053], [47.6359], [1727.85], [0.0, 471.2241]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

