created: 20230222220539000
creator: Drevarr
modified: 20230705163519847
modifier: drevarr
tags: ChartData
title: 202302222205_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Acme Corporation", "Pixil Ranger", "Tootsie Pop Bringer", "My Birthday Girl", "Mistwalker Caelon", "Lord Erin The Wise", "Cat Wigglebooty", "Fribble Bibble", "Arcanophage Farra", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Druid", "Scrapper", "Scrapper", "Vindicator", "Weaver", "Scrapper", "Scrapper", "Spellbreaker", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.3015, 0.0, 28.912, 25.081, 30.1477, 25.5116, 24.8448, 14.6688, 143.194, 51.5059, 116.843, 28.9708], [0.0, 59.8667, 69.2695, 108.672, 51.7248, 17.766, 109.9642, 365.7139, 86.9124], [354.6662, 500.9386, 177.7164], [0.0, 29.082, 0.0, 29.9469, 63.7959, 89.457, 97.5744, 103.1424, 305.2199, 108.5933, 123.876, 136.206], [19.7938, 15.7028, 19.2931, 94.1924, 31.9337, 53.4634, 74.8032, 65.3568, 239.841, 166.2682, 420.539, 64.4708], [40.039, 32.2048, 46.6528, 70.4959, 134.4501, 98.2751, 66.24, 39.6672, 296.6922, 141.7882, 327.3523, 78.7833], [43.1995, 48.1148, 59.3762, 56.0961, 161.0972, 88.6805, 74.6496, 59.2128, 329.9146, 184.5792, 358.5211, 74.8917], [53.7104, 95.9632, 95.1628, 6.6461, 182.172, 249.4036, 131.9424, 54.1056, 585.212, 265.8528, 611.0683, 99.279], [91.6003, 113.6196, 35.343, 112.9042, 150.667, 220.2317, 192.3456, 83.0592, 693.94, 358.583, 592.8466, 220.7834], [117.0649, 103.2152, 171.0324, 104.8736, 240.2527, 364.705, 118.9248, 133.3248, 933.9586, 387.5674, 696.4229, 195.4448], [134.8721, 111.7844, 158.1426, 134.0293, 234.1089, 372.8576, 143.5008, 136.6656, 749.0146, 499.4899, 964.7942, 232.0691], [213.9984, 255.7554, 435.7126, 362.2093, 268.416, 246.9504, 1176.2869, 478.2413, 1230.4483, 349.9846]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

