created: 20230626220846000
creator: Drevarr
modified: 20230705163539362
modifier: drevarr
tags: ChartData
title: 202306262208_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Dim Og", "Ateriuz", "Tootsie Pop Khorne", "Il Kurai Il", "Cyclotechnist Farra", "Irish Necroman", "Lord Erin The Wise", "Mike The Archmagus", "Ateriuz", "Caelon Cai", "Shaca Booey", "Rina Of Theros", "Lucky Leipreach\u00e1n", "Zadey Starbolt", "Ak\u00e1nt\u00f3r", "Arcanophage Farra", "My Birthday Girl", "Cyr", "No Reserv\u00e9", "Zadie Miststep", "Cat Wigglebooty", "Gavann", "Latedoctor", "Rahani Sunray", "Arriasa", "Solus Sanctus", "Legacy Of Mathus", "Regis Hawkesburne", "Koralia Danai", "Xanvias Einzbern", "Blancooo Padreee", "Sygaldry Verdandi", "Bella Sassy", "Zaylen Harker", "Rozaalyna", "Smol Gluvs", "Johosh The Mighty", "Tika Fiery", "Artakama Nahid", "Be\u00eb", "Tegan Parker", "Newtype Khan", "Sub Train", "Primal Clone", "Grasszanine", "Drevarr Moonwillow", "Crusader Siolith", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer"];
const professions = ["Scrapper", "Spellbreaker", "Reaper", "Reaper", "Scrapper", "Reaper", "Weaver", "Weaver", "Berserker", "Reaper", "Berserker", "Reaper", "Scrapper", "Scrapper", "Druid", "Spellbreaker", "Scrapper", "Tempest", "Vindicator", "Tempest", "Scrapper", "Firebrand", "Reaper", "Chronomancer", "Druid", "Firebrand", "Berserker", "Berserker", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Reaper", "Berserker", "Firebrand", "Tempest", "Reaper", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Spellbreaker", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6495, 0.4211, 0.441, 0.24, 0.7121, 0.4138, 0.0, 0.9268, 0.6294], [0.4143, 0.4405, 1.0, 0.701, 0.6515, 0.5517, 0.6098, 0.5315], [0.2773, 0.0, 0.8333, 0.629, 0.8367, 0.3664, 0.3137, 0.2927, 0.4286, 0.5119], [0.3529, 0.0364, 0.7273, 0.5645, 0.8571, 0.7059, 0.3902, 0.4571, 0.3333], [0.7791, 0.4845, 0.6667, 0.7267, 0.17, 0.4242, 0.4713, 0.0278, 0.3171, 0.6014], [0.3445, 0.0, 0.4091, 0.5323, 0.9184, 0.4351, 0.3725, 0.8537, 0.5714, 0.2024], [0.2143, 0.0364, 0.2273, 0.2742, 0.4082, 0.313, 0.3137, 0.2439, 0.5429, 0.2024, 0.314, 0.1856, 0.193, 0.1491, 0.17, 0.1818, 0.2069, 0.0833, 0.2927, 0.2098], [0.0182, 0.4697, 0.4032, 0.1837, 0.3282, 0.6078, 0.5122, 0.5571, 0.1512, 0.6392, 0.3354, 0.21, 0.4015, 0.3908, 0.1111, 0.5366, 0.4056], [0.3151, 0.0364, 0.6364, 0.8065, 0.7959, 0.1832, 0.5294, 0.4634, 0.7719, 0.4224, 0.16], [0.3697, 0.0182, 0.4091, 0.6935, 0.898, 0.4733, 0.3529, 0.6585, 0.6571, 0.4881], [0.2801, 0.5686, 0.6829, 0.3714, 0.5119, 0.3721, 0.29, 0.3409, 0.5517, 0.1111, 0.4146, 0.4056], [0.4524, 0.0, 0.6061, 0.5806, 0.8367, 0.3893, 0.549, 0.2439, 0.4571, 0.3095], [0.9535, 0.732, 1.2807, 0.646, 0.26, 0.7045, 0.4483, 0.0278, 0.7683, 0.2517], [1.0116, 0.6186, 0.807, 0.7578, 0.4, 0.5606, 0.4483, 0.0, 0.7805, 0.5385], [0.3487, 0.0545, 0.8939, 0.6129, 0.7959, 0.7939, 0.5098, 0.4146, 0.6, 0.3929], [0.3922, 0.0, 0.5152, 0.7097, 0.3673, 0.6412, 0.9608, 1.0488, 0.4429, 0.4643], [0.0182, 0.3182, 0.5, 0.449, 0.2519, 0.2549, 0.1707, 0.3571, 0.3929, 0.7093, 0.6907, 0.3509, 0.3478, 0.22, 0.553, 0.4023, 0.0556, 0.3902, 0.5315], [0.3429, 0.75, 0.5349, 0.7526, 0.6842, 0.3851, 0.39, 0.8258, 0.6667, 0.0833, 0.6098, 0.4615], [0.0182, 0.4545, 0.6935, 0.3878, 0.374, 0.3725, 0.3171, 0.2, 0.2738, 0.1512, 0.5567, 0.614, 0.5901, 0.3, 0.3333, 0.3678, 0.0, 0.7683, 0.5664], [0.3796, 0.1091, 0.8788, 0.7419, 1.0816, 0.4962, 0.6667, 0.878, 0.7, 0.6429], [0.1779, 0.0, 0.4242, 0.7097, 0.7551, 0.2824, 0.5882, 0.2195, 0.2571, 0.2976, 0.2674, 0.6186, 0.386, 0.5714, 0.18, 0.3939, 0.3563, 0.6585, 0.3636], [0.2689, 0.2879, 0.3065, 0.3061, 0.3053, 0.4118, 0.2927, 0.6143, 0.8256, 0.4433, 0.5263, 0.3292, 0.41, 0.5682, 0.3218, 0.0, 0.5488, 0.4126], [0.0182, 0.6818, 0.3065, 0.4898, 0.1603, 0.3725, 0.6829, 0.3571, 0.5595, 1.1512, 1.1237, 0.8596, 0.3106, 0.19, 0.6818, 0.5632, 0.1111, 0.4512, 0.5664], [0.0, 0.5758, 0.5323, 0.8571, 0.5802, 0.6275, 0.5122, 0.4429, 0.3214, 0.7791, 0.6907, 0.6667, 0.7267, 0.23, 0.4773, 0.4023, 0.0556, 0.4634, 0.4895], [0.4342, 0.0, 0.3485, 0.3226, 0.8776, 0.1832, 0.3529, 0.3659, 0.3571, 0.3256, 0.4742, 0.8772, 0.4099, 0.23, 0.5682, 0.3333, 0.0, 0.561, 0.5944], [0.3109, 0.0909, 0.5, 0.2903, 0.9184, 0.3053, 0.1765, 0.5122, 0.3429, 0.5119, 0.7674, 0.7629, 0.8421, 0.8137, 0.15, 0.4773, 0.3908, 0.0833, 0.5, 0.3916], [0.4468, 0.0182, 0.5303, 0.2742, 0.449, 0.3282, 0.6863, 0.9756, 0.4857, 0.6842, 0.677, 0.26, 0.6288, 0.5402, 0.0556, 0.5122, 0.7203], [0.4188, 0.0182, 0.5758, 0.9839, 0.6735, 0.4198, 0.6471, 0.2927, 0.4714, 0.2976, 0.686, 0.268, 0.7719, 0.3478, 0.34, 0.3258, 0.4713, 0.0556, 0.7317, 0.5175], [0.451, 0.0, 0.3485, 0.3387, 0.1837, 0.3359, 0.7059, 0.5854, 0.6714, 0.5833, 0.7326, 0.6186, 0.7719, 0.4224, 0.6, 0.4394, 0.3103, 0.0, 0.4146, 0.4126], [0.3754, 0.0545, 0.3788, 0.6774, 1.4082, 0.4885, 0.2745, 0.6585, 0.6571, 0.3452, 0.2674, 0.7835, 0.7018, 0.3416, 0.49, 0.553, 0.3448, 0.2222, 0.5244, 0.5175], [0.4146, 0.0, 0.5152, 0.7903, 0.3878, 0.229, 0.3529, 0.439, 0.8143, 0.4048, 0.6163, 0.7938, 0.7018, 0.6025, 0.29, 0.5909, 0.5287, 0.0556, 0.5122, 0.4476], [0.3529, 0.1091, 0.6212, 0.7258, 0.6531, 0.3893, 1.1373, 0.7317, 0.7429, 0.5833, 0.8023, 0.6495, 0.8596, 0.7702, 0.25, 0.4242, 0.2989, 0.0, 0.3049, 0.3077], [0.3515, 0.0, 0.5606, 0.5484, 0.8776, 0.3664, 1.1176, 1.1463, 0.3857, 0.4762, 0.7326, 0.5464, 0.7368, 0.9379, 0.52, 0.4318, 0.4253, 0.1944, 0.3293, 0.1888], [0.3081, 0.5, 0.4516, 0.2041, 0.4885, 0.4314, 0.7561, 0.7143, 0.3571, 0.7558, 0.7732, 1.0877, 0.8634, 0.3, 0.6894, 0.3563, 0.0556, 0.5976, 0.5245], [0.4426, 0.0, 0.5, 0.3065, 0.5306, 0.3664, 0.5294, 0.7317, 0.3429, 0.5476, 0.8256, 0.7526, 0.3509, 1.087, 0.37, 0.4242, 0.5172, 0.0556, 0.7561], [0.395, 0.0182, 0.2727, 0.3387, 0.9184, 0.5344, 0.5686, 0.6341, 0.4143, 0.7209, 0.9175, 0.7018, 0.7391, 0.53, 0.5606, 0.6552, 0.1667, 0.5244, 0.4476], [0.3207, 0.1273, 0.7576, 0.6774, 0.9184, 0.5191, 0.6667, 0.561, 0.4714, 0.4286, 0.6628, 0.9072, 0.4386, 0.5901, 0.41, 0.5227, 0.4253, 0.0, 0.6585, 0.7343], [0.3739, 0.0, 0.7424, 0.6452, 0.551, 0.5038, 0.6078, 0.6829, 0.5143, 0.4524, 0.6047, 0.6289, 0.6491, 0.913, 0.41, 0.6439, 0.5402, 0.0, 0.6707, 0.6573], [0.402, 0.0, 0.7273, 0.7581, 0.449, 0.6183, 1.1569, 0.6341, 0.6143, 0.4167, 0.6163, 0.5979, 0.7719, 0.8012, 0.4, 0.6591, 0.3448, 0.0833, 0.5122, 0.5245], [0.2829, 0.0, 0.7727, 0.9194, 1.2653, 0.2061, 0.5882, 1.1463, 0.6571, 0.5, 0.8488, 0.6907, 0.7719, 0.8696, 0.7, 0.5985, 0.5632, 0.0278, 0.6829, 0.6783], [0.3109, 0.2443, 1.0196, 1.0732, 1.0571, 0.6548, 0.8488, 0.9794, 0.8772, 1.0311, 0.5, 0.8106, 0.7126, 0.0278, 0.5976, 0.7622], [0.4678, 0.803, 0.629, 0.4286, 0.7252, 0.7451, 0.3171, 0.6, 0.2857, 0.9186, 0.8969, 0.614, 0.4907, 0.22, 0.5985, 0.5977, 0.3333, 0.7683, 0.6434], [0.4426, 0.0364, 0.5455, 0.4355, 0.7347, 0.3969, 0.9216, 0.2439, 0.5857, 0.4405, 0.8837, 0.866, 0.6316, 0.7702, 0.26, 0.6364, 0.4598, 0.1111, 1.0488, 0.6713], [0.3768, 0.0, 0.6364, 0.4839, 1.0204, 0.4046, 1.0588, 1.0, 0.8, 0.5238, 1.1512, 0.5464, 0.6316, 0.9006, 0.59, 0.4091, 0.4483, 0.0, 0.8902, 0.5315], [0.3852, 0.0909, 0.6667, 0.6452, 0.7347, 0.5573, 0.6471, 0.6098, 0.5429, 0.2976, 0.8256, 0.8866, 0.9825, 0.9814, 0.48, 0.6818, 0.6552, 0.0, 0.6098, 0.5804], [0.388, 0.0364, 0.4545, 0.7258, 1.2653, 0.4885, 0.8039, 1.122, 0.7143, 0.4167, 1.0814, 0.8351, 0.6316, 0.9689, 0.46, 0.5303, 0.4713, 0.1944, 0.4512, 0.6224], [0.3697, 0.0364, 0.4242, 0.6613, 0.8571, 0.5267, 0.902, 0.7805, 0.9, 0.7262, 0.5465, 0.8557, 1.2632, 1.1118, 0.42, 0.6061, 0.5747, 0.1111, 0.7561, 0.8531], [0.402, 0.0, 0.6818, 0.871, 0.5918, 0.542, 0.8627, 0.5366, 0.7143, 0.6905, 1.1512, 0.9794, 0.7193, 1.1801, 0.43, 0.7045, 0.5057, 0.0833, 0.7073, 0.4685], [0.4552, 0.0364, 0.9091, 0.6774, 0.9184, 0.4809, 0.7647, 1.0, 1.0286, 0.4286, 0.7791, 0.9072, 0.9474, 0.9938, 0.56, 0.7652, 0.6092, 0.0556, 0.439, 0.5455], [0.3796, 0.0, 0.697, 0.6613, 1.2653, 0.7481, 0.9804, 1.0, 1.1286, 0.619, 1.0116, 1.1134, 0.9123, 1.1677, 0.54, 0.7273, 0.7241, 0.1389, 0.6463, 0.8671]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

