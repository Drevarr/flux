created: 20230701101710000
creator: Drevarr
modified: 20230705163540501
modifier: drevarr
tags: ChartData
title: 202307011017_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Govinda Ektar", "Ryvalia Routbringer", "Gestern Yesteryear", "Ryvalia Fazebringer", "Violet Stab", "Charr Surethang", "Sister Elonith", "Drumina", "Bella Sassy"];
const professions = ["Vindicator", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Druid", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.2054, 0.0, 18.8747, 11.2169, 28.305, 8.053, 4.6497, 41.0712, 0.0, 2.3108, 5.2277, 0.0, 8.0909], [178.5795], [0.0, 0.0, 1.7835, 21.0756, 0.0, 23.4978, 58.6477, 0.0, 14.9267, 0.0, 90.9501, 0.0, 21.1562, 0.0, 0.0, 19.497, 28.9872], [48.5332, 72.8715, 11.6273, 7.0776, 66.5052, 2.968, 7.056, 19.5502, 14.0045, 22.2566, 27.8352], [160.6748, 113.8305, 26.5357], [0.0, 0.0, 0.0, 0.0, 12.5885, 42.0944, 104.6729, 9.99, 25.7903, 0.0, 174.3642, 0.0, 0.0, 0.0, 0.0, 0.0, 28.5408], [0.0, 0.0, 27.2996, 54.3504, 0.0, 92.6006, 145.8751, 102.1755, 20.829], [32.7288, 19.8245, 79.3571, 130.8549, 66.378, 21.2261, 0.0, 163.0131, 0.0, 42.4229, 0.0, 42.4704, 33.2685, 47.9664], [14.8876, 0.0, 39.5209, 74.4276, 8.9294, 92.4095, 237.5121, 169.164, 41.5724, 7.8504, 298.614, 4.2595, 43.9765, 57.2897, 27.1846, 33.0355]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

