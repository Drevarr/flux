created: 20230610101822000
creator: Drevarr
modified: 20230705163534610
modifier: drevarr
tags: ChartData
title: 202306101018_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Tomitigas", "Hit The Gas", "Arriasa", "Sakis Ranger", "F\u00e2ble", "Cat Noises", "Drevarr Moonwillow", "Slang\u00efn"];
const professions = ["Firebrand", "Tempest", "Spellbreaker", "Druid", "Druid", "Herald", "Virtuoso", "Scrapper", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.3531, 0.0, 35.5358, 0.0, 20.04, 0.0, 0.0, 0.0, 0.0, 102.2315, 139.3946, 0.0, 8.0784, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [12.5073, 0.0, 0.0, 20.0112, 33.9709, 23.3626, 12.2374, 26.3219, 15.552, 30.852, 13.7422, 15.5695, 39.989, 0.0, 12.9914, 30.8511, 29.0394, 38.3491, 39.6803, 7.5149], [156.4577, 52.5861, 149.9456, 64.2105], [14.7935, 40.9431, 26.7366, 83.9784, 46.4294, 33.9206, 11.3552, 92.5421, 37.9102, 96.336, 51.0408, 36.2226], [4.9046, 16.4703, 0.0, 51.2107, 31.1995, 34.1102, 64.1503, 104.2855, 26.2434, 0.0, 29.3472, 64.6269, 53.2266, 135.5589], [128.6568, 107.102, 221.3315, 328.0711, 271.8198], [82.524, 21.168, 38.5987, 84.5877, 84.1859, 32.2482, 137.8784, 120.1624, 28.2642, 46.966, 231.4347, 101.8878, 65.1661, 84.4569], [8.3117, 14.7543, 0.0, 1.9166, 34.9803, 3.0607, 18.0206, 43.6376, 20.1863, 16.032, 6.156, 32.7953, 13.0501, 35.7885, 18.5225, 87.3012, 163.3772, 201.8172, 54.3777, 457.5978, 92.7308, 66.4026], [28.2344, 78.8106, 14.1438, 19.9056, 59.7406, 152.2076, 128.5495, 229.4183, 51.854, 207.828, 137.916, 118.687, 139.0974, 145.1559, 112.7026, 228.9302, 144.4947, 171.4416, 216.7516, 323.3439, 284.8146, 177.1482, 42.4251, 80.715]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

