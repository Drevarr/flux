created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Klengah", "Bearah", "Tribal S", "Charr Surethang", "Zaedy Zae", "Newtype Khan", "Sub Train", "Jimbo The Pleb", "Arcanophage Farra", "Crusader Siolith", "My Birthday Girl", "Govinda Ektar", "Mistwalker Cael", "Yummy Kiwi", "Zaylen Harker", "Darks Na", "Bella Sassy", "Sygaldry Verdandi", "Rafaellagabriela", "Solus Luxes", "Koralia Danai"];
const professions = ["Druid", "Firebrand", "Druid", "Berserker", "Druid", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Scrapper", "Vindicator", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.584, 0.4545, 0.8117, 0.1966, 0.2006, 1.8252, 0.2297, 0.0, 1.6146, 0.0, 0.9614, 0.8619, 0.7078, 0.0, 0.7448], [10.8108], [0.7644, 0.9504, 0.5943, 0.6088, 0.1966, 0.2341, 1.1232, 0.4836, 0.0, 0.6458, 0.9859, 0.7625, 0.5577, 1.2269, 0.0, 0.3458, 0.3181, 0.8379, 0.567], [0.0, 0.0, 1.5382, 0.0, 0.5078, 0.0, 1.3993, 1.6021, 1.989, 0.9887, 2.0764, 0.0, 0.6384, 0.0, 0.6174, 0.0], [2.6208, 0.0, 0.7691, 0.0, 0.6426, 1.2121, 0.0, 0.3861, 0.6891, 0.5518, 0.7535, 0.6778, 0.9282, 1.1661, 1.1797, 0.683, 0.0, 0.0, 1.2348, 0.1417], [1.8564, 1.9536, 1.2586, 0.0, 1.7586, 0.0, 1.9228, 0.0, 0.0, 0.2055, 0.0, 2.5116, 2.2183, 0.9282, 0.0, 1.8876, 0.0, 0.0, 0.0, 0.0, 0.0], [4.123, 2.7219, 10.0989, 2.835], [2.0748, 0.9504, 0.839, 0.0, 1.6234, 0.5897, 1.2874, 1.1232, 0.0, 0.0, 2.7337, 1.1482, 2.3416, 0.3646, 1.1407, 1.1326, 1.7075, 0.8778, 1.4494, 0.0, 0.4536], [0.0, 3.168, 0.9789, 0.9209, 0.0, 0.0, 2.3575, 1.7199, 0.0, 0.0, 3.135, 1.9016, 0.0, 1.4254, 1.9013, 1.9348, 1.2084, 1.4896, 0.0, 0.0, 0.0], [14.0868, 13.6752, 3.8456], [5.2416, 2.2176, 1.5033, 0.0, 0.0676, 0.6552, 0.4347, 2.9484, 0.0, 0.5199, 1.0032, 1.6146, 2.1875, 2.3205, 1.09, 2.4067, 2.1804, 1.3566, 1.2726, 2.7342, 0.3969], [5.1324, 15.4176, 1.2852, 2.0311, 0.0, 0.0, 3.2039, 0.8778, 0.4306, 1.4481, 1.2597, 2.028, 0.6607, 0.0, 0.9576, 0.0, 0.9702, 0.0], [12.4488, 3.168, 3.7757, 0.0, 0.1691, 0.8845, 1.2038, 3.861, 0.0, 0.0605, 2.1318, 0.7176, 6.0696, 3.978, 3.549, 4.1999, 2.4956, 1.7556, 1.3433, 3.7044, 2.2113], [3.1152, 5.4538, 1.4243, 5.045, 0.8862, 10.7055, 0.0, 1.4508, 4.4141, 3.6956, 5.6382, 9.3152, 5.8812, 7.5032, 6.1734, 1.862, 6.7872, 9.261, 5.6417], [15.834, 10.4016, 4.7196, 4.1937, 4.1278, 4.0128, 12.3201, 0.7725, 3.2522, 4.7903, 5.8843, 7.3636, 8.9505, 6.1854, 7.2673], [15.3972, 9.8736, 4.1952, 1.8939, 4.2588, 3.5112, 8.5293, 0.0, 2.152, 5.8938, 6.7096, 8.8117, 9.8456, 6.6417, 7.6448, 3.2049, 2.5004, 2.5805, 5.4684, 1.5593], [21.9492, 11.7216, 5.6635, 0.1659, 5.6818, 2.3915, 2.1569, 12.0744, 0.1996, 2.1399, 5.1414, 11.5534, 8.8425, 9.8456, 5.501, 5.71, 5.7531, 3.2984, 1.8382, 10.4076, 0.0], [7.3164, 12.0384, 3.6708, 2.7732, 11.1712, 2.8424, 12.1095, 0.0694, 4.5942, 9.2294, 10.0105, 9.9208, 12.1329, 8.4415, 8.7302, 3.3626, 2.793, 4.0299, 12.4803, 1.3608], [18.3456, 10.296, 8.705, 3.9908, 4.0622, 2.1067, 12.5658, 0.0608, 5.1383, 3.9877, 9.2212, 6.9014, 11.2378, 6.9966, 8.8245, 5.0438, 5.453, 3.0048, 13.23, 2.0696], [23.6964, 6.3888, 8.9847, 1.5844, 2.7732, 7.6986, 5.3671, 10.7055, 0.0, 5.235, 9.1291, 3.0139, 7.7333, 11.1716, 8.7964, 8.2582, 3.888, 7.448, 3.8178, 13.9797, 7.6545], [16.7076, 7.0752, 7.2018, 6.1891, 1.0156, 5.0662, 8.3187, 0.0347, 3.1313, 6.8468, 13.168, 12.7862, 14.6854, 9.8358, 16.3277, 9.2733, 7.4214, 5.055, 13.8474, 3.0618]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

