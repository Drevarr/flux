created: 20230224230708000
creator: Drevarr
modified: 20230705163520099
modifier: drevarr
tags: ChartData
title: 202302242307_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Blackchars", "Drevarr Moonwillow", "Kosair", "King Squid", "Kahless The Drunk", "Panther B Me", "Tegan Parker", "Daring Deathblade", "Project Jupiter", "Arriasa", "Aronorf Xideliesi", "Rozaalyna", "Irish Necroman", "Oo Dads Mad", "Ez Mode Mathus", "Air One Com", "Zaylen Harker", "R\u00fana Bierdna", "Burnhard Riemann", "Zadie Miststep", "Rina Of Theros", "Elonith Tenebris", "Blanco Padre Guard", "Sofya De Nova", "Newtype Khan", "Gavann", "Koralia Danai", "Primal Clone", "Smol Daddy Tika", "Smol Gluvs", "Black Raspberry Pie", "Sp\u00edcy Cheese", "Dark Sidiuz", "Husky Guard", "Mike The Archmagus", "Nazhul Naxxremis", "Whose Guardian", "Viral Marketing", "Venomina The Siren", "Jeckyll Mbs", "Xanvias Tseli", "Lord Erin The Wise", "Ravioli Fetabringer", "Arka\u00f1", "Akira Moonbright", "Arcanophage Farra", "Ace Hammers", "Ryvalia Fazebringer", "Sassy Daddy Demon", "Mistwalker Caelon"];
const professions = ["Herald", "Scrapper", "Firebrand", "Scourge", "Firebrand", "Scourge", "Tempest", "Scourge", "Druid", "Druid", "Firebrand", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Tempest", "Scourge", "Scourge", "Firebrand", "Catalyst", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Scourge", "Chronomancer", "Berserker", "Scourge", "Dragonhunter", "Tempest", "Scourge", "Dragonhunter", "Willbender", "Tempest", "Berserker", "Berserker", "Weaver", "Firebrand", "Chronomancer", "Vindicator", "Spellbreaker", "Vindicator", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17, 42, 5], [0, 4, 0, 0, 0, 4, 1, 4, 9, 0, 0, 0, 0, 8, 0, 0, 0, 0, 19, 0, 9, 0, 3, 0, 2, 0, 0, 2, 1], [40, 1, 0, 0, 6, 8, 7, 4, 4], [22, 4, 7, 0, 10, 18, 4, 10, 1], [1, 6, 5, 1, 0, 12, 5, 12, 6, 1, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 12, 0, 1, 0, 2, 10, 0, 2, 0], [0, 6, 5, 0, 0, 0, 2, 10, 5, 0, 0, 0, 0, 2, 0, 0, 0, 4, 12, 2, 19, 0, 0, 0, 1, 1, 5, 4, 5], [0, 1, 3, 1, 0, 15, 0, 11, 4, 8, 0, 0, 7, 0, 0, 0, 0, 0, 5, 0, 3, 0, 12, 7, 7, 0, 0], [0, 12, 0, 0, 10, 16, 0, 5, 7, 2, 0, 19, 6, 5, 4, 0], [0, 1, 2, 16, 0, 3, 5, 1, 16, 0, 1, 1, 8, 0, 0, 0, 2, 10, 1, 19, 0, 0, 0, 3, 1, 3, 0, 0], [2, 0, 7, 0, 1, 0, 10, 14, 0, 16, 0, 1, 2, 8, 18, 6, 6, 3], [0, 0, 1, 7, 0, 3, 3, 10, 2, 0, 0, 1, 4, 12, 0, 0, 1, 11, 2, 9, 0, 0, 0, 7, 9, 12, 7, 2], [2, 8, 4, 2, 0, 8, 7, 19, 4, 0, 3, 3, 2, 2, 0, 1, 21, 5, 1, 7, 1, 0, 5], [2, 11, 6, 0, 0, 0, 5, 3, 2, 2, 13, 9, 4, 13, 27, 7, 1, 1], [6, 20, 8, 8, 0, 29, 9, 17, 6, 3, 1, 0, 0], [0, 5, 5, 7, 3, 2, 1, 6, 2, 0, 1, 17, 0, 0, 0, 4, 1, 0, 2, 2, 0, 2, 3, 24, 10, 13, 0], [0, 5, 0, 3, 0, 10, 11, 0, 1, 6, 0, 3, 16, 0, 0, 0, 4, 2, 0, 16, 0, 0, 0, 4, 9, 15, 6, 1], [1, 5, 6, 5, 0, 5, 13, 16, 4, 1, 0, 4, 0, 1, 0, 3, 1, 0, 27, 2, 3, 0, 11, 8, 0, 3, 0], [0, 0, 14, 10, 0, 5, 7, 0, 0, 0, 8, 10, 10, 29, 2, 0, 0, 8, 8, 7, 3, 3], [0, 1, 2, 2, 0, 6, 4, 4, 0, 2, 8, 0, 6, 0, 0, 0, 10, 17, 0, 12, 3, 0, 7, 0, 26, 15, 3, 0], [1, 33, 6, 0, 22, 0, 6, 10, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0, 32, 2, 0, 0, 0, 13, 0, 0, 0], [0, 8, 3, 2, 0, 25, 2, 10, 5, 0, 6, 0, 0, 8, 0, 0, 0, 6, 5, 6, 16, 1, 0, 3, 5, 17, 1, 0, 1], [1, 19, 11, 4, 2, 15, 4, 3, 4, 0, 2, 0, 0, 6, 0, 0, 0, 2, 6, 3, 3, 1, 0, 0, 11, 14, 5, 9, 5], [7, 8, 3, 8, 8, 2, 8, 6, 11, 4, 0, 0, 0, 0, 0, 0, 3, 11, 5, 23, 0, 0, 0, 3, 7, 12, 1, 7], [7, 12, 13, 6, 2, 12, 19, 5, 17, 0, 0, 0, 0, 1, 0, 5, 0, 7, 1, 3, 7, 1, 0, 0, 4, 9, 5, 1, 8], [1, 12, 7, 0, 1, 7, 8, 9, 12, 0, 1, 0, 0, 3, 0, 0, 2, 8, 8, 1, 31, 5, 0, 0, 6, 6, 13, 6, 1], [0, 3, 5, 7, 8, 19, 1, 8, 5, 1, 8, 0, 9, 0, 0, 8, 5, 5, 5, 0, 1, 9, 25, 9, 7, 0], [1, 5, 2, 1, 0, 5, 2, 16, 2, 5, 1, 17, 0, 0, 0, 1, 11, 4, 46, 3, 0, 0, 2, 13, 9, 5, 5], [2, 3, 9, 0, 0, 20, 3, 0, 13, 0, 0, 0, 0, 4, 0, 0, 0, 11, 10, 0, 31, 5, 4, 0, 14, 19, 3, 1, 5], [5, 0, 18, 1, 1, 38, 1, 1, 5, 0, 0, 0, 0, 11, 0, 2, 0, 0, 11, 13, 25, 0, 1, 0, 15, 5, 1, 11, 0], [7, 13, 4, 0, 0, 10, 6, 7, 3, 0, 0, 0, 0, 19, 0, 0, 0, 19, 11, 8, 9, 6, 1, 0, 6, 17, 8, 8, 3], [0, 0, 8, 6, 1, 7, 1, 18, 16, 0, 2, 0, 2, 0, 0, 0, 5, 14, 20, 41, 5, 1, 0, 10, 9, 1, 2, 4], [6, 2, 0, 9, 3, 17, 12, 17, 0, 0, 7, 0, 0, 23, 0, 0, 0, 13, 14, 14, 8, 1, 0, 0, 12, 7, 4, 4], [2, 22, 0, 12, 2, 7, 14, 9, 0, 1, 2, 0, 8, 0, 0, 0, 9, 0, 16, 5, 0, 8, 11, 17, 22, 4, 6], [2, 3, 5, 3, 6, 5, 4, 6, 3, 0, 3, 2, 0, 11, 0, 2, 4, 9, 24, 7, 33, 2, 0, 0, 5, 14, 18, 7, 1], [0, 5, 2, 5, 5, 17, 12, 6, 3, 0, 0, 0, 0, 21, 0, 0, 0, 3, 3, 10, 37, 0, 0, 1, 5, 15, 16, 13, 1], [0, 12, 28, 9, 4, 15, 9, 4, 0, 0, 1, 0, 7, 0, 0, 0, 9, 0, 16, 18, 4, 0, 0, 5, 15, 18, 4, 4], [0, 3, 2, 3, 0, 14, 12, 10, 5, 0, 6, 2, 0, 30, 0, 3, 0, 6, 14, 3, 30, 1, 4, 0, 9, 12, 15, 2, 1], [8, 1, 11, 13, 3, 21, 23, 7, 7, 1, 0, 1, 21, 0, 1, 3, 20, 1, 4, 2, 0, 0, 10, 7, 9, 14, 8], [3, 6, 2, 8, 2, 26, 8, 3, 6, 14, 0, 9, 9, 0, 0, 0, 6, 9, 7, 25, 7, 0, 19, 11, 11, 7], [5, 21, 5, 7, 0, 0, 3, 6, 14, 0, 0, 0, 0, 2, 0, 0, 0, 1, 16, 1, 53, 13, 2, 0, 6, 14, 20, 29, 7], [3, 20, 4, 9, 0, 24, 12, 3, 14, 0, 0, 0, 0, 15, 0, 0, 0, 2, 5, 23, 24, 13, 0, 0, 1, 38, 17, 1, 0], [5, 22, 18, 8, 6, 6, 14, 4, 27, 0, 7, 0, 6, 0, 1, 0, 10, 21, 3, 23, 0, 0, 1, 25, 2, 17, 0, 7], [0, 30, 0, 3, 0, 24, 4, 15, 19, 0, 0, 0, 0, 20, 0, 1, 0, 6, 7, 5, 45, 2, 0, 0, 8, 32, 16, 2, 2], [4, 17, 4, 6, 1, 19, 1, 8, 9, 0, 18, 14, 10, 0, 10, 0, 27, 17, 13, 20, 4, 1, 4, 13, 12, 4, 12, 4], [6, 0, 2, 0, 15, 30, 9, 66, 13, 0, 1, 18, 51, 14, 22, 8], [5, 1, 0, 13, 3, 20, 7, 19, 17, 0, 13, 0, 0, 31, 0, 4, 0, 22, 20, 2, 76, 0, 3, 0, 25, 6, 6], [6, 14, 14, 3, 14, 2, 5, 12, 9, 2, 2, 0, 44, 0, 5, 2, 21, 50, 7, 33, 0, 0, 5, 29, 27, 15, 9, 2], [2, 0, 26, 5, 8, 43, 21, 21, 22, 1, 0, 0, 0, 33, 0, 0, 0, 3, 25, 4, 46, 6, 0, 0, 13, 19, 22, 17, 0], [9, 35, 17, 19, 14, 12, 40, 17, 12, 1, 0, 10, 20, 0, 1, 2, 24, 10, 15, 59, 10, 1, 7, 46, 16, 16, 17, 4], [12, 53, 18, 16, 8, 38, 25, 18, 41, 0, 0, 7, 1, 24, 1, 2, 1, 17, 15, 8, 67, 10, 9, 6, 12, 41, 34, 13, 8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

