created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Readnull", "Tegan Parker", "Yafreisy", "Readnull", "Xela Demora", "Daphne Agla\u00e9", "Ryvalia Fazebringer", "King Jamls", "Drevarr Moonwillow", "Bella Sassy", "Gavann", "Kosa\u00edr", "Mmathuss", "Mort\u00e4rion", "Itty Bitty Mew", "Kosa\u00edr", "Sub Train", "Cedryn X", "Blancoo Padre", "Mistwalker Cael", "Solus Sanctus", "Aronorf Xideliesi", "Rina Of Theros", "Mike The Archmagus", "Rozaalyna", "Luke The Ghastly", "Keypek The Drunk", "Kisumaiasu", "Cerys Fireblade", "Lord Erin The Wise", "Vee Usagi", "Be\u00eb", "Johosh The Mighty", "Name Is What", "Yafreisy", "Xanvias Einzbern", "Indigo Shadowviper", "Jimbo The Pleb", "Brutal Araden", "\u00c1rk\u00e1ntor"];
const professions = ["Dragonhunter", "Tempest", "Catalyst", "Willbender", "Reaper", "Scourge", "Chronomancer", "Virtuoso", "Scrapper", "Firebrand", "Firebrand", "Holosmith", "Firebrand", "Scrapper", "Catalyst", "Scrapper", "Firebrand", "Berserker", "Scrapper", "Vindicator", "Firebrand", "Firebrand", "Scourge", "Weaver", "Scourge", "Scourge", "Scrapper", "Scourge", "Berserker", "Weaver", "Scourge", "Scourge", "Berserker", "Scourge", "Weaver", "Berserker", "Daredevil", "Berserker", "Renegade", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.0333, 7.8649, 10.9917, 12.7363, 32.3975], [0.0, 0.0, 0.0, 0.0, 21.905, 7.9545, 0.0, 0.0, 0.9322, 0.0, 10.5407, 0.0, 0.0, 0.0, 0.0, 1.782, 0.0, 6.0231, 2.6959], [52.9858], [0.0, 1.6935, 0.0, 0.0, 11.8472, 8.1706, 0.0, 0.0, 0.0, 0.0, 2.9929, 5.8265, 6.0214, 13.2763], [0.0, 0.2, 0.0, 0.0, 5.0687, 5.7959, 13.3608, 16.6423], [70.0444, 1.3604, 6.4793, 4.1429, 7.1375, 0.0, 1.5081, 1.3822, 6.3136, 3.463, 23.084, 2.2254, 12.8, 0.0, 2.3188, 8.3009, 6.5816, 3.5733], [4.0222, 0.0, 0.1983, 0.5275, 18.025, 0.0, 2.9113, 1.3567, 2.0932, 7.1852, 7.7685, 7.1732, 2.8732, 0.0, 0.0, 0.0, 7.7109, 4.2857, 3.2273, 11.5216], [31.7556, 10.7117, 5.2314, 4.011, 31.225, 0.0, 9.9355, 17.535, 19.8051, 0.0, 5.9398, 15.2231], [5.3778, 1.1351, 8.3636, 3.1319, 8.7075, 0.3977, 2.9758, 3.2102, 9.7542, 0.0, 0.7454, 10.5381, 3.6761, 2.12, 0.0, 15.2609, 8.1114, 1.6429, 5.5206, 11.3598], [0.0, 15.6136, 0.0, 9.5414, 17.2712, 0.0, 4.0278, 11.3727, 3.338, 0.0, 0.0, 0.0, 11.1137, 1.051, 2.2076, 14.9825], [9.8, 0.0, 3.7107, 0.8791, 14.4425, 0.0, 2.5806, 1.5732, 5.9576, 2.713, 22.601, 0.0, 0.0, 0.0, 1.2464, 6.4455, 7.8878, 9.0791, 6.4804], [37.1667, 19.0631, 4.7934, 5.4615, 26.885, 0.0, 9.4758, 0.8726, 146.5593], [48.0889, 0.0, 0.0, 51.5165, 19.085, 0.0, 3.8548, 1.2038, 5.1356, 0.0, 4.8009, 18.189, 9.9577, 0.0, 0.0, 3.7826, 1.3128, 0.5612, 6.8649, 6.6629], [34.0889, 8.2793, 49.7934, 1.3297, 22.595, 0.0, 17.4597, 15.7197, 45.5, 11.3287, 3.1391, 4.6197, 10.2, 0.3111, 0.0, 15.0521, 3.551], [57.6333, 0.1802, 51.0331, 13.9341, 17.9675, 4.0909, 34.2419, 50.8726, 88.6441, 5.9815], [10.0787, 18.4593, 7.0, 4.72, 6.0667, 0.3768, 14.0569, 9.2857, 10.2636, 22.7629], [66.0667, 1.0811, 8.6116, 5.3187, 7.965, 3.2273, 0.4194, 2.3567, 42.3051, 6.1111, 10.0499, 6.9718, 14.64, 8.0, 5.0725, 8.5664, 35.7653, 12.8171, 14.0598], [98.5, 0.8559, 16.595, 10.8571, 75.7275, 0.4773, 16.5403, 2.0127, 149.2627, 0.0], [37.5889, 0.4865, 11.0248, 13.022, 36.03, 0.0, 6.4194, 0.6369, 25.2797, 0.0, 19.5833, 20.5486, 19.9859, 2.8, 1.4, 4.7101, 11.7654, 3.949, 13.5997, 11.5113], [29.6111, 0.0, 0.2397, 12.5824, 15.8825, 21.0795, 14.4194, 3.2675, 13.5508, 0.0, 6.7778, 20.9895, 49.0563, 7.24, 0.0, 0.0, 5.2915, 0.8776, 14.7809, 29.2103], [15.1222, 0.0, 18.1157, 0.0, 27.72, 0.0, 11.8306, 14.5732, 39.9322, 0.0, 25.6898, 15.4777, 0.0, 0.0, 0.0, 28.7391, 5.064, 1.0306, 12.4448, 27.7845], [28.8333, 0.0, 9.0331, 1.967, 32.64, 0.0, 0.5806, 1.2548, 21.4322, 0.0, 1.7037, 23.2415, 8.8873, 6.44, 0.0, 2.3623, 12.109, 0.5816, 23.9572, 28.6876], [68.1222, 6.9459, 7.1157, 5.3736, 26.385, 14.75, 20.1129, 4.4204, 55.2458, 0.0, 9.8333, 17.4908, 2.6338, 8.28, 1.6, 7.6812, 19.545, 13.2653, 8.3839, 24.2887], [66.5, 5.009, 39.562, 26.0879, 48.4, 22.1705, 3.5645, 38.4522, 29.0169, 0.0, 67.2315, 40.8609, 11.7324, 113.4, 8.0, 17.7681], [26.5667, 0.1802, 15.3719, 0.0, 68.2825, 0.0, 1.3065, 0.0, 40.2203, 0.0, 5.2824, 51.5696, 18.6197, 0.0, 0.0, 0.0, 22.0332, 21.8776, 18.631], [53.8111, 2.7658, 36.8264, 5.5824, 28.32, 6.7045, 7.5081, 3.9618, 140.661, 0.0, 43.0509, 89.4409, 37.4366, 30.8, 0.0, 12.3188], [29.6667, 7.2072, 12.562, 18.5275, 30.0975, 0.0, 3.8548, 6.6242, 33.7458, 28.0694, 33.4042, 5.4648, 10.16, 0.0, 1.6957, 20.5, 28.0306, 16.0297, 24.301], [22.7323, 13.0, 92.48, 0.0, 20.7681, 52.0758, 61.0612, 25.3081, 43.3804], [68.0889, 4.7568, 31.6529, 4.6264, 56.98, 7.0795, 32.7016, 1.7834, 199.1356, 98.0787, 73.0945], [92.1778, 0.0, 9.7686, 106.8901, 59.77, 0.0, 37.9032, 15.5541, 79.0085, 0.0, 75.963, 46.6667, 0.0, 41.88, 18.0889, 3.6522, 22.7227, 0.0, 8.7628, 11.6557], [113.0889, 2.1622, 4.5207, 17.8681, 20.3375, 10.1477, 6.5726, 10.8726, 37.4153, 0.0, 28.2361, 37.979, 12.8169, 111.04, 0.0, 10.1739, 64.1066, 22.551, 13.2224, 33.9258], [150.2222, 4.8378, 14.4876, 32.6374, 11.6125, 0.0, 3.0887, 6.0892, 67.9407, 13.9491, 46.0735, 41.493, 16.16, 6.9556, 6.058, 36.1351, 18.5714, 26.9506, 48.1876], [110.3111, 0.2973, 8.6777, 36.9231, 153.3, 2.8977, 13.9758, 3.6497, 208.1356, 8.4815, 72.2593, 79.7218], [239.7778, 4.9459, 63.5372, 54.5714, 36.57, 0.0, 41.8952, 9.0382, 101.4661, 0.0, 3.8056, 49.3493, 57.3979], [59.622, 30.7887, 13.32, 0.0, 0.0, 42.1429, 111.5107, 84.3216], [57.8444, 26.2703, 40.0579, 88.8242, 56.62, 0.0, 8.6855, 6.4013, 161.8983, 0.0, 35.213, 73.2415, 7.1268, 0.0, 0.0, 47.1739, 33.6754, 3.8163, 35.6343, 86.3124], [121.7887, 84.52, 107.9556, 32.942, 75.545, 69.2347, 97.5486, 136.0278], [67.9111, 5.7568, 25.9587, 150.1099, 127.5575, 6.0114, 23.9919, 5.828, 197.6017, 0.0, 53.2731, 78.0604, 40.2676, 58.0, 0.0, 8.4928, 47.0427, 2.3163, 37.883, 65.9155], [91.0667, 46.1802, 38.8512, 61.7802, 85.045, 35.9432, 3.2903, 40.4076, 62.0508, 0.0, 64.5926, 144.4593, 4.9437, 133.48, 32.8667, 2.2754, 78.7796, 56.1837, 80.5898, 82.7165], [128.3111, 39.3964, 50.6033, 108.3626, 141.7275, 0.0, 6.1935, 13.3822, 124.6864, 0.0, 64.3935, 139.1312, 32.8451, 463.08, 1.4444, 13.3188, 116.8744, 29.7449, 57.7084, 81.2948]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

