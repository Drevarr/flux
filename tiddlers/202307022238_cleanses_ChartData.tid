created: 20230702223827000
creator: Drevarr
modified: 20230705163540941
modifier: drevarr
tags: ChartData
title: 202307022238_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Vopiscus Zergherdus", "Aronorf Xideliesi", "Sarette Fay", "Pixzil", "Perpetual Hope", "Aezlenne", "S\u00e2ucy K\u00e2t", "Neohelios", "Amiti\u00e9l", "Ima Lou", "Vini Boy", "Thats Not Nice", "Valaria Emberstorm", "Spirita Demon", "Demon Staph", "Artakama Nahid"];
const professions = ["Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Druid", "Firebrand", "Druid", "Tempest", "Firebrand", "Tempest", "Druid", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4776, 0.4615, 0.6211, 0.8302, 0.0, 0.3148, 0.0, 0.4934, 1.0], [0.1395, 0.1776, 0.2114, 0.0, 0.1927, 0.0148, 0.2169, 0.0, 0.3333, 0.1695, 0.2247, 0.2179, 0.0794, 0.0141, 0.0524, 0.2069, 0.0, 0.0, 0.025, 0.0, 0.1319, 0.131, 0.0, 0.1139, 0.0253, 0.1023, 0.0, 0.1558, 0.0645, 0.2086, 0.1825, 0.0, 0.1914, 0.0182, 0.0, 0.0, 0.0612, 0.0392, 0.0203, 0.0, 0.0855, 0.1322, 0.0, 0.0, 0.0926, 0.0, 0.0611, 0.2167], [0.0807, 0.1705, 0.1402, 0.1951, 0.0, 0.1376, 0.0, 0.6024, 0.0, 0.2063, 0.5763, 0.3596, 0.3077, 0.0, 0.1667, 0.0, 0.019, 0.1626, 0.0, 0.0, 0.1196, 0.2361, 0.1667, 0.0, 0.0, 0.0, 0.0, 0.1212, 0.0, 0.0, 0.0, 0.2246, 0.3333, 0.0, 0.1358, 0.0, 0.0, 0.0, 0.0408, 0.0, 0.0, 0.0, 0.0149, 0.0427, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0437, 0.0], [0.3178, 0.4206, 0.8049, 0.3991, 0.1037, 0.0, 0.0, 0.127, 0.0, 0.1011, 0.0, 0.0, 0.1429, 0.0845, 0.0571, 0.0837, 0.0, 0.025, 0.0652, 0.0764, 0.2857, 0.0, 0.0, 0.019, 0.0, 0.0265, 0.0, 0.026, 0.0, 0.262, 0.119, 0.0556, 0.0, 0.0204, 0.098, 0.0676, 0.0, 0.0513, 0.0264, 0.0, 0.0, 0.083, 0.0], [0.1667, 0.1364, 0.3889, 0.0182, 0.0508, 0.0, 0.3469, 0.7451, 0.4122, 0.0, 0.1642, 0.5983, 0.4758, 0.3148, 0.0682, 0.4061, 0.4333], [0.2248, 0.0935, 0.5122, 0.0, 0.0046, 0.0, 0.0361, 0.3651, 0.3559, 0.1124, 0.1795, 0.0, 0.0, 0.0, 0.0429, 0.2562, 0.0, 0.0, 0.0, 0.2935, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2879, 0.0, 0.7273, 0.2674, 0.1349, 0.0, 0.0926, 0.0, 0.0, 0.0, 0.1373, 0.0, 0.0, 0.0, 0.0256, 0.0793, 0.0, 0.0, 0.0, 0.0, 0.1397, 0.3333], [0.0062, 0.1085, 0.1495, 0.3496, 0.0, 0.0413, 0.1185, 0.4217, 0.0, 0.5397, 0.5593, 0.1011, 0.5, 0.1905, 0.1972, 0.1476, 0.1232, 0.0, 0.5714, 0.125, 0.3587, 0.0833, 0.0, 0.0, 0.0, 0.057, 0.0, 0.2121, 0.0, 0.4935, 0.0, 0.5455], [0.0, 0.0, 0.4494, 0.1515, 0.0341, 0.0, 0.4805, 0.3871, 1.0321, 0.2857, 0.5, 0.0847, 0.9184, 0.8431, 0.3108, 0.0, 0.0448, 0.0], [0.1163, 0.3084, 0.5366, 0.0, 0.3349, 0.0074, 0.6867, 0.0, 0.8254, 0.0339, 0.2584, 0.0, 0.0, 0.1032, 0.0, 0.1095, 0.5025, 0.225, 0.2174, 0.0903, 0.5595, 0.1818, 0.0, 0.0253, 0.0606, 0.125, 0.0, 0.3247, 0.615, 0.3254, 0.0, 0.3148, 0.0, 0.0, 0.0, 0.3265, 0.2353, 0.1149, 0.0, 0.1045, 0.2051, 0.2291, 0.1887, 0.0, 0.1111, 0.0, 0.1528], [0.0217, 0.4633, 0.0815, 0.5422, 0.0, 1.3333, 0.2881, 0.5843, 0.3333, 0.3095, 0.2254, 0.4952, 0.9951, 0.0476, 0.0, 0.1413, 0.6042, 0.8095, 0.0, 0.0, 0.2911, 0.0, 0.4735, 0.0, 0.1558, 0.1935, 0.2513], [0.7674, 0.5607, 1.4472, 0.0, 0.7477, 0.0667, 0.2048, 0.9365, 0.4746, 0.6517, 0.8462, 0.0, 0.4683, 0.2394, 0.8524, 0.7783, 0.3529], [0.3798, 0.3178, 0.7724, 0.0, 0.4266, 0.0741, 0.3012, 0.0, 0.7937, 0.4915, 0.5618, 0.6923, 0.0476, 0.3492, 0.1408, 0.2952, 0.5862, 0.0, 0.025, 0.4891, 0.3889, 0.4405, 0.1364, 0.0, 0.2911, 0.0, 0.5492, 0.0, 0.3377, 0.4516, 0.5241, 0.6587, 0.4877, 0.0, 0.0, 0.0244, 0.102, 0.2941, 0.0743, 0.0, 0.3333, 0.3568, 0.2453, 0.0, 0.2593, 0.4091, 0.3319], [0.7349, 0.0, 1.2222, 0.6949, 1.1011, 1.1026, 0.0, 0.5397, 0.2394, 0.6143, 1.0099, 0.0, 0.6667, 0.175, 0.5435, 0.4236, 1.1548, 0.5455, 0.0, 0.538, 0.0, 0.7311, 0.0968, 1.0779, 0.0968, 0.5401, 0.6984, 0.0, 0.9198, 0.0, 0.0, 0.2041, 0.8235, 0.4865, 0.0, 0.3731, 0.4188, 0.7621, 0.717, 0.0, 0.4444, 0.0, 0.3799, 0.7833], [0.2727, 0.0, 1.5316, 1.1515, 0.4516, 1.5455, 0.0, 2.1872, 1.6032, 0.1364, 1.2407, 0.0182, 0.0339, 0.0, 1.2857, 1.6471, 0.6554, 0.0, 0.3582, 1.2137, 1.3524, 0.1321, 0.0, 0.7778, 0.0682, 0.7729], [1.4419, 0.8785, 2.1301, 0.0, 1.3853, 0.1926, 1.5422, 0.0, 1.3968, 1.2712, 1.0, 1.8462, 0.0, 1.1111, 0.3099, 1.4381, 2.0985, 0.3824, 0.0, 0.625, 0.6739, 0.9306, 2.0238], [0.2981, 0.9535, 0.785, 1.7642, 0.413, 1.1468, 0.2593, 0.6386, 0.0909, 1.5714, 0.7288, 0.9663, 1.5897, 0.1905, 1.0952, 0.8451, 1.2429, 1.3251, 0.5, 0.0, 0.5, 0.6739, 0.7986, 1.2619, 0.7273, 0.069, 0.9747, 0.1212, 0.9924, 0.3226, 1.4805, 1.3102, 0.6508, 0.0909, 0.7407, 0.0364, 0.0169, 1.1429, 1.1569, 0.6554, 0.0625, 0.5373, 0.9145, 0.8634, 1.0943, 0.5161, 0.9444, 0.4773, 0.6725, 1.5667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

