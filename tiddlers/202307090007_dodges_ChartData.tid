created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Hayuf", "Artakama Nahid", "Whip \u00d1 Sl\u00e0pper", "Heavenm", "Prolly Getn Carried", "Dalveirric", "Miphest\u00f6", "Tantai Jin", "Chainer Valentine", "Lucky Leipreach\u00e1n", "Sarette Fay", "Danaeryn", "Boof Floof", "K\u00e2 Otik", "Greg The Knight", "Sonia Truestrike", "Tika Fiery", "Jello Jawn", "K\u00e2 \u00d4tik R\u00e6j", "Blaze All Might", "Porlen", "Aisling Vexwind", "S\u00e2ucy K\u00e2t", "Erin Celes", "Koranthin", "Audra Storm", "Kittendo", "Ggclaudx", "Valaria Emberstorm", "Scythe User", "Enter Effore", "Lost Uber Driver", "Jerryatric Reflexes", "Jerryatric Reflexes", "Luke The Knight", "Free H\u00e4nd", "Drevarr Moonwillow", "Newtype Khan", "Red Reaper Robin", "Jmbrage Rev", "Glorious Gluvs"];
const professions = ["Firebrand", "Tempest", "Tempest", "Guardian", "Specter", "Soulbeast", "Tempest", "Reaper", "Soulbeast", "Scrapper", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Virtuoso", "Spellbreaker", "Firebrand", "Ranger", "Tempest", "Chronomancer", "Herald", "Firebrand", "Weaver", "Soulbeast", "Holosmith", "Tempest", "Reaper", "Firebrand", "Herald", "Berserker", "Spellbreaker", "Berserker", "Vindicator", "Scrapper", "Spellbreaker", "Reaper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 5, 6], [1, 0, 2, 3, 2, 0, 2, 1, 0, 1, 0], [3, 0, 0, 2, 2, 3, 0, 0, 3, 0, 0, 0], [8, 2, 4], [5, 3, 2, 5], [2, 2, 0, 1, 0, 6, 4, 0], [12, 4], [0, 0, 0, 2, 3, 5, 0, 0, 4, 0, 0, 0, 3], [2, 1, 0, 8, 4, 0, 2], [2, 1, 0, 1, 15], [1, 0, 0, 4, 2, 3, 0, 2, 3, 0, 1, 2, 2], [0, 0, 0, 2, 8, 4, 0, 2, 3, 0, 0, 1, 2], [2, 0, 0, 3, 4, 3, 0, 1, 3, 2, 3, 2], [1, 2, 21], [8, 1, 6, 7, 0, 4], [9, 3, 11, 0, 3, 0, 3], [2, 0, 0, 6, 5, 5, 1, 2, 1, 0, 2, 3, 3], [3, 4, 1, 4, 21], [13, 1, 1, 9, 4, 2, 4], [11, 8, 2, 3, 5, 1, 4, 0, 2], [15, 10, 0, 7, 1, 4], [2, 0, 1, 9, 7, 2, 1, 6, 4, 3, 3], [2, 0, 0, 2, 8, 14, 1, 3, 5, 1, 3], [2, 1, 0, 6, 12, 9, 1, 2, 0, 0, 2, 1, 3], [2, 0, 0, 3, 11, 5, 0, 4, 7, 0, 2, 3, 4], [3, 0, 0, 4, 14, 12, 1, 0, 3, 0, 1, 4, 1], [16, 1, 4, 12, 2, 5, 3], [11, 2, 5, 16, 1, 3, 5], [10, 5, 5, 24], [9, 3, 2, 1, 30], [4, 1, 0, 1, 10, 12, 1, 6, 3, 3, 1, 3], [18, 2, 6, 14, 0, 2, 3], [18, 1, 6, 7, 1, 6, 2, 4], [4, 3, 1, 7, 33], [9, 3, 7, 19, 2, 6, 2, 5], [2, 2, 0, 7, 16, 14, 2, 3, 4, 1, 3, 1, 2], [1, 2, 1, 6, 17, 18, 2, 2, 6, 0, 1, 4, 3], [2, 0, 1, 32, 11, 3, 4, 8, 1, 4], [0, 1, 2, 9, 17, 17, 2, 4, 7, 0, 3, 3, 3], [10, 1, 0, 6, 36, 12, 2, 7], [10, 4, 2, 5, 32, 11, 3, 7, 15, 1, 4, 3, 4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

