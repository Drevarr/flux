created: 20230515221048000
creator: Drevarr
modified: 20230705163530235
modifier: drevarr
tags: ChartData
title: 202305152210_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Lord Erin The Wise", "Tootsie Pop Rocks", "Mike The Archmagus", "Tribal S", "Fribble Bibble", "Cat Wigglebooty", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Weaver", "Scrapper", "Weaver", "Druid", "Scrapper", "Scrapper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 463.3325, 48.7582, 213.4842, 96.0048, 43.524, 58.3077, 131.85, 91.258, 99.9684, 220.2525, 139.7678], [134.692, 15.8506, 0.0, 154.1431, 308.4941, 436.775, 11.9282, 16.1363, 151.0454, 33.4176, 48.3624, 15.9104, 115.4799, 63.2061, 63.504, 131.157, 83.8339, 159.2016, 147.5664, 34.0712, 139.6972, 79.9122, 118.2064], [37.6844, 114.76, 0.0, 0.0, 70.5451, 315.5213, 846.5184, 0.0, 65.4199, 81.7032, 73.3968, 0.0, 136.5792, 7.2968, 97.3224, 141.57, 27.6322, 156.9168, 122.7562, 0.0, 76.2302, 0.0, 48.9453, 0.0, 212.4068], [32.0829, 133.484, 11.913, 16.0056, 210.2404, 406.8749, 526.8806, 6.0265, 197.5847, 34.4088, 26.3088, 11.9145, 64.7933, 41.1861, 77.2128, 138.0015, 66.469, 160.4256, 166.7194, 26.1456, 113.8208, 47.9757, 94.9527, 32.1029, 145.8977], [241.449, 32.2529, 55.08, 275.9032, 574.5907, 642.5952, 228.39, 171.9874, 119.124, 35.9085, 183.7897, 87.1718, 75.096, 200.07, 125.3938, 303.144, 176.0573, 28.8599, 299.9672, 193.961, 155.3373], [462.513, 52.5677, 54.9504, 309.4818, 842.5613, 1074.3907, 43.1303, 2.8387, 241.1427, 93.9941, 105.1056, 30.5195, 203.4743, 131.5685, 129.5784, 319.8195, 140.0803], [26.7547, 194.941, 25.9076, 0.0, 278.992, 528.4454, 1015.3478, 30.2752, 52.3558, 180.1946, 59.6419, 56.0088, 173.806, 157.5449, 71.0892, 258.6285, 34.5514, 371.1168, 307.5379, 56.4761, 242.27, 106.6679, 184.2795, 26.7426, 182.7065], [81.7443, 165.345, 0.0, 16.9776, 264.3449, 549.527, 1000.8835, 0.0, 402.9535, 83.9122, 55.2312, 70.4422, 137.7109, 52.5366, 88.956, 251.4915, 51.4253, 353.328, 208.4333, 40.6348, 230.4974, 180.9735, 178.7161, 17.0306, 178.5541], [147.117, 616.986, 126.7794, 69.1848, 424.2671, 1159.9565, 1565.7034, 25.047, 558.9675, 197.8152, 116.856, 27.3484, 223.7247, 196.915, 196.7616, 354.4515, 149.9904, 431.8272, 391.1021, 93.4196, 361.9771, 287.0736, 327.6774, 33.2304, 338.1759]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

