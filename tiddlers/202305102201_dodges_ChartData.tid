created: 20230510220110000
creator: Drevarr
modified: 20230705163529470
modifier: drevarr
tags: ChartData
title: 202305102201_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Maaaathexxs", "Dimsnail", "Belvyn Brightblade", "Lord Erin The Wise", "Tootsy Pop Tart", "Husky Guard", "Farra The Bloodless", "Blancooo Padreee", "Lucas Ryn", "Mac Aaroni", "No Reserv\u00e9", "Etchery Howls", "Permanent Dawn", "Demon Sekhmet", "Sub Train", "Primal Clone", "Elonith Requiem", "Ryvalia Fazebringer", "Tegan Parker", "River No Hug", "Evan Nightroad", "Eibh\u00ebar", "Kary\u00edna", "Smol Gluvs", "Solus Sanctus", "Mike The Archmagus", "Mistwalker Caelon", "Zaidy Sagemist"];
const professions = ["Scourge", "Vindicator", "Firebrand", "Weaver", "Scourge", "Dragonhunter", "Vindicator", "Spellbreaker", "Firebrand", "Tempest", "Herald", "Druid", "Weaver", "Spellbreaker", "Firebrand", "Chronomancer", "Scourge", "Chronomancer", "Tempest", "Scourge", "Vindicator", "Chronomancer", "Vindicator", "Scourge", "Firebrand", "Weaver", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 2, 9, 3, 12, 0, 2, 1, 0, 1, 2, 7, 0, 0], [0, 1, 7, 6, 1, 9, 1, 1, 0, 2, 3, 7, 2, 1, 2], [0, 2, 13, 9, 2, 17], [0, 0, 5, 5, 1, 10, 0, 1, 0, 0, 2, 0, 12, 2, 1, 5], [0, 2, 6, 4, 4, 9, 0, 0, 1, 3, 0, 12, 0, 0, 3], [0, 4, 3, 2, 8, 4, 1, 0, 2, 2, 8, 2, 1, 8], [2, 5, 3, 13, 0, 3, 0, 2, 1, 1, 8, 1, 0, 6], [0, 1, 7, 1, 4, 11, 0, 0, 1, 1, 1, 2, 13, 0, 0, 5], [2, 5, 6, 1, 14, 0, 0, 0, 1, 5, 3, 5, 2, 0, 3], [0, 0, 7, 5, 1, 16, 0, 2, 0, 1, 2, 1, 9, 1, 0, 5], [0, 0, 9, 7, 2, 7, 0, 0, 0, 1, 2, 3, 13, 2, 0, 4], [0, 8, 12, 1, 11, 2, 0, 3, 1, 0, 12, 0], [1, 16, 5, 1, 18, 0, 2, 0, 0, 2, 1, 7, 1, 4], [0, 1, 4, 5, 2, 20, 1, 3, 0, 1, 2, 0, 7, 3, 0, 15], [0, 6, 7, 7, 12, 1, 2, 2, 0, 1, 2, 18, 3, 3], [0, 3, 8, 10, 1, 14, 2, 3, 0, 0, 4, 5, 7, 2, 1, 6], [2, 2, 9, 11, 4, 21, 3, 1, 0, 0, 2, 0, 11, 0, 0, 6], [1, 1, 6, 7, 4, 19, 2, 1, 0, 2, 3, 2, 11, 2, 2, 10], [1, 15, 18, 5, 14, 0, 0, 1, 4, 0, 7, 0, 1, 7], [0, 1, 10, 13, 6, 17, 2, 1, 0, 2, 3, 2, 15, 2], [0, 3, 9, 0, 20, 4, 3, 0, 1, 2, 4, 14, 4, 0, 14], [0, 1, 11, 7, 5, 20, 3, 1, 0, 3, 1, 1, 16, 0, 0, 11], [2, 0, 15, 7, 4, 15, 3, 5, 0, 2, 7, 6, 12, 6, 2, 5], [0, 1, 14, 6, 2, 21, 0, 3, 0, 3, 3, 5, 22, 6, 1, 17], [1, 3, 13, 11, 3, 29, 2, 4, 3, 2, 4, 8, 30, 4, 1, 17], [2, 5, 20, 22, 3, 32, 5, 4, 3, 4, 5, 22, 6, 1, 19], [1, 0, 26, 13, 3, 46, 9, 4, 1, 5, 5, 3, 24, 4, 0, 21], [0, 6, 54, 38, 15, 91, 10, 7, 6, 8, 70, 14, 5, 49]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

