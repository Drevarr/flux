created: 20230422220129000
creator: Drevarr
modified: 20230705163526414
modifier: drevarr
tags: ChartData
title: 202304222201_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaylen Harker", "Arriasa", "Jupi Jupi Jupi", "Arka\u00f1tor", "Zadie Miststep", "Miphest\u00f6", "Sygaldry Verdandi", "Drevarr Moonwillow", "Whir The Hammer", "Mac Aaroni", "Koralia Danai", "Bluntnips", "Yummy Kiwi", "Bella Sassy", "High Sorcer Baradun", "Tika Sumiko", "Newtype Khan", "Blancooo Padreee"];
const professions = ["Firebrand", "Druid", "Firebrand", "Scrapper", "Tempest", "Tempest", "Firebrand", "Scrapper", "Scrapper", "Tempest", "Firebrand", "Herald", "Firebrand", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.1233, 10.494, 3.675, 0.0, 50.4357, 5.0351, 57.2396, 10.6514, 5.6801, 0.7426, 5.0568, 21.1844, 22.2878, 15.2237], [0.0, 25.8563, 5.9697, 1.0857, 59.8288, 12.7776, 0.0, 19.771, 15.9413, 7.5735, 15.19, 11.6945, 15.7525, 1.5678, 21.5611, 0.0, 4.6078, 0.0, 2.6006, 4.3912, 13.3833, 10.8433], [68.3726, 0.0, 13.9825, 120.6384, 18.876, 0.0, 41.9701], [6.2532, 30.921, 0.0, 16.4171, 78.9544, 28.1688, 0.0, 30.7549, 4.8559, 11.8305, 5.0837, 3.8493, 14.3707, 6.9646, 4.8769, 7.963, 1.9706, 2.6317, 5.0568, 9.6131, 3.4125, 12.9976], [0.0, 41.9832, 4.0194, 3.4545, 74.0504, 13.8424, 0.0, 55.7288, 17.5108, 3.663, 16.17, 5.8656, 15.4762, 8.5324, 29.7749, 9.6305, 0.2898, 0.0, 0.0, 9.257, 15.836, 10.5561], [63.7078, 0.4059, 2.5662, 178.996, 0.0, 58.6193, 30.2638, 0.0, 0.0, 6.2322, 41.5822, 1.2172], [44.249, 1.6038, 12.9955, 177.5248, 14.6168, 0.0, 29.0206, 10.9382, 7.128, 19.6, 5.2057, 16.5816, 8.3516, 21.0478, 6.1935, 7.6797, 0.546, 9.5838, 15.2504, 8.1046, 20.3222], [6.7878, 40.3838, 3.1383, 10.2319, 164.7744, 32.6216, 1.878, 26.1301, 14.3716, 19.8, 21.9275, 9.5316, 43.1122, 10.7937, 17.7109, 10.0729, 7.9115, 0.7207, 7.513, 14.1823, 13.9698, 16.3727], [61.9723, 36.5913, 19.1565, 18.62, 25.6253, 65.4973, 20.8939, 73.0255, 22.1876, 5.4482, 2.3587, 20.1309, 44.683, 51.6138, 36.1922], [69.3056, 0.0, 0.0, 143.6872, 26.2328, 0.0, 33.5298, 17.0694, 24.849, 0.0, 13.9675, 50.2975, 2.9246, 59.9348, 0.0, 3.5356, 0.0, 10.1136, 4.4505, 5.5986, 51.775], [6.3342, 63.0414, 0.8613, 13.6535, 184.8808, 11.9064, 2.2523, 30.5237, 6.2784, 12.4245, 20.2737, 5.1324, 43.5267, 11.0349, 44.149, 7.997, 7.9405, 0.7316, 11.6547, 22.1338, 13.33, 15.5828], [49.3136, 5.5737, 18.2266, 146.6296, 26.7168, 3.4858, 29.83, 25.4079, 14.553, 18.4363, 12.9043, 42.974, 11.849, 29.5182, 15.858, 9.7663, 3.6036, 12.6179, 20.769, 23.4075, 21.1121], [11.2104, 72.2378, 2.7324, 7.2709, 193.708, 17.908, 43.0106, 20.0124, 16.1865, 9.7388, 5.4623, 29.2942, 6.241, 27.0797, 11.6383, 11.2732, 1.0702, 15.1704, 24.6854, 12.4769, 20.9685], [11.097, 74.6368, 4.8312, 13.7851, 205.4776, 36.1064, 0.0, 29.3675, 21.6801, 18.513, 16.66, 10.7047, 61.9046, 4.4622, 69.4319, 8.5756, 4.8397, 3.5599, 14.9296, 22.9646, 15.996, 37.7721], [2.997, 127.8155, 2.7324, 0.5593, 297.6728, 34.364, 0.0, 62.0879, 15.4507, 12.474, 0.0, 12.2811, 31.505, 0.0, 41.0688, 13.7822, 0.0, 0.8081, 9.2467, 26.1689, 12.7435, 25.4925], [18.7272, 142.0765, 22.8195, 3.0597, 152.5144, 27.7816, 44.8606, 0.0, 21.483, 46.7338, 1.723, 101.7005, 12.1505, 98.9501, 21.8132, 25.1836, 0.0, 0.0, 54.0587, 0.0, 14.2902], [12.5226, 132.347, 4.8312, 25.2014, 395.2624, 53.9176, 3.4165, 60.0068, 30.0677, 29.7495, 32.2175, 14.5174, 47.8103, 23.6678, 84.8327, 20.0096, 4.347, 2.1731, 16.0854, 37.4435, 33.0584, 24.1282], [215.2472, 8.6922, 47.1128, 737.0712, 139.1984, 136.7785, 58.7619, 31.878, 26.0925, 32.3708, 159.4597, 37.9588, 106.3939, 47.642, 18.6921, 8.2774, 50.2309, 73.7003, 75.2878, 57.1608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

