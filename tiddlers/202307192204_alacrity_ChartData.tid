created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Vee Usagi", "Il Dim Il", "My Birthday Girl", "Tirluka", "Drevarr Moonwillow", "Gestalia Yesteryear", "Klengah", "Arriasa"];
const professions = ["Scrapper", "Scourge", "Scourge", "Scrapper", "Tempest", "Scrapper", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.6072, 4.4934, 0.0, 2.4973, 68.4083, 28.0296, 26.082, 39.1104, 12.4297, 35.834, 24.772, 7.546, 0.0, 53.4129, 7.5762, 0.0, 5.0252, 9.9866, 19.5776, 0.0, 0.0, 0.0, 12.047, 31.5653, 0.0, 0.0, 19.9598, 0.0, 1.1966, 10.976], [4.32, 111.8691, 14.7798, 12.6095, 12.5011, 39.7658, 36.4504, 19.217, 2.5063, 4.2624, 28.6694, 3.7323, 0.0, 0.0, 61.4827, 11.3123, 37.2571, 41.2698, 15.386, 26.508, 0.0, 47.6928], [25.7079, 8.9869, 0.0, 14.7533, 0.0, 31.1712, 12.1716, 63.5544, 30.6245, 42.3016, 38.5421, 14.52, 0.0, 50.4328, 0.0, 0.0, 1.1463, 15.6031, 14.6189, 10.9802, 19.7837, 0.0, 0.0, 8.257, 19.1129, 0.0, 0.0, 0.0, 29.0981, 4.7053, 10.4429, 22.0147, 24.843, 20.304, 0.0, 46.4486], [18.5523, 13.065, 21.7648, 10.3734, 35.343, 17.544, 18.63, 54.9311, 21.0956, 34.3482, 85.6729, 5.478, 0.0, 59.8316, 1.7195, 10.4227, 11.2499, 8.1788, 0.0, 0.0, 10.3488, 5.4144, 55.9874, 29.4784, 23.765, 35.8704, 0.0, 38.016], [0.0, 41.4221, 0.0, 0.0, 38.9386, 248.2752, 0.0, 110.8613, 31.7915, 50.5827, 81.4733, 0.0, 91.5936, 66.0787], [46.0491, 19.8995, 2.5549, 33.6943, 86.0798, 27.132, 41.3172, 61.11, 27.8154, 61.9666, 53.0221, 19.932, 14.1312, 149.4645, 4.9555, 10.4949, 24.564, 15.0137, 38.743, 25.116, 5.1005, 7.1687, 21.5232, 9.2496, 90.4486, 0.0, 0.0, 0.0, 86.653, 16.554, 7.1795, 52.6848, 12.005, 65.8752, 0.0, 50.3194], [73.238, 0.0, 756.2628, 80.6058, 72.5457, 65.7624, 106.423, 103.2654, 79.9075, 0.0, 55.6781, 130.7016, 0.0, 0.0, 0.0, 261.5621, 70.2144, 70.9789, 250.6291, 24.059, 283.4664, 0.0, 108.6106], [109.0827, 74.576, 66.4425, 181.1119, 199.4131, 171.6864, 215.487, 125.4113, 99.9335, 397.3204, 269.3691, 99.154, 75.9168, 793.8581, 0.0, 103.9968, 54.2455, 0.0, 62.2656, 144.8678, 76.9709, 0.0, 93.9648, 173.5766, 320.19, 0.0, 285.4498, 87.1097, 115.3612, 149.6499, 86.485, 393.4464, 0.0, 176.3482], [121.5306, 171.9841, 443.0979, 353.3515, 334.5192, 401.6214, 810.9976, 101.3656, 238.165, 164.1058, 142.956, 81.8304, 1612.0157, 0.0, 121.3227, 131.2536, 120.1094, 267.7722, 156.7496, 152.2931, 120.1344, 336.5501, 411.1213, 533.3045, 121.1198, 249.6501, 411.945, 153.223, 383.8584, 283.8528]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

