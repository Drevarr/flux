created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Gavann", "Funky Loot", "Krozo Stormleaf", "Ryvalia Fazebringer", "Guardian Of Glenmor", "Bella Sassy", "Rozaalyna", "Black Raspberry Pie", "Vee Usagi", "Morton Saltbringer", "Be\u00eb", "Il Dim Il", "F\u00f9gly", "Jimbo Mann", "Sygaldry Verdandi", "Frosmor", "Raziel Umbra", "Tirluka", "Primal Clone", "Eibh\u00ebar", "Newtype Khan", "Grasszanine", "Tootsie Pop Rocks", "Cat Wigglebooty", "Gestalia Yesteryear", "My Birthday Girl", "Klengah", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Scourge", "Firebrand", "Virtuoso", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Scourge", "Chronomancer", "Scourge", "Scourge", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Druid", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 5.0, 0.0, 4.0, 0.0, 9.0, 1.9913, 13.9691, 8.0392, 2.9913, 13.011, 0.0, 0.9792, 22.0154, 0.0, 0.0, 0.9888, 0.0, 8.0234, 1.9857, 1.0, 0.0, 2.05, 1.9894, 1.0, 0.0, 0.0, 0.0, 5.006, 0.9811, 3.982, 20.9609, 0.0, 1.9957, 0.0, 5.0104], [0.0, 0.0, 0.0, 4.0, 3.9916, 14.113, 20.9639, 1.0, 16.9652, 9.0055, 2.9636, 3.9583, 14.0345, 0.0, 0.0, 3.9775, 0.0, 3.0078, 0.0, 0.0, 0.0, 5.0745, 4.0, 0.0, 0.0, 9.012, 0.0, 0.0, 16.9688, 4.99, 7.983, 13.9896], [1.9783, 21.9101, 4.9848, 21.0625, 0.0, 9.0, 0.0, 0.0, 13.9468, 12.0, 0.0, 0.0, 0.0, 62.2455, 10.9245, 6.973, 13.2734, 0.0, 31.2936, 0.0, 41.0938], [61.0192, 0.0, 23.7609, 10.9551, 13.8636, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 17.0083, 0.0, 16.2113, 0.0, 28.1522, 15.1319, 0.0, 0.0, 19.0384, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9574, 0.0, 0.0, 0.0, 26.2275, 0.0, 15.036, 16.9688, 16.0, 17.1404, 0.0], [0.9957, 24.022, 1.9818, 0.0, 68.5912, 14.0652, 9.9551, 0.0, 0.0], [6.0, 0.0, 9.3451, 0.9916, 0.0, 5.9826, 35.3814, 0.0, 26.0783, 17.0714, 0.0, 0.0, 32.023, 0.0, 0.0, 0.0, 6.9848, 0.0, 10.9571, 0.0, 0.0, 0.0, 0.9894, 1.0, 13.018, 0.0, 0.0, 37.1562, 0.0, 3.9915, 13.1146], [5.0299, 0.0, 0.9796, 2.0, 0.0, 6.0, 0.9913, 34.3041, 2.0, 36.287, 29.0934, 0.0, 0.0, 33.9866, 0.0, 0.0, 0.0, 11.0938, 0.0, 0.0, 0.0, 1.9894, 1.0, 0.0, 0.0, 16.018, 0.0, 3.982, 24.9766, 0.99, 7.983, 18.0938], [13.1791, 7.3051, 0.0, 2.0, 0.0, 40.175, 22.6261, 11.9845, 2.0, 18.0739, 0.0, 21.4, 0.0, 25.9962, 0.0, 15.2826, 3.9775, 1.9848, 18.0547, 14.5, 14.0, 0.0, 0.0, 8.0213, 11.1015, 0.0, 0.0, 0.0, 20.0419, 2.9811, 31.0721, 6.375, 23.61, 16.0255, 0.0, 4.0], [0.0, 62.5182, 4.9348, 1.9888, 0.9848, 12.0312, 7.9714, 3.0, 0.0, 0.975, 7.0, 0.0, 0.0, 0.0, 31.2635, 0.0, 10.964, 36.2031, 5.99, 12.9745, 0.0, 29.1562], [4.9851, 26.0508, 0.0, 1.0, 0.0, 14.0, 0.0, 32.232, 1.0, 26.8909, 0.0, 35.1516, 0.0, 19.1328, 0.0, 5.0, 0.0, 0.0, 1.9894, 12.0, 0.0, 0.0, 0.0, 50.2216, 0.0, 1.991, 0.0, 20.51, 48.9234, 29.625], [7.9701, 5.0, 0.0, 2.0, 0.0, 13.0, 3.9826, 44.3505, 6.1373, 24.1, 12.011, 7.1273, 0.0, 47.048, 0.0, 1.9783, 3.9775, 1.9848, 15.0938, 7.9714, 2.0, 0.0, 0.0, 10.0106, 1.0, 0.0, 0.0, 0.0, 24.0479, 0.0, 0.991, 15.9688, 9.98, 22.3021, 0.0, 23.1979], [9.9701, 2.0, 0.0, 12.0177, 0.9916, 20.1083, 11.113, 53.8351, 20.0, 32.9478, 21.022, 1.9818, 0.0, 34.0269, 0.0, 0.0, 0.0, 2.9848, 9.0234, 7.9714, 3.0268, 0.0, 0.0, 3.9787, 12.0, 0.0, 0.0, 0.0, 12.024, 0.9811, 17.991, 22.4531, 16.65, 12.9787, 0.0, 32.7188], [82.06, 191.3319, 156.9583], [6.0, 13.6531, 22.4425, 5.9916, 2.0, 9.9739, 51.299, 11.0588, 32.1652, 28.033, 0.0, 0.0, 49.9885, 0.0, 5.9348, 0.0, 0.0, 10.0312, 26.2571, 7.0, 0.0, 0.0, 12.9468, 5.0, 0.0, 0.0, 0.0, 13.018, 0.0, 0.991, 30.0234, 7.98, 19.9617, 0.0, 16.2708], [0.0, 8.0, 0.0, 17.2743, 14.9832, 8.0, 23.9391, 39.933, 6.0392, 25.0739, 18.0275, 8.9273, 0.9792, 61.3244, 0.0, 0.0, 0.0, 17.0625, 21.0857, 5.0, 0.0, 0.0, 4.9787, 25.1421, 0.0, 0.0, 22.1557, 0.0, 14.0721, 27.3906, 11.98, 13.9745, 18.0417], [14.6531, 55.9823, 27.1681, 21.0083, 4.9826, 7.0392, 61.1043, 37.2857, 27.9091, 10.0, 89.6468], [7.6716, 28.5254, 0.0, 5.0, 0.0, 42.3667, 21.0435, 102.5825, 10.3137, 75.4435, 15.011, 16.7273, 0.9792, 42.9731, 41.087, 4.0562, 0.0, 5.5781, 20.4429, 19.0536, 0.0, 0.0, 22.9255, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.973, 16.9688, 24.96, 24.1404, 0.0, 4.0], [0.0, 35.1071, 0.0, 5.975, 65.3298, 98.0102, 0.0, 152.7305, 22.8868, 53.3333, 62.4219, 28.99, 90.5617, 73.2083], [9.1343, 2.0, 0.0, 18.0265, 0.0, 28.1083, 19.0, 69.6186, 3.0196, 38.9913, 25.0549, 21.0364, 0.0, 106.6891, 0.0, 0.9783, 16.9326, 28.1061, 23.1328, 0.9857, 14.0, 0.0, 0.0, 22.9894, 28.0254, 1.0, 0.0, 0.0, 62.5928, 0.9811, 23.991, 29.9531, 34.74, 37.1277, 0.0, 4.0], [6.9851, 20.322, 0.0, 4.0, 0.0, 32.7333, 30.4174, 69.4124, 43.2157, 39.3043, 49.6538, 52.5455, 0.0, 75.572, 0.0, 27.6304, 5.9775, 19.4091, 34.2891, 16.9429, 21.2054, 0.0, 0.0, 32.883, 15.0, 0.0, 0.0, 9.2931, 61.6826, 0.0, 50.4505, 56.5078, 29.0, 45.6426, 0.0, 30.3438], [11.0299, 12.0847, 0.0, 17.0708, 8.9916, 33.0583, 19.9652, 110.9278, 25.451, 69.4174, 47.1429, 0.0, 3.9583, 94.5317, 0.0, 17.2391, 5.9775, 0.0, 12.0312, 28.3857, 9.0, 0.0, 0.0, 21.9149, 28.0152, 1.0, 0.0, 0.0, 51.2695, 0.0, 27.9009, 71.7266, 17.0, 38.9362, 30.1979], [0.0, 7.0, 7.9796, 8.0088, 12.9832, 8.0, 20.9478, 106.9278, 19.2157, 73.0478, 50.3956, 2.9636, 0.0, 111.4357, 0.0, 14.8043, 0.0, 9.9848, 16.0469, 24.0286, 0.0, 0.0, 14.9468, 17.0203, 0.0, 0.0, 0.0, 57.2515, 0.0, 27.973, 72.6641, 23.96, 42.9617, 37.3333], [35.1045, 19.2881, 0.0, 53.2832, 12.9832, 33.2, 44.5217, 157.1186, 32.7059, 22.9609, 58.5769, 40.6182, 0.0, 133.5988, 15.7826, 13.1685, 0.0, 41.4609, 46.3857, 22.0, 0.0, 27.0213, 43.2284, 0.0, 0.0, 101.3174, 12.9434, 52.4775, 92.9922, 41.57, 55.0383, 112.2083], [24.209, 7.0169, 17.8571, 61.1681, 25.7731, 47.2667, 93.6174, 131.4845, 22.4902, 69.4348, 80.967, 16.8909, 0.0, 160.2726, 28.8696, 14.9438, 26.0303, 17.0547, 29.9571, 7.0089, 0.0, 0.0, 80.617, 56.1269, 0.0, 0.0, 73.9222, 0.0, 56.3153, 96.3828], [22.0364, 12.1875, 248.1305, 51.2174, 4.9775, 33.1212, 59.6719, 54.9571, 24.0714, 1.975, 25.9149, 79.6447, 0.0, 0.0, 0.0, 163.024, 1.9811, 81.7477, 150.125, 49.37, 143.8468, 0.0, 89.1979], [17.2239, 32.2034, 15.6327, 68.292, 14.563, 46.225, 57.3739, 145.8247, 35.1569, 105.2826, 93.2253, 29.4545, 0.0, 198.6353, 22.9101, 45.9242, 44.1094, 38.4714, 0.0, 0.0, 8.975, 56.8936, 72.3198, 86.5312, 40.15, 79.8553, 0.0, 93.8125], [32.3731, 13.0169, 7.4286, 66.2124, 55.8067, 68.4833, 90.6348, 87.6753, 15.098, 165.3261, 76.0934, 5.9455, 20.7708, 255.0806, 3.0, 30.6957, 11.9551, 0.0, 56.2891, 91.6, 12.0, 0.0, 0.0, 51.9255, 109.665, 0.0, 170.1677, 4.9623, 106.2973, 108.9141, 20.96, 129.3234, 0.0, 61.6146], [50.7458, 54.8367, 79.7876, 71.9916, 87.625, 132.087, 238.9948, 35.3529, 116.5391, 100.5055, 59.9818, 16.8542, 334.9866, 0.0, 73.3261, 53.5281, 57.9394, 67.4531, 57.6571, 28.0357, 5.5, 104.3085, 147.6548, 193.7725, 36.717, 88.6036, 172.7578, 62.59, 102.2213, 111.4375], [45.2836, 43.2034, 62.1429, 122.1504, 57.958, 73.8, 119.8348, 239.4072, 58.8235, 187.3783, 149.5055, 42.9636, 29.3542, 312.6334, 9.0938, 50.4783, 49.3371, 60.1818, 98.3438, 50.8857, 63.2321, 7.987, 11.975, 97.0638, 116.3503, 1.0, 0.0, 27.069, 194.8263, 28.434, 80.5856, 177.9531, 80.01, 161.2511, 0.0, 119.3333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

