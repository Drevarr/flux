created: 20230529221000000
creator: Drevarr
modified: 20230705163532361
modifier: drevarr
tags: ChartData
title: 202305292210_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Pamtastic", "Riann Swordbreak", "Artakama Nahid", "Tootsie Pop Rocks", "Venomina The Siren", "Miphest\u00f6", "Tegan Parker", "Jeckyll Mbs", "Riann Swordbreak", "Cyclotechnist Farra", "Xanvias Einzbern", "Zadey Starbolt", "Fribble Bibble", "Cat Wigglebooty", "Johosh Of The North", "Drevarr Moonwillow"];
const professions = ["Tempest", "Berserker", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Berserker", "Spellbreaker", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.703, 0.72, 0.472, 0, 0.45, 0.781, 0.291, 0.776, 0.629, 0.166, 0.523], [1.048, 0.318, 1.205, 0, 1.08], [0, 0.374, 0.552, 0.721, 0.313, 0, 0.225, 0.384, 0.306, 0.31, 0.624, 0.388, 0.261, 0.408, 0.59], [0, 0.394, 0, 0, 0.236, 0, 0.203, 0.0, 0.535, 0.462, 0, 0.222, 0.688, 0.663, 0.515], [0.225, 0.698, 0.468, 0.834, 1.33, 0.444, 0.694, 1.19, 0.508], [0, 0.439, 0.553, 0.718, 0.157, 0.431, 0.228, 0.524, 0.153, 0.466, 0, 0.279, 0.546, 0.509, 0.51], [0, 0.608, 0, 0, 0.433, 0, 0.447, 0.721, 0.306, 0.543, 0.709, 0.472, 0.656, 0.778, 0.742], [0, 0.861, 0.922, 0.715, 0.262, 0, 0.201, 0.763, 0, 0.778, 1.048, 0.582, 0.772, 0.68, 0.376], [0.634, 0.975, 1.016, 0, 1.089, 0, 0.75, 1.322, 0.853, 1.501], [0, 0.824, 0, 0, 0.728, 0.175, 0.421, 0.84, 0.229, 0.829, 1.021, 0.322, 1.46, 0.754, 0.985], [0, 0.953, 0, 0, 0.525, 0, 0.375, 1.432, 0.255, 1.062, 0, 0.37, 1.189, 0.806, 1.004], [0, 1.137, 0.912, 0.711, 0.925, 0.431, 0.674, 1.135, 0.829, 0.729, 0.88, 1.331, 1.707, 1.023, 1.516], [0.571, 1.354, 1.103, 1.081, 0.936, 0.215, 0.983, 0.675, 0.733, 1.409, 0.629, 0.702, 1.045, 1.019, 1.437], [0.95, 1.168, 1.59, 1.799, 1.023, 0, 1.123, 1.277, 0.764, 1.523, 0.617, 1.627, 1.728, 1.68, 1.154], [0.761, 1.233, 0.459, 0, 1.101, 0.431, 0.675, 1.104, 1.091, 1.709, 0, 0.982, 1.615, 1.501, 1.485], [0.191, 1.886, 1.383, 0.854, 1.81, 1.455, 1.825, 1.839, 1.528, 1.976, 2.436, 1.439, 2.054, 1.637, 2.108]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

