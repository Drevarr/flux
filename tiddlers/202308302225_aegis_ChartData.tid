created: 20230830222507000
creator: Drevarr
tags: ChartData
title: 202308302225_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Pr\u00e6tor Lightbringer", "Belvyn Brightblade", "Rafaellagabriela", "Darks Na", "Crusader Siolith", "Sygaldry Verdandi", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.2313, 15.5938, 2.7086, 21.3945, 4.347, 115.2682, 0.861, 7.008, 0.0, 29.9626, 28.2224, 0.0, 13.11, 8.9838, 43.571, 9.4962, 11.2266, 1.0483, 0.0, 8.7441, 16.8577, 22.2264, 89.8304, 32.1433, 27.1612, 0.0, 1.5239, 37.0862, 25.1969, 15.2908, 0.9523, 0.0, 134.674, 4.3512, 30.4333, 4.4307], [49.9851, 77.5029, 0.0, 35.3954, 21.3365, 25.3562, 157.8805, 20.6283, 21.3037, 41.0897, 46.4413, 190.8018, 21.1302, 0.0, 258.796, 14.1518, 29.7302, 34.132], [16.2191, 15.0696, 90.76, 85.3805, 73.7478, 471.8383, 114.9435, 90.816, 63.527, 170.543, 83.4768, 0.0, 25.4472, 22.6548, 51.1761], [240.195, 8.4672, 57.9595, 52.3723, 30.4822, 117.8624, 29.9732, 43.3642, 118.2208, 16.1539, 53.7006, 15.2757, 26.0161, 56.4169, 32.0198, 14.1169, 70.432, 5.5335, 323.8974, 125.5632, 31.5549, 29.1088], [14.5127, 190.9181, 74.0656, 45.4734, 441.1176, 143.9592, 97.536, 118.1587, 155.7034, 31.6944, 78.2736, 23.5476, 135.7039, 59.3292, 145.0102, 41.3067, 60.1892, 65.7903, 80.117, 13.9234, 47.8548, 0.0, 33.1961, 29.2475, 0.0, 0.0, 100.949, 89.4758, 68.7785, 0.0, 21.8494, 156.6726], [59.8391, 154.2668, 20.2327, 104.7492, 72.4248, 714.7155, 213.1836, 210.0, 113.6323, 254.2003, 118.7424, 0.0, 160.77, 49.848, 257.8611, 92.6982, 152.2274, 35.1915, 0.0, 60.2402, 23.6887, 81.3305, 110.4188, 50.3699, 44.3326, 0.0, 29.7983, 128.2505, 86.4833, 14.7189, 95.6288, 0.0, 339.6361, 181.0306, 31.1197, 54.2763], [39.7723, 248.9432, 9.5008, 217.5522, 101.115, 1086.7772, 263.2077, 140.928, 33.6134, 276.5165, 143.592, 193.6416, 126.3684, 235.9964, 31.0464, 44.3718, 37.8269, 27.0761, 145.1681, 83.8684, 90.7038, 79.1078, 116.8121, 35.2359, 102.1255, 12.6522, 49.7372, 152.4974, 160.4579, 42.8022, 6.8405, 582.8722, 63.8798, 65.3027, 21.355], [222.2111, 231.8555, 239.0456, 199.2438, 1062.6208, 319.0005, 283.536, 130.7933, 221.1792, 133.2752, 7.7142, 151.7724, 143.6292, 300.9568, 90.4932, 97.7427, 77.037, 11.7998, 164.7246, 28.4592, 52.1532, 161.7991, 251.8286, 24.8724, 61.6043, 22.2849, 130.3193, 123.0479, 212.3478, 147.3094, 183.1629, 23.989, 516.6976, 135.6331, 36.8782, 78.7741]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

