created: 20230313222416000
creator: Drevarr
modified: 20230705163521959
modifier: drevarr
tags: ChartData
title: 202303132224_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Neuronut C", "Seren Nightroad", "Hauzzy", "Morton Saltbringer", "Oo Dads Mad", "Elonith Tenebris", "Daring Deathblade", "Rozaalyna", "Arcanophage Farra", "Black Raspberry Pie", "Newtype Khan", "Smol Gluvs", "Primal Clone", "Rina Of Theros", "Eibh\u00ebar"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2419, 0.0529, 0.1998, 0.1698, 0.3939, 0.7059, 0.2059], [0.0968, 0.0176, 0.1293, 0.0264, 0.0, 0.4091, 0.5098, 0.0576, 0.2464, 0.4706, 0.0492, 0.6905, 0.1845, 0.2212, 0.4937], [0.1774, 0.0118, 0.1434, 0.1396, 0.0, 0.1212, 0.7255, 0.0082, 0.0, 0.6087, 0.2059, 0.0, 0.1905, 0.3738, 0.0, 0.4937, 0.3137, 0.5867, 0.1489, 0.0769, 0.5664, 0.0, 0.1053, 0.4106, 0.0808, 0.6923, 0.5667], [0.3065, 0.0647, 0.1833, 0.1925, 0.0, 0.4697, 0.2745, 0.1449, 0.1324, 0.0164, 0.7619, 0.3835, 0.2212, 0.2532, 0.2941, 0.2533, 0.3404, 0.0, 0.3816, 0.3902, 0.404, 0.5846, 0.4333], [0.0968, 0.0176, 0.1281, 0.1585, 0.0, 0.2727, 0.7647, 0.0288, 0.5797, 0.2206, 0.0, 0.3571, 0.1019, 0.0354, 0.3671, 0.5686, 0.8133, 0.4043, 0.1795, 0.7257, 0.0, 0.0921, 0.4187, 0.3737, 0.8923, 0.8667], [0.5133, 1.0253, 0.8627, 0.72, 1.1383, 0.2051, 0.3186, 0.0, 0.1842, 1.1626, 0.6263, 0.0, 1.2], [0.4194, 0.0235, 0.1657, 0.2528, 0.0, 0.8485, 0.4118, 0.0288, 0.0, 0.4638, 0.2647, 0.0, 0.381, 0.1408, 0.3186, 0.6962, 0.6471, 0.3467, 0.3511, 0.2051, 0.4425, 0.0, 0.4868, 0.3821, 0.5556, 0.3846, 1.0167], [0.2258, 0.0118, 0.1645, 0.1057, 0.0, 0.2727, 0.8431, 0.0576, 0.0, 0.8116, 0.6471, 0.0164, 0.4762, 0.2573, 0.0354, 0.0127, 0.8824, 0.6, 0.9255, 0.0769, 0.0796, 0.2703, 0.2105, 0.5244, 0.9192, 1.6], [0.4355, 0.0059, 0.1868, 0.1623, 0.0, 0.2121, 0.5882, 0.037, 0.0, 0.6812, 0.3088, 0.0, 0.4762, 0.3786, 0.3628, 0.3038, 0.2745, 0.5333, 0.6596, 0.1026, 0.708, 0.0, 0.0658, 0.6504, 0.5455, 1.0615, 0.6667], [0.2097, 0.0882, 0.2867, 0.3321, 0.0385, 1.0303, 0.6471, 0.0535, 0.0645, 0.4928, 0.75, 0.0164, 0.4286, 0.5777, 0.1504, 0.038, 0.5294, 0.177, 0.1622, 1.0132, 0.4146, 0.5354, 1.2154, 0.6667], [0.0, 0.6129, 0.0176, 0.1763, 0.1887, 0.0, 0.3939, 0.8824, 0.0823, 0.1613, 0.6812, 0.4559, 0.0328, 0.5238, 0.5146, 0.3628, 0.4684, 0.5686, 0.24, 0.6702, 0.1026, 0.4867, 0.1622, 0.0921, 0.4959, 0.8788, 0.9846, 0.8333], [0.1935, 0.0176, 0.2879, 0.3358, 0.0, 0.6364, 0.6667, 0.0453, 0.0323, 0.5942, 0.3676, 0.0164, 0.5952, 0.6845, 0.3451, 0.5316, 0.5686, 0.2533, 0.3723, 0.1795, 0.6018, 0.1351, 0.4868, 0.4268, 0.8586, 0.5385], [0.5, 0.0412, 0.2315, 0.3396, 1.1061, 0.6667, 0.0329, 0.2029, 0.3529, 0.0984, 0.3095, 0.6796, 0.7345, 0.7468, 0.6471, 0.5733, 0.3298, 0.1026, 0.6903, 0.0811, 0.1184, 0.4797, 0.5455, 0.6154, 1.0833], [0.4677, 0.0588, 0.1974, 0.2868, 0.8939, 0.7255, 0.037, 0.0323, 0.6232, 0.4412, 0.0164, 0.6905, 0.7961, 0.2478, 0.6709, 1.098, 0.1067, 0.6277, 0.1282, 0.6283, 0.0811, 0.1184, 0.6098, 1.0606, 0.9538, 1.0], [0.3548, 0.0706, 0.4465, 0.5321, 0.0385, 1.3636, 1.2353, 0.1399, 0.0323, 0.8841, 0.3529, 0.0328, 1.3571, 0.8835, 0.4779, 1.038, 0.7843, 1.24, 1.2234, 0.0769, 1.0885, 0.1622, 0.4079, 1.0691, 1.1515, 2.0308, 1.6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

