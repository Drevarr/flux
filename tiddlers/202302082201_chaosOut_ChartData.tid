created: 20230208220141000
creator: Drevarr
modified: 20230705163518837
modifier: drevarr
tags: ChartData
title: 202302082201_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Bella Sassy", "Tribal S", "Stabby Beech", "Isla Miststorm", "Sp\u00edcy Cheese", "Panther B Me", "Smol Daddy Tika", "Kira Dragonblaze", "Zefirokai", "Daddys Lil Orchid", "Newtype Khan", "Skye Nightroad", "Warrior Husky", "Zaylen Harker", "Mistwalker Caelon", "Arcanophage Farra", "Gabe Malhorn", "Whose Guardian", "\u00c9\u00efbhear", "Tegan Parker", "Etchery Howls", "Zadie Miststep", "Xanvias Einzbern", "Xyntharos", "Stoic Rapidfire", "Drevarr Moonwillow", "Lord Erin The Wise", "Mac Aaroni", "Elonith Primal"];
const professions = ["Firebrand", "Firebrand", "Druid", "Firebrand", "Willbender", "Berserker", "Scourge", "Berserker", "Dragonhunter", "Catalyst", "Vindicator", "Spellbreaker", "Scrapper", "Berserker", "Firebrand", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Druid", "Tempest", "Berserker", "Vindicator", "Druid", "Scrapper", "Weaver", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.0419, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.97], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.97], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.97], [12.6778, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.4035, 0.0, 0.0], [0.0, 0.0, 14.9048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9925, 0.0, 0.0], [21.2659, 0.0, 0.0, 0.0, 0.0], [0.0, 11.9526, 0.0, 11.97], [0.0, 0.0, 3.0032, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 20.9475], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.012, 0.0, 0.0, 11.97], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.012, 0.0, 11.9962, 0.0], [0.0, 11.6762, 12.6096, 0.0], [24.9466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.728, 0.0, 0.0, 11.97], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 23.8361, 8.963, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.9175], [23.7197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.975], [11.8598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.012, 0.0, 0.0, 11.97], [0.0, 0.0, 0.0, 16.1304, 0.0, 0.0, 19.95], [18.4032, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.012, 9.8108, 0.0, 0.0], [15.9494, 0.0, 15.9059, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9835, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 27.1128, 10.2253, 0.0, 14.9625], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.604, 11.9526, 8.8608, 0.0], [11.8598, 0.0, 0.0, 11.909, 0.0, 0.0, 0.0, 21.6216, 0.0, 0.0, 11.6375], [11.8598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.2608, 11.8835, 0.0, 11.97], [11.8598, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 41.8704, 14.9925, 5.9981, 11.97], [0.0, 0.0, 0.0, 0.0, 0.0, 15.7295, 0.0, 46.332, 17.8252, 0.0, 15.96], [15.9494, 0.0, 0.0, 0.0, 0.0, 23.6057, 0.0, 47.7048, 0.0, 0.0, 20.9475]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

