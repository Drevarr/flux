created: 20230524221126000
creator: Drevarr
modified: 20230705163531430
modifier: drevarr
tags: ChartData
title: 202305242211_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Creator Zim", "Sizzln Sisigbringer", "Duke Silvver", "Queen Josie", "No Reserv\u00e9", "Xanvias Einzbern", "Cael Saladbringer", "Grilo Gringo", "Sire Nighthawk", "Morton Saltbringer", "Pie Snarglebringer", "Primo Pobre", "Zi Long Of The Wind", "Spicy Gyrosbringer", "Newtype Khan", "Bork Borkbringer", "Baelin Fishbringer", "Al Darasum", "Blanco Padre Guard", "Ryvalia Fazebringer", "Bee Honeybringer", "Xkaet", "Brioche Bunbringer", "Ravioli Ryebringer", "Tin Holo", "Johosh Of The North", "Pieca Pizzabringer", "Pepper Cornbringer", "Morv\u00e4rth", "Inedible Plant", "Band Aidbringer", "Bubble Teabringer", "Mouschi W", "Bella Lunabringer", "Zefirokai", "Bura Beignetbringer", "Soxx", "Sister Elon\u00edth", "Im Alt Tabbed", "Brie Cheesebringer", "Gordon Ramsybringer", "Grasszanine", "Morv\u00e4rth", "Kaulina", "Finnegan Seelie", "Arriasa", "Miphest\u00f6", "Muuuuugs", "Candy Sweetsbringer", "Red Omega Red"];
const professions = ["Mechanist", "Weaver", "Vindicator", "Willbender", "Vindicator", "Berserker", "Vindicator", "Dragonhunter", "Vindicator", "Chronomancer", "Chronomancer", "Firebrand", "Dragonhunter", "Scrapper", "Spellbreaker", "Tempest", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Scourge", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Scrapper", "Reaper", "Vindicator", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Dragonhunter", "Herald", "Spellbreaker", "Scourge", "Weaver", "Daredevil", "Druid", "Tempest", "Berserker", "Dragonhunter", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[599.4326, 361.5068, 1300.051, 221.5562], [12.8102, 1.5652, 29.2143, 287.0776, 170.6324, 123.2478, 178.3919, 389.9805, 304.5694, 728.4762, 130.0275], [180.2907, 56.65, 0.0, 192.7797, 170.8317, 84.8876, 176.4805, 66.9688, 334.7714, 279.6651, 242.2421, 171.2852], [182.9006, 127.5, 0.0, 142.3478, 199.4735, 134.6455, 277.3506, 36.9091, 262.2087, 164.1875, 589.3303, 126.9556], [96.1108, 0.0, 0.0, 53.7009, 156.9945, 97.1805, 365.9737, 0.0, 304.1857, 236.1381, 1015.367, 106.3941], [100.4415, 0.0, 0.0, 105.614, 171.5672, 107.7015, 128.2716, 46.7241, 410.3491, 209.8558, 671.7545, 791.8605], [107.4781, 0.0, 34.125, 109.2857, 157.3526, 176.3916, 118.3117, 6.0345, 332.7463, 175.8458, 609.5648, 144.5339], [280.1217, 141.4101, 176.6828, 196.1558, 299.7379, 254.924, 408.1455, 206.8241], [252.4216, 255.8205, 83.5172, 360.4667, 277.4575, 676.3364, 186.8926], [103.2565, 215.1405, 112.3827, 129.4106, 145.6714, 27.1356, 270.1226, 167.1327, 425.0091, 257.8228], [99.6802, 32.0, 0.0, 149.4821, 167.3202, 213.7313, 157.5205, 15.7188, 311.0368, 207.7443, 462.211, 106.2642], [165.9179, 189.8182, 52.3929, 355.6381, 219.1731, 685.0275, 305.9344], [0.0, 0.0, 2086.7273, 244.7826, 107.0746, 128.5584, 293.8182, 563.6927, 573.5357, 155.215], [175.8542, 38.85, 0.0, 26.8983, 90.5882, 195.0709, 226.8219, 30.8438, 264.3805, 230.3317, 548.0256, 71.8392], [100.3021, 51.1333, 178.6944, 113.2369, 170.8358, 116.1169, 32.3333, 249.1174, 107.5734, 576.6019, 129.3346], [105.3129, 11.2, 292.5312, 162.2727, 105.2605, 193.9142, 249.8026, 0.0, 319.0207, 205.5215, 223.9459, 143.1478], [465.1564, 325.623, 916.8716, 190.145], [130.7434, 144.7595, 78.7419, 466.0896, 324.9579, 514.6417, 136.5083], [86.9329, 0.0, 0.0, 230.6667, 81.7775, 178.8707, 112.0526, 0.0, 304.1359, 147.8796, 559.8364, 107.0814], [102.0146, 1.5, 0.0, 404.6091, 102.6087, 165.6136, 109.0253, 0.0, 229.7077, 105.7583, 469.3, 111.637], [122.172, 161.1293, 132.9673, 172.0709, 194.0732, 59.0, 466.7789, 604.9569, 105.2458], [67.4545, 0.0, 380.8559, 89.5733, 185.4868, 189.973, 0.0, 242.0841, 127.9771, 471.5217, 125.5783], [96.7347, 32.4375, 0.0, 121.5603, 128.4635, 118.6903, 279.1282, 58.0606, 277.8302, 125.9771, 298.9143, 124.8626], [63.9462, 0.0, 0.0, 223.4348, 70.2626, 156.7573, 100.0145, 18.6207, 212.8058, 83.6389, 547.4623, 183.8475], [678.821, 59.5652, 0.0, 442.3009, 180.9381, 221.9101, 248.6757], [43.3866, 10.65, 0.0, 47.2455, 84.2615, 186.4062, 143.3115, 37.5312, 250.7656, 148.3211, 469.713, 73.8095], [87.7093, 0.0, 128.7273, 125.812, 60.6533, 0.0, 427.6793, 294.6, 371.8426, 42.3315], [232.2807, 1565.3125, 102.2222, 235.3025, 473.4222], [157.8338, 0.0, 0.0, 57.6949, 172.4006, 131.4545, 266.2207, 341.2791, 150.2328], [40.7434, 0.0, 0.0, 121.4643, 60.4077, 155.8881, 121.2838, 74.1515, 221.1524, 169.0619, 445.3333, 71.3101], [32.9913, 0.95, 0.0, 62.8167, 74.2333, 160.6981, 42.589, 7.1176, 228.9767, 130.689, 557.8165, 75.3179], [65.0175, 0.0, 0.0, 200.6455, 76.9412, 84.4471, 113.0822, 6.8158, 288.1947, 112.4028, 470.6239, 68.6808], [114.0336, 254.9342, 18.2759, 213.3158, 203.5849, 64.7009, 231.998], [49.2976, 51.0, 0.0, 121.1622, 68.1639, 93.7955, 134.0933, 0.0606, 306.7476, 112.237, 428.0826, 71.125], [5.375, 8.648, 355.4081, 696.8455, 152.3499], [43.0988, 22.5714, 0.0, 73.3107, 70.5139, 141.2134, 89.7162, 7.875, 228.0896, 124.4163, 260.25, 50.3512], [46.8328, 19.75, 0.0, 46.9035, 67.8947, 83.7444, 83.0267, 41.0769, 174.7586, 80.6544, 577.8131, 46.3665], [61.3965, 77.7658, 54.0361, 84.2556, 90.0845, 1.3158, 201.1106, 120.6407, 419.7064, 50.6948], [501.2354], [203.3808, 0.0, 0.0, 337.3545, 232.1671], [134.8847, 34.1364, 233.0, 708.359, 156.1729], [77.3129, 0.0, 0.0, 205.0678, 96.1482, 229.3396, 127.1184, 20.4848], [226.5736, 145.4545, 135.6298], [0.0, 0.0, 401.9487, 248.399], [122.4, 1887.125, 14.4404, 59.1231, 181.3077], [94.3285, 45.5, 0.0, 134.1565, 110.1031], [526.7089], [120.8696], [96.3557], [84.6269]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

