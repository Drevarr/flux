created: 20230506220820000
creator: Drevarr
modified: 20230705163528940
modifier: drevarr
tags: ChartData
title: 202305062208_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Mighty", "Vanhelsing Wizard", "Abigail Ryn", "Blancooo Padreee", "Newtype Khan", "Smol Daddy Tika", "Aronorf Xideliesi", "Jupi Jupi Jupi"];
const professions = ["Spellbreaker", "Chronomancer", "Catalyst", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.9159, 210.2958, 135.1155, 68.832, 35.9761], [332.97, 22.7169, 40.3801, 39.9749, 19.7127, 0.0, 62.1763], [2.0124, 20.1474, 25.128, 0.0, 67.9258, 69.3101, 141.7645, 23.9899, 20.0297, 117.3889, 0.0, 0.0, 50.212, 11.5915], [72.9979, 189.4171, 115.128, 15.984, 58.0187, 145.4477, 92.0506, 288.0695, 38.4178, 22.5245, 183.9143, 16.3258, 0.0, 63.64], [21.3396, 196.209, 167.5752, 21.744, 22.0425, 226.921, 84.1882, 275.9615, 38.927, 21.7048, 119.0297, 0.0, 0.0, 64.2764, 73.2883], [123.0235, 270.6678, 154.3035, 34.416, 81.4317, 135.4752, 68.7053, 357.6905, 11.6555, 39.7386, 134.244, 17.6753, 0.0, 79.9318, 40.7884], [44.6616, 337.3286, 219.7026, 38.448, 144.0188, 161.6294, 63.9878, 431.3475, 20.885, 155.1264, 6.6415, 8.6861, 81.7138, 24.4918], [225.8736, 946.3311, 472.3446, 106.272, 268.2793, 343.7683, 295.0214, 1315.2315, 40.5113, 110.484, 436.7405, 40.5367, 20.8166, 139.0534, 53.7198]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

