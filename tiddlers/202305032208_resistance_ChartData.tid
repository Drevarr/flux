created: 20230503220838000
creator: Drevarr
modified: 20230705163528165
modifier: drevarr
tags: ChartData
title: 202305032208_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Primal Clone", "Soxx", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer", "Gavann", "Oops All Beans", "Zaylen Harker", "Demon Dalham", "Mac Adaymia", "Sub Train", "Koralia Danai", "Sygaldry Verdandi", "Lucas Ryn", "Bella Sassy", "Xanvias Einzbern", "Blancooo Padreee", "Newtype Khan", "Venomina The Fierce", "Smol Daddy Tika"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[310.4462, 188.7441, 6.7591, 2.9772, 8.7142, 29.6352, 0.0, 6.9649, 236.2203, 5.2358, 0.0, 4.4678], [267.1282, 151.6315, 6.6459, 0.0, 12.9968, 33.4425, 6.6477, 0.0, 194.1172, 0.0, 0.0, 170.1216, 163.3258], [7.5348, 609.3446, 418.3826], [299.339, 140.2326, 6.8237, 7.187, 13.7788, 42.7035, 5.1456, 13.9299, 208.2993, 0.0, 6.865, 192.8045, 164.4445], [314.8891, 167.802, 0.0, 0.0, 7.0384, 42.189, 0.0, 8.8177, 194.5604, 0.0, 189.024, 196.1401], [334.8821, 174.6943, 10.753, 8.1245, 7.448, 23.9757, 0.0, 5.5925, 222.9246, 0.0, 7.4929, 202.4275, 177.8685], [400.4146, 497.0437, 6.6135, 0.0, 10.4272, 82.0113, 0.0, 8.4746, 281.4256], [651.9926, 173.899, 7.9233, 11.9913, 47.8485, 0.0, 0.0, 445.4059, 6.0005], [445.9541, 200.9382, 6.7105, 0.0, 41.2629, 0.0, 10.1214, 203.8674, 0.0, 361.5514, 300.9222], [394.3056, 255.0166, 6.4518, 17.7262, 48.6717, 24.2896, 12.6947, 367.4045, 0.0, 368.7686, 314.3463], [322.6642, 176.2849, 38.7433, 11.2666, 0.0, 118.335, 38.5757, 26.2815, 502.5775, 19.9973, 0.0, 370.487, 190.9197], [469.8346, 299.8168, 5.6595, 0.0, 0.0, 33.2367, 15.181, 12.6947, 244.1977, 0.0, 7.6604, 455.7197, 330.3805], [610.896, 340.3756, 10.4297, 5.8094, 40.4397, 0.0, 241.5385, 0.0, 0.0, 528.2362, 303.9053], [595.9013, 324.4702, 19.404, 0.0, 18.2104, 11.0103, 8.1818, 8.0285, 387.7913, 0.0, 489.4003, 343.0588], [592.5691, 306.1789, 7.0501, 7.6384, 7.299, 81.7026, 7.4467, 7.1022, 435.2126, 0.0, 7.4511, 307.5936, 461.2649], [916.344, 523.5527, 5.6918, 7.7832, 84.6867, 9.5039, 440.5309, 35.9577, 590.0986, 412.4163], [890.7974, 433.4221, 27.4567, 46.8479, 181.6185, 0.0, 17.8755, 735.6954, 0.0, 0.0, 510.7085, 482.1468], [1758.2698, 493.0674, 0.0, 13.5554, 130.0656, 1.3743, 0.0, 44.7622, 0.0, 0.0, 895.2864, 880.7662], [1350.6355, 815.1518, 35.4931, 4.1664, 18.0986, 83.5548, 15.2769, 27.0363, 620.9092, 0.0, 7.1162, 1314.2323, 1076.1605], [1466.7058, 917.4765, 60.3464, 56.8282, 62.769, 0.0, 0.0, 1597.6999, 0.0, 927.5923, 1139.1789], [1761.0466, 908.1983, 0.0, 26.7865, 49.3802, 290.8983, 12.0809, 7.4796, 1309.6264, 30.9355, 108.6686, 843.3907, 902.0209]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

