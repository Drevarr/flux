created: 20230227222028000
creator: Drevarr
modified: 20230705163520464
modifier: drevarr
tags: ChartData
title: 202302272220_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Nelliel T", "Cat Wigglebooty", "Etchery Howls", "Grumyaar Lordsbane", "Eibh\u00ebar", "Smol Gluvs", "Mac Aaroni", "Husky Guard", "Be\u00eb", "Black Raspberry Pie", "Tegan Parker", "Venomina The Siren", "High Sorcer Baradun", "Ark Darkness", "Zadie Miststep", "Fribble Bibble", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Blanco Padre Guard", "Ravioli Fetabringer", "Gavann", "Koralia Danai", "Arcanophage Farra", "Drevarr Moonwillow", "Zaylen Harker", "Kahless The Drunk", "Bella Sassy"];
const professions = ["Chronomancer", "Scourge", "Scrapper", "Druid", "Firebrand", "Chronomancer", "Scourge", "Tempest", "Dragonhunter", "Scourge", "Chronomancer", "Tempest", "Tempest", "Tempest", "Firebrand", "Tempest", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.7451, 88.2416, 18.081, 32.8672, 16.4688, 0.0, 0.0, 0.0, 0.0, 9.605, 0.345, 63.0125, 128.3486, 0.0, 0.0, 10.8801, 16.7184, 68.6162, 592.1208, 0.0], [0.0, 0.0, 29.472, 0.0, 8.3574, 48.7545, 0.0, 1.483, 9.0121, 0.0, 260.8917, 0.0, 48.3246, 0.0, 36.2032, 670.0464, 46.9747], [111.4018, 8.3759, 0.0, 0.0, 0.0, 0.0, 0.6339, 0.0, 0.0, 0.0, 7.9654, 29.9789, 717.2424, 0.0, 0.0, 0.0, 0.0, 0.0, 425.4624], [51.7507, 27.487, 82.148, 0.0, 56.6115, 52.992, 0.0, 51.3912, 22.5057, 177.9293, 24.2256, 156.0749, 253.3418, 98.3038, 122.6988, 143.7728, 59.5787], [1400.9544, 27.3811], [0.0, 211.8741, 36.0415, 8.2369, 16.5031, 0.3917, 0.0, 18.9738, 0.3087, 0.0, 23.6611, 46.6022, 320.4522, 68.8432, 0.0, 80.1171, 0.0, 79.8286, 494.2872, 26.5325], [0.0, 52.3787, 0.0, 0.0, 0.0, 325.4854, 108.6631, 0.0, 102.7957, 0.0, 50.1791, 830.448, 74.6803], [77.6261, 167.5174, 6.2681, 0.0, 50.3455, 57.0232, 2.5574, 0.0, 0.0, 0.0, 50.8115, 0.737, 56.6899, 339.327, 9.4414, 0.0, 117.2084, 0.0, 108.491, 517.0392, 0.0], [0.0, 107.9425, 0.0, 0.0, 2.6921, 81.5549, 0.0, 5.1906, 3.8171, 0.0, 76.4248, 12.9987, 19.9622, 413.9873, 88.6002, 133.8111, 0.0, 79.5127, 613.7352, 20.0179], [0.0, 209.8686, 72.1432, 0.0, 38.4523, 0.0, 25.6584, 0.0, 492.4226, 65.6524, 0.0, 72.1336, 0.0, 66.3264, 653.5512, 0.0], [0.0, 27.3715, 0.0, 0.0, 0.0, 31.1865, 0.0, 213.5462, 652.2292, 134.7142, 17.5543, 80.3291, 5.2826, 130.4814, 417.4992, 0.0], [50.3194, 15.0816, 12.3078, 29.4294, 60.6537, 15.6016, 154.583, 487.3893, 0.0, 0.0, 108.801, 0.0, 96.3707, 970.9416, 51.8419], [0.0, 140.6202, 15.4894, 31.702, 63.645, 1.705, 5.8245, 16.6463, 10.3194, 0.0, 35.2016, 112.4563, 538.561, 45.7207, 0.0, 122.719, 0.0, 62.26, 899.2728, 39.7363], [15.0758, 0.0, 37.1866, 50.6268, 34.31, 0.0, 0.0, 1.9845, 92.3738, 8.0282, 30.7603, 559.9524, 67.1823, 56.2464, 135.8599, 72.3303, 76.3543, 1099.4904, 116.089], [255.9667, 216.53, 147.1213, 55.9181, 32.6747, 0.0, 58.5354, 25.6726, 27.9261, 158.135, 1682.3738, 135.3262, 0.0, 319.9738, 0.0], [57.4042, 123.2786, 25.9161, 75.7795, 98.8814, 1.0598, 6.4823, 11.8237, 37.6908, 105.7141, 27.879, 99.6691, 785.6111, 74.2196, 47.1744, 97.3557, 5.3213, 130.5604, 1360.0008, 128.4691], [143.5829, 227.918, 56.9552, 0.0, 43.5551, 64.8116, 0.0, 0.0, 9.8872, 0.0, 74.5275, 19.2237, 86.953, 960.0982, 51.6215, 0.0, 140.5935, 0.0, 43.0332, 1550.5488], [219.8318, 335.5067, 91.9117, 152.2018, 9.5725, 0.0, 12.0437, 28.079, 0.0, 9.3678, 0.0, 7.5302, 813.7136, 0.0, 37.4674, 23.3851, 335.2968, 0.0, 1400.9544, 12.1555], [134.0155, 87.8876, 119.2141, 76.9447, 66.3898, 78.912, 26.3598, 65.021, 35.4858, 88.7571, 0.8467, 429.863, 1254.9645, 134.7142, 0.0, 161.5059, 57.4039, 1166.6088, 94.7981], [241.2134, 271.9209, 122.0468, 63.3965, 43.9167, 179.6815, 177.5923, 45.4121, 103.0989, 40.3809, 323.9013, 66.1853, 364.5773, 1202.9539, 31.6897, 77.3161, 20.4885, 94.8537, 224.9965, 782.1], [277.3085, 213.9976, 36.7044, 31.019, 58.4986, 15.1603, 0.0, 0.0, 16.9932, 258.2672, 0.0, 314.2099, 1014.2059, 87.5511, 43.9765, 415.6339, 60.4301, 153.2614, 1483.4304, 53.3645], [650.508, 794.41, 233.1846, 20.2675, 83.1726, 275.1319, 148.4006, 24.9725, 156.8921, 84.5544, 623.9087, 70.168, 291.9744, 1325.4304, 157.6183], [566.7211, 363.7015, 93.6596, 57.6583, 72.7715, 72.553, 29.9598, 0.0, 26.1366, 233.899, 21.9677, 417.289, 1218.0538, 193.4167, 0.0, 400.5855, 62.307, 85.1978, 1560.2184, 214.631], [173.4446, 393.5479, 183.1605, 196.1989, 69.3748, 104.256, 39.4919, 86.5085, 66.8409, 107.6706, 49.2509, 118.3526, 1414.7711, 243.6395, 0.0, 373.8798, 51.026, 185.9508, 1915.7184, 149.4854], [268.8283, 176.837, 60.5111, 204.7975, 86.1524, 8.2714, 8.8743, 9.0679, 5.0421, 183.0282, 18.0163, 134.4787, 1710.4763, 59.839, 92.1262, 206.3686, 21.1302, 247.3027, 2450.3904, 54.9869], [214.8625, 95.7489, 93.4947, 54.5357, 11.075, 37.5379, 59.1381, 404.8321, 6.6326, 417.0048, 1797.7198, 203.7323, 250.3836, 41.7379, 93.3702, 3005.5392, 213.0336], [516.6374, 397.087, 315.5737, 115.0353, 135.1128, 139.1616, 31.9691, 99.9335, 90.111, 84.5475, 47.5261, 341.3472, 1965.0764, 59.6641, 133.6986, 115.1595, 196.3832, 87.6061, 3396.8736, 211.4362], [471.4824, 622.7636, 230.8341, 86.8692, 158.1005, 120.1306, 55.8412, 0.0, 20.6094, 314.4149, 139.207, 591.0528, 2421.8466, 287.2621, 54.6361, 380.5209, 74.4201, 315.0109, 3176.748, 273.5117]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

