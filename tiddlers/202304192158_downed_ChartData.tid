created: 20230419215809000
creator: Drevarr
modified: 20230705163525941
modifier: drevarr
tags: ChartData
title: 202304192158_downed_ChartData
type: text/vnd.tiddlywiki


const names = ["Declan To", "Panther B Me", "Mac Chiato", "High Sorcer Baradun", "Solus Sanctus", "Mistwalker Caelon", "Xanvias Einzbern", "Johosh The Great", "Grasszanine", "Kos\u00e4ir", "Etchery Howls", "Ark Darkness", "Al Darasuun", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Eibh\u00ebar", "Arcanophage Farra", "Koralia Danai", "Newtype Khan", "Gabe Malhorn", "Daddys Lil Orchid", "Sp\u00edcy Cheese", "Husky Guard", "Tegan Parker", "Ferret Business", "Bella Sassy", "Anita Strips", "Sygaldry Verdandi", "Xyntharos", "Sumatra Satyricon", "Tribal S", "Rina Of Theros", "Smol Gluvs", "Venomina The Siren", "Be\u00eb", "Zadie Miststep", "Tootsie Pop Rocks", "Abigail Ryn", "Miphest\u00f6", "Skye Nightroad", "Smol Daddy Tika", "Kmpek", "My Birthday Girl", "Bagera Flametalon", "Mike The Archmagus", "Nazhul Naxxremis", "Corlyss Velaryonn", "Elonith Requiem", "Lord Erin The Wise", "Cedryn X"];
const professions = ["Tempest", "Scourge", "Tempest", "Tempest", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Spellbreaker", "Vindicator", "Druid", "Firebrand", "Scourge", "Chronomancer", "Scrapper", "Chronomancer", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Berserker", "Dragonhunter", "Tempest", "Soulbeast", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Soulbeast", "Druid", "Scourge", "Scourge", "Tempest", "Scourge", "Tempest", "Scrapper", "Tempest", "Tempest", "Scrapper", "Berserker", "Vindicator", "Scrapper", "Tempest", "Weaver", "Scourge", "Vindicator", "Scourge", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Downed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 2, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0, 0, 1], [1, 2, 1, 0, 1, 2], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 0, 1, 1, 2, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 2, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 2], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 1, 2], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 2, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 2, 1], [0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 1, 0, 1, 0], [0, 0, 2, 0, 1, 1, 1, 1, 0, 0, 0, 1, 2, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 1, 1, 1, 1], [2, 0, 0, 1, 0, 1, 2, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2, 0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 2, 0, 0, 2, 1], [0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 2], [0, 0, 2, 0, 0, 2, 3, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 2, 1, 1, 0, 1, 0], [0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 1, 2, 0, 1, 0, 1, 0, 1, 0], [0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 2, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0, 1, 1, 1, 0, 0, 1], [0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 2, 0, 1, 0, 1, 0], [0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 3, 0, 1, 0, 1, 0, 1, 2], [0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 2], [0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 0, 0, 2, 1, 2, 0, 1, 1], [0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 1, 3, 1, 0, 1, 1, 1, 0, 2, 0], [0, 2, 0, 0, 1, 1, 3, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 2, 2, 0, 1, 1, 2, 0, 1, 1], [0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 2, 0, 2, 0, 1, 0, 2, 1], [0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 3, 1, 1, 2, 0, 1, 1], [2, 0, 0, 0, 0, 2, 2, 2, 1, 1, 2, 0, 2, 1], [0, 0, 2, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 2, 4, 0, 1, 3, 1, 2], [0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 3, 0, 2, 1], [1, 3, 1, 0, 0, 0, 0, 2, 4, 2, 2, 1, 1, 1, 0, 1, 0], [0, 2, 0, 0, 3, 1, 3, 0, 0, 2, 0, 1, 2, 1, 2, 2, 1, 2, 0, 0], [0, 0, 4, 0, 0, 1, 1, 3, 0, 0, 0, 0, 2, 4, 1, 3, 1, 1, 1, 0, 1, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

