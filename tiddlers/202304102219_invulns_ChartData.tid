created: 20230410221909000
creator: Drevarr
modified: 20230705163525218
modifier: drevarr
tags: ChartData
title: 202304102219_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Rina Of Theros", "Mechcem", "Blancooo Padreee", "Johosh The Great", "Xyntharos", "Elonith Requiem", "Newtype Khan", "Mistwalker Caelon", "Fecund Algorithm", "Be\u00eb", "Sofya De Nova", "Be\u00eb", "Fribble Bibble", "Asorlia", "Oo Dads Mad", "Rozaalyna", "Smol Gluvs", "Grasszanine", "Tribal S", "Sassy Daddy Demon", "Tegan Parker", "Ak\u00e1nt\u00f3r", "Smol Daddy Tika", "Ark Darkness", "Gavann", "Aisling Sidra", "Xanvias Einzbern", "Kmpek", "Sp\u00edcy Cheese", "Sumatra Satyricon", "Koralia Danai", "Rozaalyna", "Inedible Plant", "Bella Sassy", "Arriasa", "Drevarr Moonwillow", "Venomina The Siren", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Zadie Miststep", "Mike The Archmagus", "Black Raspberry Pie", "Jeckyll Mbs", "Lord Erin The Wise", "Mac Chiato", "Tootsie Pop Rocks", "High Sorcer Baradun", "Arcanophage Farra", "Eibh\u00ebar"];
const professions = ["Scourge", "Reaper", "Scrapper", "Berserker", "Firebrand", "Vindicator", "Scourge", "Spellbreaker", "Vindicator", "Mechanist", "Scourge", "Weaver", "Reaper", "Scrapper", "Chronomancer", "Spellbreaker", "Reaper", "Scourge", "Spellbreaker", "Druid", "Vindicator", "Tempest", "Druid", "Berserker", "Firebrand", "Firebrand", "Reaper", "Berserker", "Vindicator", "Berserker", "Soulbeast", "Firebrand", "Scourge", "Vindicator", "Firebrand", "Druid", "Scrapper", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Weaver", "Chronomancer", "Berserker", "Weaver", "Tempest", "Scrapper", "Tempest", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 11], [41, 23, 16], [18, 63], [0, 0, 3, 26, 0, 0, 0, 0, 0, 0, 16, 0, 0, 12, 0, 3, 0, 12, 5, 0, 5], [4, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 22, 33, 0, 0], [14, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 6, 0, 3, 17, 18, 0], [6, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 2, 0, 36], [14, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 2, 0, 6, 28, 27, 0], [0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 6, 0, 29, 23, 1, 0], [0, 31, 3, 20, 0, 0, 0, 15, 1, 0, 23], [24, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 38, 0, 11], [0, 46, 0, 0, 19, 0, 0, 0, 0, 0, 5, 0, 0, 0, 9, 11, 10, 0], [3, 101, 0], [0, 0, 0, 0, 1, 0, 17, 0, 0, 0, 0, 0, 0, 0, 33, 0, 1, 0, 4, 55, 0, 0], [0, 0, 0, 65, 0, 0, 4, 0, 0, 1, 3, 1, 2, 0, 12, 0, 8, 17, 6, 1], [0, 0, 25, 101], [97, 30], [0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 9, 0, 27], [0, 9, 0, 0, 0, 0, 0, 0, 22, 0, 0, 62, 0, 3, 0, 6, 13, 18, 0], [0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 20, 43, 25], [0, 0, 2, 22, 0, 0, 1, 0, 31, 0, 0, 4, 0, 37, 0, 7, 24, 12], [0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 29, 0, 27, 20, 42, 0], [6, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 0, 16, 28, 7, 0], [0, 0, 0, 0, 9, 0, 20, 0, 0, 0, 0, 0, 0, 21, 0, 6, 0, 43, 8, 8, 31], [0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 36, 0, 24, 33, 21], [0, 0, 1, 8, 0, 0, 0, 0, 0, 65, 21, 0, 0, 30, 0, 16, 0, 10, 6, 0, 0], [22, 0, 0, 0, 10, 0, 0, 0, 21, 0, 4, 15, 27, 7, 9, 32, 21, 0], [0, 0, 0, 0, 19, 20, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 24, 0, 29, 34, 18, 0], [0, 0, 0, 7, 0, 0, 0, 0, 0, 27, 0, 42, 0, 49, 17, 19, 10], [5, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 15, 0, 23, 6, 19, 10], [0, 0, 7, 19, 0, 0, 0, 2, 0, 0, 16, 11, 0, 21, 0, 2, 0, 52, 24, 1, 21], [7, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 13, 0, 26, 24, 70, 0], [6, 0, 1, 46, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 10, 0, 73], [0, 0, 0, 23, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 3, 112, 20, 0], [0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 15, 0, 47, 27, 53, 0], [2, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 34, 0, 2, 0, 29, 0, 15, 24, 59, 0], [2, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 25, 0, 42, 41, 27, 0], [19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 76, 0, 33, 52, 21, 0], [0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 18, 0, 70, 0, 23, 0, 47, 55, 2, 0], [0, 0, 23, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 51, 112, 23, 0], [21, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 42, 0, 34, 11, 53, 0], [30, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 19, 0, 22, 23, 22, 62], [7, 0, 0, 2, 15, 0, 0, 0, 0, 0, 0, 1, 4, 5, 54, 0, 43, 38, 36, 39, 21, 0], [11, 0, 0, 8, 27, 0, 0, 2, 0, 0, 0, 0, 0, 22, 29, 0, 15, 0, 43, 23, 106], [50, 0, 37, 1, 65, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 32, 31], [0, 0, 43, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 70, 0, 81, 38, 35, 0], [2, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 0, 29, 0, 28, 0, 28, 29, 168], [0, 0, 4, 98, 0, 0, 0, 30, 0, 0, 34, 22, 6, 41, 1, 72, 8, 57, 0], [30, 0, 3, 16, 72, 16, 0, 8, 8, 0, 2, 39, 0, 1, 32, 0, 36, 0, 35, 96, 62, 0], [0, 2, 23, 82, 1, 2, 0, 7, 1, 0, 2, 14, 6, 36, 0, 29, 0, 131, 67, 129, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

