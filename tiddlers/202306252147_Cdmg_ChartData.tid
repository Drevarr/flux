created: 20230625214748000
creator: Drevarr
modified: 20230705163536214
modifier: drevarr
tags: ChartData
title: 202306252147_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Gavann", "Xyntharos", "Mort\u00e4rion", "Solus Sanctus", "Gavann", "Traidoruns Maximus", "Aronorf Xideliesi", "Bardyne", "Kary\u00edna", "Cedryn X", "Sp\u00edcy Cheese", "Ateriuz", "Tika Fiery", "Lord Erin The Wise", "Shaca Booey", "Legacy Of Mathus", "Riann Swordbreak", "Caelon Cai", "Morton Saltbringer", "Xanvias Tsolice", "Wild Doggy", "Mammary Mission"];
const professions = ["Chronomancer", "Firebrand", "Vindicator", "Scrapper", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Dragonhunter", "Vindicator", "Berserker", "Berserker", "Berserker", "Firebrand", "Weaver", "Berserker", "Berserker", "Berserker", "Reaper", "Chronomancer", "Weaver", "Guardian", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.7967, 4.8911, 6.4578, 0.0, 5.4286, 2.0178, 2.8072, 1.8014, 4.553, 3.9552, 0.5098, 0.1273, 26.3222, 0.0, 1.0847], [0.0, 0.0, 50.8723, 0.0, 95.661], [2.5495, 0.4455, 9.1325, 0.0, 3.4377, 5.8609, 23.3404, 7.4633, 2.7834, 11.4776, 2.5255, 0.0, 19.6662, 0.0, 1.0508], [17.9835, 0.7228, 123.2349, 0.0, 8.6839, 2.6036, 15.2063, 0.449], [6.9808, 0.8911, 44.7289, 0.0, 7.0213, 17.7633, 6.5678, 0.424, 5.9539, 78.2239, 4.0078, 75.4909, 11.5559, 0.0, 0.0], [24.5148, 23.4925, 29.2558, 5.2857, 35.1343], [25.8846, 37.0693, 64.2349, 0.0, 7.1459, 13.3698, 11.0105, 10.9946, 1.6313], [15.8929, 22.8218, 85.3675, 28.0444, 4.7416, 10.8195, 7.9232, 2.678, 0.0, 22.7761, 11.9843, 20.2182, 7.299, 35.9153], [10.9588, 39.7921, 190.4699, 0.0, 46.8328], [22.0687, 8.5842, 23.3855, 0.0, 9.5076, 21.787, 16.4744, 12.4401, 4.9263, 0.0, 0.0, 19.1636, 22.6139, 0.0, 0.0], [32.0549, 48.5347, 32.9759, 0.0, 21.459, 9.3935, 18.5934, 16.7853, 6.4286, 0.0, 0.0078, 13.9608], [24.0522, 50.8218, 36.2289, 0.0, 20.2128, 17.2367, 18.6506, 18.6547, 1.2442, 11.7015, 0.0, 2.9636, 12.8055], [26.728, 46.4059, 5.6566, 15.8889, 15.0395, 17.1657, 21.0241, 18.3488, 2.5576, 19.403, 0.9216, 1.4182, 24.3469, 0.0, 0.2542], [37.1401, 56.5842, 32.8735, 14.0444, 1.307, 1.7604, 50.8705, 16.839, 0.4931, 6.8657, 0.4941, 6.5818, 17.8708, 10.3824, 9.9153], [32.5659, 109.0198, 35.1928, 57.2222, 53.3465, 17.1953, 34.6867, 11.8426, 9.4286, 0.0, 4.0863, 0.0, 15.6226], [63.6978, 84.4455, 35.1928, 6.4667, 30.1459, 15.0858, 10.866, 37.4955, 2.6083, 0.0, 0.0, 7.4727, 25.6255, 0.0588, 15.322], [28.7775, 46.8911, 27.747, 0.0, 38.0395, 30.9615, 12.7304, 27.1342, 0.0, 14.3881, 0.5098, 0.0, 55.1626, 34.0, 0.0339], [71.7088, 92.0396, 26.3373, 0.0, 16.1307, 4.003, 70.113, 38.1073, 13.8341], [67.1181, 51.3564, 80.8434, 16.2889, 28.4924, 64.932, 56.3554, 25.9249, 21.3687, 9.597, 7.7569, 28.2364, 43.598, 3.0882, 65.5932], [36.9203, 12.901, 78.2892, 0.0, 8.7356, 88.6834, 52.0361, 29.4132, 4.5899, 9.0275, 3.2909, 89.4848, 0.0, 0.0], [80.5824, 12.2871, 47.0723, 0.0, 26.5502, 34.2278, 96.1024, 14.6959, 42.7005, 11.791, 6.4235, 30.0, 59.9115, 0.0, 13.9492], [8.5922, 144.9091, 298.9463, 0.0, 71.0], [100.1511, 34.8515, 108.8434, 0.0, 92.8541, 34.4053, 115.1114, 30.0805, 13.0691, 107.9403, 4.7451, 97.8287, 0.0, 44.8136]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

