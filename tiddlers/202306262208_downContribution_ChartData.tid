created: 20230626220846000
creator: Drevarr
modified: 20230705163539414
modifier: drevarr
tags: ChartData
title: 202306262208_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Primal Clone", "Irish Necroman", "Newtype Khan", "Gavann", "Ateriuz", "Cat Wigglebooty", "Eibh\u00ebar", "Il Kurai Il", "Latedoctor", "Tootsie Pop Rocks", "Rina Of Theros", "Caelon Cai", "Specialist Zeff", "Rozaalyna", "Grasszanine", "Ateriuz", "Dim Og", "Cyclotechnist Farra", "Lucky Leipreach\u00e1n", "Smol Gluvs", "Lord Erin The Wise", "Mike The Archmagus", "No Reserv\u00e9", "Shaca Booey", "Regis Hawkesburne", "Legacy Of Mathus", "Be\u00eb", "Mistwalker Cael", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Chronomancer", "Chronomancer", "Reaper", "Spellbreaker", "Firebrand", "Spellbreaker", "Scrapper", "Chronomancer", "Reaper", "Reaper", "Scrapper", "Reaper", "Reaper", "Scrapper", "Reaper", "Spellbreaker", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Reaper", "Weaver", "Weaver", "Vindicator", "Berserker", "Berserker", "Berserker", "Reaper", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.4272, 0.0, 35.3788, 56.8065, 0.1224, 116.0305, 0.0, 0.0, 0.0, 0.0, 12.686, 67.5464, 96.9298, 95.3975, 0.12, 99.7955, 124.1609, 0.0, 131.2805, 102.2937], [43.5448, 0.0, 0.0, 65.3226, 62.551, 62.7557, 17.098, 0.0, 6.6571, 0.0, 4.2326, 3.9278, 85.9474, 104.5963, 0.0, 58.9773, 176.7701, 0.0, 147.6463, 52.7692], [108.3908, 0.0, 166.9242, 23.4516, 140.1837, 136.313, 53.3529, 0.0, 53.3143, 0.0], [66.3936, 69.4697, 24.0968, 0.0, 111.2748, 0.0, 0.0, 23.8286, 0.0, 56.0581, 72.6907, 34.9123, 21.1429, 0.0, 90.3409, 97.046, 0.0, 161.0, 27.8951], [27.3417, 0.0, 48.0323, 14.4082, 22.3053, 139.2353, 0.0, 17.3143, 84.2326, 108.3196, 14.6667, 69.9068, 0.0, 127.9394, 146.8736, 0.0, 172.9512, 123.7552], [29.7429, 47.4762, 48.7093, 176.6082, 247.8106, 357.5862, 245.6829, 260.3846], [1.1695, 0.0, 0.0, 17.4032, 8.7755, 0.0, 0.0, 0.0, 0.0, 0.0, 20.5465, 151.2887, 170.9298, 159.4099, 0.0, 46.4167, 302.931, 171.3415, 452.0769], [68.409, 135.8727, 37.5303, 120.5645, 0.102, 54.1908, 25.6275, 15.9024, 15.7143, 0.1071, 14.0814, 91.2887, 122.2456, 30.2236, 3.13, 118.5, 227.1724, 0.0, 241.4878, 107.4615], [203.514, 364.8364, 79.7273, 301.9355, 93.2041, 251.9804, 109.3171, 11.7857, 126.0833], [92.0364, 134.9242, 3.9677, 20.9388, 0.0, 26.8235, 0.0, 46.9286, 7.1667, 69.5, 161.9175, 176.193, 54.8261, 0.0, 401.3788, 236.6782, 0.0, 600.0488, 293.9091], [109.8488, 408.5979, 272.6491, 125.8137, 0.0, 382.2879, 384.4138, 0.0, 689.4146, 83.2308], [229.43, 230.4727, 173.6818, 148.3548, 160.0204, 62.1527, 418.7843, 4.0244, 0.0, 36.0476], [254.2843, 195.1273, 1.8939, 276.4516, 112.8776, 180.1221, 59.0784, 0.0, 77.5571, 0.0], [0.0, 478.9485, 56.1579, 141.4783, 78.0, 174.2955, 396.5402, 0.0, 669.5488, 551.2168], [145.091, 57.0364, 75.4545, 35.5, 0.0, 65.3664, 43.7451, 0.0, 58.4571, 67.9286, 64.3837, 239.1959, 72.5263, 203.3168, 4.74, 76.3333, 399.7126, 0.0, 366.8049], [148.6919, 60.8909, 116.6212, 113.9677, 28.5102, 92.3511, 33.8627, 0.0, 73.9, 0.0, 48.093, 106.4536, 106.4912, 161.5963, 29.18, 146.2955, 182.6667, 74.0278, 222.939, 191.2448], [252.3908, 110.0727, 291.2424, 272.9839, 277.3265, 36.3053, 0.0, 6.4634, 361.807, 204.5466, 37.52], [510.7113, 111.5965, 192.4472, 68.13, 445.6288, 605.1264, 0.0, 559.5244, 544.6853], [155.2791, 165.7216, 191.6667, 242.3602, 0.21, 809.3636, 861.9195, 0.0, 15.1463, 517.5874], [126.3488, 455.6598, 289.3684, 458.7143, 0.0, 754.053, 598.2759, 284.9167, 384.6585, 9.6364], [106.4524, 168.0, 0.0, 163.6935, 0.0, 54.5191, 195.8824, 25.8049, 172.3571, 165.8605, 351.0412, 101.6316, 248.7329, 78.94, 165.6667, 410.4943, 72.9722, 440.0366, 164.6014], [80.1331, 0.0, 305.1818, 41.5968, 0.0, 151.2519, 216.098, 355.3171, 101.5286, 175.1786, 60.1628, 388.134, 194.5263, 93.6398, 28.59, 535.1364, 565.7011, 0.0, 346.1341, 110.2937], [0.0, 860.803, 185.0484, 221.9184, 161.1298, 274.1765, 46.7073, 228.6857, 3.1395, 459.0309, 270.795, 0.0, 341.9848, 738.8736, 0.0, 492.0366, 280.4476], [128.8364, 195.5606, 579.6613, 89.9184, 441.687, 18.1961, 0.0, 0.0, 70.4881, 0.0, 363.3608, 76.4561, 228.6894, 31.93, 148.6061, 1117.954, 157.2778, 879.6951, 531.5035], [315.7591, 292.902, 0.0, 44.2571, 54.9286, 96.6047, 137.32, 90.8333, 190.4483, 0.0, 830.4024, 788.5804], [237.8039, 37.3636, 367.5303, 26.8548, 381.0816, 336.5267, 40.5098, 75.7561, 151.0571, 11.5357, 93.8372, 82.4227, 109.9123, 86.9565, 39.4, 128.5152, 568.8966, 0.0, 779.4146, 280.1888], [200.5966, 4.1273, 128.697, 0.0, 27.102, 471.6183, 0.0, 0.0, 166.6571, 38.807, 197.1491, 67.46, 599.6061, 441.4598, 0.0, 780.622, 503.965], [101.3039, 256.4182, 197.5758, 180.871, 206.3061, 134.7786, 140.4314, 92.9756, 126.8857, 0.0, 60.4535, 309.4021, 288.386, 475.4286, 56.79, 339.697, 1156.931, 0.0, 529.0854, 559.7832], [147.0581, 621.9485, 299.9298, 581.5031, 8.17, 331.1212, 1528.6207, 0.0, 1602.6463, 763.7483], [583.1387, 238.1455, 317.1364, 511.0645, 313.8776, 322.6947, 335.2549, 0.0, 109.7714, 21.5119, 22.2907, 774.4124, 601.0351, 313.7081, 51.43, 665.7273, 744.7816, 0.0, 1689.7073, 501.7622], [536.5406, 517.0, 478.1364, 210.371, 157.5102, 173.4809, 264.4902, 22.3415, 155.0857, 116.75, 19.814, 684.4639, 371.9474, 270.4907, 66.91, 811.7955, 1216.5402, 0.0, 1836.8049, 542.8671]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

