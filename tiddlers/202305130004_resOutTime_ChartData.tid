created: 20230513000456000
creator: Drevarr
modified: 20230705163529827
modifier: drevarr
tags: ChartData
title: 202305130004_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Drevarr Moonwillow", "Lucas Ryn", "Venomina The Techie", "Miphest\u00f6", "Xanvias Einzbern", "Cerys Fireblade", "Sub Train", "Zaidy Sagemist", "Rina Of Theros", "Tika Fiery", "High Sorcer Baradun", "Greybeard Gideon", "Eibh\u00ebar", "No Reserv\u00e9", "Panther B Me", "Bella Sassy", "Solus Sanctus", "Koralia Danai", "Domitia Gravestorm", "Aronorf Xideliesi", "Spreadflamesoflight", "Ryvalia Fazebringer", "Mac Aaroni", "Tegan Parker", "Newtype Khan", "Hexmorn", "Sumatra Satyricon"];
const professions = ["Scourge", "Scrapper", "Firebrand", "Scrapper", "Tempest", "Berserker", "Berserker", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Tempest", "Dragonhunter", "Chronomancer", "Vindicator", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Willbender", "Chronomancer", "Tempest", "Tempest", "Spellbreaker", "Harbinger", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 448.84, 0.0, 0.0, 0.0, 0.0, 345.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1346.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 287.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 402.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 53.58, 0.0, 0.0], [0.0, 0.0, 820.75, 0.0, 0.0, 0.0, 0.0, 0.0, 230.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 820.75, 1795.36, 0.0, 0.0, 0.0, 0.0, 57.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1040.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 984.9, 1795.36, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 134.26, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 656.6, 3590.72, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 57.5, 0.0, 0.0, 268.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 160.58], [0.0, 0.0, 656.6, 1346.52, 0.0, 260.19, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 134.26, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 22.94], [0.0, 0.0, 820.75, 2244.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 201.39, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 4937.24, 0.0, 260.19, 0.0, 0.0, 0.0], [939.82], [0.0, 80.64, 328.3, 2244.2, 0.0, 260.19, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 268.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5386.08, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 201.39, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 984.9, 1346.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 57.5, 0.0, 0.0, 134.26, 0.0, 0.0, 0.0, 0.0, 0.0, 267.9, 0.0, 0.0, 0.0], [0.0, 0.0, 820.75, 4488.4, 0.0, 0.0, 0.0, 0.0, 288.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 4488.4, 0.0, 0.0, 0.0, 0.0, 57.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 57.5, 0.0, 0.0, 537.04, 0.0, 0.0, 47.04, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 164.15, 6283.76, 60.63, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 335.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 2298.1, 2244.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 335.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 984.9, 4039.56, 0.0, 0.0, 0.0, 0.0, 57.6, 0.0, 0.0, 0.0, 517.5, 0.0, 0.0, 134.26, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 2693.04, 0.0, 260.19, 0.0, 0.0, 1094.4, 0.0], [0.0, 0.0, 820.75, 2693.04, 0.0, 433.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 460.0, 0.0, 0.0, 335.65, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 241.92, 0.0, 0.0, 0.0, 346.92, 0.0, 0.0, 57.6, 0.0, 0.0, 0.0, 120.32, 0.0, 0.0, 287.5, 0.0, 0.0, 1006.95, 0.0, 0.0, 0.0, 47.04, 0.0, 321.48, 0.0, 0.0], [0.0, 0.0, 1477.35, 5834.92, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 287.5, 0.0, 0.0, 67.13, 0.0, 0.0, 0.0, 0.0, 160.74, 0.0, 0.0, 229.4], [0.0, 0.0, 1313.2, 8079.12, 0.0, 520.38, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 402.5, 0.0, 0.0, 134.26, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 241.92, 0.0, 1678.25, 0.0, 0.0, 0.0, 0.0, 1500.24, 0.0, 0.0], [0.0, 0.0, 1641.5, 9425.64, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 60.16, 0.0, 862.5, 0.0, 0.0, 1141.21, 0.0, 0.0, 0.0, 0.0, 0.0, 107.16, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

