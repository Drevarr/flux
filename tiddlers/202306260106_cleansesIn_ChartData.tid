created: 20230626010646000
creator: Drevarr
modified: 20230705163537116
modifier: drevarr
tags: ChartData
title: 202306260106_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Liyo Morgaine", "Pale Pam", "Lady The Mirage", "Charr Surethang", "Pixzil", "Aribel Darkbringer", "Necrotic Windrunner", "Microsakis", "Phageir", "Yngvar The Burdened", "Iskalla", "Rednuii", "Gamora Titus", "Elonith Requiem", "Xanvias", "Drevarr Moonwillow", "Gestern Yesteryear"];
const professions = ["Vindicator", "Druid", "Virtuoso", "Berserker", "Dragonhunter", "Reaper", "Scourge", "Berserker", "Catalyst", "Scourge", "Firebrand", "Tempest", "Firebrand", "Scourge", "Reaper", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0714, 0.3276, 0.0109, 0.4225, 0.6042, 0.175, 0.6154], [0.2577, 0.0, 0.6034, 0.0435, 0.2817, 0.2292, 0.1875, 0.4423, 0.1111], [0.1313, 0.2692, 0.1556, 0.0444, 0.1923, 0.0469, 0.0909, 0.1385, 0.0, 0.1774, 0.04, 0.0698, 0.0444, 0.1034, 0.1579, 0.2453, 0.1786, 0.2222, 0.2157, 0.025, 0.0941, 0.0, 0.1122, 0.087, 0.0357, 0.025, 0.0, 0.0946, 0.0, 0.3906, 0.1705], [0.0, 0.3016, 0.0698, 0.0353, 0.4948, 0.0, 0.4655, 0.0, 0.4437, 0.4583, 0.1625, 0.4615, 0.0889, 0.1333, 0.0385, 0.2031], [0.0, 0.431, 0.0435, 0.3592, 0.2708, 0.1375, 0.1923, 0.0222, 0.1111, 0.1154, 0.125, 0.1091, 0.0952, 0.0, 0.1774, 0.32, 0.186, 0.2222, 0.0, 0.4474, 0.2105, 0.0, 0.0, 0.0686, 0.025, 0.1647, 0.0482, 0.2857], [0.0263, 0.3175, 0.1163, 0.0588, 0.433, 0.0357, 0.4828, 0.1739, 0.662, 0.3958, 0.2719], [0.1753, 0.0, 0.1897, 0.0, 0.1761, 0.25, 0.1156, 0.2115, 0.1778, 0.1111, 0.1538, 0.0469, 0.1455, 0.1861, 0.0256, 0.1613, 0.08, 0.186, 0.1333, 0.0, 0.0, 0.1132, 0.0, 0.0179, 0.1605, 0.0882, 0.075, 0.1412, 0.0, 0.1837, 0.1594, 0.1905, 0.125, 0.1622, 0.2222, 0.2031, 0.0568], [0.0, 0.0, 0.0118, 0.3093, 0.0, 0.2759, 0.0, 0.2606, 0.5417, 0.1469, 0.3654, 0.1111, 0.1333, 0.0769, 0.0469, 0.1273, 0.1299, 0.0256, 0.1452, 0.08, 0.1395, 0.0889, 0.069, 0.1842, 0.0755, 0.0, 0.1728, 0.049, 0.1412, 0.0482, 0.0918, 0.087, 0.2262, 0.275, 0.3108, 0.3333, 0.3438, 0.1705], [0.0889, 0.1154, 0.0469, 0.0909, 0.2727, 0.0513, 0.0, 0.2, 0.0233, 0.1556, 0.3947, 0.4717, 0.4107, 0.4568, 0.2353, 0.025, 0.3176, 0.0, 0.1429, 0.0, 0.5833, 0.4, 0.0, 0.5541, 0.7407, 0.5312, 0.3636], [0.3077, 0.0222, 0.1111, 0.1538, 0.2344, 0.0364, 0.2338, 0.0513, 0.3065, 0.38, 0.0465, 0.5263, 0.3774, 0.0, 0.3036, 0.5926, 0.2941, 0.15, 0.4235, 0.0241, 0.2959, 0.2029, 0.8214, 0.05, 0.0, 0.5135, 0.4074, 0.4375, 0.2955], [0.4639, 0.0, 0.431, 0.0761, 0.2254, 0.2917, 0.1688, 0.5577, 0.2, 0.2222, 0.1154, 0.125, 0.1273, 0.2511, 0.0, 0.2097, 0.0, 0.2558, 0.2667, 0.3103, 0.3421, 0.1509, 0.0, 0.1607, 0.2716, 0.0784, 0.025, 0.3059, 0.0241, 0.1837, 0.1884, 0.3571, 0.175, 0.0, 0.3108, 0.4074, 0.2969, 0.25], [0.3608, 0.0714, 0.4828, 0.163, 0.4085, 0.275, 0.4423, 0.2889, 0.2444, 0.1154, 0.1719, 0.1455, 0.1948, 0.0256, 0.4032, 0.38, 0.093, 0.4667, 0.3103, 0.5526, 0.2453, 0.1429, 0.2593, 0.3039, 0.25, 0.3294, 0.0, 0.1531, 0.1159, 0.3929, 0.225, 0.0, 0.2973, 0.1111, 0.1875, 0.2955], [0.6186, 0.0357, 0.6552, 0.0, 0.5493, 0.8125, 0.2906, 0.4808, 0.3333, 0.2, 0.0385, 0.1875, 0.1636, 0.2597, 0.1026, 0.4355, 0.26, 0.1395, 0.5111, 0.3103, 0.3158, 0.283, 0.0, 0.4691, 0.1667, 0.2, 0.3647, 0.0723, 0.2143, 0.058, 0.5595], [0.0526, 0.381, 0.1395, 0.0706, 0.3505, 0.0, 0.5345, 0.0217, 0.4155, 0.5208, 0.2719, 0.3077, 0.3778, 0.4444, 0.1154, 0.2812, 0.2364, 0.1515, 0.1026, 0.1935, 0.32, 0.186, 0.3778, 0.1379, 0.2632, 0.2453, 0.0, 0.1786, 0.1235, 0.3824, 0.2, 0.2235, 0.0241, 0.1939, 0.1304, 0.4881, 0.275, 0.0, 0.2703, 0.2593, 0.2656, 0.3977], [0.2784, 0.0, 0.6034, 0.1196, 0.4718, 0.4167, 0.2344, 0.6154, 0.1333, 0.2444, 0.1923, 0.1875, 0.1091, 0.2078, 0.0513, 0.3387, 0.42, 0.2326, 0.4444, 0.3103, 0.7632, 0.2453, 0.0, 0.0893, 0.3457, 0.2549, 0.1, 0.2941, 0.0241, 0.1837, 0.2174, 0.6667, 0.2, 0.0, 0.4189, 0.5185, 0.2812, 0.2159], [0.0, 0.1111, 0.1163, 0.1647, 0.3608, 0.0714, 0.431, 0.2065, 0.4296, 0.6875, 0.4094, 0.4423, 0.1778, 0.2222, 0.1538, 0.1562, 0.1636, 0.29, 0.0769, 0.4355, 0.62, 0.186, 0.4, 0.2069, 0.5526, 0.2453, 0.0, 0.3393, 0.284, 0.3235, 0.175, 0.4118, 0.0, 0.1327, 0.1594, 0.4286, 0.2, 0.0, 0.473, 0.4074, 0.4219], [0.0, 0.1111, 0.1163, 0.0235, 0.5876, 0.0, 0.3621, 0.1087, 0.7042, 0.6667, 0.2594, 0.6154, 0.1778, 0.1778, 0.0769, 0.3125, 0.1455, 0.2554, 0.0769, 0.2581, 0.44, 0.3256, 0.4889, 0.4138, 0.3947, 0.4151, 0.5357, 0.3333, 0.2549, 0.25, 0.4, 0.0361, 0.1735, 0.1159, 0.5476, 0.2, 0.0, 0.4865, 0.4815, 0.3125, 0.2386]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

