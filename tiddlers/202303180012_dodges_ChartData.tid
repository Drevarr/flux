created: 20230318001239000
creator: Drevarr
modified: 20230705163522333
modifier: drevarr
tags: ChartData
title: 202303180012_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Jupi Jupi Jupi", "Zaylen Harker", "Venomina The Siren", "Nazhul Naxxremis", "Rina Of Theros", "Fribble Bibble", "Sumatra Satyricon", "Koralia Danai", "Oo Dads Mad", "Sygaldry Verdandi", "Hauzzy", "Drevarr Moonwillow", "F\u00f4xy Lat\u00eena", "Morton Saltbringer", "Air One Com", "Khailerian", "Seren Nightroad", "Whose Guardian", "Arcanophage Farra", "Black Raspberry Pie", "Kmpek", "Lucky Leipreach\u00e1n", "Tegan Parker", "R\u00fana Bierdna", "Grasszanine", "Xanvias Tseli", "Permanent Dawn", "Lord Erin The Wise", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Demon Sekhmet", "Mac Chiato", "Primal Clone", "Viral Marketing", "Shaca Booey", "Mike The Archmagus", "Eibh\u00ebar", "Smol Gluvs", "Newtype Khan", "Xyntharos", "\u00c1rkantor", "Solus Dominus"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Tempest", "Scourge", "Scourge", "Scrapper", "Soulbeast", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Scrapper", "Scourge", "Chronomancer", "Firebrand", "Herald", "Scourge", "Firebrand", "Spellbreaker", "Chronomancer", "Vindicator", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker", "Berserker", "Weaver", "Weaver", "Firebrand", "Chronomancer", "Berserker", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Weaver", "Chronomancer", "Scourge", "Spellbreaker", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 2, 17, 0, 1, 2, 1, 2, 14, 0, 0, 0], [3, 0, 1, 15, 1, 3, 1, 1, 0, 0, 0, 16, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2], [6, 0, 2, 11, 0, 0, 2, 0, 1, 1, 0, 8, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 9], [4, 4, 4, 1, 1, 2, 1, 0, 13, 1, 0, 0, 3, 2, 0, 1, 0, 2, 6], [14, 3, 17, 0, 2, 1, 4, 1, 1, 2, 1], [9, 0, 3, 14, 0, 2, 0, 1, 0, 0, 0, 0, 11, 2, 0, 0, 0, 2, 0, 1, 0, 0, 0, 5], [5, 0, 3, 9, 0, 1, 1, 0, 1, 0, 2, 18, 0, 0, 3, 0, 2, 1, 1, 0, 0, 0, 4], [14, 3, 3, 0, 0, 1, 0, 2, 0, 1, 0, 8, 0, 0, 0, 2, 1, 0, 0, 1, 16], [4, 0, 0, 9, 0, 0, 0, 0, 0, 3, 0, 0, 20, 0, 0, 0, 0, 4, 0, 0, 0, 0, 12], [9, 3, 8, 0, 1, 1, 0, 0, 0, 0, 1, 29, 0, 0, 0, 0, 1], [5, 0, 2, 4, 1, 0, 0, 1, 0, 1, 0, 16, 4, 1, 0, 0, 2, 1, 0, 0, 3, 14], [3, 0, 3, 11, 1, 0, 0, 1, 3, 1, 1, 28, 2, 0, 0, 0, 2], [3, 0, 5, 11, 1, 0, 0, 1, 2, 1, 4, 0, 21, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 4], [7, 0, 3, 15, 0, 0, 1, 0, 0, 2, 0, 0, 12, 0, 0, 0, 0, 3, 1, 0, 0, 4, 10], [6, 0, 1, 9, 1, 1, 3, 0, 1, 2, 21, 1, 0, 0, 3, 1, 3, 0, 0, 0, 6], [11, 2, 2, 2, 0, 4, 0, 2, 3, 0, 13, 0, 1, 0, 2, 3, 0, 1, 0, 6, 12], [7, 1, 2, 12, 1, 3, 0, 2, 6, 2, 4, 0, 7, 3, 1, 0, 4, 2, 0, 0, 0, 8], [9, 0, 6, 10, 1, 0, 1, 1, 1, 0, 0, 0, 10, 4, 0, 0, 0, 2, 0, 0, 2, 4, 17], [4, 0, 0, 11, 2, 3, 1, 3, 1, 2, 0, 2, 24, 0, 0, 0, 0, 1, 1, 2, 1, 0, 12], [5, 1, 0, 1, 2, 34, 4, 0, 1, 1, 3, 1, 1, 0, 1, 16], [6, 0, 3, 10, 2, 1, 0, 2, 1, 0, 0, 2, 20, 0, 0, 0, 1, 2, 0, 0, 0, 1, 22], [3, 0, 7, 7, 0, 0, 0, 6, 2, 2, 0, 17, 2, 2, 2, 6, 1, 3, 0, 0, 2, 11], [4, 0, 7, 9, 3, 2, 1, 3, 2, 0, 2, 14, 3, 0, 3, 2, 4, 0, 1, 5, 0, 10], [0, 4, 27, 3, 1, 3, 2, 6, 2, 2, 0, 1, 24], [5, 0, 4, 17, 2, 7, 3, 0, 0, 0, 0, 23, 0, 0, 0, 0, 1, 1, 0, 2, 0, 11], [8, 0, 5, 19, 5, 1, 0, 2, 0, 0, 2, 2, 18, 0, 0, 0, 2, 4, 0, 0, 0, 0, 0, 15], [9, 0, 4, 15, 0, 0, 3, 3, 2, 3, 19, 1, 0, 4, 1, 4, 1, 0, 2, 2, 11], [7, 1, 4, 14, 3, 0, 0, 0, 0, 1, 1, 35, 2, 2, 1, 1, 2, 0, 0, 0, 4, 13], [12, 0, 8, 26, 4, 0, 0, 1, 2, 2, 2, 34, 3, 0, 1, 1], [9, 0, 2, 23, 1, 3, 0, 1, 3, 0, 2, 22, 8, 2, 0, 1, 2, 2, 2, 0, 2, 2, 15], [14, 0, 8, 17, 0, 2, 0, 3, 1, 2, 2, 0, 17, 1, 0, 3, 2, 6, 4, 1, 2, 1, 4, 14], [13, 0, 6, 14, 2, 2, 1, 0, 0, 4, 1, 31, 3, 0, 1, 0, 5, 1, 2, 0, 1, 21], [19, 0, 7, 4, 2, 2, 1, 0, 0, 2, 37, 0, 0, 2, 2, 0, 2, 0, 8, 24], [9, 1, 3, 28, 0, 4, 0, 2, 1, 7, 4, 2, 33, 5, 2, 0, 0, 3, 0, 1, 0, 3, 13], [14, 0, 7, 25, 1, 1, 2, 3, 1, 0, 3, 3, 37, 1, 0, 1, 0, 4, 1, 2, 0, 2, 21], [0, 7, 25, 1, 1, 1, 2, 1, 1, 3, 40, 1, 0, 1, 3, 9, 3, 0, 0, 2, 5, 28], [12, 0, 17, 17, 2, 3, 2, 4, 0, 3, 2, 0, 38, 2, 2, 3, 2, 5, 1, 2, 0, 5, 35], [21, 0, 15, 32, 2, 4, 3, 4, 0, 5, 3, 0, 32, 2, 0, 2, 0, 6, 2, 1, 1, 2, 5, 18], [16, 0, 10, 34, 3, 0, 2, 3, 1, 3, 4, 1, 40, 4, 0, 3, 1, 7, 4, 3, 1, 0, 3, 33], [15, 0, 10, 28, 2, 4, 3, 3, 2, 1, 2, 0, 43, 5, 1, 2, 0, 8, 5, 3, 3, 0, 6, 31], [29, 4, 22, 39, 2, 4, 5, 10, 6, 4, 6, 2, 58, 9, 5, 6, 7, 11, 5, 6, 3, 3, 7, 54], [32, 4, 28, 71, 5, 7, 3, 6, 5, 6, 9, 4, 93, 4, 2, 4, 5, 16, 6, 4, 65], [24, 1, 39, 78, 5, 7, 5, 8, 4, 5, 9, 4, 98, 5, 2, 16, 8, 14, 9, 9, 5, 12, 61]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

