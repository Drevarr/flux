created: 20230703220627000
creator: Drevarr
modified: 20230705163541269
modifier: drevarr
tags: ChartData
title: 202307032206_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Newtype Khan", "Grasszanine", "Rahani Sunray", "Morton Saltbringer", "Miphest\u00f6", "\u00c4rt\u00ebm\u00edza", "Primal Clone", "Eibh\u00ebar", "Vopiscus Zergherdus", "Fribble Bibble", "Mike The Archmagus", "Tootsie Pop Rocks", "Drumina", "Zadie Miststep", "Tegan Parker", "Drevarr Moonwillow", "Artakama Nahid", "Arriasa"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Tempest", "Scrapper", "Druid", "Tempest", "Tempest", "Scrapper", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1036, 0.0286, 0.0, 0.0, 0.0, 0.0303, 0.0368, 0.0095, 0.0076, 0.0, 0.4459, 0.3455, 0.0233, 0.1111, 0.4167, 0.3036, 0.2078, 0.2277, 0.1053, 0.2593, 0.1786, 0.1928, 0.5581, 0.2812, 0.2047], [0.0052, 0.0, 0.0, 0.0238, 0.0, 0.0303, 0.0431, 0.0095, 0.0153, 0.0, 0.0, 0.2973, 0.2364, 0.2791, 0.3704, 0.1667, 0.1607, 0.2338, 0.1287, 0.2807, 0.1389, 0.4524, 0.3012, 0.3721, 0.375, 0.3567], [0.1399, 0.0286, 0.0, 0.0159, 0.0, 0.0, 0.052, 0.0, 0.0, 0.0, 0.1622, 0.4, 0.0, 0.0, 0.3958, 0.3214, 0.2987, 0.0, 0.2982, 0.1759, 0.1548, 0.6506, 0.4767, 0.5469, 0.4094], [0.0645, 0.4459, 0.0556, 0.0833, 0.3036, 0.5065, 0.1089, 0.3333, 0.3889, 0.7976, 0.7108, 0.2209, 0.3125, 0.538], [0.0311, 0.0, 0.0, 0.0, 0.0, 0.0355, 0.0, 0.0, 0.6, 0.3721, 0.7407, 0.0357, 0.1688, 0.2376, 0.2281, 0.2222, 0.5357, 0.6627, 0.5814, 0.125, 0.5731], [0.2857, 0.0891, 0.3333, 0.8796, 0.8333, 0.6265, 0.6395, 0.4688, 0.7193], [0.5078, 0.1143, 0.0, 0.0, 0.0, 0.0, 0.2281, 0.0, 0.0153, 0.0, 0.0, 1.7568, 2.2321], [0.0, 0.0, 0.0079, 0.0, 0.0456, 0.0, 0.0, 0.0, 0.0, 0.3784, 0.5273, 0.4651, 0.4444, 0.0, 0.4643, 0.1039, 0.1386, 0.4386, 0.5833, 0.8095, 0.4578, 0.3605, 0.0, 0.8012], [0.0, 0.0, 0.0278, 0.0159, 0.0, 0.0, 0.076, 0.0, 0.0, 0.0, 0.0, 0.473, 0.7273, 0.8605, 0.6296, 0.0833, 0.2321, 0.7143, 0.0396, 0.8947, 0.5833, 0.7143, 0.0843, 0.3953, 0.3125, 0.2105], [0.0571, 0.0417, 0.1984, 0.0847, 0.6629, 0.0476, 1.7636, 1.6744, 0.9815], [0.7098, 0.1714, 0.1111, 0.2143, 0.2373, 0.1212, 0.5463, 0.1333, 0.4962, 0.043, 0.0233, 0.4459, 0.7818, 1.3256, 1.1667], [1.7083, 0.9643, 1.2857, 0.8317, 1.7895, 1.7222, 2.1429, 1.8193, 1.7674], [0.4197, 0.0, 0.0, 0.0, 0.1255, 0.0, 0.084, 0.0, 0.0, 0.7568, 1.4727, 1.186, 0.7778, 0.875, 0.8214, 0.6234, 0.4455, 0.8246, 0.2593, 1.0119, 1.0964, 0.3023, 0.6875, 1.0585], [0.5699, 0.1111, 0.0, 0.1017, 0.0, 0.2066, 0.1429, 0.0534, 0.0215, 0.0, 1.1216, 0.0, 0.7674, 0.1111, 0.375, 1.1429, 0.3117, 0.1386, 1.0, 0.787, 1.6071, 0.4096, 1.3953, 1.4062, 1.1637], [1.2917, 1.4464, 0.1818, 0.802, 1.5614, 1.1944, 2.1905, 2.1687, 2.1744, 1.5938, 1.9825], [0.9326, 0.2571, 0.0833, 0.1587, 0.0, 0.493, 0.1524, 0.4275, 0.043, 0.0465, 1.4459, 1.6182, 1.3488, 1.2963, 1.1458, 1.4107, 0.2078, 0.6634, 1.0, 0.9815, 1.75, 1.241, 1.7442, 1.4531, 1.5439], [1.1554, 0.6857, 0.125, 0.4286, 0.0169, 0.0, 0.9404, 0.1714, 0.6489, 0.0108, 0.0, 1.2432, 1.6364, 1.6279, 1.6481, 1.7708, 0.3571, 0.8831, 1.0198, 0.9649, 1.5185, 1.7857, 1.8916, 1.907, 1.5781, 2.0585], [0.6477, 0.1714, 0.1111, 0.1111, 1.038, 0.1905, 0.6412, 0.1075, 0.0465, 1.6622, 1.9818, 1.4651, 1.9259, 1.5, 1.3036, 1.4545, 1.0495, 0.6842, 1.3889, 1.4881, 1.8072, 2.0698, 2.125, 2.0234], [1.1244, 0.3714, 0.0833, 0.2381, 0.1017, 0.0, 0.8479, 0.2286, 0.084, 0.2043, 0.093, 1.6757, 2.1636, 1.093, 0.2407, 1.5, 1.5179, 1.6494, 0.4158, 2.7719, 2.2407, 1.5, 2.6867, 2.2907, 2.2656, 1.655]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

