created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryzen Grimsaw", "Glorious Gluvs", "Oo Dads Mad", "Tribal S", "Zaedy Zae", "N\u00f6sh\u00e0k", "Jimbo The Pleb", "Ill Fix Your Honda", "Belvyn Brightblade", "Malfax Jinn", "Grasszanine", "Aira Draugr", "Xanvias Einzbern", "Arcanophage Farra", "Mistwalker Cael", "No Reserv\u00e9", "Darks Na", "Ryvalia Fazebringer", "Leafzel", "Rafaellagabriela", "Sub Train", "Crusader Siolith", "Solus Luxes", "Bella Sassy", "Koralia Danai"];
const professions = ["Vindicator", "Berserker", "Berserker", "Druid", "Druid", "Mesmer", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Herald", "Berserker", "Spellbreaker", "Vindicator", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4032, 0.0441, 7.4328, 0.0, 1.6685, 3.33, 0.0, 0.0], [1.656, 0.0, 0.0, 0.0, 0.0, 0.2834, 0.9271, 0.0, 1.0849, 1.0454, 0.0, 2.1168, 2.2042, 0.0, 1.0613, 0.0, 0.6831, 0.0637, 1.1827, 0.0, 0.0, 0.6178, 0.0, 0.0, 0.0, 0.0], [0.0, 2.484, 1.1045, 0.0, 0.0, 2.3616, 0.9274, 0.8193, 0.0, 2.0492, 2.0275, 0.0, 2.2226], [0.2558, 2.208, 2.9822, 0.7938, 0.0, 1.4957, 0.8501, 0.4959, 0.0, 0.6027, 0.6653, 0.688, 1.3382, 0.4939, 0.1955, 0.2256, 0.5223, 0.414, 0.5107, 0.0735, 0.0, 0.1123, 0.2781, 0.3996, 0.2829, 0.0644], [0.0, 4.416, 3.8658, 0.755, 0.7388, 0.6298, 0.0, 0.6899, 0.0, 0.7232, 1.2989, 0.0, 0.8467, 0.7085, 0.4939, 0.5865, 0.6317, 0.4219, 0.0, 0.5107, 0.0, 0.0, 0.5616, 0.0, 0.0, 0.4904, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.2693, 3.4633, 2.5718, 1.5268, 0.8918, 2.6074, 0.7938, 1.368, 0.0, 0.139, 1.5318, 1.6785, 0.3542], [4.692, 3.7553, 0.755, 1.0467, 0.9446, 0.6698, 1.962, 1.2662, 0.4822, 3.1997, 0.0, 1.0584, 0.4723, 0.2822, 0.3352, 0.7219, 1.567, 0.7644, 0.0, 0.2499, 1.0488, 0.5803, 1.0776, 0.0, 0.7921, 0.0], [2.346, 4.9703, 0.9486, 0.0, 1.8499, 0.9789, 0.4312, 0.9869, 1.8483, 0.7286, 1.3054, 1.958, 1.2595, 1.0114, 0.3631, 0.4286, 0.6429, 0.0, 1.4515, 1.5729, 1.0944, 0.0936, 1.0428, 0.9324, 0.132, 0.322], [0.1968, 3.174, 0.1105, 0.0, 0.0, 2.9914, 2.7821, 0.9918, 3.6123, 5.3841, 2.3126, 7.5146], [4.1736, 3.2747, 4.0131, 2.473, 1.6023, 4.9704, 0.1872, 7.091, 2.0646, 0.8487, 0.0], [0.8266, 5.52, 1.8777, 0.0, 1.9087, 3.0307, 1.5714, 1.2936, 0.0, 1.2054, 1.5206, 0.0, 2.5931, 4.2509, 0.0, 1.1731, 0.0, 1.4063, 0.6051, 1.5859, 0.0, 0.0, 1.1045, 0.6257, 0.1332, 0.7921, 0.0], [1.0627, 14.904, 6.5165, 2.9814, 2.3397, 3.9754, 0.0, 0.0, 0.0, 1.4063, 1.6474, 0.0, 2.646], [1.0627, 5.934, 4.6389, 1.0842, 2.2165, 1.0627, 1.0819, 2.2207, 1.0613, 2.1295, 1.0454, 0.5292, 1.5876, 4.6445, 0.7056, 0.8379, 1.8725, 1.4264, 1.0511, 1.4246, 0.7644, 1.2312, 0.0, 1.1471, 0.0], [0.0, 1.932, 2.209, 2.5168, 0.0, 4.3296, 2.6018, 0.9055, 0.931, 2.2903, 1.1088, 0.0, 0.0, 1.8106, 2.8694, 3.1002, 1.489, 1.125, 2.2613, 2.9299, 2.9694, 2.1888, 0.0, 0.0, 0.0, 0.3206, 2.1413], [0.0, 8.694, 1.6567, 2.8846, 0.0, 6.8486, 0.9274, 2.4794, 2.3275, 4.9823, 5.2272, 0.0, 3.9161, 2.1254, 0.2587, 1.592, 0.3384, 0.9241, 0.5414, 2.0698, 0.3528, 0.5016, 1.0483, 0.6952, 0.6327, 0.1886], [19.044, 18.887, 0.0, 0.2463, 6.9274, 1.3395, 0.9702, 1.0055, 3.4153, 3.263, 3.8102, 2.1254, 1.5288, 0.4189, 1.9627, 1.8282, 0.2866, 2.8224, 0.1029, 4.1496, 0.8611], [0.8836, 2.2651, 2.6475, 7.7539, 5.9506, 4.0533, 4.9902, 6.6297, 1.8691, 0.3528, 8.3084, 10.3123, 3.6221, 6.4518, 4.715, 2.2501, 2.6754, 7.0694, 0.9996], [4.6838, 22.908, 3.6448, 2.633, 3.6326, 3.936, 2.035, 2.35, 1.713, 5.7056, 3.263, 2.4696, 5.1862, 5.5104, 4.069, 0.0, 2.2786, 2.1697, 5.1279, 1.129, 0.6027, 3.42, 0.8611, 4.6231, 2.9637, 2.7347, 1.3846], [22.494, 22.9736, 5.9107, 8.9347, 6.981, 5.0235, 1.4337, 3.3751, 8.5853, 2.2932, 1.3759, 9.5251, 1.9286, 5.7536, 5.4595, 2.9331, 0.2866, 1.6128, 2.6901, 0.9576, 2.7331, 2.2942, 1.9647, 2.5461, 0.4669], [0.4926, 8.0688, 8.9645, 7.1579, 3.2771, 11.0495, 8.3002, 5.2391, 12.2245, 14.8781, 6.3269, 4.8598, 4.6925, 4.3796, 4.0131, 7.4995, 1.0437, 3.648, 4.7736, 5.1445, 2.7306, 3.9606, 1.7871], [4.9594, 14.352, 1.9881, 3.0202, 0.0, 10.9027, 6.6203, 6.2955, 4.0964, 7.9155, 5.7341, 2.1874, 9.5256, 16.3738, 6.3504, 8.8817, 5.1211, 5.1631, 3.9494, 7.4995, 2.9694, 2.4624, 3.0701, 1.8075, 2.0313, 4.9413, 1.2558], [0.0, 27.876, 17.3407, 3.7946, 2.3397, 9.7219, 3.6837, 4.1826, 3.873, 9.6432, 3.1363, 3.2458, 6.1387, 9.2102, 5.1509, 5.4184, 3.2261, 2.7523, 4.3316, 5.9136, 3.4839, 3.42, 2.939, 5.4573, 3.7296, 2.2821, 1.1592], [2.9126, 21.528, 10.1614, 3.6978, 6.8343, 10.273, 8.1144, 7.8263, 2.9792, 10.045, 12.4819, 0.2822, 10.7428, 16.2163, 3.7397, 5.1391, 5.9558, 2.9733, 4.6819, 4.0858, 1.9992, 2.0064, 2.3774, 2.1204, 2.0979, 3.3194, 1.2719], [3.0307, 27.876, 18.9974, 5.4014, 10.4669, 11.6112, 1.2622, 4.3982, 2.8861, 10.4468, 11.3098, 1.1995, 9.261, 17.3184, 6.1387, 6.5356, 3.181, 4.2993, 4.4908, 6.0749, 2.4402, 3.6936, 1.5725, 4.6926, 3.2301, 3.093, 1.2236], [0.2165, 42.642, 22.2005, 3.5042, 4.3099, 9.9581, 6.8779, 5.2822, 5.2322, 6.5092, 11.183, 14.5001, 15.5866, 2.7754, 7.569, 2.1883, 3.3952, 5.1597, 5.7792, 3.822, 4.104, 2.3962, 3.2674, 2.6973, 3.3571, 1.288]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

