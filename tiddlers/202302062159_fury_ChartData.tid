created: 20230206215940000
creator: Drevarr
modified: 20230705163518772
modifier: drevarr
tags: ChartData
title: 202302062159_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Skye Nightroad", "Reyga Bannerclaw", "Cat Wigglebooty", "Sumatra Satyricon", "Lord Erin The Wise", "Arriasa", "Arcanophage Farra", "Newtype Khan", "Etchery Howls", "Veron Blackburn", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Scrapper", "Spellbreaker", "Scrapper", "Ranger", "Weaver", "Druid", "Spellbreaker", "Spellbreaker", "Druid", "Herald", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[343.277, 45.0684, 72.6547, 12.8686, 43.399, 61.0144, 36.967, 11.8309], [75.8472, 43.6319, 168.1606, 32.4459, 65.2821, 122.731, 142.871, 130.9549, 31.929], [34.3453, 0.0, 32.2368, 0.0, 28.8225, 136.1131, 99.9266, 234.6767, 39.1841, 105.0738, 157.9616, 64.0224, 0.0, 25.8651], [113.256, 147.4902, 194.9088, 60.1694, 32.538, 50.9312, 55.1373, 16.7171, 49.9699, 59.0132, 100.0079, 26.5673, 99.9609, 49.1547, 134.5594], [295.966, 122.7096, 176.783, 133.1205, 0.0, 114.3744, 3.9552, 33.5164, 70.0814, 40.0188, 79.7258, 15.7586, 13.0786, 69.9629, 126.5846, 87.4736], [644.325, 314.0046, 276.1334, 238.5908, 61.3958, 329.5072, 68.0209, 51.3315], [338.437, 213.5484, 346.968, 121.9909, 46.0693, 297.5648, 61.8728, 41.4495, 299.1331, 0.0, 188.1505, 52.5023, 99.2569, 124.6935, 17.8589, 198.913, 31.7289], [608.267, 178.4484, 228.3542, 280.9355, 70.7758, 218.96, 20.9898, 50.2061, 150.9394, 87.8143, 179.5584, 19.8489, 116.0406, 73.1402, 188.4168, 125.8129, 45.4836], [623.029, 304.5276, 322.775, 361.2773, 189.6853, 107.088, 103.1083, 92.0124, 127.1213, 116.2714, 260.8623, 23.8503, 160.2783, 221.1961, 400.5331], [1025.717, 653.7726, 525.3437, 418.8382, 285.8407, 497.536, 261.4713, 199.1223], [621.335, 476.0964, 466.9469, 423.8813, 100.3068, 354.6048, 105.7712, 90.585, 153.1358, 157.6322, 247.0097, 56.978, 69.8022, 210.169, 134.3909, 172.6018, 118.1025], [995.588, 641.4876, 522.6893, 467.8779, 76.7672, 412.0864, 60.5022, 140.9283, 158.1466, 136.4356, 394.3037, 70.6914, 119.2269, 239.855, 134.1101, 149.0269]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

