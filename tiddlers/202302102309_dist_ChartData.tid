created: 20230210230955000
creator: Drevarr
modified: 20230705163518963
modifier: drevarr
tags: ChartData
title: 202302102309_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Fungus", "Zadie Miststep", "Seren Nightroad", "Air One Com", "Tribal S", "Mistwalker Caelon", "Black Raspberry Pie", "Grasszanine", "Newtype Khan", "Johosh The Great", "Ace Hammers", "Kahless The Drunk", "Xanvias Tseli", "Abigail Ryn", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Tempest", "Scourge", "Tempest", "Scourge", "Firebrand", "Druid", "Vindicator", "Chronomancer", "Spellbreaker", "Spellbreaker", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[445, 254, 351, 310, 1688, 271, 2048, 600, 238, 438], [1465, 298, 356, 403, 337, 356, 1074, 937, 260, 725], [1125, 266, 269, 490, 1057, 212, 931, 2104, 259, 928], [683, 213, 480, 383, 650, 381, 452, 3148, 299, 801], [581, 262, 922, 565, 979, 223, 1645, 2600, 250, 725], [375, 318, 653, 586, 1008, 515, 4069, 672, 525, 307], [783, 319, 234, 413, 1788, 322, 4237, 866, 456, 889], [1153, 360, 1230, 511, 461, 389, 4633, 662, 513, 361], [305, 346, 887, 399, 1753, 267], [420, 263, 800, 390, 252, 347, 353, 566, 438, 514], [338, 248, 994, 289, 1322, 280, 786, 1474, 226, 376], [273, 342, 665, 505, 1187, 367, 4547, 494, 323, 627], [320, 228, 226, 513, 504, 320, 517, 2371, 310, 757], [728, 218, 898, 297, 289, 243, 848, 562, 281, 463], [381, 319, 247, 457, 1271, 187, 427, 485, 243, 297], [963, 293, 259, 234, 1206, 274, 312, 406, 217, 315], [217, 143, 273, 257, 209, 173, 392, 1181, 183, 511]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

