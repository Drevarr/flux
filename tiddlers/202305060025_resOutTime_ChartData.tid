created: 20230506002551000
creator: Drevarr
modified: 20230705163528403
modifier: drevarr
tags: ChartData
title: 202305060025_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rkantor", "Smol Gluvs", "Sister Elonith", "Zaylen Harker", "Mistwalker Caelon", "Hauzzy", "High Sorcer Baradun", "Temperstep", "Be\u00eb", "Viral Marketing", "Kmpek", "Air One Com", "Khailerian", "Aronorf Xideliesi", "Jupi Jupi Jupi", "Iyani Tokahna", "Mrs Stealth Monkey", "Morv\u00e4rth", "Morv\u00e4rth", "Eibh\u00ebar", "Rina Of Theros", "Venomina The Siren", "Bella Sassy", "Ark Darkness", "Smol Daddy Tika", "Mac Adaymia", "Koralia Danai", "Newtype Khan", "Tegan Parker", "Primal Clone", "Solus Sanctus", "Hyde En Sikh"];
const professions = ["Vindicator", "Scourge", "Berserker", "Firebrand", "Vindicator", "Berserker", "Tempest", "Tempest", "Scourge", "Firebrand", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Virtuoso", "Vindicator", "Reaper", "Scourge", "Chronomancer", "Scourge", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2090.24, 0.0, 0.0, 0.0, 1113.66], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2598.54, 260.1, 0.0, 0.0, 0.0, 0.0, 0.0, 92.02, 0.0, 0.0], [0.0, 1045.12, 0.0, 66.6, 0.0, 0.0, 742.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 564.0, 981.9], [0.0, 1828.96, 0.0, 0.0, 0.0, 1856.1], [0.0, 0.0, 0.0, 432.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1045.12, 0.0, 0.0, 0.0, 0.0, 1484.88, 0.0, 303.15, 0.0, 0.0, 0.0, 680.4], [0.0, 3657.92, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1974.0, 3436.65], [0.0, 3919.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [266.64, 1828.96, 0.0, 0.0, 0.0, 0.0, 2227.32], [0.0, 0.0, 0.0, 366.3, 0.0, 0.0, 1484.88, 0.0, 0.0, 0.0, 0.0, 0.0, 680.4, 0.0, 0.0, 0.0], [711.04, 522.56, 0.0, 166.5, 0.0, 0.0, 742.44, 0.0, 0.0, 0.0, 0.0, 0.0, 226.8, 0.0, 0.0, 0.0], [0.0, 522.56, 0.0, 0.0, 0.0, 0.0, 2227.32, 0.0, 0.0, 0.0, 288.96, 0.0, 0.0, 0.0, 1128.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2969.76, 0.0, 0.0, 0.0, 0.0, 0.0, 907.2, 92.02, 1974.0, 0.0], [0.0, 0.0, 0.0, 199.8, 0.0, 0.0, 3340.98, 0.0, 303.15, 0.0, 0.0, 0.0, 0.0, 0.0, 1128.0, 0.0], [0.0, 5748.16], [2351.52, 0.0, 0.0, 0.0, 742.44, 0.0, 505.25, 0.0, 0.0, 0.0, 1360.8, 92.02, 0.0, 490.95], [4180.48, 0.0, 0.0, 1313.65], [0.0, 0.0, 6310.74, 0.0, 0.0, 0.0, 0.0, 680.4, 460.1, 0.0, 1963.8], [0.0, 1567.68, 0.0, 0.0, 0.0, 7053.18, 0.0, 0.0, 0.0, 0.0, 0.0, 680.4, 138.03, 564.0, 2945.7], [0.0, 522.56, 0.0, 466.2, 0.0, 0.0, 2598.54, 520.2, 606.3, 0.0, 0.0, 0.0, 453.6, 138.03, 0.0, 1472.85], [0.0, 1567.68, 0.0, 166.5, 0.0, 5939.52, 0.0, 404.2, 0.0, 0.0, 0.0, 453.6, 92.02, 1128.0, 981.9], [0.0, 1306.4, 0.0, 0.0, 0.0, 0.0, 4083.42, 0.0, 404.2, 0.0, 0.0, 1360.8, 46.01, 4230.0, 490.95], [0.0, 3396.64, 0.0, 0.0, 0.0, 0.0, 1484.88, 520.2, 202.1, 0.0, 0.0, 0.0, 3855.6, 184.04, 2538.0, 1472.85], [0.0, 7577.12, 0.0, 0.0, 0.0, 0.0, 371.22, 2080.8, 202.1, 0.0, 0.0, 0.0, 907.2, 230.05, 564.0, 981.9], [0.0, 1828.96, 0.0, 133.2, 0.0, 0.0, 6310.74, 1300.5, 1414.7, 0.0, 165.12, 0.0, 907.2, 138.03, 0.0, 981.9], [0.0, 5486.88, 0.0, 299.7, 0.0, 0.0, 7424.4, 0.0, 202.1, 0.0, 0.0, 0.0, 907.2, 368.08, 0.0, 1472.85], [266.64, 4703.04, 0.0, 0.0, 0.0, 0.0, 7053.18, 0.0, 101.05, 0.0, 0.0, 0.0, 907.2, 368.08, 3384.0, 981.9], [177.76, 4441.76, 0.0, 0.0, 0.0, 7795.62, 0.0, 303.15, 0.0, 0.0, 0.0, 1587.6, 368.08, 1974.0, 1472.85], [0.0, 3135.36, 0.0, 0.0, 0.0, 0.0, 11136.6, 0.0, 0.0, 0.0, 0.0, 0.0, 1134.0, 92.02, 2256.0, 23074.65], [0.0, 10973.76, 0.0, 0.0, 0.0, 0.0, 4083.42, 0.0, 1313.65, 0.0, 123.84, 0.0, 1814.4, 414.09, 2538.0, 4418.55], [0.0, 5486.88, 0.0, 0.0, 0.0, 0.0, 6681.96, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 46.01, 17484.0, 1963.8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

