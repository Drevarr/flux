created: 20230201220146000
creator: Drevarr
modified: 20230705163518544
modifier: drevarr
tags: ChartData
title: 202302012201_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Konztantin\u00eb", "Johosh The Great", "Bella Lunabringer", "Tegan Parker", "Cat Wigglebooty", "Etchery Howls", "Tribal S", "Mac Aaroni", "Drevarr In A Teacup", "\u00c9\u00efbhear", "Arriasa"];
const professions = ["Firebrand", "Herald", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Druid", "Druid", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.0765, 173.4174, 74.5416, 61.5437, 68.0826, 20.1731, 55.571, 0.0, 5.4782, 28.2367, 56.0287, 90.6539, 76.3371, 60.7561, 29.3434, 25.4232, 122.6461, 26.4149, 18.4313, 5.3525, 15.2225, 71.9335], [234.2896, 226.2, 26.569, 63.9548, 0.0, 18.7382, 432.3384, 143.7836, 33.0448, 106.4118, 0.1215, 112.2345], [12.5763, 264.134, 58.7424, 50.3078, 28.8434, 9.102, 9.8885, 141.4666, 34.8638, 10.9054, 53.1805, 68.8597, 42.6535, 128.1987, 64.6584, 74.6678, 19.2217, 97.1672, 35.2556, 28.7288, 23.6153, 64.5356, 141.2697], [22.2999, 370.2959, 239.9112, 37.6358, 47.4438, 27.7465, 0.5897, 74.0232, 44.9971, 130.4321, 28.0327, 52.7354, 48.0612, 98.7399, 49.588, 23.5104, 13.5005, 119.3272, 30.2459, 15.2821, 11.4236, 39.8151, 139.7546], [457.1024, 35.0784, 171.4522, 79.8543, 19.3606, 11.4477, 259.0454, 24.5074, 17.1226, 22.2989, 99.0927, 11.8149, 39.6998, 39.5822, 103.4986, 36.5148, 19.745, 21.0382, 43.3969, 223.0878], [100.8518, 507.935, 325.1712, 172.6771, 126.2789, 55.7547, 9.0663, 88.6133, 0.0, 13.1222, 35.172, 156.9231, 111.3123, 0.0, 24.2981, 3.8688, 0.0, 2.5019, 111.8215, 58.2691, 33.0565, 0.0, 87.6623], [65.9354, 213.8611, 128.3682, 28.6278, 2.5799, 46.9171, 33.971, 59.0881, 234.0233, 141.3548, 91.0792, 84.6279, 77.8532, 20.6237, 36.8245, 419.509, 40.185, 154.3282, 0.0, 40.2628, 164.3577], [0.0, 1112.8429, 448.2936, 125.5373, 114.8638, 26.9204, 12.2188, 229.2931, 0.0, 0.0, 32.1414, 73.821, 397.8565, 3.969, 0.0, 55.9488, 0.0, 156.4989, 59.3666, 52.7436, 0.0, 78.7987, 988.1664], [53.5198, 1234.2546, 519.0768, 277.8125, 228.7085, 142.0513, 63.3679, 463.4496, 115.6622, 176.3726, 86.4875, 109.2346, 88.8311, 30.429, 0.0, 19.969, 39.0197, 138.2705, 164.5978, 42.562, 15.4875, 28.1744, 229.2927], [275.0321, 1557.0416, 541.9056, 261.0854, 344.5406, 169.7566, 36.6112, 558.0706, 305.6501, 156.9568, 157.0063, 186.9049, 410.9806, 342.7452, 197.8992, 195.047, 98.5645, 540.419, 171.2685, 122.6434, 145.6568, 158.6208, 518.7585], [104.2269, 1239.9244, 436.2528, 562.6368, 378.0722, 334.1979, 49.5615, 1124.0798, 0.0, 77.6376, 156.2487, 243.9173, 351.5574, 280.5201, 122.547, 342.3293, 183.7108, 300.386, 93.6578, 241.4614, 123.0327, 238.6028, 637.9503], [210.503, 3204.0179, 1279.3176, 993.1046, 587.5688, 262.0493, 476.8445, 591.824, 376.1974, 365.5552, 326.4027, 192.4965, 46.9361, 58.9843, 0.0, 440.6989, 121.5462, 81.3565, 0.0, 151.6492, 717.7482]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

