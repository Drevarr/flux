created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Rockdemon", "Lucky Luprac\u00e1n", "Head Bobber", "Arcanophage Farra", "Cedryn X", "Audens Silvermarker", "Zaylen Harker", "Lord Erin The Wise", "Mort\u00e4rion", "Lurker Holystrike", "Oo Dads Mad", "Heals For Daddy", "Jaylah Feres", "Venomina The Sly", "Emily Melia", "Kosa\u00efr", "Sakis Ranger", "K\u00e2 \u00d4tik R\u00e6j", "Keypek The Drunk", "Name Is What", "Legacy Of Mathus", "Glorious Gluvs", "Zaedy Zae", "Blancooo Padreee", "Jimbo One Eye", "Kahlyanne", "\u00c1rk\u00e1ntor", "Rozaalyna", "J\u00e2sm\u00eene", "Air One Com", "Klengah", "Kisumaiassu", "Delayed Worlds", "Sub Train", "Arriasa", "Rina Of Theros", "Black Raspberry Pie", "Aronorf Xideliesi", "Yummy Kiwi", "Xanvias Einzbern", "Morton Saltbringer", "Newtype Khan", "Koralia Danai", "Eibh\u00ebar", "Bella Sassy", "Mistwalker Cael", "Solus Sanctus", "Drevarr Moonwillow", "Alarics Clone", "Ryvalia Fazebringer"];
const professions = ["Daredevil", "Scrapper", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Weaver", "Scrapper", "Willbender", "Berserker", "Druid", "Scrapper", "Druid", "Druid", "Tempest", "Druid", "Berserker", "Scrapper", "Scourge", "Berserker", "Berserker", "Druid", "Spellbreaker", "Scrapper", "Tempest", "Scourge", "Scourge", "Tempest", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Druid", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 15, 70, 4, 0, 5, 0, 1, 0, 0, 1, 0], [29, 59, 1, 1, 5, 1, 3, 0], [22, 76, 3, 0], [0, 0, 2, 0, 3, 0, 9, 4, 5, 2, 11, 5, 5, 9, 15, 12, 5, 3, 3, 2, 1, 7], [0, 27, 24, 0, 0, 4, 1, 1, 4, 2, 3, 4, 4, 5, 1, 6, 3, 1, 0, 5, 6, 0, 1, 6, 0, 1, 0, 0, 1], [2, 10, 3, 11, 12, 2, 7, 9, 6, 0, 12, 13, 0, 6, 3, 2, 0, 2, 5, 10], [1, 25, 77, 5, 2, 0, 9, 2, 6, 6], [0, 0, 79, 0, 0, 1, 0, 0, 0, 9, 2, 5, 1, 6, 6, 0, 3, 5, 0, 1, 4, 11, 0, 0, 0, 0, 0], [1, 81, 2, 0, 8, 1, 1, 0, 7, 3, 2, 1, 5, 0, 4, 2, 0, 0, 6, 10, 0, 0, 2, 0], [33, 106, 2, 0, 5, 1, 0], [0, 20, 61, 0, 0, 4, 0, 1, 0, 8, 1, 8, 1, 3, 5, 7, 6, 1, 0, 7, 17], [0, 2, 70, 2, 0, 1, 0, 2, 1, 8, 2, 7, 3, 10, 3, 1, 6, 7, 0, 6, 11, 0, 2, 3, 1, 0, 0, 3, 0], [21, 66, 1, 0, 0, 0, 0, 7, 3, 4, 1, 2, 4, 0, 5, 5, 3, 0, 10, 10, 15, 0, 2, 3], [0, 18, 85, 2, 0, 4, 0, 1, 0, 15, 2, 4, 1, 3, 4, 0, 6, 0, 3, 5, 4, 0, 4, 0, 0, 0, 6, 0], [0, 26, 68, 2, 0, 3, 0, 2, 1, 8, 1, 7, 1, 10, 7, 0, 5, 2, 1, 6, 9, 5, 0, 0, 2, 0, 3], [0, 26, 86, 0, 0, 6, 0, 1, 0, 8, 2, 2, 3, 5, 2, 3, 5, 4, 4, 0, 0, 11, 2, 0], [1, 24, 73, 0, 0, 0, 1, 1, 0, 9, 3, 7, 0, 7, 4, 3, 6, 11, 0, 6, 6, 0, 3, 0, 5, 2], [0, 18, 69, 3, 0, 4, 0, 1, 1, 18, 4, 5, 1, 7, 5, 0, 4, 1, 3, 0, 8, 5, 0, 4, 3, 0, 3, 1, 4, 1], [0, 24, 68, 4, 1, 3, 0, 3, 1, 8, 2, 7, 1, 7, 5, 0, 6, 4, 2, 0, 7, 5, 0, 1, 3, 0, 1, 1, 0, 10], [0, 5, 94, 0, 1, 6, 2, 1, 0, 1, 2, 8, 1, 4, 7, 1, 8, 5, 0, 0, 7, 15, 3, 0, 0, 1, 0, 2, 6], [0, 26, 83, 4, 1, 1, 0, 1, 0, 9, 2, 2, 0, 4, 3, 1, 5, 1, 2, 1, 9, 7, 0, 3, 10, 0, 0, 0, 3, 4], [26, 58, 2, 0, 5, 0, 1, 13, 1, 6, 1, 5, 3, 0, 14, 6, 2, 0, 8, 16, 1, 5, 1, 3, 0, 5, 0], [25, 70, 0, 0, 3, 0, 1, 1, 8, 0, 8, 1, 4, 6, 0, 10, 3, 3, 12, 19, 0, 6, 4, 2, 3, 0, 3, 0], [0, 24, 76, 4, 1, 1, 1, 0, 12, 1, 8, 1, 7, 5, 0, 8, 3, 4, 0, 12, 12, 0, 0, 4, 0, 3, 0, 6, 3], [1, 36, 99, 1, 0, 0, 0, 0, 3, 1, 4, 2, 2, 2, 0, 3, 2, 2, 0, 6, 10, 0, 8, 0, 3, 2, 0, 6, 3], [0, 21, 76, 1, 2, 4, 0, 0, 0, 10, 0, 5, 0, 3, 0, 1, 9, 8, 6, 0, 13, 15, 8, 0, 6, 2, 2, 4, 1], [0, 20, 101, 2, 0, 2, 2, 0, 13, 1, 2, 1, 8, 5, 0, 8, 7, 2, 0, 8, 7, 0, 4, 5, 0, 1, 0, 5, 1], [0, 36, 88, 2, 0, 3, 1, 1, 7, 4, 6, 0, 12, 5, 0, 3, 7, 1, 10, 12, 5, 2, 1], [24, 88, 3, 0, 9, 5, 0, 17, 3, 11, 2, 6, 7, 0, 6, 2, 6, 3, 0, 6, 0, 2, 1, 2, 3], [29, 80, 2, 0, 2, 3, 0, 9, 1, 7, 2, 6, 5, 0, 6, 4, 5, 5, 10, 0, 7, 3, 6, 2, 2, 9, 4], [0, 17, 106, 1, 1, 3, 4, 1, 10, 1, 8, 3, 7, 8, 1, 13, 5, 0, 4, 9, 0, 0, 4, 0, 1, 0, 5, 3], [3, 14, 97, 3, 1, 5, 1, 0, 9, 3, 4, 1, 9, 7, 0, 5, 5, 2, 1, 11, 9, 6, 5, 1, 4, 1, 11, 5], [0, 38, 84, 2, 0, 4, 0, 3, 0, 10, 4, 5, 2, 8, 5, 1, 7, 4, 4, 1, 8, 13, 4, 7, 2, 5, 0, 2], [0, 32, 107, 3, 1, 2, 2, 2, 15, 3, 4, 1, 9, 5, 8, 2, 2, 0, 6, 12, 7, 4, 0], [27, 113, 7, 2, 1, 0, 12, 0, 20, 10, 3, 9, 3, 2, 8, 14, 0, 6, 0, 1, 0, 6, 5], [1, 35, 109, 1, 1, 8, 0, 2, 0, 10, 2, 7, 3, 8, 8, 0, 3, 3, 2, 0, 11, 10, 0, 7, 9, 1, 4, 0, 3, 5], [0, 34, 123, 3, 1, 4, 1, 2, 1, 10, 2, 11, 0, 5, 8, 0, 6, 2, 2, 0, 10, 19, 0, 4, 2, 1, 3, 0, 1, 1], [38, 93, 4, 2, 11, 3, 2, 9, 2, 10, 4, 6, 3, 1, 6, 2, 5, 1, 9, 12, 0, 10, 1, 5, 3, 0, 11, 7], [1, 35, 93, 5, 0, 6, 2, 3, 3, 19, 3, 5, 5, 6, 5, 5, 6, 4, 3, 1, 10, 20, 0, 4, 2, 4, 3, 2, 10], [0, 28, 117, 7, 1, 2, 0, 2, 0, 12, 4, 15, 3, 13, 6, 0, 9, 7, 2, 1, 13, 13, 2, 5, 2, 3, 0, 4, 2], [46, 115, 2, 2, 3, 1, 1, 15, 2, 8, 2, 9, 6, 0, 8, 4, 2, 0, 13, 18, 0, 0, 4, 0, 5, 1, 4, 11], [1, 37, 133, 3, 0, 6, 1, 1, 15, 1, 7, 3, 8, 6, 0, 8, 3, 3, 0, 6, 15, 0, 4, 8, 1, 5, 1, 10, 3], [1, 29, 116, 4, 1, 6, 3, 2, 16, 2, 6, 1, 18, 7, 2, 7, 5, 3, 1, 12, 14, 0, 7, 9, 3, 5, 1, 6, 5], [0, 40, 130, 1, 2, 4, 1, 2, 1, 18, 1, 7, 1, 10, 4, 3, 9, 1, 3, 0, 14, 15, 0, 5, 10, 5, 0, 9, 3], [0, 47, 117, 1, 3, 7, 2, 0, 11, 1, 7, 3, 14, 9, 3, 9, 7, 7, 1, 10, 10, 0, 6, 8, 5, 4, 2, 7, 6], [24, 159, 2, 2, 5, 0, 3, 1, 10, 0, 12, 1, 14, 4, 0, 9, 3, 3, 0, 12, 14, 5, 8, 1, 2, 0, 5, 8], [0, 42, 110, 0, 1, 11, 1, 2, 1, 22, 2, 7, 2, 11, 8, 3, 7, 9, 4, 1, 11, 12, 9, 8, 4, 7, 1, 12, 12], [0, 35, 127, 2, 2, 8, 6, 4, 14, 3, 14, 4, 15, 13, 2, 7, 6, 4, 15, 18, 0, 8, 12, 3, 3, 0, 3, 4], [1, 29, 137, 0, 1, 7, 18, 3, 10, 5, 2, 8, 2, 4, 3, 3, 1, 10, 23, 0, 18, 23, 6, 5, 13], [0, 43, 156, 2, 2, 20, 0, 5, 1, 19, 2, 11, 6, 7, 8, 0, 9, 6, 5, 0, 11, 14, 13, 8, 5, 4, 0, 4, 10]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

