created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Brazilian Hookah", "Chocolate Teapot", "Kosair", "Danu Leon", "Reina Armitage", "Drevarr Moonwillow", "Flick Embermage", "Nose Llama"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Druid", "Druid", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.4146, 0.0976, 0.6364, 0.2794, 0.2281, 0.3654], [0.1585, 0.25, 0.0299, 0.0, 0.0, 0.0, 0.1048, 0.0, 0.0, 0.3617, 0.0704, 0.0, 0.6304, 0.0, 0.0455, 0.0198, 0.1807, 0.0648, 0.1273, 0.0238, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2727, 0.0, 0.0, 0.0, 0.0, 0.012, 0.0], [0.0366, 0.4583, 0.2239, 0.0484, 0.12, 0.0408, 0.25, 0.0143, 0.0333, 0.234, 0.1268, 0.0455, 0.1304, 0.0, 0.0802, 0.3267, 0.0, 0.0, 0.0045, 0.0, 0.0714, 0.4848], [1.9394, 0.1463, 0.7636, 0.2304, 0.4386, 0.0, 1.3256, 0.7831, 0.75], [0.1613, 0.12, 0.2449, 0.7903, 0.1143, 0.4167, 0.2553, 0.5211, 0.0455, 0.6957, 0.1856, 0.4652, 0.8614, 0.5542, 0.25, 0.1682, 0.1786, 0.0, 0.0625, 0.9556, 1.6667], [0.0, 0.0, 0.1087, 0.2927, 0.2708, 0.1343, 0.0968, 0.2, 0.102, 0.2419, 0.0429, 0.15, 0.1702, 0.2254, 0.7273, 1.3043, 0.1856, 0.1551, 0.4851, 0.1566, 0.0741, 0.0818, 0.0595, 0.4286, 0.0, 0.2667, 0.7576, 0.8049, 0.0732, 0.7091, 0.2745, 0.8421, 0.1538, 0.9767, 1.1928, 1.75], [0.7313, 0.1935, 0.1, 0.051, 0.7419, 0.2143, 0.4333, 0.7447, 0.6338, 0.9545, 1.9348, 0.0206, 0.5294, 1.2277, 0.7831, 0.3426, 0.2364, 0.0714, 0.1786, 0.0, 1.3556, 2.2727], [2.1087, 0.2887, 1.0187, 1.8713, 1.1687, 0.3704, 0.5045, 0.5238, 0.2812, 2.4667, 0.4242, 0.3415, 0.0488, 0.6182, 0.4314, 0.9649, 0.1538, 1.907, 1.3373, 0.9286]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

