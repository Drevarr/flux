created: 20230703220627000
creator: Drevarr
modified: 20230705163541323
modifier: drevarr
tags: ChartData
title: 202307032206_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Lucky Leipreach\u00e1n", "Mike The Archmagus", "Be\u00eb", "Air One Com", "Zayde Sunsabre", "Arcanophage Farra", "Primal Clone", "Oo Dads Mad", "Eibh\u00ebar", "Johosh The Mighty", "Tegan Parker", "Tootsie Pop Rocks", "Grim Grooblin", "Newtype Khan", "Gabe Malhorn", "Solus Sanctus", "Ateriuz", "Crusader Siolith", "Black Raspberry Pie", "Smol Daddy Tika", "Xanvias Einzbern", "Grasszanine", "Koralia Danai", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Weaver", "Scourge", "Firebrand", "Spellbreaker", "Spellbreaker", "Chronomancer", "Berserker", "Chronomancer", "Berserker", "Tempest", "Scrapper", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Spellbreaker", "Berserker", "Spellbreaker", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[580, 236, 438, 347, 646, 253, 299, 364, 325, 5285, 7028, 1443, 1994, 156, 251, 459, 13355], [309, 470, 306, 439, 307, 271, 254, 286, 283, 3018, 1495, 3215, 2506, 317, 436], [423, 523, 269, 417, 262, 422, 299, 252, 242, 300, 8889, 2464, 423], [8747, 930, 622, 9241, 520, 405, 201, 938, 320, 279, 730, 444, 1099, 323], [436, 403, 193, 352, 311, 271, 213, 243, 248, 3125, 1200, 2883, 809], [884, 1049, 248, 410, 236, 662, 247, 214, 291, 295, 2109, 1124, 5844, 1504, 6914, 430, 405, 8849, 671, 477, 312, 683, 597, 291, 292], [369, 276, 495, 192, 237, 223, 257, 251, 3975, 3410, 1552, 3622, 7882, 149, 181, 232, 265, 435, 218, 682, 282, 351, 292], [469, 477, 492, 367, 441, 316, 371, 754, 1420, 568, 759, 188, 303, 146, 448, 395, 256, 1024, 307, 617, 388], [321, 491, 209, 399, 265, 328, 230, 257, 249, 942, 9438, 4019, 992, 1008, 101, 505, 161, 68, 408, 387, 225, 538, 417, 305, 277], [305, 386, 247, 374, 235, 274, 234, 234, 219, 7193, 1074, 737, 289, 199, 180, 340, 279, 559, 379, 216, 452, 208, 423, 318], [372, 590, 318, 283, 278, 239, 370, 360, 399, 6957, 1083, 2699, 2344, 230, 465, 295, 150, 391, 374, 175, 773, 269, 434, 236], [267, 279, 310, 276, 222, 272, 280, 267, 11452, 1055, 2600, 4571, 125, 197, 221, 131, 281, 337, 253, 700, 243, 813, 364], [3330, 3567, 400, 174, 494, 284, 306, 348, 282, 2167, 1924, 215, 284], [678, 337, 196, 326, 288, 275, 255, 260, 208, 210, 6743, 2953, 1580, 2312, 356, 407, 153, 210, 271, 465, 278, 779, 204, 795, 292], [580, 515, 361, 384, 270, 308, 230, 243, 216, 248, 11928, 1263, 2835, 2491, 157, 249, 498, 299, 250, 300, 209, 636, 141, 263, 293], [481, 401, 371, 282, 454, 272, 300, 265, 386, 8072, 3664, 3084, 1037, 85, 704, 151, 135, 303, 305, 208, 405, 254, 247, 278], [377, 297, 350, 265, 346, 220, 223, 256, 186, 11991, 6861, 2063, 218, 302, 208, 141, 381, 457, 374, 264, 360, 428, 545, 317], [437, 493, 408, 298, 327, 280, 244, 301, 238, 240, 7677, 1238, 1497, 1544, 177, 287, 132, 153, 339, 485, 198, 745, 264, 607, 274], [311, 287, 351, 217, 445, 282, 208, 333, 201, 9923, 2117, 818, 1032, 245, 131, 353, 1068, 605, 452, 242, 727, 145, 809, 253], [253, 240, 291, 228, 353, 207, 191, 272, 235, 11647, 1183, 5337, 1621, 297, 153], [294, 267, 360, 213, 200, 248, 184, 268, 5665, 1112, 2632, 5056, 125, 111, 633, 155, 502, 390, 192, 266, 785], [553, 277, 145, 463, 285, 307, 232, 159, 194, 246, 7983, 1197, 2722, 729, 6552, 281, 170, 8585, 279, 274, 247, 620, 163, 575, 303], [247, 368, 240, 325, 204, 275, 199, 317, 204, 297, 5057, 1112, 5114, 2009, 315, 124, 144, 169, 337, 336, 228, 325, 390, 675, 365], [191, 320, 201, 267, 193, 362, 189, 158, 178, 237, 11713, 1068, 2709, 2255, 218, 583, 86, 253, 244, 363, 198, 289, 171, 450, 239]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

