created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Mmathuss", "Aronorf Xideliesi", "Gestern Yesteryear", "Johosh The Great", "Sygaldry Verdandi", "Tegan Parker", "Kosa\u00efr", "Tootsie Pop Rocks", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Scrapper", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 29.193, 0.0, 65.0928, 4.4304, 124.9909, 38.6232, 123.5395, 149.2148, 26.3267, 24.91, 17.8901, 206.4825, 23.2387, 21.8381, 39.8455], [9.3375, 47.3304, 0.0, 65.9362, 36.2611, 93.9521, 0.0, 126.007, 25.9532, 0.0, 52.4605, 29.9028, 359.835, 36.8461, 0.0, 16.6139], [0.0, 33.6552, 0.0, 87.2505, 40.2826, 94.0714, 20.7662, 131.1065, 19.32, 0.0, 35.1231, 6.9381, 369.8975, 58.7152, 19.5994, 36.7108], [0.0, 0.0, 23.9977, 41.3731, 14.445, 0.0, 19.411, 0.0, 3.967, 53.1081, 2.1502, 713.23, 108.4177, 40.9728, 17.1712], [81.059, 22.4382, 145.747, 63.3696, 16.0485, 38.9094, 48.5383, 749.455, 60.5266, 40.297, 78.5765], [0.0, 60.4506, 0.0, 71.9165, 50.3021, 90.9676, 0.0, 174.5345, 74.7684, 10.6904, 87.2348, 48.6243, 798.1575, 112.2172, 0.0], [0.0, 40.5893, 189.2173, 225.694, 107.6124, 21.3808, 84.5445, 14.765, 850.4825, 110.0524, 40.9728], [283.1045, 160.9356, 33.3334, 221.0015, 100.8897, 1449.0, 190.7692, 89.0419, 103.3058], [0.0, 2.7084, 24.5344, 225.5074, 318.6252, 0.0, 782.8555, 373.3268, 129.6501, 360.2484, 15.3671, 2134.86, 442.1093, 2.7456, 0.0], [53.445, 316.1946, 2.5137, 683.8964, 496.7501, 1060.3332, 91.7594, 1453.0285, 758.5032, 313.4734, 693.046, 306.2816, 4777.675, 702.948, 55.2499, 128.6968], [65.61, 337.4844, 132.0872, 1187.0816, 325.4299, 1083.3735, 390.7464, 2009.203, 1240.2152, 628.8016, 1025.5945, 454.0755, 6889.5925, 1089.6113, 502.1069, 430.8471]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

