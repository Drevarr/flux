created: 20230401000636000
creator: Drevarr
modified: 20230705163523632
modifier: drevarr
tags: ChartData
title: 202304010006_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Etcherii", "Johosh The Great", "Mac Chiato", "Zadie Miststep", "Drevarr Moonwillow", "Arkintor"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[554.5441, 129.6852, 434.5952, 825.2931, 699.0787, 722.9815, 1180.2738, 150.4651, 596.2545, 33.3535, 912.7528, 0.0, 74.2143, 413.538, 54.4, 825.4222, 565.2857, 556.6494, 261.8519, 504.4646], [342.6176, 116.4352, 809.5119, 533.6379, 646.8989, 950.3981, 1083.3571, 114.7674, 969.3091, 34.1212, 347.5449, 78.125, 774.5906, 109.8444, 32.7778, 1123.037, 706.967, 70.7662, 601.5657, 471.2794, 595.0, 193.0, 9.6528, 157.375, 132.5826, 10.641, 778.2149], [1400.1397, 89.1574, 2000.7262, 472.7759, 1932.3483, 2373.1389, 4045.1667, 620.8837, 1648.7727, 113.798, 2303.5112, 126.5357, 1482.4211, 13.1111, 5.2963, 2357.6889, 1898.2088, 506.9481, 0.0, 1488.8384, 1988.4412, 0.0, 839.6389, 1174.96, 21.8472, 1345.375, 37.113, 9.4359, 1393.3554], [1630.1397, 308.1574, 1579.3333, 946.6379, 1321.0562, 2536.1852, 2663.8214, 498.7209, 3215.1364, 99.2424, 1235.3539, 15.4091, 433.3393, 2800.5731, 935.4889, 3208.0815, 1663.6154, 8.039, 347.037, 1925.6061, 121.4706, 1622.5741, 898.5733, 1192.75, 110.4087, 0.0, 1725.9008], [1745.0221, 327.6759, 3180.9881, 2305.0862, 2741.3596, 3187.5833, 5672.6667, 692.1628, 3146.7091, 187.3232, 3770.8596, 1.5455, 275.8929, 2699.2047, 1013.5333, 49.2963, 4004.7111, 2298.4396, 2212.961, 2084.3434, 1978.7353, 148.2667, 1570.5278, 1533.12, 55.9444, 1419.4375, 203.6522, 45.0769, 2735.2149], [2502.8235, 395.2685, 3319.9524, 2671.069, 1914.382, 3316.4722, 2623.6905, 1226.0, 3326.8364, 265.4141, 4572.6404, 576.4821, 2623.076, 585.3778, 4132.7481, 2055.6593, 1157.039, 2021.1313, 4207.4559, 249.0667, 2149.0, 1114.4933, 45.625, 1569.2708, 235.0348, 249.9744, 3178.3388]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

