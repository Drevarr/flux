created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Nidircc", "Zaedy Zae", "Mistwalker Cael", "Crusader Siolith", "Tootsie Pop Rocks", "Tegan Parker", "Drevarr Moonwillow", "Newtype Khan", "Vee U"];
const professions = ["Vindicator", "Tempest", "Druid", "Vindicator", "Firebrand", "Scrapper", "Tempest", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.839, 70.7815, 0.0, 27.8059, 15.0727, 3.9679, 1.9941, 2.957, 27.5857, 3.9444, 0.0, 10.3964, 0.0, 10.2637, 3.996, 4.0455, 3.9744, 0.0, 6.0144], [81.1251, 169.617, 86.3604, 83.4005], [0.0, 353.2155, 0.0, 40.0979, 55.2058, 0.0, 0.0, 0.0, 95.8459, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [7.243, 217.1903, 4.8852, 45.8762, 36.0528, 24.1877, 14.7329, 9.6903, 58.8992, 6.1332, 15.5085, 20.0186, 15.2684, 9.8049, 3.7216, 18.1134, 49.032, 0.0, 41.7312], [0.0, 216.325, 2.9463, 59.7091, 38.0016, 0.0, 0.0, 37.922, 57.5324, 37.278, 0.0, 63.2079, 18.0236, 0.0, 0.0, 0.0, 24.1056, 0.0, 48.888], [0.0, 255.2635, 0.0, 152.0919, 20.3102, 42.1265, 0.0, 72.3607, 0.0, 32.802, 39.8713, 65.5508, 0.0, 46.9224, 4.6371, 46.1808, 0.0, 78.8592], [701.0661, 0.0, 237.5407, 42.5691, 101.9066, 9.5951, 104.5753, 429.5668, 71.8656, 42.0735, 105.7889, 75.5671, 90.1761, 76.0088, 39.8199, 178.7184, 0.0, 250.2192], [49.6132, 990.4224, 16.698, 184.1702, 133.6451, 73.4184, 80.9605, 73.7861, 215.0526, 34.7244, 55.7865, 196.315, 74.9644, 66.1227, 45.5847, 27.1527, 177.2496, 35.169, 110.9472], [0.0, 1131.4663, 0.0, 218.9801, 200.361, 115.0222, 77.0029, 225.0349, 71.82, 93.0825, 397.5517, 109.8636, 119.953, 80.2791, 290.8656, 77.3718, 81.3792], [18.205, 1512.1983, 47.9205, 262.8601, 334.2497, 207.5198, 87.2726, 358.1587, 93.7536, 112.1505, 214.564, 209.2517, 187.0418, 106.9817, 68.9214, 166.0176]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

