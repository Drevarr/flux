created: 20230314004438000
creator: Drevarr
modified: 20230705163522046
modifier: drevarr
tags: ChartData
title: 202303140044_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Legendary Hacker", "Sofya De Nova", "Rina Of Theros", "Heartthrobb", "Cat Wigglebooty", "Blanco Padre Guard", "Ark Darkness", "Drevarr Moonwillow", "Bella Sassy", "Smol Daddy Tika", "Black Raspberry Pie", "Etchery Howls", "Sumatra Satyricon", "Tootsie Pop Rock", "Fribble Bibble", "Morton Saltbringer", "Johosh The Great", "Tegan Parker", "Xanvias Tseli", "Daring Deathblade", "Rozaalyna", "Zadie Miststep", "Lil Lun\u00e4", "Newtype Khan", "Whose Guardian", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Minka Bringer", "Sygaldry Verdandi", "Koralia Danai", "Venomina The Siren", "Pererek Ninja", "High Sorcer Baradun", "Ace Hammers", "Smol Gluvs", "Ravioli Fetabringer", "Oo Dads Mad", "Tribal S", "Legendary Hacker", "Cerys Fireblade", "Arcanophage Farra", "Eibh\u00ebar", "Mac Chiato", "Veron Blackburn", "Primal Clone", "Ryvalia Fazebringer", "Mistwalker Caelon", "Xyntharos", "Hauzzy", "Sigmund Mistwalker"];
const professions = ["Vindicator", "Weaver", "Scourge", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Chronomancer", "Druid", "Soulbeast", "Scrapper", "Scrapper", "Chronomancer", "Firebrand", "Tempest", "Berserker", "Reaper", "Scourge", "Tempest", "Weaver", "Spellbreaker", "Firebrand", "Weaver", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Dragonhunter", "Tempest", "Vindicator", "Scourge", "Firebrand", "Spellbreaker", "Druid", "Herald", "Berserker", "Spellbreaker", "Chronomancer", "Tempest", "Herald", "Chronomancer", "Chronomancer", "Vindicator", "Vindicator", "Spellbreaker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 0, 6, 42, 24, 15], [3, 0, 27, 9, 0, 1, 0, 2, 0, 2, 1, 0, 0, 5, 0, 2, 1, 0, 6, 0, 18, 0, 0, 11, 10, 1, 3], [0, 1, 13, 12, 0, 0, 0, 0, 0, 1, 0, 0, 24, 0, 2, 0, 0, 10, 0, 11, 0, 2, 13, 16, 0, 0], [0, 19, 29, 3, 3, 0, 2, 0, 30, 0, 3, 13, 1, 3], [0, 1, 19, 10, 0, 1, 3, 0, 1, 0, 0, 1, 3, 2, 3, 1, 29, 11, 0, 11, 0, 2, 12, 8, 8, 0], [10, 0, 18, 1, 0, 1, 4, 1, 0, 3, 0, 0, 0, 1, 0, 2, 1, 8, 11, 0, 2, 0, 0, 25, 14, 24, 1], [1, 0, 23, 2, 1, 3, 1, 3, 0, 2, 3, 0, 1, 13, 2, 13, 0, 8, 18, 41, 0, 1, 6], [3, 0, 8, 10, 0, 0, 0, 0, 0, 3, 0, 0, 0, 31, 23, 4, 0, 2, 1, 0, 32, 0, 0, 23, 16, 3, 0], [0, 0, 10, 8, 0, 5, 2, 0, 0, 0, 0, 0, 0, 13, 5, 1, 0, 24, 28, 0, 31, 0, 5, 13, 18, 1, 0], [0, 1, 23, 12, 1, 1, 10, 8, 0, 2, 0, 0, 0, 8, 4, 0, 0, 5, 18, 0, 23, 0, 0, 25, 19, 2, 2], [1, 0, 36, 6, 0, 3, 5, 5, 0, 10, 0, 1, 5, 13, 7, 5, 3, 0, 0, 23, 11, 13, 19, 0], [0, 0, 28, 4, 0, 0, 1, 0, 4, 0, 0, 0, 16, 11, 3, 1, 7, 14, 0, 16, 0, 4, 20, 29, 11], [0, 0, 45, 4, 1, 17, 11, 3, 0, 12, 2, 1, 9, 2, 6, 1, 6, 5, 5, 0, 18, 0, 3, 18, 4, 0, 1], [1, 1, 37, 0, 9, 1, 0, 11, 0, 0, 0, 4, 28, 21, 0, 0, 19, 8, 0, 0, 0, 13, 19, 6, 1], [0, 0, 20, 15, 0, 2, 1, 4, 0, 2, 9, 0, 2, 1, 16, 5, 0, 15, 37, 0, 1, 0, 3, 32, 0, 18, 0], [0, 0, 24, 17, 0, 0, 0, 1, 0, 0, 1, 14, 0, 10, 0, 12, 50, 0, 2, 30, 5, 17, 3], [0, 0, 9, 12, 0, 0, 0, 0, 0, 2, 0, 0, 5, 11, 15, 6, 4, 8, 26, 1, 35, 0, 5, 26, 17, 4, 0], [0, 0, 56, 0, 0, 0, 1, 3, 0, 0, 0, 0, 9, 5, 1, 1, 7, 29, 0, 16, 0, 0, 22, 32, 9, 0], [2, 0, 16, 16, 0, 0, 4, 2, 0, 0, 1, 1, 0, 26, 6, 5, 0, 21, 20, 0, 19, 0, 4, 23, 31], [0, 0, 31, 3, 0, 5, 4, 13, 0, 2, 0, 0, 2, 2, 8, 1, 1, 13, 19, 0, 25, 0, 17, 22, 5, 11, 13], [1, 0, 58, 15, 0, 2, 3, 2, 0, 0, 0, 0, 0, 10, 6, 2, 1, 10, 13, 0, 8, 1, 2, 19, 32, 20], [0, 0, 7, 20, 0, 0, 5, 0, 0, 0, 0, 0, 0, 41, 3, 0, 2, 15, 28, 0, 55, 0, 4, 14, 8, 3, 0], [2, 0, 11, 1, 0, 0, 8, 0, 5, 3, 29, 40, 0, 15, 0, 1, 53, 40, 3], [3, 0, 49, 7, 0, 1, 1, 1, 0, 0, 0, 0, 3, 3, 0, 6, 4, 5, 10, 0, 11, 0, 4, 54, 51, 9, 0], [0, 0, 51, 2, 0, 0, 0, 2, 0, 2, 0, 0, 15, 19, 9, 0, 6, 2, 24, 1, 21, 1, 1, 34, 24, 8], [0, 1, 64, 28, 0, 0, 2, 9, 0, 13, 0, 0, 17, 9, 10, 3, 8, 7, 23, 0, 29, 3, 9, 4, 0], [0, 0, 31, 8, 2, 0, 4, 0, 3, 1, 0, 4, 43, 7, 8, 5, 2, 4, 0, 19, 0, 0, 55, 13, 26, 5], [1, 61, 23, 2, 4, 1, 4, 0, 9, 3, 0, 8, 23, 5, 10, 2, 1, 1, 0, 16, 1, 2, 44, 7, 10, 4], [0, 0, 20, 20, 0, 1, 2, 3, 0, 0, 0, 4, 12, 19, 0, 0, 46, 19, 0, 6, 0, 0, 48, 33, 13, 3], [1, 0, 33, 5, 0, 3, 8, 3, 5, 0, 0, 3, 49, 3, 11, 3, 2, 40, 0, 16, 0, 42, 15, 5, 2], [1, 46, 8, 0, 0, 9, 4, 0, 0, 10, 0, 0, 24, 11, 2, 2, 15, 5, 0, 3, 0, 2, 43, 48, 14, 6], [1, 71, 5, 1, 2, 4, 4, 1, 2, 3, 0, 8, 24, 3, 3, 0, 25, 19, 0, 5, 0, 10, 38, 23, 3], [0, 0, 39, 22, 7, 2, 8, 1, 0, 0, 32, 8, 7, 0, 15, 13, 0, 8, 0, 21, 24, 20, 34, 2], [1, 0, 41, 25, 0, 19, 10, 11, 0, 3, 7, 0, 0, 35, 21, 39, 3, 0, 16, 0, 0, 9, 10, 13, 1], [0, 1, 39, 17, 0, 2, 4, 5, 0, 2, 11, 0, 5, 72, 9, 3, 7, 11, 10, 0, 21, 0, 4, 16, 13, 18], [0, 1, 58, 14, 2, 2, 3, 10, 0, 5, 3, 0, 3, 33, 15, 3, 1, 8, 21, 0, 16, 0, 3, 19, 32, 24, 4], [1, 2, 37, 27, 0, 4, 6, 1, 2, 0, 0, 2, 1, 10, 4, 1, 4, 5, 0, 52, 0, 4, 43, 46, 33, 0], [0, 0, 30, 9, 0, 0, 2, 3, 0, 0, 0, 0, 0, 32, 7, 0, 0, 18, 40, 0, 41, 0, 3, 44, 31, 31, 0], [0, 66, 21, 2, 9, 10, 13, 0, 17, 6, 41, 5, 10, 40, 0, 57, 3], [0, 2, 37, 25, 0, 3, 3, 4, 0, 8, 0, 0, 5, 77, 12, 7, 4, 3, 47, 0, 27, 0, 3, 16, 12, 5, 3], [0, 1, 33, 28, 0, 2, 3, 7, 0, 1, 2, 0, 2, 40, 10, 2, 4, 42, 36, 0, 27, 0, 0, 31, 10, 21, 5], [0, 3, 51, 9, 0, 5, 5, 8, 0, 3, 10, 0, 3, 18, 23, 7, 4, 11, 16, 0, 19, 0, 2, 52, 24, 42, 3], [1, 3, 62, 12, 0, 1, 1, 7, 0, 9, 6, 8, 73, 2, 0, 0, 20, 37, 0, 17, 0, 7, 26, 8, 25, 0], [6, 24, 2, 6, 4, 7, 0, 5, 4, 3, 17, 28, 3, 12, 6, 9, 15, 0, 51, 0, 5, 61, 13, 40, 10], [0, 0, 67, 13, 2, 3, 2, 2, 1, 0, 4, 35, 9, 9, 9, 36, 40, 2, 62, 0, 1, 36, 11, 5, 3], [5, 1, 30, 20, 0, 2, 5, 2, 0, 14, 3, 0, 2, 65, 13, 4, 0, 22, 67, 0, 47, 0, 8, 104, 36, 28, 5], [3, 6, 73, 30, 2, 0, 10, 5, 0, 4, 0, 0, 0, 61, 3, 18, 3, 28, 92, 2, 51, 0, 16, 49, 36, 13, 3], [2, 3, 68, 27, 0, 8, 15, 30, 0, 5, 3, 0, 6, 62, 22, 16, 5, 46, 91, 0, 86, 0, 3, 47, 10, 51, 4], [6, 0, 47, 10, 0, 5, 8, 7, 0, 6, 6, 0, 10, 105, 24, 17, 12, 43, 9, 0, 71, 0, 20, 133, 10, 89, 7], [2, 6, 135, 47, 12, 24, 20, 19, 1, 17, 2, 9, 6, 16, 40, 53, 10, 57, 33, 0, 30, 0, 12, 70, 33, 0, 10]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

