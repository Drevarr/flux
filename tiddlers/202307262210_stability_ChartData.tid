created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Klengah", "Brie Cheesebringer", "Il Dim Il", "Kahlianne", "Be\u00eb", "Tribal S", "Arriasa", "Jimbo The Pleb", "Arcanophage Farra", "Sister Elonith", "Newtype Khan", "Grasszanine", "My Birthday Girl", "Xanvias Einzbern", "Cael Saladbringer", "Ryvalia Fazebringer", "Gavann", "Gabe Malhorn", "Sub Train", "Squishy Jellyfish", "Bubble Teabringer", "Crusader Siolith", "Ravioli Ryebringer", "Bella Sassy", "Koralia Danai", "Johosh Icebringer"];
const professions = ["Druid", "Dragonhunter", "Scourge", "Scourge", "Scourge", "Druid", "Druid", "Berserker", "Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Scrapper", "Berserker", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.8114, 0.0, 0.5875, 0.0, 0.0, 1.1995, 0.3398, 0.7512, 0.9058, 0.7938, 2.6533, 1.3545, 0.0, 0.7507, 0.6019, 0.5357, 0.0, 1.2181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5912, 1.9253], [1.3028, 4.4178, 1.225, 1.991, 0.0, 1.2338, 2.0992, 3.2851, 1.252], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.6309, 1.3158, 2.4214, 1.1923, 0.9029, 1.4285, 0.0, 2.8792, 1.7347, 0.0, 0.0, 1.5366, 0.0, 1.4818, 0.0, 0.1061, 0.0], [2.0779, 0.9702, 1.5361, 0.0, 0.5866, 1.9872, 0.5472, 0.8928, 0.0, 5.98, 2.6021, 0.0, 0.0, 0.439, 0.0, 1.0886, 0.0, 1.0608, 0.0], [0.0, 1.2622, 0.0, 2.6112, 0.0, 0.7459, 0.0, 1.5361, 1.2384, 1.1882, 0.2208, 1.2038, 0.0, 0.0, 6.4229, 2.2685, 0.0, 0.0, 0.6037, 0.0, 1.0282, 0.0, 0.0, 0.0], [0.987, 0.8114, 0.5914, 0.5549, 0.6048, 0.7402, 1.0996, 1.3027, 0.8585, 0.6394, 0.7056, 1.5361, 0.7353, 0.0, 0.3974, 0.4925, 1.1904, 1.5504, 1.201, 0.0, 0.0, 0.439, 0.0, 0.5443, 0.7661, 1.4851, 1.6502], [0.7501, 0.3606, 0.7181, 0.0, 1.5158, 0.3499, 0.6796, 0.7459, 0.7938, 2.2344, 0.737, 1.3248, 0.5472, 1.1904, 0.0, 2.7685, 1.2677, 0.7517, 0.7134, 0.0, 0.6048, 0.0, 2.3338, 1.3752], [0.0, 1.2622, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.465, 1.0656, 0.0, 2.3741, 1.1997, 0.0, 0.0, 0.9029, 0.0, 0.609, 0.0, 0.0, 0.0, 2.7005, 1.1525, 1.2106, 1.7842, 0.0, 5.7283, 2.7504], [0.0, 1.713, 0.0, 0.8486, 0.0, 0.0, 4.948, 0.5664, 1.2877, 1.2787, 2.0286, 0.0, 0.0, 1.7664, 1.8878, 1.488, 0.0, 3.6544, 3.0691, 0.0, 0.0, 2.2501, 0.0, 1.4515, 0.0, 0.0, 1.9253], [0.9673, 1.1721, 1.4925, 1.7952, 0.0, 1.41, 2.0492, 2.0957, 2.1104, 1.2254, 0.0, 3.6309, 2.2059, 1.143, 2.3405, 1.0123, 4.0474, 0.917, 4.6511, 3.2693, 0.0, 0.0, 0.933, 0.0, 1.0282, 0.0, 0.0, 0.0], [0.454, 1.8934, 0.0, 3.1334, 0.0, 0.0, 3.0488, 5.3242, 2.7185, 2.3976, 2.8224, 1.9551, 0.9675, 1.9101, 1.8989, 1.5048, 2.7379, 0.0, 5.7585, 5.9381, 0.0, 0.0, 3.7318, 0.0, 1.7237, 0.0, 0.0, 0.0], [1.6384, 1.3524, 0.0, 2.4806, 0.0, 0.0, 3.5986, 3.1718, 2.7901, 1.5451, 0.0, 2.9327, 1.7028, 1.7747, 4.5043, 1.1491, 4.583, 0.0, 5.4263, 5.2709, 0.0, 0.0, 1.0427, 0.0, 2.147, 0.0, 5.4101, 1.7419], [0.0, 4.5982, 0.0, 2.3501, 0.0, 1.6215, 3.5486, 2.6621, 1.7885, 1.0656, 1.5876, 4.6084, 2.7477, 1.2784, 1.0598, 1.6963, 1.3094, 0.0, 4.5403, 3.336, 0.9936, 0.0, 1.4818, 0.0, 2.0261, 1.3133, 8.2742, 4.309], [1.3818, 1.5327, 0.0, 0.6854, 0.0, 1.0927, 3.5486, 4.7011, 2.2535, 2.2378, 1.4112, 2.3741, 0.6192, 2.1808, 2.3405, 2.8181, 3.1546, 1.071, 4.7618, 6.1382, 0.0, 1.225, 2.8538, 0.0, 1.2096, 1.4957, 4.7736, 3.6672], [1.5397, 2.6146, 0.0, 2.6112, 0.0, 0.0, 4.3483, 5.664, 4.2209, 2.2378, 3.1752, 8.0997, 3.3669, 1.895, 5.9174, 4.4597, 6.7258, 0.0, 8.8592, 4.3368, 0.0, 0.0, 1.5915, 0.0, 1.0886, 2.5536, 5.7283, 2.9338], [0.0, 5.1391, 2.7315, 4.0147, 0.0, 1.5863, 6.6973, 10.1952, 5.4013, 0.7992, 1.8522, 8.5187, 1.3158, 2.1056, 8.832, 3.4474, 10.2374, 2.821, 13.5103, 7.6728, 2.088, 0.0, 4.4453, 0.0, 5.8666, 2.3712, 3.3946, 3.6672], [0.0, 0.0, 0.0, 0.0, 5.8868, 11.7953, 11.1581, 2.8258, 4.5821, 8.0262, 11.4513, 2.3763, 6.1382, 2.8454, 9.7018, 14.064, 7.5394, 0.6048, 0.0278, 2.9086, 0.0, 3.4474, 4.6694, 13.8965, 15.8606], [7.619, 2.1168, 21.7854, 1.2771, 4.5872, 8.7437, 8.509, 9.5232, 3.052, 21.1513, 15.9461, 0.8208, 1.3363, 4.5002, 1.1357, 5.5642, 1.0579, 14.7451, 10.2682], [0.0, 5.5899, 0.0, 7.0502, 0.0, 0.2468, 12.1951, 14.3866, 7.7979, 4.4755, 0.0, 17.0373, 10.0233, 3.8954, 6.4032, 7.5787, 7.0234, 2.975, 17.1647, 10.008, 2.1024, 0.9466, 6.8051, 0.0, 8.4672, 0.0, 1.1669, 1.1002], [1.6582, 6.8522, 0.0, 6.3322, 1.3608, 2.538, 7.447, 12.2342, 3.2908, 7.6723, 4.1454, 10.8927, 7.4304, 3.6096, 8.7878, 7.3325, 11.3088, 2.233, 14.1747, 11.0088, 3.1248, 0.0, 5.1038, 0.1997, 9.5256, 0.0, 6.2587, 0.0917], [0.4935, 8.2947, 0.7885, 6.6259, 3.2078, 10.5458, 15.2362, 9.014, 3.9427, 1.323, 20.3889, 10.9134, 0.4512, 5.3875, 3.9946, 8.0352, 20.8191, 11.4091, 0.3456, 0.7238, 5.7075, 0.9485, 4.3546, 0.0, 8.2742, 5.8675], [4.3231, 13.2535, 0.6899, 5.0266, 0.0, 4.371, 8.2967, 7.08, 7.5475, 3.3034, 3.7044, 22.344, 3.9861, 3.4442, 9.4061, 5.2805, 7.0234, 13.7318, 14.7451, 5.4864, 0.2506, 4.7197, 0.0, 6.9552, 0.0, 9.6533, 7.3344], [0.9673, 8.3849, 0.2816, 8.1274, 1.3003, 1.7272, 15.4938, 15.4061, 7.154, 4.955, 0.5292, 20.5285, 7.353, 6.2266, 7.9488, 6.4022, 13.5706, 24.9165, 15.012, 4.5504, 1.392, 7.1893, 0.1872, 5.5339, 2.809, 10.5019, 9.8098], [4.2441, 5.9506, 0.0563, 8.0621, 4.4604, 3.666, 12.7449, 8.2128, 8.4059, 6.5002, 7.2324, 27.6507, 9.0171, 3.023, 7.3747, 7.7429, 15.2371, 3.381, 25.9132, 18.2813, 4.1616, 3.1459, 9.4394, 1.535, 8.9813, 4.56, 18.8822, 16.5024], [2.6649, 13.8846, 2.1683, 8.4211, 0.6804, 8.9887, 13.1447, 16.5955, 6.9752, 3.9427, 8.0262, 31.4213, 15.8283, 3.8954, 6.3149, 7.0589, 16.6061, 26.3561, 16.9469, 2.7792, 2.4778, 10.1528, 0.2371, 6.7133, 4.0858, 20.7917, 18.7944], [4.3231, 14.3354, 3.9846, 10.2816, 3.5532, 4.4768, 11.8453, 16.4256, 10.7668, 5.328, 3.4398, 26.3938, 13.5837, 4.3917, 11.305, 9.2203, 15.3562, 28.0172, 21.217, 3.5424, 3.313, 8.7808, 2.6333, 8.4067, 4.3776, 27.0504, 19.8029]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

