created: 20230524221126000
creator: Drevarr
modified: 20230705163531366
modifier: drevarr
tags: ChartData
title: 202305242211_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Spicy Gyrosbringer", "Band Aidbringer", "Morton Saltbringer", "Brioche Bunbringer", "Bork Borkbringer", "Pie Snarglebringer", "Johosh Of The North", "Xkaet"];
const professions = ["Chronomancer", "Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.7294, 0.0, 0.0, 68.4864, 73.4911, 145.2864, 71.4193, 47.2248, 82.3943, 37.2494, 35.9832, 120.1255], [113.5064, 0.0, 0.0, 24.0192, 298.1313, 140.2273, 13.1341, 0.0, 36.4228, 0.0, 0.0, 238.9132], [162.1058, 0.0, 0.0, 36.4608, 333.9298, 152.2913, 0.0, 0.0, 60.9344, 5.3213, 0.0, 189.1508], [179.0591, 21.2544, 180.5077, 296.9291, 87.561, 19.278, 156.5196, 68.5514, 18.4992, 359.8413], [461.4527, 13.1171, 0.0, 147.6288, 289.0397, 230.1233, 98.4871, 37.9764, 132.1065, 162.04, 100.3356, 421.108], [655.0432, 0.0, 0.0, 177.5232, 502.6941, 348.4279, 59.275, 0.0, 256.0424, 255.4243, 34.7424, 616.4122], [650.8453, 36.3527, 70.3004, 178.5024, 646.0775, 514.3398, 117.0653, 11.97, 364.8186, 317.0893, 178.3368, 598.2194], [664.5694, 42.7462, 71.0287, 222.2784, 769.7622, 458.8196, 112.8014, 88.9812, 354.384, 457.5309, 210.9924, 695.604], [52.7797, 75.6269, 226.0224, 965.0439, 791.4217, 247.9499, 28.3752, 559.2376, 678.4187, 338.0616, 916.057]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

