created: 20230306221045000
creator: Drevarr
modified: 20230705163521376
modifier: drevarr
tags: ChartData
title: 202303062210_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["\u00c1rkantor", "Eibh\u00ebar", "Primal Clone", "Raziel Umbra", "Raelyn Sunray", "Black Raspberry Pie", "Ryvalia Fazebringer", "Cerys Fireblade", "Ark Darkness", "Smol Daddy Tika", "Blanco Padre Guard", "Koralia Danai", "Newtype Khan", "Sygaldry Verdandi", "Kahless The Drunk", "Viral Marketing", "Xanvias Tseli", "Zaylen Harker", "Estryl", "Bella Sassy", "Ravioli Fetabringer", "Arcanophage Farra"];
const professions = ["Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.3022, 0.0, 0.0, 22.7027, 15.0273, 0.0, 58.5714, 0.0, 0.0, 36.8784, 0.0, 7.6832, 28.9092, 43.1631, 22.3543, 0.0, 15.045, 0.0, 38.2195, 30.3408, 0.0, 72.7853, 0.0, 0.0, 13.1789, 33.143, 28.5499, 19.9609, 20.2046, 23.5557, 26.7444, 43.4945], [60.2372, 25.2448, 0.0, 20.5815, 3.3634, 0.0, 23.822, 14.0973, 9.9803, 30.8901, 19.2913, 27.5968, 18.0297, 24.7832, 27.9932, 16.6389, 12.9664, 0.0, 26.8545, 13.32, 64.4918, 0.0182, 1.6934, 24.2885, 4.7376, 26.8809, 6.6622, 13.2912, 9.7114, 43.6531, 28.5572, 16.6423, 18.4626, 18.3312, 19.264], [62.2143, 31.3365, 6.416, 23.7919, 3.234, 6.435, 20.4126, 13.4285, 19.9979, 25.969, 13.0683, 29.0864, 18.831, 24.4868, 21.2131, 17.7062, 17.074, 23.4769, 17.7245, 53.3434, 3.3288, 0.0, 32.8656, 4.9181, 25.8313, 0.0, 17.7091, 19.5264, 42.289, 32.5639, 14.3603, 32.8665, 30.5748, 18.8125], [45.4744, 8.0125, 1.5901, 26.1425, 11.4915, 6.3192, 24.6961, 12.9139, 20.7799, 18.4985, 9.6456, 30.0272, 25.8888, 30.9494, 38.5326, 19.8406, 25.1904, 19.2134, 12.4675, 72.2534, 0.0, 0.0, 32.3846, 5.4595, 25.1316, 6.6811, 20.1802, 14.4115, 46.6738, 37.8092, 11.5773, 25.3064, 25.992, 25.284], [57.2148, 79.0791, 47.1517, 1.2867, 9.8449, 26.4669, 20.4595, 116.8474, 0.0, 7.0106, 78.5568, 7.8058, 68.3393, 7.8246, 66.9427, 21.1507, 172.956], [69.8593, 29.0864, 6.9522, 28.9517, 15.8682, 5.1866, 23.7345, 20.9916, 19.3648, 28.0442, 13.8773, 35.2016, 24.7485, 31.898, 33.6321, 22.3146, 17.47, 1.7539, 21.0406, 6.9974, 42.336, 13.0051, 1.759, 33.5069, 14.7091, 26.4727, 5.3015, 17.447, 19.6992, 27.1858, 34.021, 21.6517, 36.6864, 36.3888, 19.4145], [60.8962, 29.4157, 0.0, 36.4046, 1.5954, 0.0, 31.5586, 16.5669, 12.1775, 27.5699, 14.9352, 38.2592, 20.1255, 37.3527, 45.5141, 24.6916, 25.7348, 32.2253, 9.4483, 55.8835, 11.1446, 0.0, 36.3926, 10.8288, 33.7615, 0.0, 26.2454, 22.3603, 51.8381, 39.0476, 22.3197, 41.4612, 31.2588, 21.8977], [122.1879, 72.3867, 0.0, 50.5077, 0.0, 0.0, 23.9094, 12.2451, 45.1349, 79.7451, 10.019, 27.9104, 6.0099, 34.8625, 64.8476, 17.4151, 7.2255, 42.6349, 62.7994, 165.1104, 0.0, 93.707, 5.4595, 1.9825, 0.0, 31.1501, 28.5466, 107.5738, 110.8048, 65.9014, 38.5167, 48.222, 19.9413], [186.9066, 45.9894, 0.0, 46.208, 9.4668, 30.5368, 69.1914, 0.0, 99.4896, 73.4749, 82.8874, 153.1235, 41.1365, 92.5463, 37.9838, 69.4771, 183.3149, 0.0, 148.0555, 25.0416, 89.3309, 0.0, 103.4093], [83.8312, 98.1803, 33.4299, 42.8255, 0.0, 32.8571, 41.0, 35.1918, 24.355, 82.3538, 45.8013, 54.88, 31.8987, 6.4033, 84.2481, 16.9785, 75.0268, 58.1939, 6.3226, 208.7165, 12.6768, 11.4005, 117.3542, 8.5728, 60.9339, 0.0, 21.2285, 11.5776, 182.3102, 70.2274, 61.1147, 38.5963, 30.6432, 35.819], [137.4778, 49.2822, 3.7535, 81.1793, 7.3735, 5.4311, 62.7676, 27.783, 86.1734, 55.4954, 7.6543, 74.088, 69.7457, 84.7254, 148.0216, 57.0478, 20.5384, 19.314, 39.8664, 41.807, 175.6944, 92.0237, 18.7699, 89.7391, 7.4844, 47.9606, 37.7395, 7.1131, 94.705, 41.411, 87.2197, 39.3984, 50.1165], [197.4514, 22.6106, 48.0425, 27.4674, 95.7249, 19.551, 41.0757, 37.6491, 15.4953, 113.3664, 40.4975, 130.3787, 124.8618, 32.0166, 47.8073, 23.5323, 30.5117, 144.648, 0.0, 101.1619, 11.844, 107.8152, 55.7482, 7.3267, 89.5474, 102.2814, 37.6818, 129.4767, 31.2588, 81.3453], [117.4427, 120.8458, 6.8598, 71.6625, 0.0, 0.0, 25.3977, 84.3104, 43.3743, 70.8736, 44.0418, 75.0611, 74.0444, 75.9181, 36.0287, 60.0765, 0.0, 184.3027, 122.3242, 21.996, 90.7887, 65.6698, 35.1821, 137.3904, 96.8905, 95.3456, 78.8638, 79.1388, 62.7585], [191.6517, 74.3075, 0.0, 67.8214, 8.9474, 0.0, 120.3773, 14.6118, 111.7572, 59.4086, 15.433, 167.4624, 105.4352, 170.0437, 131.9104, 41.4761, 104.0775, 0.0, 124.804, 14.3501, 108.6624, 7.0315, 3.3667, 61.5629, 13.3555, 28.5136, 0.0, 19.8058, 13.513, 45.9917, 38.6834, 29.1102, 48.4642, 28.728, 45.451], [91.7398, 46.9773, 10.4468, 48.6158, 5.39, 5.2638, 87.8134, 0.0, 54.1842, 44.1711, 0.0, 120.5008, 45.9834, 98.3621, 95.1903, 35.8489, 40.4333, 104.8154, 67.8077, 214.9258, 6.685, 0.0, 104.6088, 14.3707, 99.885, 0.0, 29.1658, 64.7654, 164.4787, 129.0902, 39.9082, 95.8939, 51.1632, 69.0042], [138.1369, 48.7883, 0.0, 82.5552, 5.4978, 6.2677, 53.7633, 14.3031, 111.72, 57.3927, 7.7788, 123.2448, 112.0307, 137.4342, 92.975, 55.641, 40.0374, 3.5705, 50.6635, 26.0362, 225.2275, 11.4821, 95.9515, 19.5144, 73.9954, 26.9892, 28.9786, 21.8419, 100.8504, 109.1293, 5.7886, 134.8085, 57.798, 81.4205], [116.9155, 80.7285, 0.0, 87.8296, 0.0, 9.8198, 35.7985, 69.1488, 23.0143, 60.0015, 0.0, 96.04, 31.9603, 107.7892, 102.0376, 54.6223, 51.6676, 0.0, 68.6588, 26.4269, 203.495, 0.0, 10.6193, 128.3362, 15.7694, 75.2782, 51.8544, 12.7181, 204.9163, 113.0632, 56.3279, 141.9707, 123.1884, 80.5175], [94.376, 71.5086, 67.6494, 6.8776, 37.1428, 84.8411, 41.3144, 104.7561, 55.614, 5.1029, 109.1328, 84.2619, 135.2405, 129.3595, 46.036, 74.8289, 0.0, 105.8121, 12.0058, 235.1059, 0.0, 15.3216, 126.8131, 9.3624, 62.3334, 0.0, 45.6019, 17.9021, 165.2582, 134.4811, 41.2997, 90.9599, 86.4576, 66.22], [147.4954, 108.4429, 0.0, 157.4855, 86.5021, 155.4584, 186.8899, 0.0, 158.566, 55.5304, 162.2895, 20.9568, 327.5395, 0.0, 297.6341, 0.0, 128.3986, 0.0, 94.9853, 35.2858, 229.7635, 117.4342, 79.4268, 131.7845, 149.8644, 80.668], [275.0875, 65.5816, 11.02, 73.7837, 24.1688, 11.1068, 108.3571, 29.1721, 59.8819, 80.9309, 7.841, 147.1568, 116.4996, 118.995, 151.6467, 80.09, 6.1863, 117.772, 23.7629, 227.3443, 9.3298, 146.9333, 5.9558, 120.76, 0.0, 96.6326, 42.647, 219.5323, 173.383, 42.8582, 163.2186, 112.86, 93.0843], [269.6833, 129.0229, 10.6687, 98.149, 5.4331, 21.6473, 133.4466, 13.0168, 108.1822, 79.6265, 19.4158, 211.1312, 121.2151, 177.3364, 156.2115, 79.9445, 67.0095, 144.2942, 63.4387, 104.0054, 0.0, 13.729, 154.0675, 16.8072, 114.8124, 26.1009, 53.2397, 85.9853, 164.3813, 212.2121, 94.6777, 141.732, 105.2676, 150.3495], [215.5094, 168.4267, 0.0, 73.8984, 0.0, 92.84, 70.0749, 102.7824, 120.2401, 0.0, 182.9856, 37.2306, 169.2137, 283.6242, 29.4941, 119.6668, 93.9629, 56.9741, 282.5222, 0.0, 184.0474, 50.4893, 175.2799, 0.0, 120.1075, 50.1811, 491.2925, 329.2092, 90.2805, 109.6612, 101.4372, 78.9373]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

