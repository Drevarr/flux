created: 20230327224031000
creator: Drevarr
modified: 20230705163523175
modifier: drevarr
tags: ChartData
title: 202303272240_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Dark Sidiuz", "Arcanophage Farra", "Retropawn", "O Noah Bear", "Emerald Vermilion", "Rozaalyna", "Smol Gluvs", "Al Darasuun", "River No Hug", "Fungus", "Tootsie Pop Rocks", "Be\u00eb", "Flanneryflame", "Khailerian", "Smol Daddy Tika", "Jeckyll Mbs", "Lord Erin The Wise", "Xyntharos", "Sofya De Nova", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Herald", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scourge", "Weaver", "Herald", "Berserker", "Berserker", "Weaver", "Vindicator", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[526.5417, 121.5017, 174.72, 35.2194, 183.0429, 269.9389, 267.9111, 245.3681, 230.6154, 447.264, 0.0, 427.5781], [1632.3571, 502.8473, 525.3804, 651.3162, 0.0], [121.2708, 189.0168, 0.0, 39.1814, 352.5571, 195.6183, 258.8444, 339.3988, 410.6325, 370.1667, 385.768, 17.7879, 515.9531], [167.5429, 364.1374, 199.2, 271.7607, 785.735, 0.0, 585.888, 0.0, 768.3594], [139.8, 137.8626, 261.5778, 966.2209, 505.812, 1290.125, 411.376, 140.803, 355.0938], [640.7546, 665.1795, 96.5417, 533.48, 203.0152, 1019.2188], [9.3542, 106.862, 108.5, 72.8059, 751.6, 981.458, 276.7333, 556.6258, 926.5641, 447.4167], [100.7708, 158.1111, 409.04, 47.9705, 415.7429, 530.5878, 222.8444, 595.5092, 514.8803, 614.75, 0.0, 918.472, 13.7879, 818.7969], [693.0571, 858.3817, 278.4889, 794.9632, 914.5726, 31.3333, 199.9545, 1051.392, 159.5455, 1250.8516], [64.1458, 482.2761, 40.3, 42.962, 816.4429, 1045.6718, 270.6889, 722.5153, 905.4615, 430.7083, 638.168, 403.4545, 1216.1094], [251.1042, 296.9327, 220.72, 76.6624, 819.3286, 665.9618, 489.1333, 811.546, 988.5214, 162.1667, 159.7273, 1284.216, 127.7424, 1237.4219], [615.2083, 324.3704, 159.42, 57.1561, 768.8857, 1443.5725, 943.2222, 1316.0491, 1134.188, 0.0, 1303.2, 102.1818, 293.0703], [122.375, 296.4714, 279.5, 163.4219, 1360.2429, 924.7405, 474.3111, 1011.2209, 1070.9145, 59.75, 48.6364, 1223.88, 311.7121, 1472.8672], [1144.0382, 567.5778, 701.1595, 1520.6838, 94.75, 899.1364, 2869.832, 299.7576, 1980.2422], [1280.06, 100.5949, 1108.3429, 1558.4046, 808.1333, 1523.7546, 970.7949, 399.4167, 323.0, 1048.864, 123.3788, 1862.1328], [276.2083, 492.5421, 206.42, 125.4726, 997.8571, 1405.7557, 645.8889, 992.7607, 1295.2821, 98.5, 109.8636, 1574.784, 308.8485, 1775.9062], [529.5417, 392.4646, 150.58, 84.7806, 812.3571, 1762.0229, 363.4, 975.5337, 1163.6752, 271.9583, 459.8636, 1510.656, 122.3788, 2192.9453], [312.2917, 606.0943, 222.7, 244.3924, 1345.0857, 2328.2366, 538.6667, 1187.9632, 795.3248, 294.8333, 197.9545, 3861.96], [250.2917, 554.7273, 240.84, 209.3291, 1473.6571, 2014.8626, 608.9111, 1345.8834, 1515.8376, 466.125, 338.2727, 1584.352, 271.1667, 2441.125], [1101.82, 292.7553, 3967.5143, 2280.7939, 704.3333, 2972.0552, 1676.4444, 1041.375, 347.0, 3502.576, 937.2576, 4029.4453], [581.6458, 809.5152, 376.02, 451.4008, 2165.6571, 2278.6183, 864.4667, 3242.6933, 1694.9402, 149.1364, 2672.608, 616.4394, 3939.0312], [70.5833, 901.5084, 1553.06, 141.7975, 4779.7143, 2825.3893, 803.4889, 3179.135, 2113.9658, 454.125, 0.0, 4162.488, 200.6818, 5632.1094]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

