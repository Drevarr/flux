created: 20230224230708000
creator: Drevarr
modified: 20230705163520065
modifier: drevarr
tags: ChartData
title: 202302242307_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Kahless The Drunk", "Newtype Khan", "R\u00fana Bierdna", "Abigail Ryn", "Akira Moonbright", "Black Raspberry Pie", "Primal Clone", "Arka\u00f1", "Luck Engi", "Arriasa", "Venomina The Siren", "Project Jupiter", "Zadie Miststep", "Tegan Parker", "Drevarr Moonwillow", "Mike The Archmagus"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Tempest", "Vindicator", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Druid", "Tempest", "Druid", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0374, 0.1493, 0.3017, 0.0811, 0.0857, 0.2105, 0.1417, 0.1871, 0.4706, 0.0, 0.0, 0.0, 0.0, 0.206, 0.0, 0.12, 0.1852, 0.2043, 0.2453, 0.1695, 0.5, 0.0323, 0.0682, 0.0, 0.175, 0.375, 0.2358, 0.2892, 0.1429], [0.0, 0.1765, 0.2069, 0.0405, 0.1857, 0.1579, 0.0472, 0.2339, 0.4706, 0.0, 0.0204, 0.5625, 0.0, 0.1558, 0.0, 0.0, 0.0, 0.1828, 0.434, 0.322, 0.375, 0.4355, 0.0682, 0.0189, 0.2938, 0.2812, 0.4228, 0.1807, 0.0], [0.0748, 0.0236, 0.2749, 0.2157, 0.0, 0.375, 0.3568, 0.0, 0.1867, 0.3704, 0.3656, 0.3208, 0.8305, 0.5547, 0.7581, 0.1818, 0.0943, 0.2562, 0.8958, 0.7967, 0.494, 0.5102], [0.3832, 0.7059, 0.8879, 0.7703, 0.9286, 1.0977, 0.5276, 0.2339, 0.8431, 0.0303, 0.898], [0.3819, 0.0, 0.2, 0.0, 0.6452, 0.6792, 0.5424, 1.3047, 0.2258, 0.1364, 0.1698, 0.4625, 1.5, 0.9756, 0.6145, 0.1837], [0.3645, 0.2941, 0.1207, 0.0, 0.6, 0.5188, 0.2913, 0.0819, 0.8627, 0.0, 0.0612, 0.5312, 0.1156, 0.0541, 0.0667, 0.3333, 0.3226, 0.2736, 0.2203, 0.5781, 0.4839, 0.3409, 0.1321, 0.4062, 0.625, 0.6667, 0.3373, 0.0], [0.2523, 0.2127, 0.2931, 0.2432, 0.9286, 0.4436, 0.3937, 0.0, 0.3529, 0.0606, 0.0, 0.3125, 0.0, 0.2312, 0.0, 0.24, 0.7778, 0.5376, 0.3491, 0.661, 0.9453, 0.4355, 0.0, 0.0, 0.3, 0.4896, 0.8699, 0.3855, 0.1429], [0.1215, 0.2262, 0.3707, 0.0946, 0.1714, 0.6015, 0.3307, 0.2047, 0.4706, 0.2727, 0.3673, 0.0938, 0.3819, 0.0, 0.12, 0.037, 0.6237, 0.8774, 0.7288, 0.4609, 0.2903, 0.2045, 0.1321, 0.2625, 0.7604, 0.4309, 0.5542, 0.7959], [0.2663, 0.0, 0.4267, 1.4074, 0.9462, 0.8774, 1.2203, 0.9453, 1.0806, 0.5, 0.0, 0.7875, 1.2604, 1.0976, 0.7229, 0.7755], [0.2727, 0.5918, 0.8995, 0.0, 0.1067, 0.963, 1.1398, 0.7358, 1.1017, 1.2031, 0.2097, 0.5455, 0.4528, 0.9125, 1.4375, 1.3415, 0.8795, 0.9796], [0.1963, 0.8552, 1.0172, 0.6486, 0.8143, 1.4586, 0.7008, 1.0702, 1.8039, 0.1818, 0.4082, 0.5312, 1.1407, 0.1351, 0.3067, 0.4444, 1.4516, 1.1321, 1.7119, 1.625, 1.3548, 0.2045, 1.1187, 1.7708, 1.4146, 1.4337], [0.3037, 0.5339, 0.8017, 0.6486, 0.6714, 1.8872, 0.8504, 0.5731, 1.5686, 0.3333, 1.2041, 0.4375, 0.8693, 0.0, 0.5467, 1.4815, 1.5161, 1.4717, 1.6949, 1.9062, 0.8871, 0.2727, 0.566, 1.2312, 2.9479, 1.9675, 1.6747, 1.9388], [0.7056, 0.1765, 1.4865, 0.9857, 1.015, 1.126, 1.0468, 1.8824, 0.0606, 0.6327, 0.7188, 0.0, 1.0704, 0.3784, 0.5067, 1.6667, 1.7634, 1.8962, 2.1525, 2.125, 1.7742, 0.4773, 0.2453, 1.3938, 1.0625, 2.3821, 1.7831, 1.551], [0.5888, 0.7964, 1.0948, 1.3784, 1.0143, 1.1353, 0.9685, 1.0643, 1.6667, 0.2727, 0.9184, 0.6875, 1.1608, 0.027, 1.0, 0.3704, 1.7204, 1.661, 1.75, 1.2742, 0.75, 0.3019, 1.6187, 2.2188, 2.3171, 1.4096, 1.0816], [0.6776, 1.0905, 1.2241, 1.5946, 1.5143, 1.3383, 1.0472, 1.3743, 2.2941, 0.4848, 1.0408, 0.5312, 0.16, 1.392, 0.6216, 0.6533, 1.963, 1.7527, 1.6038, 1.8475, 2.3047, 1.7903, 1.5, 0.8113, 1.5312, 2.5312, 2.2358, 1.4699, 1.449], [1.0187, 0.9593, 1.3534, 1.8243, 1.3286, 1.5414, 1.4016, 1.1579, 1.2745, 0.697, 1.7959, 1.125, 0.12, 1.6784, 0.3784, 0.9467, 2.3333, 1.9032, 1.8113, 2.3898, 2.625, 1.7258, 1.2727, 0.8113, 1.9937, 2.8854, 2.7317, 2.0723, 1.5102]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

