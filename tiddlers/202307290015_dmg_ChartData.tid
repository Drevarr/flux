created: 20230729001543000
creator: Drevarr
tags: ChartData
title: 202307290015_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Greyghoul", "Arriasa", "Zaedy Zae", "Cat Wigglebooty", "Tribal S", "Unbreakable Nemesis", "Air One Com", "Koralia Danai", "Wall Knot", "Tegan Parker", "Venomina The Sly", "Mmathuss", "Bella Sassy", "Ryvalia Fazebringer", "Gavann", "Xela Demora", "Yafreisy", "Drevarr Moonwillow", "Klengah", "Sub Train", "Solus Sanctus", "Newtype Khan", "Aronorf Xideliesi", "Indigo Shadowviper", "Kisumaiasu", "Readnull", "Cedryn X", "Luke The Ghastly", "Name Is What", "King Jamls", "Kosa\u00edr", "Daphne Agla\u00e9", "Kisumaiasu", "Readnull", "Grasszanine", "Arcanophage Farra", "Glorious Gluvs", "Rozaalyna", "Yafreisy", "Itty Bitty Mew", "Cerys Fireblade", "Brutal Araden", "Vee Usagi", "Asheena Feres", "Primal Clone", "Mort\u00e4rion", "Rina Of Theros", "Jimbo The Pleb", "Mike The Archmagus", "Johosh The Mighty", "Morton Saltbringer", "Blancoo Padre", "Lord Erin The Wise", "\u00c1rk\u00e1ntor", "Be\u00eb", "Kosa\u00edr", "Mistwalker Cael", "Keypek The Drunk", "Xanvias Einzbern"];
const professions = ["Herald", "Druid", "Druid", "Scrapper", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Catalyst", "Scrapper", "Druid", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Daredevil", "Scourge", "Dragonhunter", "Berserker", "Scourge", "Scourge", "Virtuoso", "Holosmith", "Scourge", "Reaper", "Willbender", "Spellbreaker", "Spellbreaker", "Berserker", "Scourge", "Weaver", "Catalyst", "Berserker", "Renegade", "Scourge", "Virtuoso", "Chronomancer", "Scrapper", "Scourge", "Berserker", "Weaver", "Berserker", "Chronomancer", "Scrapper", "Weaver", "Scourge", "Scourge", "Scrapper", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 27.9858, 21.4796, 6.799, 5.4309], [0.0, 5.1892, 0.3636, 2.4615, 1.105, 0.0, 0.0, 18.8344, 0.0, 20.7778, 13.8194, 12.1444, 28.0282, 0.0, 0.0, 5.2488, 22.6327, 10.7825, 3.6186], [0.0, 0.0, 16.2562, 0.0, 11.985, 0.0, 0.0, 3.8153, 19.7627, 0.0, 23.2917, 10.5092, 0.0, 30.56, 0.0, 11.2899, 10.7796, 6.4694, 1.9209, 5.6454], [6.9432, 7.8065, 14.8726, 71.2797, 25.713, 17.4593, 147.52, 0.0, 23.3478, 20.0948, 14.3469, 10.2438, 10.1742], [13.6556, 1.6757, 41.405, 3.6923, 15.2575, 0.0, 20.1452, 1.8217, 52.7203, 33.037, 5.2917, 18.4068, 39.7606, 89.52, 0.0, 14.058, 8.5972, 6.9592, 6.5321, 12.6309], [34.3839, 31.4082, 22.2438, 29.1], [26.7667, 4.2613, 40.8017, 4.7363, 15.6675, 0.0, 18.0, 5.2229, 30.6356, 13.7407, 7.3194, 42.6404, 0.0, 22.84, 0.0, 18.6087, 14.8033, 14.4694, 24.5667, 13.5969], [25.3, 0.0, 14.9669, 0.0, 46.1, 0.0, 0.0, 1.0318, 18.5678, 20.713, 24.3465, 5.1408, 7.12, 0.0, 9.8986, 33.4171, 10.0714, 18.4827, 25.5577], [6.1556, 35.2973, 90.4959, 27.5824, 16.4825, 3.7159, 18.7742, 32.4459, 32.3305, 22.338, 25.5984, 12.4789, 125.48, 15.2667, 15.5652, 25.8081, 17.3163, 22.5206, 13.6227], [7.5444, 29.3784, 15.9835, 13.2747, 49.1025, 22.5227, 0.0, 3.7707, 32.322, 16.6435, 33.3438, 0.0986, 1.48, 0.0, 11.7971, 35.7227, 13.602, 26.9308, 14.6887], [27.8111, 7.1351, 42.8595, 61.5495, 43.4725, 7.8864, 36.1129, 29.1465, 33.4661, 0.0, 9.4583, 24.2808, 78.4366, 29.68, 0.0, 42.9275, 59.827, 8.4286, 28.6063, 16.8351], [66.6444, 0.036, 4.9091, 90.6923, 50.7725, 0.0341, 21.4194, 6.2803, 33.8475, 0.0, 8.6343, 58.6824, 76.3099, 0.44, 0.0, 11.8551, 30.045, 20.3776, 20.6474, 27.0155], [0.6525, 21.8636, 11.7742, 22.5223, 81.178, 0.0, 13.3102, 37.7848, 33.3662, 10.12, 0.0, 11.7391, 68.8081, 5.4388, 23.5222, 52.7278], [18.5444, 17.7658, 29.157, 8.4396, 76.375, 0.0909, 23.0968, 12.8471, 55.6695, 26.5926, 26.4444, 47.6982, 21.2113, 14.44, 0.0, 9.1884, 28.5237, 30.3571, 39.9967, 45.1237], [48.7333, 1.8829, 18.9587, 6.4725, 108.3475, 0.0, 12.8145, 14.0637, 55.8051, 19.4769, 58.2808, 33.5634, 14.0, 0.0, 13.6377, 55.2062, 7.8878, 31.6837, 34.6124], [0.0, 14.56, 0.0, 16.8841, 69.064, 70.051, 80.4662, 100.4773], [443.2393], [64.9222, 39.1622, 77.2149, 13.956, 60.795, 14.5455, 25.2823, 20.879, 119.5763, 0.0, 20.9167, 60.727, 55.7606, 149.44, 0.0, 60.4493, 47.7678, 17.398, 32.1697, 56.3093], [29.2, 8.6126, 33.0744, 1.5495, 64.3125, 13.1932, 33.3226, 8.0955, 126.8814, 50.5556, 92.5324, 60.5092, 100.0423, 66.4, 0.0, 24.4493, 42.0498, 72.398, 68.0231, 41.7258], [323.8111, 13.9189, 23.6612, 34.6374, 64.055, 23.6364, 27.871, 29.6369, 132.3136, 46.2222, 44.0551, 57.7042, 81.44, 33.6, 46.2319, 43.5664, 69.4388, 53.1549, 53.3485], [87.5111, 7.7297, 83.4711, 15.1429, 116.8825, 16.5455, 45.121, 39.5223, 100.4492, 0.0, 78.2731, 64.2808, 92.9014, 0.32, 0.0, 91.087, 41.5403, 53.7041, 54.2718, 100.1619], [66.9948, 201.7465, 624.28, 0.0, 48.2899, 159.2844, 176.2551, 107.8072, 113.6742], [131.6222, 3.7297, 77.5207, 142.6044, 133.215, 15.8636, 6.7581, 16.9236, 107.2712, 0.0, 18.8611, 101.5066, 74.3099, 43.2, 0.0, 18.7536, 82.0095, 13.6429, 68.4547, 113.1557], [131.9296, 125.44, 120.5333, 66.1304, 147.6848, 96.949, 140.2339, 188.767], [61.6509, 77.662, 400.04, 0.0, 207.8406, 211.2938, 103.051, 166.3344, 121.5412], [507.1333, 47.982, 536.9421, 356.978, 614.3375], [772.7333, 68.8108, 95.4959, 142.3516, 431.0775, 7.6705, 246.5323, 92.0, 631.1864, 5.1157], [530.8778, 128.1712, 252.4711, 134.7363, 140.6925, 8.5, 64.8629, 87.0573, 561.9068, 75.0, 180.125, 349.6063, 196.2817, 554.0, 0.0, 85.4493], [756.8556, 23.3964, 161.9917, 99.9231, 187.37, 0.0, 112.25, 93.9108, 472.2034, 0.0, 14.0278, 125.0445, 174.7299], [546.1, 83.4775, 273.3719, 110.1429, 451.2275, 3.0682, 247.8468, 188.0127, 567.3644, 53.1111, 207.662, 373.4987], [1027.0778, 90.8018, 455.8678, 123.4396, 564.69, 0.0, 276.8226, 134.0318, 1378.9661], [454.7889, 111.9279, 155.1322, 207.5714, 202.085, 57.7045, 207.2177, 145.2038, 413.2712, 188.662, 196.2021, 250.8028, 496.32, 0.0, 173.3043, 294.1303, 123.6224, 93.4267], [1075.1222, 308.1802, 568.2066, 147.8132, 540.8525, 29.8068, 302.5242, 163.4013, 1245.7034, 421.2639], [0.0, 105.7258, 9.4968, 173.0, 308.5093, 223.1759, 259.3662, 262.0, 0.0, 95.7826, 307.3531, 150.3367, 285.7298, 221.5175], [355.6778, 71.3333, 181.2314, 63.5165, 79.7975, 3.0909, 87.8468, 158.6369, 541.9068, 0.0, 221.8333, 226.8136, 185.0141, 0.0, 45.8841, 111.7251, 164.3469, 156.9127, 239.2258], [302.2, 80.2342, 119.9008, 32.3956, 145.75, 0.0, 56.2984, 45.0191, 588.2627, 0.0, 177.6806, 235.1496, 162.0845, 341.4, 0.0, 114.7681, 207.9076, 97.2245, 138.9819, 237.132], [365.3, 61.7748, 333.4959, 73.4066, 197.695, 0.0, 61.7177, 154.7261, 475.4661, 142.8843, 390.0577, 221.5634, 416.84, 0.0, 53.5652, 221.1564, 142.5816, 247.4316, 230.2113], [703.0889, 93.2883, 116.8843, 152.5275, 514.9825, 0.0, 74.2742, 133.3758, 512.5085, 47.7407, 391.5185, 522.769, 352.9859, 705.56, 0.0, 0.0, 244.6303, 147.102, 235.1351], [314.853, 288.338, 18.2, 0.0, 115.7971, 196.1531, 444.4959, 569.3247], [1936.0333, 39.018, 648.4215, 1011.8022, 750.63, 75.8977, 429.2016, 471.9299, 1558.3475, 255.4537], [828.9556, 171.4054, 402.6033, 161.7143, 575.425, 99.1705, 250.9274, 141.7707, 1441.6102, 647.7778, 734.8766], [347.0111, 163.3423, 214.0413, 195.1538, 221.5425, 77.7159, 58.3065, 176.4904, 168.2542, 25.5556, 208.3194, 363.4147, 91.9718, 330.04, 77.9778, 62.7971, 318.5047, 263.3878, 318.9885, 280.9887], [946.4, 26.3243, 471.3471, 101.5385, 323.36, 60.3864, 72.0161, 198.9427, 461.0085, 0.0, 226.5509, 153.6509, 297.9155, 940.08, 0.0, 281.7536, 378.5592, 188.2041, 302.1466, 208.8588], [0.0, 139.3423, 344.7934, 119.3956, 439.4475, 0.0, 263.9516, 76.949, 543.8644, 339.5556, 374.3333, 95.9711, 373.8169, 70.32, 0.0, 371.7844, 237.9796, 289.6277, 404.1897], [539.1111, 173.4054, 387.3719, 133.4286, 307.8375, 39.4091, 358.6048, 113.6115, 573.6695, 80.8889, 368.2963, 401.5328, 142.7183, 492.12, 0.0, 225.3768, 330.9194, 230.3673, 376.9094, 413.3773], [951.2444, 606.6667, 1210.9835, 363.4505, 689.6475, 0.0, 602.1774, 604.7325, 1354.6356, 365.0556, 404.5958, 323.4507, 1953.04, 438.7333, 0.0, 836.5972, 256.0918], [700.0222, 349.1441, 440.9917, 226.7363, 476.8575, 96.9545, 321.371, 236.2357, 735.2966, 99.0741, 369.0972, 532.0997, 498.8169, 387.4, 5.7778, 260.7246, 514.1919, 542.6735, 371.0593, 419.0938], [609.3444, 110.7658, 229.2645, 876.5604, 673.4275, 171.2159, 310.7742, 307.7389, 1001.9153, 53.2963, 411.1852, 520.294, 430.493, 619.64, 0.0, 75.3478, 532.0521, 73.2653, 452.4333, 446.3082], [1397.5556, 456.5405, 430.4876, 1336.6593, 1284.0675, 185.9205, 1067.7984, 752.1783, 1495.9915, 103.7037, 666.7176, 900.0919, 1233.4648, 2204.92, 762.5778, 295.2899], [2046.4222, 292.2793, 1104.1983, 559.5495, 1658.775, 57.2045, 519.7258, 179.0701, 3057.0085, 177.3333, 1105.1528, 755.8583], [735.9889, 176.3604, 540.8843, 270.6593, 643.0825, 136.3758, 975.5763, 191.0741, 715.2824, 612.4908, 0.0, 46.7778, 509.4638, 461.2299, 290.0612, 536.6343, 623.8959], [1505.8889, 200.2072, 651.6942, 401.6044, 701.835, 0.0, 206.5323, 170.0637, 1440.1695, 0.0, 489.1019, 701.7087, 484.1549, 872.44, 132.4, 409.4058, 646.1351, 267.8469, 450.341, 390.7711], [1309.3, 42.5405, 176.9835, 631.4066, 1111.2425, 123.0795, 238.0645, 312.1975, 1402.7458, 140.2593, 605.0046, 876.2861, 393.3944, 783.76, 647.7778, 355.3623, 614.7678, 434.6224, 511.5519, 195.0113], [1011.9889, 311.1261, 448.9587, 683.989, 716.64, 0.0, 353.5565, 239.0701, 1253.6525, 77.1852, 645.7917, 753.6142, 463.0141, 2557.52, 6.2, 392.3478, 645.0735, 208.7245, 503.9967, 647.868], [2488.2889, 239.6216, 609.5537, 581.8571, 224.025, 124.4091, 348.9274, 425.8089, 1306.9576, 751.5972, 1028.189, 1292.3803, 1997.36, 71.7111, 665.7826, 1014.7867, 623.2755, 828.8896, 710.7495], [591.5417, 1349.4042, 1089.2535, 1753.0, 525.3556, 472.2174, 1365.3768, 543.8673, 1359.6837, 1921.8464], [2333.6889, 318.7297, 733.3884, 576.3846, 839.5275, 377.9091, 679.4032, 427.9427, 1960.6949, 104.5926, 818.0046, 1120.0079, 1208.3944, 1192.68, 92.8667, 415.4928, 1285.5592, 460.051, 962.9473, 1130.3722], [2776.6333, 327.2162, 918.7851, 324.3297, 1066.1925, 21.2045, 546.5806, 433.2484, 2011.3814, 1021.6435, 1201.1496, 358.0845, 1679.0, 0.0, 544.8986, 1006.9076, 1092.6633, 894.4843, 1163.832], [1706.0778, 599.5405, 894.6942, 654.033, 1187.19, 0.0, 442.6935, 243.6497, 2880.7881, 275.963, 1453.4769, 1506.5433, 456.0845, 881.24, 0.0, 721.9855, 996.1019, 522.5102, 944.1071, 1493.1155]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

