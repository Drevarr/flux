created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Lord Erin The Wise", "Sylvanas Rodex", "Avatar Shazbott", "Hey Yey Yeah Ah Ah", "Latedoctor", "Gabe Malhorn", "Venomina The Sly", "Daphne Agla\u00e9", "Jerryatric Reflexes", "Urilstormwalker", "Necrotic Windrunner", "Kisumaiasu", "Ateriuz", "Fang Shiyu", "Rafaellagabriela", "Oo Dads Mad", "Gavann", "Marceluuk", "Inedible Plant", "Glorious Gluvs", "Name Is What", "Klengah", "Jimbo The Pleb", "Rina Of Theros", "Crusader Siolith", "Keypek The Drunk", "Mort\u00e4rion", "Tootsie Pop Rocks", "Johosh The Mighty", "Sub Train", "Mister Jekyll", "Sygaldry Verdandi", "Koralia Danai", "Elon Illusionblade", "Tegan Parker", "Vee Nemesis", "Be\u00eb", "Xanvias Einzbern", "Rahani Sunray", "Solus Sanctus", "Arriasa", "Bella Sassy", "Sister Elon\u00edth", "Mistwalker Cael", "Zaedy Zae", "Drevarr Moonwillow", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer"];
const professions = ["Berserker", "Weaver", "Herald", "Tempest", "Firebrand", "Reaper", "Firebrand", "Druid", "Scourge", "Spellbreaker", "Firebrand", "Scourge", "Reaper", "Berserker", "Dragonhunter", "Firebrand", "Berserker", "Firebrand", "Reaper", "Vindicator", "Berserker", "Scourge", "Druid", "Berserker", "Scourge", "Firebrand", "Scrapper", "Scrapper", "Scrapper", "Berserker", "Firebrand", "Scourge", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Scourge", "Berserker", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Vindicator", "Druid", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7, 26, 7, 2, 1, 1, 0, 9], [2, 4, 3, 1, 1, 5, 0, 3, 3, 23, 2, 1, 2, 1, 1, 2], [11, 4, 5, 9, 0, 2, 2, 5, 17], [5, 10, 2, 3, 7, 5, 23, 3, 1, 2, 3, 5], [3, 8, 1, 3, 0, 6, 3, 8, 8, 18, 7, 1, 2, 2, 4, 6], [2, 7, 5, 30, 7, 3, 2, 2, 4, 20], [42, 9, 23, 6, 6], [9, 5, 5, 1, 9, 0, 0, 1, 6, 6, 29, 3, 2, 1, 0, 8, 7], [22, 11, 16, 6, 3, 7, 0, 3, 1, 3, 3, 10, 3, 2, 0, 0, 3, 3], [8, 16, 6, 3, 7, 1, 10, 4, 6, 5, 13, 6, 1, 1, 1, 6, 5], [8, 6, 8, 13, 50, 10, 1, 2, 8, 4, 11], [33, 5, 14, 3, 4, 7, 0, 6, 2, 5, 6, 16, 5, 2, 1, 2, 4, 8], [20, 8, 14, 4, 2, 6, 0, 6, 1, 7, 9, 25, 7, 2, 1, 0, 7, 5], [12, 15, 6, 2, 7, 0, 6, 1, 10, 11, 47, 4, 1, 1, 0, 8], [5, 7, 3, 13, 1, 5, 6, 6, 11, 54, 3, 3, 2, 3, 5, 5], [7, 21, 5, 2, 11, 1, 5, 1, 6, 13, 36, 7, 5, 3, 2, 4, 13], [57, 11, 25, 7, 8, 10, 0, 6, 7, 15], [68, 11, 29, 9, 4, 15, 7, 3, 8], [52, 13, 17, 6, 3, 7, 0, 4, 2, 12, 5, 37, 1, 2, 3], [52, 12, 21, 5, 4, 3, 0, 11, 25, 9, 2, 2, 0, 7, 14], [36, 10, 24, 8, 4, 0, 1, 3, 9, 8, 28, 5, 1, 3, 2, 9, 16], [37, 12, 13, 7, 8, 13, 0, 3, 3, 3, 6, 33, 8, 2, 2, 0, 4, 18], [32, 12, 23, 5, 9, 11, 0, 5, 1, 12, 13, 36, 7, 0, 0, 1, 5, 6], [44, 15, 17, 3, 4, 6, 0, 11, 2, 8, 8, 37, 6, 2, 2, 0, 3, 11], [47, 14, 17, 8, 6, 9, 0, 7, 3, 9, 5, 29, 4, 4, 0, 0, 8, 14], [65, 9, 12, 7, 4, 10, 1, 7, 2, 5, 10, 24, 9, 3, 3, 2, 5, 10], [45, 10, 22, 9, 7, 14, 3, 4, 5, 7, 9, 29, 6, 1, 5, 2, 9, 14], [47, 11, 26, 7, 0, 13, 0, 8, 10, 8, 12, 47, 7, 4, 2, 0, 5], [60, 10, 21, 6, 5, 13, 0, 13, 2, 9, 11, 31, 4, 4, 1, 0, 5, 13], [63, 11, 17, 5, 7, 12, 1, 7, 3, 8, 6, 38, 9, 2, 3, 3, 4, 14], [50, 13, 22, 9, 3, 11, 0, 6, 1, 12, 16, 32, 11, 3, 2, 2, 5, 15], [45, 13, 27, 9, 5, 1, 4, 10, 10, 49, 11, 5, 3, 2, 8, 20], [58, 13, 20, 8, 6, 9, 3, 10, 5, 9, 14, 30, 8, 2, 3, 6, 7, 12], [51, 11, 18, 5, 6, 14, 1, 7, 4, 10, 13, 47, 7, 3, 1, 3, 5, 17], [41, 10, 24, 11, 5, 17, 0, 6, 2, 8, 8, 60, 4, 1, 3, 1, 1, 22], [53, 9, 22, 10, 6, 18, 0, 6, 3, 11, 12, 46, 4, 3, 2, 1, 5, 13], [1, 9, 34, 23, 10, 0, 8, 18, 46, 10, 6, 2, 1, 22, 34], [56, 13, 21, 9, 5, 18, 2, 11, 2, 13, 11, 44, 1, 4, 1, 0, 6, 12], [56, 15, 20, 7, 5, 13, 0, 8, 6, 12, 11, 41, 8, 4, 4, 2, 7, 16], [67, 10, 22, 6, 4, 11, 0, 12, 2, 13, 12, 40, 24, 3, 2, 3, 6], [60, 11, 21, 7, 4, 12, 0, 13, 3, 7, 8, 45, 4, 6, 4, 0, 8, 28], [58, 10, 21, 8, 9, 13, 1, 6, 3, 10, 15, 53, 9, 3, 0, 3, 7, 18], [55, 18, 20, 12, 4, 13, 2, 10, 5, 9, 18, 49, 8, 4, 2, 1, 10, 20], [62, 11, 24, 8, 7, 11, 0, 8, 6, 11, 16, 60, 6, 2, 4, 5, 6, 13], [67, 13, 30, 7, 5, 13, 0, 6, 2, 11, 12, 58, 9, 2, 5, 4, 5, 14], [63, 18, 29, 7, 5, 9, 0, 8, 9, 7, 21, 57, 8, 4, 4, 6, 5, 18], [63, 9, 21, 6, 9, 16, 3, 11, 6, 8, 22, 63, 13, 8, 4, 4, 11, 15], [95, 27, 30, 25, 3, 14, 0, 6, 6, 8, 10, 32, 5, 1, 1, 3, 6, 26], [77, 17, 29, 13, 3, 20, 1, 10, 4, 9, 15, 52, 15, 3, 3, 5, 10, 20], [65, 15, 33, 12, 7, 13, 4, 11, 4, 9, 17, 60, 17, 6, 2, 4, 8, 25]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

