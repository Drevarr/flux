created: 20230625215204000
creator: Drevarr
modified: 20230705163536497
modifier: drevarr
tags: ChartData
title: 202306252152_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Drumina", "Swithblight", "Tootsy Pop Star", "Irish Necroman", "Demon Maddx", "Rozaalyna", "My Birthday Girl", "Mister Jekyll", "Smol Gluvs"];
const professions = ["Spellbreaker", "Druid", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Scrapper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 673, 69, 6419, 917, 8, 2968, 0, 1247, 3203, 5383, 2976, 2978, 0, 0, 0, 1056, 0], [0, 0, 0, 14738, 3259, 0, 0, 0, 2890, 4584, 11824, 0, 0, 0, 0, 10117, 0, 0], [6350, 3133, 15935, 19034, 0, 4105, 0, 5215, 23775, 19073], [563, 3243, 13835, 20027, 11967, 5600, 4044, 22168, 17153, 1057, 9029, 6946, 0, 2988, 27322, 15008, 200], [1482, 4378, 7862, 45522, 12718, 610, 6292, 2905, 19335, 38827, 2150, 780, 3399, 0, 661, 16563, 5877, 4874], [475, 10894, 2091, 30166, 30206, 7, 12232, 84, 7985, 24424, 25315, 1329, 10921, 0, 2268, 21651, 3517, 164], [2459, 52010, 24910, 23523, 145, 5976, 32520, 37916, 37, 6909], [2963, 15292, 6633, 27105, 18366, 626, 13335, 0, 10949, 40703, 12818, 1401, 14641, 0, 1843, 15081, 3757, 2817], [0, 8985, 16554, 57576, 21862, 638, 46580, 19962, 8287, 7316, 0, 202, 29593, 41284, 882], [508, 12304, 8199, 38790, 25417, 0, 25460, 0, 18826, 64163, 38410, 1247, 4949, 0, 2197, 24192, 6012, 5260]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

