created: 20230322220917000
creator: Drevarr
modified: 20230705163522875
modifier: drevarr
tags: ChartData
title: 202303222209_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Amiti\u00e9l", "Ark Darkness", "Gabe Malhorn", "Blanco Padre Guard", "Kiloak", "Viral Marketing", "Zaylen Harker", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[103.0349, 65.2988, 38.87, 0.0, 58.2912, 22.8557, 42.5952, 15.0528, 14.1141, 0.0, 56.8973, 52.3614, 185.542, 28.2477, 25.753, 25.74, 0.0, 30.0233, 42.1266, 37.6977, 148.8326, 0.0, 2.4962, 4.5965, 0.0], [864.78, 95.0912, 38.6294, 182.52, 0.0, 44.3974, 97.3224, 156.6765, 192.1709, 36.7737, 0.0, 77.4562, 0.0, 21.7676], [79.5053, 192.7728, 230.7226, 84.4704, 166.3805, 169.6136, 192.192, 84.819, 141.288, 33.1421, 173.3674, 68.472, 0.0, 92.678, 98.2953, 96.5565, 0.0], [1658.51, 194.5174, 147.9571, 182.052, 47.6212, 171.1269, 118.0128, 237.6074, 254.6438, 131.2889, 89.3099, 140.6578, 0.0, 75.9388], [437.6506, 201.7316, 111.09, 0.0, 40.0224, 144.5069, 91.6128, 223.5341, 143.5545, 27.2314, 183.8285, 147.6468, 1395.422, 64.3264, 132.3389, 69.084, 124.6841, 84.5636, 81.5615, 61.5215, 162.2016, 39.7385, 7.7315, 57.7022, 17.4525, 33.6421], [608.0544, 63.9147, 63.572, 0.0, 200.7984, 181.7856, 135.0144, 143.2838, 185.9273, 46.7501, 197.0918, 183.3678, 1075.9, 91.2456, 135.913, 126.648, 34.899, 90.9103, 112.0132, 237.5373, 87.0566, 90.7645, 78.7067, 107.1418, 0.0, 53.2242], [438.1459, 181.838, 145.728, 0.0, 198.1584, 86.8147, 91.2384, 149.1638, 156.141, 246.8506, 93.051, 1286.614, 61.4597, 148.9853, 149.94, 32.0487, 63.2054, 84.7072, 286.236, 257.5584, 48.7399, 117.8501, 56.4437, 15.6099, 47.3234], [1137.3466, 158.4976, 152.835, 0.0, 317.1696, 192.5222, 81.8208, 176.2589, 138.1471, 241.7395, 136.7982, 1670.284, 226.1213, 80.3923, 136.188, 165.2838, 85.6649, 95.0199, 329.6093, 172.2125, 82.7811, 103.5579, 118.3046, 0.0, 21.9278], [854.0006, 175.1616, 124.039, 0.0, 365.7984, 257.5411, 204.336, 221.088, 190.9681, 8.5488, 248.6246, 177.576, 1196.888, 395.3976, 271.1405, 190.224, 156.6981, 209.0907, 203.3361, 256.7365, 71.9136, 60.4382, 129.7567, 102.1349, 4.0037, 26.9691], [1107.8726, 128.8064, 73.991, 23.92, 285.4368, 216.576, 209.8656, 189.8064, 163.2286, 123.0451, 173.607, 1766.912, 214.7243, 166.3661, 196.02, 47.6907, 167.0117, 162.5392, 311.5312, 268.8998, 56.9198, 143.7175, 91.8202, 31.4609, 64.6617], [1227.0067, 247.6796, 189.796, 115.184, 363.3168, 275.0515, 274.0032, 261.025, 258.6363, 27.8429, 286.6829, 216.2664, 2322.726, 325.8272, 185.2157, 86.976, 232.1968, 144.2335, 102.4788, 385.1748, 271.1808, 45.5609, 108.5503, 98.3866, 0.0, 50.7619], [1367.1936, 246.0784, 161.92, 0.0, 487.4496, 244.823, 167.3568, 160.9238, 192.0373, 278.9952, 247.6656, 2499.336, 269.4018, 238.9248, 122.904, 242.7986, 117.8617, 182.9701, 405.425, 313.6954, 104.3203, 146.4125, 182.2997, 0.0, 32.5494]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

