created: 20230524221126000
creator: Drevarr
modified: 20230705163531554
modifier: drevarr
tags: ChartData
title: 202305242211_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Queen Josie", "Baelin Fishbringer", "Primo Pobre", "Soxx", "Bubble Teabringer", "Pieca Pizzabringer", "Blanco Padre Guard", "Bura Beignetbringer", "Bella Lunabringer", "Sister Elon\u00edth", "Ravioli Ryebringer"];
const professions = ["Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[207.4761, 0.0, 0.0, 52.5312, 111.3731, 25.036, 55.3538, 0.0, 84.7568, 99.6447, 61.9836, 117.4501], [355.27, 353.2952, 287.64, 905.6229], [300.0424, 140.3641, 0.0, 391.299, 322.2019, 256.8456, 897.5967], [689.5957, 39.8983, 23.5906, 252.3456, 583.951, 112.597, 137.052, 0.0, 154.3539, 310.3072, 23.2368, 589.3906], [532.0107, 0.0, 0.0, 207.1296, 860.4896, 369.1831, 266.3758, 0.0, 249.9392, 52.9004, 31.7532, 421.108], [664.2464, 0.0, 296.928, 725.6537, 179.5381, 0.0, 401.143, 167.6744, 23.97, 950.0345], [752.4036, 0.0, 0.0, 163.7568, 729.4179, 175.6409, 119.5017, 2.9736, 518.4835, 314.2721, 194.298, 772.9231], [1204.3301, 45.9524, 39.3842, 359.712, 950.6488, 487.6175, 334.9018, 40.2948, 508.9348, 425.4985, 408.054, 1242.4558], [1343.3472, 45.9241, 65.2596, 233.7984, 1168.6597, 781.3036, 286.7813, 96.4152, 461.6836, 389.7099, 335.6364, 882.0794], [1332.3679, 432.5184, 1336.6664, 655.4752, 261.9597, 0.0, 444.6535, 695.2174, 235.0188, 1163.5315], [1304.4353, 0.0, 25.6183, 430.9056, 1467.7381, 992.0986, 370.1927, 0.0, 561.8955, 501.6667, 362.088, 971.4377]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

