created: 20230628220723000
creator: Drevarr
modified: 20230705163539671
modifier: drevarr
tags: ChartData
title: 202306282207_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Black Raspberry Pie", "Cat Wigglebooty", "Rahani Sunray", "Eibh\u00ebar", "Primal Clone", "Miphest\u00f6", "Vopiscus Zergherdus", "Tootsie Pop Rocks", "Fribble Bibble", "Drumina", "My Birthday Girl", "Demon Staph", "Drevarr Moonwillow", "Tegan Parker", "Arriasa", "Tribal S"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Druid", "Scrapper", "Druid", "Scrapper", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0588, 0.1068, 0.3291, 0.2444, 0.2054, 0.433, 0.0972, 0.0182, 0.5, 0.0, 0.125, 0.1481, 0.2667, 0.6207, 0.3762, 0.0, 0.1221, 0.2284, 0.2541, 0.0, 0.1901, 0.3778, 0.0, 0.2361], [0.0, 0.0, 0.2136, 0.4873, 0.0556, 0.2321, 0.2784, 0.0417, 0.5636, 0.3125, 0.0, 0.3088, 0.4815, 0.0, 0.7586, 0.3069, 0.0, 0.0611, 0.0185, 0.5164, 0.2195, 0.314, 0.0, 0.0, 0.0278], [0.0, 0.0, 0.2215, 0.0222, 0.0536, 0.0412, 0.0, 0.0, 0.0625, 0.0, 0.3456, 0.787, 0.6267, 0.8621, 0.6139, 0.0, 0.0076, 0.6296, 0.6803, 0.0, 0.2645, 0.6, 0.0, 0.6111], [0.9114, 0.2222, 0.4107, 0.6701, 0.0278, 0.0, 0.3594, 0.0448, 0.5588, 0.2685, 0.8933, 0.4828, 0.297, 0.0, 0.2901, 0.1358, 0.2951, 0.1707, 0.5785, 0.2889, 0.5139], [0.0, 0.3592, 0.6076, 0.1556, 0.8393, 0.3299, 0.0, 1.2909, 0.5625, 0.0, 0.4559, 0.4537, 0.52, 1.0, 0.8119, 0.0, 0.2977, 0.4938, 0.1557, 0.4024, 0.5455, 0.5556, 0.0, 0.0], [0.8056, 0.0874, 0.7911, 0.5889, 0.7768, 1.0722, 0.7778, 0.7273, 0.2812, 0.0, 0.5588, 0.7037, 0.4533, 0.3793, 0.5446, 0.0, 0.0, 0.3642, 0.2049, 0.0244, 0.2149, 0.4444, 0.0, 0.7778], [0.1569, 0.4175, 0.9367, 0.6333, 0.6786, 0.5361, 0.5833, 0.5455, 0.0781, 0.0, 0.5882, 0.5, 0.3867, 1.0, 0.7129, 0.0, 0.3893, 0.4877, 0.7213, 0.1098, 0.6529, 0.5556, 0.0408, 0.6389], [1.2136, 0.7405, 0.7556, 0.9018, 1.2577, 0.8333, 1.0545, 0.1562, 0.0, 0.0, 0.0, 0.0, 0.069, 0.0, 0.0, 0.2901, 0.9691, 1.4426, 0.2073, 1.1736, 1.0444, 1.1944], [0.0, 0.6408, 1.5886, 0.7444, 0.625, 0.9794, 0.3889, 0.9636, 1.7188, 0.0, 0.7206, 0.6389, 0.9467, 0.8276, 0.2178, 0.0, 0.2901, 0.6049, 0.582, 0.378, 0.6033, 1.3778, 0.0, 0.25], [0.835, 1.0506, 0.4111, 0.9286, 0.6598, 0.5417, 0.3818, 1.0469, 0.0448, 0.9191, 0.7963, 0.72, 0.9655, 1.099, 0.0, 0.3893, 0.9074, 0.6475, 0.122, 0.8678, 1.0667, 0.0408, 0.9444], [1.0194, 0.9177, 0.4333, 0.7768, 1.5979, 0.1111, 1.4727, 0.9062, 0.0, 0.5588, 0.5093, 0.7333, 2.5517, 1.3267, 0.0, 0.7557, 1.0247, 0.7131, 0.0244, 1.1653, 0.9111, 0.1429, 0.8194], [0.0833, 0.0, 0.8738, 1.7468, 0.8111, 1.6071, 1.4433, 1.2361, 1.1091, 1.7031, 0.0, 0.9853, 0.2778, 0.8, 1.3793, 1.2475, 0.5878, 0.6975, 1.2213, 0.2805, 0.6198, 1.8, 0.0204, 1.375], [0.8056, 0.2549, 1.3689, 2.2089, 1.1667, 0.1071, 1.5155, 0.5139, 2.1273, 1.6139, 0.0, 0.2214, 1.6049, 2.0164, 0.0854, 1.8182, 3.0889, 0.0, 1.7361], [1.3056, 0.0, 1.6699, 2.1709, 1.0444, 1.2321, 1.3196, 1.0, 0.8909, 0.9531, 0.0448, 0.9485, 0.8796, 0.6533, 1.4828, 1.9604, 0.0217, 0.9237, 1.5185, 0.9836, 1.0854, 0.7025, 3.0444, 0.0, 2.5833], [1.0583, 2.1835, 1.0333, 1.6696, 1.1443, 1.2364, 0.4219, 0.1194, 0.7647, 1.463, 1.16, 2.069, 1.6238, 0.0435, 0.7252, 1.4691, 1.877, 0.7317, 1.5207, 2.2889, 2.4861], [0.0, 1.2233, 2.8101, 0.3778, 1.9107, 1.7423, 0.0, 1.0364, 2.0156, 0.0746, 1.2868, 1.7222, 1.6667, 2.4752, 0.0, 0.1221, 1.1975, 1.2049, 0.4268, 0.9669, 1.5778, 0.102, 2.2778], [0.0, 1.7767, 3.2975, 1.8444, 1.1071, 2.3608, 2.2083, 2.6, 3.4219, 0.0149, 1.3897, 2.0648, 2.0667, 3.6552, 2.5446, 0.0, 1.9924, 2.3951, 2.3852, 0.5244, 1.7603, 2.2222, 0.4082, 2.0556]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

