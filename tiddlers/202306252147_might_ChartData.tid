created: 20230625214748000
creator: Drevarr
modified: 20230705163536381
modifier: drevarr
tags: ChartData
title: 202306252147_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Imalou", "Caelon Cai", "Irish Necroman", "Be\u00eb", "Seiker Novus Terra", "Rozaalyna", "Traidoruns Maximus", "Oo Dads Mad", "Elonith Primal", "Air One Com", "Tegan Parker", "Tika Fiery", "Gestern Yesteryear", "Koralia Danai", "Aronorf Xideliesi", "Drevarr Moonwillow", "Bellatrix Astra", "Solus Sanctus", "Bella Sassy", "Tacitus Kilgore I", "Sakis Ranger", "Tribal S", "Grasszanine", "Newtype Khan", "Blancooo Padreee", "K\u00f4sair", "Zayde Sunsabre"];
const professions = ["Firebrand", "Reaper", "Reaper", "Reaper", "Tempest", "Reaper", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Druid", "Druid", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.5574, 2.6664, 10.2787, 4.1256, 18.6346, 17.2245, 47.5026, 26.8432, 16.0406], [15.3754, 3.3451, 4.4621, 3.132, 15.1603, 15.5683, 30.5838, 26.8432, 8.9578, 3.1544, 11.7504, 3.2186, 30.6605, 1.8275, 3.5306], [20.617, 5.9146, 8.7648, 2.592, 19.74, 17.5557, 39.6939, 30.9518, 10.3118, 2.6827, 12.6072, 1.7666, 33.4165, 2.0322, 3.7642], [22.8883, 6.157, 9.0835, 1.6848, 19.5821, 19.7088, 40.67, 33.417, 14.2699, 0.0, 8.568, 2.1538, 30.6605, 2.0614, 1.8951], [16.4237, 4.0238, 0.0, 0.0, 21.9509, 3.9749, 14.9666, 128.7377, 25.415], [20.9664, 5.4782, 7.968, 1.8576, 21.793, 17.887, 41.6461, 36.43, 11.9784, 3.7145, 10.0368, 1.7666, 32.7275, 1.3889, 3.894], [36.167, 2.8118, 9.96, 0.0, 38.0587, 30.3085, 52.7083, 41.0865, 19.8946], [54.6874, 26.2277, 13.3862, 1.8576, 31.1102, 29.8116, 91.7515], [44.3789, 8.5325, 15.2189, 0.0, 27.3202, 4.6374, 40.67, 32.3214, 16.8739, 0.0, 35.1288, 0.0, 25.8375, 0.0], [41.4086, 0.8242, 10.2787, 3.7584, 17.2133, 25.0086, 61.493, 48.2082, 15.2074, 3.3902, 3.3048, 4.235, 52.7085, 1.6959], [11.5315, 4.0723, 20.3184, 10.8, 35.2162, 28.9835, 105.0913, 15.6129, 13.5408, 0.0, 14.688, 16.2382, 47.1965, 0.0, 0.0], [15.8995, 13.6714, 18.8842, 7.6248, 35.3741, 40.5769, 71.2538, 39.7169, 20.5195, 0.0, 8.0784, 1.331, 62.3545, 2.7924, 3.4786], [26.7322, 2.424, 3.5856, 3.0888, 33.1632, 31.6334, 75.8089, 75.3253, 25.8317, 3.6555, 18.7272, 2.9524, 54.7755, 3.538, 11.0849], [26.3827, 10.5686, 11.713, 6.4584, 32.0578, 29.646, 64.0959, 86.5556, 25.1026, 0.0, 26.4384, 0.0, 75.4455, 0.0, 0.0], [54.6874, 12.5563, 16.6531, 1.0368, 25.1093, 27.6585, 95.3305, 96.6902, 33.4354, 1.6214, 8.2008, 0.6776, 73.723, 0.9086], [47.6986, 15.756, 25.896, 4.0608, 41.6909, 40.9081, 74.5074, 50.3994, 21.9778, 5.9844, 12.3624, 8.47, 81.6465, 6.4036, 15.1866], [24.4608, 6.4478, 27.3302, 3.78, 25.8989, 48.1954, 88.8233, 81.0774, 23.6443, 0.0, 46.3896, 5.0336, 95.771, 0.9211, 6.0487], [42.1075, 6.157, 21.3542, 8.316, 34.4266, 49.1891, 122.01, 109.564, 47.2886, 2.5353, 44.5536, 3.3154, 124.709, 0.0, 7.788], [56.9587, 7.5144, 25.0195, 5.6592, 60.4834, 83.8037, 131.7708, 121.89, 44.3722, 6.4856, 50.6736, 10.3092, 145.379, 0.8333, 5.3737], [296.0967, 100.7227, 14.1209, 52.632, 21.538, 326.9305, 13.4796, 16.7702], [81.769, 31.609, 41.1946, 15.8976, 93.4886, 66.248, 162.68, 140.7897, 57.913, 4.0682, 12.1176, 3.1218, 184.3075, 2.3538, 0.0], [134.5344, 38.2992, 66.6125, 0.0, 116.2291, 109.6404, 223.5223, 212.2802, 70.2038, 0.0, 13.3416, 9.8252, 209.456, 0.0], [131.04, 31.8998, 66.2938, 14.4936, 108.9648, 105.0031, 268.0966, 182.9719, 82.4947, 9.9348, 32.0688, 3.6784, 215.3125, 5.1755, 13.1877], [143.6198, 26.7125, 59.2022, 0.0, 122.7038, 119.2464, 239.465, 200.776, 85.8278, 6.574, 28.152, 6.3404, 241.839, 6.8275, 26.8426], [179.9616, 47.0741, 60.4771, 5.2272, 153.6562, 130.3429, 323.4078, 220.2236, 69.5789, 11.9984, 41.7384, 8.107, 265.265, 11.4621, 15.8875], [122.6534, 56.3338, 93.9427, 6.0696, 148.2869, 71.7135, 374.4894, 271.7187, 97.1813, 2.7122, 24.1128, 317.629, 8.9913, 8.9822], [151.657, 33.6936, 69.0029, 9.5472, 163.6051, 174.7291, 322.1064, 236.6582, 92.2858, 0.4422, 52.8768, 20.7152, 300.0595, 4.5614, 14.4338]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

