created: 20230626011254000
creator: Drevarr
modified: 20230705163537617
modifier: drevarr
tags: ChartData
title: 202306260112_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Pale Pam", "Tegan Parker", "Tootsie Pop Rocks", "Tribal S", "Gestern Yesteryear", "Artakama Nahid", "Drevarr Moonwillow", "Demon Staph"];
const professions = ["Druid", "Tempest", "Scrapper", "Druid", "Firebrand", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2889.5185, 2306.4588, 3771.7955, 1425.2826], [2282.6721, 114.3448, 1365.6167, 2755.2778, 1304.5882, 1693.1136, 2698.8261], [2.7945, 230.3696, 0.0, 66.035, 49.8019, 358.9247, 11.1481, 212.2484, 39.2321, 519.0882, 337.2456, 3180.8056, 44.7547, 878.1754, 186.4638, 31.3333, 82.925, 618.7857, 8.9474, 3.0, 2718.9836, 1727.2874, 642.3667, 250.6852, 102.8588, 0.0], [1324.0822, 228.8913, 1612.5341, 959.435, 1307.0341, 688.2581, 544.732, 125.1875, 663.5059, 1213.7778, 2020.3208, 400.5789, 2729.9565, 173.0952, 1011.6, 573.1607, 0.0, 464.8378, 1125.8525, 7.2989, 2036.7167, 2504.3519, 1057.5529, 2561.0, 2438.4783], [614.2603, 267.2609, 1392.6705, 762.665, 1686.8328, 563.6989, 34.4444, 328.7451, 151.8661, 1005.0676, 263.0263, 1578.3889, 1740.6226, 1297.4035, 1719.1449, 232.881, 484.875, 336.1071, 144.3514, 2724.3443, 1151.977, 1437.3833, 2849.0185, 233.2941, 1302.4091, 2378.5652], [1695.6712, 448.6957, 1213.0, 710.46, 680.0372, 425.3441, 389.7974, 264.6339, 1144.15, 502.3333, 2360.4167, 1474.8868, 1918.2807, 2663.5652, 370.1429, 639.075, 1029.5714, 172.4211, 491.3243, 3543.9344, 1791.0, 1871.7833, 2236.1296, 1329.7294, 1708.9318, 3114.087], [1515.4658, 275.4783, 2295.7045, 1224.73, 2999.0619, 761.3871, 16.8889, 794.3725, 263.4018, 1824.4794, 393.5526, 2209.25, 1043.3208, 2129.5439, 1803.4348, 280.4762, 1399.95, 945.625, 408.3421, 562.6757, 3163.2131, 1931.1379, 1874.8833, 3599.1481, 3125.1176, 2016.75, 3563.0], [1632.8219, 181.8043, 751.8182, 1901.005, 4562.548, 919.7312, 1406.7451, 188.125, 1248.6971, 485.9649, 3630.8333, 1555.9811, 1324.1053, 1731.3333, 11.9048, 2160.825, 1135.625, 50.9737, 502.0811, 4467.0492, 1968.1724, 1592.0667, 168.537, 3173.7294, 3122.3636]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

