created: 20230422000344000
creator: Drevarr
modified: 20230705163526108
modifier: drevarr
tags: ChartData
title: 202304220003_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Naiama Supreme", "Aronorf Xideliesi", "Zaylen Harker", "Newtype Khan", "Eibh\u00ebar", "Sarah Dresser", "\u00c1rkantor", "Ark Darkness", "Domina Flagbringer", "Morton Saltbringer", "Johosh The Great", "Rahani Sunray", "Skye Nightroad", "Venomina The Siren", "Tegan Parker", "Mac Saharlot", "Zadie Miststep", "Drevarr Moonwillow", "Elonith Primal", "Stoic Rapidfire"];
const professions = ["Druid", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Tempest", "Vindicator", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Druid", "Tempest", "Scrapper", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 447765.24, 191266.5, 0.0, 0.0, 188450.73, 0.0, 301937.4], [80757.6, 38368.4, 1576.04, 8673.96, 0.0, 46507.94, 7426.32, 103788.0, 2268.45, 1512900.0, 0.0, 0.0, 20092.8, 3819.69, 85034.88, 89824.05, 25301.76, 0.0, 105035.13, 75188.25, 46742.4, 0.0, 62979.06, 0.0, 24419.7], [230796.72, 42259.2, 0.0, 20239.24, 0.0, 97811.24, 2960.32, 117472.95, 0.0, 2026620.0, 0.0, 0.0, 0.0, 10610.25, 54432.0, 57172.68, 22260.48, 102281.4, 31901.25, 0.0, 0.0, 40407.78, 0.0, 10449.0], [0.0, 1742.4, 40549.0, 19369.68, 158444.1, 4536.9, 1082160.0, 0.0, 0.0, 46892.4, 20230.21, 95034.24, 53063.94, 24879.36, 97648.14, 118827.75, 249350.4, 0.0, 37813.38, 0.0, 164320.2], [0.0, 85569.2, 37850.38, 0.0, 85559.04, 58440.27, 36558.72, 75312.33, 139167.0, 264988.8, 0.0, 123396.15, 0.0, 432046.8], [16485.92, 316302.3, 13674.6, 2782620.0, 70623.0, 0.0, 121246.8, 3819.69, 151603.2], [0.0, 71152.8, 9539.12, 179020.8, 270739.74, 50540.16, 388625.61, 215589.0, 0.0, 204839.1], [105713.52, 34761.6, 18963.32, 55851.84, 0.0, 58390.56, 5946.16, 155891.25, 0.0, 2259900.0, 0.0, 0.0, 65964.0, 37267.24, 37336.32, 86764.35, 929.28, 101844.3, 70359.0, 202780.8, 0.0, 37813.38], [0.0, 22123.6, 0.0, 52043.76, 0.0, 63750.08, 0.0, 58506.3, 0.0, 4180680.0, 0.0, 0.0, 43304.4, 0.0, 14999.04, 40825.14, 6526.08, 77322.99, 47869.5, 77932.8, 5529.6, 80134.53, 0.0, 62848.8], [169287.36, 49046.8, 7880.2, 93721.08, 0.0, 190897.64, 22534.16, 169911.0, 15943.05, 1083060.0, 0.0, 82993.2, 33831.54, 93703.68, 72340.05, 14931.84, 1837.99, 181921.02, 93659.25, 140227.2, 0.0, 60676.53, 9806.28, 233206.2], [64302.48, 35642.0, 23666.02, 55111.38, 6996.0, 117204.24, 11917.84, 90521.55, 13674.6, 3904560.0, 0.0, 0.0, 35576.4, 11459.07, 97372.8, 65346.45, 15396.48, 120115.08, 62392.5, 140227.2, 5529.6, 40051.05, 0.0, 127284.3], [0.0, 60463.6, 15760.4, 78982.4, 0.0, 111950.5, 52418.08, 116719.65, 18211.5, 2456640.0, 35154.0, 0.0, 60002.4, 22776.67, 52133.76, 91878.42, 8954.88, 0.0, 53719.59, 54531.75, 376876.8, 1843.2, 137795.07, 0.0, 202517.1], [194364.72, 132542.8, 74658.54, 132507.08, 0.0, 283737.22, 81051.52, 432980.1, 38787.3, 8328420.0, 150318.0, 0.0, 72588.0, 13500.28, 142894.08, 323497.71, 43105.92, 0.0, 177943.41, 121683.0, 327283.2, 5529.6, 43650.78, 0.0, 139320.0], [197380.0, 36325.18, 150595.46, 1742.4, 253589.92, 37233.68, 426493.35, 32045.85, 6569640.0, 0.0, 0.0, 131320.8, 71139.2, 181802.88, 308767.44, 48533.76, 333682.14, 150870.0, 374544.0, 5529.6, 197660.85, 0.0, 351125.1], [325034.16, 65765.04, 568615.95, 36454.95, 14054940.0, 96705.0, 0.0, 57987.6, 340704.0, 343342.05, 70033.92, 426565.89, 284749.5, 937008.0, 14774.4, 51466.41, 0.0, 484756.2], [177909.6, 174546.4, 85589.14, 166991.36, 12223.2, 314907.06, 83756.64, 638212.5, 11374.2, 13253400.0, 79128.0, 0.0, 160770.0, 0.0, 364129.92, 276815.43, 90710.4, 0.0, 385609.62, 417571.5, 654998.4, 5529.6, 174473.4, 0.0, 464400.0], [0.0, 268399.12, 57156.0, 329222.62, 96669.76, 598873.5, 64059.75, 12225060.0, 150318.0, 2794.5, 122985.6, 43168.56, 392918.4, 444967.8, 84311.04, 603241.71, 295183.5, 1103241.6, 7372.8, 225420.93, 38474.4, 507124.8], [145242.24, 208257.2, 98324.56, 134481.64, 58449.6, 350061.28, 140921.44, 702661.5, 102623.4, 13555080.0, 274743.0, 0.0, 153870.0, 17400.81, 372758.4, 387576.57, 92146.56, 469663.95, 212451.75, 1460246.4, 30124.8, 190364.1, 19237.2, 555499.8], [427711.68, 226518.4, 112890.22, 290824.48, 17793.6, 387084.28, 154957.44, 608624.55, 31886.1, 15024960.0, 116550.0, 3726.0, 147742.8, 48665.68, 351308.16, 503364.36, 105008.64, 1837.99, 416949.69, 364203.0, 875059.2, 29491.2, 184591.56, 23976.12, 546792.3], [637499.28, 204849.2, 90291.84, 335957.28, 34504.8, 502278.7, 136659.6, 865081.35, 63804.15, 16112880.0, 194292.0, 931.5, 201342.0, 104708.01, 567624.96, 363798.33, 86570.88, 756926.07, 348340.5, 1474329.6, 37987.2, 288140.55, 23976.12, 656042.4]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

