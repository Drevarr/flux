created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Klee Flamepumpkin", "The Fancy Cheese", "Daring Deathblade", "Vampdru", "Sister Elonith", "Victoria Raskae", "Gabe Malhorn", "Arcanophage Farra", "Blancooo Padreee", "Bella Sassy", "Venomina", "Daphne Agla\u00e9", "Gavann", "\u00c1rkantor", "Mort\u00e4rion", "Glorious Gluvs", "Tribal S", "Bodger Bloddger", "Mmathuss", "Kahlianne", "Zaedy Zae", "Arriasa", "Skyew\u00edng", "Mister Jekyll", "Bombmaker Caelon", "Black Raspberry Pie", "Be\u00eb", "Tika Fiery", "Drumina", "Newtype Khan", "Primal Clone", "Mememonoko", "Solus Sanctus", "Aronorf Xideliesi", "Drevarr Moonwillow", "Gestern Yesteryear", "Lord Erin The Wise", "Mesmerizing Dark", "Arch Payne", "Artakama Nahid", "Xanvias Einzbern", "Regis Hawkesburne", "Eibh\u00ebar", "\u00c1rkantor", "Johosh The Mighty", "Mike The Archmagus", "Grasszanine", "Ryvalia Fazebringer", "Duke Silvver"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Reaper", "Druid", "Berserker", "Renegade", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Scourge", "Scourge", "Firebrand", "Herald", "Scrapper", "Berserker", "Druid", "Berserker", "Firebrand", "Scourge", "Druid", "Druid", "Druid", "Scourge", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Druid", "Spellbreaker", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Weaver", "Chronomancer", "Berserker", "Tempest", "Berserker", "Berserker", "Chronomancer", "Vindicator", "Berserker", "Weaver", "Spellbreaker", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 0, 6, 18, 0, 7, 0, 2, 0, 1, 0, 2, 0, 2, 4, 1, 0, 0, 3, 20, 1, 3, 0, 0], [56, 20], [4, 0, 8, 1, 9, 0, 3, 0, 12, 0, 11, 2, 0, 1, 0, 6, 4, 2, 0, 1, 1, 0, 2, 6, 6], [0, 0, 0, 0, 5, 0, 3, 0, 0, 4, 0, 1, 0, 1, 6, 6, 3, 2, 0, 48, 0, 4, 0, 1], [7, 0, 1, 31, 31, 0, 16, 4], [2, 0, 11, 21, 8, 0, 25, 12, 3, 3, 3, 0, 17, 22, 1], [5, 0, 3, 67, 15, 0, 0, 0, 6, 0, 27, 8], [0, 1, 4, 61, 0, 1, 0, 0, 0, 0, 13, 0, 2, 3, 28, 1, 0, 3, 11, 0, 9, 0, 2], [107, 27, 5, 1], [87, 26, 7, 38], [0, 0, 0, 0, 2, 0, 20, 7, 6, 1, 0, 0, 0, 1, 0, 44, 0, 4, 1, 2, 3, 2, 0, 21, 0, 7, 38, 9], [3, 0, 4, 6, 42, 0, 6, 7, 7, 3, 29, 0, 0, 4, 0, 11, 0, 0, 5, 9, 6, 0, 6, 7, 8, 5, 5], [0, 0, 4, 5, 53, 1, 0, 4, 1, 19, 0, 0, 3, 24, 0, 0, 2, 36, 2, 8, 6, 4, 0, 4, 5], [54, 12, 10, 43, 15, 1, 0, 8, 0, 34, 1, 2, 4], [4, 3, 3, 26, 19, 72, 38, 13, 0, 8], [0, 0, 0, 3, 22, 0, 22, 2, 29, 20, 11, 1, 0, 9, 0, 36, 0, 0, 10, 2, 10, 0, 4, 11, 0, 5], [1, 0, 9, 9, 39, 2, 3, 2, 10, 10, 16, 1, 0, 6, 0, 0, 3, 16, 19, 8, 1, 8, 10, 0, 11, 20, 0], [0, 0, 4, 9, 0, 0, 36, 0, 27, 5, 3, 0, 0, 2, 0, 48, 0, 1, 1, 16, 2, 0, 8, 29, 0, 5, 6, 5], [4, 0, 2, 11, 11, 0, 52, 0, 2, 1, 25, 7, 0, 12, 0, 3, 0, 12, 37, 0, 8, 1, 15, 5, 0, 1, 5, 1], [77, 13, 40, 2, 3, 4, 0, 1, 0, 23, 0, 0, 1, 19, 7, 1, 17, 6, 0, 13], [8, 0, 0, 27, 14, 0, 19, 10, 9, 3, 20, 1, 0, 1, 0, 25, 0, 2, 2, 26, 5, 0, 9, 0, 2, 36, 10], [0, 0, 0, 2, 20, 0, 20, 9, 10, 16, 26, 1, 0, 3, 0, 50, 0, 0, 6, 35, 0, 7, 7, 2, 0, 1, 11, 5], [0, 3, 14, 15, 0, 28, 2, 8, 5, 6, 1, 0, 0, 0, 21, 0, 0, 6, 23, 1, 2, 2, 39, 0, 48, 15, 7], [6, 4, 5, 49, 0, 104, 18, 2, 5, 2, 3, 0, 1, 0, 10, 0, 2, 2, 12, 4, 0, 0, 4, 0, 14], [1, 0, 5, 4, 18, 0, 57, 3, 28, 1, 0, 0, 1, 0, 18, 0, 5, 1, 3, 3, 1, 15, 25, 0, 16, 45, 0], [1, 0, 2, 6, 19, 0, 50, 13, 8, 23, 26, 5, 0, 2, 0, 46, 2, 0, 7, 8, 2, 1, 5, 17, 0, 9, 6, 5], [1, 0, 6, 20, 18, 0, 60, 23, 2, 6, 5, 0, 0, 0, 0, 4, 0, 1, 8, 49, 2, 0, 5, 45, 0, 6, 10, 4], [0, 1, 11, 4, 15, 0, 84, 13, 8, 21, 15, 0, 0, 2, 3, 25, 0, 3, 0, 18, 0, 0, 6, 16, 0, 6, 20, 4], [0, 0, 4, 35, 12, 0, 28, 12, 6, 9, 7, 0, 0, 0, 0, 61, 0, 0, 8, 16, 0, 4, 0, 13, 0, 14, 29, 23], [3, 0, 12, 6, 44, 0, 80, 11, 0, 2, 0, 0, 0, 2, 0, 40, 0, 0, 2, 11, 2, 12, 6, 11, 0, 29, 14], [0, 0, 0, 22, 8, 0, 46, 23, 5, 31, 12, 0, 0, 0, 0, 65, 0, 0, 1, 5, 11, 0, 3, 29, 0, 12, 15, 17], [9, 0, 4, 10, 23, 0, 81, 23, 10, 28, 9, 1, 0, 1, 0, 0, 0, 0, 3, 25, 3, 0, 3, 12, 0, 4, 23, 34], [0, 4, 17, 45, 3, 3, 26, 3, 6, 45, 24, 13, 4, 21, 31, 0, 25, 26, 19], [1, 1, 1, 16, 70, 0, 90, 13, 9, 0, 11, 7, 0, 1, 0, 20, 1, 0, 19, 20, 20, 2, 8, 1, 0, 13, 7, 3], [1, 0, 10, 15, 20, 0, 67, 19, 25, 23, 18, 6, 0, 1, 0, 23, 0, 2, 4, 15, 12, 1, 12, 10, 0, 23, 19, 9], [0, 74, 15, 3, 15, 30, 0, 0, 18, 0, 52, 0, 1, 22, 11, 13, 0, 6, 26, 0, 25, 27, 0], [1, 0, 0, 20, 79, 0, 28, 3, 0, 23, 12, 1, 0, 1, 62, 0, 4, 1, 25, 2, 0, 14, 28, 0, 19, 23, 2], [10, 109, 0, 35, 33, 19, 8, 0, 13, 1, 19, 0, 1, 46, 27, 2, 1, 25, 2, 0, 4], [13, 0, 2, 14, 43, 0, 3, 8, 21, 4, 0, 0, 4, 0, 55, 0, 0, 6, 62, 9, 7, 21, 17, 0, 36, 33, 3], [1, 8, 2, 35, 3, 60, 12, 10, 7, 14, 1, 11, 0, 36, 1, 0, 4, 41, 7, 0, 19, 44, 0, 6, 43, 5], [1, 0, 1, 6, 22, 0, 52, 13, 42, 13, 3, 1, 0, 4, 0, 63, 0, 3, 1, 6, 2, 0, 1, 26, 0, 87, 18, 12], [4, 0, 13, 39, 92, 0, 18, 13, 4, 34, 11, 6, 0, 7, 0, 35, 0, 0, 9, 11, 7, 0, 12, 16, 0, 45, 30, 1], [4, 0, 13, 20, 41, 1, 111, 7, 1, 20, 3, 4, 0, 9, 46, 0, 1, 14, 16, 15, 0, 14, 50, 2, 11, 41, 19], [0, 0, 4, 11, 47, 0, 88, 5, 16, 33, 31, 6, 0, 5, 3, 54, 0, 3, 16, 6, 7, 3, 26, 26, 0, 18, 57, 0], [46, 0, 59, 25, 29, 6, 177, 9, 8, 49, 1, 30, 18, 31, 43], [15, 0, 9, 20, 48, 0, 87, 28, 29, 16, 45, 1, 0, 8, 0, 62, 0, 10, 17, 19, 11, 0, 22, 34, 37, 38, 7], [15, 0, 8, 43, 60, 1, 102, 14, 56, 37, 8, 8, 0, 13, 9, 44, 1, 1, 4, 79, 15, 4, 18, 34, 1, 13, 29, 9], [5, 0, 10, 38, 91, 95, 44, 11, 79, 4, 3, 0, 18, 1, 53, 0, 0, 12, 20, 9, 0, 15, 32, 0, 37, 46, 29], [28, 0, 10, 17, 112, 0, 104, 37, 41, 15, 45, 15, 0, 15, 0, 132, 0, 6, 57, 19, 14, 0, 44, 20, 0, 37, 78, 42], [29, 0, 30, 29, 36, 2, 171, 53, 8, 44, 30, 20, 1, 21, 0, 68, 1, 15, 39, 51, 20, 16, 52, 40, 1, 46, 59, 80]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

