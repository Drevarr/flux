created: 20230303232222000
creator: Drevarr
modified: 20230705163521125
modifier: drevarr
tags: ChartData
title: 202303032322_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Sp\u00edcy Cheese", "Lucky Leipreach\u00e1n", "Nimplet", "Arcanophage Farra", "Venomina The Siren", "High Sorcer Baradun", "Cat Wigglebooty", "Demon Sekhmet", "Fruji", "Kosa\u00edr", "Zadie Miststep", "Delynai", "Cerys Fireblade", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Berserker", "Scrapper", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Tempest", "Scrapper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.145, 0, 0, 0, 0.873, 0, 0.714, 0, 0.081, 0, 0, 0.277, 0.399, 0, 0, 0.328, 0.176, 0.256, 0, 0, 0.175, 0, 0, 0], [0, 0.145, 0, 0, 0, 0, 0.201, 0, 0, 0.599, 0.399, 0, 0, 0.259, 0.322, 0, 0, 0, 0.353, 0, 0], [0, 0.163, 0, 0, 0, 0.483, 0.116, 0.386, 0.493, 0.245, 0.383, 0.09, 0, 0, 0.345, 0, 0.279, 0.309, 0, 0, 0.338, 0, 0.227, 0.132], [0, 1.28, 0.155, 1.362, 0.454], [1.357, 0.376, 0, 1.282, 0.872, 0, 0.853, 0.097, 0.108, 0.934, 0.457, 0.342, 0.796, 1.44, 0, 0.588, 0, 0.31, 0.517, 0, 0, 0.369, 0, 0.793, 0], [0.814, 0.523, 0.568, 0, 0.747, 0.524, 0, 1.043, 0.347, 0.366, 0.488, 0.246, 0.46, 0.718, 0, 0.28, 0.395, 0, 0.4, 0.174, 0, 0.599, 0, 0.605, 0.453], [0.802, 0.493, 0, 0, 0.58, 0.264, 0.449, 0.524, 0.464, 0.488, 0.49, 0.737, 0.41, 0.596, 1.728, 0.558, 0.179, 0.696, 0.579, 0.74, 0.474, 0.723], [0, 0.776, 0.286, 0, 0.581, 0.522, 0.225, 1.569, 0.725, 1.21, 0.738, 0.797, 1.327, 0.747, 0, 0.559, 1.493], [0, 0.68, 0.238, 0, 0, 0, 0, 0.873, 0.774, 0.65, 0, 0, 0.685, 0.398, 1.439, 1.034, 0.689, 0, 0.593, 0.516, 1.239, 0, 0.837, 0, 0.252, 0.504], [0, 0.809, 0, 0.096, 0, 0.112, 1.13, 0.493, 0.939, 1.517, 0.661, 0, 1.076, 1.95, 0.28, 1.045, 0.106, 0.257, 0.233, 0.371, 0, 0.896, 0.308, 0.745, 0.68], [0, 0.405, 0, 0, 0.203, 0.679, 1.656, 0.308, 1.099, 0.764, 0, 0.28, 0.885, 0.667, 0.31, 0.557, 0, 0.659, 0, 0.437, 0.741], [0.802, 0.417, 0, 0.767, 0, 0.45, 0.441, 0.462, 0.782, 0.613, 0.738, 0.716, 0.476, 0, 0, 0.69, 0.577, 0.776, 0, 0.47, 0.634, 0.619, 0.604, 0.604], [1.717, 2.025, 0.865, 1.447, 0.635, 1.505, 1.905], [1.357, 0.614, 0.807, 0, 0, 0, 0, 0.873, 0.718, 0.644, 0.964, 0.821, 0.621, 0.399, 0, 0.932, 0.789, 0.254, 0.898, 0.776, 1.237, 0, 1.004, 0.518, 1.32, 0.252], [0.8, 1.26, 0.857, 1.052, 1.921, 1.305, 1.232, 1.845, 1.76, 1.49, 2.708, 0.893, 1.814, 1.877, 3.184, 0.07, 1.707, 0.946, 1.572, 1.761, 2.584, 0.177, 1.964, 1.208, 1.588, 1.656]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

