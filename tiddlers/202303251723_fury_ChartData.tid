created: 20230325172304000
creator: Drevarr
modified: 20230705163522981
modifier: drevarr
tags: ChartData
title: 202303251723_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Zadie Miststep", "Zefirokai", "Fruji", "Lord Erin The Wise", "Xyntharos", "Mike The Archmagus", "Aronorf Xideliesi", "Sofya De Nova", "Tribal S", "Arriasa", "Arcanophage Farra"];
const professions = ["Tempest", "Tempest", "Tempest", "Scrapper", "Weaver", "Vindicator", "Weaver", "Firebrand", "Weaver", "Druid", "Druid", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[67.2965, 29.6258, 0.0, 0.0, 0.0, 0.0, 383.326, 29.4258, 29.6093, 29.1099, 37.4899, 0.0, 24.5981, 0.0, 29.6194, 29.6044, 66.1281, 59.1684], [63.8284, 71.6512, 0.0, 17.8891, 54.5076, 0.0, 526.5893, 59.0094, 23.7063, 88.6291, 29.2213, 37.2403, 37.8432, 31.7184, 57.293, 68.3963, 99.8214, 89.6287], [166.6916, 175.824, 46.7057, 33.5347, 114.66, 471.0909, 60.6939, 105.7556, 125.6904, 93.7532, 0.0, 0.0, 22.2854, 31.9872, 100.3168, 35.3891, 52.9605, 48.2512], [110.8326, 153.6233, 16.8588, 23.9112, 110.9556, 17.0469, 1015.1041, 37.5323, 27.3018, 86.94, 50.831, 0.0, 0.0, 61.2499, 0.0, 86.48, 53.0837, 102.0483, 140.1712], [189.2714, 222.75, 14.5001, 81.0029, 129.9186, 15.9588, 1124.1649, 89.6459, 44.1767, 177.9538, 57.2545, 38.7878, 12.0768, 40.0858, 20.0592, 101.1816, 189.8762, 171.1778, 284.251], [123.1555, 160.8255, 21.2587, 66.8333, 134.3286, 1193.2152, 39.1642, 41.2763, 189.9763, 60.7075, 41.2589, 3.7264, 64.5437, 50.3664, 216.8486, 162.3136, 220.1687, 292.4726], [135.0357, 166.023, 28.8036, 54.0806, 99.3132, 15.0883, 1306.7933, 121.9142, 43.3857, 217.3003, 66.3884, 7.1885, 8.0648, 71.6218, 33.6336, 171.879, 137.4731, 175.8251, 322.1242], [192.8871, 98.5297, 32.472, 156.6432, 41.5654, 1522.9788, 49.9554, 0.0, 243.432, 42.6624, 37.5648, 20.468, 58.0963, 20.4624, 191.0127, 125.4783, 267.5137, 284.9249], [130.9772, 173.8192, 15.4526, 42.2726, 96.4026, 25.7154, 1637.2022, 136.6008, 66.301, 266.5829, 59.5194, 49.1712, 43.7299, 41.1936, 232.6312, 155.8482, 237.6931, 172.6532], [273.1706, 303.3855, 26.9438, 110.0506, 181.3392, 0.0, 2210.2552, 160.552, 66.4928, 385.02, 64.5319, 63.5731, 0.0, 0.0, 70.8624, 357.7029, 336.622, 419.8115, 582.3844], [179.3097, 281.7787, 129.0024, 224.2926, 2197.3486, 40.9539, 163.9788, 551.1499, 153.8296, 171.8496, 86.3328, 137.6371, 145.656, 387.7547, 248.3193, 366.5605, 577.128], [454.2512, 350.5342, 0.0, 210.1234, 298.6452, 45.9904, 2807.8308, 174.8701, 100.4822, 507.6302, 197.9772, 104.2579, 16.7688, 0.0, 31.92, 578.6593, 564.7797, 439.1755, 837.7925]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

