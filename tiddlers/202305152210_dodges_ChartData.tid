created: 20230515221048000
creator: Drevarr
modified: 20230705163530199
modifier: drevarr
tags: ChartData
title: 202305152210_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Bella Sassy", "Fribble Bibble", "Cyclotechnist Farra", "River No Hug", "Tika Mi", "Klenga", "Grasszanine", "Sheep Poh", "Belvyn Brightblade", "Evan Nightroad", "Tribal S", "Xanvias Einzbern", "Rozaalyna", "Sygaldry Verdandi", "Venom The Ferocious", "Sumatra Satyricon", "Tootsie Pop Rocks", "Demon Sekhmet", "Farra The Bloodless", "Arriasa", "Demon Sekhmet", "Rosetendril", "Necrotic Windrunner", "Black Raspberry Pie", "Lagmeloves", "Jeckyll Mbs", "Blancooo Padreee", "Kyllarian", "Hauzzy", "Cat Wigglebooty", "River No Hug", "Drevarr Moonwillow", "Husky Guard", "Rozaalyna", "No Reserv\u00e9", "Domitia Gravestorm", "Koralia Danai", "Sub Train", "Ryvalia Fazebringer", "Primal Clone", "Lord Erin The Wise", "Smol Gluvs", "Gavann", "Kary\u00edna", "Eibh\u00ebar", "Newtype Khan", "Mistwalker Caelon", "Mike The Archmagus", "Solus Sanctus"];
const professions = ["Berserker", "Firebrand", "Scrapper", "Scrapper", "Reaper", "Tempest", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Vindicator", "Druid", "Berserker", "Reaper", "Firebrand", "Firebrand", "Soulbeast", "Scrapper", "Berserker", "Vindicator", "Druid", "Spellbreaker", "Tempest", "Scourge", "Chronomancer", "Dragonhunter", "Berserker", "Berserker", "Reaper", "Berserker", "Scrapper", "Scourge", "Scrapper", "Dragonhunter", "Scourge", "Vindicator", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Weaver", "Scourge", "Firebrand", "Vindicator", "Chronomancer", "Spellbreaker", "Vindicator", "Weaver", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5, 1, 1, 6, 14, 11, 1, 0, 2], [0, 2, 2, 0, 0, 0, 5, 0, 0, 1, 1, 0, 4, 0, 0, 3, 3, 2, 8, 1, 5, 0, 2, 0, 3], [4, 1, 0, 0, 6, 14, 0, 0, 7, 1, 1, 0, 3, 0, 1, 2, 3], [7, 7, 2, 11, 3, 6, 3, 4], [2, 9, 3, 11, 3, 5, 2, 8], [4, 0, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 7, 4, 8, 1, 2, 0, 6, 0, 9], [9, 11, 0, 6, 5, 7, 1, 9], [2, 1, 0, 3, 1, 5, 7, 4, 2, 9, 2, 5, 0, 4, 1, 3], [13, 12, 2, 8, 5, 8, 1, 1], [5, 5, 1, 0, 5, 13, 20, 0, 2], [0, 3, 2, 0, 3, 19, 5, 0, 0, 9, 2, 0, 0, 8, 0], [1, 0, 0, 1, 0, 4, 0, 1, 3, 0, 4, 0, 3, 7, 5, 4, 6, 0, 10, 0, 2], [0, 0, 0, 0, 1, 9, 15, 2, 0, 0, 1, 1, 0, 1, 0, 1, 4, 3, 1, 4, 1, 4, 1, 1, 0, 5], [9, 8, 2, 5, 1, 12, 2, 18], [6, 3, 0, 0, 2, 3, 11, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 7, 1, 6, 0, 2, 1, 5], [1, 0, 0, 0, 2, 0, 1, 3, 0, 1, 6, 7, 5, 14, 2, 7, 2, 3, 4], [0, 5, 0, 1, 0, 6, 10, 0, 0, 1, 2, 3, 0, 3, 0, 2, 6, 5, 8, 7], [4, 0, 2, 1, 4, 7, 15, 1, 1, 0, 0, 0, 4, 0, 2, 3, 1, 5, 6, 0, 1, 0, 3, 0, 2], [14, 18, 2, 10, 2, 5, 0, 12], [0, 9, 2, 2, 6, 5, 18, 1, 0, 3, 2, 2, 1, 4, 0, 3, 6, 1], [2, 2, 0, 0, 1, 6, 8, 0, 1, 1, 2, 3, 3, 0, 1, 9, 0, 5, 9, 1, 6, 3, 3, 0, 1], [5, 17, 0, 6, 4, 3, 1, 6, 1, 5, 12, 7], [3, 2, 0, 0, 9, 15, 5, 0, 1, 0, 0, 0, 3, 0, 1, 3, 1, 6, 3, 0, 6, 1, 6, 0, 3], [4, 0, 2, 9, 13, 12, 1, 8, 3, 3, 0, 4, 0, 1, 6, 8], [5, 0, 2, 6, 11, 1, 0, 3, 2, 1, 0, 5, 0, 3, 3, 3, 7, 5, 1, 6, 0, 6, 2, 2], [14, 0, 0, 2, 4, 0, 4, 0, 0, 6, 12, 13, 2, 5, 2, 7, 1, 4], [1, 5, 0, 0, 4, 9, 9, 0, 0, 2, 2, 3, 0, 2, 1, 0, 6, 8, 6, 1, 9, 0, 5, 0, 5], [0, 1, 9, 0, 5, 0, 2, 0, 4, 2, 1, 4, 6, 6, 12, 2, 9, 3, 8, 2, 4], [19, 0, 0, 0, 0, 1, 0, 9, 0, 4, 5, 5, 5, 11, 1, 10, 0, 6, 0, 10], [0, 0, 0, 0, 5, 9, 0, 0, 1, 1, 3, 0, 5, 1, 3, 7, 3, 7, 12, 3, 10, 0, 6, 1, 10], [1, 1, 0, 0, 3, 3, 10, 0, 0, 4, 2, 3, 7, 1, 3, 7, 1, 6, 10, 3, 6, 0, 6, 1, 10], [5, 1, 0, 11, 14, 26, 0, 0, 6, 2, 4, 1, 4, 3, 2, 6, 5], [1, 5, 1, 0, 4, 5, 10, 1, 2, 1, 1, 1, 5, 1, 3, 6, 7, 4, 10, 1, 6, 1, 6, 0, 11], [5, 0, 0, 2, 8, 16, 0, 3, 0, 2, 0, 6, 1, 2, 6, 6, 6, 10, 1, 11, 0, 5, 0, 4], [2, 0, 0, 7, 11, 27, 0, 2, 2, 5, 3, 10, 3, 5, 10, 8], [3, 3, 0, 3, 3, 7, 23, 0, 0, 7, 1, 0, 0, 1, 0, 2, 2, 6, 3, 7, 2, 5, 2, 7, 2, 11], [3, 2, 0, 0, 1, 4, 11, 0, 0, 1, 0, 4, 0, 5, 0, 4, 9, 9, 12, 11, 2, 8, 1, 5, 0, 9], [0, 2, 1, 1, 2, 2, 12, 0, 1, 0, 2, 4, 0, 5, 0, 3, 10, 6, 10, 14, 2, 10, 1, 7, 9], [0, 4, 2, 1, 9, 16, 0, 0, 2, 3, 1, 3, 6, 1, 6, 8, 4, 8, 6, 2, 7, 1, 6, 1, 9], [3, 5, 1, 0, 0, 5, 11, 0, 6, 2, 2, 1, 5, 2, 4, 5, 7, 7, 13, 1, 8, 0, 8, 1, 10], [1, 0, 4, 5, 24, 0, 0, 4, 4, 5, 0, 6, 1, 4, 7, 5, 7, 13, 1, 7, 0, 7, 0, 4], [5, 3, 0, 7, 6, 17, 0, 1, 2, 2, 3, 2, 6, 1, 1, 9, 9, 8, 13, 1, 6, 0, 8], [3, 4, 0, 1, 8, 20, 27, 2, 0, 8, 4, 2, 1, 8, 0, 4, 3, 6, 11], [16, 4, 2, 8, 6, 6, 6, 3, 1, 9, 0, 4, 12, 5, 11, 12, 2, 7, 3, 0, 3, 4], [6, 3, 0, 1, 4, 6, 26, 0, 1, 13, 5, 1, 1, 7, 2, 4, 12, 2, 8, 10, 1, 4, 4, 6, 0, 6], [0, 7, 3, 4, 12, 26, 31, 2, 0, 9, 4, 4, 1, 6, 1, 5, 10, 8, 9, 9, 3, 9, 2, 9, 1, 12], [5, 14, 3, 3, 15, 33, 30, 2, 0, 15, 4, 3, 1, 6, 2, 5, 4, 6, 10, 7, 2, 5, 8, 10, 1, 5], [6, 11, 1, 0, 11, 23, 29, 1, 1, 17, 4, 5, 0, 9, 2, 4, 9, 9, 13, 14, 3, 12, 5, 8, 0, 10], [2, 14, 2, 3, 8, 26, 33, 0, 19, 6, 4, 0, 7, 1, 2, 12, 6, 13, 12, 2, 12, 4, 10, 1, 9], [9, 6, 4, 18, 26, 32, 2, 0, 17, 2, 4, 2, 10, 3, 5, 13, 8, 7, 15, 2, 8, 4, 12, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

