created: 20230204000024000
creator: Drevarr
modified: 20230705163518622
modifier: drevarr
tags: ChartData
title: 202302040000_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Zady Stardust", "Tyrisai", "\u00c2 R K", "Ravioli Fetabringer", "Arkintor", "Kahless The Drunk", "Tegan Parker", "Abigail Ryn", "Mike The Archmagus", "Sakis Ranger", "Etchery", "Fribble Bibble", "\u00c9\u00efbhear"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[45.3394, 28.896, 17.3544, 31.4063, 29.7234, 29.7335, 17.8517, 29.5324, 38.958, 8.8524, 5.8653, 20.3604, 7.6824, 21.996, 117.7605, 20.9123, 33.8272, 14.4373, 23.1121, 31.7117, 2.1827, 20.6448, 242.5805, 22.3532, 7.348, 39.5928, 21.758, 100.98], [24.9141, 95.2123, 0.0, 0.0, 11.8228, 32.6164, 0.5216, 86.9299, 2.193, 101.6155, 7.4505, 16.9785, 109.9692, 107.0613, 239.382, 91.1082, 0.0, 54.7596, 0.0, 0.0, 20.6748, 0.0, 0.0, 22.2169, 0.0, 3.4771, 0.0, 93.0852], [16.4648, 29.51, 37.5648, 20.6332, 26.2932, 41.701, 9.8822, 57.5736, 46.8145, 15.8616, 43.4826, 21.4236, 66.1572, 67.4388, 138.4698, 94.2524, 45.0103, 52.9214, 75.0801, 52.9135, 143.7466, 39.7178], [27.284, 38.3229, 0.0, 33.066, 67.257, 87.7734, 89.7811, 89.5466, 72.0504, 38.7146, 59.5109, 30.6384, 41.1774, 172.0781, 51.3306, 42.3977, 81.3429, 31.691, 125.7201], [63.1056, 91.8893, 29.7696, 0.0, 49.9187, 124.5031, 59.6408, 39.9017, 163.744, 111.1602, 53.9708, 120.8781, 0.0, 47.916, 216.7029, 134.2341], [0.0, 0.0, 0.0, 0.0, 0.0, 35.8974, 19.5325, 7.8322, 24.8832, 173.6228, 22.3775, 50.4945, 31.806, 59.994, 18.8658, 175.6755, 104.8819, 100.936, 70.5217, 5.6068, 50.09, 56.8103, 28.2744, 116.4595, 4.3616, 54.5017, 31.3951, 32.8546, 60.8175], [6.5633, 24.5074, 5.1576, 46.4628, 43.3415, 10.7516, 36.8323, 29.8833, 56.9436, 23.8313, 31.6197, 0.0, 71.7948, 120.8088, 66.0231, 118.6099, 99.572, 127.8971, 30.0635, 37.4774, 18.6538, 51.2081, 232.7885, 30.2313, 33.6071, 37.7908, 0.0, 33.3234], [10.8068, 67.7792, 16.8672, 73.6569, 54.5266, 29.3882, 5.825, 62.3045, 93.4218, 176.0252, 49.7653, 109.8531, 36.1944, 47.7144, 49.9999, 38.2096, 120.5094, 52.1779, 57.1586, 124.3242, 44.5631, 31.618, 147.2717, 33.0664, 6.5591, 15.6341, 48.8893, 144.0801], [12.9945, 15.1162, 6.7032, 29.6902, 33.488, 106.8278, 28.4584, 54.6487, 559.8265, 27.0763, 137.7684, 103.1244, 125.5716, 103.1274, 170.0771, 233.559, 404.2214, 47.1843, 48.0254, 160.3087, 22.8171, 53.5194, 730.4832, 42.9072, 34.0129, 78.5257, 91.4782, 218.7594], [974.2747, 8.3851, 115.101, 0.0, 379.962, 531.4572, 854.4393, 343.5661, 374.3498, 96.237, 162.0636, 39.794, 68.8757, 1118.8992, 114.9282, 266.6482, 62.6125, 0.0, 496.638], [101.844, 164.1112, 66.0408, 130.3499, 77.0001, 155.2673, 125.5993, 161.2649, 263.4524, 248.9416, 149.1402, 207.2259, 0.0, 429.3432, 412.3404, 413.32, 84.5187, 349.6614, 189.043, 225.2856, 388.6225, 114.1663, 156.4966, 430.1952, 232.7731, 217.6913, 278.1648, 8.1167, 566.406], [127.305, 7.6936, 97.9608, 9.9226, 167.3388, 172.0253, 92.4752, 136.3572, 236.7563, 382.8922, 159.8876, 238.4046, 2.8424, 473.6952, 452.9484, 660.1667, 456.5933, 505.8394, 174.402, 268.9474, 164.0153, 176.7162, 74.411, 774.6125, 263.3043, 121.5357, 217.3797], [135.5091, 186.5598, 114.7608, 117.4299, 142.723, 240.8566, 131.2504, 385.4693, 416.2606, 266.5377, 130.1894, 405.8082, 23.3168, 572.5764, 504.3852, 490.7975, 957.1619, 547.646, 340.1076, 352.0595, 456.8335, 84.781, 269.2127, 567.2832, 385.4837, 149.5529, 249.9676, 58.4912, 526.473]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

