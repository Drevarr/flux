created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Skyew\u00edng", "Glorious Gluvs", "Vampdru", "Artakama Nahid", "Oo Dads Mad", "Venomina", "Drumina", "Grim Grooblin", "Arch Payne", "Be\u00eb", "Grasszanine", "Kahlianne", "Sister Elonith", "The Fancy Cheese", "Mesmerizing Dark", "Primal Clone", "\u00c1rkantor", "Gavann", "Eibh\u00ebar", "Regis Hawkesburne", "Johosh The Mighty", "Black Raspberry Pie", "Xanvias Einzbern", "Air One Com", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Bodger Bloddger", "Mike The Archmagus", "Tika Fiery", "Mmathuss", "Gestern Yesteryear", "Newtype Khan", "Gabe Malhorn", "Solus Sanctus", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Druid", "Berserker", "Druid", "Tempest", "Berserker", "Scourge", "Druid", "Chronomancer", "Berserker", "Scourge", "Spellbreaker", "Scourge", "Berserker", "Scrapper", "Chronomancer", "Chronomancer", "Herald", "Firebrand", "Chronomancer", "Berserker", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.3812, 0.0, 1.904, 24.1956, 0.0, 46.6748, 105.9434, 0.0, 0.0, 24.8506, 0.4838, 0.0, 0.891, 0.0, 0.0, 0.0, 0.0, 167.265, 0.0, 5.7974, 0.0, 0.0, 0.0, 0.0, 0.0], [11.1368, 9.8917, 0.0, 0.0, 37.9408, 0.0, 77.1119, 0.0, 9.45, 0.0, 133.4995, 0.0, 1.1776, 18.711, 0.0, 0.0, 0.0, 72.8001, 29.795, 57.9269, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [127.6647, 3.8584, 108.0556, 17.9121, 55.2895, 30.2455, 144.5264, 134.9384], [37.8149, 0.0, 25.7936, 0.0, 29.0862, 0.0, 61.7575, 19.7705, 11.7787, 7.9866, 25.4285, 0.0, 0.0, 152.4204, 0.0, 70.0686, 0.0, 0.0, 31.3821, 88.8624, 54.3629, 0.0, 4.3639, 15.4503, 0.0, 0.8187, 52.9485, 0.0], [32.1356, 12.5964, 45.225, 54.0243, 183.3933, 6.2294, 31.9516, 123.1956, 27.3024, 93.465, 30.4726, 47.416, 120.3511], [90.9823, 0.0, 54.6934, 19.6398, 21.1068, 0.0, 33.4265, 13.9729, 19.98, 0.6655, 130.7062, 27.4277, 0.0, 72.9432, 3.0024, 38.5317, 67.6051, 25.1217, 61.8084, 63.4867, 30.793, 1.6874, 31.5427, 33.5899, 48.9185, 97.3056, 32.9238], [62.165, 34.1159, 2.1079, 53.2779, 3.8095, 16.3157, 2.3779, 0.0, 52.3462, 0.0, 60.8742, 70.7314, 0.0, 28.9872, 8.8776, 77.4855, 58.5834, 21.4601, 115.1739, 125.5478, 13.163, 11.0968, 59.334, 84.5836, 13.02, 0.0, 66.1856], [50.4794, 92.3459, 26.4938, 52.5784, 291.8496, 33.1733, 46.2392, 68.0724, 45.0252, 11.2761, 116.6246, 63.5922, 153.0077], [128.231, 96.9616, 3.1029, 49.2664, 0.0, 35.6006, 37.8727, 19.2037, 13.8848, 65.9792, 26.3693, 151.9452, 0.0, 34.0092, 0.0, 0.0, 130.4667, 114.2381, 65.6726, 0.0, 46.3188, 47.1121, 8.65, 44.3132, 7.3822, 22.4078], [65.8143, 25.4254, 25.5162, 10.1196, 0.0, 12.7126, 0.0, 88.7172, 23.49, 36.6282, 86.399, 29.0909, 0.0, 21.681, 10.8216, 52.3404, 54.7888, 109.0152, 109.7577, 74.1312, 37.0656, 19.019, 33.8778, 33.8689, 0.0, 55.6218, 92.5326, 47.7968], [32.0263, 0.0, 145.4978, 41.0074, 21.7246, 89.477, 11.5954, 5.2988, 50.6277, 91.3114, 6.3504, 0.0, 87.1398, 8.4024, 82.3095, 80.4602, 108.8298, 0.0, 59.4, 103.8787, 0.0, 108.1793, 0.0, 0.0, 80.7974, 20.4284, 8.8124], [75.504, 0.0, 84.2589, 47.2837, 129.9355, 0.0, 0.0, 19.0198, 27.0338, 19.5305, 217.4906, 50.8637, 0.0, 14.553, 0.0, 107.2134, 0.0, 0.0, 118.5989, 35.0698, 33.2165, 0.0, 42.376, 0.0, 148.5977, 100.1057, 12.4488], [98.0923, 48.2573, 92.413, 45.4501, 46.229, 49.3723, 180.671, 265.1616, 55.7128, 78.1678, 19.4334, 19.75, 148.4442, 79.9955, 77.1498], [161.201, 27.6913, 74.2743, 70.4495, 24.2471, 27.7628, 74.115, 52.6014, 92.5635, 9.3196, 56.727, 12.1824, 36.18, 45.8832, 55.8981, 90.2434, 65.8152, 77.6477, 21.593, 22.4704, 24.7104, 17.21, 16.1185, 103.4786, 80.2292], [73.113, 25.5255, 86.2558, 71.7541, 8.0824, 52.8402, 111.5325, 2.2275, 0.0, 117.0288, 5.2013, 0.0, 83.2788, 0.0, 28.6425, 0.0, 76.3384, 33.692, 49.1357, 29.2248, 26.0546, 320.4036, 15.8055, 0.0, 123.8314, 42.957, 16.38], [65.248, 1.4287, 29.3436, 37.2698, 98.7386, 31.9553, 91.719, 36.6214, 33.3113, 10.9471, 146.599, 2.5099, 23.7912, 91.1196, 3.0996, 59.8176, 36.7066, 23.5458, 132.5376, 103.451, 76.5072, 55.5412, 48.3859, 14.8668, 50.4, 22.9242, 96.9237, 30.172], [145.7227, 70.8435, 345.3562, 156.1313, 140.7717, 172.0537, 175.5, 39.0609, 22.27, 194.8042], [98.9886, 69.5306, 70.0312, 50.1228, 164.1293, 214.704, 1.702, 273.7152, 0.0, 0.0, 163.4758, 0.0, 399.5244], [98.1552, 27.8915, 122.5887, 49.2935, 72.7412, 37.4035, 96.6786, 17.3931, 24.9413, 38.8544, 170.2938, 55.188, 10.028, 92.7234, 0.0, 68.9229, 47.5482, 111.9816, 108.7223, 94.8024, 61.776, 2.3166, 55.2763, 5.4292, 29.38, 114.7743, 21.3194, 5.4709], [105.5168, 5.4236, 21.1895, 13.9277, 72.4838, 0.0, 138.122, 80.2083, 19.9462, 20.2648, 111.8275, 0.0, 20.9484, 48.0546, 47.1546, 82.3187, 152.5378, 228.1176, 84.9182, 91.1434, 0.0, 43.9072, 75.1459, 23.13, 52.9609, 96.7964, 15.3644], [79.8455, 1.1011, 111.3838, 31.0993, 163.3975, 36.4472, 47.6259, 30.7403, 38.9138, 0.0, 121.5558, 56.6395, 38.594, 117.5526, 10.7892, 92.3193, 30.279, 100.8112, 66.5077, 97.5586, 80.2613, 10.6106, 83.7566, 31.611, 91.5431, 126.9618, 37.4447], [111.0538, 68.0498, 86.6996, 23.5889, 16.1647, 0.0, 78.0631, 61.8976, 122.1075, 67.7713, 183.008, 38.6165, 0.0, 71.4582, 22.41, 61.5663, 32.4086, 116.2921, 126.3249, 139.8038, 79.8336, 70.07, 72.4258, 98.1819, 21.76, 151.7191, 87.505, 36.036], [132.132, 6.1334, 152.4316, 39.4207, 105.7914, 34.1771, 154.3597, 79.3741, 53.19, 65.6141, 137.545, 57.4258, 6.1364, 92.07, 6.2856, 51.1344, 48.5162, 77.3582, 48.9051, 163.2787, 119.7504, 14.1284, 101.9014, 45.2854, 36.77, 98.0417, 178.5102, 17.3628], [227.33, 3.4398, 135.3468, 40.5137, 87.2586, 0.0, 15.2888, 40.1166, 267.288, 38.435, 37.6596, 18.4788, 38.8935, 153.7184, 128.9457, 145.1223, 99.8395, 156.4358, 87.6018, 115.7204, 59.3912, 9.73, 70.8705, 125.5617, 63.3906], [26.2376, 135.7441, 169.3426, 48.87, 54.0932, 222.0176, 44.0294, 0.0, 201.3066, 3.1212, 93.7665, 107.8739, 150.4058, 102.0316, 149.2128, 93.8995, 75.0464, 119.3953, 87.5265, 13.79, 166.5583, 156.2998, 55.2006], [0.0, 0.0, 26.4592, 111.7037, 0.0, 0.0, 28.3989, 131.595, 0.0, 0.0, 283.855, 39.312, 0.0, 703.8306, 27.864, 231.9741, 63.617, 0.0, 134.4492, 92.3789, 120.2731, 0.0, 0.0, 0.0, 18.2, 54.2402, 194.102, 43.6691], [225.757, 11.3295, 258.1019, 25.7045, 82.3165, 6.8393, 104.4238, 113.0341, 44.2125, 24.2581, 162.9734, 35.2901, 32.2276, 73.5966, 0.0, 26.6526, 88.1654, 193.2331, 183.0357, 46.8547, 101.1701, 46.2748, 136.0854, 35.518, 51.76, 55.2124, 140.708, 32.4652], [88.5914, 49.4312, 88.8075, 56.0634, 62.7541, 57.7668, 71.8805, 71.3241, 47.8575, 89.2985, 148.8144, 70.7616, 39.652, 241.8768, 35.7696, 76.2795, 147.9104, 177.196, 107.3682, 79.4534, 151.0661, 133.6192, 98.303, 84.6851, 63.42, 88.0636, 90.2415, 37.0188], [153.2102, 25.3344, 50.2558, 117.2748, 83.3976, 29.2022, 65.2224, 59.7287, 7.155, 28.2515, 226.5446, 136.6546, 22.1444, 207.5436, 62.4348, 116.6805, 265.1933, 96.8251, 368.6202, 0.0, 98.0813, 141.7416, 10.7567, 0.0, 0.0, 116.2582, 23.1013, 156.1997], [267.8874, 154.9526, 89.505, 55.6078, 306.4902, 221.9918, 29.0996, 291.5352, 41.4612, 141.5241, 21.7606, 236.0606, 443.1726, 106.5398, 116.4715, 135.1636, 110.8589, 70.5793, 31.73, 2.7632], [308.1822, 0.0, 105.1711, 77.6425, 161.9561, 0.0, 152.3215, 77.3303, 95.5463, 45.2574, 182.6227, 150.1114, 31.3904, 77.9328, 124.0371, 291.2906, 92.4219, 323.379, 46.9498, 42.5779, 145.9744, 76.292, 82.4779, 18.54, 100.7026, 44.8026, 48.5831], [161.201, 56.0651, 175.8954, 95.8719, 103.3718, 0.0, 129.4936, 84.7547, 81.4725, 15.8814, 416.3914, 48.1118, 50.3516, 88.5654, 22.2264, 179.9955, 80.2278, 180.5333, 205.6563, 235.224, 156.5784, 102.8742, 108.7152, 74.6385, 11.99, 110.783, 290.262, 105.0941], [584.0864, 139.618, 196.5745, 208.8544, 1.6615, 266.8064, 137.0477, 59.0548, 217.2258, 85.914, 95.7564, 78.9501, 143.0825, 272.9606, 107.1576, 88.7674, 160.2744, 165.5227, 63.628, 121.88, 156.6825, 344.1015, 162.981], [302.016, 18.4002, 309.8554, 164.3469, 61.7245, 41.8568, 109.1796, 96.5169, 104.1525, 1.1016, 332.2077, 282.1997, 15.4468, 279.3582, 36.936, 166.1265, 259.8499, 201.0199, 349.4245, 87.9595, 123.8371, 208.1508, 85.3644, 48.6343, 38.7, 184.212, 310.1177, 142.4405], [303.8407, 54.3634, 247.2853, 206.412, 148.3139, 61.0029, 91.719, 82.3773, 146.9813, 60.8864, 525.9072, 149.809, 14.26, 281.4966, 57.078, 236.3157, 155.8867, 169.7337, 620.9514, 186.3259, 393.5606, 265.8942, 38.5097, 136.5921, 118.4, 167.2236, 280.716, 137.6903], [417.7888, 67.1398, 379.3039, 186.2433, 239.382, 0.0, 240.6435, 141.8557, 15.5587, 118.4449, 475.6282, 220.3589, 74.152, 209.5038, 93.3228, 230.8284, 263.9542, 310.9622, 304.7409, 95.7053, 425.7792, 102.0162, 309.8383, 191.3659, 76.47, 282.2026, 505.3016, 270.2045]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

