created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Tegan Parker", "J\u00e2sm\u00eene", "Vee U", "Miphest\u00f6", "P\u00edogre", "Venomina The Sly", "Tribal S", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.3832, 16.5808, 281.048, 18.8307, 9.751, 40.0365, 27.8239, 41.9714, 47.471, 38.6791, 60.8359, 23.5808, 0.0, 0.0, 38.4689, 39.9795, 40.905, 18.9235, 0.0, 57.1738, 33.6845, 74.5695, 18.9446, 18.144, 132.9075, 139.5985, 81.8294], [96.0296, 25.6624, 115.2787, 0.0, 25.0681, 52.452, 47.6438, 39.1782, 102.4978, 12.0132, 27.1694, 19.1431, 0.0, 0.0, 10.6646, 22.264, 19.1257, 61.4061, 49.5979, 116.2467, 22.0124, 110.5146, 134.2828, 0.0, 24.7839, 107.3693, 233.3818], [120.2708, 27.434, 311.0319, 75.7638, 60.4314, 152.2643, 96.1043, 22.9723, 127.5307, 66.834, 167.6433, 79.6324, 77.7179, 62.0356, 0.0, 0.0, 135.2781, 89.4744, 69.2577, 64.6378, 27.972, 18.6876, 67.2232, 62.9156], [67.7817, 27.7952, 115.197, 20.1096, 9.3744, 111.1118, 17.2062, 75.3222, 124.9358, 46.9699, 34.6017, 117.6769, 75.5176, 148.8284, 121.2141, 65.2501, 31.5137, 5.0358, 42.5534, 38.5142, 152.4078, 45.4779, 76.2804, 208.6245, 47.4324, 41.0662, 6.1525, 44.6495, 318.1256], [170.4226, 57.6372, 233.7437, 96.9759, 82.7793, 113.1345, 158.9395, 38.817, 233.3866, 55.5314, 130.7775, 10.2681, 97.7914, 142.8645, 17.2334, 52.4823, 9.8129, 25.5143, 278.4609, 102.5809, 23.2848, 248.819, 331.0454, 42.9187], [389.8616, 137.6688, 374.3494, 226.4535, 344.5092, 281.5807, 511.5033, 10.4989, 506.7648, 255.4582, 406.1142, 5.2759, 0.0, 11.8008, 101.8035, 102.5763, 22.9522, 0.0, 371.8994, 339.3835, 207.8752, 76.4244, 54.243, 45.3496, 58.0638, 0.0, 197.0544, 170.2207, 674.3635], [426.4571, 58.824, 491.0987, 262.836, 154.5102, 106.02, 188.3425, 0.0, 519.205, 220.163, 499.4846, 100.431, 14.6918, 24.3754, 0.0, 212.1078, 243.0419, 338.7576, 585.2817, 603.5962, 261.9126, 522.9151, 0.0, 147.2858, 7.5137, 148.5295, 153.817, 907.5211], [623.565, 236.034, 203.6975, 123.3618, 334.6632, 206.1194, 315.9432, 0.0, 24.109, 194.5524, 215.6209, 103.9931, 153.5406, 132.2983, 156.3002, 821.7491, 1179.4522, 1301.4932, 966.9301, 0.0, 210.0744, 381.5855, 91.5926, 193.7735, 1003.9228], [788.605, 229.9984, 1275.5004, 448.056, 404.9406, 852.1358, 646.5393, 209.183, 666.7315, 387.7387, 306.2961, 6.2009, 355.488, 265.7512, 620.275, 306.5146, 18.5632, 846.373, 800.7494, 818.6301, 387.6116, 24.759, 635.62, 447.0913, 0.0, 120.6867, 244.8704, 1643.5369], [740.1895, 258.1892, 600.5767, 442.4553, 607.9968, 680.0625, 848.7666, 91.1669, 815.0976, 507.7692, 698.924, 62.5165, 61.5976, 235.3176, 174.7361, 196.7806, 150.8487, 106.1556, 978.4192, 868.428, 1237.5473, 984.906, 40.635, 324.7776, 407.0191, 204.0862, 459.9096, 483.8197, 2447.7064], [1037.9615, 134.8824, 1063.5706, 290.6631, 445.284, 1064.5942, 855.1372, 507.5823, 1113.9667, 673.7882, 655.069, 319.7114, 601.8502, 828.1495, 389.6715, 289.4927, 172.6679, 343.1372, 1228.6607, 741.492, 1447.8741, 891.4207, 47.25, 610.9717, 906.0406, 182.6861, 296.8852, 513.2059, 2667.861]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

