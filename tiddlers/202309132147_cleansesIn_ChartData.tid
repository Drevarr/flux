created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Victoria Raskae", "Tequilasaurous", "Blaize Harlot", "Melody Phoenixstorm", "Cura Ativos", "Itacolomi", "Clean And Green", "Venomina The Fierce", "Lord Erin The Wise", "Belvyn Brightblade", "Nebula Davar", "Zanos Engine", "Charr Surethang", "Mort\u00e4rion", "Rahani Sunray", "Ryzen Grimsaw", "Blaize Harlot", "Morv\u00e4rth", "Oo Dads Mad", "Revenant Brandorf", "Darks Na", "Rozaalyna", "Elonith Requiem", "Jimbo The Pleb", "Rina Of Theros", "Rafaellagabriela", "Mistwalker Cael", "Cat Wigglebooty", "Bella Sassy", "Koralia Danai", "Tootsie Pop Rocks", "Sub Train", "Glorious Gluvs", "Xanvias Einzbern", "Ka Otik Nightm\u00e6r", "Primal Clone", "Morton Saltbringer", "Daphne Agla\u00e9", "Tegan Parker", "Etchery Howls", "Sygaldry Verdandi", "Tribal S", "Keypek The Drunk", "Jmbrage Rev", "Eibh\u00ebar", "Zaedy Zae", "Solus Luxes", "Lucky Luprac\u00e1n", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Renegade", "Dragonhunter", "Reaper", "Scrapper", "Dragonhunter", "Firebrand", "Druid", "Spellbreaker", "Weaver", "Firebrand", "Scourge", "Scrapper", "Berserker", "Scrapper", "Chronomancer", "Vindicator", "Scourge", "Reaper", "Berserker", "Vindicator", "Firebrand", "Reaper", "Reaper", "Berserker", "Reaper", "Firebrand", "Herald", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Berserker", "Reaper", "Chronomancer", "Chronomancer", "Reaper", "Tempest", "Druid", "Firebrand", "Druid", "Scrapper", "Vindicator", "Chronomancer", "Druid", "Firebrand", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1074, 0.2609, 0.2517], [0.0873, 0.0469, 0.1667, 0.0455, 0.186, 0.2016], [0.1538, 0.037, 0.1183, 0.0, 0.8333], [0.1571], [0.0217, 0.1958, 0.1111, 0.3871, 0.0426, 0.3889], [0.2081, 0.1739, 0.0699, 0.1667, 0.0968, 0.0, 0.3889], [0.0034, 0.0317, 0.1562, 0.2167, 0.3372, 0.5891], [0.3893, 0.587, 0.1678, 0.0926, 0.0968, 0.0, 0.6481], [0.1289, 0.5, 0.0, 0.1744, 0.1705, 0.1745, 0.1196, 0.2028, 0.0556, 0.0323, 0.1277, 0.2222], [0.2531, 0.1779], [0.4765, 0.5, 0.4196, 0.0741, 0.129, 0.0851, 0.4815], [0.2443, 0.0705, 0.0079, 0.1445, 0.1333, 0.0, 0.186, 0.1008, 0.0671, 0.0217, 0.2308, 0.037, 0.0753, 0.0426, 0.0], [0.2496, 0.0906, 0.1508, 0.1875, 0.2667, 0.2907, 0.1473], [0.1606, 0.1275, 0.0556, 0.1797, 0.65, 0.0, 0.3837, 0.4031], [0.7364, 0.2819, 0.4783, 0.6573, 0.1852, 0.0753, 0.0, 0.5741], [0.0134, 0.2063, 0.1602, 0.2333, 0.1395, 0.3333, 0.1007, 0.5109, 0.5804, 0.1481, 0.0215, 0.0, 0.7037], [0.1344, 0.1309, 0.127, 0.1484, 0.5167, 0.0227, 0.4884, 0.1783, 0.3221, 0.3043], [0.2496, 0.2013, 0.1349, 0.1406, 0.55, 0.0, 0.5116, 0.2171], [0.178, 0.1174, 0.127, 0.168, 0.5333, 0.0, 0.3256, 0.8295], [0.1667, 0.1367, 0.3, 0.0227, 0.2093, 0.5659, 0.4631, 0.7283, 0.6853, 0.1296, 0.0645, 0.0, 0.1852], [0.2443, 0.1242, 0.3095, 0.2305, 0.5, 0.0227, 0.2326, 1.0155], [0.3717, 0.2248, 0.127, 0.2539, 0.3667, 0.3721, 0.3488], [0.1825, 0.1914, 0.2833, 0.5233, 0.7907, 0.4832, 0.2935, 0.6503, 0.1111, 0.7963], [0.1326, 0.1779, 0.246, 0.1953, 0.3333, 0.0, 0.407, 0.2946, 0.4295, 0.1957, 0.4196, 0.2037, 0.086, 0.0, 0.6667], [0.2618, 0.1678, 0.127, 0.1797, 0.2833, 0.0, 0.4535, 0.3876, 0.047, 0.0652, 0.6154, 0.1852, 0.1075, 0.0426, 0.2407], [0.1885, 0.1007, 0.0873, 0.0977, 0.2, 0.0, 0.1977, 0.7054, 0.1946, 0.587, 0.6853, 0.037, 0.1075, 0.0213, 0.4444], [0.2443, 0.2852, 0.0635, 0.1055, 0.3, 0.0, 0.2674, 0.4961, 0.1745, 0.2609, 0.4406, 0.2593, 0.0645, 0.0638, 0.4444], [0.1117, 0.2148, 0.0397, 0.1562, 0.4167, 0.0227, 0.4302, 0.6124, 0.5705, 0.3478, 0.2937, 0.1111, 0.1828, 0.0213, 0.5], [0.1798, 0.1779, 0.0714, 0.1133, 0.2667, 0.0, 0.2791, 0.7287, 0.349, 0.6196, 0.4056, 0.0556, 0.043, 0.0, 0.6852], [0.2182, 0.0973, 0.0794, 0.1328, 0.1667, 0.1977, 0.6047, 0.6577, 0.4565, 0.2727, 0.037, 0.0753, 0.0, 0.8889], [0.2635, 0.1678, 0.0159, 0.1211, 0.2333, 0.0, 0.2558, 0.3953, 0.443, 0.6848, 0.4545, 0.1111, 0.1505, 0.0, 0.3333], [0.2216, 0.1544, 0.1825, 0.1602, 0.2667, 0.3488, 0.6977, 0.1141, 0.337, 0.5734, 0.0741, 0.0645, 0.0638, 0.7778], [0.2391, 0.1846, 0.1429, 0.0977, 0.4833, 0.0, 0.1744, 0.5969, 0.3289, 0.3478, 0.6294, 0.0741, 0.0968, 0.0851, 0.5556], [0.2862, 0.2013, 0.1587, 0.1211, 0.2667, 0.0, 0.314, 0.4031, 0.2349, 0.5217, 0.6084, 0.0926, 0.043, 0.0, 0.463], [0.1242, 0.0794, 0.2422, 0.5667, 0.0, 0.6163, 0.907, 0.443, 0.413, 0.7762, 0.0926, 0.0426, 0.8889], [0.1553, 0.1174, 0.127, 0.2188, 0.5333, 0.0, 0.2907, 0.7054, 0.4899, 0.3804, 0.6084, 0.0185, 0.1183, 0.0213, 0.6481], [0.2129, 0.1208, 0.0635, 0.1836, 0.3333, 0.0, 0.3953, 0.6202, 0.3691, 0.8152, 0.5524, 0.1296, 0.043, 0.0213, 0.6667], [0.3473, 0.1242, 0.0397, 0.1172, 0.65, 0.0227, 0.3605, 0.5426, 0.302, 0.3043, 0.5315, 0.1481, 0.0538, 0.0426, 0.537], [0.0122, 0.2114, 0.0476, 0.1484, 0.0833, 0.3488, 0.9147, 0.5369, 1.1087, 0.8392, 0.1296, 0.043, 0.0213, 0.7222], [0.2461, 0.1309, 0.1111, 0.0977, 0.2167, 0.2442, 0.8527, 0.3893, 0.4457, 0.6154, 0.1296, 0.1505, 1.0741], [0.2024, 0.2248, 0.0952, 0.2031, 0.2667, 0.1977, 0.4729, 0.443, 0.5, 0.8252, 0.1111, 0.1075, 0.0, 1.1667], [0.2757, 0.2047, 0.0714, 0.1211, 0.3833, 0.2558, 0.7287, 0.3423, 0.837, 0.4895, 0.0926, 0.1398, 0.0, 0.7593], [0.3508, 0.1779, 0.0952, 0.2188, 0.4333, 0.0227, 0.3372, 0.4496, 0.3423, 0.75, 0.4126, 0.1481, 0.1505, 0.0, 0.4074], [0.2792, 0.1275, 0.0952, 0.0977, 0.3167, 0.0, 0.186, 0.6899, 0.5369, 0.7609, 0.5734, 0.1111, 0.086, 0.0, 1.0], [0.2356, 0.1879, 0.2063, 0.1406, 0.4333, 0.0455, 0.5349, 0.845, 0.4362, 0.7065, 0.3986, 0.1667, 0.129, 0.0, 0.3333], [0.3211, 0.2181, 0.1508, 0.2422, 0.1667, 0.0, 0.2326, 0.7907, 0.4564, 0.3043, 0.6014, 0.1481, 0.1505, 0.0, 0.8889], [0.3682, 0.1577, 0.1111, 0.1953, 0.2667, 0.0, 0.3721, 0.8915, 0.3826, 0.5, 0.5385, 0.0926, 0.0968, 0.0, 0.7037], [0.3072, 0.2114, 0.127, 0.2227, 0.7, 0.0, 0.6163, 0.8605, 0.5436, 0.5652, 0.6434, 0.2593, 0.172, 0.0851, 0.3333], [0.2845, 0.2517, 0.1905, 0.2109, 0.35, 0.0, 0.4186, 0.6744, 0.4698, 1.087, 0.7343, 0.1667, 0.2151, 0.0638, 0.7593], [0.3002, 0.2248, 0.1111, 0.1914, 0.35, 0.0, 0.3605, 0.845, 0.5638, 1.0109, 0.6783, 0.1111, 0.1828, 0.0, 1.037]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

