created: 20230626011254000
creator: Drevarr
modified: 20230705163537719
modifier: drevarr
tags: ChartData
title: 202306260112_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Zayde Sunsabre", "Crusader Siolith", "Black Raspberry Pie", "Gestern Yesteryear", "Ryvalia Fazebringer", "Miphest\u00f6", "Imalou", "Sygaldry Verdandi", "Traidoruns Maximus", "Warrior Constantine", "Johosh The Mighty", "Oo Dads Mad", "Mmathuss", "Grasszanine", "Yummy Kiwi", "Sub Train", "Xanvias Einzbern", "Arcanophage Farra", "Bella Sassy", "Blancooo Padreee", "Newtype Khan", "Smol Daddy Tika"];
const professions = ["Berserker", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[51.7132, 0.0, 0.0, 0.0, 10.0388, 33.1229, 0.0, 92.438, 0.0, 111.5404, 0.0, 0.0, 0.0, 24.1541, 9.177, 0.0, 19.9718, 0.0, 0.0, 16.2211, 15.9523, 0.0, 2.4343, 0.0, 0.0, 0.0], [52.8471, 6.221, 28.5936, 45.4003, 7.4298, 7.356, 30.4219, 42.1776, 61.488, 15.4505, 62.5218, 9.0816, 24.0856], [15.3592, 15.7844, 24.6717, 43.736, 41.105, 7.0531, 7.0794, 31.9372, 23.2691, 69.513, 20.3969, 4.6213, 9.5273, 9.0801, 7.3319, 6.6074, 14.8856, 7.0963, 7.6441, 7.5125, 18.7392, 17.7062, 11.1456, 5.738, 16.4993, 12.5453, 9.5533], [16.0892, 0.0, 0.0, 12.936, 99.0318, 21.0701, 0.0, 19.4172, 0.0, 30.5218, 15.1301, 4.657, 13.4896, 10.2087, 19.8375, 21.0008, 35.4752, 9.7037, 19.9289, 15.899, 35.7883, 36.0288, 12.5442, 11.6254, 10.5389, 7.2459], [16.2936, 6.9938, 17.4821, 45.144, 101.0667, 13.9277, 0.0, 28.0388, 14.0493, 66.1572, 8.1875, 8.7793, 8.3252, 5.1044, 15.3939, 17.0016, 7.4152, 8.7629, 7.7155, 7.5299, 4.0699, 20.3789, 11.5488, 14.904, 24.769, 11.4048, 8.2174], [6.8112, 51.568, 94.8263, 19.8202, 0.0, 53.9034, 13.2261, 101.7926, 28.2971, 5.9519, 1.1353, 14.8001, 23.678, 8.3076, 5.8696, 16.2355, 7.3583, 16.2423, 8.4619, 33.7838, 5.5008, 27.8705, 7.7104, 7.5187, 12.3869], [10.9792, 6.2404, 12.4872, 31.328, 105.5435, 22.4986, 0.0, 17.468, 10.976, 63.121, 28.9674, 31.8384, 27.8473, 14.3384, 44.7851, 3.7352, 4.7578, 6.3582, 6.2952, 29.6606, 26.6429, 23.7888, 14.2333, 37.9924, 17.6774, 9.189], [13.87, 7.4382, 13.017, 41.008, 111.1055, 23.1682, 7.7258, 36.9602, 19.4275, 89.1684, 21.3066, 18.4853, 13.1779, 24.1879, 40.532, 0.0, 7.2864, 7.3382, 0.0, 7.6342, 15.5184, 25.3066, 25.0848, 19.3752, 40.9088, 30.2438, 10.9498], [29.6672, 25.1353, 12.5629, 56.232, 158.4509, 12.901, 0.0, 31.0376, 11.3602, 68.5542, 14.6992, 9.7654, 18.6539, 15.5183, 28.4073, 6.4529, 29.8816, 6.4512, 5.1258, 25.5807, 23.9803, 44.3074, 35.568, 22.8776], [68.8349, 5.3044, 61.1755, 10.976, 120.649, 21.3066, 8.2447, 6.2328, 7.5924, 7.8715, 14.7798, 3.9928, 72.1997, 5.7509, 7.0603, 9.1646, 127.5768, 133.5456, 23.0267], [0.0, 0.0, 0.0, 64.768, 142.3073, 11.5618, 0.0, 77.8189, 47.4163, 13.2634, 24.3709, 16.7395, 4.8735, 36.5645, 17.0016, 27.1952, 31.369, 0.0, 0.0, 44.7398, 78.7176, 34.4736, 11.799, 65.8775, 29.209, 2.1859], [51.5672, 0.0, 0.0, 27.808, 51.6865, 89.5478, 142.6679, 51.3677, 126.8812, 40.7938, 10.4069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 38.1686, 44.5248, 2.484, 63.9599, 12.4397, 30.5219], [63.8798, 94.6121, 23.8179, 124.644, 22.9345, 19.3406, 39.8899, 17.9037, 51.5458, 6.6461, 11.9232, 37.5514, 0.0, 33.4236, 68.2224, 57.7541, 9.504, 15.525, 72.0299, 22.8307, 25.1583], [48.1298, 50.4968, 0.0, 28.8209, 6.9006, 36.3974, 153.3042, 0.0, 0.0, 75.7478, 0.0, 0.0, 55.632, 89.784, 57.4272, 20.6172, 79.7802, 82.3891, 41.1277], [7.2743, 78.5686, 48.953, 227.0758, 63.7283, 48.803, 35.527, 9.1314, 40.405, 7.4575, 21.252, 6.9082, 7.0904, 16.9031, 55.6906, 90.3686, 34.6176, 59.0944, 80.3794, 48.407, 60.5378], [60.8236, 16.6538, 13.6602, 53.416, 164.2843, 14.8651, 5.7353, 70.6967, 7.6832, 55.2908, 27.3874, 27.4309, 51.71, 0.0, 64.1465, 7.2836, 6.5872, 7.4995, 6.9833, 7.5473, 60.7853, 67.6512, 30.4704, 55.7658, 63.2808, 42.3456, 65.0716], [33.8428, 18.8563, 70.4202, 172.04, 189.3814, 38.3458, 19.4324, 137.1951, 45.4406, 106.7464, 59.8979, 26.4924, 40.2238, 14.6461, 95.3152, 8.1144, 36.984, 49.1098, 0.0, 56.8827, 54.5194, 63.6422, 33.2064, 50.8226, 83.2957, 27.456, 22.6486], [27.886, 0.0, 0.0, 76.032, 326.9406, 80.0395, 0.0, 99.1103, 0.0, 347.565, 79.4808, 25.34, 64.2201, 45.2722, 72.2402, 0.0, 0.0, 66.8774, 0.0, 0.0, 87.6936, 15.2842, 117.7632, 57.6785, 69.7527, 42.3667, 23.0331], [75.8324, 15.9197, 28.5314, 110.792, 426.2437, 87.6283, 0.0, 140.4188, 53.947, 199.9098, 91.4987, 11.0009, 52.6672, 37.449, 11.6168, 13.3694, 23.3496, 18.6278, 0.0, 18.3291, 55.6613, 88.1971, 60.7968, 26.5788, 96.6391, 15.1853, 25.9477], [20.4108, 0.0, 22.6662, 422.136, 490.6822, 0.0, 49.248, 76.0945, 65.6914, 112.8188, 0.0, 27.6024, 68.6137, 106.329, 0.0, 0.0, 0.0, 0.0, 0.0, 38.2982, 133.5485, 16.5024, 24.4426, 81.1385, 79.031, 31.797], [91.0748, 0.0, 24.0662, 178.64, 65.2525, 69.7723, 0.0, 248.8254, 128.7485, 365.3028, 71.0539, 69.3317, 73.0351, 31.1391, 111.8835, 65.4755, 27.2688, 57.6576, 22.7715, 0.0, 78.851, 117.3874, 49.536, 72.0112, 200.4691, 0.0, 54.5873], [67.014, 123.3582, 203.4657, 356.664, 453.9184, 59.7283, 11.245, 239.0044, 175.2867, 842.945, 175.4802, 74.1074, 12.6437, 75.8727, 5.5228, 67.8518, 45.2088, 53.9482, 0.0, 111.9916, 106.6963, 100.5163, 64.5696, 78.097, 98.4768, 0.0, 67.0754]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

