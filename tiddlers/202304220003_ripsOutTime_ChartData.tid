created: 20230422000344000
creator: Drevarr
modified: 20230705163526247
modifier: drevarr
tags: ChartData
title: 202304220003_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Ryvalia Fazebringer", "Demon Sekhmet", "Morv\u00e4rth", "Oo Dads Mad", "Panther B Me", "Nazhul Naxxremis", "Rozaalyna", "Morton Saltbringer", "Newtype Khan", "Solo Bloodborn", "Rina Of Theros", "Domina Flagbringer", "Blancooo Padreee", "Eibh\u00ebar", "Smol Gluvs", "Be\u00eb", "Rahani Sunray"];
const professions = ["Firebrand", "Chronomancer", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1988.0, 1576.04, 2891.32, 0.0, 8673.96, 1582.24, 16112.25, 0.0, 294120.0, 0.0, 0.0, 1683.6, 1010.5, 3386.88, 4065.03, 3759.36, 0.0, 4196.16, 8319.0, 62294.4, 0.0, 11350.5, 0.0, 3483.0], [0.0, 4402.0, 3457.12, 0.0, 0.0, 13116.72, 6941.44, 0.0, 12907.8, 401400.0, 0.0, 0.0, 6706.8, 949.87, 6773.76, 0.0, 0.0, 0.0, 2643.75, 31104.0, 0.0, 2205.24, 0.0, 37152.0], [52670.55, 0.0, 46180.32, 0.0, 164165.4], [0.0, 81868.83, 107724.0, 103075.2, 45207.42, 0.0, 91061.1], [154046.64, 67819.2, 20463.1, 29195.28, 0.0, 57015.42, 26540.8, 78887.25, 24505.65, 681300.0, 0.0, 0.0, 53240.4], [75049.92, 42202.4, 17311.02, 31240.36, 0.0, 61211.36, 16281.76, 97970.85, 22812.3, 533520.0, 0.0, 0.0, 36846.0, 8407.36, 64068.48, 0.0, 65040.48, 41348.25, 33436.8, 0.0, 32592.15, 0.0, 28908.9], [99034.32, 50807.6, 25775.88, 40725.3, 0.0, 84624.0, 32053.12, 109354.05, 21757.95, 1065960.0, 17955.0, 2442.6, 28621.2, 6083.21, 57536.64], [8015.04, 68016.54, 13117.28, 105922.35, 9105.75, 1078380.0, 0.0, 0.0, 29532.0, 31426.55, 63383.04, 11027.94, 30597.0, 78360.75, 194227.2, 5529.6, 44202.09, 0.0], [64181.04, 23288.0, 11108.54, 22989.52, 0.0, 31522.44, 24550.24, 62356.5, 11374.2, 656280.0, 0.0, 71180.4, 15581.91, 52012.8, 41611.92, 19071.36, 0.0, 113864.55, 41277.75, 122083.2, 0.0, 25133.25, 0.0, 55573.2], [0.0, 0.0, 46895.8, 27025.68, 68592.15, 16166.7, 815940.0, 21105.0, 0.0, 23487.6, 11519.7, 82212.48, 86196.12, 0.0, 0.0, 73038.0, 156816.0, 5529.6, 49553.04, 20504.04, 191681.1], [0.0, 38851.2, 18937.9, 24540.96, 0.0, 80674.88, 28378.24, 34065.9, 22940.1, 918000.0, 17892.0, 0.0, 25530.0, 949.87, 95195.52, 127064.97, 12080.64, 103811.25, 54355.5, 159148.8, 0.0, 35348.7, 9571.68, 3483.0], [104742.0, 44758.4, 28851.7, 38045.54, 0.0, 79440.78, 27178.8, 105503.85, 13834.35, 838260.0, 18144.0, 931.5, 60802.8, 25040.19, 57415.68, 5609.45, 107919.99, 47305.5, 193968.0, 1843.2, 47153.22, 4785.84, 3483.0], [60841.44, 14569.2, 25572.52, 48306.2, 0.0, 57085.94, 29016.24, 62314.65, 22524.75, 946080.0, 0.0, 0.0, 56497.2, 0.0, 0.0, 95681.19, 3189.12, 89386.95, 34580.25, 199152.0, 0.0, 83669.4, 4785.84, 121866.3], [0.0, 30075.6, 15429.94, 45555.92, 0.0, 93262.7, 32997.36, 53609.85, 22620.6, 1059300.0, 0.0, 0.0, 55034.4, 0.0, 0.0, 71596.98, 8553.6, 139303.77, 70923.0, 165801.6, 0.0, 45985.74, 0.0, 131967.0], [0.0, 80883.2, 47230.36, 0.0, 96324.48, 127064.97, 46295.04, 146909.31, 127992.75, 115084.8, 5846.4, 124401.48, 11823.84, 235605.6], [127572.72, 60605.6, 25496.26, 46966.32, 0.0, 84765.04, 26668.4, 120067.65, 26486.55, 961380.0, 35910.0, 0.0, 26606.4, 21139.66, 69148.8, 5513.97, 100838.97, 57492.75, 144892.8, 5529.6, 58665.87, 9900.12, 48607.2], [0.0, 0.0, 6996.0, 96965.0, 31593.76, 118519.2, 23323.5, 968580.0, 26523.0, 2794.5, 61630.8, 39389.29, 123742.08, 5513.97, 102150.27, 119356.5, 228268.8, 5529.6, 58309.14, 150736.5], [73349.76, 47115.6, 30046.44, 51867.46, 3484.8, 84095.1, 37131.6, 89893.8, 14473.35, 1130400.0, 0.0, 0.0, 45512.4, 29607.65, 75761.28, 44715.33, 20169.6, 1837.99, 97385.88, 63767.25, 151459.2, 1843.2, 64049.25, 0.0, 114706.8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

