created: 20230212214943000
creator: Drevarr
modified: 20230705163519102
modifier: drevarr
tags: ChartData
title: 202302122149_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "High Sorcer Baradun", "Octavia Daye", "Veggie Mac", "Zadie Miststep", "Sizklea", "Xanvias Tseli", "Harry Callahann", "Tootsie Pop Bringer", "Minka Bringer", "Kosa\u00edr", "Legionstorm", "Lord Erin The Wise", "Venomina The Fierce", "Joh Oshi", "Newtype Khan", "Reverve Mk V"];
const professions = ["Tempest", "Tempest", "Mirage", "Tempest", "Tempest", "Dragonhunter", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Scrapper", "Soulbeast", "Weaver", "Spellbreaker", "Druid", "Spellbreaker", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 30.9442, 79.8498, 0.0, 25.937, 0.0, 0.0, 31.6848], [30.4366, 60.8213, 73.2208, 0.0, 0.0, 30.3923, 30.7795], [4.5738, 233.4446], [25.7796, 94.4923, 79.6489, 29.8657, 16.983, 0.0, 31.0538, 47.1926], [26.7498, 92.951, 88.0859, 30.1343, 29.748, 13.4739, 27.2378, 61.6378], [10.9217, 179.4998, 156.0838, 0.0, 71.447], [119.695, 91.0541, 110.5844, 0.0, 27.824, 0.0, 0.0, 77.2243], [63.1739, 200.7221, 100.2391, 0.0, 54.02, 0.0, 14.7043, 87.3398], [181.3968, 226.894, 11.6728, 40.515, 0.0, 0.0, 64.3142], [37.9764, 173.2162, 177.8792, 13.663, 0.0, 22.0819, 124.4563], [259.0536, 285.8522, 0.0, 90.539, 0.0, 15.7728, 156.0624], [0.0, 304.8178, 7.3321, 42.8815, 72.779, 50.6286, 131.9149, 228.6422], [30.0208, 233.5632, 293.1844, 38.8766, 39.627, 31.7394, 53.2035, 119.8118], [0.0, 265.2187, 406.782, 0.0, 85.248, 72.9828, 94.4672, 142.3258], [76.6735, 266.5229, 399.8516, 34.3956, 105.783, 41.2533, 49.7776, 167.7917], [88.6486, 486.096, 381.0694, 45.6654, 22.052, 54.5787, 89.9558, 179.0093], [63.756, 692.0347, 252.1044, 53.724, 139.416, 94.644, 79.2541, 89.3866]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

