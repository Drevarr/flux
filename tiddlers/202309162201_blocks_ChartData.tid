created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Hawaiian Supreme", "Sana Minatozak", "Elfina Lightborn", "Puppy Sky", "Jimbo The Plug", "Kronika Riddle", "Lord Erin The Wise", "Gamora Titus", "Anja Starkin", "Sofya De Nova", "Adrinz", "Arch Wells", "Zori Fizbow", "Meme Soulmessor", "Arlyss Phury", "Such A Brets", "Xeltrom", "No Reserv\u00e9", "Etchery Howls", "Aira Draugr", "Venomina The Fierce", "Belvyn Brightblade", "Tegan Parker", "Cedryn X", "Regis Hawkesburne", "Etcherii", "Leafzely", "Ax Axun", "High Sorcer Baradun", "Tootsie Pop Rocks", "Mort\u00e4rion", "Austinyaj", "Oo Dads Mad", "Mistwalker Cael", "Xanvias Einzbern", "Tribal S", "Arcanophage Farra", "Keypek The Drunk", "Crusader Siolith", "Gabe Malhorn", "Sub Train", "Rina Of Theros", "Koralia Danai", "Zaedy Zae", "Be\u00eb", "Glorious Gluvs", "Revenant Brandorf", "Bella Sassy", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Spellbreaker", "Scrapper", "Berserker", "Reaper", "Reaper", "Chronomancer", "Weaver", "Firebrand", "Druid", "Weaver", "Firebrand", "Reaper", "Vindicator", "Reaper", "Vindicator", "Mechanist", "Druid", "Vindicator", "Druid", "Herald", "Spellbreaker", "Firebrand", "Tempest", "Berserker", "Berserker", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Scrapper", "Scrapper", "Dragonhunter", "Berserker", "Vindicator", "Berserker", "Druid", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Firebrand", "Druid", "Reaper", "Berserker", "Vindicator", "Firebrand", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 5, 10, 4, 4, 3], [21, 5, 0, 0, 2], [5, 6, 1, 1, 5, 3, 3, 4], [7, 2, 6, 4, 1, 8, 2, 7, 1], [43], [1, 5, 3, 9, 24, 12, 7], [11, 0, 7, 0, 3, 5, 3, 3, 6, 0, 3, 3, 2, 1, 1, 5, 4, 1, 2, 6], [20, 9, 9, 10, 5, 9, 6], [36, 26, 0, 0, 1, 2, 4], [53, 1, 4, 1, 3, 9], [14, 4, 11, 3, 7, 3, 2, 9, 8, 6, 6, 6], [51, 27, 2, 1, 0, 3], [30, 45, 4, 1, 4], [7, 6, 3, 7, 2, 7, 19, 5, 2, 8, 6, 9, 3], [2, 9, 2, 10, 6, 0, 8, 7, 1, 8, 19, 11, 5], [36, 34, 0, 1, 0, 3, 10, 1, 4], [42, 48, 0, 2, 1, 1, 1], [37, 54, 1, 1, 0, 3, 4], [49, 50, 1], [56, 55, 0, 2, 0, 5, 14], [21, 0, 6, 1, 3, 13, 12, 7, 14, 4, 9, 4, 3, 18, 5, 11, 4], [62, 63, 1, 5, 3, 7], [0, 0, 9, 1, 12, 15, 10, 12, 4, 8, 4, 10, 15, 7, 4, 10, 3, 11, 7], [28, 40, 1, 4, 1, 1, 10, 7, 3, 7, 1, 2, 2, 3, 6, 3, 5, 7, 5, 8, 5], [25, 46, 0, 2, 0, 2, 4, 9, 12, 10, 3, 5, 4, 2, 13, 1, 4, 3, 4, 3, 4], [7, 0, 2, 14, 8, 11, 10, 5, 7, 4, 8, 25, 9, 11, 12, 8, 13, 7], [57, 13, 3, 2, 0, 2, 18, 3, 3, 8, 1, 4, 2, 1, 2, 1, 8, 6, 1, 37, 3], [47, 72, 2, 3, 1, 2, 4, 11, 1, 9, 3, 4, 2, 1, 2, 0, 1, 4, 3, 8, 3], [52, 58, 2, 3, 2, 3, 2, 6, 6, 8, 1, 1, 1, 6, 7, 3, 3, 7, 4, 5, 4], [67, 72, 3, 4, 0, 2, 8, 9, 5, 12, 1, 2], [74, 58, 2, 10, 4, 11, 10, 13, 2, 1], [34, 48, 5, 2, 2, 3, 13, 2, 9, 7, 0, 2, 2, 34, 1, 6, 3, 12, 5], [79, 82, 2, 4, 1, 7, 8, 12, 7, 9, 0, 8], [66, 77, 1, 5, 0, 2, 9, 6, 12, 8, 2, 14, 5, 3, 9], [65, 66, 2, 4, 0, 4, 6, 8, 5, 8, 1, 6, 5, 8, 14, 5, 6, 7, 5], [68, 60, 1, 2, 0, 3, 7, 9, 13, 4, 2, 9, 5, 3, 4, 5, 6, 4, 8, 6, 6], [60, 58, 1, 5, 0, 2, 10, 8, 10, 4, 1, 15, 4, 3, 18, 3, 11, 9, 7, 3, 2], [62, 58, 1, 7, 1, 2, 8, 13, 7, 6, 4, 4, 2, 8, 29, 8, 11, 9, 5, 5, 3], [59, 63, 1, 3, 1, 3, 13, 5, 9, 12, 3, 11, 8, 9, 13, 7, 9, 8, 8, 6, 2], [65, 82, 2, 3, 2, 9, 10, 10, 10, 1, 3, 2, 8, 17, 6, 11, 15, 9, 8, 4], [64, 81, 2, 4, 2, 1, 15, 12, 5, 12, 3, 9, 6, 4, 25, 3, 8, 10, 6, 4, 4], [97, 95, 2, 8, 2, 4, 13, 12, 11, 8, 0, 7, 3, 7, 3, 0, 7, 6, 5, 8, 8], [88, 88, 2, 8, 5, 12, 11, 9, 10, 3, 10, 8, 7, 15, 12, 9, 3, 4, 11, 7], [110, 106, 2, 3, 0, 1, 6, 11, 6, 9, 3, 8, 5, 7, 15, 8, 6, 8, 9, 10, 2], [89, 84, 2, 8, 1, 7, 15, 12, 13, 15, 0, 11, 5, 7, 17, 8, 6, 8, 7, 12, 8], [100, 99, 3, 9, 0, 4, 14, 14, 14, 15, 6, 8, 6, 9, 15, 7, 3, 5, 7, 6, 5], [100, 108, 5, 7, 2, 25, 8, 8, 19, 4, 7, 5, 8, 19, 2, 14, 1, 6, 1], [94, 114, 2, 11, 1, 3, 17, 10, 13, 10, 6, 6, 4, 10, 27, 3, 15, 11, 6, 6, 5], [101, 123, 3, 12, 2, 5, 11, 16, 9, 8, 4, 12, 4, 10, 17, 9, 11, 10, 8, 14, 6], [108, 117, 3, 14, 2, 5, 14, 11, 8, 11, 5, 8, 4, 18, 25, 8, 17, 17, 11, 10, 2]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

