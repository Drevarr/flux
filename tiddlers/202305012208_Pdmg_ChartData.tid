created: 20230501220820000
creator: Drevarr
modified: 20230705163527923
modifier: drevarr
tags: ChartData
title: 202305012208_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grilo Gringo", "Kmpek", "Raevarae", "Rosie Sunray", "Smol Gluvs", "Svix", "Tootsie Pop Rocks", "Skye Nightroad", "Joint Lee", "Farra The Bloodless", "Xyntharos", "Viral Marketing", "Kary\u00edna", "Be\u00eb", "Hauzzy", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Dragonhunter", "Vindicator", "Reaper", "Vindicator", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Vindicator", "Vindicator", "Dragonhunter", "Vindicator", "Scourge", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1082.3673, 579.5288, 340.237, 455.3276, 319.9158, 41.4727, 147.3276, 43.6825, 15.1026, 449.232], [0.0, 1082.931, 793.588, 389.0364, 126.5517, 383.5079, 0.0, 1227.067], [53.2749, 61.0, 146.7273, 993.0816, 1050.1047, 738.064, 717.9655], [113.7667, 129.2559, 16.9724, 0.0, 162.0408, 282.5916, 114.7014, 819.7069, 661.5714, 127.3091, 382.9828, 190.254, 62.8205, 757.201], [267.6386, 27.0569, 0.0, 71.5455, 456.8776, 304.4555, 515.5486, 424.5, 178.9714, 189.0909, 48.6724, 41.1111, 62.359, 457.7526], [234.1386, 71.91, 32.0069, 50.1818, 479.2653, 385.0628, 613.8709, 842.2414, 280.9774, 160.4182, 154.5, 224.873, 117.4103], [268.2237, 10.7867, 55.6, 202.5, 1439.1224, 270.8953, 774.096, 660.4138, 489.3278, 59.9818, 29.2931, 0.0, 13.5412], [579.7476, 46.3886, 99.0414, 224.8182, 1480.1837, 615.5393, 996.6066], [697.5612, 88.0332, 165.8, 325.1364, 1847.2857, 606.7173, 984.6256], [431.6272, 57.673, 10.6552, 468.5455, 1197.1633, 701.3717, 824.6363, 858.2759, 456.3594, 31.4182, 130.8017, 93.0, 240.8205, 936.6546], [613.6912, 120.8673, 81.0069, 33.0, 1560.6939, 634.7958, 732.795, 1815.3621, 297.9714, 338.2727, 241.819, 19.9206, 573.4615, 882.768], [679.1816, 340.4218, 111.4759, 0.0, 1658.7959, 850.1099, 1378.7453], [370.7514, 292.2701, 190.3517, 147.0909, 1448.7959, 677.1466, 832.0462, 1053.2414, 815.1639, 240.6, 660.9741, 129.2063, 376.7949, 797.1959], [629.4637, 183.0948, 77.869, 31.8182, 841.2449, 688.0681, 1065.2145, 1913.0517, 797.4241, 331.2909, 435.1638, 23.0476, 511.1538, 912.4021], [888.7906, 99.2275, 264.7172, 170.3636, 1533.0, 1011.6283, 445.7133, 2774.931, 1340.4436, 572.1455, 283.0517, 68.619, 98.0513, 1557.1186], [1325.912, 621.7299, 258.7448, 0.0, 2273.9388, 1514.9634, 2191.5344, 2596.1207, 1405.7985, 243.2909, 755.2672, 116.5714, 136.5897, 2104.2732], [1706.8709, 187.8863, 118.5793, 296.4545, 4213.1633, 1670.267, 3378.4491, 5390.8793, 1541.5008, 335.4545, 2173.0517, 78.746, 163.9487, 1760.232]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

