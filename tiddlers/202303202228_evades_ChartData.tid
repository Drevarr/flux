created: 20230320222849000
creator: Drevarr
modified: 20230705163522656
modifier: drevarr
tags: ChartData
title: 202303202228_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Mak\u00e4dos", "Dark Sidiuz", "Demon Dalham", "Sheep Paws", "Raelyn Sunray", "The X E N", "Rozaalyna", "Avanda Corone", "Sumatra Satyricon", "Tribal S", "Kiloak", "Koralia Danai", "Nazhul Naxxremis", "Smol Daddy Tika", "Fribble Bibble", "Legacy Of Mathus", "Sister Elon\u00edth", "Zadie Miststep", "Rina Of Theros", "Jeckyll Mbs", "Drevarr Moonwillow", "Tootsie Pop Rocks", "Whose Guardian", "Stoic Rapidfire", "Be\u00eb", "Zaylen Harker", "Demon Sekhmet", "Primal Clone", "Viral Marketing", "Newtype Khan", "Black Raspberry Pie", "Cerys Fireblade", "Venomina The Siren", "Johosh The Great", "High Sorcer Baradun", "Eibh\u00ebar", "Solus Sanctus", "Ryvalia Fazebringer", "Xanvias Einzbern", "Misaki Amakase", "Lord Erin The Wise", "Smol Gluvs", "Mistwalker Caelon", "Xyntharos", "\u00c1rkantor"];
const professions = ["Harbinger", "Scourge", "Dragonhunter", "Berserker", "Firebrand", "Scrapper", "Scourge", "Chronomancer", "Soulbeast", "Druid", "Firebrand", "Firebrand", "Scourge", "Berserker", "Scrapper", "Berserker", "Dragonhunter", "Tempest", "Scourge", "Spellbreaker", "Scrapper", "Scrapper", "Dragonhunter", "Druid", "Scourge", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Spellbreaker", "Chronomancer", "Berserker", "Tempest", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Vindicator", "Weaver", "Scourge", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 22, 17, 0, 25, 0, 1, 2, 6, 12, 0, 0, 0, 21], [0, 0, 0, 0, 3, 15, 4, 0, 0, 0, 18, 31, 3, 2, 0, 2, 0, 8, 7, 15], [74, 5, 32], [0, 26, 11, 0, 20, 5, 13, 3, 3, 38], [68, 2, 3, 0, 0, 10, 17, 0, 17, 0, 0, 0, 3], [1, 0, 8, 0, 30, 57, 12, 0, 15], [0, 6, 0, 0, 0, 0, 2, 53, 6, 0, 0, 9, 32, 0, 26, 0, 2, 3, 10, 18], [20, 0, 0, 14, 32, 2, 24, 0, 14, 3, 16, 8, 34, 0, 0], [7, 0, 3, 2, 1, 22, 6, 11, 0, 0, 4, 20, 0, 8, 1, 5, 0, 50, 10, 6, 0, 0, 16], [0, 0, 0, 5, 2, 0, 0, 38, 0, 33, 0, 0, 5, 7, 0, 20, 2, 15, 0, 11, 6, 23, 0, 0, 6], [6, 5, 0, 0, 23, 32, 0, 15, 1, 4, 2, 33, 0, 21, 0, 31], [2, 0, 3, 3, 4, 8, 17, 24, 1, 0, 4, 12, 0, 17, 19, 48, 0, 12], [0, 3, 1, 4, 1, 0, 23, 4, 0, 0, 20, 34, 0, 5, 2, 9, 1, 27, 6, 32, 0, 0, 6], [5, 1, 2, 0, 0, 0, 5, 23, 4, 34, 0, 0, 15, 49, 0, 0, 2, 0, 0, 21, 18, 4, 0, 0, 0], [5, 0, 0, 0, 0, 13, 0, 49, 6, 29, 0, 0, 19, 14, 1, 19, 0, 1, 0, 22, 8, 13], [0, 0, 5, 3, 4, 3, 0, 44, 5, 2, 35, 55, 3, 0, 0, 40], [15, 14, 6, 0, 19, 16, 0, 15, 3, 7, 7, 59, 22, 14, 0, 0, 4], [5, 0, 0, 0, 0, 0, 0, 10, 0, 23, 0, 0, 13, 1, 0, 94, 0, 0, 0, 1, 41, 1, 0, 0, 20], [2, 0, 0, 0, 0, 0, 0, 31, 5, 9, 0, 0, 7, 5, 0, 55, 0, 4, 0, 6, 39, 44, 0, 0, 8], [25, 0, 8, 0, 1, 0, 29, 99, 0, 0, 0, 59], [1, 0, 0, 0, 2, 5, 0, 22, 6, 28, 0, 0, 1, 19, 0, 77, 0, 4, 2, 9, 12, 25, 0, 0, 27], [4, 0, 1, 0, 0, 1, 55, 3, 40, 0, 0, 16, 21, 0, 42, 0, 7, 5, 40, 8, 1], [0, 0, 6, 4, 0, 4, 12, 38, 1, 19, 0, 0, 9, 27, 0, 26, 1, 17, 0, 34, 30, 14, 0, 0, 3], [1, 0, 3, 4, 0, 7, 4, 46, 4, 10, 0, 0, 24, 12, 0, 0, 7, 6, 40, 37, 22, 0, 0, 32], [4, 0, 0, 0, 0, 1, 17, 2, 33, 0, 0, 15, 20, 0, 48, 0, 7, 0, 4, 59, 19, 0, 0, 41], [0, 0, 0, 3, 0, 2, 52, 2, 2, 0, 0, 0, 18, 0, 64, 3, 8, 3, 26, 36, 6, 0, 0, 53], [0, 19, 24, 0, 94, 0, 5, 0, 28, 19, 59, 0, 41], [1, 0, 1, 2, 0, 2, 56, 3, 19, 0, 0, 5, 16, 0, 49, 1, 14, 0, 20, 60, 29, 0, 12], [71, 4, 20, 1, 0, 10, 24, 0, 10, 0, 26, 1, 14, 36, 25, 0, 57], [4, 1, 0, 3, 2, 0, 0, 85, 3, 23, 0, 0, 13, 8, 0, 46, 2, 12, 6, 24, 42, 18, 0, 2, 9], [4, 0, 0, 2, 2, 2, 1, 55, 0, 30, 0, 0, 9, 40, 0, 31, 1, 16, 1, 52, 9, 59, 0, 0, 9], [6, 0, 3, 4, 1, 73, 0, 5, 0, 0, 13, 48, 0, 2, 1, 7, 3, 40, 31, 24, 0, 0, 62], [62, 6, 54, 0, 0, 9, 7, 0, 69, 0, 12, 7, 30, 26, 7, 0, 54], [27, 0, 2, 7, 0, 7, 0, 75, 3, 48, 0, 0, 25, 9, 0, 56, 0, 9, 0, 21, 24, 14, 0, 19], [1, 1, 3, 6, 2, 83, 6, 24, 0, 0, 5, 36, 0, 19, 0, 0, 4, 85, 43, 12, 0, 0, 33], [0, 0, 0, 2, 1, 0, 2, 79, 4, 7, 0, 0, 20, 26, 0, 56, 1, 4, 0, 18, 36, 49, 0, 0, 62], [0, 0, 2, 1, 3, 0, 0, 106, 4, 19, 0, 0, 15, 18, 0, 11, 7, 3, 3, 35, 65, 32, 0, 49], [0, 1, 1, 6, 4, 1, 4, 33, 3, 2, 0, 0, 17, 40, 0, 78, 2, 17, 6, 36, 44, 50, 0, 36], [8, 0, 13, 5, 0, 0, 4, 43, 0, 37, 0, 0, 23, 40, 0, 96, 0, 6, 3, 28, 40, 24, 0, 0, 43], [84, 1, 3, 24, 56, 1, 10, 1, 21, 5, 36, 27, 86, 0, 1, 81], [9, 0, 3, 3, 0, 2, 0, 126, 9, 39, 0, 0, 20, 54, 0, 17, 0, 5, 1, 69, 105], [6, 7, 6, 1, 2, 4, 76, 3, 11, 0, 0, 20, 30, 3, 90, 2, 17, 6, 32, 53, 62, 0, 0, 36], [16, 0, 3, 12, 10, 10, 12, 88, 10, 24, 0, 2, 13, 50, 3, 57, 5, 13, 6, 36, 64, 31, 0, 1, 18], [21, 5, 2, 1, 1, 10, 7, 137, 4, 18, 1, 19, 48, 0, 47, 8, 39, 3, 78, 74, 61, 0, 0, 50], [14, 0, 7, 7, 20, 6, 8, 250, 3, 47, 0, 0, 71, 57, 0, 111, 4, 32, 4, 83, 128, 61, 2, 110]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

