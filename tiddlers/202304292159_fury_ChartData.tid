created: 20230429215910000
creator: Drevarr
modified: 20230705163527437
modifier: drevarr
tags: ChartData
title: 202304292159_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Stark Gandalf", "Shondria Telthalion", "Kaotic Reaper Z", "Lord Erin The Wise", "Miphest\u00f6", "Zenek Tryst", "Skye Nightroad", "Duchess Hazel", "Bombshell Cutie", "Tootsie Pop Rocks", "Xanvias Tsolice", "Fribble Bibble", "Blancooo Padreee", "Kenley Ellesmera", "Newtype Khan", "Owl Scowls", "Venomina The Fierce", "Drevarr Moonwillow"];
const professions = ["Weaver", "Deadeye", "Tempest", "Weaver", "Tempest", "Weaver", "Scrapper", "Vindicator", "Chronomancer", "Scrapper", "Weaver", "Scrapper", "Spellbreaker", "Druid", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.2277, 100.8733, 38.3971, 69.1012, 425.5915, 24.152], [0.0, 37.8013, 14.6059, 122.4482, 0.0, 17.9032, 135.8545, 0.0, 25.0705, 72.8595, 44.3108, 13.4702, 130.8563, 0.0, 26.0855, 0.0, 6.9552, 99.2979], [10.753, 11.9784, 327.4028, 126.5779, 3.6146, 123.3986, 56.3955, 0.0, 104.1529, 10.5253, 14.0679, 0.0, 0.0, 11.5713], [25.9214, 44.0257, 21.5611, 47.079, 24.5309, 44.6292, 245.9545, 232.3642, 44.6641, 150.5763], [0.0, 40.0756, 0.0, 0.0, 1.7222, 150.1808, 301.6484, 146.5699, 0.0, 27.5247, 51.9675, 141.9748, 10.7078, 57.0024, 0.0, 58.6592, 96.9298], [180.0288, 6.2307, 61.0812, 6.0278, 48.944, 472.2713, 256.0118, 39.6389, 229.9122], [12.8142, 32.9175, 17.0113, 0.0, 41.3338, 72.7076, 503.1766, 170.4461, 22.5028, 154.0458, 15.8977, 4.0219, 192.9109, 12.0159, 0.0, 0.0, 18.7496, 73.3567], [46.4278, 0.0, 20.0831, 112.7323, 28.0858, 14.9408, 683.7793, 257.9539, 38.041, 192.9042], [0.0, 21.9668, 144.2374, 30.8458, 193.2644, 332.8756, 286.2854, 32.8506, 291.438, 74.0767, 38.5168, 103.8678, 14.8754], [10.5746, 163.7735, 5.9119, 287.4835, 23.4285, 449.6472, 0.0, 17.8114, 322.3418, 72.6734, 0.0, 0.0, 81.696, 181.1581], [26.4967, 116.8128, 15.9421, 92.959, 21.0105, 105.1597, 48.2448, 116.3064, 681.8477, 222.9965, 21.8637, 221.2385, 70.6635, 28.1854, 131.1414, 17.1873, 61.9962, 26.2211, 14.3152, 117.3814], [69.6389, 255.1122, 72.0691, 70.518, 1101.6445, 479.0083, 39.132, 431.3745], [0.0, 0.0, 88.9603, 152.5636, 597.824, 550.2941, 163.0665, 171.8618, 50.9975, 432.4815, 39.6981, 108.6862, 76.2808, 113.7488, 291.5968], [127.7438, 293.2612, 604.2626, 334.7232, 35.6717, 321.6227, 204.795, 22.8015, 497.7671, 71.2436, 113.477, 33.6072, 68.0984, 265.6555], [0.0, 168.2112, 31.2984, 108.927, 138.9011, 235.3948, 42.769, 155.0752, 938.7479, 358.2566, 0.0, 302.0778, 152.3048, 6.1499, 248.2184, 83.5942, 0.0, 0.0, 61.0328, 19.6443], [53.8839, 156.2085, 111.3412, 184.8153, 109.8922, 175.8764, 1097.7813, 471.8112, 390.55, 125.0295, 57.8603, 324.8125, 35.6827, 63.5187, 20.0389, 69.6072, 180.889], [123.9764, 209.8193, 162.8621, 188.048, 1047.2383, 596.447, 66.9685, 360.4811, 155.472, 6.1712, 346.0993, 102.8196, 130.6508, 14.5715, 55.1264, 334.9219], [0.0, 66.2304, 143.7345, 217.7822, 71.8994, 282.1166, 99.647, 325.0268, 1930.2923, 766.2077, 461.0966, 146.493, 275.7771, 112.6757, 21.7819, 62.8505, 154.5232, 306.6125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

