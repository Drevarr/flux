created: 20230916001624000
creator: Drevarr
tags: ChartData
title: 202309160016_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Aviva Ryan", "Cat Wigglebooty", "Legoh Brave", "Mort\u00e4rion", "Ballymoon", "Do Pie", "Venomina The Fierce", "Keypek The Drunk", "Glorious Gluvs", "Unbreakable Nemesis", "Emerald Vermilion", "Gamora Titus", "Amiti\u00e9l", "Sister Elonith", "Bella Sassy", "Sub Train", "Rina Of Theros", "Brutal Araden", "Leafzely", "Eibh\u00ebar", "Hey Yey Yeah Ah Ah", "Cupi Cupita", "Kahlyanne", "Jimbo The Pleb", "Legendary Sakis", "Drevarr Moonwillow", "Revenant Brandorf", "Kyrillien", "Koralia Danai", "Akira Sparks", "K\u00e2 \u00d4tik R\u00e6j", "Mike The Archmagus", "Gabe Malhorn", "Solus Luxes", "Air One Com", "Brutal Araden", "Rod Reaper", "Primal Clone", "Tegan Parker", "Ryvalia Fazebringer", "Arcanophage Farra"];
const professions = ["Weaver", "Scrapper", "Tempest", "Scrapper", "Soulbeast", "Firebrand", "Spellbreaker", "Scrapper", "Berserker", "Firebrand", "Reaper", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Reaper", "Vindicator", "Scrapper", "Chronomancer", "Firebrand", "Herald", "Tempest", "Berserker", "Druid", "Scrapper", "Vindicator", "Vindicator", "Firebrand", "Elementalist", "Berserker", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Renegade", "Reaper", "Chronomancer", "Tempest", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1044.81], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 696.54], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 62.1, 0.0, 0.0, 0.0, 0.0, 348.27], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 659.52], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1741.35], [0.0, 0.0, 0.0, 180.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 439.68, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 0.0, 0.0, 879.36, 0.0, 0.0], [184.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 443.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 219.84, 0.0, 0.0], [276.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 219.84, 0.0, 0.0], [591.36, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 696.54], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1538.88], [2437.89], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 242.88, 0.0, 0.0, 0.0, 147.84, 0.0, 0.0, 0.0, 0.0, 0.0, 659.52, 0.0], [0.0, 0.0, 1099.2, 0.0, 1393.08], [0.0, 32.12, 0.0, 180.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 879.36, 0.0, 348.27], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 591.36, 0.0, 0.0, 1319.04, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1330.56, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 348.27], [0.0, 389.16, 0.0, 0.0, 0.0, 303.6, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 389.16, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 439.68, 0.0, 1393.08], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2638.08, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2638.08, 0.0, 0.0], [4179.24], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 591.36, 0.0, 0.0, 0.0, 0.0, 0.0, 3482.7], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1182.72, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 879.36, 0.0, 1393.08], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 273.24, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1653.26, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 0.0, 0.0, 0.0, 1062.81, 1758.72, 0.0, 0.0], [184.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 165.6, 0.0, 0.0, 0.0, 1758.72, 0.0, 348.27], [0.0, 32.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 295.68, 0.0, 82.8, 0.0, 0.0, 0.0, 0.0, 2857.92, 348.27], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 144.9, 0.0, 0.0, 0.0, 472.36, 0.0, 0.0, 4179.24], [103.5, 150.4, 0.0, 0.0, 0.0, 1538.88, 0.0, 2437.89], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1921.92, 0.0, 0.0, 0.0, 0.0, 2418.24, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2716.07, 0.0, 0.0, 348.27], [920.2, 192.72, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 455.4, 0.0, 182.16], [0.0, 64.24, 0.0, 180.32, 32.2, 0.0, 48.76, 0.0, 0.0, 91.08, 0.0, 0.0, 0.0, 70.84, 0.0, 147.84, 0.0, 0.0, 0.0, 354.27, 0.0, 0.0, 3482.7], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 227.7, 0.0, 0.0, 0.0, 0.0, 4875.78], [460.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 472.36, 3737.28, 0.0, 348.27], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 439.68, 0.0, 11144.64], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 485.76, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3957.12, 0.0, 3830.97], [552.12, 192.72, 0.0, 135.24, 96.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 121.44, 0.0, 0.0, 887.04, 0.0, 0.0, 0.0, 0.0, 1099.2, 0.0, 4179.24], [276.06, 0.0, 0.0, 180.32, 0.0, 0.0, 0.0, 0.0, 0.0, 364.32, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4616.64, 0.0, 4179.24], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 739.2, 0.0, 0.0, 0.0, 6375.36, 0.0, 6965.4]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

