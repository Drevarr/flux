created: 20230605220452000
creator: Drevarr
modified: 20230705163533880
modifier: drevarr
tags: ChartData
title: 202306052204_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Rozaalyna", "Oo Dads Mad", "Stoic Rapidfire", "Rozaalyna", "Zayde Sunsabre", "Black Raspberry Pie", "Primal Clone", "Mildly Ecstatic", "Newtype Khan", "Smol Gluvs", "Be\u00eb", "Eibh\u00ebar"];
const professions = ["Reaper", "Reaper", "Spellbreaker", "Druid", "Scourge", "Spellbreaker", "Chronomancer", "Chronomancer", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.12, 0.0, 0.165, 0.3521, 0.0233, 0.0, 0.2, 0.0, 0.1864, 0.0], [0.0, 0.0541, 0.04, 0.0, 0.2427, 0.1972, 0.0, 0.0208, 0.2462, 0.008, 0.0, 0.0], [0.0, 0.0806, 0.3462, 0.1521, 0.0, 0.027], [0.0, 0.0816, 0.0962, 0.0823, 0.0, 0.0, 0.0, 0.0, 0.068, 0.0845, 0.0233, 0.0833, 0.1015, 0.0213, 0.0678, 0.0222], [0.1111, 0.0752, 0.25, 0.2343], [0.0, 0.0387, 0.1923, 0.1503, 0.0, 0.0, 0.04, 0.0, 0.1165, 0.1972, 0.0, 0.0, 0.2523, 0.008, 0.0847, 0.0], [0.1081, 0.04, 0.0606, 0.4951, 0.4366, 0.0233, 0.0833, 0.5569, 0.1064, 0.0678, 0.0], [0.0, 0.1375, 0.1346, 0.2326, 0.0, 0.0541, 0.12, 0.0, 0.2718, 0.3099, 0.0233, 0.0625, 0.3385, 0.0266, 0.0847, 0.0], [0.2222, 0.0644, 0.3269, 0.1789, 0.0333, 0.2432, 0.0, 0.0303, 0.5146, 0.3099, 0.1163, 0.0208, 0.5754, 0.0106, 0.0169, 0.0667], [0.1389, 0.13, 0.1731, 0.2129, 0.0667, 0.0541, 0.24, 0.0, 0.3689, 0.4648, 0.2326, 0.0208, 0.3692, 0.0, 0.1525, 0.0], [0.0278, 0.1396, 0.5, 0.2755, 0.0, 0.0811, 0.08, 0.0303, 0.3301, 0.2535, 0.093, 0.0833, 0.3662, 0.0133, 0.0169, 0.0], [0.0556, 0.2406, 0.8077, 0.4794], [0.25, 0.3888, 0.7115, 0.5975, 0.0333, 0.1351, 0.12, 0.0606, 0.466, 0.4225, 0.1395, 0.0208, 0.7446, 0.0851, 0.1864, 0.0667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

