created: 20230422220129000
creator: Drevarr
modified: 20230705163526283
modifier: drevarr
tags: ChartData
title: 202304222201_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuliae", "Rey Peltrow", "Drevarr Moonwillow", "High Sorcer Baradun", "Tika Sumiko", "Zadie Miststep", "Miphest\u00f6", "Mac Aaroni"];
const professions = ["Chronomancer", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[113.5575, 76.4728, 272.3528, 125.1225, 149.9011], [263.3928, 0.0, 446.9869, 215.4276, 47.619], [20.8656, 96.2282, 5.4846, 6.9748, 414.388, 59.9192, 0.0, 74.228, 12.8511, 32.0265, 11.0862, 8.3585, 71.8536, 50.6822, 49.7959, 31.9882, 7.245, 6.4319, 93.8157, 29.492, 0.0, 29.3703], [41.8932, 567.373, 78.3486, 68.9255, 1321.1376, 229.3192, 0.0, 247.5424, 174.618, 75.0915, 77.0525, 84.9412, 177.1468, 0.0, 151.5695, 77.5544, 0.0, 11.1602, 107.5894, 101.1154, 43.1892, 129.5452], [83.5758, 639.3442, 47.4705, 86.4941, 1657.552, 133.584, 333.9106, 47.5294, 90.9315, 137.445, 25.9186, 445.4923, 92.5907, 384.3783, 56.0474, 63.0605, 19.2083, 87.3622, 181.8178, 87.7647, 111.1619], [0.0, 423.4306, 43.5105, 151.8335, 1307.8968, 221.5752, 26.5558, 404.67, 174.3237, 130.3335, 118.2738, 44.1386, 398.7875, 87.3144, 510.2798, 98.721, 17.5039, 18.433, 56.877, 162.0575, 175.4228, 297.9397], [788.8843, 48.114, 139.7263, 2886.004, 0.0, 525.2617, 281.3508, 0.0, 142.2225, 185.133, 392.0787, 89.4902], [657.337, 80.5266, 164.1381, 2251.4264, 301.7256, 0.0, 330.9044, 183.2018, 168.3, 199.3075, 82.7783, 461.6594, 105.0426, 499.756, 149.8341, 75.8407, 32.8474, 109.7566, 85.9837, 160.5465, 262.5374]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

