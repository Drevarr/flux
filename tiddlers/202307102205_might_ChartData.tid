created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Rosreipp", "Be\u00eb", "Cyclotechnist Farra", "Philip Poundhouse", "Tootsie Pop Rocks", "Gabe Malhorn", "Colera Piadosa", "Il Kurai Il", "Black Raspberry Pie", "Legacy Of Mathus", "Fribble Bibble", "Rangu Elfdrake", "Scarlet Merc\u00fcry", "Konztantin\u00eb", "Mistwalker Cael", "Nidircc", "Tegan Parker", "Artakama Nahid", "Rozaalyna", "Ateriuz", "Primal Clone", "Sister Elonith", "Melli Dragonswrath", "Tika Fiery", "Johosh The Mighty", "Zaedy Zae", "Eibh\u00ebar", "Koralia Danai", "Belvyn Brightblade", "Irin The Undeath", "Xanvias Einzbern", "Arriasa", "Newtype Khan", "Sub Train", "Venomina The Siren", "Drevarr Moonwillow", "Sygaldry Verdandi", "Solus Sanctus", "Bella Sassy", "Crusader Siolith", "Tribal Z"];
const professions = ["Tempest", "Scourge", "Scrapper", "Herald", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Berserker", "Scrapper", "Firebrand", "Firebrand", "Herald", "Vindicator", "Tempest", "Tempest", "Tempest", "Scourge", "Berserker", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Berserker", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Scourge", "Berserker", "Druid", "Spellbreaker", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.4733, 0.0, 17.6856, 13.72, 0.0, 2.7268, 7.8498], [1.713, 0.8039, 0.0, 0.3116, 4.5472, 0.0, 4.5967, 4.851, 0.1214, 3.2314, 3.36, 0.0, 0.0, 12.3059, 4.1242, 4.5091, 3.5574, 5.2744, 2.5536, 2.3232, 2.3131, 4.2684, 4.0345], [6.4239, 0.0, 0.0, 6.3504, 0.0, 4.2851, 6.4386, 0.0, 3.5165, 3.575, 0.0, 0.0, 12.518, 4.3075, 5.5339, 2.9106, 5.045, 1.5744, 3.5136, 0.0, 3.6419, 3.1998], [10.0723, 22.0451, 12.6126, 2.8608, 4.5696, 0.4978, 16.9171, 0.988, 4.3475], [12.2054, 0.0, 0.0, 4.4409, 15.288, 2.4152, 4.4982, 0.0, 1.8374, 0.5376, 1.7957, 0.54, 15.7006, 0.0, 1.4347, 4.9588, 1.7581, 0.9216, 1.728, 2.0789, 1.6056, 2.0172], [25.6726, 4.3075, 4.6848, 14.9842, 14.2943, 2.2176, 1.3632, 7.0272, 0.0, 1.2869], [4.8715, 5.0642, 1.9404, 3.714, 6.6211, 5.2416, 2.9102, 7.5816, 53.8912, 4.9797], [18.4152, 0.3742, 4.4218, 1.714, 6.5856, 0.0, 6.1289, 10.143, 0.0, 5.639, 0.1344, 0.289, 0.0, 19.3075, 4.0964, 4.8922, 2.5824, 2.4, 1.8154, 5.2083, 0.0, 5.3561], [19.7, 0.0, 0.0, 0.0, 20.3056, 4.235, 4.4668, 12.789, 0.0, 2.8512, 4.6502, 0.0, 0.0, 16.9736, 3.5132, 2.0496, 3.4496, 3.2869, 0.0, 2.8992, 0.0, 5.5216, 0.0, 2.7824], [35.3314, 0.0, 2.2176, 3.506, 17.248, 4.3085, 6.6483, 20.6388, 2.0341, 2.8512, 2.9299, 2.3736, 3.8448, 10.8207], [30.4065, 0.0, 0.0, 5.3758, 15.4448, 1.9339, 2.7009, 11.907, 3.289, 1.9008, 3.5482, 1.6718, 5.4432, 1.273, 3.1466, 4.4506, 7.9772, 6.1916, 0.7104, 2.3232, 1.7275, 1.1356, 2.2607], [6.2098, 5.6874, 9.0944, 1.2974, 2.2594, 16.0524, 0.0304, 6.9062, 0.0, 1.5274, 7.9056, 35.4324, 6.9654, 3.2208, 6.0907, 5.5037, 0.0, 0.0, 1.3176], [66.5944, 2.7997, 1.1558, 25.3208, 20.6192], [26.338, 4.4906, 15.4262, 12.6224, 1.4198, 2.1815, 2.1168, 1.012, 1.8374, 1.6666, 4.7266, 1.62, 26.5213, 2.169, 1.3762, 4.3659, 1.9874, 1.0752, 2.2272, 1.5811, 3.3678], [27.6228, 0.0, 1.465, 9.4271, 14.112, 2.3256, 1.9218, 0.441, 2.3175, 1.7424, 4.8384, 3.2818, 2.2896, 19.3075, 2.0469, 1.5518, 6.5219, 7.3382, 2.7552, 1.9392, 2.1667, 1.9972, 1.2584, 2.852], [0.0, 0.0, 0.0, 0.0, 5.9184, 95.2643, 4.8575, 2.3424, 0.0, 0.3822, 7.2384, 0.0, 0.0, 10.2991, 0.0, 11.9643], [61.6694, 0.0, 39.812, 0.0, 0.0, 0.0, 3.969, 0.0, 0.0, 1.3171, 0.0, 0.0, 23.1265, 0.0, 0.0, 0.0, 11.466, 0.0, 0.0, 0.0, 3.7594, 0.0], [61.6694, 0.0, 0.0, 3.8176, 36.3776, 0.0, 0.0, 6.615, 4.7362, 0.0, 0.0, 0.0, 0.0, 19.3075, 0.0, 0.5856, 2.9645, 0.0, 0.0, 0.0, 1.0248, 7.2838, 2.2259], [27.1945, 1.0118, 1.9488, 8.7259, 14.504, 2.2277, 12.4396, 15.2586, 1.9633, 4.6886, 1.7741, 1.1352, 2.0304, 4.6677, 6.0183, 5.2997, 11.2651, 9.4786, 1.8336, 3.2064, 3.865, 10.2599, 1.9136, 5.8083], [8.8817, 16.3072, 4.1861, 6.5185, 16.2288, 1.6394, 4.1818, 4.6234, 3.096, 2.5704, 36.7054, 5.7434, 9.6624, 9.9715, 5.5037, 1.7472, 1.2288, 8.3155, 10.4557, 0.8684, 5.7387], [19.7, 5.5579, 2.0429, 12.9331, 14.0336, 4.8226, 3.1943, 8.9082, 0.0, 1.8058, 8.4672, 1.2384, 3.7368, 29.4916, 6.5683, 3.9528, 8.7318, 8.5613, 2.6976, 1.9584, 3.5136, 6.3831, 6.0169], [35.9738, 2.0651, 2.0294, 6.8561, 15.1312, 4.4554, 10.9853, 11.8188, 1.8418, 4.3085, 6.3974, 5.7792, 2.2464, 28.6429, 4.4603, 5.6803, 7.7077, 3.7456, 0.0288, 2.8032, 1.6982, 6.1873, 0.4992, 2.6781], [43.4684, 2.0294, 13.868, 2.2736, 4.3085, 4.9603, 13.671, 1.6394, 3.8333, 5.2147, 4.1074, 3.7368, 36.7054, 8.4929, 5.0362, 5.0666, 8.4084, 1.7376, 1.2672, 3.8942, 6.3048, 0.6448, 0.8695], [52.8901, 0.7623, 0.0, 13.2447, 16.5424, 5.0674, 4.4928, 12.4362, 0.3643, 0.0, 2.6342, 2.4355, 5.2488, 28.4308, 3.7271, 4.5091, 16.709, 10.778, 2.1312, 1.2288, 1.259, 6.3439, 0.0, 3.165], [31.4771, 2.273, 1.465, 11.8423, 15.288, 6.0955, 2.623, 12.0834, 3.0866, 1.9325, 5.8867, 2.4149, 2.8728, 55.5885, 6.1406, 5.2704, 5.7134, 9.2492, 2.3136, 0.672, 4.392, 8.3019, 0.9048, 2.8172], [46.4662, 4.1441, 0.0, 2.9606, 16.1504, 6.5362, 3.1943, 19.9332, 1.3966, 1.5206, 1.8278, 0.0, 2.0952, 61.5293, 1.558, 0.0, 6.6297, 19.4158, 0.4416, 0.0, 1.5518, 1.214, 0.0, 4.104], [30.6206, 4.851, 2.352, 8.1026, 12.3088, 4.1861, 6.2068, 16.4052, 3.4509, 5.8291, 4.8384, 1.7544, 2.5704, 44.3435, 1.8635, 6.9101, 6.3063, 11.2367, 1.7952, 2.3616, 4.6555, 9.3201, 3.12, 7.4081], [43.0401, 0.0, 19.2438, 6.4288, 7.1482, 3.0645, 18.4338, 0.0607, 9.9792, 8.8166, 2.4974, 5.2488, 46.0409, 2.9939, 1.669, 10.5105, 14.4472, 1.0656, 0.5376, 1.9618, 7.5187, 1.9129], [41.113, 1.2197, 0.0, 26.3336, 27.2832, 0.0, 11.8943, 16.4052, 2.955, 5.4806, 1.559, 0.0, 2.0304, 60.2563, 6.2322, 2.8109, 12.0197, 4.9686], [53.7466, 4.0887, 1.8413, 11.2969, 18.7376, 6.4138, 11.6605, 21.8736, 2.9044, 3.6432, 9.5693, 2.8896, 3.024, 41.7975, 3.2994, 8.4912, 9.0964, 3.3696, 2.6112, 4.9776, 4.1901, 1.1284, 7.5473], [86.7227, 1.6355, 2.231, 9.7388, 13.4064, 5.3856, 4.9083, 13.4946, 1.9734, 3.168, 4.8384, 2.1259, 2.6568, 36.4932, 4.6131, 8.1984, 9.8637, 14.9822, 1.7664, 1.1136, 5.6803, 3.5244, 6.3647], [75.1596, 3.8947, 2.2714, 10.5958, 27.2048, 3.8434, 2.4412, 22.3146, 3.5319, 2.5661, 4.6771, 4.5408, 3.7152, 41.3732, 3.2689, 4.0992, 6.6297, 7.0325, 2.4096, 0.0384, 0.0, 10.6907, 1.222, 4.3823], [47.9651, 2.966, 4.8384, 3.1164, 24.4608, 8.8373, 12.2059, 43.8354, 4.048, 4.3085, 7.6608, 4.5614, 4.8168, 58.5589, 3.0856, 5.9731, 4.9049, 9.4786, 3.7152, 1.2288, 2.8694, 7.597, 4.5562], [81.7977, 0.0, 10.0504, 26.1072, 14.2474, 7.1677, 13.23, 5.5964, 4.4986, 6.9888, 1.9814, 8.7696, 58.1346, 3.941, 3.6307, 10.6722, 11.8482, 1.6704, 0.0, 1.8739, 1.5272, 3.7562], [108.1356, 0.0, 17.5298, 2.8224, 0.0, 1.0388, 40.7484, 17.9942, 0.0, 19.6699, 0.0, 38.6149, 0.0, 1.3762, 13.3672, 23.2378, 8.9088, 19.9296, 1.3762, 3.172, 0.4521], [105.7802, 5.7242, 4.9997, 27.0348, 38.3376, 6.6586, 11.3489, 28.8414, 5.6368, 4.8787, 5.6448, 3.2818, 5.292, 52.1938, 8.0652, 10.5994, 6.2524, 16.2817, 1.5072, 3.264, 3.4258, 12.4137, 2.9796, 8.1385], [51.1771, 0.0, 0.0, 37.0072, 44.8448, 7.7357, 11.5826, 23.6376, 1.8115, 7.6982, 11.5046, 10.4026, 9.3096, 86.5654, 4.5214, 7.2614, 17.7331, 16.8168, 1.9104, 11.3856, 0.9077, 11.1606, 0.2912, 5.4952], [104.0672, 5.9321, 0.0, 37.3968, 20.4624, 12.289, 11.0373, 9.5256, 4.2605, 11.5315, 1.2902, 1.4242, 12.7224, 75.1082, 4.0326, 5.8853, 14.2835, 25.4545, 2.8032, 4.6656, 1.3176, 8.4977, 1.69, 5.7387], [81.1553, 4.352, 0.0, 44.0971, 24.696, 8.4701, 6.6224, 42.4242, 0.081, 0.5702, 9.2736, 9.1848, 7.0632, 76.5934, 3.666, 8.3155, 14.3913, 30.0409, 0.8544, 1.8624, 1.669, 11.1214, 2.0956, 2.7128], [87.7933, 6.14, 5.7658, 33.4234, 41.4736, 13.3661, 8.3883, 29.3706, 4.2909, 16.7587, 9.5693, 7.0176, 7.7328, 63.651, 5.2241, 9.4282, 18.326, 19.4922, 1.6992, 5.1072, 7.8178, 11.6697, 5.5648], [208.1344, 0.0, 23.6067, 32.4576, 0.0, 15.4521, 60.3288, 2.0847, 14.351, 0.0, 6.6874, 8.7696, 119.2395, 10.9369, 9.9845, 8.3006, 6.5738, 0.0, 0.0, 0.0, 12.7662, 0.0, 7.4429]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

