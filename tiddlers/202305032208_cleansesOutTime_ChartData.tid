created: 20230503220838000
creator: Drevarr
modified: 20230705163528031
modifier: drevarr
tags: ChartData
title: 202305032208_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Cedryn X", "Inedible Plant", "Xanvias Einzbern", "High Sorcer Baradun", "Kosa\u00efr", "Demon Dalham", "Kary\u00edna", "Newtype Khan", "Hauzzy", "Venomina The Fierce", "Sygaldry Verdandi", "Tootsie Pop Rocks", "Lucas Ryn", "Mannse Lee", "Xkaet", "Miphest\u00f6", "Black Raspberry Pie", "Primal Clone", "Tegan Parker", "Mac Adaymia", "Eibh\u00ebar", "\u00c1rkantor", "Tribal S", "Skye Nightroad", "Artakama Nahid", "Arriasa", "Johosh The Great", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Chronomancer", "Berserker", "Vindicator", "Berserker", "Tempest", "Catalyst", "Firebrand", "Vindicator", "Spellbreaker", "Berserker", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Vindicator", "Chronomancer", "Vindicator", "Druid", "Scrapper", "Tempest", "Druid", "Willbender", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[384688.92, 0.0, 0.0, 19992896.64, 29858048.08], [35469177.12, 1863847.79, 0.0, 0.0, 129756.9, 0.0, 10052.83, 14320798.47, 0.0, 0.0, 1476792.96, 11963802.76], [35426969.76, 143148.6, 533.61, 0.0, 2793.0, 21609.0, 0.0, 0.0, 10508478.09, 0.0, 0.0, 17086738.56, 1418100.67], [29642340.0, 2580386.06, 0.0, 2793.0, 21609.0, 0.0, 0.0, 11250378.15, 0.0, 0.0, 7432767.36, 11926513.76], [57689066.12], [29597355.84, 4443968.76, 0.0, 0.0, 0.0, 0.0, 10052.83, 24077183.13, 0.0, 0.0, 9384526.08, 8269954.42], [32178113.76, 7108123.26, 1067.22, 0.0, 86538.9, 0.0, 0.0, 15914066.52, 0.0, 12592435.2, 5984511.61], [51450771.84, 2868538.89, 1600.83, 0.0, 0.0, 108147.9, 0.0, 0.0, 23106597.03, 0.0, 0.0, 17041372.8, 7659533.49], [58684335.84, 4588707.9, 0.0, 0.0, 0.0, 216295.8, 0.0, 0.0, 7707074.1, 0.0, 0.0, 18251126.4, 12203571.03], [42452273.76, 1290193.03, 0.0, 0.0, 0.0, 64827.0, 0.0, 0.0, 29255858.28, 0.0, 19046.3, 19730668.8, 9367742.58], [50149008.0, 8264180.75, 0.0, 0.0, 21609.0, 0.0, 0.0, 25871659.44, 0.0, 18762178.56, 1985639.25], [55408822.56, 6182428.98, 0.0, 0.0, 2793.0, 108147.9, 0.0, 0.0, 17023371.09, 0.0, 15025345.92, 15070349.35], [56804997.6, 10329496.94, 0.0, 0.0, 33925.64, 0.0, 0.0, 19384687.41, 0.0, 0.0, 15815809.92, 12501510.14], [75020250.24, 5497701.51, 0.0, 486.08, 0.0, 173077.8, 0.0, 12557.46, 14654963.73, 0.0, 0.0, 20506010.88, 6852972.42], [98065468.8, 6239423.33, 0.0, 0.0, 0.0, 0.0, 0.0, 32194207.98], [0.0, 7618.52, 46623972.48, 55703426.87], [90444818.88, 16169429.64, 0.0, 0.0, 28414.12, 504621.6, 0.0, 2504.63, 40012965.96, 0.0, 0.0, 0.0], [103953395.52, 14132478.08, 2522.52, 0.0, 8453.48, 216295.8, 0.0, 0.0, 41452890.27, 26664.82, 31036709.76, 29599262.42], [103140903.84, 15012046.7, 0.0, 1466.92, 2793.0, 173901.0, 0.0, 0.0, 46729067.22, 0.0, 0.0, 31482119.04, 34150384.87], [0.0, 100092245.55, 0.0, 0.0, 77495715.84, 71110495.89], [132414484.8, 19466884.15, 3217.83, 0.0, 14113.96, 433723.5, 2173.28, 17566.72, 62006712.9, 0.0, 0.0, 44497624.32, 21716367.82], [141862269.12, 16751302.19, 6047.58, 0.0, 0.0, 347184.6, 0.0, 0.0, 42276337.29, 0.0, 0.0, 44194498.56, 44269873.69], [166263676.8, 20258973.07, 2150.61, 503.44, 11283.72, 735735.0, 4346.56, 0.0, 54617849.22, 0.0, 0.0, 55495728.0, 43673995.47], [256937304.0, 33024912.2, 533.61, 1718.64, 5623.24, 2158533.3, 0.0, 0.0, 101848164.33], [184501143.84, 25718236.53, 8343.72, 0.0, 2793.0, 1242003.0, 0.0, 0.0, 77608330.47, 26664.82, 66242945.28, 57200580.22], [221554207.68, 34505174.76, 4834.83, 25434.92, 1645885.5, 0.0, 32663.12, 99192126.66, 0.0, 3809.26, 76073568.0, 73182272.73], [239017502.88, 33554296.93, 9152.22, 2473.8, 14225.68, 2878215.9, 0.0, 0.0, 117303086.01, 0.0, 81555951.36, 79179089.71], [244017964.32, 36817819.92, 8521.59, 590.24, 42900.48, 2636915.4, 0.0, 65703.65, 120327414.57, 0.0, 83791933.44, 89251594.39], [254336553.12, 35261741.62, 14633.85, 243.04, 73846.92, 2475671.1, 8725.08, 46524.36, 119761460.94, 0.0, 90543.18, 87047957.76, 83123147.24], [263417244.48, 34723078.74, 6451.83, 0.0, 28265.16, 2066334.9, 10898.36, 27962.65, 114248177.34, 7618.52, 88476635.52, 84565485.76]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

