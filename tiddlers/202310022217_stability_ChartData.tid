created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Lhew Silverhead", "Soft And Chewy", "Oo Dads Mad", "Belvyn Brightblade", "Grasszanine", "Swithblight", "Halfpint The Drunk", "Tribal S", "Aira Draugr", "Jimbo The Pleb", "Zaedy Zae", "Cat Wigglebooty", "Bryxzi", "Liyo Morgaine", "Xanvias Tseli", "Newtype Khan", "Mistwalker Cael", "Klenga", "Kosair", "Gabe Malhorn", "No Reserv\u00e9", "Ryvalia Fazebringer", "Jmbrage Rev", "Sub Train", "Solus Luxes", "Crusader Siolith", "Bella Bitty"];
const professions = ["Scrapper", "Druid", "Berserker", "Firebrand", "Spellbreaker", "Scourge", "Berserker", "Druid", "Herald", "Berserker", "Druid", "Scrapper", "Herald", "Herald", "Berserker", "Spellbreaker", "Herald", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.6447, 0.7843, 11.4144, 0.0, 0.0, 0.0], [0.8406, 0.0, 0.7843, 9.3118, 0.8273, 0.908, 2.3115], [0.0, 0.9354, 0.0, 1.1438, 0.0, 10.8137, 2.3547, 1.4421, 1.1638], [0.7823, 0.0, 0.0, 2.1569, 0.0, 0.0, 15.3194, 0.0, 0.0, 0.5566], [0.0, 2.852, 1.5295, 2.7406, 0.0, 2.17, 1.1997, 1.9081, 1.6614, 0.513, 1.7442, 1.3121, 1.6146, 1.2866], [0.8284, 0.0, 0.0, 0.1307, 0.0, 0.0, 7.2091, 0.0, 1.8694, 0.0, 0.0, 2.9661, 0.6118, 1.8076, 0.9486, 1.0279, 0.15, 2.5815, 0.6084, 0.567, 0.0, 0.0, 0.0, 0.0], [0.9971, 0.0, 0.0, 0.7516, 0.0, 0.0, 4.5057, 0.3182, 0.9614, 0.0, 0.9246, 2.6238, 0.7429, 1.2828, 1.3798, 1.2182, 0.4499, 1.1785, 0.0, 0.999, 1.0004, 0.7498, 0.895, 0.7568], [0.0, 0.7933, 0.0, 0.8824, 0.0, 4.5057, 0.5091, 0.8546, 0.0, 0.7705, 2.1675, 0.6992, 1.4578, 1.2074, 0.9517, 0.7498, 1.1785, 0.9126, 0.81, 0.7695, 0.8435, 0.7897, 0.9838], [1.1812, 1.2669, 2.5219, 2.9739, 0.0, 0.0, 15.6198, 1.591, 3.5785, 0.0], [0.5522, 1.4682, 0.0, 1.6667, 0.7942, 0.0, 10.8137, 0.0, 0.5341, 1.2144, 2.0033, 2.5098, 0.0, 0.9913, 2.2854, 0.4949, 0.0, 2.5254, 0.5616, 1.35], [0.4755, 0.8998, 0.8333, 0.5882, 9.9125, 0.1273, 2.0296, 0.0, 2.9279, 3.1942, 1.1362, 1.2245, 0.3881, 1.104, 0.0, 0.8979, 0.5148, 0.405, 0.6156, 0.781, 0.351, 1.892], [0.0, 0.0, 12.9163, 1.0182, 0.0, 0.0, 5.3935, 4.6773, 2.4035, 0.0, 0.0, 0.0381, 5.0237, 0.2806, 0.3042, 0.0, 0.0, 0.0], [0.0, 2.0262, 0.0, 0.0, 14.1179, 0.3182, 1.3353, 3.3902, 2.7738, 3.5365, 3.3212, 0.6414, 1.1211, 1.3325, 3.749, 0.1684], [15.8571, 6.118, 1.691, 2.156, 2.7791, 3.0742, 5.2192, 1.8252, 4.104], [1.2119, 0.0, 0.0, 2.0915, 0.0, 0.0, 18.6236, 0.0, 1.2818, 1.0626, 3.5443, 4.1069, 1.6169, 3.6152, 1.2936, 2.2842, 2.3244, 3.0305, 2.223], [0.4909, 0.0, 0.0, 1.5033, 0.0, 19.5247, 1.9728, 2.4569, 0.0, 2.0033, 7.4152, 0.3933, 2.0409, 0.9055, 1.3705, 0.075, 3.9284, 0.0, 1.35, 0.9747, 1.2184, 1.0004, 0.0], [1.5187, 0.8998, 0.0, 2.0588, 0.0, 0.0, 20.7262, 2.1001, 4.1126, 2.7324, 2.6197, 11.408, 0.5681, 8.6299, 1.2505, 1.2944, 3.2241, 2.7499, 2.0358, 1.458, 0.0, 1.9056, 1.2636, 2.3461], [7.9581, 3.1878, 9.0919, 14.26, 2.7968, 10.2626, 3.7946, 2.2842, 7.2731, 6.061, 3.6972, 2.43, 3.5141, 2.8116, 2.4044], [3.3114, 2.0746, 4.9312, 11.7502, 6.555, 10.9623, 8.8827, 9.8982, 9.5225, 8.5302, 2.3634, 7.722, 8.3876, 1.4058, 3.9838, 3.1029], [0.9246, 17.6824, 9.4829, 11.3121, 10.0901, 8.9464, 8.1728, 10.4383, 6.903, 7.992, 5.3352, 6.5604, 4.0014, 4.9949], [0.5328, 2.3246, 1.9935, 0.0, 69.9885, 1.5274, 4.3796, 0.0, 6.7804, 14.0318, 6.555, 6.4141, 3.2771], [5.1696, 2.7469, 2.2807, 2.5817, 1.309, 19.8251, 4.073, 6.7831, 0.0, 5.2394, 9.2405, 4.5448, 6.8223, 8.3222, 7.2333, 6.2233, 12.627, 3.8376, 5.535, 5.3095, 1.9056, 1.1057, 2.5731], [5.3893, 0.0, 48.9619, 1.2728, 6.4092, 4.301, 20.4953, 11.9784, 8.2156, 5.5394, 1.8973, 2.6649, 18.0702, 2.1887, 0.5616, 0.0, 2.8728, 2.1556, 3.4749], [7.1331, 3.8125, 0.0, 6.0785, 0.0, 37.8479, 8.0823, 4.6467, 5.1612, 4.0066, 14.6022, 6.5987, 11.8369, 5.8643, 5.5963, 4.9487, 7.3517, 2.2464, 6.723, 5.0274, 0.0, 6.669, 2.8758], [7.6086, 3.8243, 0.3947, 6.6994, 0.0, 51.6654, 7.7004, 5.9285, 3.3902, 6.9345, 16.3134, 5.3314, 14.9857, 11.4268, 10.5073, 8.8476, 8.5302, 3.9312, 7.155, 5.7713, 6.3417, 5.3176, 9.0816], [5.5531, 5.257, 0.4386, 6.438, 1.6074, 57.673, 9.1642, 3.6853, 6.2744, 15.1018, 17.9106, 6.555, 11.662, 10.6506, 6.8145, 8.6227, 10.1016, 5.733, 7.83, 7.1307, 4.4361, 4.7385, 6.3571], [8.437, 5.1149, 4.079, 7.6144, 0.0, 72.0912, 8.655, 10.5218, 3.8962, 22.1904, 19.0514, 5.9432, 10.8457, 10.7369, 6.1673, 10.7971, 11.224, 3.7908, 7.776, 7.4898, 5.8106, 4.1242, 7.795]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

