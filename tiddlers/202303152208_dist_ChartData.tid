created: 20230315220824000
creator: Drevarr
modified: 20230705163522173
modifier: drevarr
tags: ChartData
title: 202303152208_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Panther B Me", "\u00c1rkantor", "Black Raspberry Pie", "Smol Gluvs", "Smol Daddy Tika", "Mike The Archmagus", "Arcanophage Farra", "Mac Chiato", "Newtype Khan", "Whose Guardian", "Johosh The Great", "Xanvias Tseli", "Eibh\u00ebar", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Scourge", "Vindicator", "Chronomancer", "Scourge", "Berserker", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Chronomancer", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7897, 676, 281, 379, 797, 210, 191, 346, 269, 868, 5038, 447, 9035, 200, 415, 265, 392, 350, 1961, 170, 206, 1047], [212, 213, 250, 291, 259, 183, 252, 217, 1443, 260, 313, 920, 199, 347, 273, 255, 388, 262, 255, 223, 1106], [257, 312, 296, 320, 341, 193, 202, 351, 234, 1520, 7409, 245, 2475, 331, 289, 258, 342, 293, 162, 163, 1175], [260, 223, 212, 304, 300, 184, 219, 249, 355, 7560, 6947, 188, 2527, 201, 241, 251, 236, 286, 252, 192, 211, 1149], [303, 260, 238, 176, 251, 173, 192, 316, 224, 18998, 12115, 264, 7596, 257, 294, 200, 405, 157, 434, 239, 1133], [216, 288, 205, 410, 256, 185, 221, 300, 215, 1458, 6364, 244, 2398, 216, 215, 244, 235, 259, 241, 1066], [353, 570, 314, 16826, 4590, 287, 257, 204, 1527, 5960, 261, 2199, 171, 281, 223, 195, 261, 217, 594], [359, 240, 332, 278, 300, 271, 172, 493, 207, 1557, 205, 164, 2392, 208, 203, 201, 240, 176, 413, 185, 219, 1122], [209, 261, 282, 165, 578, 272, 189, 272, 210, 1265, 287, 272, 2513, 222, 353, 183, 314, 393, 319, 229, 587], [232, 288, 284, 196, 379, 217, 251, 274, 173, 900, 12404, 361, 2432, 272, 252, 274, 216, 409, 259, 184, 558], [173, 260, 246, 245, 173, 205, 220, 231, 1472, 229, 242, 1118, 151, 242, 230, 220, 361, 252, 193, 1105], [206, 242, 225, 285, 316, 147, 199, 252, 169, 1581, 7788, 205, 447, 168, 225, 179, 304, 179, 304, 166, 208, 875], [2870, 207, 210, 217, 440, 144, 142, 325, 183, 1499, 4739, 164, 861, 196, 182, 156, 200, 223, 240, 195, 165, 895], [431, 166, 227, 196, 539, 126, 176, 239, 173, 1347, 696, 158, 2376, 183, 188, 176, 178, 513, 226, 174, 188, 1036], [257, 209, 190, 211, 235, 142, 182, 222, 149, 1408, 5698, 162, 603, 181, 200, 171, 297, 236, 189, 186, 151, 1050]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

