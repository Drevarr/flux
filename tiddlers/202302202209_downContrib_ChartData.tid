created: 20230220220953000
creator: Drevarr
modified: 20230705163519701
modifier: drevarr
tags: ChartData
title: 202302202209_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Newtype Khan", "Kira Dragonblaze", "Ch\u00e4\u00ef\u00ef", "Mike The Archmagus", "Husky Guard", "Smol Gluvs", "Skye Nightroad", "Ace Hammers", "Tootsie Pop Bringer", "Veron Blackburn", "Dark Sidiuz", "Jeckyll Mbs", "Rina Of Theros", "Legacy Of Mathus", "Smol Daddy Tika", "Lord Erin The Wise", "Demon Sekhmet", "Sp\u00edcy Cheese", "Xyntharos", "Be\u00eb", "My Birthday Girl", "Mistwalker Caelon", "Jupi Jupi Jupi", "Xanvias Tseli"];
const professions = ["Soulbeast", "Spellbreaker", "Dragonhunter", "Scrapper", "Weaver", "Dragonhunter", "Scourge", "Scrapper", "Vindicator", "Scrapper", "Herald", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Dragonhunter", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 22373.0, 38333.0, 0.0, 5843.0, 2966.0, 4830.0, 629.0, 9595.0, 2210.0, 2326.0, 1564.0, 0.0, 0.0, 3139.0, 0.0, 0.0, 0.0, 537.0, 8977.0, 6325.0, 5094.0, 1574.0, 0.0, 0.0, 5112.0, 3359.0], [1150.0, 6456.0, 40978.0, 435.0, 3989.0, 7538.0, 2073.0, 0.0, 3937.0, 2931.0, 567.0, 0.0, 106.0, 0.0, 8239.0, 9413.0, 4722.0, 2367.0, 949.0, 3563.0, 2443.0, 6262.0, 0.0, 2304.0, 0.0, 4082.0, 2295.0, 16407.0], [598.0, 63505.0, 69762.0, 0.0, 0.0, 4897.0, 2788.0, 9161.0, 6520.0, 2218.0], [23512.0, 8002.0, 73703.0, 4910.0, 24636.0, 2824.0, 23805.0, 32714.0, 26729.0], [8145.0, 14391.0, 12323.0, 23235.0, 15815.0, 23439.0, 26.0, 19166.0, 21127.0, 16835.0, 513.0, 73330.0], [0.0, 20635.0, 128106.0, 2397.0, 7338.0, 4121.0, 3649.0, 0.0, 15772.0, 545.0, 13567.0, 2212.0, 5838.0, 0.0, 0.0, 11215.0, 2949.0, 1305.0, 2175.0, 3226.0, 4090.0, 5104.0, 2848.0, 9459.0, 509.0, 0.0, 4010.0], [1353.0, 9328.0, 43072.0, 7185.0, 11371.0, 12099.0, 4506.0, 4999.0, 2197.0, 492.0, 17580.0, 2887.0, 4496.0, 1100.0, 1003.0, 11486.0, 15209.0, 2523.0, 37832.0, 1453.0, 1799.0, 12938.0, 1899.0, 7863.0, 842.0, 10640.0, 318.0, 37928.0], [1179.0, 16995.0, 178439.0, 30281.0, 24586.0, 3780.0, 14005.0, 0.0], [7060.0, 6564.0, 106300.0, 3750.0, 3407.0, 0.0, 4456.0, 0.0, 8482.0, 1054.0, 21040.0, 22043.0, 13359.0, 3135.0, 22185.0, 4487.0, 4150.0, 14882.0, 0.0, 10684.0, 3836.0, 0.0, 1393.0, 0.0, 5549.0, 7504.0, 34022.0], [7934.0, 75590.0, 15436.0, 0.0, 0.0, 13256.0, 24445.0, 2290.0, 19715.0, 2946.0, 12678.0, 0.0, 1195.0, 18406.0, 8822.0, 0.0, 25942.0, 4520.0, 14099.0, 15131.0, 7762.0, 21082.0, 1213.0, 8801.0, 1003.0, 61941.0], [10391.0, 12972.0, 142240.0, 1437.0, 24178.0, 11784.0, 42670.0, 22892.0, 3331.0, 0.0, 0.0, 53884.0, 2483.0, 8144.0, 49599.0, 3066.0, 9643.0, 16211.0], [5409.0, 53293.0, 245187.0, 9397.0, 0.0, 0.0, 0.0, 13531.0, 13826.0, 10716.0, 11755.0, 10910.0, 1244.0, 3004.0, 0.0, 6240.0, 8594.0, 14228.0, 6660.0, 8019.0, 9240.0, 6005.0, 2473.0, 618.0, 0.0, 0.0], [3291.0, 13587.0, 243280.0, 8604.0, 106.0, 5512.0, 13583.0, 6027.0, 7612.0, 36351.0, 0.0, 7499.0, 0.0, 5235.0, 18866.0, 691.0, 28436.0, 7775.0, 8786.0, 19515.0, 4582.0, 3351.0, 0.0, 0.0, 0.0, 36709.0], [904.0, 22405.0, 154457.0, 22953.0, 6756.0, 3805.0, 13816.0, 2972.0, 42819.0, 10024.0, 25310.0, 17599.0, 11183.0, 998.0, 5985.0, 11179.0, 29092.0, 4310.0, 55572.0, 3358.0, 10745.0, 25098.0, 5552.0, 947.0, 3505.0, 8812.0, 8159.0, 61236.0], [0.0, 43864.0, 168486.0, 17992.0, 13050.0, 19158.0, 2311.0, 0.0, 27428.0, 7105.0, 52243.0, 2196.0, 10786.0, 0.0, 3249.0, 24309.0, 2298.0, 3636.0, 0.0, 19499.0, 39626.0, 19522.0, 29496.0, 0.0, 4632.0, 1241.0, 94805.0], [8484.0, 58548.0, 199261.0, 3299.0, 11636.0, 1905.0, 7265.0, 5425.0, 22764.0, 0.0, 41834.0, 28409.0, 0.0, 0.0, 7038.0, 14514.0, 50599.0, 18243.0, 20444.0, 35880.0, 17298.0, 9760.0, 4795.0, 15682.0, 45127.0], [3512.0, 60450.0, 185460.0, 9463.0, 10431.0, 2172.0, 7429.0, 0.0, 21821.0, 4437.0, 16109.0, 6238.0, 0.0, 5051.0, 215.0, 61192.0, 6368.0, 2324.0, 38569.0, 43321.0, 45583.0, 33235.0, 31556.0, 977.0, 7750.0, 7092.0, 47360.0], [1428.0, 49288.0, 252740.0, 8276.0, 6362.0, 0.0, 0.0, 0.0, 61557.0, 18916.0, 4489.0, 22281.0, 8202.0, 4029.0, 0.0, 60295.0, 9312.0, 0.0, 27553.0, 26349.0, 3443.0, 34116.0, 14471.0, 66050.0, 633.0, 44917.0, 0.0], [0.0, 42965.0, 361213.0, 7504.0, 6000.0, 3427.0, 2872.0, 12559.0, 26781.0, 4878.0, 49353.0, 44092.0, 5546.0, 3030.0, 32506.0, 0.0, 4517.0, 19179.0, 14744.0, 7252.0, 34132.0, 6407.0, 40259.0, 1154.0, 6603.0, 0.0, 0.0], [7871.0, 13909.0, 283345.0, 634.0, 3874.0, 4716.0, 10754.0, 3902.0, 11393.0, 6691.0, 8988.0, 18221.0, 26737.0, 2798.0, 33614.0, 16666.0, 51460.0, 10188.0, 17246.0, 22147.0, 21953.0, 72329.0, 3164.0, 510.0, 5203.0, 13840.0, 12862.0, 60410.0], [64476.0, 271893.0, 26250.0, 37269.0, 8226.0, 17885.0, 0.0, 37814.0, 14488.0, 37121.0, 36533.0, 34841.0, 0.0, 2023.0, 41493.0, 4756.0, 22653.0, 0.0, 13380.0, 18720.0, 36497.0, 21571.0, 28760.0, 0.0, 24815.0, 22433.0, 48288.0], [14190.0, 134065.0, 237748.0, 0.0, 38785.0, 10703.0, 17196.0, 0.0, 23048.0, 45344.0, 54204.0, 9610.0, 22157.0, 12723.0, 10053.0, 26287.0, 40695.0, 24867.0, 0.0, 9942.0, 0.0, 52301.0, 7417.0, 16767.0, 25867.0, 16248.0, 18076.0, 71849.0], [13319.0, 104654.0, 374924.0, 63442.0, 21019.0, 4549.0, 39.0, 72626.0, 9039.0, 28348.0, 35586.0, 34598.0, 2818.0, 13883.0, 10357.0, 0.0, 22082.0, 77554.0, 22763.0, 0.0, 72361.0, 7405.0, 30850.0, 0.0, 0.0, 15902.0, 121915.0], [13772.0, 68528.0, 535512.0, 11686.0, 5966.0, 0.0, 64854.0, 14176.0, 69231.0, 37856.0, 96502.0, 10468.0, 63519.0, 0.0, 944.0, 54189.0, 7636.0, 0.0, 42005.0, 13720.0, 13674.0, 44830.0, 0.0, 6076.0, 0.0, 0.0], [3531.0, 90373.0, 500190.0, 12451.0, 12971.0, 16027.0, 14323.0, 0.0, 34387.0, 23178.0, 27873.0, 20876.0, 15666.0, 3265.0, 29460.0, 34089.0, 10395.0, 25920.0, 13087.0, 19424.0, 1024.0, 99536.0, 4093.0, 59800.0, 4795.0, 23664.0, 13635.0, 71383.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

