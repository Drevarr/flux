created: 20230625214748000
creator: Drevarr
modified: 20230705163536457
modifier: drevarr
tags: ChartData
title: 202306252147_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Riann Swordbreak", "Palm Sauce", "K\u00f4sair", "Grasszanine", "Blancooo Padreee", "Elonith Primal", "Imalou", "Duke Silvver", "Aronorf Xideliesi", "No Reserv\u00e9", "Gestern Yesteryear", "Air One Com", "Bellatrix Astra", "Traidoruns Maximus", "Ryvalia Fazebringer", "Xyntharos", "Solus Sanctus", "Tika Fiery", "Koralia Danai", "Bella Sassy"];
const professions = ["Berserker", "Vindicator", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.8624, 3.7814, 0.6374, 0.864, 6.6326, 5.6311, 10.7369, 10.6825, 2.7082], [2.9702, 0.0, 8.5258, 0.0, 22.2667, 11.2622, 10.0862], [7.3382, 3.7814, 2.0717, 0.0, 8.3698, 5.9623, 13.0144, 10.4086, 1.3541, 0.0, 0.0, 19.981, 0.0, 0.7528], [10.1338, 7.369, 5.0198, 2.5056, 5.5272, 5.2998, 8.7847, 8.4912, 3.6456, 0.9434, 1.836, 0.0, 12.0575, 0.0, 1.8172], [9.7843, 5.963, 4.3027, 0.0, 8.5277, 7.7841, 15.2919, 8.7651, 2.1874, 0.0, 1.836, 0.0, 14.469, 3.3626, 0.0], [10.1338, 4.6056, 3.745, 0.0, 8.5277, 8.4466, 16.268, 25.7475, 10.7285, 0.0, 0.4896, 0.5082, 15.5025, 0.4386], [19.7434, 6.8357, 6.3744, 0.0, 12.0019, 11.4278, 25.7034, 18.8998, 9.1661], [17.9962, 3.0058, 7.1712, 0.0, 9.3173, 12.5871, 18.8709, 12.8738, 10.3118, 0.0, 5.1408, 0.0, 24.804, 3.3918, 1.5057], [18.3456, 3.1512, 8.6851, 1.5336, 6.4747, 13.5808, 26.0288, 15.8868, 2.2915, 0.0, 1.4688, 2.0086, 29.2825, 0.0], [26.7322, 3.733, 2.4701, 0.0, 17.845, 13.9121, 6.8326, 32.0475, 6.8746, 0.0, 0.7344, 0.0, 18.603, 0.1462, 0.0], [17.9962, 9.9384, 12.9082, 0.0, 11.5282, 8.7779, 22.7752, 15.8868, 3.0206, 0.2064, 0.7344, 0.121, 27.56, 0.0, 3.4527], [21.6653, 2.7634, 5.737, 0.324, 12.0019, 15.237, 28.6317, 22.7345, 10.5202, 0.0, 0.1224, 0.0, 25.493, 0.1023], [19.0445, 6.7872, 2.1514, 0.0, 14.2128, 15.7339, 26.6795, 22.1867, 12.9158, 2.4468, 1.836, 0.0, 31.005, 1.1404, 0.0], [31.6243, 6.1085, 7.8883, 1.8792, 21.9509, 21.5306, 40.0193, 27.391, 6.5621], [15.3754, 3.733, 9.0038, 0.0, 14.6866, 24.843, 22.4498, 25.4736, 10.1035, 0.0, 1.9584, 0.0, 41.34, 0.0, 1.921], [23.5872, 5.6237, 9.8006, 0.0, 28.4256, 12.9184, 40.3446, 46.2908, 13.1242, 0.0, 10.6488, 2.5168, 25.8375, 3.0994, 4.0757], [30.7507, 12.4109, 10.0397, 1.404, 29.2152, 28.4866, 61.493, 31.2257, 4.4789, 0.2358, 9.3024, 0.0, 64.4215, 0.1462, 1.5576], [35.6429, 11.1989, 19.92, 1.9656, 37.427, 29.646, 56.2873, 63.5471, 21.9778, 0.0, 2.6928, 2.9766, 64.4215, 1.6082, 7.2688], [41.5834, 17.1134, 21.9917, 0.9504, 37.9008, 32.7928, 65.3974, 58.3428, 20.832, 0.0, 13.464, 0.0, 75.4455, 0.0, 1.1682], [37.2154, 13.3805, 22.4698, 3.5208, 33.479, 31.4678, 65.072, 55.3298, 26.3525, 5.6896, 15.5448, 3.267, 74.7565, 1.2719, 6.2304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

