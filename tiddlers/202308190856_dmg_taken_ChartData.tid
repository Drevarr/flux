created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Liu Mira", "Alarics Bane", "Gestern Yesteryear", "Xuerreux", "Samara Evermoore", "Ains Chon", "Aloe Pen", "Empressy", "Govinda Ektar", "Grae Leon", "Red Reaper Robin", "Unbreakable Nemesis", "Drevarr Moonwillow", "Smol Gluvs", "Grootsmaid", "Aron The White", "Vee U", "Crabbedmermaid", "Wren Raveness", "Kosa\u00efr", "Brutal Araden", "Nadumi", "Darks Na", "Xanvias Tsolice", "Scythe Of Soulz", "Nose Llama", "Jamaass", "Nose Llama", "Tabitha Polaris", "Lillith Bella", "Cura Ativos", "Oats Guardian", "Drac Tepes", "Glorious Gluvs", "Nadumi", "Ttv Rodrigoapss", "Holly Of Aranoch", "Brutal Araden", "Holten Mcgroins", "Holly Of Aranoch", "E Tabita", "Scythe Of Soulz", "Firewood Guard", "Nadumi", "Serial Experiiments"];
const professions = ["Berserker", "Reaper", "Firebrand", "Berserker", "Deadeye", "Reaper", "Vindicator", "Spellbreaker", "Vindicator", "Tempest", "Reaper", "Firebrand", "Scrapper", "Reaper", "Firebrand", "Holosmith", "Tempest", "Firebrand", "Chronomancer", "Tempest", "Renegade", "Thief", "Firebrand", "Weaver", "Reaper", "Tempest", "Reaper", "Weaver", "Firebrand", "Dragonhunter", "Dragonhunter", "Firebrand", "Scourge", "Berserker", "Daredevil", "Berserker", "Chronomancer", "Vindicator", "Thief", "Virtuoso", "Soulbeast", "Scourge", "Dragonhunter", "Deadeye", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1401.2182, 177.5, 1165.975, 250.764, 587.8406, 655.8605, 1003.0654, 178.8103, 16.1944, 3658.3939, 886.5658, 1722.9333, 2654.75, 1369.0748, 131.2911, 608.8125, 2568.4, 13.1875, 3249.9714], [2286.0179, 45.9286, 2657.7, 800.2923, 548.7714, 139.2234, 2534.5, 272.1379, 1.6579, 1636.7759, 1001.2848, 1524.7545, 4858.8, 1725.2842, 59.8378], [2742.0, 0.7674, 1322.2471, 150.9059, 109.6286, 180.6211, 510.7885, 98.4655, 0.0, 2838.7273, 508.5497, 1240.3806, 2037.14, 410.08, 28.2703, 311.6938, 2261.9778, 67.1875, 3581.5385], [1958.6429, 0.2439, 1185.0244, 402.7303, 442.971, 156.0957, 560.7134, 96.9298, 23.8485, 2446.7843, 368.1921, 534.5207, 3228.7273, 1261.8922, 167.5467, 759.9554, 1946.1324, 63.1212, 1102.6579], [1706.2308, 167.4762, 12131.1667, 436.6118, 352.4058, 230.3929, 319.4936, 69.0, 4.6364, 2987.3696, 1413.0, 1501.825, 3720.9286, 658.0479, 679.069, 967.6038], [3150.5152, 0.0, 1372.6053, 148.3368, 232.9571, 50.4096, 3.2941, 4651.68, 340.5987, 879.5845, 4286.0, 467.3423, 135.525, 318.4759, 1608.0714, 1.5714, 3621.2], [225.3253, 191.6618, 212.7931, 1953.863, 77.4737, 0.3636, 1969.625, 501.0662, 947.4533, 2854.1875, 815.3423, 33.5575, 538.2595, 1235.4118, 0.0, 2604.8696], [3078.25, 0.0, 24.4138, 1214.5263, 980.9933, 1108.4179, 8850.1111, 6210.2, 699.1622, 274.4329, 2517.3043, 0.0], [2943.4634, 223.7763, 440.6571, 155.6173, 953.0097, 0.0, 0.0, 748.8456, 985.7634, 6105.4167, 307.6438, 303.5813, 1353.2917, 20.8519, 5001.6087], [126.5116, 46.6029, 82.5181, 515.7255, 138.1754, 21.0606, 2794.6279, 688.5906, 1262.46, 1076.1034, 477.3557, 91.8198, 323.6062, 1564.625, 49.7742, 1706.425], [3602.825, 22.0, 597.2152, 148.7356, 277.6714, 118.0532, 1013.7013, 81.1273, 28.8286, 2665.4419, 526.0658, 760.2156, 1222.3333, 707.3, 22.8991], [1940.7021, 81.6341, 1489.9556, 189.5357, 498.75, 73.2021, 186.8782, 15.193, 1.0303, 2173.4783, 1103.9909, 940.155, 4065.7391, 1467.7742, 68.5], [1396.5636, 6.2381, 1445.7733, 166.4235, 245.2143, 137.7108, 491.5033, 26.614, 19.9091, 3539.8571, 543.0461, 1036.9935, 914.4186, 359.2937, 164.9029], [265.6818, 444.8, 45.6389, 1311.8131, 15.3818, 2.8966, 3005.3673, 473.0728, 1131.8377, 1758.75, 846.483, 102.4231], [553.2797, 107.1923, 7.6176, 2789.814, 416.3026, 1186.0909, 4551.3462, 445.9315, 81.5616, 306.1111, 1203.0411, 50.2812], [19.9651, 4146.1364, 104.4912, 8.7059, 2709.8056, 429.1795, 1111.1008, 5602.375, 1522.7877, 98.7333], [882.8545, 21.8919, 217.8333, 136.2809, 295.6522, 145.8095, 457.5605, 196.3448, 38.2727, 1677.2, 329.4654, 1076.8554, 1831.0526, 645.5667, 102.7308], [149.809, 162.1912, 133.268, 982.699, 30.5614, 4.8333, 1340.6429, 410.5695, 3156.0, 2348.0417, 478.0268, 27.2719], [2894.3448, 107.675, 1613.5634, 244.407, 281.8696, 81.7079, 249.1161, 228.7018, 67.0, 1251.4754, 113.5133, 770.4744, 562.8, 65.8591, 171.2877, 88.0506, 477.4189, 1.0909, 559.027], [80.2727, 615.6533, 197.5506, 66.2857, 134.2099, 239.2808, 143.6852, 20.4194, 2377.0, 468.0208, 1111.8491, 4382.2632, 401.98], [211.4, 19.9259, 154.8837, 200.7536, 78.5325, 19.1835, 100.9123, 77.2647, 279.0909, 679.2901, 1333.4565, 1640.54, 1004.7244], [5173.2222, 49.8222, 921.859, 108.4535, 566.5429, 330.275, 210.1346, 228.3889, 0.0, 1558.5, 376.82, 740.2195, 1291.973, 908.2778], [3148.5278, 110.087, 2507.0769, 399.9032, 218.7907, 0.0, 838.1634, 260.7436, 441.6132, 3252.2632], [7.0252, 69.5439, 18.6944, 3951.8571, 354.6184, 627.506, 1555.8864, 295.0533, 61.0101, 105.6335, 644.8642, 55.3824, 450.5526], [351.2113, 246.1111, 2512.5926, 364.3276, 522.1933, 2272.1395], [3133.4359, 49.2093, 5189.76, 202.9775, 236.9412, 176.5926, 65.4286, 9.4545, 1818.8909], [440.2013, 96.5534, 596.323, 1819.0822, 47.3333, 3647.6667], [654.8526, 948.2323, 2499.0833], [2409.5, 86.9, 1601.2609, 4550.4, 798.5286, 242.3553], [92.68, 317.925, 2604.7838, 116.8438, 2047.1765], [0.0, 297.8571, 70.5432, 723.6286, 365.6786, 6.8125, 1505.8039], [61.4937, 287.4114, 825.8571, 8.6538, 3125.7143], [1679.2716, 91.8333, 2487.2414], [3120.7273, 0.225, 2865.9062], [363.8025, 1271.32, 9.96, 689.4444], [2395.9302, 284.7, 444.141], [75.641, 4.3636, 3137.1765], [2270.7857], [1420.9216], [251.5, 160.25, 1658.8378], [838.3654, 123.3636, 112.9259, 0.0, 72.7255, 12.6923], [612.3146], [956.1951], [276.6667], [22.4242, 326.6129]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

