created: 20230227222028000
creator: Drevarr
modified: 20230705163520365
modifier: drevarr
tags: ChartData
title: 202302272220_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Legacy Of Mathus", "Jupi Jupi Jupi", "Viral Marketing", "Kira Dragonblaze", "Sassy Daddy Demon", "Skye Nightroad", "Rayla Shadowmoon", "Smol Daddy Tika", "Mistwalker Caelon", "Kahless The Drunk", "Koralia Danai", "Arcanophage Farra", "Blanco Padre Guard", "Tribal S", "Etchery Howls", "Gavann", "My Birthday Girl", "Ravioli Fetabringer", "Sp\u00edcy Cheese", "Zadie Miststep", "Smol Gluvs", "Eibh\u00ebar", "Xanvias Tseli", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Scourge", "Berserker", "Dragonhunter", "Willbender", "Dragonhunter", "Vindicator", "Scrapper", "Herald", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Druid", "Druid", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Tempest", "Scourge", "Chronomancer", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[446, 554, 346, 8273, 1622, 3998, 697, 3655, 1484, 1798, 1322, 319, 1358, 284, 310], [410, 13212, 6990, 10653, 1534, 296, 5529, 1592, 894, 498, 588, 344, 4884, 1444], [370, 393, 3964, 1599, 970, 245, 272, 373, 766, 605, 596, 1002, 634, 23269], [438, 6007, 267, 8490, 1937, 261, 6684, 3135, 603, 483, 1527], [538, 5669, 3285, 8920, 602, 422, 6868, 1532, 470, 403, 730], [447, 6085, 4690, 8165, 1237, 5025, 1532, 419, 2523, 527, 935], [302, 12325, 3413, 4209, 1593, 305, 1429, 2016, 10474, 548, 3282], [420, 11909, 5195, 1230, 2067, 610, 5804, 1310, 11551, 420, 21177], [346, 6544, 4081, 8391, 428, 237, 2069, 3951, 13513, 332, 2954, 273, 321, 801, 1238, 351, 500, 477, 293, 394], [460, 339, 270, 6115, 1577, 228, 6967, 3304, 829, 382, 2929, 498, 3887, 1644, 1090, 697, 1769, 592, 285, 212], [351, 3185, 366, 7103, 727, 273, 3183, 503, 588, 430, 3035, 241, 2089, 1773, 901, 691, 702, 614, 267, 454], [1000, 5625, 3500, 6197, 1224, 328, 4123, 4161, 436, 280, 2904, 215, 3410, 609, 567, 894, 1209, 570, 257, 320], [563, 462, 3961, 8393, 1561, 191, 4555, 3734, 3810, 867, 2841, 252, 4166, 861, 5864, 1182, 794, 563, 315, 190], [358, 6534, 368, 8594, 486, 454, 6641, 2983, 660, 350, 12739, 268, 9446, 2784, 401, 8306, 1027, 713, 22083], [313, 1982, 4894, 8195, 392, 265, 2204, 1781, 8519, 437, 2981, 467, 3121, 995, 9368, 705, 547, 249, 349], [499, 4776, 3338, 7411, 973, 245, 1547, 4158, 1597, 236, 2947, 366, 6798, 1458, 712, 385, 295], [306, 3050, 4144, 1392, 1584, 363, 3439, 3937, 481, 222, 3114, 322, 335, 767], [466, 478, 5218, 1364, 435, 276, 6917, 4084, 11268, 332, 3825, 378, 326, 724, 923, 1182, 439, 375, 294, 287], [631, 2863, 298, 6369, 1483, 275, 725, 4101, 357, 329, 3611, 225, 352, 1544, 851, 982, 350, 547, 344, 297], [372, 304, 3928, 6440, 1693, 242, 1240, 4073, 3957, 296, 7985, 221, 333, 5317, 833, 648, 359, 687, 261, 276], [329, 4769, 3960, 8119, 1481, 206, 3470, 3973, 324, 320, 2417, 277, 296, 1151, 698, 746, 454, 528, 280, 310], [323, 3565, 4105, 2021, 310, 302, 806, 393, 594, 392, 476, 249, 217], [402, 365, 214, 8539, 1491, 148, 1164, 2979, 346, 281, 2788, 243, 312, 695, 1446, 342, 525, 471, 218, 244], [286, 414, 4620, 8003, 878, 3176, 4102, 759, 275, 291, 417, 262, 346, 840, 349, 301, 511, 476, 202, 237], [280, 317, 342, 7987, 1434, 646, 6515, 3988, 608, 252, 2771, 315, 218, 976, 852, 246, 255, 252, 204, 230], [210, 286, 204, 7865, 1610, 186, 1559, 2118, 8916, 177, 2892, 195, 184, 294, 474, 430, 158, 265, 181, 253]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

