created: 20230819002646000
creator: Drevarr
tags: ChartData
title: 202308190026_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Wall Knot", "Vylade Vinzanti", "Air One Com", "Brutal Araden", "Black Raspberry Pie", "Solus Luxes", "Arcanophage Farra", "Asheena Feres", "Darks Na", "Miphest\u00f6", "Rahani Sunray", "Morton Saltbringer", "Newtype Khan", "Seiker Novus Terra", "Elon Illusionblade", "P\u00edogre", "J\u00e2sm\u00eene", "Venomina The Sly", "Vee U", "Arriasa", "Tegan Parker", "Drevarr Moonwillow", "Tribal S", "Zaedy Zae"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Spellbreaker", "Virtuoso", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Druid", "Tempest", "Druid", "Tempest", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 5.9464, 1.0, 0.0, 0.0, 14.9883, 13.0278, 14.9956, 18.9402, 0.0, 0.0, 21.0517, 0.0, 13.0253, 13.0392, 31.021], [57.8354, 60.6176, 70.0881], [17.4906, 8.0, 26.1211, 24.3905, 13.0, 20.0968, 18.8099, 0.0, 19.9874, 6.9583, 21.9626, 0.0, 0.0, 0.9821, 0.0, 0.0, 19.9825, 15.0347, 19.141, 17.0513, 0.0, 0.0, 4.9828, 0.0, 1.0, 14.0392, 24.0335], [118.2348], [27.5031, 28.5116, 0.0, 24.9892, 6.1548, 36.5455, 0.0, 45.0, 2.9722, 6.9813, 0.0, 0.0, 0.0, 15.875, 10.0682, 0.0, 0.0, 5.9942, 31.1389, 27.4846, 9.9658, 0.0, 0.0, 29.9713, 0.0, 2.0, 9.0686, 43.3753], [28.0692, 6.9767, 14.1263, 14.0762, 10.9892, 32.1484, 18.0165, 0.0, 17.9686, 13.9444, 18.972, 0.0, 0.0, 0.0, 0.0, 12.8929, 0.0, 0.0, 0.0, 14.9942, 17.7153, 8.9956, 13.9573, 0.0, 0.9944, 13.1437, 0.0, 26.4557, 21.0588, 51.0922], [22.1006, 18.3023, 27.1895, 14.0381, 6.9892, 4.9935, 39.1074, 0.9821, 30.0692, 2.9722, 33.0841, 0.0, 0.9857, 6.9802, 26.4464, 8.0455, 19.0175, 38.3264, 12.9912, 18.9658, 0.0, 0.0, 28.9195, 0.0, 29.0633, 1.0, 31.0356], [32.9686, 0.9861, 20.9626, 0.0, 6.0227, 0.0, 15.6959, 36.1736, 46.467, 29.4872, 0.0, 29.0517, 0.0, 51.8101, 18.049, 53.0901], [30.9937, 16.9535, 18.0947, 37.0095, 25.043, 26.9742, 26.0331, 0.0, 5.9874, 24.8611, 35.8505, 1.0, 0.0, 0.0, 2.9901, 7.9286, 5.0227, 0.0, 0.0, 25.0292, 30.0903, 19.0044, 25.9231, 0.0, 3.9944, 4.9885, 43.0587], [48.4906, 29.2326, 24.1789, 44.2476, 47.1828, 51.8645, 66.5537, 0.0, 75.3082, 33.3611, 62.486, 0.0, 0.9857, 0.0, 0.0, 16.4545, 4.0357, 0.0, 43.6696, 76.6154, 0.0, 0.9944, 33.046, 7.9487], [26.9874, 41.5581, 26.0211, 46.4762, 23.086, 0.0, 36.0331, 0.0, 26.0, 13.9722, 16.028, 0.0, 0.0, 0.0, 0.0, 0.0, 15.6818, 0.0, 56.523, 24.557, 1.0, 104.3145], [45.8365, 17.4651, 21.0053, 20.0381, 6.9892, 0.0, 42.5124, 0.0, 25.9748, 10.1528, 13.9907, 0.0, 0.0, 0.0, 0.0, 36.0994, 30.0694, 49.2819, 60.359, 0.0, 0.0, 26.954, 0.0, 59.1519, 0.0, 64.3333], [37.0566, 11.9767, 27.0, 22.9238, 25.0323, 24.9806, 41.1901, 0.0, 27.0126, 15.9028, 24.9626, 0.0, 0.0, 0.0, 3.9643, 17.1136, 0.0, 39.9649, 52.25, 4.9956, 38.9145, 0.0, 0.0, 5.9828, 0.0, 43.1266, 21.0784, 72.1887], [101.3208, 58.9767, 88.8895, 79.6, 93.3333, 118.3419, 103.9421, 0.0, 70.3145, 70.9167, 82.0374, 0.0], [34.0126, 32.5581, 26.0105, 14.9524, 11.2473, 49.5871, 44.3554, 0.0, 36.0063, 21.9583, 23.9626, 0.0, 0.0, 0.0, 13.9286, 4.0227, 0.0, 40.0292, 36.1389, 54.1233, 51.2991, 0.9881, 0.0, 61.0172, 0.0, 28.9114, 13.1176, 123.87], [79.2138, 41.4651, 91.4947, 54.2571, 100.4409, 67.9871, 124.6281, 0.9821, 82.3333, 54.6806, 63.4206, 0.0, 0.0, 0.9901, 12.9643, 12.6364, 11.1429, 0.0, 73.2515, 85.2014, 51.4273, 30.5897, 2.9881, 0.0, 38.8218, 0.0, 51.5696, 53.2157, 118.7275], [140.3145, 60.6279, 137.0, 108.2286, 141.2043, 130.671, 139.8843, 0.0, 145.0377, 116.2917, 144.3738, 0.0, 37.3393, 53.0909, 0.0, 0.0, 146.1345, 157.0278, 89.2731, 170.812, 0.0, 0.0, 78.8506, 113.3418], [129.3019, 47.0698, 73.5, 134.0952, 162.4624, 156.5419, 133.0992, 0.0, 187.8365, 129.6111, 87.8972, 0.0, 0.0, 0.0, 0.0, 0.0, 14.0909, 0.0, 157.3918, 143.1042, 48.3744, 177.7607, 0.0, 130.046, 0.0, 170.519, 101.3137, 156.0776], [150.1761, 53.0465, 93.7789, 117.6381, 141.3118, 128.6452, 128.3554, 0.9821, 146.434, 108.4167, 134.7009, 10.0656, 0.0, 11.0, 0.0, 25.0536, 30.1818, 0.0, 111.807, 139.2431, 84.163, 146.1368, 0.0, 5.9888, 97.3966, 0.0, 118.038, 96.3039, 236.2767], [119.8491, 43.8372, 89.2316, 100.3619, 114.6452, 158.4387, 151.8182, 10.9821, 135.566, 119.4583, 76.0935, 0.0, 16.1714, 2.9901, 34.5357, 12.0682, 0.0, 152.9064, 167.9931, 105.7181, 148.1624, 0.0, 0.0, 91.8908, 0.0, 80.4051, 111.6765, 235.1761], [124.761, 57.4651, 117.8632, 0.9905, 168.7204, 96.9677, 150.4959, 0.0, 142.3774, 94.8472, 96.2617, 0.988, 11.9714, 0.0, 13.1071, 19.1136, 5.9898, 126.7018, 158.3125, 106.4097, 170.641, 0.0, 131.069, 3.9744, 100.7595, 110.3235, 269.1153], [139.3522, 47.2558, 98.8737, 94.619, 148.0645, 133.0258, 160.9421, 4.9643, 116.4088, 110.9583, 94.0, 12.2623, 4.2771, 27.7286, 15.0297, 34.9107, 23.1591, 0.0, 133.4503, 138.0139, 125.2775, 170.1624, 11.9762, 8.9832, 64.7184, 5.9487, 98.8354, 104.6961, 264.8155], [226.3441, 119.5097, 165.124, 11.9821, 200.0818, 116.3333, 147.3178, 0.0, 0.0, 10.2571, 0.0, 18.0714, 51.2273, 7.1071, 6.9796, 189.8889, 195.1319, 142.467, 205.7179, 0.0, 0.0, 59.5575, 177.6582, 141.6471, 286.3669], [202.3208, 93.0465, 86.0684, 156.8952, 219.9892, 130.9677, 173.1322, 10.9286, 192.6667, 114.1806, 143.5607, 0.0, 14.5143, 3.9901, 67.3214, 60.3864, 10.3571, 3.9898, 204.6901, 180.5417, 132.8767, 190.5812, 0.0, 7.9888, 111.9195, 0.9744, 117.9241, 124.049, 314.3019]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

