created: 20230626220846000
creator: Drevarr
modified: 20230705163539404
modifier: drevarr
tags: ChartData
title: 202306262208_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Sygaldry Verdandi", "Cat Wigglebooty", "Bella Sassy", "Tegan Parker", "Gavann", "Rahani Sunray", "Sub Train", "Artakama Nahid", "My Birthday Girl", "Rina Of Theros", "Tootsie Pop Khorne", "Ateriuz", "Shaca Booey", "Solus Sanctus", "No Reserv\u00e9", "Il Kurai Il", "Arcanophage Farra", "Ak\u00e1nt\u00f3r", "Lucky Leipreach\u00e1n", "Tootsie Pop Rocks", "Caelon Cai", "Cyclotechnist Farra", "Zadie Miststep", "Irish Necroman", "Lord Erin The Wise", "Cyr", "Mike The Archmagus", "Drumina", "Dim Og", "Zadey Starbolt", "Gravlyn Isshtail", "Sumatra Satyricon", "Specialist Zeff", "Ateriuz", "Mistwalker Cael", "\u00c1rkantor", "Willow Starrdust", "Aira Draugr", "Etchery Howls", "Mike The Archmagus", "Etchery", "Krund Corpsereaver", "Legacy Of Mathus", "Sword Of Damocl\u00e9s", "Il Kurai Il", "Fluffy No Care Bear", "Krund Corpsereaver", "Mike The Archmagus", "Elonith Requiem"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Scrapper", "Reaper", "Reaper", "Berserker", "Berserker", "Firebrand", "Vindicator", "Reaper", "Spellbreaker", "Druid", "Scrapper", "Scrapper", "Reaper", "Scrapper", "Tempest", "Reaper", "Weaver", "Tempest", "Weaver", "Druid", "Scrapper", "Scrapper", "Spellbreaker", "Soulbeast", "Scrapper", "Spellbreaker", "Vindicator", "Vindicator", "Herald", "Herald", "Druid", "Tempest", "Scrapper", "Reaper", "Spellbreaker", "Vindicator", "Scourge", "Berserker", "Harbinger", "Catalyst", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[656.4406, 0.0, 1614.8056, 613.6364, 450.0286, 1722.2564, 3052.7778, 3434.0312, 1941.2264, 3368.4103, 2332.803, 1786.7241, 3842.7222, 3065.1286, 2299.2615, 737.1789, 472.7467, 0.8667, 259.2927, 398.0775], [561.9119, 11.4706, 2470.9792, 2035.4324, 1874.0227, 1162.087, 3131.2889, 4257.5714, 2373.24, 3412.7353, 2270.3623, 2030.6835, 2529.6279, 1933.8636, 481.4066, 627.1983, 383.2375, 0.0, 266.875, 335.9453], [273.3011, 0.0, 1035.7188, 3679.0, 1740.4222, 1499.1648, 2492.5135, 845.2143, 935.4667, 3883.72, 6006.3529, 2311.7097, 5448.0435, 4837.2, 2325.2449, 3559.6531, 1123.3108, 1040.1625, 790.3543], [422.7767, 0.0, 1197.3281, 3669.4103, 2646.0588, 1464.3077, 4199.9375, 4707.8621, 2583.5882, 1509.5915, 1316.5422, 1641.4366, 2437.8095, 2021.5781, 1235.1538, 502.2188, 576.5, 261.3611, 299.3253, 5022.3], [623.5142, 429.7833, 4009.8148, 3115.697, 2428.1636, 2979.561, 3295.7949, 2072.0805, 1985.4694, 2279.442, 4509.4, 961.3937, 909.8143, 73.4412, 314.7439, 905.808], [722.8915, 3045.7297, 2300.2778, 814.1818, 1272.6044, 1186.82, 4364.9474, 2143.9455, 2817.0588, 1959.7015, 922.6852, 3086.5714, 1194.9054, 841.1311, 407.2535, 0.0, 629.9753, 405.2403], [24.0952, 1343.3115, 4100.3448, 3880.0, 2155.5816, 1209.3556, 2377.2381, 1249.2576, 4194.6207, 2599.403, 2391.8375, 2597.2642, 1866.4688, 768.8514, 889.6198, 526.7895, 27.1176, 375.1622, 569.1298], [669.7152, 5.6923, 1070.5238, 564.6842, 2894.5333, 453.5391, 2843.3488, 801.0286, 1151.3333, 1552.5625, 1932.9747, 2148.2159, 1309.383, 1654.0859, 455.7011, 710.2033, 357.7176, 64.3056, 756.2683, 523.6429], [549.4529, 0.0, 1861.9057, 1237.1034, 1833.5, 1414.4356, 1420.7885, 2286.6571, 876.3529, 1293.2857, 2835.6977, 1646.6707, 1708.1304, 1435.8794, 2686.4091, 901.6393, 515.5857, 54.7941, 395.4444, 425.3386], [4.7273, 1193.1429, 1781.0435, 5000.1579, 1450.5926, 693.75, 657.75, 2441.8864, 1813.0156, 3643.3043, 2734.9506, 1976.0526, 1661.3261, 725.92, 1000.7612, 948.6765, 235.7222, 576.4756, 672.0909], [1211.4851, 22.9038, 3331.0238, 1472.6122, 4985.5, 1596.4946, 650.102, 9281.4545, 3014.175, 1789.6667], [1034.6539, 18.3043, 5049.7381, 3118.1591, 4398.8889, 2092.3514, 5940.4286, 5311.3077, 3409.9744, 5455.25], [766.8543, 9.8462, 2896.766, 2857.6739, 2431.6667, 1212.4824, 3004.2, 4724.4762, 2328.8929, 1991.25, 543.6489], [936.6, 1813.0769, 1114.4524, 1176.5152, 1469.7121, 3595.6923, 730.92, 1351.2449, 1479.0114, 254.973, 398.7531, 654.2868], [610.5875, 16.0556, 676.0161, 436.5862, 1144.02, 1050.8317, 289.6346, 1069.2222, 274.7727, 930.0779, 2087.0822, 1562.4118, 2039.625, 1060.446, 274.3889, 599.0645, 335.9048, 0.871, 252.9625, 289.5984], [0.14, 3071.8824, 2227.0566, 494.34, 1186.1682, 6150.2353, 737.122, 3682.5882, 571.4024, 1465.7903, 947.3387, 1727.9375, 1796.2521, 602.587, 673.6731, 494.9765, 226.0833, 1026.358, 807.4016], [750.4559, 35.6727, 2375.8923, 3251.4571, 3164.3409, 4065.2812, 7442.5333, 3893.3636, 1733.589], [828.7693, 0.0, 2605.1569, 953.3333, 1484.3226, 1524.2522, 2886.1951, 5024.0345, 2244.0444, 1179.3542], [595.5579, 32.7, 3123.2128, 3773.5, 2768.3043, 1863.2288, 1249.4667, 1170.125, 3043.7556, 1352.5873], [3307.7381, 2601.6588, 2654.7407, 1680.7429, 6200.3333, 1178.8284, 813.8621, 162.25, 1066.0482, 6722.2857], [5065.2903, 3317.6212, 4105.6667, 6984.7429, 3157.44, 1310.7164, 847.25, 113.2941, 784.7317, 2915.0], [814.6398, 24.6852, 1513.7692, 1857.68, 2751.5, 1205.1393, 245.7255, 6861.8571, 1579.2254, 2000.0411], [4603.9375, 2869.575, 4747.0357, 2439.5481, 1328.6923, 1022.0896, 1278.0455, 0.0, 4595.8846, 1017.592], [573.3266, 74.5, 3083.025, 2075.3019, 2895.44, 1447.2636, 1161.0444, 4533.2083, 2287.5962, 1382.6098], [756.9432, 0.0, 1646.4359, 2503.5682, 3609.0541, 1086.3894, 1123.4314, 2378.0769, 1712.7077, 1169.5538], [744.401, 16.3455, 2525.7667, 1050.931, 974.0789, 458.746, 282.5102, 438.6744, 2307.4894, 401.2927, 1365.8475, 672.0723, 420.0, 1743.3182, 1018.0847, 250.8689, 304.8636, 452.2, 629.2346, 1137.2239], [1048.5, 3042.4524, 2277.2619, 2225.9677, 2496.6316, 2742.0758, 1965.1923, 1194.5403, 1053.7558, 160.3333, 706.8675, 721.96], [82.12, 716.8281, 1597.7568, 3941.0714, 1448.459, 2521.4667, 2740.28, 2143.5581, 714.9464, 2004.5775, 1537.4557, 606.9888, 556.2836, 589.8023, 666.5625, 448.8313, 849.0156], [2571.1013, 3977.5, 3028.75, 2484.2326, 973.3158, 1463.08, 193.5385, 1034.0123, 991.8492], [2494.2388, 2509.95, 2817.1447, 3366.2059, 1285.6393, 1068.4588, 0.0, 1220.2338, 1255.9197], [2392.974, 1979.122, 1138.28, 3011.8889, 2014.3793, 847.3, 742.3816, 32.6316, 667.5854, 817.1562], [898.2115, 0.0, 3525.1957, 1226.4, 5120.8519, 1266.5565], [765.3544, 235.8269, 2629.7407, 1766.575, 2303.4074, 815.9519, 2131.8182, 5166.0769, 1690.0833], [1638.0517, 1604.1124, 1410.4792, 1422.0429, 2835.4211, 1306.6869, 720.5977, 0.0, 542.5679, 828.7874], [2843.48, 1810.7115, 2851.3521, 1914.5349, 968.4113, 624.6092, 502.0617, 368.7778], [2177.8125, 1187.3864, 1433.9808, 1414.9924, 904.4839, 610.3496, 448.9651, 0.9118, 408.6914, 958.5878], [1683.6579, 1875.1176, 4819.5926, 1490.1969, 990.2297, 675.3846, 275.2273, 83.9444, 190.0488, 246.0078], [1040.0734, 5129.7059, 11695.2857], [697.4293, 36.5577, 1833.6579, 1344.6562, 3129.0541, 1412.411], [0.0, 4340.0345, 2012.7353, 1260.1636, 2687.7556, 995.8333, 823.0857, 1530.2083], [754.7978, 2304.3673], [2263.4107, 1967.971, 2042.38, 1084.5108], [2047.1, 2176.9659, 582.2674, 2329.825], [3756.0339, 4004.881], [4076.8889, 1942.55, 2039.8478], [1566.2329], [1594.2239], [2088.5476], [1073.1406], [71.6273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

