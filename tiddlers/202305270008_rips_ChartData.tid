created: 20230527000807000
creator: Drevarr
modified: 20230705163531823
modifier: drevarr
tags: ChartData
title: 202305270008_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Panther B Me", "Rozaalyna", "Newtype Khan", "Demon Sekhmet", "Smol Gluvs", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0469, 0.0576, 0.0, 0.0211, 0.0, 0.0724, 0.2672, 0.0, 0.0, 0.0106, 0.0312, 0.0781, 0.0, 0.1398, 0.0, 0.0, 0.0144, 0.0, 0.1712, 0.0141, 0.0], [0.0651, 0.0236, 0.0, 0.0, 0.0, 0.0823, 0.0135, 0.125, 0.2595, 0.0, 0.0058, 0.0, 0.0, 0.1406, 0.0, 0.0215, 0.0, 0.0, 0.0, 0.0, 0.0851, 0.0, 0.0, 0.0, 0.1215, 0.0366, 0.0], [0.1615, 0.123, 0.0, 0.0526, 0.1772, 0.1081, 0.2632, 0.2824, 0.0227, 0.0405, 0.0, 0.0521, 0.1523, 0.0, 0.129, 0.0239, 0.0909, 0.0, 0.1261, 0.0915], [0.1458, 0.1047, 0.0, 0.1316, 0.0, 0.1519, 0.0676, 0.1974, 0.2366, 0.0, 0.0231, 0.0213, 0.0, 0.1211, 0.1613, 0.0435, 0.0185, 0.0431, 0.1212, 0.0, 0.1171, 0.0739, 0.15, 0.215, 0.061, 0.1111], [0.138, 0.1047, 0.0, 0.0526, 0.0, 0.1835, 0.0405, 0.3158, 0.3969, 0.0, 0.0058, 0.0, 0.0521, 0.168, 0.0, 0.2043, 0.029, 0.0, 0.0096, 0.0638, 0.045, 0.0423, 0.125, 0.1776], [0.1615, 0.0654, 0.0, 0.0, 0.0, 0.1414, 0.0811, 0.2303, 0.3664, 0.0682, 0.0347, 0.0213, 0.0729, 0.125, 0.0, 0.2688, 0.1667, 0.0185, 0.0239, 0.1212, 0.6596, 0.045, 0.0352, 0.475, 0.243], [0.1667, 0.2042, 0.0, 0.0789, 0.0, 0.2194, 0.1757, 0.125, 0.374, 0.1591, 0.0751, 0.0851, 0.0208, 0.1172, 0.0, 0.129, 0.0362, 0.0185, 0.0574, 0.0909, 0.1064, 0.2432, 0.0775, 0.025, 0.271, 0.1829, 0.0617], [0.224, 0.2251, 0.0242, 0.1316, 0.0625, 0.4093, 0.1216, 0.3158, 0.5038, 0.0227, 0.1676, 0.0106, 0.1354, 0.5117, 0.2366, 0.1739, 0.037, 0.0861, 0.0606, 0.0, 0.2072, 0.1901, 0.05, 0.1776, 0.2439, 0.1358], [0.5182, 0.2199, 0.0323, 0.1316, 0.0312, 0.4241, 0.2568, 0.5066, 0.6107, 0.2273, 0.1214, 0.1809, 0.1667, 0.4297, 0.5914, 0.1159, 0.037, 0.0861, 0.1818, 0.0213, 0.2973, 0.2113, 0.35, 0.1682, 0.128, 0.4444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

