created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Isarii Ashenfist", "Symra Asher", "Lord Erin The Wise", "Luke The Ghastly", "Victoria Raskae", "Ch\u00e2rl\u00eese", "Mellody Moon", "Foxgale", "Sub Train", "Grayson Kin", "Morv\u00e4rth", "Sanskuy", "Black Raspberry Pie", "Rina Of Theros", "Aira Draugr", "Arriasa", "Rozaalyna", "Cat Wigglebooty", "Kat Bon Z", "Jmbrage Gaurdian", "Sub Train", "Mike The Archmagus", "Zaylen Harker", "Drevarr Moonwillow", "Venomina The Sly", "Bella Bitty", "Sygaldry Verdandi", "Crusader Siolith", "Belvyn Brightblade", "Legendary Sakis", "Necrotic Windrunner", "Ryvalia Fazebringer", "Zaedy Zae", "Solus Luxes", "Glorious Gluvs", "Xanvias Einzbern", "Atria Ruinheart", "Daphne Agla\u00e9", "Morton Saltbringer", "Adjudicatrix Farra", "Jimbo The Pleb", "\u00c1rk\u00e1ntor", "Mistwalker Cael", "No Reserv\u00e9", "Kalisha Lafay", "Be\u00eb", "Efreet White", "Tegan Parker", "Newtype Khan", "Tootsie Pop Rocks"];
const professions = ["Willbender", "Reaper", "Weaver", "Reaper", "Vindicator", "Soulbeast", "Dragonhunter", "Tempest", "Firebrand", "Berserker", "Reaper", "Herald", "Chronomancer", "Reaper", "Herald", "Druid", "Reaper", "Scrapper", "Scrapper", "Firebrand", "Dragonhunter", "Weaver", "Firebrand", "Scrapper", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Reaper", "Chronomancer", "Druid", "Firebrand", "Berserker", "Berserker", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Berserker", "Scourge", "Herald", "Vindicator", "Chronomancer", "Reaper", "Reaper", "Tempest", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0082], [0.0082], [0.0, 0.0, 0.0306, 0.0105, 0.0, 0.0, 0.0119, 0.0052, 0.0, 0.0282, 0.032, 0.0], [0.0323, 0.0079, 0.0209, 0.0, 0.0563, 0.0274, 0.0, 0.0], [0.0474, 0.0209, 0.0141, 0.0091], [0.0024, 0.0, 0.0612, 0.0, 0.0, 0.0435, 0.0, 0.0, 0.0282, 0.0137, 0.0, 0.0], [0.0165, 0.0, 0.0204], [0.0058, 0.0, 0.0102, 0.0632, 0.0, 0.0, 0.0198, 0.0052, 0.0986, 0.0228], [0.0, 0.0, 0.0306, 0.0526, 0.0625, 0.0, 0.0632, 0.0052, 0.0, 0.0845, 0.0183], [0.0107, 0.0, 0.0, 0.0102, 0.0211, 0.0, 0.0, 0.0079, 0.0052, 0.0755, 0.0141, 0.0228, 0.0], [0.0136, 0.0, 0.0, 0.0102, 0.0316, 0.0, 0.0, 0.0158, 0.0314, 0.0, 0.0, 0.0091, 0.0, 0.0], [0.0218, 0.0], [0.0184, 0.0, 0.0, 0.0408, 0.0, 0.0, 0.0, 0.0119, 0.0105, 0.0, 0.0423, 0.0411, 0.0, 0.0], [0.0233, 0.0, 0.0, 0.0204, 0.0211, 0.0, 0.0, 0.0079, 0.0052, 0.0, 0.0423, 0.0137, 0.0, 0.0], [0.0286, 0.0, 0.0, 0.0102, 0.0316, 0.0], [0.0291, 0.0, 0.0306, 0.0, 0.0105, 0.0, 0.0704, 0.0228, 0.0], [0.0364, 0.0, 0.0, 0.0, 0.0211, 0.0, 0.0079], [0.0325, 0.0, 0.0, 0.0306, 0.0, 0.0, 0.0158, 0.0157, 0.0, 0.0282], [0.0311, 0.0, 0.0306, 0.0, 0.0, 0.0158, 0.0209, 0.0, 0.0, 0.0274], [0.0364, 0.0, 0.0, 0.0102, 0.0105, 0.0, 0.004, 0.0, 0.0, 0.0423, 0.0137, 0.0, 0.0], [0.0446], [0.0427, 0.0, 0.0, 0.0306, 0.0, 0.0, 0.0, 0.004, 0.0052, 0.0, 0.0, 0.0, 0.0], [0.0451, 0.0, 0.0, 0.0204, 0.0, 0.0323, 0.004, 0.0052, 0.0, 0.0], [0.0388, 0.0, 0.0, 0.0102, 0.0105, 0.0, 0.0, 0.0237, 0.0052, 0.0, 0.0704, 0.0274, 0.0, 0.0], [0.0412, 0.0, 0.0, 0.0, 0.0526, 0.0, 0.0, 0.0198, 0.0, 0.0, 0.0423, 0.0228, 0.0, 0.0], [0.0437, 0.0, 0.0, 0.0306, 0.0211, 0.0, 0.0, 0.0, 0.0, 0.0566, 0.0282, 0.0183, 0.0, 0.0], [0.0437, 0.0, 0.0306, 0.0316, 0.0, 0.0, 0.0158, 0.0, 0.0189, 0.0, 0.0137], [0.048, 0.0, 0.0, 0.0204, 0.0, 0.0, 0.0, 0.0119, 0.0, 0.0, 0.0, 0.0228, 0.0, 0.0], [0.0495, 0.0, 0.0263, 0.0306, 0.0, 0.0], [0.049, 0.0, 0.0, 0.0816, 0.0, 0.0, 0.004, 0.0], [0.0485, 0.0, 0.0, 0.0408, 0.0105, 0.0, 0.0, 0.004, 0.0052, 0.0, 0.0282, 0.0046, 0.0, 0.0], [0.0412, 0.0, 0.0, 0.051, 0.0105, 0.0, 0.0, 0.0316, 0.0, 0.0, 0.1127, 0.0183, 0.0, 0.0], [0.0509, 0.0, 0.0, 0.0211, 0.0, 0.0, 0.004, 0.0, 0.0, 0.0141, 0.0091, 0.0], [0.0432, 0.0, 0.0, 0.0, 0.0211, 0.0, 0.0079, 0.0262, 0.0, 0.1408, 0.0091, 0.0, 0.0625], [0.0422, 0.0, 0.0, 0.051, 0.0105, 0.0, 0.0, 0.0356, 0.0, 0.0, 0.0986, 0.0183, 0.0, 0.0], [0.0451, 0.0, 0.0, 0.0102, 0.0, 0.0, 0.0, 0.0514, 0.0, 0.0, 0.0563, 0.0137, 0.0, 0.0], [0.0485, 0.0, 0.0, 0.0, 0.0421, 0.0, 0.0323, 0.0079, 0.0052, 0.0, 0.0423, 0.0137], [0.0514, 0.0, 0.0, 0.0306, 0.0526, 0.0], [0.0427, 0.0, 0.0, 0.0632, 0.0, 0.0277, 0.0052, 0.0189, 0.0423, 0.0502, 0.0], [0.05, 0.0, 0.0, 0.0102, 0.0105, 0.0, 0.0079, 0.0, 0.1127, 0.0091, 0.0, 0.0], [0.0461, 0.0, 0.0, 0.0408, 0.0, 0.0, 0.0, 0.0316, 0.0262, 0.0, 0.0282, 0.032, 0.0, 0.0], [0.0529, 0.0, 0.0, 0.0102, 0.0, 0.0, 0.0, 0.0119, 0.0052, 0.0, 0.0423, 0.0183, 0.0, 0.0], [0.049, 0.0, 0.0102, 0.0421, 0.0, 0.0645, 0.0158, 0.0052, 0.0, 0.1127, 0.0137, 0.0, 0.0], [0.0543, 0.0, 0.0, 0.0204, 0.0105, 0.0, 0.0, 0.0158, 0.0209, 0.0, 0.0, 0.0137, 0.0, 0.0], [0.0558, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0119, 0.0052, 0.0, 0.0704, 0.0183, 0.0], [0.0495, 0.0, 0.0066, 0.051, 0.0105, 0.0, 0.0645, 0.0198, 0.0314, 0.0, 0.0986, 0.0183, 0.0], [0.0718], [0.0602, 0.0, 0.0, 0.0612, 0.0421, 0.0, 0.0, 0.0277, 0.0105, 0.0, 0.0282, 0.0274, 0.0], [0.0767, 0.0159, 0.0, 0.0, 0.0316, 0.0, 0.0, 0.0237, 0.0157, 0.0, 0.0282, 0.0228, 0.0, 0.0], [0.0849, 0.0, 0.0, 0.0102, 0.0, 0.0, 0.0323, 0.0198, 0.0052, 0.0, 0.0141, 0.0137, 0.0, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

