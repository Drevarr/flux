created: 20231009220917000
creator: Drevarr
tags: ChartData
title: 202310092209_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Nickhia", "Hayuf", "Allucinating", "Mythical Moonz", "Tribal S", "Apogeal", "Hayuf", "Tegan Parker", "Lhea Firehands", "Venomina The Sly", "Cat Wigglebooty", "Atria Ruinheart", "Zaedy Zae", "Klengah", "Joe In The Box", "Tootsie Pop Rocks", "Jmbrage Warrior", "Belvyn Brightblade", "Skyra Lightmoon", "Amiti\u00e9l", "Ryvalia Fazebringer", "Ka Otik Praetor", "High Sorcer Baradun", "Sub Train", "Drevarr Moonwillow", "Morv\u00e4rth", "No Reserv\u00e9", "Bella Bitty", "Zefirokai", "Sygaldry Verdandi", "Solus Luxes", "Necrotic Windrunner", "Aira Draugr", "Lord Erin The Wise", "Newtype Khan", "Xattu Ashfur", "Black Raspberry Pie", "Fang Shiyu", "K\u00e9ld\u00e1", "Kalisha Lafay", "Oo Dads Mad", "Daphne Agla\u00e9", "Daray Darkblood", "Rozaalyna", "Glorious Gluvs", "Tidalblade", "Momomeko", "Cedryn X", "Mister Jekyll", "Adjudicatrix Farra", "Rina Of Theros", "Kurn The Drunk", "Jmbrage Warrior", "Mort\u00e4rion", "Lucky Leipreach\u00e1n", "Be\u00eb", "Eibh\u00ebar", "Jimbo The Pleb", "Elonith Requiem", "Xanvias Einzbern", "Mistwalker Cael"];
const professions = ["Scourge", "Dragonhunter", "Chronomancer", "Firebrand", "Druid", "Scrapper", "Firebrand", "Tempest", "Tempest", "Druid", "Scrapper", "Firebrand", "Druid", "Druid", "Warrior", "Scrapper", "Spellbreaker", "Firebrand", "Herald", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Reaper", "Vindicator", "Firebrand", "Catalyst", "Firebrand", "Firebrand", "Reaper", "Herald", "Weaver", "Spellbreaker", "Reaper", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Berserker", "Reaper", "Reaper", "Reaper", "Berserker", "Renegade", "Chronomancer", "Berserker", "Reaper", "Reaper", "Reaper", "Reaper", "Berserker", "Scrapper", "Scrapper", "Reaper", "Chronomancer", "Berserker", "Reaper", "Berserker", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[31.6829], [46.878], [16.0109, 16.3714, 150.1951], [13.2962, 0.0, 15.3737, 12.9, 0.0, 3.6471, 4.4197, 0.0], [10.3333, 1.6188, 1.7802, 10.0084, 0.0, 12.3684, 1.1196, 1.3333, 12.9978, 20.7333, 13.2222, 7.4314, 12.1861, 0.0], [0.0, 8.4871, 34.254, 8.3933, 30.4, 23.3074, 1.5679], [33.7772, 25.2295, 30.5875], [8.7568, 11.453, 21.899, 0.0, 6.6629, 0.0, 0.3533, 0.1038, 10.3672, 0.0, 17.0476, 33.3922, 18.9453, 1.4], [24.1171, 10.8812, 20.6356, 8.3333, 22.2753, 11.1811, 0.1196, 1.1639, 8.1577, 0.0, 0.0, 0.0, 0.8686, 76.5429, 1.6098], [35.3243, 24.2099, 14.3168, 16.254, 7.2275, 84.0571, 16.9116, 2.2636, 0.5246, 26.4557, 15.5333, 22.6667, 7.573, 0.0], [22.9369, 11.3343, 4.6752, 75.0815, 53.2857, 32.4716, 0.6766, 0.0, 2.1296, 0.0, 10.3333, 8.4118, 8.854, 0.0], [16.8018, 8.8094, 21.3366, 44.2809, 14.3714, 14.6737, 6.6141, 3.2514, 10.6587, 0.0, 4.0, 5.3723, 0.0, 64.3659], [47.6306, 19.4475, 39.6436, 34.3651, 20.0899, 10.0, 3.8358, 0.0, 0.0, 1.1577, 0.0, 0.0, 6.6277, 0.0, 48.5854], [0.0, 27.3177, 26.3455, 25.2857, 17.4101, 19.8571, 35.5242, 0.625, 0.0, 9.1317, 0.0, 3.0794, 9.9412, 2.8102, 0.0, 41.9756], [40.519, 0.0109, 102.4384, 22.6032, 0.0, 39.8869, 0.0], [69.4505, 20.2376, 21.099, 43.7143, 39.3792, 70.3714, 12.5032, 1.5353, 8.6448, 23.7581, 3.4333, 2.0476, 12.4902, 11.2993], [20.5027, 107.9525, 0.0, 9.2698, 0.0, 103.4489, 0.0, 108.6585], [135.4234, 10.989, 31.3257, 10.4603, 35.573, 27.7429, 76.0737], [512.8739, 34.7127, 44.0723], [82.4955, 13.1105, 55.2723, 7.7143, 29.0421, 15.5143, 42.7579, 11.856, 1.4699, 28.5788, 0.0, 21.0317, 10.2549, 14.3832, 0.0, 82.7317], [24.9009, 15.337, 49.0307, 13.5873, 98.6376, 73.3714, 23.2358, 5.8016, 49.7268, 30.121, 38.8333, 2.1746, 0.0784, 11.7774, 39.2857, 0.0732], [134.7027, 24.7928, 61.1188, 25.4286, 91.5197, 8.5429, 24.3663, 7.7201, 0.0, 48.0497, 36.0667, 33.5556, 11.8235, 1.3613, 0.0], [96.1802, 21.6326, 76.1366, 0.0, 107.3567, 8.8857, 11.0189, 6.4973, 5.8852, 32.6933, 0.0, 0.0, 39.9854, 253.2439], [196.1712, 22.9392, 67.7634, 20.3651, 102.2107, 0.0, 57.0905, 2.8451, 10.0437, 37.7883, 23.5556, 2.5882, 4.6131, 0.0, 29.439], [117.0811, 19.6547, 59.5257, 61.0794, 90.6798, 31.4571, 58.5663, 8.5435, 5.623, 29.9806, 62.3, 54.0317, 28.0766, 30.8, 384.7073], [73.2174, 41.541, 181.3564, 0.0, 0.0, 33.3922, 76.4307, 234.6286, 1238.561], [148.0734, 65.5301, 198.7408, 0.0, 221.5397, 52.3922, 60.6314, 351.8293], [64.7297, 2.989, 110.2901, 0.0, 193.3034, 8.6286, 26.8779, 5.7826, 2.153, 26.527, 1.0794, 2.5882, 11.1861, 78.2, 39.8293], [62.7596, 425.3564, 257.9667, 16.9206, 55.2745, 87.1861, 39.1714, 196.4634], [181.2793, 17.1298, 111.2941, 3.1429, 87.0421, 108.6253, 28.0109, 10.4481, 43.7991, 36.7333, 0.0, 20.6275, 12.135, 0.0, 165.878], [75.8378, 62.895, 167.3792, 8.7778, 51.5281, 123.1714, 116.0, 6.587, 2.5792, 33.4773, 0.0, 114.0159, 8.6863, 80.2847, 286.7805], [358.7207, 84.5166, 146.4277, 72.9683, 202.2893, 14.3143, 137.7347, 38.4837, 0.0, 13.7279], [700.9459, 98.2017, 80.5525, 56.5238, 116.573, 199.0286, 295.7474], [409.0653, 58.0734, 97.9727, 233.3305, 160.6333, 22.9841, 124.3137, 103.0657, 400.8537], [331.4144, 59.884, 155.8792, 31.9365, 157.5702, 29.0857, 149.3832, 41.8995, 21.7213, 103.2981, 95.3333, 54.9524, 38.9412, 68.7518, 240.5143, 222.561], [950.2523, 62.0829, 207.7871, 114.3333, 290.6039, 202.4857, 107.6905], [329.5586, 116.1188, 99.3, 65.6667, 205.2612, 163.0571, 282.8105, 124.0951, 57.1038, 80.2268, 0.0, 254.5238, 0.0, 84.0365, 465.6857, 52.8049], [17.9459, 112.1077, 212.5941, 28.8571, 253.6573, 212.1429, 176.2653, 40.3614, 97.1749, 129.7408, 251.9333, 34.5556, 62.4118, 89.5584, 149.9429, 180.1707], [425.8018, 54.3315, 229.298, 25.6032, 87.5646, 214.9143, 249.6547, 46.1495, 22.2678, 167.2786, 305.9667, 34.0, 108.3102, 27.7429, 101.9024], [90.4505, 59.7624, 211.5535, 62.7619, 257.3483, 26.1143, 203.4779, 47.2391, 43.9344, 198.3758, 135.9, 156.1746, 10.1569, 111.062, 121.5429, 85.0], [837.1441, 90.8315, 283.5851, 26.2063, 278.7865, 61.4571, 249.0442], [667.8018, 70.0359, 215.7752, 462.1573, 106.5143, 194.2926, 3.538, 11.1694, 27.9222, 139.1905, 78.0196, 72.4599, 208.4286, 2.5366], [523.6486, 107.1326, 319.6624, 30.8413, 364.4916, 2.2968, 71.0598, 96.6503, 201.0713, 407.4333, 102.6825, 76.7647, 146.0182, 19.5429, 41.4146], [1065.4595, 34.5884, 204.9475, 308.9045, 329.3242, 21.3587, 25.5191, 304.2484, 0.0, 64.062, 70.4571], [961.1982, 134.6575, 154.4634, 114.9683, 188.3989, 254.5143, 425.1326, 63.144, 123.6503, 187.1166, 357.9667, 93.7302, 56.2353, 143.6788, 114.2, 721.6829], [540.5405, 109.1133, 488.6554, 342.7937, 251.677, 32.0286, 408.7895], [342.1267, 22.9524, 288.9101, 154.9143, 424.4674, 185.038, 5.4699, 303.7797, 35.7778, 14.4902, 99.062, 343.8571, 81.9024], [1146.4505, 95.0635, 386.3614, 52.0794, 314.5169, 87.6, 280.7516, 49.0489, 10.1257, 160.9482, 0.0, 0.0, 32.5882, 145.7299, 0.0], [579.973, 121.5939, 422.9832, 102.1587, 680.9073, 210.7747, 0.0, 55.5792, 319.3132, 0.0, 64.9365, 28.3922, 24.8686, 641.6585], [825.3243, 66.5221, 316.5941, 2.6667, 451.1854, 0.0, 383.4526, 35.6304, 142.2459, 384.9957, 200.4667, 32.6667, 248.5292, 12.0571, 399.5366], [1066.1351, 137.8122, 396.6059, 64.5556, 496.6938, 235.6, 530.7495, 114.7446, 12.0929, 202.9352, 511.7667, 200.8095, 17.1176, 147.1898, 153.3429, 210.0488], [1708.6396, 198.6381, 335.1188, 198.619, 566.1994, 220.4, 387.9958, 110.9674, 159.6448, 335.1274, 331.4, 188.5397, 1.1176, 281.8066], [2029.964, 146.4171, 678.1614, 89.0159, 32.4857, 875.6421, 59.7337], [935.3694, 295.2403, 510.8941, 529.8848, 126.7143, 218.8653, 32.2772, 50.3115, 530.7257, 0.0, 0.0, 292.0182, 0.0, 2027.7561], [876.9279, 250.5939, 587.9366, 103.0, 888.2556, 244.5143, 560.5284, 147.2663, 110.8197, 612.4255, 700.4, 279.7937, 369.062, 416.2571, 322.7805], [1314.9189, 114.6961, 797.7465, 206.9524, 1095.5056, 0.0, 946.8842, 248.7772, 81.9945, 454.6933, 430.5, 23.7778, 0.0, 357.3905, 529.6286, 330.6098], [1194.1622, 372.268, 866.7436, 313.6508, 1249.1236, 383.2, 648.2, 325.6685, 252.8962, 429.8164, 173.7667, 311.4444, 54.0, 366.8577, 136.0857, 335.7317], [2993.982, 187.6354, 906.6495, 150.0159, 602.927, 326.8571, 1070.4484, 362.2609, 53.1202, 283.635, 206.3667, 3.0159, 339.2226, 243.1714, 1439.0976], [1076.6535, 1617.0787, 280.9714, 1113.7937, 318.0245, 111.082, 392.2397, 605.1333, 511.1587, 146.0588, 580.3394, 422.8571, 1988.561], [3280.6847, 307.5718, 1308.7168, 77.6825, 1605.8653, 273.25, 30.8525, 703.635, 468.6333, 252.7619, 82.8431, 281.4745, 209.8571, 150.5366], [2391.5766, 303.0442, 989.4663, 525.1746, 1337.3708, 798.6286, 1305.3747, 283.9565, 277.6721, 689.2311, 790.7333, 367.6349, 427.2941, 403.3832, 978.8]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

