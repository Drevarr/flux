created: 20231007004715000
creator: Drevarr
tags: ChartData
title: 202310070047_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Leafzely", "Conditions M\u00e6 Apply", "Mac Aaroni", "Tegan Parker", "High Sorcer Baradun", "Arriasa", "Zaedy Zae", "Drevarr Moonwillow", "Legendary Sakis"];
const professions = ["Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[28.998, 0.0, 3.102, 72.792, 42.5378, 166.2566, 36.6638, 11.0405, 147.3606, 69.66, 19.6396, 25.056, 8.1443, 5.596, 157.248, 67.2296, 0.0, 0.0, 138.6801], [3.4344, 33.9746, 8.6856, 32.148, 80.6943, 33.5491, 61.7288, 33.8004, 182.1258, 159.444, 71.7116, 7.038, 18.5062, 4.7318, 10.658, 100.932, 81.393, 44.6855, 6.5472, 66.8655], [42.12, 6.6112, 11.5808, 50.76, 68.8813, 41.2157, 53.6944, 25.4167, 272.7972, 282.381, 89.2492, 0.0, 80.3412, 14.456, 19.2296, 0.0, 29.3664, 194.3838], [89.9424, 15.2069, 52.7082, 129.924, 75.2592, 0.0, 47.018, 30.4056, 557.3394, 458.466, 270.5703, 112.0829, 10.66, 36.6102, 0.0, 299.8944], [27.8964, 10.2514, 33.941, 40.572, 195.7738, 132.7392, 110.5007, 121.7995, 243.3564, 411.639, 209.9698, 75.0811, 67.3072, 95.0859, 22.048, 404.4573], [535.2156, 68.1534, 534.9399, 534.852, 353.4466, 253.8202, 1306.0927, 378.653, 2302.803, 2239.311, 1255.1939], [251.6832, 22.0109, 271.7611, 414.18, 443.9573, 378.3859, 871.3886, 259.6579, 1579.9374, 1654.683, 840.7799, 77.742, 221.8671, 610.168, 578.2193, 225.6118, 151.1136, 1942.6797], [471.42, 77.8037, 483.2916, 515.052, 564.0837, 400.4035, 599.4085, 487.759, 3018.1518, 2243.181, 951.4105, 82.116, 110.9388, 20.7526, 395.2741, 313.664, 409.5165, 29.7696, 1684.2735], [976.8276, 421.5618, 1035.324, 589.5398, 388.1117, 1164.0769, 580.6289, 3284.3718, 3298.788, 1444.9235, 113.5939, 686.36, 730.444, 672.3334, 139.6666, 88.7616, 2467.3896]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

