created: 20231007001352000
creator: Drevarr
tags: ChartData
title: 202310070013_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Auro Cleansewind", "Crusader Siolith", "Air One Com", "Arriasa", "Legendary Sakis", "Mac Aaroni", "Conditions M\u00e6 Apply", "Leafzely", "Arcanophage Farra", "Newtype Khan", "Tegan Parker", "Drevarr Moonwillow", "High Sorcer Baradun"];
const professions = ["Tempest", "Firebrand", "Firebrand", "Druid", "Druid", "Tempest", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[121.7462, 166.5149], [40.2084, 0.0, 0.0, 0.0, 40.8989, 22.9715, 45.3722, 111.8124, 50.052, 39.8798, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 52.3341], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 308.0322, 58.179, 39.7597, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [74.52, 0.0, 71.0099, 0.0, 0.0, 0.0, 46.1693, 0.0, 143.4456, 71.853, 0.0], [83.9484, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 252.126, 170.925, 0.0, 0.0, 84.8691, 0.0, 0.0, 0.0, 0.0, 44.4366], [66.5172, 0.0, 16.3372, 24.732, 41.4841, 16.6954, 69.3671, 24.0293, 266.22, 194.532, 122.8828, 0.0, 32.3687, 0.0, 0.0, 0.0, 5.76, 56.3355], [52.974, 35.5622, 0.0, 35.172, 35.3835, 0.0, 96.865, 35.2469, 260.1126, 206.4, 75.6155, 0.0, 0.0, 0.0, 8.4289, 35.464, 35.2419, 26.554, 0.0, 59.0733], [30.2616, 0.0, 80.8588, 106.02, 41.2068, 40.1702, 83.5687, 25.033, 317.5848, 351.009, 176.4563, 25.056, 8.1146, 39.892, 0.0, 68.5979, 0.0, 0.0, 295.3665], [41.2776, 0.0, 72.612, 0.0, 0.0, 79.6081, 79.5269, 816.669, 522.579, 155.4953, 0.0, 0.0, 0.0, 0.0, 187.5393], [122.31, 0.0, 99.3415, 139.176, 119.7936, 185.0746, 78.7594, 180.1015, 351.4104, 514.065, 253.0928, 59.85, 51.2747, 70.3526, 65.5733, 81.068, 59.242, 0.0, 370.4454], [86.9616, 20.1398, 163.2428, 148.32, 48.4166, 0.0, 54.7694, 113.5634, 1007.0946, 740.589, 341.9216, 149.6297, 12.012, 52.5116, 0.0, 332.2215], [151.3404, 65.0689, 68.3474, 183.888, 171.4269, 49.199, 264.5115, 125.8142, 954.9468, 736.461, 355.2549, 5.004, 29.2942, 19.1059, 102.2144, 144.924, 205.313, 19.8816, 671.6034], [158.0796, 25.5377, 216.8815, 145.044, 218.8452, 145.4429, 356.8501, 196.3375, 588.033, 1223.178, 566.0054, 118.361, 92.633, 197.2771, 25.428, 735.5205]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

