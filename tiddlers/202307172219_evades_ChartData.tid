created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Dizzy Bunnyhopper", "Cedryn X", "Gun Breaker", "Oo Dads Mad", "Sygaldry Verdandi", "Mmathuss", "Blade Stacker", "Cat Wigglebooty", "Klengah", "Bella Sassy", "Aira Draugr", "Tootsy Pop Star", "Shaca Booey", "Rina Of Theros", "Tribal S", "Venomina", "Koralia Danai", "Xanvias Einzbern", "Legacy Of Mathus", "Daphne Agla\u00e9", "Miphest\u00f6", "Be\u00eb", "Crusader Siolith", "Primal Clone", "Drumina", "Tegan Parker", "Bee Nemesis", "I Mad X King I", "Belvyn Brightblade", "Black Raspberry Pie", "Sub Train", "Lord Erin The Wise", "Soweng", "Lucky Luprac\u00e1n", "Morton Saltbringer", "Permanent Dawn", "Ateriuz", "Glorious Gluvs", "Drevarr Moonwillow", "Rozaalyna", "Solus Sanctus", "Newtype Khan", "Eibh\u00ebar", "Cyclotechnist Farra", "Ryvalia Fazebringer", "Johosh The Mighty", "High Sorcer Baradun", "Mistwalker Cael", "Duke Silvver", "Inedible Plant"];
const professions = ["Holosmith", "Berserker", "Berserker", "Berserker", "Firebrand", "Firebrand", "Virtuoso", "Scrapper", "Druid", "Firebrand", "Herald", "Scourge", "Berserker", "Scourge", "Druid", "Scourge", "Firebrand", "Berserker", "Berserker", "Scourge", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Druid", "Tempest", "Berserker", "Holosmith", "Firebrand", "Chronomancer", "Firebrand", "Weaver", "Reaper", "Scrapper", "Chronomancer", "Weaver", "Berserker", "Berserker", "Scrapper", "Scourge", "Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Chronomancer", "Berserker", "Tempest", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10, 1, 0, 0, 0, 1, 1, 24, 0, 0, 2, 4], [6, 1, 3, 19, 0, 0, 10, 0, 5], [19, 8, 0, 0, 0, 17], [0, 16, 2, 12, 15], [0, 24, 3, 0, 6, 1, 0, 4, 0, 10], [16, 3, 9, 3, 20], [8, 23, 9, 0, 3, 7, 9], [0, 10, 18, 28, 0, 0, 6, 5, 5], [31, 8, 11, 14, 6, 0, 1, 1, 2], [0, 11, 8, 1, 29, 1, 4, 22, 1, 0, 2, 0, 0], [1, 26, 5, 9, 39], [0, 23, 2, 12, 28, 7, 8], [64, 3, 0, 20, 2, 0], [0, 18, 3, 7, 19, 1, 1, 29, 0, 0, 17, 0, 3], [0, 9, 20, 26, 11, 1, 10, 22, 1, 0, 7, 0, 5], [0, 31, 3, 6, 10, 0, 2, 43, 3, 0, 3, 6, 5], [0, 4, 6, 24, 19, 2, 21, 21, 5, 0, 3, 1, 7], [0, 56, 8, 0, 56, 2, 0], [0, 46, 12, 14, 38, 5, 14], [0, 24, 6, 11, 10, 5, 5, 20, 0, 0, 14, 1, 34], [0, 48, 13, 4, 35, 4, 3, 23, 1], [0, 13, 7, 2, 29, 0, 14, 56, 3, 0, 0, 0, 8], [0, 27, 9, 0, 33, 3, 20, 29, 5, 0, 3, 1, 2], [0, 16, 6, 5, 18, 6, 11, 20, 15, 0, 19, 5, 12], [0, 29, 5, 5, 18, 20, 2, 35, 1, 0, 4, 3, 11], [0, 23, 1, 35, 17, 6, 13, 22, 0, 0, 5, 15, 0], [5, 7, 11, 65, 8, 0, 25, 1, 18], [29, 11, 15, 43, 11, 0, 6, 10, 17], [0, 62, 6, 21, 56], [0, 23, 1, 2, 26, 2, 9, 57, 15, 0, 9, 2, 0], [0, 25, 21, 5, 36, 9, 14, 23, 5, 0, 4, 1, 7], [91, 13, 0, 16, 9, 35], [1, 7, 17, 30, 5, 33, 47, 7, 1, 8, 3, 6], [0, 27, 12, 25, 27, 4, 2, 52, 9, 0, 0, 9, 7], [0, 29, 16, 7, 48, 1, 22, 24, 1, 0, 2, 2, 24], [0, 35, 23, 9, 50, 2, 15, 33, 3, 0, 5, 2, 3], [0, 27, 3, 4, 39, 9, 35, 34, 14, 0, 3, 5, 8], [0, 32, 2, 24, 27, 7, 6, 42, 4, 0, 7, 5, 26], [0, 21, 20, 46, 15, 7, 11, 43, 5, 0, 7, 3, 8], [0, 32, 14, 16, 20, 3, 12, 78, 4, 0, 7], [0, 81, 7, 12, 22, 8, 15, 35, 5, 7, 2, 2], [0, 55, 17, 23, 38, 10, 9, 25, 12, 1, 11, 9, 4], [0, 44, 16, 33, 44, 12, 33, 31, 3, 0, 5, 3, 11], [0, 50, 17, 19, 47, 2, 25, 76, 9, 0, 7, 0, 3], [0, 25, 13, 36, 112, 5, 17, 48, 6, 0, 30, 7, 7], [0, 44, 9, 22, 65, 7, 35, 89, 14, 0, 0, 12, 24], [0, 43, 31, 44, 39, 17, 19, 104, 5, 0, 14, 4, 7], [0, 130, 21, 50, 101, 17, 46, 72, 39, 0, 3, 8, 8], [0, 74, 50, 56, 103, 14, 21, 91, 39, 0, 20, 16, 18], [0, 95, 41, 28, 97, 17, 49, 87, 42, 0, 40, 3, 57]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

