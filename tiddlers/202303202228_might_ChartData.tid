created: 20230320222849000
creator: Drevarr
modified: 20230705163522699
modifier: drevarr
tags: ChartData
title: 202303202228_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Eibh\u00ebar", "Raelyn Sunray", "Cat Wigglebooty", "Zadie Miststep", "Avanda Corone", "Ark Darkness", "Black Raspberry Pie", "Stoic Rapidfire", "Zefirokai", "Fribble Bibble", "Koralia Danai", "Venomina The Siren", "Viral Marketing", "Zaylen Harker", "Jeckyll Mbs", "Drevarr Moonwillow", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "High Sorcer Baradun", "Newtype Khan"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Druid", "Tempest", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.0827, 1.9074, 1.2913, 2.646, 3.0976, 38.9338, 0.0, 1.8428, 21.5303, 2.8704, 1.4753, 1.8317, 0.0, 4.189, 0.0, 3.9301], [3.6557, 3.267, 4.68, 0.0, 5.1893, 5.5146, 3.8805, 40.4352, 13.6276, 1.683, 0.0, 5.549, 6.1952, 17.0086, 5.1084, 5.67, 4.3401, 3.128, 5.2151, 14.8824, 5.7663, 4.311, 0.0, 0.0, 4.6754], [30.3264, 0.0, 9.4996, 5.6347, 6.6074, 9.6307, 46.7738, 6.192, 5.292, 26.8065, 4.7104, 0.9264, 12.3638], [5.9405, 1.188, 0.7776, 4.959, 3.2268, 4.2541, 7.9938, 85.0824, 15.6597, 5.5726, 0.0, 7.9411, 36.542, 3.127], [7.0067, 1.3781, 6.984, 3.135, 0.0, 0.0, 14.9011, 32.0112, 22.8321, 0.0, 0.0, 0.6502, 0.0, 30.4295, 19.5667, 6.426, 11.8289, 3.496, 0.0, 13.5086, 1.161, 1.1794, 0.0, 7.429, 0.3049], [14.6234, 6.0707, 3.2962, 16.3891, 42.6545, 10.5883, 4.347, 7.8292, 9.6416, 11.5968, 45.563, 4.0248, 4.189, 12.4995, 1.7618], [9.234, 3.4343, 6.3812, 2.6387, 100.2456, 21.9954, 7.4052, 1.8279, 0.0, 4.3366, 47.4382], [4.7219, 3.6947, 3.8304, 5.244, 5.2081, 8.1143, 4.579, 81.2916, 9.5632, 1.4586, 0.0, 0.0, 0.0, 25.1143, 0.0, 3.969, 11.6587, 3.68, 5.2837, 30.4517, 7.4691, 1.4641, 0.0, 5.1885, 3.3202], [3.5414, 3.766, 4.4208, 7.296, 2.7173, 0.0, 11.8743, 45.0684, 40.285, 0.0, 2.7335, 0.0, 12.3904, 15.0154, 0.0, 17.1902, 11.5552, 1.1665, 50.1422, 3.1347, 2.6435, 1.3491, 7.7238, 2.8459], [128.4466, 5.2632, 15.6579, 3.095, 78.2399, 25.1051], [6.6259, 2.97, 2.448, 3.591, 2.4908, 7.2872, 5.3551, 113.3028, 16.1379, 7.7792, 0.0, 0.0, 10.4192, 32.5556, 10.5264, 9.5445, 21.7005, 6.2192, 9.4009, 27.7042, 5.6889, 6.0598], [6.2451, 5.8925, 8.0496, 8.9205, 1.7549, 7.2084, 26.6978, 107.8272, 17.0942, 0.0, 18.8071, 12.0704, 3.6025, 53.5766, 1.0449, 2.5622, 26.591, 1.3891], [89.2944, 0.0, 0.0, 0.0, 0.8467, 8.8422, 88.4981, 25.542, 1.2757, 51.9961, 0.0, 3.3624, 64.5667, 2.1672, 4.6364, 37.9702, 17.516], [163.0044, 26.6574, 7.3304, 1.7608, 6.3202, 13.5168, 64.7126, 4.3654, 9.072, 24.7641, 14.2048, 2.1272, 47.8526, 7.1595, 7.89, 21.1077, 7.9957], [7.2352, 3.9442, 8.0928, 14.6775, 0.906, 15.2892, 126.36, 32.2758, 12.0428, 0.0, 7.8322, 12.503, 47.1724, 9.5357, 6.2843, 34.1251, 10.488, 9.5039, 63.193, 10.1781, 6.3445, 3.2934, 21.4025, 4.6077], [111.0877, 13.2509, 10.2532, 46.8901, 37.3152, 16.9148, 170.5752, 36.1845, 19.6436, 3.968, 35.317, 27.5783], [8.8726, 2.281, 10.5408, 9.234, 5.9063, 5.1601, 11.0982, 154.1592, 17.3333, 9.35, 6.9428, 7.8624, 19.7683, 53.5506, 8.7307, 16.3485, 39.3162, 13.1008, 9.0578, 71.8934, 9.1719, 9.5168, 3.9482, 23.9378, 10.164], [1.447, 3.3145, 3.672, 25.992, 10.5483, 19.9313, 33.7603, 134.3628, 42.6758, 8.602, 1.9621, 8.1799, 10.8698, 72.6854, 19.8454, 10.0642, 37.1887, 16.928, 8.4746, 72.8093, 7.6626, 3.5383, 28.006, 8.0634], [10.7766, 3.8135, 6.5232, 20.52, 4.6986, 13.7865, 19.0145, 168.9012, 41.7195, 16.2316, 3.5217, 0.4234, 16.3891, 65.9085, 17.771, 12.9938, 39.997, 8.7216, 5.2837, 86.7758, 8.0109, 9.0287, 36.9679, 8.4361], [0.6854, 3.7184, 7.8624, 28.785, 3.0003, 11.3443, 40.9005, 185.328, 46.3815, 12.7534, 5.7857, 3.523, 12.503, 68.9647, 16.8422, 16.3012, 42.6351, 16.9648, 10.9449, 83.5704, 16.4475, 15.0072, 3.968, 37.0858, 5.7257], [8.7552, 35.5965, 23.1912, 13.4714, 49.4376, 171.4284, 58.0964, 5.7222, 11.8228, 15.6643, 12.2778, 93.5475, 27.5854, 6.5678, 36.1675, 26.2016, 14.6504, 124.5542, 1.6641, 0.0, 0.0, 11.2614, 19.1083], [19.7635, 8.9338, 13.2912, 31.293, 10.7748, 31.2363, 35.3902, 335.6964, 93.9584, 9.2752, 15.8476, 4.3394, 29.9622, 86.2391, 20.7742, 20.1285, 21.8707, 26.4224, 15.1307, 102.5741, 19.7757, 10.5742, 5.0592, 54.4201, 13.6198]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

