created: 20230603215001000
creator: Drevarr
modified: 20230705163533426
modifier: drevarr
tags: ChartData
title: 202306032150_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Kira Dragonblaze", "Melody Phoenixstorm", "Yngvar The Burdened", "Sygaldry Verdandi", "Smol Gluvs", "Tootsie Pop Rocks", "Duke Silvver", "Kary\u00edna", "Zadey Starbolt", "Lord Erin The Wise", "Be\u00eb", "Mistwalker Cael", "Jo Hosh", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Dragonhunter", "Scrapper", "Scourge", "Dragonhunter", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Scrapper", "Weaver", "Scourge", "Vindicator", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.1595, 67.0995, 962.2807, 0.0, 543.3958], [40.569, 102.5735, 324.8596, 0.0, 850.5208, 0.0, 212.8113, 60.5479, 177.6147, 2.1132, 0.0], [9.1034, 40.2559, 469.7544, 1062.0625, 216.4054, 388.283, 21.6712, 42.5963, 118.6981, 0.0], [105.7297, 528.434, 2.4247, 149.055, 158.9057, 137.0882, 496.5319, 309.678, 14.5135, 0.0, 28.7179], [13.2586, 167.5498, 498.4737, 0.0, 970.0417, 201.3514, 235.9811, 56.6849, 152.0183, 270.2264], [43.5345, 51.8152, 563.4211, 0.0, 881.8125, 54.8108, 332.8302, 62.8356, 113.1284, 0.0, 0.0, 338.2872, 264.1017, 4.3919, 27.6964, 165.0256], [119.5647, 156.5308, 728.7193, 0.0, 1256.1458, 643.717, 16.9863, 134.4037, 117.0189, 0.0, 0.0, 738.6809, 78.0763, 0.0, 0.0, 0.0], [44.2112, 89.545, 1446.7719, 0.0, 729.1667, 181.3514, 223.7358, 249.5068, 112.6789, 89.0189, 0.0, 573.3617, 305.8051, 79.8514, 31.6607, 109.8462], [112.0733, 361.2512, 1228.0702, 0.0, 992.2917, 258.027, 700.9434, 150.6575, 158.9817, 0.0, 0.0, 202.0319, 352.8559, 93.8649, 151.6154], [119.0259, 444.7488, 1138.7193, 902.8958, 434.9189, 439.6981, 130.1644, 262.6881, 727.0189, 0.0, 0.0, 581.3936, 36.7881, 181.3378, 0.0, 0.0], [102.3103, 176.0521, 773.6316, 31.4205, 1371.5625, 377.4054, 380.7358, 80.7945, 184.422, 194.2642, 0.0, 134.2059, 1046.2128, 597.5678, 0.0, 350.6071, 345.2308], [194.1164, 228.6351, 1061.2807, 7.7727, 1092.6042, 519.1892, 769.1887, 135.7671, 292.6514, 0.0, 78.4706, 763.7979, 494.4068, 56.3919, 276.1607, 538.8974], [65.1983, 216.5308, 2472.3509, 0.0, 2052.7083, 169.4595, 1169.9057, 147.3014, 171.3578, 111.4528, 0.0, 559.9787, 588.5847, 76.5, 108.6607, 0.0], [106.9526, 324.5592, 1787.1053, 0.0, 2316.0417, 565.7297, 1385.6226, 0.0, 241.2294, 320.6981, 61.9118, 1104.1064, 582.7203, 175.4324, 70.0, 607.1282], [54.5172, 431.4882, 4127.2982, 1.7386, 2840.8333, 702.8108, 1831.4528, 218.8493, 257.422, 0.0, 0.0, 765.9255, 874.6525, 249.7162, 1224.1964, 1328.4872]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

