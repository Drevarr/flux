created: 20230610101822000
creator: Drevarr
modified: 20230705163534508
modifier: drevarr
tags: ChartData
title: 202306101018_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Tomitigas", "F\u00e2ble", "Yngvar The Burdened", "Lady The Mirage", "Gamora Titus", "Drevarr Moonwillow", "Gestern Yesteryear", "Vesnan", "Aronorf Xideliesi", "Slang\u00efn", "Elonith Requiem", "Xanvias", "Alarics Bane", "Charr Surethang"];
const professions = ["Tempest", "Vindicator", "Scourge", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Firebrand", "Herald", "Reaper", "Reaper", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.2308, 17.8333, 0.0, 5.3333, 14.3509, 9.537, 24.069, 14.5957, 17.375, 0.0, 0.3836, 15.4353, 0.0, 35.338, 53.8509, 6.2289, 4.5059, 45.4658, 19.1675, 9.0571], [73.1538, 36.8, 0.0, 0.0, 57.2807, 28.4074, 41.7414, 9.9362, 78.4194, 17.475, 36.1786, 0.7183, 18.8421, 42.5904, 18.3294, 35.5616, 0.0, 10.8889, 0.0], [116.3889, 416.9464], [79.8639, 7.2381, 185.3, 87.0], [16.9333, 0.0, 0.375, 5.5263, 5.537, 8.069, 110.6915, 1.7097, 2.1375, 0.8125, 10.3151, 2.5412, 0.0536, 31.3803, 112.2105, 125.4217], [20.2692, 35.1333, 6.6364, 11.125, 28.9474, 31.7037, 14.6724, 75.7766, 59.1935, 6.3625, 6.0, 31.3151, 13.9647, 8.375, 16.2535, 63.3509, 49.8313, 36.6118, 24.9178, 24.2723, 3.819, 6.9821], [0.0, 1.6, 0.0, 1.9792, 14.6491, 3.4444, 1.431, 7.4787, 0.0, 0.1875, 0.0, 0.2877, 10.7412, 8.2143, 0.5493, 16.5, 22.9759, 68.5412, 8.9863, 50.8482, 67.981, 3.0893, 75.6111, 149.125], [215.9589, 87.9372, 74.8, 0.0, 63.7333], [1.7593, 17.1207, 7.6277, 13.3548, 18.8375, 9.0417, 6.3288, 13.8118, 14.6607, 13.2254, 35.8421, 115.0361, 75.6118, 106.2466, 69.644, 21.6095, 29.3929, 131.9444, 238.3036], [5.6154, 0.0, 0.0, 42.1875, 21.8772, 38.2778, 69.3621, 57.617, 111.5161, 7.6, 0.0, 13.6712, 2.0118, 26.2321, 0.0, 28.8421, 13.3373, 1.0706, 77.7534, 216.8639, 17.0381, 1.4464, 0.0, 81.375], [75.0, 42.7, 22.4091, 10.0417, 37.8947, 35.1481, 9.1034, 36.2021, 104.3548, 34.6875, 9.7708, 33.2192, 62.8941, 63.9643, 0.4085, 59.7719, 58.3976, 9.4706, 61.8082, 148.8796, 40.8476, 32.0889], [83.3889, 77.9138, 37.0213, 47.7097, 44.2625, 11.2083, 101.274, 36.4588, 130.1071, 5.2394, 41.7368, 115.988, 128.5412, 145.863, 120.7487, 94.4952, 12.625, 15.9889, 4.6786], [31.9615, 26.4667, 0.0, 30.5417, 105.2982, 26.037, 23.6379, 51.0106, 237.1935, 63.15, 6.7708, 57.0137, 68.1294, 31.5536, 2.6197, 82.2281, 45.2169, 145.8941, 147.8904, 121.6178, 20.5619, 14.3214, 40.3556, 44.2679], [261.1333, 0.0, 61.0417, 272.5439, 157.9815, 276.8966, 122.8191, 604.129, 136.05, 2.625, 131.0548, 69.2706, 110.9821, 73.2018, 0.9518, 164.5765, 449.1233, 150.9319, 6.4, 1.4643, 444.7667, 208.7321]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

