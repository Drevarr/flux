created: 20230408223537000
creator: Drevarr
modified: 20230705163525099
modifier: drevarr
tags: ChartData
title: 202304082235_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Tac Mancer", "Seren Nightroad", "Anita Strips", "Aira Draugr", "Reikitsuki", "Sofya De Nova", "Be\u00eb", "Cthullun", "Fribble Bibble", "Ark Darkness", "Venom The Ferocious", "Kosair", "Tribal S", "Grasszanine", "Zaylen Harker", "Traidoruns Maximus", "Sister Elon\u00edth", "Zadie Miststep", "Drevarr Moonwillow", "Newtype Khan", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Arcanophage Farra", "Koralia Danai", "Aronorf Xideliesi", "Mmathuss", "Bella Sassy"];
const professions = ["Scourge", "Scourge", "Chronomancer", "Herald", "Soulbeast", "Weaver", "Scourge", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Druid", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[124.4162, 136.1052, 0.0, 0.0, 19.458, 0.0, 368.918, 0.0, 0.0, 0.0, 0.0, 42.2838, 53.6765, 0.0, 53.9898, 0.0, 157.7722], [134.0095, 0.0, 228.0096, 0.0, 77.7538, 272.6968, 0.0, 84.1394, 12.5019, 0.0, 11.0916, 50.3818, 41.272, 25.9026, 24.252], [16.3185, 85.8396, 177.9498, 0.0, 0.0, 30.9053, 58.1949, 0.0, 46.0207, 15.3488, 121.7502, 20.7636, 25.74, 109.384, 12.9748, 67.0925, 0.0, 0.0, 44.156, 45.1136, 0.874, 0.0, 20.8787, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0342, 42.8267, 32.3545], [262.5795, 160.314, 636.3441, 27.832, 25.0056], [392.2027, 508.4178, 27.3991, 73.0145, 37.9978, 51.1132, 33.3216, 27.7134, 39.16], [95.933, 42.8274, 123.5052, 16.0944, 25.8543, 21.462, 214.0817, 42.0462, 21.5292, 89.1866, 33.92, 2.8314, 31.2655, 97.7591, 41.3497, 52.1976, 28.6532, 23.1116, 5.1095, 9.0048, 0.0, 10.0069, 31.9124, 15.2582, 7.6673, 0.0, 48.1504, 57.645, 8.8491, 35.4753], [111.0647, 62.0928, 0.0, 0.0, 124.0862, 10.3018, 130.4659, 10.0871, 0.0, 3.6423, 2.8408, 28.8756, 70.7335, 0.0, 37.0595, 70.8967, 22.1021, 6.0291, 13.373, 77.3248, 31.0105, 5.8892, 15.995, 119.5778, 13.3554, 0.0, 98.2212, 0.0, 0.0, 143.4762, 68.0846], [22.747, 0.0, 132.4575, 13.328, 60.7131, 272.3834, 203.7873, 0.0, 68.2466, 95.093, 3.1164, 32.409, 0.0, 119.196, 22.0797, 0.0, 23.9803, 35.4169, 0.0, 0.0, 0.0, 0.0, 0.0, 20.7754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 204.0686], [216.9866, 31.185, 20.6451, 0.0, 0.0, 270.2986, 540.9818, 0.0, 0.0, 0.0, 0.0, 15.7248, 5.5255, 0.0, 96.3547, 54.8904, 84.7392, 0.0, 42.2321, 28.4032, 44.5735], [347.7324, 606.7467, 0.0, 0.0, 189.9694, 309.2525, 100.8518], [50.7562, 120.0644, 56.7089, 137.7152, 45.6741, 18.9126, 133.5153, 91.6819, 0.0, 28.4724, 122.5926, 170.5725, 330.7923, 269.7908], [30.6634, 13.4719, 242.2297, 27.7552, 50.3552, 34.2475, 179.1191, 93.5408, 130.2918, 22.8131, 0.0, 35.4564, 294.5855, 431.8819], [93.8561, 40.8408, 274.5981, 31.2928, 10.5673, 374.7878, 619.1352, 0.0, 0.0, 39.2283, 0.0, 0.0, 19.0648, 0.0, 125.8463, 53.6373, 21.7526, 0.0, 2.9017, 0.0, 20.0694, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.9422], [86.8342, 0.0, 186.9021, 0.0, 0.0, 49.3013, 577.3273, 108.0962, 0.0, 0.0, 0.0, 41.7222, 0.0, 97.636, 92.1416, 50.6867, 11.9683, 100.2414, 7.6327, 66.8416, 27.6763, 28.2253, 0.0, 90.2556, 25.6998, 0.0, 0.0, 0.0, 75.8587, 165.2119], [551.3675, 215.4306, 1043.5824, 41.0368, 58.4879], [720.3861, 1.4224, 128.4745, 601.2776, 44.0992, 40.0646, 165.9698, 174.2852, 62.1738, 118.8502, 88.396], [115.8927, 189.5554, 179.0208, 158.0951, 202.9394, 182.4046, 187.6759, 42.563, 47.3484, 70.308, 422.9305, 469.2042], [151.8115, 20.6976, 391.7088, 0.0, 0.0, 287.4682, 632.1608, 0.0, 47.5121, 66.3978, 62.0948, 30.303, 45.0107, 87.78, 74.119, 27.809, 108.239, 36.7756, 43.2768, 12.5596, 27.5789, 38.1657, 52.1101, 16.9485, 12.276, 0.0, 43.9992, 83.6269, 31.017], [271.6783, 34.7424, 263.8188, 9.184, 7.69, 445.6738, 846.4526, 95.739, 62.9614, 81.5575, 9.0736, 27.2844, 11.4457, 37.642, 209.9518, 75.9088, 107.1034, 41.4229, 38.3974, 43.4621, 68.1408, 89.1146, 8.762, 38.0623, 153.3117, 12.1008, 0.0, 0.0, 0.0, 18.5409, 215.7547, 26.7498], [144.5918, 180.6882, 352.4283, 20.0256, 87.975, 336.8921, 631.1104, 42.4015, 50.3395, 157.4548, 73.2672, 158.769, 29.7211, 84.81, 500.1082, 106.8301, 0.0, 0.0, 10.5357, 102.9466, 45.024, 57.8452, 0.0, 0.0, 78.4802, 8.0266, 0.0, 0.0, 0.0, 41.0029, 78.275], [816.2217, 0.0, 1247.841, 19.1632, 0.0, 0.0, 213.0313, 0.0, 0.0, 18.6052, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 78.0998, 0.0, 0.0, 79.8908, 164.416, 62.992, 78.4753, 13.9536, 7.8945, 10.3286, 0.0, 0.0, 0.0, 259.308, 125.4404, 247.7541], [319.0514, 212.4738, 907.4709, 52.1744, 258.2798, 501.905, 0.0, 76.0637, 85.8397, 29.2348, 100.1052, 30.6306, 28.204, 174.9208, 201.6958, 53.9011, 0.0, 28.6534, 72.6366, 158.2336, 0.8093, 10.8209, 206.9267, 68.0317, 16.2055, 28.5665, 12.9888, 68.4616, 3.4776, 41.8135, 93.7517], [139.2512, 109.3554, 430.6239, 6.8208, 19.0854, 687.5198, 684.2631, 18.2398, 0.0, 359.0107, 50.88, 122.4522, 120.446, 4.268, 304.6681, 122.1088, 71.6352, 104.8001, 63.8232, 170.8837, 211.6352, 80.8926, 59.4909, 115.0138, 116.0287, 50.1633, 58.1262, 73.7974, 63.126, 91.5978, 287.3693], [429.5227, 0.0, 805.5243, 4.2896, 19.9031, 708.7366, 845.4022, 0.0, 165.5438, 347.444, 221.7096, 19.188, 80.4976, 140.03, 171.722, 92.481, 63.5981, 5.4978, 0.9135, 150.4458, 102.6368, 9.1283, 9.959, 26.8994, 241.1791, 52.0634, 93.555, 202.2447, 228.0739], [268.8102, 457.9806, 324.1098, 101.4608, 0.0, 453.6454, 1115.788, 0.0, 28.2523, 17.384, 106.236, 118.0608, 0.0, 175.1549, 134.8815, 236.0467, 115.2505, 20.3711, 105.4067, 276.2368, 82.9643, 163.175, 179.4588, 225.5892, 10.5113, 154.8128, 64.3302, 22.0522, 174.6738, 304.8531, 410.8642], [694.5747, 199.0758, 771.3594, 72.8672, 34.331, 957.941, 1461.8062, 61.1743, 140.0045, 183.1968, 110.4732, 65.1222, 127.6189, 180.224, 279.4676, 125.4637, 59.3174, 2.0051, 13.1544, 62.8592, 169.9712, 30.5896, 23.8921, 103.205, 50.6174, 62.2276, 76.2894, 88.1764, 71.2152, 301.273, 209.6038], [746.2005, 577.1304, 914.2308, 29.9012, 741.3588, 1569.1622, 94.1598, 143.4602, 393.1201, 254.7392, 172.3644, 216.4391, 145.552, 378.319, 60.3066, 186.5573, 49.4987, 43.7567, 0.0, 298.592, 138.2199, 155.3467, 135.0398, 243.4678, 25.4927, 84.4862, 63.9276, 205.7234, 149.9148, 259.1218, 477.2292]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

