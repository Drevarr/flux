created: 20230626012458000
creator: Drevarr
modified: 20230705163538380
modifier: drevarr
tags: ChartData
title: 202306260124_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Shaca Booey", "Johosh The Mighty", "Smol Daddy Tika", "Newtype Khan", "Arcanophage Farra", "Brad Bellick", "Elon The Archmagus", "Zayde Sunsabre", "Miphest\u00f6", "Artakama Nahid", "Tegan Parker", "Cyclotechnist Farra", "Venomina The Siren", "Xanvias Einzbern", "Smol Daddy Tika", "My Birthday Girl", "Regis Hawkesburne", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest", "Berserker", "Berserker", "Scrapper", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.46, 0, 0, 0, 0, 0, 0, 0, 0.023, 0, 0.355, 0.949, 0.476, 0.233], [0, 0, 0, 0, 0, 0, 0.496, 0.977, 1.067, 0, 1.563, 0], [0.659, 1.531, 0.714, 0.619], [0.635, 0, 0, 0, 0.448, 1.461, 0.925, 0.619], [0, 0.832, 0.113, 0, 0.311, 0.051, 1.3, 0, 0.685, 0, 0.889, 0.892, 0, 0, 0, 0], [0, 1.148, 0.577, 0.164, 1.38, 0.156, 0, 0], [0.595, 0.712, 0.191, 0, 1.066, 0.475, 0.988, 1.549, 0.108, 0.664], [1.049, 1.648, 0.594, 0.567, 0.395, 0.616, 0.57, 0.371], [0, 0, 0, 0.327, 0, 0.465, 1.134, 0, 0.128, 0, 0, 0, 0.534, 0.949, 0.364, 0], [0, 0.461, 0.27, 0.337, 0.397, 0.108, 0.595, 0, 0.265, 0, 0.593, 0.401, 1.162, 0.821, 0.571, 0.196], [0.236, 0.683, 0.426, 0.27, 0.308, 0.191, 0.595, 0, 0.382, 0.473, 0.522, 0.738, 0.509, 0.285, 0.372], [0, 0.704, 0.501, 0.296, 0.482, 0.093, 0.504, 0.706, 0.758, 0, 0.591, 0.605, 0.446, 0.427, 0.285, 0.372], [1.335, 0, 0, 1.344, 1.05, 2.114, 1.131, 1.028], [0.117, 0.461, 0.361, 0.382, 0.5, 0.25, 0.662, 0.706, 0.381, 0, 0.593, 0.669, 0.579, 0.142, 0.239, 0.371], [0.393, 0.713, 0.378, 0.164, 0.701, 0.154, 0.992, 0.968, 0.636, 0, 0.987, 0.949, 0.907, 0.769, 0], [0, 0.929, 0.453, 0.692, 1.109, 0.496, 0.992, 1.191], [0, 1.095, 0.585, 0.373, 1.098, 0.162, 1.117, 2.866, 1.183, 0.576, 1.186, 0.267, 1.081, 1.137, 0.8, 0.928], [1.222, 0, 0.113, 0.642, 0.342, 0.447, 1.559, 1.046, 0.794, 0.684, 0.988, 0, 1.024, 0.766, 0.713, 1.055], [0.354, 1.651, 0.83, 0.985, 1.142, 0.787, 0.678, 1.068, 1.228, 0.275, 0.817, 1.692, 0.766, 0.645, 0.614, 0.742]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

