created: 20230610101822000
creator: Drevarr
modified: 20230705163534525
modifier: drevarr
tags: ChartData
title: 202306101018_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Hit The Gas", "Grootyoda", "Vesnan", "Scarlet Merc\u00fcry", "F\u00e2ble", "Arriasa", "Grootyoda", "Sakis Ranger", "Gamora Titus", "Cat Noises", "F\u00e2ble", "Elonith Requiem", "Xanvias", "Charr Surethang", "Slang\u00efn", "Drevarr Moonwillow", "Gestern Yesteryear", "Aronorf Xideliesi", "Tomitigas", "Alarics Bane", "Ryvalia Fazebringer"];
const professions = ["Spellbreaker", "Spellbreaker", "Scourge", "Firebrand", "Herald", "Druid", "Berserker", "Druid", "Firebrand", "Virtuoso", "Vindicator", "Reaper", "Reaper", "Berserker", "Herald", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Reaper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2461, 0.2476, 0.0, 0.4889], [0.7097, 0.7125, 0.0625, 0.5068], [0.2192, 0.4398, 0.2667, 0.0179, 0.2111], [0.2321, 0.9556, 1.1964], [0.1875, 0.2055, 0.2706, 0.6545, 0.3619], [1.1923, 0.6333, 0.0, 0.7917, 0.9123, 0.037, 0.2586, 0.4255, 0.5161, 0.2875, 0.125, 0.1507], [0.1765, 0.2143, 0.0845, 0.3772, 0.3494, 0.2235, 0.1918, 0.4817, 0.2095, 0.0357], [1.3462, 0.1, 0.0, 0.2292, 0.4035, 0.2778, 0.3966, 0.4787, 0.9355, 0.5875, 0.1042, 0.3151, 0.3509, 0.3253], [0.8667, 0.0, 0.6042, 0.2982, 0.3889, 0.3966, 0.4043, 0.6452, 0.3125, 0.2292, 0.4795, 0.3294, 0.3393, 0.1127, 0.6053, 0.6265], [0.45, 0.0417, 0.2329, 0.1529, 0.2143, 0.0704, 0.4035, 0.759, 0.3059, 0.1233, 0.5445, 0.4381, 0.2321, 0.5], [0.9231, 0.3667, 0.0, 0.3125, 0.2105, 0.2407, 0.3448, 0.3723, 0.3548, 0.2625, 0.25, 0.0423, 0.5877, 0.4578, 0.4941, 0.2603, 0.0357, 1.2111, 0.625], [1.1538, 0.6, 0.0, 0.7917, 0.3333, 0.2407, 0.1724, 0.383, 0.5806, 0.3125, 0.375, 0.274, 0.3059, 0.3036, 0.0423, 0.4561, 0.4096, 0.0, 0.2055, 0.5654, 0.2667, 0.3111], [0.5185, 0.4828, 0.266, 0.3871, 0.5125, 0.3333, 0.7123, 0.2824, 0.1786, 0.0, 0.4035, 0.5181, 0.4353, 0.274, 0.6545, 0.2857, 0.0357, 0.3667, 0.4821], [0.9, 0.0, 0.2708, 0.1579, 0.4259, 0.431, 0.4149, 0.9677, 0.425, 0.2083, 0.5616, 0.3059, 0.3393, 0.4386, 0.4578, 0.3412, 0.2192, 0.4188, 0.1714, 0.0, 0.6111, 0.5357], [0.8462, 1.0, 0.0, 0.4792, 0.2807, 0.2037, 0.3793, 0.4149, 0.6774, 0.55, 0.2917, 0.4658, 0.3765, 0.1786, 0.0, 0.4386, 0.6506, 0.4824, 0.0822, 0.4869, 0.3048, 0.1071, 0.2667, 0.8929], [1.1538, 0.7667, 0.0, 0.375, 0.4912, 0.4259, 0.5, 0.2979, 0.9355, 0.275, 0.375, 0.3836, 0.2706, 0.2143, 0.0845, 0.5789, 0.494, 0.5882, 0.4247, 0.7644, 0.2476, 0.1429], [1.2308, 1.0, 0.0, 0.25, 0.7368, 0.4444, 0.6379, 0.2872, 1.0968, 0.3625, 0.3333, 0.4795, 0.4, 0.4107, 0.0845, 0.5351, 0.4337, 0.4588, 0.3425, 0.5759, 0.3238, 0.0179, 0.7444, 0.9643], [0.463, 0.6379, 0.4574, 1.129, 1.0125, 0.2917, 0.6164, 0.3059, 0.5, 0.0986, 0.3509, 0.8313, 0.4824, 0.3425, 0.6492, 0.4762, 0.0536, 0.7444, 0.9286], [1.0769, 1.4, 0.1364, 0.5417, 0.9474, 0.6111, 0.5517, 0.6277, 0.925, 0.2292, 0.5205, 0.3294, 0.3036, 0.2254, 0.6404, 0.8193, 0.5294, 0.2877, 0.5759, 0.4381], [1.1538, 0.7, 0.0, 0.3333, 0.4386, 0.6111, 0.7069, 0.4681, 1.1935, 0.6875, 0.4583, 0.3699, 0.3412, 0.2679, 0.0704, 0.6579, 0.6386, 0.7412, 0.5342, 0.9372, 0.2, 0.0714, 0.3111, 0.3571], [1.4231, 1.0667, 0.3958, 0.7719, 0.3889, 1.0517, 0.5745, 0.4839, 0.6875, 0.1875, 0.7945, 0.3647, 0.3393, 0.0423, 0.4561, 0.8795, 0.4941, 0.411, 0.6126, 0.4286, 0.0893, 1.2778, 0.8571]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

