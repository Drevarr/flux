created: 20230506220820000
creator: Drevarr
modified: 20230705163528761
modifier: drevarr
tags: ChartData
title: 202305062208_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Vanhelsing Wizard", "Hauzzy", "Ria Zerria", "Johosh The Mighty", "Im Killin It", "Kira Dragonblaze", "Skylar Shadowmoon", "Demon Dalham", "My Birthday Girl", "Audrinafa", "Permanent Dawn", "Guard Ferro", "Na Ting Wong", "Grilo Gringo", "Surethang Jr", "Freylk Nasferatu", "Lil Red Robin", "Lord Erin The Wise", "High Sorcer Baradun", "Kosa\u00efr", "Antherisa", "Johoshua", "Sygaldry Verdandi", "Kmpek", "Abigail Ryn", "Koralia Danai", "Jupi Jupi Jupi", "Artofliving", "Dargon Spiritwalker", "Mammary Mission", "Puny Demon", "Smol Gluvs", "Husky Guard", "Zaidy Sagemist", "Bella Sassy", "Cerys Fireblade", "Tootsie Pop Rocks", "Miphest\u00f6", "Blancooo Padreee", "Ark Darkness", "Xanvias Einzbern", "Newtype Khan", "Rina Of Theros", "Arriasa", "Smol Daddy Tika", "Aronorf Xideliesi", "Hyde En Sikh", "Artakama Nahid", "Be\u00eb", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Berserker", "Scourge", "Spellbreaker", "Scourge", "Dragonhunter", "Scrapper", "Dragonhunter", "Scrapper", "Firebrand", "Weaver", "Willbender", "Scrapper", "Dragonhunter", "Chronomancer", "Scourge", "Firebrand", "Weaver", "Tempest", "Weaver", "Reaper", "Scrapper", "Firebrand", "Vindicator", "Catalyst", "Firebrand", "Firebrand", "Herald", "Scourge", "Scourge", "Scourge", "Scourge", "Dragonhunter", "Vindicator", "Firebrand", "Berserker", "Scrapper", "Tempest", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Scourge", "Druid", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1952, 0.1014, 0.2716, 0.2035, 0.0476, 0.0833, 0.1486], [0.2207, 0.3402, 0.1487], [0.0516, 0.2002, 0.1014, 0.2222, 0.1593, 0.0317, 0.0417, 0.2095, 0.1951], [0.1739, 0.2974, 0.1641, 0.0437, 0.1975], [0.1128, 0.0375, 0.2757, 0.2083, 0.2659, 0.0842], [0.1672, 0.2974, 0.0949, 0.0312, 0.2222, 0.0807], [0.1706, 0.2632, 0.0974, 0.1313, 0.1975, 0.1042], [0.214, 0.335, 0.1462, 0.0063, 0.1646], [0.2107, 0.1026, 0.0769, 0.0312, 0.0741, 0.0859, 0.1468, 0.112], [0.2222, 0.125, 0.1865, 0.1288, 0.0, 0.1481, 0.1799, 0.0, 0.0833, 0.1216, 0.1463], [0.1338, 0.1419, 0.0563, 0.2634, 0.125, 0.246, 0.0129, 0.1091, 0.0, 0.0417, 0.1892, 0.1829], [0.2422, 0.1865, 0.2636], [0.0165, 0.0833, 0.2222, 0.2161, 0.0435, 0.1605, 0.3245], [0.237, 0.0952, 0.1715, 0.0, 0.284, 0.2124, 0.0159, 0.2838, 0.1463], [0.2508, 0.2359, 0.1564, 0.0625, 0.3663, 0.1797], [0.2408, 0.2462, 0.1718, 0.1313, 0.1605, 0.1615, 0.1944], [0.0, 0.2099, 0.1328, 0.1627, 0.2061, 0.058, 0.1852, 0.2035, 0.0, 0.0417, 0.2635, 0.1341], [0.2698, 0.2825, 0.1605, 0.2448, 0.0635, 0.5, 0.223, 0.1585], [0.2375, 0.106, 0.2333, 0.0375, 0.107, 0.2214, 0.2183, 0.111, 0.1449, 0.0494], [0.0872, 0.0563, 0.1687, 0.1198, 0.2619, 0.2131, 0.1728, 0.2212, 0.0159, 0.0417, 0.1554], [0.0375, 0.2963, 0.1458, 0.1944, 0.2309, 0.0725, 0.2469, 0.2566, 0.0, 0.0833, 0.2432, 0.1463], [0.2396, 0.1746, 0.3023, 0.087, 0.1975, 0.2537, 0.0159, 0.0, 0.2905, 0.2805], [0.2308, 0.1966, 0.0625, 0.0864, 0.0859, 0.2937, 0.1536, 0.0725, 0.1852, 0.2891, 0.0, 0.0417, 0.1486, 0.0976], [0.0872, 0.0437, 0.2675, 0.2214, 0.1944, 0.2636, 0.058, 0.1481, 0.2478, 0.0159, 0.0, 0.1824, 0.1341], [0.0786, 0.1538, 0.025, 0.2099, 0.1016, 0.25, 0.1962, 0.0725, 0.2099, 0.2773, 0.0635, 0.0833, 0.3176, 0.2683], [0.2575, 0.2906, 0.1103, 0.0875, 0.2346, 0.0807, 0.1548, 0.1655, 0.0, 0.1728, 0.1947, 0.0159, 0.125, 0.1689, 0.0732], [0.1672, 0.3026, 0.1513, 0.025, 0.2757, 0.0781, 0.1905, 0.1596, 0.0435, 0.0864, 0.1976, 0.0, 0.125, 0.2973, 0.061], [0.2274, 0.1829, 0.1462, 0.0875, 0.1728, 0.0938, 0.3016, 0.1873, 0.1304, 0.321, 0.1947, 0.0317, 0.0, 0.2027, 0.0976], [0.1639, 0.2393, 0.1103, 0.0187, 0.2798, 0.1146, 0.1706, 0.2071, 0.1014, 0.3086, 0.2242, 0.1429, 0.0417, 0.1216, 0.1951], [0.1706, 0.2803, 0.1231, 0.05, 0.284, 0.1016, 0.2341, 0.2319, 0.0, 0.1852, 0.1357, 0.0, 0.0, 0.2027, 0.0732], [0.1371, 0.4, 0.1744, 0.1313, 0.2387, 0.0938, 0.1984, 0.2141, 0.0435, 0.0741, 0.1327], [0.194, 0.1966, 0.1333, 0.05, 0.2263, 0.1172, 0.1627, 0.2517, 0.087, 0.2222, 0.2094, 0.0159, 0.3176, 0.2195], [0.1271, 0.2974, 0.141, 0.0312, 0.1193, 0.099, 0.2976, 0.2448, 0.087, 0.2593, 0.2301, 0.0, 0.0417, 0.1622, 0.1341], [0.2776, 0.2991, 0.1436, 0.075, 0.2428, 0.1823, 0.1627, 0.2279, 0.087, 0.1481, 0.1622, 0.0317, 0.0, 0.1554], [0.2508, 0.3487, 0.1128, 0.0375, 0.2263, 0.1198, 0.2024, 0.2071, 0.0145, 0.2469, 0.2035, 0.0317, 0.0417, 0.2162, 0.2073], [0.2375, 0.4632, 0.1026, 0.0563, 0.2305, 0.1042, 0.2381, 0.1665, 0.0725, 0.1852, 0.2419, 0.0159, 0.0417, 0.1959, 0.1585], [0.2308, 0.1231, 0.1487, 0.2313, 0.4115, 0.1198, 0.2183, 0.2716, 0.0, 0.1605, 0.2832, 0.0952, 0.125, 0.223, 0.0366], [0.2609, 0.4188, 0.2077, 0.0688, 0.0885, 0.25, 0.2686, 0.0145, 0.1111, 0.2212], [0.2408, 0.2752, 0.0795, 0.025, 0.2469, 0.1302, 0.2421, 0.2725, 0.1594, 0.1481, 0.2743, 0.0, 0.0, 0.3986], [0.2074, 0.2872, 0.1462, 0.0938, 0.4033, 0.1146, 0.2262, 0.2408, 0.0725, 0.1852, 0.2478, 0.0, 0.0417, 0.1216, 0.2927], [0.1739, 0.2855, 0.1333, 0.025, 0.2263, 0.3411, 0.1508, 0.2696, 0.0725, 0.1111, 0.2212, 0.0317, 0.0, 0.1554, 0.122], [0.3177, 0.2205, 0.1385, 0.0063, 0.2634, 0.2917, 0.1706, 0.2616, 0.1014, 0.284, 0.1947, 0.0159, 0.0, 0.2297, 0.0854], [0.2542, 0.3915, 0.1923, 0.0375, 0.2222, 0.1094, 0.246, 0.227, 0.0435, 0.3333, 0.1888, 0.0159, 0.2083, 0.1554, 0.0732], [0.2742, 0.3504, 0.1615, 0.0437, 0.3909, 0.0885, 0.2183, 0.2329, 0.0725, 0.1235, 0.2065, 0.0635, 0.0, 0.2162, 0.1463], [0.2642, 0.2906, 0.1205, 0.05, 0.2181, 0.1589, 0.2381, 0.3181, 0.058, 0.4074, 0.236, 0.0159, 0.0, 0.1351, 0.0976], [0.1204, 0.3761, 0.1949, 0.0437, 0.4444, 0.1745, 0.131, 0.2389, 0.2222, 0.233, 0.0159, 0.2917, 0.2568, 0.2561], [0.2441, 0.306, 0.1615, 0.0187, 0.3004, 0.1536, 0.3016, 0.2537, 0.1739, 0.284, 0.2832, 0.0635, 0.0417, 0.2432, 0.2805], [0.2676, 0.4735, 0.1487, 0.0875, 0.1975, 0.1276, 0.2024, 0.2795, 0.029, 0.1235, 0.2448, 0.0635, 0.0417, 0.1689, 0.0854], [0.311, 0.4308, 0.1436, 0.0187, 0.3292, 0.1562, 0.2381, 0.2854, 0.0, 0.284, 0.2507, 0.2222, 0.0833, 0.2703, 0.2073], [0.4281, 0.4376, 0.2282, 0.0375, 0.3045, 0.1458, 0.2262, 0.2785, 0.1014, 0.3333, 0.2714, 0.0317, 0.0417, 0.2973, 0.2927]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

