created: 20230322220917000
creator: Drevarr
modified: 20230705163522862
modifier: drevarr
tags: ChartData
title: 202303222209_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Ark Darkness", "Eibh\u00ebar", "Newtype Khan", "Sizzln Sisigbringer", "Macette", "Venomina The Siren", "Ryvalia Fazebringer", "Primal Clone", "Zadie Miststep", "Black Raspberry Pie", "Amiti\u00e9l", "Gabe Malhorn", "Tribal S", "Elonith Primal", "\u00c1rkantor", "Blanco Padre Guard", "Charred Fishbringer", "Abigail Ryn", "Solus Sanctus", "Drevarr Moonwillow", "Bella Sassy", "Zaylen Harker", "Kiloak", "Viral Marketing", "Koralia Danai", "Johosh The Great"];
const professions = ["Chronomancer", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Druid", "Tempest", "Vindicator", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[369.054, 49.3635, 23.5008, 19.26, 37.1584, 18.3733, 23.7388, 62.082, 44.5421, 16.5205, 29.4681, 21.1766, 0.0, 16.3621], [32.1984, 106.6032, 35.9424, 61.8912, 75.8755, 23.6151, 73.1597, 41.9244, 142.912, 8.6002, 33.7824, 70.056, 0.0, 48.8023, 33.2083, 77.9178, 0.0], [165.4502, 24.5074, 10.327, 0.0, 44.1936, 32.256, 26.0064, 19.1923, 29.2669, 0.0, 29.3568, 17.4048, 332.108, 5.6635, 44.9942, 35.1, 19.8827, 27.531, 25.944, 31.2512, 26.6746, 17.9493, 35.7195, 31.9291, 0.0, 5.1141], [230.0947, 45.4595, 28.497, 25.093, 46.0944, 38.3386, 25.344, 25.2605, 36.4156, 52.0397, 41.9832, 380.016, 55.6563, 25.1654, 28.764, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [131.0227, 37.806, 19.182, 0.0, 51.6384, 24.6528, 9.1008, 18.0634, 27.5866, 12.9168, 42.24, 22.8438, 384.076, 16.5011, 12.3869, 53.1, 77.8624, 51.5554, 33.2732, 116.7366], [235.5437, 30.2882, 1.196, 0.0, 40.0224, 46.1261, 38.5344, 22.1558, 22.3015, 28.8077, 14.847, 505.47, 5.7334, 6.3648, 33.192, 31.5273, 15.91, 37.0675, 28.028, 44.0986, 6.6618, 46.9633, 6.7306, 11.8891], [57.2141, 13.95, 12.535, 0.0, 67.056, 32.1178, 58.176, 18.1104, 52.3933, 0.0, 67.0771, 44.688, 344.288, 16.9206, 47.8829, 35.244, 14.3906, 52.135, 39.6943, 104.3342, 42.4512, 43.3462, 62.2275, 23.256, 1.5756, 31.85], [273.4387, 17.0982, 22.402, 0.0, 31.8384, 14.6534, 42.6528, 34.2922, 31.7109, 0.0, 26.0621, 34.104, 345.506, 23.8427, 56.4019, 30.456, 31.0754, 26.1689, 28.2141, 41.2712, 90.7949, 24.7897, 36.2718, 43.0099, 5.5366], [233.5622, 29.474, 19.527, 0.0, 45.8304, 65.6179, 29.7504, 53.1552, 30.0307, 50.1389, 19.6392, 371.896, 25.9403, 28.0051, 40.68, 23.9496, 19.6484, 14.7557, 68.4584, 49.0406, 14.6273, 35.9846, 26.9222, 10.7883, 5.3909], [334.1203, 13.2986, 32.913, 79.304, 41.7648, 27.2333, 14.112, 14.2531, 19.4298, 9.3974, 37.8893, 14.2884, 409.248, 64.5362, 15.4714, 36.252, 29.6155, 7.6217, 18.9715, 50.6606, 9.8842, 7.8941, 21.8028, 0.0, 19.2692, 3.8319], [226.1318, 59.518, 39.997, 0.0, 23.8656, 48.2918, 26.208, 28.6003, 28.5337, 17.3971, 54.6586, 38.808, 515.214, 51.0416, 43.3786, 28.836, 29.9284, 33.0372, 20.6579, 47.5075, 36.8755, 23.1644, 28.4077, 53.0784, 5.3726, 4.5021], [764.092, 52.2302, 44.4557, 42.66, 139.2833, 128.7002, 17.6744, 140.3502, 203.7024, 75.6907, 98.8748, 60.4656, 0.0, 0.0], [970.34, 52.5798, 90.9677, 108.0, 34.1343, 66.9728, 86.9773, 90.3903, 204.4627, 0.0, 36.7799, 106.3483, 0.0, 15.9833], [223.4074, 50.5347, 31.303, 0.0, 108.9792, 69.5347, 56.9952, 55.7894, 50.7741, 0.0, 93.1814, 50.0094, 627.27, 22.724, 31.7261, 38.736, 58.3968, 54.2795, 59.1199, 124.5845, 57.1507, 38.0954, 47.2284, 48.0989, 34.7586, 27.1876], [471.0874, 34.7935, 12.075, 35.351, 106.0752, 48.7987, 59.3856, 39.7958, 11.334, 25.5091, 21.4157, 26.5776, 629.706, 22.2346, 15.4714, 48.996, 64.6536, 72.7398, 33.0462, 126.9668, 173.353, 25.8077, 110.7151, 54.5285, 0.0, 29.5917], [225.3888, 59.6809, 62.307, 0.0, 156.1824, 55.6186, 68.0832, 65.2445, 77.261, 93.5194, 42.3066, 590.324, 84.4634, 110.111, 39.132, 66.2526, 68.6246, 78.6752, 127.5274, 79.5168, 52.8835, 35.8079, 61.7789, 20.7932, 15.9833], [347.495, 58.9752, 101.637, 0.0, 99.3168, 101.3299, 80.6112, 76.1578, 117.1593, 28.2547, 131.6621, 131.0946, 797.79, 69.1509, 99.6336, 42.408, 102.8548, 25.3575, 50.1692, 68.8087, 107.9021, 21.0927, 0.7952, 39.2616, 0.0, 36.8184], [606.816, 53.5744, 65.159, 32.683, 153.5952, 114.0941, 43.632, 56.5421, 85.8149, 107.5853, 44.7468, 920.808, 112.781, 9.8899, 76.968, 80.956, 64.7123, 49.099, 140.4903, 151.5571, 55.9197, 57.0364, 65.8008, 9.1955, 16.8575], [723.2256, 26.9772, 21.643, 72.841, 75.1344, 156.5798, 62.0928, 145.4477, 76.4667, 0.0, 67.2883, 18.963, 1489.208, 238.567, 7.7357, 73.332, 0.0, 13.7503, 158.0078, 133.5629, 62.6529, 64.7237, 47.3328, 0.0, 42.1219], [617.7139, 110.6769, 89.976, 38.64, 234.0624, 105.1546, 80.0352, 95.5382, 112.7906, 0.0, 149.8253, 142.149, 905.38, 128.3731, 141.1517, 67.788, 95.4857, 66.5381, 95.8955, 190.8006, 142.4333, 76.0836, 21.7145, 76.909, 0.0, 61.1794], [739.5725, 75.802, 30.59, 38.663, 159.2448, 138.1018, 60.8832, 92.3395, 119.6338, 19.319, 125.9174, 46.011, 1205.414, 163.6827, 120.1968, 80.424, 44.9447, 67.0018, 62.0386, 165.0149, 173.4163, 49.8651, 8.107, 51.0538, 9.2127, 20.194], [657.8381, 99.1424, 126.615, 22.816, 177.8304, 151.465, 85.0752, 150.6221, 95.2855, 23.712, 134.5766, 68.943, 1423.436, 210.7389, 122.6938, 49.212, 14.5644, 36.3119, 72.4486, 146.2361, 132.8026, 31.7194, 44.4672, 22.7088, 7.9729, 13.4044], [659.5718, 102.4806, 122.268, 0.0, 153.4368, 134.6458, 89.3088, 109.9325, 85.204, 127.6915, 132.3294, 1411.662, 129.8414, 103.1587, 85.536, 81.2689, 84.2159, 103.776, 234.4542, 94.7866, 45.6323, 55.8877, 36.4982, 18.6751, 55.9197], [739.3248, 169.7607, 78.453, 0.0, 157.1328, 169.7126, 127.4112, 111.3437, 129.6542, 26.6198, 137.9981, 162.8466, 1169.28, 79.499, 156.9168, 99.684, 70.1457, 136.264, 144.9945, 223.0328, 136.224, 47.7219, 40.0934, 31.9838, 5.717, 61.4708], [643.7203, 175.7858, 117.162, 35.926, 222.024, 205.2864, 117.3312, 180.0691, 149.4812, 232.0666, 127.8018, 1202.978, 82.5755, 129.695, 121.86, 124.128, 50.5411, 131.7307, 185.6855, 111.4502, 10.7874, 36.1171, 55.5955, 0.0, 60.9026], [748.489, 91.299, 57.477, 0.0, 244.3584, 165.1968, 115.4016, 127.1021, 135.5503, 215.0861, 77.8218, 1287.426, 148.5101, 121.5677, 88.992, 154.3692, 70.7981, 60.9035, 184.8447, 241.2115, 11.0911, 72.1018, 61.0675, 9.4968, 24.361], [852.7622, 151.007, 142.876, 0.0, 190.3968, 194.9645, 146.1024, 160.7357, 170.9578, 208.3699, 161.4648, 1641.052, 130.7504, 190.895, 143.928, 151.5884, 110.153, 161.6311, 262.3421, 197.2397, 80.5843, 126.7303, 114.4469, 24.6074, 46.1723]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

