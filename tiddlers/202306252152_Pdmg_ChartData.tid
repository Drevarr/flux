created: 20230625215204000
creator: Drevarr
modified: 20230705163536679
modifier: drevarr
tags: ChartData
title: 202306252152_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Blancooo Padreee", "Arcanophage Farra", "Grasszanine", "Hulk N Wall", "Rozaalyna", "Swithblight", "Tootsy Pop Star", "Irish Necroman", "Mister Jekyll", "Smol Gluvs", "Demon Maddx", "Zayde Sunsabre", "Rina Of Theros", "Shaca Booey", "Lord Erin The Wise", "My Birthday Girl", "No Reserv\u00e9", "Sister Elon\u00edth", "Xyntharos", "Mistwalker Cael", "Johosh The Mighty", "Xanvias Tsolice"];
const professions = ["Scourge", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Dragonhunter", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Berserker", "Scourge", "Berserker", "Weaver", "Scrapper", "Vindicator", "Dragonhunter", "Vindicator", "Vindicator", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[70.7907, 326.8083, 811.3478, 607.3, 65.75, 325.6984, 459.455, 575.8065, 348.6421, 377.7215, 233.0278, 0.0, 94.4296, 64.0584, 338.4167], [0.0, 324.9083, 351.5, 290.2899, 428.7253, 305.6522, 380.4444, 558.92, 0.0, 163.8211, 114.2911, 0.0, 0.0, 232.8944, 74.2273, 57.9444], [14.6047, 271.65, 364.5, 577.3478, 604.989, 202.087, 469.825, 0.0, 735.0952, 401.245, 231.1452, 307.8211, 157.3291, 0.0, 16.8692, 267.6268, 89.2143], [0.0, 454.325, 415.1, 534.6087, 613.2747, 341.5652, 410.75, 0.0, 679.8571, 381.14, 266.4839, 218.0421, 183.8101, 284.5556, 0.0, 360.1901, 33.2987, 72.6528], [376.5698, 692.2917, 688.8714, 1198.1884, 1340.5495, 223.4783, 733.875, 628.7917, 183.5238], [242.1571, 895.0145, 495.044, 1881.35, 50.875, 1772.8095, 247.055, 615.2581, 559.0, 215.3038], [0.0, 1139.0286, 1362.3623, 984.5604, 1469.4348, 661.125, 0.0, 1690.9683, 127.945, 453.0806], [141.2093, 632.0, 225.7143, 761.7971, 775.2198, 1118.175, 0.0, 705.6825, 105.475, 94.3871, 1054.8316, 185.1646, 224.5833, 0.0, 358.2606, 139.4091, 231.9167], [225.2326, 511.9083, 699.7286, 1191.6667, 964.3187, 1791.8696, 1182.975, 62.625, 1162.5079, 755.65, 25.2903, 653.7263, 258.2532, 402.6667, 91.2336, 607.2042, 203.7792, 207.3472], [3.1395, 603.1917, 1027.6, 983.6232, 1973.1099, 59.7778, 1092.22, 464.7581, 360.2526, 68.3165, 1101.0278, 66.6262, 539.0845, 373.4935, 165.9444], [0.6744, 606.7083, 949.3286, 1316.6449, 1106.7582, 906.1739, 1478.7, 0.0, 1671.5397, 562.845, 380.7419, 1008.8105, 339.0759, 289.8889, 0.0, 450.493, 44.961, 303.25], [35.1512, 1022.3333, 1143.2571, 1127.9855, 880.5604, 619.4348, 1291.1, 0.0, 1482.2063, 241.565, 764.7097, 1228.5158, 694.9114, 476.3056, 17.9533, 627.5493, 68.1494, 478.5556], [38.1744, 627.875, 1534.2429, 1895.9638, 1223.1648, 1067.5652, 1377.75, 335.7917, 1358.0317, 272.375, 392.4839, 312.8526, 1108.8228, 343.8889, 243.2804, 344.4648, 325.3117, 78.2917], [194.1628, 586.0333, 1297.0143, 1474.5072, 1075.967, 2131.1739, 524.25, 508.25, 1250.4603, 758.735, 660.4032, 809.9368, 958.8101, 713.5556, 191.6822, 366.4014, 185.9221, 361.5417], [1562.044, 868.1739, 3198.375, 0.0, 1698.5714, 2443.225, 1581.129, 503.6421, 976.8354, 365.0278, 83.3271, 564.2254, 195.8182, 280.0833], [119.4535, 961.9667, 1590.4857, 2419.8551, 1393.9451, 2335.6, 167.5, 1442.4444, 1781.37, 0.0, 836.5158, 282.038, 737.3611], [171.0465, 716.9417, 1201.8571, 1647.7681, 2556.0, 2593.4348, 1428.975, 0.0, 1594.3333, 1114.34, 290.0161, 561.9789, 547.1266, 503.8333, 382.3738, 897.0211, 473.3506, 398.3472], [104.8721, 1072.6333, 1172.3, 1703.9493, 1811.9341, 1611.8261, 1843.525, 756.25, 2247.127, 1760.5, 141.8548, 883.7579, 709.3291, 124.8056, 46.1776, 673.8169, 136.2597, 379.9861], [251.7093, 1157.9417, 1259.9286, 1888.0507, 2170.6703, 1889.025, 337.4167, 2104.8254, 1813.135, 2442.6129, 710.1053, 846.1139, 167.6111, 124.8318, 1225.2817, 524.5909, 360.7917], [184.3023, 892.4667, 1514.5429, 2179.7609, 3621.5934, 1250.4348, 1172.425, 190.375, 3096.1905, 2396.415, 1313.7742, 955.5895, 831.1013, 1034.8611, 62.6355, 885.5211, 455.539, 553.7083], [114.5465, 1326.05, 2101.5714, 2770.2029, 2092.2967, 1726.6087, 1514.875, 156.5833, 2700.6032, 2845.53, 2143.6935, 1129.4105, 1046.8354, 1346.4444, 215.5327, 1843.0986, 282.3571, 1.625], [55.0233, 900.1083, 3030.8571, 2950.7609, 3142.0549, 4925.2174, 2699.075, 0.0, 2182.6667, 2659.465, 4433.5806, 1424.7368, 1504.481, 447.8333, 168.9533, 1304.9718, 93.9351, 747.0833], [200.2093, 1844.5667, 3040.6714, 3700.587, 4335.7912, 376.9565, 3732.225, 174.2917, 3284.7302, 3966.14, 3594.6774, 1187.1263, 1720.5949, 589.7222, 203.1402, 2647.0282, 873.2597, 187.125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

