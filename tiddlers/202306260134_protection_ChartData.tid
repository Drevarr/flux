created: 20230626013408000
creator: Drevarr
modified: 20230705163538911
modifier: drevarr
tags: ChartData
title: 202306260134_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Zhavashian", "Newtype Khan", "Sub Train", "Elon The Archmagus", "Primal Clone", "Cat Wigglebooty", "Ryvalia Fazebringer", "Belvyn Brightblade", "Blanco Padre Guard", "Crusader Siolith", "Traidoruns Maximus", "Drevarr Moonwillow", "Fribble Bibble", "Aronorf Xideliesi", "Miphest\u00f6", "Gestern Yesteryear", "Bella Sassy", "Sygaldry Verdandi", "Tika Fiery", "Solus Sanctus", "Koralia Danai"];
const professions = ["Scrapper", "Tempest", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 2.7216, 5.4468, 0.0, 151.5968, 34.4474, 0.0, 49.3051, 20.8795, 0.7396, 0.0, 31.0534, 33.5533, 25.3125, 46.2672, 20.4984, 32.2157, 0.0, 8.4788, 13.0284, 0.0, 0.0, 0.0, 0.0, 5.7886, 0.0, 0.0, 0.0, 6.9971, 0.0, 0.0, 0.0], [74.6755, 94.3798, 0.0, 0.0, 148.0105, 134.5882, 76.0316, 0.0, 0.0, 0.0, 0.0], [27.0259, 60.696, 20.8901, 14.5534, 257.9349, 49.8252, 15.4534, 37.2294, 5.1247, 20.1326, 16.3548, 0.0, 38.258, 32.31, 50.9328, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0075, 21.3486, 0.0, 31.7043, 12.6776, 21.374, 30.5936, 31.7125], [136.7474, 89.9345, 111.4652, 51.715, 91.0694, 39.4629, 52.7758, 22.638, 96.1996, 44.8104, 15.4955, 41.1949, 36.8626], [2.471, 44.6256, 42.9656, 16.1179, 217.4824, 30.1701, 19.7274, 17.5169, 23.8224, 16.0376, 26.1184, 24.0451, 19.3358, 33.12, 35.856, 29.1096, 34.1333, 18.968, 8.8079, 5.2114, 12.4531, 13.6784, 18.1157, 42.9373, 8.2522, 31.0583, 30.0909, 15.7878, 19.3038, 11.3123, 26.5211, 15.8386, 0.0], [17.3837, 73.1808, 29.4768, 25.0625, 219.8855, 39.4885, 30.496, 36.5135, 3.5518, 27.8177, 6.2216, 26.5619, 28.7452, 23.625, 34.128, 13.8762, 25.1206, 30.4862, 14.931, 35.2613, 22.0862, 33.4189, 33.0786, 20.4826, 5.1764, 5.2003, 0.0, 30.4259, 29.9386, 15.7664, 6.6822, 45.2601], [27.6826, 125.4528, 39.9859, 13.225, 376.8893, 38.3173, 0.0, 58.7079, 36.9134, 16.0736, 9.856, 19.2826, 38.3614, 34.245, 50.8464, 0.0, 74.1152, 1.0741, 0.0, 26.2429, 0.0, 17.4849, 9.9678, 16.6906, 18.9773, 26.9951, 0.0, 33.3023, 0.0, 46.3781, 1.192, 2.5116], [37.4112, 43.7184, 14.1617, 22.6418, 293.3809, 22.4303, 41.5233, 40.8092, 5.2516, 16.9215, 26.0568, 56.0666, 77.2398, 42.3675, 49.1616, 41.3478, 13.0397, 20.646, 23.2236, 28.8655, 36.0993, 57.2009, 44.2345, 19.1386, 11.3546, 0.0, 0.0, 59.5095, 22.5271, 41.1226, 31.6411, 16.9725], [27.8726, 110.1168, 44.1191, 14.1106, 611.3938, 32.6143, 36.0839, 13.2178, 30.2711, 87.1332, 21.8381, 35.673, 38.97, 41.5152, 72.4464, 113.3302, 45.2047], [159.0106, 72.4464, 135.4972, 28.2802, 900.5692, 162.8676, 25.8418, 106.9629, 28.2114], [58.2087, 116.1271, 17.3785, 69.8467, 132.345, 67.5648, 58.734, 106.3309, 22.1112, 47.3986, 81.3175, 172.5488, 84.5398, 139.3625, 80.0486, 29.7781, 71.8543, 86.4198, 43.2745, 45.1048, 22.6834, 68.3468], [80.6544, 82.471, 15.9703, 422.1481, 49.9271, 18.6322, 104.8151, 28.4398, 47.355, 73.8892, 64.2365, 174.7977, 67.3875, 95.04, 86.7204, 139.026, 0.0, 19.3806, 80.197, 95.2258, 94.9959, 99.3881, 95.4307, 83.9462, 40.2422, 0.0, 84.8218, 26.7692], [55.0195, 167.0112, 106.501, 83.9254, 563.3314, 76.5582, 69.7226, 104.0037, 16.6681, 41.8167, 17.8948, 79.5696, 80.0833, 25.29, 117.504, 23.2128, 61.4591, 8.9014, 30.2197, 11.0638, 83.6525, 96.3345, 46.6127, 50.0287, 48.9754, 46.1421, 35.4844, 13.6612, 77.2793, 13.3846, 27.2525, 2.9257, 27.7801], [23.1034, 162.3456, 103.2008, 80.2944, 753.1779, 112.8642, 34.983, 98.5147, 22.6554, 25.0034, 53.9616, 63.6557, 36.3968, 26.0775, 63.936, 60.3018, 124.5481, 80.8691, 48.2051, 50.0155, 93.6155, 83.9608, 47.6072, 72.576], [54.4666, 59.1408, 40.5626, 30.6122, 417.7424, 65.4322, 0.0, 85.6754, 2.1311, 52.9474, 42.5348, 140.9795, 111.4135, 73.7325, 104.8032, 52.3926, 108.1526, 0.0, 20.9956, 103.4414, 121.0457, 107.4194, 106.957, 81.075, 98.3539, 27.9413, 13.5884, 25.4996, 59.1899, 51.905, 60.7358, 45.2584, 20.5497], [105.3562, 151.5024, 46.3939, 27.6307, 657.2533, 45.3443, 0.0, 111.8314, 38.1057, 13.548, 6.8684, 118.9866, 95.3865, 42.2775, 106.488, 38.376, 42.8584, 80.6193, 47.2331, 90.6574, 51.1163, 153.9006, 127.8607, 39.5674, 177.8894, 16.5669, 12.9654, 108.7918, 14.4086], [55.8359, 208.5324, 109.3193, 44.2521, 95.4184, 140.7472, 82.5649, 115.9425, 124.4592, 91.7514, 187.3495, 40.0432, 157.8091, 140.6052, 186.6455, 90.2889, 122.6719, 160.4736, 119.2794, 121.1042, 57.6534, 75.5534, 126.9954, 97.5782, 72.3122, 64.5159], [128.736, 179.9712, 191.0225, 84.6043, 952.2363, 102.9348, 104.5688, 79.5659, 50.2072, 34.6368, 50.2348, 123.7491, 103.0898, 41.3325, 120.0096, 70.6446, 217.6476, 65.0515, 29.469, 28.8994, 109.7619, 66.7137, 49.1639, 62.8992, 86.607, 51.1497, 0.0, 130.5246, 97.0812, 48.3015, 59.9592, 45.3362], [854.9099, 174.1973, 59.2434, 71.3944, 134.4358, 116.9454, 96.3675, 185.4576, 94.887, 156.9556, 0.0, 79.0542, 144.1603, 57.0881, 218.3944, 150.1368, 212.9138, 179.5315, 132.4151, 52.0352, 95.049, 94.2043, 110.8794, 71.2467, 72.2284], [112.9248, 175.7376, 191.2788, 45.697, 995.6927, 128.8021, 20.3358, 180.0853, 46.7315, 22.2253, 105.0896, 157.3581, 116.5318, 111.825, 125.1936, 55.3644, 87.8261, 0.5546, 78.638, 135.9503, 120.2674, 116.5802, 121.8879, 107.2784, 121.2557, 50.094, 107.7573, 29.6254, 69.9924, 72.9937, 101.2353, 22.6653, 90.6216], [89.9251, 90.8928, 116.4334, 15.9113, 993.2896, 87.8879, 24.8684, 158.9886, 67.3573, 64.042, 57.7808, 168.9741, 97.3511, 102.1275, 240.1056, 119.574, 172.0087, 34.7985, 65.4522, 200.9419, 203.3775, 181.3222, 161.977, 88.6234, 72.2467, 22.9103, 28.8022, 88.657, 97.6419, 86.5525, 70.2173, 91.7379], [82.9958, 220.8384, 177.9822, 71.645, 1075.997, 87.6588, 56.855, 186.3379, 93.2855, 65.4491, 73.4272, 113.527, 116.5318, 124.7175, 124.5024, 123.9732, 179.775, 101.0156, 116.3664, 188.5226, 252.2767, 159.6496, 183.2511, 115.2346, 82.2655, 0.0, 23.2554, 83.6074, 111.8311, 104.3236, 81.1616, 95.239]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

