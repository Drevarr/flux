created: 20230213220222000
creator: Drevarr
modified: 20230705163519250
modifier: drevarr
tags: ChartData
title: 202302132202_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Oo Dads Mad", "Black Raspberry Pie", "Raziel Umbra", "Etchery Howls", "Arka\u00f1", "Mac Chiato", "Ryvalia Fazebringer", "Mike The Archmagus", "Blanco Padre Guard", "Uneeta Healah", "Joh Oshi", "Zady Stardust", "Arriasa", "Jupi Jupi Jupi", "Zaylen Harker", "Gavann", "\u00c9\u00efbhear", "Ravioli Fetabringer", "Sygaldry Verdandi", "Drevarr Moonwillow", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Druid", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Scrapper", "Druid", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[61.446, 0.0, 29.4784, 351.556, 19.3734, 58.8744], [112.32, 203.1206, 23.8669, 10.2072, 43.2193, 53.0915, 0.0, 41.356, 148.57], [25.3901, 10.3664, 0.0, 17.9668, 61.2053, 101.7362, 0.0, 52.8808, 501.916, 20.6706, 21.0456], [85.68, 187.2518, 0.0, 0.0, 14.7216, 44.3302, 81.928, 0.0, 33.2808, 296.424, 14.7204, 62.16], [160.704, 321.0787, 62.0379, 0.0, 56.8194, 96.0135, 140.14], [101.664, 239.8834, 19.1659, 0.0, 19.1453, 41.6852, 77.7507, 0.0, 30.772, 361.222, 0.0, 36.9408], [32.256, 164.5066, 41.0238, 0.0, 0.0, 65.1728, 259.5285, 10.4272, 274.586, 18.612, 113.1312], [65.808, 291.9859, 29.8136, 0.0, 19.8886, 57.8726, 92.169, 0.0, 28.1064, 381.27, 5.5554, 62.5152], [157.392, 300.7138, 34.6352, 17.2779, 38.9344, 101.6015, 0.0, 42.6496, 368.382, 31.7814, 62.7816], [3.7027, 46.9302, 17.2416, 181.1825, 124.2395, 0.0, 95.4912, 918.986, 23.5188, 47.6856], [14.2819, 66.8595, 45.0712, 49.4615, 254.6775, 15.4128, 81.4968, 835.214, 49.0398, 180.0864], [110.448, 380.5867, 39.9389, 0.0, 42.6962, 122.2519, 137.984, 36.652, 644.4, 59.6994, 60.4728], [134.4825, 0.0, 103.9212, 154.5209, 310.464, 96.7456, 838.078, 21.855, 69.0864], [232.416, 544.5643, 54.4439, 0.0, 12.129, 75.0122, 158.0618, 89.6896, 823.042, 0.0, 163.1256], [119.5355, 51.7974, 154.8912, 486.5823, 0.0, 100.9008, 1400.138], [316.08, 457.2859, 51.8724, 60.5905, 162.1385, 121.5445, 136.5728, 1048.94, 79.9188, 96.2592], [115.632, 1058.7134, 81.5654, 19.0002, 230.0092, 258.3157, 49.0308, 35.3584, 834.498, 217.2936], [312.624, 857.9731, 65.6541, 70.4169, 155.8434, 274.2163, 17.9244, 41.9832, 1087.962, 56.3718, 186.3912], [275.76, 843.1622, 124.7991, 38.028, 97.7388, 262.384, 353.4493, 0.0, 87.22, 1170.302, 30.5406, 112.6872], [242.352, 1039.1419, 106.3163, 0.0, 90.4506, 21.9006, 264.2448, 0.0, 147.392, 1222.57, 96.303, 165.4344], [445.68, 813.5405, 110.1736, 0.864, 52.1963, 113.1531, 332.1587, 173.0288, 1254.432, 70.8384, 264.4464], [458.928, 880.9829, 101.575, 120.6008, 231.3846, 229.614, 83.2216, 1337.488, 101.4072, 95.1048], [540.72, 958.74, 127.451, 42.9681, 167.2698, 427.0228, 22.1052, 220.3824, 1546.202, 131.0454, 158.508]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

