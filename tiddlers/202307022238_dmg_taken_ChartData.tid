created: 20230702223827000
creator: Drevarr
modified: 20230705163540992
modifier: drevarr
tags: ChartData
title: 202307022238_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Kittendoo", "Nuclear Richard", "Liyo Morgaine", "Elonith Requiem", "Kreita Risingclaw", "Ggclaudx", "Newtype Khan", "Cormac Shadowcharm", "Beans Lasus", "Spirita Demon", "Perpetual Hope", "Anecalagon", "Holten Mcgroins", "Lookatyou Lookatme", "Kardknight", "Gamora Titus", "Lyrapotter", "Zenady", "Johny Barrbairn", "Mirallas Decountae", "Brutal Araden", "General Kitachi", "Vopiscus Zergherdus", "Kylo Milan", "Gustav Glaivesson", "Lil Mes Robin", "Sigrid Oluvkin", "Gnawll", "Kayrin Willowroot", "Sy Logos", "Ballymoon", "Sir Ludovik", "Valkren Sothur", "Rihni Toyo", "Brace Stonebrow", "Bodycount X", "Lady Boombottom", "Argent Quicksilver", "Skurrtskurrt", "Yngvar The Burdened", "St\u00e1rless", "Crusader Phoenix", "Aaimiliya", "Huggable Banana", "Lady Dracaris", "Valkren Sothur", "Icee Vaporblade", "Elisha Raskae", "Tuandha Lan"];
const professions = ["Scrapper", "Firebrand", "Scourge", "Vindicator", "Scourge", "Harbinger", "Holosmith", "Spellbreaker", "Mechanist", "Dragonhunter", "Druid", "Tempest", "Berserker", "Daredevil", "Catalyst", "Renegade", "Firebrand", "Catalyst", "Berserker", "Soulbeast", "Daredevil", "Renegade", "Scrapper", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Scourge", "Reaper", "Druid", "Willbender", "Soulbeast", "Dragonhunter", "Dragonhunter", "Soulbeast", "Firebrand", "Ranger", "Firebrand", "Tempest", "Scourge", "Scourge", "Berserker", "Renegade", "Catalyst", "Firebrand", "Willbender", "Guardian", "Tempest", "Virtuoso", "Renegade"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[79.2185, 3459.7812, 21.4857, 2790.75, 436.6071, 447.3125, 294.5833, 0.0, 52.1475, 286.7761, 232.2371, 1254.2675, 33.2174], [700.05, 98.5926, 106.1209, 214.8852, 1148.5195, 90.3636, 55.2308, 221.25, 147.6923, 605.5611, 0.0, 398.6053, 931.5028], [98.3788, 12690.375, 5877.1765, 373.1132, 669.7674, 902.5263, 0.0, 350.4597, 418.1591, 1080.899], [422.1273, 231.6154, 0.0, 430.0984, 1.1, 928.7537, 1116.1341, 25.1818, 557.5714, 28.9565, 145.8804, 156.0704, 769.1625], [1578.7966, 0.0, 497.4472, 90.1489, 0.0, 0.0, 127.8864, 296.0233, 255.4254, 52.7879, 23.5349, 196.1842, 1126.5575, 86.4528, 53.6, 128.2745, 96.5714, 238.5551, 1376.4706], [850.4462, 1540.561, 1837.0476, 0.2857, 0.0, 626.68, 1123.2273, 500.3153, 7213.4], [179.8095, 501.0385, 190.6667, 285.913, 692.6538, 410.7619, 585.3333, 354.5987, 542.4902, 997.1975, 97.4483, 133.2267, 1453.7917, 962.8947], [249.2927, 121.0, 333.3958, 948.0548, 26.2727, 33.4615, 191.4777, 665.5128, 0.0, 219.5732, 15.5, 0.0, 111.275, 610.8077, 71.1549, 40.3667, 37.7674, 103.0642, 1193.6947, 76.3922, 0.0, 265.6604, 204.6341, 118.3053], [102.4091, 238.25, 1103.6104, 38.6957, 13.9615, 202.7134, 210.95, 511.7093, 76.0667, 3495.1333, 1231.9451], [1491.7027, 605.6095, 663.437, 206.0, 593.6541, 5.015, 21.8846, 3013.0952, 563.6923], [79.2727, 0.0, 209.1987, 534.9444, 19.2667, 197.7308, 0.0, 436.4677, 433.4839, 0.0, 255.0252, 0.0, 2.75, 0.0, 132.6222, 131.6889, 55.7945, 0.0, 62.2581, 129.8947, 338.5136, 52.74, 17.3333, 152.5849, 193.2727, 140.6638], [1424.1636, 76.4211, 256.6164, 0.9268, 6.3261, 184.8571, 55.65, 108.7727, 181.2313, 0.0, 206.7209, 28.7857, 741.3438, 105.1818, 26.2, 98.1659, 2900.0263], [229.967, 331.7943, 1266.6267, 5.1304, 0.0, 215.3057, 134.3873, 785.5625], [131.5845, 718.4931, 0.0, 330.4, 0.0, 220.1278, 143.25, 240.1429, 16.7611, 175.0885, 1824.9286], [188.1481, 973.2917, 76.5366, 392.4868, 1444.6806, 956.9412], [409.75, 7.4, 303.7778, 28.0172, 0.0, 44.1333, 69.875, 52.6846, 21.1333, 2701.8621, 226.3766, 219.6305, 133.1373, 19.9615, 26.7451, 52.1628, 450.2162, 79.0847], [0.3571, 198.708, 816.201, 750.6, 189.5306, 357.3023, 192.9327, 2922.2857], [0.945, 645.5826, 6.8, 420.987, 0.0, 1034.6478], [306.2414, 597.3718, 355.9062, 891.0657, 348.2342, 27.814, 89.4, 671.5319, 912.4444, 157.8562], [80.0168, 16.6505, 280.39, 648.1224, 2232.4583, 1704.925, 39.5345, 1098.2612], [741.6, 211.375, 355.978, 151.0625, 3060.8158, 515.5127, 422.8333], [133.6462, 1350.1333, 191.02, 404.7903, 663.4026, 135.1176, 115.4386, 390.0049], [758.2991, 352.8182, 4211.4783, 890.7692], [262.5, 133.5634, 308.7629, 107.9808, 527.9167, 132.8125, 184.5, 355.476, 2331.0952], [119.9744, 609.9175, 34.6566, 1736.2895], [50.5207, 177.8372, 387.4663, 1069.9018], [0.0, 273.4551, 0.0, 168.5556, 186.5, 173.2889, 225.4769, 0.0, 178.3694, 184.6632, 123.463, 14.1111, 200.5833, 335.7273, 161.9009, 599.9057], [0.0, 0.0, 291.0233, 99.4679, 203.1466, 202.1509, 14.8148, 314.5098, 80.7857, 184.0575, 3168.9706], [429.72, 564.1209, 182.305, 1844.6667, 64.609], [19.0, 306.4969, 0.0, 0.0, 50.3529, 27.4733, 408.6857, 41.4595, 131.2719, 138.7342, 423.2308, 250.0, 147.1064, 68.9048, 212.6913], [88.6545, 368.7521, 315.2857, 97.0, 2198.5882, 871.9583, 201.2222], [6825.0, 164.3333, 399.6964, 919.141, 0.0], [29.3654, 1675.6429, 5889.6667, 53.7895, 3147.7778, 1116.9167], [0.0, 340.5342, 105.3909, 528.8653], [216.5581, 468.391, 19.3333, 1820.8542], [170.9286, 694.25, 380.1635, 0.0, 273.0049, 29.3985], [3771.0, 1521.6111, 0.0417, 0.0, 445.0682, 63.6731, 289.7203, 125.8125], [11.7586, 243.0, 117.5378, 2377.463], [83.9175, 217.9237, 75.8605, 79.5183, 26.6818, 1092.2973, 134.3077, 148.5769, 65.4179, 132.7027, 0.0], [0.0, 0.0, 475.6593, 120.6738, 1253.3433], [0.0, 2992.7619], [1733.8], [595.1, 511.48, 301.1196, 344.5214, 26.0303], [10.1203, 1939.5962], [0.6522, 3043.3125], [0.0, 8.7826, 0.0, 92.2857, 130.8131, 24.7644, 1347.2, 0.0, 235.2831], [0.0, 1241.7857], [173.2738, 63.9216, 395.5391, 0.0, 103.3979], [0.0, 2171.4333], [194.858]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

