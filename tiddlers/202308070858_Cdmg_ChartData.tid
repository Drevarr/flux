created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "K\u00e2 \u00d4tik R\u00e6j", "Rockdevil", "Gestern Yesteryear", "Dragon Deezz", "I Mad X King I", "Unbreakable Nemesis", "Roderik Manloy", "Alarics Bane", "Crabbedmermaid", "Drac Tepes", "Xanvias Tsolea", "Forever Dreaming", "Forever Dreaming", "Liza Hexx", "Xuerreux"];
const professions = ["Scrapper", "Berserker", "Weaver", "Firebrand", "Firebrand", "Holosmith", "Firebrand", "Renegade", "Reaper", "Dragonhunter", "Scourge", "Dragonhunter", "Harbinger", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.2151, 5.619, 15.2874, 16.6176, 3.2564, 0.0, 2.1282, 15.6613, 32.5871, 10.2288, 0.0, 40.0566, 4.9103, 10.0227, 7.0986, 0.0, 2.1491, 3.1765, 13.3545, 21.0602, 4.4, 39.8571, 32.9858, 17.0541, 8.95, 14.44, 3.3051, 6.4882, 1.9441, 0.0, 41.4189, 36.0], [63.5806, 256.7935, 66.7647, 0.0, 111.9434], [4.5269, 0.0, 82.1724, 0.3529, 0.0, 45.8974, 6.2581, 19.7806, 25.8039, 1.8889, 150.2075, 10.9615, 0.0, 72.2113, 0.0, 6.8158, 0.0, 21.7182, 15.2331, 7.84, 91.8452, 35.3688, 42.0135, 0.0, 17.6743, 1.9492, 23.2324, 4.6434, 0.0, 15.3243, 4.7273, 0.0], [12.3548, 0.0, 1.1149, 4.7647, 3.3205, 2.3469, 9.3333, 15.6452, 17.9484, 15.5294, 0.0, 155.1698, 70.8205, 4.7273, 44.0423, 0.0, 1.5614, 4.5098, 4.3091, 0.0, 6.64, 18.2619, 57.7376, 0.9189, 41.0, 22.6171, 0.0, 4.6294, 3.7902, 0.0, 7.9662, 18.9545, 9.5054, 28.6726, 17.6541, 23.2673, 11.2378, 55.8108, 12.1304, 10.9167, 8.4615, 1.5441], [53.3333, 15.2857, 0.6437, 0.0, 15.5769, 20.1633, 0.0769, 17.6452, 32.5677, 31.4575, 0.0, 91.7736, 20.0455, 12.338, 0.0, 173.8947, 0.0, 12.4818, 5.8421, 14.0, 35.1548, 42.3262, 13.1622, 4.875, 25.76, 35.3898, 22.9, 3.5734, 0.0, 31.7162, 117.5682, 16.5269, 31.8475], [86.391, 0.0, 106.2976, 112.5035, 2.8514, 181.25, 118.2743, 22.0508, 26.4853, 12.7133, 0.0, 327.3784], [0.0, 179.7143, 14.1954, 129.7353, 23.8718, 175.4898, 55.9744, 0.0, 70.4645, 46.7843, 97.8889, 0.0, 32.2564, 44.169, 0.0, 41.9825, 14.3529, 131.3091, 4.8045, 34.0, 59.0952, 219.922, 63.4122, 53.9943, 18.5085, 49.3147], [156.1429, 80.2184, 33.5, 0.7949, 13.8776, 87.6667, 2.7742, 63.4516, 13.451, 14.6667, 3.5472, 86.1154, 58.3636, 0.0, 0.0, 12.4314, 221.6182, 9.8722, 0.0, 74.7024, 103.6738, 28.6081, 56.55, 154.0343, 222.1525, 26.0824, 10.3077, 0.0, 32.8378, 24.5, 9.414, 36.2377], [28.831, 0.0, 30.614, 1.2549, 59.5, 49.5038, 0.0, 90.1071, 216.5674, 39.7365, 20.325, 64.2171, 0.0, 34.6324, 1.6783, 0.0, 58.9932, 13.7045, 3.5699, 116.2422, 99.6162, 89.3762, 11.7203, 60.009, 79.4565, 88.9583, 30.0385, 103.1985], [37.7527, 46.1905, 92.4253, 113.8824, 43.9872, 123.4694, 66.8462, 94.3871, 184.9742, 72.2418, 0.0, 143.0943, 64.1026, 122.8636, 9.0141, 0.0, 25.3421, 1.8627, 90.7182, 71.7368, 52.0, 78.0833, 185.8936, 35.6351, 22.05, 97.7829, 12.5085, 12.9706, 51.6084, 0.0, 6.1216, 154.1818, 14.8226, 41.7534, 18.8649, 45.0, 0.0, 87.3478, 69.6042, 71.7051, 43.4853], [209.3864, 19.3656, 182.6682, 312.1568, 450.1782, 228.3916, 225.8468, 42.9636, 223.0, 120.3333, 272.0897, 13.7574], [100.129, 73.3007, 12.2593, 112.6604, 140.7564, 121.8864, 147.6197, 0.0, 55.4386, 1.2549, 73.8091, 105.2556, 19.8, 103.1071, 171.227, 76.7635, 21.9, 81.08, 26.3559, 53.0794, 21.8462, 0.0, 77.5541, 157.0227, 13.0914, 147.5381, 125.5568, 165.6337, 32.1329, 115.9279, 0.0364, 43.0217, 68.7917, 100.0897, 85.5147], [117.0818, 71.6842, 0.0, 129.9643, 151.4043, 165.3108, 28.025, 30.12, 121.5085, 71.4882, 34.7483, 0.0, 40.3311, 109.9773, 39.4624, 333.5157, 311.0757, 429.5545, 154.4126, 313.5766, 263.7083, 53.5, 218.8088], [611.1935, 180.1429, 497.954, 103.1471, 295.7959, 42.3333, 259.1613, 591.071, 359.1569, 0.0, 699.5849, 1089.0897, 618.4091, 418.662], [32.6667, 318.2264, 483.2949, 87.5, 255.8592, 0.0, 65.193, 3.5882, 172.8545, 65.4887, 86.24, 270.881, 191.1631, 126.3716, 1.8, 351.0229, 28.7627, 135.2441, 152.965, 0.0, 19.6689, 333.1364, 40.6237, 289.6951, 217.8108, 416.0297, 193.6084, 286.0, 0.0, 142.0, 190.6667, 234.2051, 161.0882], [533.5641, 357.8636, 396.5352, 0.0, 2.4474, 3.8824, 449.1, 260.3083, 378.4762, 639.0071, 269.4662, 293.2, 265.6686, 5.5593, 24.0676, 39.7063, 0.0, 693.9865, 131.6818, 1.0, 257.4529, 176.7568, 862.198, 62.2867, 203.3514, 0.0, 109.6522, 205.0625, 0.0, 510.3088]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

