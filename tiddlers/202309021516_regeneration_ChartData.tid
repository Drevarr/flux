created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Cat Wigglebooty", "Tegan Parker", "Cupi Cupita", "J\u00e2sm\u00eene", "Elizabeth Conbolt", "Venomina The Sly", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Tempest", "Scrapper", "Tempest", "Vindicator", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[625.847, 299.4432, 83.0794, 23.1795, 129.78, 75.1386], [335.2752, 0.0, 360.8064, 71.1245, 0.0, 0.0, 28.98, 0.0, 31.4833, 35.6744, 23.2893, 412.1938, 32.3317, 7.4907, 0.0, 13.2893, 72.5088, 2.5137], [420.5261, 16.2855, 610.5312, 160.5811, 0.0, 41.4171, 0.0, 34.5146, 96.9965, 67.4751, 0.0, 127.8598, 136.3797, 551.153, 212.1491, 0.0, 0.0, 26.2119, 122.1024, 0.0], [391.9104, 125.496, 23.1671, 379.7696, 170.0546, 491.3127, 1350.843], [468.8237, 18.018, 491.5987, 111.8746, 76.4064, 102.2364, 23.7519, 189.7594, 35.5516, 41.5262, 67.0887, 101.9034, 613.0389, 383.7286, 0.0, 141.7825, 215.5104, 193.401], [449.0554, 31.0612, 512.6458, 94.0262, 60.9437, 56.7783, 97.2972, 176.5568, 91.8238, 103.7417, 52.2799, 87.7671, 654.3434, 243.0635, 46.4464, 238.4122, 319.2, 158.6966], [1472.2906, 1897.4074, 819.2486, 98.1792, 0.0, 360.6624, 248.5793, 232.5658, 298.1048, 433.9175, 444.4799, 1268.3758, 0.0, 0.0, 620.928, 15.4926], [1367.6083, 141.9165, 2166.6758, 567.2218, 40.8038, 227.9853, 369.432, 136.1092, 467.2954, 311.5847, 215.0547, 441.6552, 803.3283, 1957.9204, 451.8909, 174.5394, 177.2602, 302.8116, 937.8432, 198.4797], [2286.1613, 311.9985, 2568.407, 682.5907, 45.8842, 312.1812, 329.7168, 249.0102, 260.1626, 221.6887, 0.0, 510.4247, 1448.5131, 2706.6539, 912.374, 0.0, 634.8003, 306.722, 1089.9168, 19.1606]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

