created: 20230501220820000
creator: Drevarr
modified: 20230705163527932
modifier: drevarr
tags: ChartData
title: 202305012208_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Needragee", "Sygaldry Verdandi", "Tyzzki", "Tika Sumiko", "Elonith Primal", "Mac Aaroni", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[93.1016, 1347.6491, 117.6318, 421.6252, 106.2589, 108.3116, 681.7839], [1014.8292, 72.3097, 81.345, 19.0476, 64.7829, 141.0153, 826.8752, 23.2464, 624.6744, 63.8352, 114.6521, 27.0774, 55.9451, 172.2623], [1311.8095, 166.0697, 0.0, 0.0, 58.234, 174.6657, 792.8705, 5.916, 468.0004, 44.5104, 110.3322, 0.0, 0.0, 191.4101], [1102.2539, 341.1659, 52.3798, 36.7191, 92.2131, 259.7142, 698.6041, 14.5464, 823.5493, 162.6372, 91.6864, 52.3246, 0.0, 216.8726], [2785.7281, 328.9363, 317.724, 81.5661, 108.7726, 372.175, 2453.0776, 55.3552], [2199.2359, 187.714, 79.8138, 9.801, 40.3295, 441.8479, 1936.5496, 49.764, 1517.7162, 154.2024, 290.7958, 0.0, 0.0, 296.7909], [2541.9055, 207.029, 203.9048, 58.3704, 146.1915, 309.3551, 2108.2951, 76.4208, 1811.859, 124.0866, 249.6691, 62.7543, 93.7661, 556.0331], [8986.2906, 770.1711, 574.4552, 68.6268, 393.2176, 1249.8085, 7053.1898, 386.0016, 5079.27, 384.8922, 832.8034, 244.2258, 230.2306, 1210.2496]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

