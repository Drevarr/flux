created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Shaca Booey", "Aira Draugr", "Gamora Titus", "Vampdru", "Mistwalker Cael", "Belvyn Brightblade", "Saiaran", "Tribal S", "Dark Sidiuz", "Brygdyla", "Legacy Of Mathus", "Ateriuz", "Gestalia Yesteryear", "Tootsy Pop Star", "Primal Clone", "Rina Of Theros", "Tika Fiery", "Be\u00eb", "Xanvias Einzbern", "Grasszanine", "Koralia Danai", "Arriasa", "Lord Of Bones", "Lucky Luprac\u00e1n", "Aronorf Xideliesi", "Sygaldry Verdandi", "Sub Train", "Crusader Siolith", "My Birthday Girl", "Drevarr Moonwillow", "Bella Sassy", "High Sorcer Baradun", "Artakama Nahid", "Blancooo Padreee", "Newtype Khan"];
const professions = ["Berserker", "Herald", "Firebrand", "Druid", "Vindicator", "Firebrand", "Tempest", "Druid", "Scourge", "Tempest", "Berserker", "Berserker", "Druid", "Scourge", "Chronomancer", "Scourge", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Firebrand", "Druid", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.448, 21.8289, 13.8368, 10.3153, 5.7172, 12.7269, 3.9155, 0.0, 0.0], [10.3976, 26.8664, 15.7826, 4.7769, 3.7769, 3.3417, 3.761, 1.2789, 13.8643], [27.8898, 11.4922, 9.3902, 5.1192, 6.7234, 6.9426, 25.0992], [23.3856, 9.4446, 4.972, 2.52, 8.3357, 0.0, 7.2086, 21.4066, 8.0504, 16.2808], [17.286, 29.8889, 17.296, 5.8845, 4.9549, 6.1146, 2.473, 4.2021, 8.725, 3.271, 8.4361, 3.8532, 1.549, 7.308, 2.5758, 1.76, 2.0736, 0.0, 2.1356, 3.1399, 1.8717, 5.6814, 7.0325, 6.8191, 5.3392], [18.3258, 63.8077, 29.8356, 24.7151, 8.7318, 17.064, 0.3091, 0.0], [206.6872], [15.0765, 51.0462, 36.1054, 14.6768, 8.0041, 0.4977, 7.0582, 1.4094, 17.5694, 2.0328, 6.8658, 3.9861, 0.0, 10.8706, 1.0971, 0.726, 0.0, 0.0, 0.0, 4.6351, 3.6752, 3.2989, 13.524, 0.0, 8.7984], [19.1056, 35.2621, 5.6212, 14.3306, 10.6375, 16.7085, 7.3674, 5.22, 24.3821, 5.9875, 12.3072, 4.6062, 1.8224, 9.135, 8.1567, 4.84, 0.0, 2.2896, 0.9094, 11.2056, 15.1536], [0.0, 54.7403, 41.5104, 4.5692, 6.8954, 28.2978, 8.6811, 3.654, 13.6253, 8.6117, 4.0537, 0.1772, 0.0, 7.0339, 13.833, 2.75, 0.0, 0.0, 0.0, 0.4486, 0.0, 17.5328, 11.5147], [18.7157, 49.0312, 30.0518, 12.1152, 12.1621, 8.7453, 10.1494, 3.6018, 17.8085, 3.1416, 12.1977, 4.5619, 0.0, 16.1689, 4.1737, 4.026, 4.1616, 0.3024, 1.4535, 3.0652, 6.6699, 7.1475, 6.8006, 7.7662, 9.2872], [12.0872, 61.1211, 14.053, 12.946, 11.3999, 8.1054, 4.508, 3.0798, 16.7328, 9.8683, 12.0516, 6.2892, 2.1869, 19.4576, 3.4583, 4.488, 4.9392, 0.8035, 7.2143, 5.1045, 13.8063, 12.0557, 7.0085, 9.0992], [27.8136, 65.151, 39.7808, 7.8922, 5.3014, 4.9059, 4.1474, 9.396, 20.677, 4.3243, 2.8486, 1.8159, 19.3662, 3.5059, 1.452, 0.0, 0.0, 0.0, 5.308, 0.0, 8.2472, 14.1422, 4.0725, 17.2584], [20.5353, 37.2771, 39.1322, 12.2537, 7.7616, 8.9586, 8.5008, 4.8546, 21.2746, 8.279, 6.6832, 4.2518, 2.8019, 12.1495, 6.6303, 0.0, 3.744, 1.5022, 5.7191, 4.3558, 13.9285, 16.9243, 9.6604, 12.596], [25.0842, 44.6654, 38.4836, 13.2922, 6.133, 7.6788, 7.2128, 3.654, 20.0794, 6.7452, 7.0849, 6.4663, 17.8133, 3.8876, 3.256, 1.368, 2.1427, 5.906, 3.0627, 10.8129, 22.7203, 9.9445, 5.7152], [20.4053, 48.6953, 38.2674, 11.0768, 7.3804, 10.5228, 10.2525, 2.349, 17.5694, 6.5419, 6.3545, 0.3986, 1.2301, 16.1689, 3.7206, 4.004, 1.5552, 2.2118, 0.4547, 9.1207, 4.9343, 13.6842, 22.1794, 12.5017, 7.3696], [35.0919, 66.1585, 26.1602, 21.7382, 2.1136, 11.8026, 2.0093, 0.8091, 17.8085, 2.809, 3.9442, 5.7577, 0.0, 24.6645, 1.5264, 3.938, 4.6224, 4.5274, 0.0, 2.5418, 2.5182, 20.4652, 10.4328, 12.407, 4.136], [11.1774, 59.7777, 41.5104, 13.4999, 8.7318, 8.8164, 7.3158, 2.5839, 22.5893, 6.0799, 5.6606, 7.9722, 1.1846, 19.0008, 7.8705, 3.63, 1.0368, 1.7107, 0.4547, 5.1584, 4.1517, 13.562, 22.9522, 9.2816, 16.2056], [23.6545, 44.3296, 42.5914, 15.3691, 14.8302, 7.821, 7.2643, 3.3669, 16.9718, 10.4412, 17.9313, 9.7438, 1.4579, 16.5343, 5.1039, 3.674, 1.4544, 1.9354, 1.4454, 10.6533, 7.6227, 17.2885, 13.4467, 14.2065, 9.8136], [18.4791, 14.1285, 68.1471, 13.4037, 16.72, 8.6976, 6.0912, 14.8772, 19.1249, 37.9369, 45.4406, 34.948, 26.4704], [35.7418, 68.1735, 41.2942, 23.1228, 3.9848, 17.9172, 2.7306, 0.6003, 12.5496, 0.7762, 9.0935, 3.2775, 13.4284, 1.7172, 10.12, 0.0, 0.0, 5.7939, 8.4054, 12.9511, 11.9011, 38.2628, 3.2336], [32.4925, 72.8751, 36.5378, 15.2998, 5.0243, 8.6742, 8.0629, 2.8449, 23.904, 5.0635, 10.883, 6.6878, 0.0, 25.852, 7.7274, 11.374, 0.0, 0.0, 1.4578, 0.0, 16.4943, 27.4344, 0.0, 8.3096], [24.4344, 59.7777, 46.6992, 15.8537, 9.4941, 8.6031, 7.5734, 3.4713, 20.5574, 6.9115, 7.9979, 8.9909, 22.2894, 6.3441, 4.026, 2.0448, 1.6589, 0.9013, 11.5504, 5.4108, 12.2791, 23.6477, 6.2509, 11.5808], [26.6438, 70.1885, 46.9154, 18.2767, 10.8454, 6.0435, 4.1474, 3.654, 16.1352, 9.4433, 9.3126, 9.5666, 3.0753, 26.8569, 3.7683, 4.114, 2.376, 2.0706, 6.1677, 4.4579, 15.3947, 8.9645, 7.8609, 16.0552], [43.28, 83.2858, 56.212, 16.1306, 5.1628, 0.2844, 5.5899, 1.2789, 37.2902, 4.8972, 8.7283, 0.0443, 4.8749, 31.7898, 0.0, 7.942, 8.1648, 0.0, 0.0, 6.4667, 0.0, 19.4266, 19.9382, 5.4932, 3.7976], [26.3839, 80.5992, 73.2918, 20.9075, 12.8551, 22.2543, 6.3885, 8.9001, 7.8883, 6.0984, 10.4812, 13.0655, 4.6927, 34.0735, 12.092, 9.702, 1.3392, 8.2236, 6.2615, 29.9952, 11.2829, 28.2236, 8.1968], [46.5293, 107.8014, 52.969, 34.8227, 7.2418, 9.954, 4.6883, 9.0828, 26.7725, 4.9711, 9.2396, 0.0, 7.6313, 28.6839, 14.5724, 14.08, 12.744, 0.0, 0.0, 8.1862, 0.0, 15.0892, 29.5982, 20.4574, 6.8432], [59.6562, 126.9437, 76.5348, 27.8997, 6.0984, 45.2196, 5.5899, 7.8822, 68.724, 4.2874, 21.6564, 9.8324, 2.9842, 16.443, 7.7036, 14.08, 15.2352, 1.1664, 14.0549, 3.437, 25.2302, 22.5658, 41.3883, 14.7768], [71.8734, 145.7502, 92.3174, 26.2382, 17.2903, 17.4195, 7.9598, 1.7226, 46.4933, 11.8457, 0.0, 5.6248, 0.0, 37.3621, 12.8313, 2.068, 0.0, 7.0442, 33.5995, 50.232, 30.5913, 34.6672], [39.6408, 147.0935, 71.5622, 33.5073, 18.4338, 24.2451, 15.9197, 14.2506, 55.3378, 11.1989, 23.1172, 12.5341, 44.0307, 12.6644, 10.032, 1.2614, 8.4853, 17.0831, 27.3683, 38.5627, 13.6382, 16.2808], [64.985, 176.6466, 80.2102, 32.4689, 13.4442, 23.1786, 5.9248, 10.4922, 40.0392, 9.3694, 14.4254, 9.4781, 9.9549, 39.2805, 5.6047, 11.176, 4.7088, 0.0, 16.5593, 20.9284, 21.748, 34.0032, 60.7091, 6.3168], [27.4237, 177.3182, 119.5586, 36.8304, 30.6653, 24.2451, 21.1747, 0.0, 46.0152, 6.5974, 34.8766, 6.112, 15.9916, 38.2756, 14.4531, 0.0, 1.0224, 0.2765, 9.5319, 0.0, 26.452, 67.5427, 0.0, 23.8008], [141.7973, 285.1197, 121.072, 30.0458, 16.5627, 20.6901, 0.0, 20.8278, 84.9787, 6.468, 11.3212, 10.6296, 19.363, 36.266, 19.9624, 0.0, 12.7872, 0.0, 0.0, 43.9237, 19.2427, 28.5077, 7.6328], [116.7131, 332.4717, 155.2316, 57.0455, 24.5322, 34.3413, 24.8326, 24.3774, 110.317, 12.6034, 23.5554, 24.8024, 12.1873, 65.2239, 16.0034, 19.36, 1.3968, 4.8557, 26.6519, 31.6819, 47.2837, 68.3155, 50.7646, 32.1856], [117.7528, 290.1571, 213.8218, 54.2071, 27.8239, 78.921, 20.711, 26.4393, 138.0456, 16.632, 20.3416, 30.1615, 14.9209, 86.5998, 30.2418, 20.196, 11.736, 12.1651, 7.6003, 31.6982, 32.7369, 58.8297, 75.0389, 58.8149, 32.9752]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

