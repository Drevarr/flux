created: 20230610164704000
creator: Drevarr
modified: 20230705163534885
modifier: drevarr
tags: ChartData
title: 202306101647_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Pamtastic", "High Sorcer Baradun", "Trolit\u00e1", "Venomina The Siren", "Scintilla The Storm", "Tomitigas", "Tegan Parker", "Zhavashian"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.0753, 13.1398, 118.8941, 73.2947], [48.4325, 0.0, 342.7663, 18.9924, 73.1315, 62.6249, 37.1175], [276.4954, 40.8696, 0.0, 221.1063, 20.0753, 59.7408, 88.8644, 28.6547], [0.0, 20.016, 76.6541, 82.6574, 0.0, 106.816, 0.0, 0.0, 0.0, 20.1573, 0.0, 235.3459, 15.899, 0.0, 120.7773, 19.3256, 18.0634, 70.6717, 63.6441], [2.8057, 33.4673, 17.76, 80.4326, 132.6677, 0.0, 79.7792, 0.0, 20.067, 0.0, 0.0, 0.0, 0.0, 314.6669, 19.8784, 0.0, 369.099, 0.0, 0.0, 107.0572, 95.4662], [0.0, 13.1023, 20.064, 79.9258, 101.221, 16.088, 90.0948, 25.9961, 0.0, 0.0, 19.6185, 19.8729, 20.1573, 0.0, 3.9992, 290.7533, 39.474, 0.0, 279.8032, 58.1018, 47.9181, 95.5701, 105.1168], [0.0, 0.0, 20.064, 95.7542, 47.9899, 0.0, 0.0, 0.0, 20.0293, 0.0, 0.0, 1.3739, 60.4032, 0.0, 15.9721, 338.5805, 19.803, 0.0, 440.1531, 59.1847, 55.7581, 113.413, 93.0412], [19.737, 70.9262, 87.408, 85.4093, 106.0229, 0.0, 157.3955, 20.1309, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 227.7658, 77.9107, 4.3272, 559.4593, 161.602, 105.2128, 199.187, 203.1565]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

