created: 20230607221050000
creator: Drevarr
modified: 20230705163533971
modifier: drevarr
tags: ChartData
title: 202306072210_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mister Jekyll", "Melody Phoenixstorm", "Ria Zerria", "Husky Guard", "Kira Dragonblaze", "Kaehln Lao", "Belvyn Brightblade", "Demon Sekhmet", "Slingsshot", "Lord Erin The Wise", "Sumatra Satyricon", "Blanco Padre Guard", "Oo Dads Mad", "Chrozz", "Gabe Malhorn", "Kary\u00edna", "Skye Nightroad", "Uneeta Healah", "Smol Gluvs", "Duke Silvver", "Permanent Dawn", "Sister Elonith", "Etcherii", "No Reserv\u00e9", "Tootsie Pop Rocks", "Shaca Booey", "Mistwalker Cael", "Rafaellagabriela", "Inedible Plant", "Arriasa", "Crusader Siolith", "Rozaalyna", "Zayde Sunsabre", "Cyclotechnist Farra", "Sygaldry Verdandi", "Johosh The Great", "Solus Sanctus", "Koralia Danai", "Xanvias Einzbern", "Be\u00eb", "Grasszanine", "Venomina The Siren", "Drevarr Moonwillow", "Primal Clone", "Newtype Khan", "Sub Train", "Eibh\u00ebar", "Ryvalia Fazebringer", "Artakama Nahid", "Tegan Parker"];
const professions = ["Reaper", "Scrapper", "Scourge", "Dragonhunter", "Dragonhunter", "Firebrand", "Firebrand", "Berserker", "Untamed", "Weaver", "Soulbeast", "Firebrand", "Spellbreaker", "Willbender", "Firebrand", "Vindicator", "Scrapper", "Scrapper", "Reaper", "Vindicator", "Weaver", "Berserker", "Firebrand", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Druid", "Firebrand", "Reaper", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Reaper", "Spellbreaker", "Tempest", "Scrapper", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0293, 0.13, 0.1215], [0.0195, 0.05, 0.1479], [0.0293, 0.16, 0.0711, 0.0405, 0.7467], [0.0584, 0.0473, 0.4891, 0.3804, 0.0, 0.6481, 0.0741, 0.2747, 0.54, 0.0182, 0.3534], [0.0, 0.09, 0.1939], [0.0203, 0.8079, 0.6087, 0.0, 0.7222, 0.4444, 0.4615, 0.5, 0.4545, 0.7241], [0.0244, 0.1, 0.222], [0.0195, 0.09, 0.2409], [0.0098, 0.0, 0.2532], [0.0049, 0.08, 0.2264, 0.4672, 0.3043, 0.1, 0.2037, 0.1852, 0.1978], [0.039, 0.04, 0.2843, 0.0405, 0.1834, 0.1087], [0.0146, 0.05, 0.2545, 0.0878, 0.6114], [0.0049, 0.05, 0.394], [0.039, 0.02, 0.2782, 0.0676, 0.3581, 0.4239, 0.1, 0.3889, 0.2222, 0.3187, 0.52, 0.2727, 0.5086], [0.2514, 0.0135, 0.3493, 0.3804, 0.0, 0.3704, 0.5926, 0.5934, 0.78, 0.4909, 0.8448], [0.0, 0.07, 0.2584, 0.0, 0.4061, 1.0109, 0.0, 0.6481, 0.1481, 0.2527, 0.4, 0.3455, 0.75], [0.0098, 0.09, 0.3344, 0.8734], [0.0195, 0.07, 0.3098, 0.0405, 0.3362, 0.4239, 0.05, 0.4815, 1.0, 0.2418, 0.56, 0.4909, 0.6121], [0.0244, 0.08, 0.29, 0.0473, 0.5415, 0.7935, 0.0, 0.3889, 0.4444, 0.2198, 0.76, 0.1091, 0.7586], [0.0146, 0.08, 0.3291, 0.0676, 0.1266, 0.3696, 0.05, 0.8704, 0.5556, 0.7253, 0.54, 0.2364, 0.7672], [0.0195, 0.06, 0.4111, 0.0743, 0.1485, 0.1739, 0.05, 0.3333, 0.1111, 0.2308, 0.06, 0.1455, 0.3793], [0.0049, 0.05, 0.3405, 0.0608, 0.345, 0.4674, 0.463, 0.4444, 0.6374, 0.48, 0.3273, 0.6983], [0.0098, 0.04, 0.3462, 0.0405, 0.6332, 0.5652, 0.0, 0.4815, 0.4074, 0.6154, 0.38, 0.6545], [0.0488, 0.08, 0.3278, 0.0338, 0.3537, 0.1304, 0.05, 0.7778, 0.7407, 0.8242, 0.48, 0.4182, 1.1466], [0.0732, 0.04, 0.2795, 0.0676, 0.9083, 0.7391, 0.05, 0.4444, 0.1852, 0.4945, 0.94, 0.4182, 0.9655], [0.0146, 0.06, 0.3444, 0.0811, 0.5066, 0.4022, 0.0, 0.6111, 0.037, 0.4615, 0.62, 0.4909, 0.9224], [0.0, 0.05, 0.319, 0.0676, 0.786, 0.6196, 0.463, 0.8889, 0.5385, 0.34, 0.7455, 0.681], [0.3581, 0.0743, 0.5284, 0.663, 0.0, 0.2407, 0.4815, 0.6154, 0.48, 0.2364, 0.8276], [0.0049, 0.06, 0.373, 0.0541, 0.6245, 0.5435, 0.0, 0.3704, 0.3704, 0.5055, 0.34, 0.0545, 0.6724], [0.0293, 0.09, 0.326, 0.1149, 0.917, 0.5978, 0.05, 0.6667, 0.4074, 0.6923, 0.86, 0.5091, 0.4655], [0.0195, 0.05, 0.3238, 0.0405, 0.9039, 0.8152, 0.0, 0.3889, 0.2963, 0.8242, 0.94, 0.6364, 0.5259], [0.0195, 0.01, 0.3058, 0.1284, 1.0611, 1.1196, 0.05, 0.7037, 0.7037, 0.9341, 1.1, 0.5273], [0.0634, 0.05, 0.3664, 0.0608, 0.1921, 0.7174, 0.0, 1.0741, 0.5185, 0.9121, 1.16, 0.9273, 0.6034], [0.0244, 0.07, 0.4072, 0.1014, 0.3537, 0.8043, 0.6111, 0.3704, 0.6044, 0.72, 0.6364, 0.7328], [0.0244, 0.1, 0.3541, 0.0743, 0.7249, 1.0652, 0.0, 0.1852, 0.3333, 0.6923, 0.7, 0.6, 1.0345], [0.0195, 0.1, 0.398, 0.1014, 0.7031, 0.7717, 0.0, 0.5741, 0.4074, 0.6154, 0.72, 0.3818, 0.8966], [0.0049, 0.01, 0.4563, 0.0405, 0.559, 0.5543, 0.0, 0.2778, 0.2963, 0.5714, 0.66, 0.4364, 0.5948], [0.0195, 0.05, 0.4199, 0.0473, 0.8996, 0.4674, 0.05, 0.463, 0.4815, 0.3077, 0.66, 0.2727, 0.7931], [0.0, 0.02, 0.4291, 0.0743, 0.8472, 0.9891, 0.0, 0.463, 0.3704, 0.4725, 0.66, 0.6182, 0.3448], [0.0, 0.16, 0.3809, 0.0811, 1.0961, 1.0217, 0.05, 0.5, 0.5556, 0.7363, 0.82, 0.3455, 0.6724], [0.0293, 0.11, 0.4476, 0.0676, 0.7948, 0.9022, 0.0, 0.7222, 0.3704, 0.7143, 0.92, 0.3636, 0.3534], [0.0, 0.455, 0.1351, 0.8122, 0.8478, 0.1, 0.5185, 0.2963, 0.6044, 0.56, 0.6, 1.0259], [0.0146, 0.09, 0.4204, 0.0946, 1.0349, 1.0109, 0.0, 0.3889, 0.6296, 0.6374, 1.16, 0.3636, 1.0603], [0.039, 0.1, 0.4335, 0.0541, 1.1485, 0.8261, 0.05, 0.2963, 0.5926, 0.6374, 1.36, 0.4909, 0.9483], [0.0488, 0.03, 0.4616, 0.0608, 0.9389, 0.5109, 0.05, 0.4074, 0.7037, 0.978, 0.6, 0.4364, 1.1121], [0.4901, 0.0743, 0.7205, 0.5978, 0.05, 0.7593, 0.5556, 0.4505, 0.7, 0.8545, 1.1121], [0.039, 0.03, 0.4735, 0.0946, 0.8515, 1.3043, 0.05, 0.7407, 0.2222, 0.8132, 1.0, 0.8364, 0.9914], [0.0537, 0.11, 0.4348, 0.0743, 0.9083, 1.337, 0.0, 0.9074, 0.8148, 1.2857, 1.18, 0.5636, 1.1466], [0.039, 0.04, 0.4963, 0.0541, 0.9825, 0.7391, 0.05, 0.6481, 0.4444, 0.7473, 1.0, 1.1273, 1.1638], [0.0293, 0.05, 0.5731, 0.1149, 1.048, 0.4783, 0.0, 0.6667, 0.8889, 0.6703, 1.24, 0.6909, 1.1293]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

