created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Y U So Mean", "Tropcaller", "Darkandshadow", "Oo Dads Mad", "Darks Na", "Milvia Rosalyn", "Zeke Lightbringer", "Blancooo Padreee", "Blancooo Padreee", "High Sorcer Baradun", "Randlock", "Tootsie Pop Rocks", "My Birthday Girl", "Rozaalyna", "Rehdav", "Kisumaiassu", "Jerryatric Reflexes", "Newtype Khan", "Arcanophage Farra", "Revitiel", "Black Raspberry Pie", "Name Is What", "Daphne Agla\u00e9", "Raziel Umbra", "Crabbedmermaid", "Mort\u00e4rion", "Morton Saltbringer", "Rina Of Theros", "Legacy Of Mathus", "Be\u00eb", "Eibh\u00ebar", "Palm Sauce", "Permanent Dawn", "Lord Erin The Wise", "Bee Nemesis", "Mike The Archmagus", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Scrapper", "Mirage", "Firebrand", "Mirage", "Berserker", "Dragonhunter", "Druid", "Reaper", "Berserker", "Spellbreaker", "Tempest", "Untamed", "Scrapper", "Scrapper", "Scourge", "Daredevil", "Dragonhunter", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Vindicator", "Chronomancer", "Scourge", "Scourge", "Chronomancer", "Dragonhunter", "Scrapper", "Chronomancer", "Scourge", "Berserker", "Scourge", "Chronomancer", "Vindicator", "Weaver", "Weaver", "Berserker", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[248.8983, 84.4646, 45.8293, 13.5563, 7.2169, 21.4696, 7.6, 37.0323, 8.6296, 204.7049, 62.3488, 149.7708, 199.4483, 182.2, 296.0206, 62.6071, 181.4889, 381.9592, 160.2805, 423.1887, 266.2941], [17.8028, 685.3494, 718.7391, 607.9474, 322.4355, 510.0], [44.6255, 13.9507, 29.0482, 13.1913, 80.6632, 3.4516, 299.0984, 185.8217, 479.8333, 399.4138, 152.7455, 272.3918, 62.5, 211.1889, 448.7143, 135.8049, 93.6981, 584.3235], [230.6552, 271.3091, 847.0103, 140.1429, 756.6778, 1065.2449, 583.8659, 0.0, 0.0], [366.9831, 202.5885, 194.4448, 268.2817, 332.2289, 83.3043, 52.1852], [176.6499, 480.7113, 93.4578, 303.3043, 210.9684, 141.629, 286.541], [15.8407, 6.6627, 112.3565, 219.0632, 34.4677, 202.459, 528.8062, 319.4583, 370.0, 376.1455, 340.1134, 197.4, 480.5102, 193.2805, 292.7358, 216.0588], [89.1947, 226.8479, 230.2113, 219.0723, 162.1043, 367.2842, 70.5484, 43.9259], [331.2917, 998.4, 1167.6495, 132.75, 0.0, 1458.2857, 461.3585, 622.6765], [291.8305, 276.4823, 50.538, 64.0845, 97.4458, 63.2435, 42.1263, 0.0, 0.0, 339.8852, 809.2016, 396.5172, 429.4024], [383.2712, 215.8982, 74.1966, 26.1197, 70.241, 28.3739, 38.2, 0.0, 27.3607, 318.6589, 67.4583, 254.1379, 113.9636, 510.6804, 362.4, 455.0816, 311.7317, 158.4151], [491.4574, 391.2292, 446.2414, 288.6182, 33.433, 263.2143, 591.0444, 2078.9388, 658.8902, 225.0294], [61.7288, 1453.0487, 8.4505, 2.1408, 0.7952, 4.2522, 15.4947, 0.0, 28.7213, 110.5039, 20.4583, 0.0, 91.5273, 24.0619, 19.5, 24.7889, 60.9388, 22.2439, 70.7736, 15.2059], [78.7966, 1525.469, 1.023, 5.3012, 23.6957, 2.6211, 0.0, 0.0, 36.7213, 11.969, 70.4792, 72.0345, 27.1636, 68.2577, 56.7143, 65.9444, 427.4286, 83.7561, 42.8302, 72.0294], [1947.7288, 269.4336, 142.9656, 63.1761, 0.0, 73.4609, 143.1368, 30.4839, 382.6296, 1082.5246, 692.0833, 1398.5517], [1268.3443, 142.2713, 248.5208, 901.5862, 498.2909, 1136.433, 312.7333, 2930.8367, 131.6585, 283.1887], [492.1938, 702.6042, 908.8621, 184.1273, 1408.4227, 12.0, 543.5, 1352.8571, 507.7927, 705.5849, 371.9118], [209.9602, 81.0488, 81.669, 35.5663, 83.8174, 122.6526, 31.629, 432.623, 351.1085, 648.2292, 621.6552, 463.9636, 551.0206, 34.25, 396.6222, 1398.8367, 537.378, 260.9811, 29.7353], [300.1864, 103.8717, 85.3085, 39.5845, 51.4819, 65.313, 114.6105, 34.0484, 113.1111, 517.1967, 397.6512, 402.6875, 881.1034, 717.6, 574.0722, 68.1429, 302.0778, 860.5306, 871.2317, 453.1132, 45.2353], [778.2712, 413.9513, 112.7188, 14.7254, 53.8675, 70.7913, 65.3368, 37.129, 667.6885, 739.0078, 641.2292, 871.069, 510.8727, 943.0619, 610.4556, 339.8776, 647.7683, 367.3585, 404.9412], [855.3407, 308.8838, 209.3169, 353.1807, 293.8348, 136.7684, 155.6452, 185.8148, 987.5902, 92.4419, 1751.0833, 1587.7931], [294.8673, 327.6141, 73.4155, 136.6506, 98.9565, 389.8632, 78.2097, 790.0164, 78.6124, 553.125, 458.7241, 515.9091, 1167.134, 48.25, 40.9667, 860.3673, 512.3293, 469.4906, 436.1471], [607.8814, 243.6549, 180.9484, 74.4577, 8.5663, 88.2957, 187.1053, 63.1129, 42.8519, 528.1967, 121.4109, 790.6667, 1069.2414, 596.4545, 1233.4021, 42.4286, 402.6667, 1834.4286, 1081.8049, 75.8302, 641.4118], [1332.5254, 258.1726, 195.0617, 135.3451, 55.8313, 136.3913, 236.3684, 111.1129, 32.7407, 929.9016, 308.6047, 1305.5, 1179.3103, 577.7636, 1276.9897, 186.1429, 554.1444, 1200.8776, 864.622, 255.3585, 34.5294], [1135.661, 1.9779, 357.7518, 266.7254, 286.1807, 199.2522, 206.0105, 137.9355, 162.3704, 512.1163, 390.375, 966.3793, 455.3818, 1170.2062, 1012.1111, 1134.0816, 657.3293, 605.6604, 98.1765], [0.0, 146.8, 220.1474, 195.3548, 77.1111, 143.2459, 1104.9612, 1150.7083, 2437.2414, 1916.3818, 1894.8247, 250.3571, 1286.2667, 2425.3061, 1722.2195], [600.9871, 95.5915, 405.3373, 567.8522, 516.8947, 436.0323, 1288.1148, 1070.4651, 506.8542, 2431.7931, 1534.1273], [1175.7797, 358.3761, 334.4232, 116.6408, 183.5422, 296.3913, 198.8316, 149.3226, 178.1111, 1293.75, 1048.7586, 1241.8545, 1486.5979, 348.6429, 942.6444, 1836.5102, 535.4146, 3004.1132, 603.3235], [984.4237, 349.5, 362.2812, 193.9366, 163.6386, 436.8783, 345.1684, 83.0161, 115.1852, 1513.6721, 1123.5349, 877.5, 1646.931, 1519.4364, 1742.7629, 62.1429, 947.9, 1631.8571, 1015.2317, 527.8113, 2480.2941], [1002.661, 1416.4558, 497.3142, 548.7676, 721.3976, 185.0174, 234.9895, 134.4194, 360.4815, 134.4574, 908.9583, 1892.0, 2439.9091, 3196.8969, 1960.9444, 2756.6939, 2906.7805, 112.8679, 898.6765], [681.5763, 905.2788, 476.9857, 627.7887, 126.8434, 192.6609, 475.6105, 136.4516, 420.6667, 2435.9344, 583.814, 1902.8958, 2351.1724, 2536.0364, 2893.5052, 260.4286, 1834.8889, 2841.5714, 1513.9024, 662.8491, 2676.9118], [2216.8136, 521.0088, 458.911, 400.3873, 522.7952, 881.8609, 609.4947, 408.3871, 504.2222, 2831.1311, 1140.7907, 1786.6667, 1638.9655, 1039.2182, 2268.4227, 277.75, 1227.5778, 2181.6122, 1639.3293, 3771.3774, 1429.4118], [2725.7119, 675.2434, 467.2353, 356.0986, 207.6024, 201.1217, 425.6737, 60.1452, 214.5185, 2488.7869, 291.1318, 1663.0417, 2220.6897, 2680.5818, 2891.7526, 2349.3444, 5206.6939, 1910.0976, 530.2642, 607.7647], [1019.0885, 988.5136, 471.3451, 58.6145, 396.9913, 202.4, 153.2581, 2777.5246, 1309.6047, 2918.1856, 243.6071, 2733.1778, 2169.9796, 2463.8902, 411.2642, 2625.0], [2199.5932, 1709.2478, 857.8852, 249.4366, 421.1928, 67.2087, 319.2105, 203.371, 197.7778, 320.2623, 17.7829, 1267.8125, 2220.8966, 1837.8545, 3133.9278, 129.4286, 1664.9, 3788.0612, 2656.9512, 405.9434, 1881.1765], [3682.1864, 75.2035, 519.7202, 145.7535, 147.7831, 254.1913, 487.5684, 108.1935, 179.5926, 1280.8525, 1414.9302, 2310.9583, 4323.931, 3389.8364, 4551.1856, 70.7857, 1705.5556, 2579.2245, 2404.4756, 1459.8868, 1305.1176], [3462.1695, 1889.0221, 980.1894, 4131.3934, 414.969, 1894.25, 3270.2759, 1991.2545, 3173.4227, 2297.7, 4497.1429, 2988.0488, 180.2642, 2141.2353], [3098.5763, 1852.7257, 843.6628, 878.7535, 259.2169, 210.1565, 700.1895, 214.7258, 1126.2222, 2706.4918, 2675.1395, 1766.6667, 4479.8276, 2488.7455, 4863.1031, 302.1071, 3785.6444, 5218.5918, 2922.7439, 2050.3824], [6658.4746, 1517.9602, 689.5638, 282.4225, 187.8795, 250.5565, 234.5579, 2953.4426, 2527.1705, 3333.5833, 5284.2069, 2594.0909, 4897.0412, 83.5357, 3839.9, 3693.5306, 3973.122, 1244.8491, 3553.5294]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

