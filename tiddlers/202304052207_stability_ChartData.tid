created: 20230405220700000
creator: Drevarr
modified: 20230705163524577
modifier: drevarr
tags: ChartData
title: 202304052207_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaylen Harker", "Grasszanine", "Xanvias Tlesel", "Ryvalia Fazebringer", "Mistwalker Caelon", "Kos\u00e4ir", "Sassy Daddy Demon", "Raelyn Sunray", "Kiloak", "Sygaldry Verdandi", "Xyntharos", "Solus Sanctus", "Sister Elon\u00edth", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Spellbreaker", "Berserker", "Chronomancer", "Vindicator", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.6491, 2.5185, 13.8659, 4.9012, 0.0, 4.289, 4.5402, 2.3834, 4.9603], [0.0, 0.0, 0.0, 5.3044, 0.0, 0.0, 0.0, 1.0433, 0.9588, 2.352, 1.5582, 0.0, 5.5341, 0.0, 0.0, 3.3212, 0.0, 0.0, 6.6528, 7.2657, 2.2315, 2.1204, 2.1244, 0.0, 1.4508], [1.4, 0.0, 2.3506, 3.3502, 1.1994, 0.0, 0.0, 1.1302, 1.5228, 0.0, 0.6233, 0.0, 5.8747, 2.1314, 1.0296, 2.0102, 1.0718, 0.0, 2.1168, 8.3959, 1.0819, 2.9016, 1.0622, 0.0, 4.6872], [3.1671, 0.0, 0.0, 5.2114, 0.0, 0.0, 2.7417, 3.9992, 2.9046, 1.5053, 0.0, 0.0, 4.0016, 1.903, 2.1965, 0.0, 1.885, 2.1294, 6.048, 1.9375, 0.0, 5.58, 1.4871, 0.0, 7.812], [1.4688, 0.0, 2.1827, 9.5852, 1.5096, 0.0, 0.0, 0.0, 2.2842, 0.0, 3.5319, 0.0, 7.918, 2.512, 0.755, 2.622, 0.0, 0.0, 5.1408, 8.3959, 0.0, 6.6402, 1.9651, 0.0, 2.6784], [4.9572, 1.4643, 1.3432, 4.5599, 1.6544, 0.0, 0.9337, 1.2751, 3.102, 0.0314, 1.6881, 0.0, 9.4505, 0.0, 2.7685, 5.9432, 0.0, 0.0, 10.584, 9.2032, 0.0, 1.5066, 0.0, 0.0], [0.0, 0.0, 0.0, 10.1435, 2.3989, 2.2082, 2.4053, 5.0478, 1.6307, 0.0, 0.0, 14.3035, 5.0239, 1.716, 3.1464, 1.0534, 2.9659, 3.3264, 2.4219, 0.0, 2.6226, 0.0, 0.0, 4.0176], [0.6655, 0.4118, 0.8059, 6.5142, 2.6677, 0.2964, 4.0572, 0.423, 0.2195, 3.2722, 0.2737, 11.1533, 1.0657, 2.2422, 10.1384, 4.3613, 5.7798, 14.2128, 5.0053, 0.541, 5.301, 0.6904, 0.0, 5.4684], [0.0, 0.0, 3.5595, 11.5394, 4.0533, 2.4407, 0.0, 2.7354, 0.0, 2.3113, 11.9196, 6.9269, 1.899, 6.6424, 4.2689, 0.0, 6.6528, 15.6616, 3.674, 8.4816, 8.2852, 5.3956, 11.718], [1.0557, 0.0, 1.0074, 15.1688, 1.2615, 0.0, 2.8751, 1.8837, 3.807, 3.9514, 2.2854, 1.0948, 15.6658, 5.4045, 4.0498, 12.4982, 2.0882, 0.0, 13.3056, 10.9793, 3.6966, 4.9662, 4.6737, 1.3423, 9.0396], [4.0621, 0.0, 0.0, 17.5883, 1.8405, 0.0, 2.1637, 1.1012, 1.6638, 0.0, 1.6361, 0.0, 13.1116, 8.906, 0.0, 6.0306, 1.7556, 5.8559, 12.3984, 20.021, 3.1331, 11.3832, 7.3823, 0.0, 24.3288], [6.2195, 0.0686, 3.8953, 24.754, 6.2454, 0.0, 0.0, 3.9992, 6.4578, 0.0, 5.2459, 0.8568, 7.918, 8.6016, 3.5006, 9.8762, 1.1642, 3.4983, 22.8312, 20.5054, 1.7581, 8.7606, 9.1349, 1.7371, 11.2716], [20.5187, 14.615, 5.8115, 15.5572, 4.7494, 9.8105, 32.6592, 30.8389, 4.4178, 12.4434, 10.6751, 4.0796, 14.7312], [2.754, 2.2194, 5.3056, 22.7997, 5.6456, 0.0, 3.2011, 4.8107, 4.3992, 3.4182, 4.7265, 0.1428, 26.0528, 8.8299, 4.0269, 9.5266, 3.8438, 8.0613, 40.5216, 33.0993, 4.4629, 8.7606, 8.3383, 2.1319, 17.7444], [7.2752, 3.2237, 23.1719, 6.5556, 0.0, 4.2385, 6.3756, 3.8352, 0.0, 4.9343, 18.3051, 16.518, 2.5854, 13.11, 2.4948, 8.8979, 32.508, 26.1565, 7.8665, 12.8898, 10.3565, 4.0006, 21.5388], [6.7932, 0.8923, 3.1565, 26.1499, 4.3842, 2.0434, 3.1567, 8.2303, 7.8678, 7.4323, 7.3495, 21.5404, 22.9882, 6.1547, 15.732, 3.7514, 10.4949, 38.2536, 31.3232, 7.1903, 16.74, 12.534, 3.1847, 29.016]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

