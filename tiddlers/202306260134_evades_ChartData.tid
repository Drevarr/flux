created: 20230626013408000
creator: Drevarr
modified: 20230705163538823
modifier: drevarr
tags: ChartData
title: 202306260134_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Aira Draugr", "Warrior Constantine", "Smol Gluvs", "Bartirian Norpher", "Zhavashian", "Obsidian Stormbow", "Blanco Padre Guard", "Lucky Leipreach\u00e1n", "Sumatra Satyricon", "Taery Shimui", "Axunar", "Tootsie Pop Rocks", "Minka Bringer", "Mister Jekyll", "Sub Train", "Morv\u00e4rth", "Sygaldry Verdandi", "Newtype Khan", "Xanvias Einzbern", "Crusader Siolith", "Fuuko Kazari", "Belvyn Brightblade", "Fribble Bibble", "Tika Fiery", "Cat Wigglebooty", "Be\u00eb", "Bella Sassy", "Lord Erin The Wise", "Rosie Sunray", "Melli Dragonswrath", "No Reserv\u00e9", "Drevarr Moonwillow", "Tegan Parker", "Gestern Yesteryear", "Koralia Danai", "Miphest\u00f6", "Traidoruns Maximus", "Primal Clone", "Artakama Nahid", "Solus Sanctus", "Venomina The Siren", "Ryvalia Fazebringer", "Kary\u00edna", "Aronorf Xideliesi", "Arcanophage Farra", "Elon The Archmagus", "Zayde Sunsabre", "Johosh The Mighty", "Mememonoko", "Mistwalker Cael"];
const professions = ["Berserker", "Herald", "Spellbreaker", "Reaper", "Berserker", "Tempest", "Soulbeast", "Dragonhunter", "Scrapper", "Soulbeast", "Reaper", "Dragonhunter", "Scrapper", "Scrapper", "Reaper", "Firebrand", "Reaper", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Reaper", "Firebrand", "Weaver", "Vindicator", "Berserker", "Vindicator", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Berserker", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 7, 12, 5, 4, 2, 0, 0, 0, 1, 21, 14, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0], [0, 3, 0, 28, 4, 0, 12, 16, 7, 5, 3], [11, 31, 3, 2, 0, 9, 12, 0, 11, 1], [6, 10, 4, 52, 1, 7, 9], [6, 3, 21, 2, 0, 21, 38, 3, 0], [12, 16, 7, 26, 14, 0, 2, 0, 17, 0, 10], [1, 1, 20, 1, 0, 40, 2, 8, 23, 13], [21, 2, 30, 6, 5, 6, 1, 4, 2, 4, 2, 5, 3, 0, 0, 0, 6, 0, 0, 3, 10], [4, 0, 26, 4, 0, 0, 0, 0, 6, 8, 0, 4, 22, 0, 0, 0, 2, 3, 9, 7, 9, 16, 5], [3, 2, 1, 0, 40, 3, 0, 16, 0, 2, 1, 7, 0, 1, 0, 4, 18, 0, 9, 19, 0], [28, 4, 15, 8, 19, 0, 0, 30, 5, 30], [0, 2, 1, 4, 0, 0, 0, 16, 3, 40, 9, 0, 9, 3, 1, 0, 0, 1, 7, 0, 4, 17, 1, 3, 0, 0, 0, 3, 7, 0, 23], [0, 8, 1, 0, 17, 1, 0, 4, 0, 2, 0, 6, 21, 0, 52, 0, 10, 0, 2, 10, 0, 0, 1, 1, 11, 1, 3, 0, 1, 2, 0, 1], [35, 5, 21, 17, 9, 0, 2, 23, 2, 4, 3, 7, 7, 0, 0, 14, 0, 0, 0, 10], [6, 3, 1, 0, 31, 0, 0, 32, 22, 21, 12, 7, 8, 6, 8, 3], [7, 3, 10, 37, 14, 9, 0, 0, 44, 9, 28, 5, 0], [2, 1, 0, 34, 3, 0, 0, 7, 10, 20, 20, 31, 2, 12, 13, 0, 0, 1, 9, 0, 0, 5, 4, 10, 13], [4, 0, 4, 38, 12, 0, 4, 28, 11, 0, 0, 0, 8, 0, 3, 0, 28, 2, 21, 0, 7, 1, 2, 5, 22], [7, 3, 6, 1, 14, 1, 1, 14, 6, 6, 8, 6, 16, 6, 7, 0, 29, 0, 2, 1, 3, 13, 4, 12, 0, 5, 2, 0, 35, 0, 8, 6, 1], [0, 0, 13, 1, 0, 20, 1, 5, 11, 3, 18, 0, 34, 13, 2, 0, 0, 0, 12, 0, 19, 15, 1, 12, 0, 8, 16, 10, 12, 3], [0, 24, 10, 13, 10, 3, 12, 9, 0, 20, 11, 19, 33, 2, 12, 6, 0, 10, 20, 0, 1, 16], [10, 36, 10, 25, 15, 1, 0, 13, 7, 5, 26, 14, 18, 5, 2, 0, 14, 25, 0, 0, 8], [10, 0, 0, 1, 54, 6, 19, 10, 3, 30, 11, 22, 15, 35, 9, 21, 0], [0, 0, 5, 0, 39, 1, 0, 39, 6, 22, 16, 2, 7, 11, 21, 11, 0, 0, 4, 12, 1, 46, 9, 7], [0, 0, 0, 0, 2, 7, 0, 15, 0, 0, 8, 13, 42, 5, 2, 26, 16, 0, 0, 5, 22, 0, 40, 4, 21, 3, 0, 0, 12, 12, 3, 0, 3], [1, 6, 0, 0, 29, 4, 0, 37, 1, 15, 1, 5, 40, 2, 23, 0, 3, 0, 0, 12, 0, 32, 24, 14, 0, 2, 0, 0, 11, 0, 6, 5], [4, 2, 0, 0, 23, 0, 0, 54, 2, 3, 18, 30, 5, 9, 24, 25, 0, 0, 0, 2, 4, 5, 20, 19, 21, 19], [0, 1, 4, 0, 8, 0, 0, 4, 13, 23, 16, 30, 28, 0, 4, 23, 0, 0, 1, 20, 4, 23, 23, 7, 1, 0, 0, 13, 27, 1, 7, 11], [2, 7, 8, 0, 58, 7, 17, 2, 26, 15, 16, 1, 0, 27, 21, 0, 0, 1, 6, 11, 3, 32, 10, 8, 0, 0, 2, 2, 0, 12], [0, 31, 25, 2, 24, 4, 23, 37, 26, 13, 20, 2, 6, 31, 32, 14, 7], [4, 1, 4, 0, 16, 3, 0, 12, 23, 13, 50, 20, 10, 5, 8, 7, 0, 0, 0, 4, 22, 44, 8, 3, 11, 1, 0, 0, 30, 1, 0, 0, 5], [0, 9, 0, 1, 26, 0, 0, 43, 25, 8, 13, 18, 18, 7, 22, 11, 28, 0, 0, 23, 1, 7, 14, 23, 4, 10], [0, 4, 1, 0, 26, 3, 0, 27, 6, 11, 15, 5, 16, 1, 28, 8, 1, 0, 0, 5, 18, 7, 22, 9, 2, 26, 0, 0, 32, 6, 18, 15, 3], [34, 1, 17, 4, 29, 16, 8, 10, 17, 3, 1, 14, 4, 9, 22, 5, 2, 0, 0, 0, 3, 106, 1, 14, 0], [1, 31, 11, 7, 28, 5, 45, 9, 5, 25, 4, 1, 14, 7, 20, 32, 2, 4, 21, 0, 0, 24, 12, 13, 14, 7], [3, 1, 3, 0, 20, 3, 0, 27, 28, 18, 40, 4, 7, 13, 15, 26, 0, 0, 9, 8, 16, 10, 25, 2, 12, 0, 0, 14, 1, 13, 6, 22], [3, 10, 1, 2, 21, 0, 0, 58, 7, 7, 3, 11, 37, 15, 24, 16, 38, 0, 3, 12, 4, 41, 16, 0, 0, 2, 0, 19, 12], [0, 4, 0, 31, 4, 0, 56, 6, 5, 33, 7, 42, 6, 28, 10, 19, 0, 0, 1, 28, 31, 5, 11, 0, 14, 0, 14, 35], [17, 6, 0, 0, 33, 0, 0, 23, 16, 6, 22, 17, 24, 10, 42, 36, 15, 0, 3, 2, 0, 20, 25, 3, 6, 2, 0, 33, 3, 7, 24, 0], [3, 1, 0, 1, 10, 0, 0, 18, 6, 9, 35, 6, 0, 0, 28, 9, 0, 1, 29, 10, 10, 68, 18, 34, 31, 0, 6, 17, 2, 44, 0], [9, 2, 5, 1, 61, 0, 0, 34, 8, 9, 29, 33, 32, 3, 38, 9, 2, 3, 1, 6, 9, 54, 13, 2, 7, 2, 0, 4, 9, 16, 23, 15], [34, 0, 6, 80, 6, 16, 7, 98, 56, 13, 0, 29, 2, 4, 9, 22, 26, 0, 0, 0, 10, 6, 3, 12, 1], [5, 2, 4, 1, 38, 6, 0, 58, 10, 56, 55, 14, 14, 10, 28, 32, 0, 0, 21, 23, 0, 20, 30, 2, 0, 1, 0, 8, 11, 0, 0, 1], [35, 2, 22, 2, 90, 13, 0, 74, 4, 26, 16, 15, 51, 4, 27, 0, 1, 0, 2, 2, 0, 5, 19, 3, 6, 22, 0, 0, 0, 11, 8, 6, 7], [14, 5, 3, 1, 55, 10, 0, 41, 8, 11, 38, 31, 36, 12, 26, 14, 5, 0, 1, 4, 27, 11, 28, 16, 28, 4, 1, 0, 29, 16, 12, 9, 5], [3, 11, 2, 0, 56, 2, 0, 68, 19, 1, 54, 31, 6, 9, 20, 7, 9, 0, 1, 6, 8, 4, 70, 26, 28, 12, 4, 4, 19, 15, 11, 3], [0, 1, 3, 0, 27, 14, 1, 31, 8, 11, 10, 89, 32, 9, 17, 17, 10, 0, 0, 13, 10, 13, 30, 96, 15, 15, 0, 1, 13, 19, 22, 38, 4], [7, 8, 0, 0, 47, 3, 0, 47, 0, 28, 15, 42, 0, 0, 26, 70, 6, 0, 9, 5, 6, 10, 56, 32, 18, 17, 0, 0, 33, 26, 28, 38, 5], [4, 10, 4, 1, 74, 1, 1, 49, 24, 23, 21, 35, 15, 8, 44, 30, 27, 2, 3, 28, 5, 37, 26, 26, 4, 0, 2, 19, 7, 9, 42, 10], [21, 7, 0, 83, 3, 1, 28, 19, 6, 0, 31, 33, 19, 37, 21, 7, 0, 1, 11, 10, 11, 27, 4, 73, 2, 39, 19, 46, 43, 9], [0, 39, 33, 25, 16, 28, 28, 3, 45, 24, 10, 0, 1, 37, 27, 23, 57, 14, 19, 48, 0, 0, 8, 20, 33, 101, 44]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

