created: 20230224230708000
creator: Drevarr
modified: 20230705163520060
modifier: drevarr
tags: ChartData
title: 202302242307_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Luck Engi", "Skye Nightroad", "Air One Com", "Dark Sidiuz", "Gavann", "Sassy Daddy Demon", "R\u00fana Bierdna", "Aronorf Xideliesi", "Tegan Parker", "Newtype Khan", "Bella Sassy", "Mistwalker Caelon", "Arriasa", "Abigail Ryn", "Project Jupiter", "Kahless The Drunk", "Lord Erin The Wise", "Venomina The Siren", "Mike The Archmagus", "Zadie Miststep", "Xanvias Tseli", "Husky Guard", "Burnhard Riemann", "Arcanophage Farra"];
const professions = ["Scrapper", "Scrapper", "Firebrand", "Scourge", "Firebrand", "Vindicator", "Spellbreaker", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Vindicator", "Druid", "Tempest", "Druid", "Firebrand", "Weaver", "Tempest", "Tempest", "Tempest", "Berserker", "Dragonhunter", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9227, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [11.954, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.054, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.1387, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0675, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 8.8631, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 5.9578, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.1667, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1423, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 23.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9744, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.4792, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [6.8159, 11.987, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.9101, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 5.2136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9952, 0.0, 0.0, 11.957, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.9222, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0912, 0.0, 0.0, 0.0, 0.0, 11.9335, 0.0, 0.0], [0.0, 0.0, 10.2206, 0.0, 0.0, 0.0, 0.0, 9.2665, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9232, 0.0, 0.0, 0.0], [19.9234, 0.0, 0.0, 0.0, 15.9264, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.1057, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.5618, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9232, 11.9937, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.7758, 11.9568, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9472, 0.0, 0.0, 0.0], [14.995, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9984, 0.0, 0.0, 0.0, 0.0, 10.5072, 0.0, 0.0, 0.0, 4.6426, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9922, 0.0, 0.0, 16.1014, 0.0, 15.68, 0.0, 0.0, 0.0], [0.0, 16.0181, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.8472, 15.9922, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 33.5289, 15.9158, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.1115, 14.9984, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.53, 11.9189, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 23.8464, 0.0, 0.0, 0.0], [0.0, 1.6973, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0922, 0.0, 17.8622, 0.0, 0.0, 0.0, 13.1688, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.7936, 0.0, 0.0, 15.1537], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0597, 11.982, 0.0, 0.0, 0.0, 0.0, 14.9011, 0.0, 0.0, 0.0, 0.0, 0.0, 14.2166, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9472, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.982, 0.0, 0.0, 0.0, 0.0, 0.0, 5.9222, 0.0, 11.088, 0.0, 0.0, 0.0, 0.0, 11.9795, 0.0, 0.0, 0.0, 23.8336, 0.0, 11.9976]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

