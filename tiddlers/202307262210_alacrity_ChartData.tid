created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Name Is What", "My Birthday Girl", "Il Dim Il", "Kahlianne", "Drevarr Moonwillow", "Bork Borkbringer", "Tegan Parker", "Venomina The Sly", "Zaedy Zae", "Klengah", "Tribal S", "Arriasa"];
const professions = ["Scourge", "Scrapper", "Scourge", "Scourge", "Scrapper", "Tempest", "Tempest", "Druid", "Druid", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.0477, 11.3602, 8.1101, 19.8451, 0.0, 1.692, 13.9444, 6.7133, 1.2348, 56.279, 20.0079, 10.7987, 7.2422, 10.3968, 19.4035, 0.0, 53.3767, 34.6277, 0.0, 8.185, 25.2448, 0.0, 10.8562, 1.2403, 18.1397, 19.6195], [0.0, 10.8192, 0.0, 18.8333, 0.0, 0.0, 58.9764, 74.255, 24.6813, 10.3363, 0.0, 40.7778, 15.6348, 0.0, 2.7379, 5.4446, 18.7488, 0.0, 43.6316, 21.217, 0.0, 0.0, 1.0427, 0.0, 13.0334, 0.0, 29.2781, 0.0], [3.415, 13.0732, 0.0, 21.6403, 27.216, 0.0, 41.3335, 25.681, 0.0, 43.9898, 34.3269, 16.0477, 17.929, 12.7498, 38.9856, 0.0, 41.8597, 37.0963, 0.0, 0.0, 21.8422, 5.8531, 18.7488, 1.2403, 9.335, 0.0], [34.5787, 18.4338, 59.072, 8.4753, 14.0022, 23.9789, 14.4734, 11.4874, 0.0, 54.0411, 37.897, 7.7328, 9.2986, 32.928, 7.8624, 6.804, 20.6477, 42.9624, 61.609], [0.0, 21.6384, 9.4054, 44.1619, 0.0, 16.9905, 34.986, 125.2877, 39.4901, 19.8202, 0.0, 180.0088, 41.4864, 12.9946, 16.9133, 2.9822, 5.8925, 0.0, 45.4034, 35.495, 7.2432, 6.7373, 21.7874, 0.0, 0.0, 0.0, 42.6442, 0.0], [88.0207, 129.2894, 49.0406, 76.2144, 126.3008, 163.0348, 269.2666, 105.4857], [27.5808, 0.0, 0.0, 75.5198, 117.7546, 43.1744, 83.0102, 130.7124, 119.9594, 37.5003, 0.0, 30.6029, 37.4285, 113.1475, 0.0, 237.0943, 113.424, 0.0, 33.2131, 41.9283, 0.0, 91.7482, 0.0, 204.7344, 79.6699], [64.7352, 0.0, 326.3621, 193.8096, 94.8874, 94.8557, 75.3768, 247.9603, 269.7626, 123.2986, 0.0, 0.0, 96.6986, 0.0, 61.0848, 0.0, 112.657, 0.0], [148.0427, 0.0, 131.7677, 51.5743, 56.6468, 191.5234, 244.9114, 59.8432, 95.904, 0.0, 192.298, 121.3245, 77.9373, 52.4179, 90.3701, 141.6576, 0.0, 401.1003, 220.3762, 0.0, 0.0, 115.1382, 96.4205, 69.2194, 23.1283, 314.5272, 284.9414], [86.402, 319.527, 81.847, 80.0333, 0.0, 108.1822, 163.5346, 85.0166, 147.4082, 67.9853, 182.0448, 455.9572, 190.7523, 0.0, 85.7146, 80.7941, 105.3504, 41.083, 469.3161, 24.8198, 0.0, 162.2515, 126.224, 61.9133, 132.9955, 147.9264, 442.3536, 386.9813], [108.3923, 199.0733, 0.0, 114.697, 0.0, 113.7165, 282.6369, 337.1779, 194.6603, 139.2739, 118.8054, 439.3389, 206.9289, 131.3443, 195.0547, 113.1062, 261.1738, 522.1391, 433.68, 0.0, 66.1757, 127.7058, 0.0, 91.1434, 0.0, 284.6126, 370.1122], [0.0, 273.9061, 183.2736, 0.0, 119.7795, 201.2695, 205.284, 127.0195, 142.2666, 686.5194, 143.3914, 245.3971, 184.6253, 377.8925, 90.51, 773.8511, 513.4104, 85.9699, 243.8867, 0.0, 176.5411, 0.0, 482.8762, 415.127]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

