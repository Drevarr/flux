created: 20230417215912000
creator: Drevarr
modified: 20230705163525769
modifier: drevarr
tags: ChartData
title: 202304172159_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Tegan Parker", "Venomina The Siren", "Daddy Demon", "Mac Chiato", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[163.9756, 0.0, 56.9027, 19.9318, 23.9081, 20.0336, 75.0504, 15.1733, 57.9764, 46.7832, 0.0, 47.6177, 39.5577, 75.1322, 86.2199, 0.0, 20.0866, 19.4016, 42.6067, 20.0475, 23.7864, 67.989, 19.7597, 18.8957, 64.8339, 10.486], [49.5331, 155.8078, 136.1803, 0.0, 104.8272, 135.8721, 81.3189, 217.3419, 0.0, 20.1221, 142.0359, 59.305, 40.0464, 166.056, 98.2724, 94.7239, 77.9758, 102.9931, 118.5202, 20.0165], [354.8933, 157.0783, 0.0, 114.7923, 20.0336, 112.3443, 16.0906, 139.9369, 126.145, 121.1971, 45.2907, 99.3024, 131.7086, 0.0, 16.0906, 50.0448, 20.0475, 68.9357, 46.4373, 56.6597, 0.0, 51.9048, 69.5158, 30.3065], [258.7494, 172.9141, 244.2572, 0.0, 20.1221, 181.3241, 55.6858, 141.6413, 175.1917, 156.3639, 107.2672, 135.9634, 181.1692, 99.519], [0.0, 0.0, 0.0, 36.1226, 628.2633, 0.0, 173.9853, 19.9318, 111.329, 27.1558, 205.0875, 0.0, 0.0, 141.8911, 115.8672, 0.0, 99.3705, 120.9663, 151.68, 102.7731, 0.0, 26.0006, 112.0442, 0.0, 132.2165, 165.8645, 65.1651, 65.3098, 131.1422, 139.4775, 38.269], [11.8714, 18.7044, 19.969, 91.9164, 921.3754, 0.0, 302.6122, 30.7718, 192.1584, 122.5343, 220.5255, 88.2118, 182.8714, 114.2674, 135.7339, 191.1955, 226.2879, 218.2543, 0.0, 20.1221, 101.4946, 74.231, 0.0, 159.2342, 78.3877, 130.5889, 88.094, 142.4563, 139.9234, 75.1415]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

