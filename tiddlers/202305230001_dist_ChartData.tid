created: 20230523000132000
creator: Drevarr
modified: 20230705163531174
modifier: drevarr
tags: ChartData
title: 202305230001_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Primal Clone", "M\u00e4raas", "Tootsy Pop Star", "Cyclotechnist Farra", "Blanco Padre Guard", "Elonith Primal", "Fribble Bibble", "Kmpek", "Kaye X Kaye", "Mayauraa", "Binkety Bonk", "Soxxdodendron", "Black Raspberry Pie", "Smol Gluvs", "Drevarr Moonwillow", "Crusader Siolith", "Be\u00eb", "Koralia Danai", "My Birthday Girl", "Xanvias Einzbern", "Grasszanine", "Bella Sassy"];
const professions = ["Druid", "Chronomancer", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Tempest", "Scrapper", "Vindicator", "Vindicator", "Dragonhunter", "Scrapper", "Willbender", "Chronomancer", "Scourge", "Scrapper", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Berserker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1201, 543, 1179, 1728, 708, 515, 429, 342, 211, 686, 342], [1299, 256, 1126, 2818, 754, 586, 379, 319, 314, 371, 301], [720, 467, 954, 2776, 338, 574, 539, 337, 762, 433, 904], [929, 518, 607, 4872, 1593, 479, 457, 341, 704, 827, 5420], [5118, 690, 911, 2962, 482, 1580, 625, 13599, 306, 423, 327], [1311, 658, 1046, 2281, 1076, 556, 487, 282, 293, 251, 468], [376, 348, 1187, 865, 1215, 501, 555, 4495, 438, 1094, 391], [693, 876, 928, 3946, 8244, 347, 512, 4975, 609, 279], [400, 866, 622, 2768, 1303, 473, 375, 17377, 622, 593, 351], [3695, 834, 2960, 591, 573, 588, 4558, 269, 382, 5589], [37838, 713, 837, 21749, 269, 344, 8902], [439, 517, 501, 1440, 698, 386], [594, 724, 1059, 3157, 684, 503, 441, 232, 289, 274, 219], [1011, 320, 824, 4026, 4178, 612, 325, 322, 593, 219, 323], [635, 262, 798, 442, 597, 642, 448, 274, 281, 260], [582, 667, 829, 268, 550, 440, 564, 263, 1388, 291], [509, 497, 920, 3367, 569, 326, 763, 322, 228, 622, 303], [843, 888, 1023, 4473, 844, 541, 349, 291, 423, 257, 270], [325, 567, 847, 339, 915, 443, 435, 278, 456, 3751], [598, 551, 12018, 1696, 859, 460, 311, 754, 215, 1825], [672, 336, 821, 18517, 560, 309, 354, 238, 551, 322, 224], [696, 293, 887, 292, 501, 410, 310, 438, 443, 335], [168, 195, 878, 215, 588, 274, 219, 210, 253, 198]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

