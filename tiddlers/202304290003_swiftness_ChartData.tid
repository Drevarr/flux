created: 20230429000309000
creator: Drevarr
modified: 20230705163527335
modifier: drevarr
tags: ChartData
title: 202304290003_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Rucola", "Primal Clone", "Arriasa", "Tegan Parker", "Venomina The Siren", "Zadie Miststep", "Kos\u00e4ir", "Air One Com", "Blancooo Padreee", "Newtype Khan", "Koralia Danai", "Miphest\u00f6", "Aronorf Xideliesi", "Viral Marketing", "Sister Elon\u00edth", "Drevarr Moonwillow", "Demon Sekhmet", "Johosh The Great", "Bella Sassy"];
const professions = ["Chronomancer", "Chronomancer", "Druid", "Tempest", "Tempest", "Tempest", "Herald", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.47, 45.0848, 0.0, 0.0, 294.7217, 117.8419, 0.0, 20.8058, 0.0, 0.0, 121.5179, 0.0, 0.0, 168.1571], [0.0, 142.3568, 16.2725, 19.7851, 3.7976, 0.0, 40.2371, 0.0, 0.0, 190.5597, 31.95, 0.0, 374.0045], [20.9453, 37.5192, 56.3584, 223.0326, 17.9525, 128.6174, 0.0, 0.0, 0.0, 0.0, 1.1092, 14.7748, 343.7234], [71.2285, 79.516, 23.4776, 93.7868, 55.8138, 15.9075, 113.4012, 0.0, 95.6153, 0.0, 0.0, 483.8543], [131.437, 277.9972, 83.1637, 0.0, 292.1522, 242.8188, 13.532, 194.3753, 38.3112, 1.5547, 41.2794, 0.0, 0.5953, 257.0677], [135.8888, 141.276, 1.1296, 0.0, 354.334, 10.7024, 58.2002, 213.869, 5.8344, 104.6845, 0.0, 0.0, 0.0, 729.325], [525.7197, 27.5617, 0.0, 146.0158, 426.0336, 497.7695, 0.0, 155.3132, 0.0], [29.338, 55.5068, 63.3192, 548.5883, 50.5777, 0.0, 12.2461, 0.0, 35.9529, 11.6014, 0.0, 143.9592, 863.9795], [187.1207, 160.1128, 0.0, 74.4173, 528.0323, 180.2153, 0.0, 61.043, 234.9672, 104.3606, 141.2943, 69.8463, 194.1826, 642.3472], [195.5864, 268.1156, 85.1787, 27.3773, 398.7864, 103.0541, 13.7017, 106.2785, 120.4824, 147.8927, 90.9766, 124.4108, 218.3742, 872.9994], [237.7688, 249.8964, 65.67, 833.2889, 161.112, 77.4165, 73.6639, 69.7272, 383.8863, 7.4195, 0.0, 138.9802, 816.947], [497.7236, 560.9352, 70.2495, 310.6526, 226.535, 74.235, 235.1122, 8.3232, 388.4857, 12.2219, 62.3286, 287.0525, 668.7626], [262.1442, 13.2012, 179.9743, 87.7923, 797.0589, 214.1639, 0.0, 380.5657, 117.1776, 33.2969, 227.1446, 75.3613, 282.6146, 890.395], [144.5901, 1461.5316, 414.4606, 252.6535, 291.9066, 155.2848, 445.0386, 151.7625, 58.5082, 249.0602], [556.1806, 517.0084, 64.9373, 90.8186, 1255.9716, 367.9683, 214.8149, 242.7348, 131.7024, 360.8894, 53.933], [218.0642, 285.4084, 63.8993, 84.5622, 1065.8286, 141.2032, 98.2447, 330.2068, 154.224, 138.694, 103.846, 154.2657, 198.6204, 1583.6402], [477.1432, 332.8092, 159.5498, 71.5322, 900.3528, 359.7976, 390.9003, 422.2398, 97.9608, 303.6886, 0.0, 250.6702, 366.7171, 1061.4513], [425.7653, 473.4676, 254.0401, 97.4982, 1138.2885, 318.7716, 172.3949, 302.4657, 0.0, 160.784, 203.9418, 140.3704, 322.6634, 1646.7797], [483.2736, 772.386, 78.92, 88.3568, 1286.5486, 445.4747, 322.7314, 276.474, 222.2376, 549.1401, 94.403, 179.1293, 546.7744, 1841.0301]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

