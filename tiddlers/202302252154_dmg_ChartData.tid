created: 20230225215428000
creator: Drevarr
modified: 20230705163520230
modifier: drevarr
tags: ChartData
title: 202302252154_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Skywalker Folk", "Prince Valentin X", "Roided Barack", "Oo Dads Mad", "Tegan Parker", "Viral Marketing", "Primal Clone", "Vopiscus Zergherdus", "Hyde En Sikh", "Blanco Padre Guard", "Koralia Danai", "Zadie Miststep", "Bella Sassy", "Cat Wigglebooty", "Blackchars", "Sizklea", "Sygaldry Verdandi", "Newtype Khan", "Tribal S", "Aronorf Xideliesi", "Grasszanine", "Mac Aaroni", "Venomina The Fierce", "Gabe Malhorn", "Drevarr Moonwillow", "Zanos V", "Tootsie Pop Tart", "Nekroomori", "Grasszanine", "Sumatra Satyricon", "Ace Hammers", "Daring Deathblade", "Madrigal Moonshade", "Sofya De Nova", "Nekroomori", "Smol Gluvs", "Husky Guard", "Morv\u00e4rth", "Viral Marketing", "Sparks Malefacio", "Sassy Daddy Demon", "Harry Callahann", "Be\u00eb", "Xyntharos", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Reaper", "Druid", "Tempest", "Spellbreaker", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Renegade", "Firebrand", "Firebrand", "Spellbreaker", "Druid", "Firebrand", "Berserker", "Tempest", "Spellbreaker", "Firebrand", "Scrapper", "Berserker", "Scrapper", "Scourge", "Spellbreaker", "Soulbeast", "Vindicator", "Scourge", "Vindicator", "Weaver", "Reaper", "Scourge", "Dragonhunter", "Scourge", "Willbender", "Scourge", "Vindicator", "Scrapper", "Scourge", "Vindicator", "Weaver", "Berserker", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.6647], [9.4286, 14.1734, 64.4507], [0.0, 123.4085], [142.8718], [1.6667, 0.0, 1.2381, 47.9146, 44.33, 2.3019, 4.3875, 0.0, 2.0857, 0.0, 0.6197], [35.7714, 8.7572, 163.507], [3.6795, 0.3651, 32.7073, 60.55, 0.4906, 17.225, 0.5, 0.0, 0.0, 21.9859], [51.7866, 0.82, 41.9623, 0.0, 43.4464, 0.0, 0.7919, 83.507], [3.0256, 115.1429, 0.0, 18.6646, 24.43, 0.0, 115.1875, 5.5536, 0.0, 0.0, 2.8873], [0.0, 1.4286, 7.0, 14.9634, 11.24, 2.2642, 125.7, 0.0, 2.3237, 201.1549], [0.0, 12.3714, 82.5397, 3.7134, 13.56, 0.0, 111.7375, 5.9107, 0.0, 0.0, 182.0704], [18.6795, 130.1143, 23.0, 79.5061, 30.39, 15.7736, 4.4875, 0.9464, 29.5143, 0.0, 64.4366], [12.9103, 443.0286, 25.4603, 37.6341, 10.07, 8.8302, 0.125, 47.8929, 0.0, 1.8555, 171.338], [43.7051, 25.5429, 6.1746, 79.0549, 36.63, 6.8679, 43.875, 8.3036, 144.5429, 3.3931, 166.6197], [185.2179, 140.9429, 119.4921, 0.0, 123.566, 72.35, 122.4107], [5.1282, 31.5429, 194.4444, 29.0305, 165.5, 184.6038, 23.4875, 45.1071], [242.7308, 89.1429, 14.3016, 59.4634, 0.0, 164.3962, 23.8375, 45.8214, 0.0, 58.3099], [80.7692, 0.0, 6.1587, 101.878, 127.86, 103.717, 31.5625, 22.625, 0.0, 0.0, 93.3521], [28.7564, 3.9714, 70.5873, 63.0549, 67.82, 80.9434, 92.525, 19.9107, 0.0, 0.8613, 229.4085], [126.2051, 0.0, 38.1905, 66.1951, 38.48, 15.0755, 5.55, 156.9643, 0.0, 243.0845], [767.7042], [125.7821, 17.3714, 0.0, 109.872, 74.32, 4.6038, 12.05, 55.7679, 27.2857, 2.1098, 208.1549], [105.0366, 111.34, 115.3396, 69.5375, 89.3214, 37.9143, 13.5029, 132.2817], [9.1538, 304.0, 95.7143, 28.811, 78.46, 1.6604, 45.875, 15.0357, 77.3429, 2.7803, 288.7887], [172.2436, 201.8857, 20.873, 52.6463, 62.65, 8.566, 11.5375, 95.625, 67.2, 8.6532, 244.8028], [985.8592], [315.1795, 0.0, 31.4024, 24.6, 3.4717, 0.0, 0.0, 505.0, 11.1503, 450.8732], [75.1667, 436.94, 230.6604, 524.3875], [197.5641, 81.6857, 0.0, 276.7988, 262.93, 346.8491, 193.9875, 225.5179, 3.1445], [50.7692, 350.6857, 0.0, 166.3232, 196.78, 328.7547, 0.05, 68.1964, 62.9143, 11.8902, 714.2958], [311.0641, 82.0571, 139.3968, 349.1159, 316.13, 0.0, 113.6875, 517.875, 0.0, 498.9296], [130.5385, 23.7429, 229.9365, 323.8293, 538.2, 348.3396, 369.025, 379.8036], [104.8846, 0.0, 220.8254, 283.7195, 68.6, 245.0377, 716.325, 495.1071, 9.4566, 403.4789], [3437.1143, 1348.6984], [97.9714, 1099.8413, 192.6463, 1008.5714, 1446.9143, 0.0, 0.0], [478.9487, 125.5397, 377.1646, 346.98, 605.7925, 374.8125, 63.7857, 532.0, 849.0423], [731.1667, 840.2286, 257.7778, 570.0366, 461.12, 316.6415, 299.1125, 73.0714, 15.9364, 432.8873], [442.5128, 41.3143, 874.0635, 468.7073, 297.08, 590.717, 828.8875, 1014.5714, 0.0], [394.0897, 642.7778, 525.5061, 489.24, 766.7736, 468.1, 1256.3929], [683.5143, 612.9841, 405.8293, 351.99, 787.5849, 417.6, 842.0, 566.1429, 14.8613, 1171.9718], [575.9487, 0.0, 418.2698, 1010.8902, 354.24, 852.3396, 625.4125, 458.1071, 27.4286, 30.3064, 1209.8028], [323.4146, 686.92, 1008.3585, 141.025, 1045.5536, 0.0, 100.5838, 3320.4225], [314.5128, 485.7619, 737.4817, 1208.96, 456.7547, 393.825, 174.3036, 816.4571, 16.9364, 1546.4789], [795.359, 23.7714, 632.0159, 861.7561, 451.94, 845.9811, 0.0, 1996.4286, 166.9714, 79.3931, 3037.9155], [1378.8974, 1396.7143, 1247.0159, 890.5183, 680.88, 1297.3396, 267.675, 2632.1607], [1055.0641, 641.1429, 332.3175, 1305.0366, 1421.74, 822.7736, 1622.5625, 0.0, 72.3237, 266.6197], [1156.8205, 1701.2857, 813.5079, 868.4756, 757.62, 1452.3962, 85.9875, 336.4821, 108.1429, 2551.169], [501.4231, 524.4, 1186.9365, 1277.6585, 1261.98, 966.4151, 1060.7625, 1518.4464, 183.9714, 1907.7746], [462.6923, 0.0, 2009.6667, 1301.5488, 1505.86, 2803.4717, 3031.4, 1499.625, 1474.8286, 76.0809, 3195.6056]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

