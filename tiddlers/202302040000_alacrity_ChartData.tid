created: 20230204000024000
creator: Drevarr
modified: 20230705163518569
modifier: drevarr
tags: ChartData
title: 202302040000_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Grayson Carta", "Ryvalia Fazebringer", "Seren\u00e1 Joy", "Etchery", "\u00c9\u00efbhear", "Solikai", "Tegan Parker", "Arkintor", "Venomina The Siren", "Mike The Archmagus", "Primal Clone", "Black Raspberry Pie", "Bambiae"];
const professions = ["Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.1479, 0.0, 7.4592, 0.0, 5.0323, 16.5287, 0.0, 2.399, 2.4562, 0.0, 15.4462, 23.4612, 0.0, 29.2248, 37.9008, 26.5765, 24.8019, 6.2744, 11.9914, 24.9387, 5.3539, 5.1738, 0.8527, 9.5309, 9.8409, 5.342, 34.466], [70.2242, 59.9227, 54.5064, 48.0216, 31.2038, 59.7812, 40.5495, 50.5062, 69.9975], [0.0, 0.0, 0.0, 0.0, 0.0, 7.6558, 0.0, 9.2786, 81.6088, 0.0, 0.0, 19.5804, 0.0, 35.5212, 69.6681, 9.3951, 18.5786, 18.6186, 28.1272, 0.0, 48.2368, 14.9352, 24.5269, 61.3632, 32.1123, 30.5192, 20.7862, 0.0, 28.0449], [19.124, 16.868, 7.8288, 0.0, 0.0, 24.7666, 23.9954, 40.3956, 39.6202, 0.0, 25.2331, 23.9022, 0.0, 49.1832, 41.5809, 14.9292, 55.5984, 0.0682, 35.1929, 10.833, 22.2908, 8.3063, 8.3028, 25.1981, 39.3634, 0.0, 31.8265, 0.0, 14.2749], [10.0524, 7.2059, 12.0624, 0.0, 13.0354, 7.8498, 4.4339, 36.2326, 22.3394, 19.0245, 12.0974, 22.0941, 0.0, 50.9256, 50.0832, 28.8288, 14.689, 44.1936, 29.6218, 23.7971, 46.435, 11.7016, 19.8145, 6.528, 10.3861, 10.9319, 37.4355, 2.7056, 37.9593], [18.2376, 16.0012, 2.7048, 0.0, 3.3144, 2.6989, 8.665, 42.336, 16.6668, 7.6617, 7.9697, 34.9713, 0.0, 44.946, 43.6536, 53.2818, 74.6346, 61.38, 32.781, 16.8964, 36.6538, 8.2255, 22.0136, 30.1594, 17.5827, 5.4096, 27.385, 2.6677, 30.0186], [59.6455, 293.8906, 33.9387, 34.0805, 46.1408, 40.2523, 165.8826], [0.0, 63.4087, 0.0, 11.9441, 42.9534, 0.0, 26.46, 0.0, 121.9385, 0.0, 40.131, 0.0, 116.5824, 119.4552, 87.9021, 102.1821, 44.1254, 35.6006, 31.8647, 19.3565, 28.9609, 41.1325, 110.8454, 0.0, 11.4503, 12.0555, 0.0, 88.5411], [48.3759, 32.3274, 0.0, 47.6877, 87.1455, 47.8573, 48.8893, 97.1258, 85.2054, 98.304, 47.7404, 82.5552, 0.0, 83.754, 140.1822, 243.5648], [0.0, 8.9397, 0.0, 7.752, 20.9578, 6.9678, 0.0, 60.223, 70.4684, 197.9066, 21.9622, 19.1835, 18.05, 88.308, 69.6681, 115.1221, 220.5174, 38.9422, 41.2056, 14.6639, 125.6627, 56.487, 28.1398, 200.0179, 35.6288, 29.5049, 71.3939, 0.0, 42.5493], [29.2519, 40.0029, 0.0, 0.0, 36.9641, 0.0, 0.0, 0.0, 244.7212, 23.1823, 117.3501, 34.6788, 158.7168, 110.3184, 150.772, 134.2141, 111.7116, 60.1609, 40.0846, 121.1839, 17.8252, 0.0, 0.0, 0.0, 33.9227, 0.0, 0.0, 160.65], [0.0, 31.9843, 31.0632, 0.0, 35.6707, 0.0, 48.1068, 86.3302, 77.9538, 65.5793, 8.7226, 124.4061, 0.0, 95.9112, 89.676, 55.341, 124.1926, 124.7378, 51.4306, 30.1649, 138.0694, 0.0, 72.1446, 120.2458, 71.2304, 54.0509, 70.9117, 0.0, 66.555], [68.6315, 0.0, 28.1064, 0.0, 0.0, 44.6116, 49.4689, 143.4485, 138.4806, 141.6123, 22.1439, 45.7317, 55.556, 39.3624, 137.6019, 88.7387, 164.1411, 149.4944, 109.5193, 111.9832, 129.4207, 28.0313, 77.6648, 364.0013, 32.7393, 0.0, 104.9209, 18.2294, 131.7789], [54.7694, 54.0536, 44.5368, 0.0, 70.2298, 85.0601, 45.7304, 81.1793, 94.3575, 254.136, 36.6036, 116.7327, 29.3816, 202.356, 182.2284, 139.3821, 248.2938, 166.8172, 57.1375, 124.516, 141.467, 72.1901, 46.6079, 259.1616, 90.3124, 44.3362, 59.7953, 31.5302, 158.6763]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

