created: 20230527220043000
creator: Drevarr
modified: 20230705163531982
modifier: drevarr
tags: ChartData
title: 202305272200_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Elaundo Yn Bashir", "Grilo Gringo", "Tribal S", "Mistwalker Cael", "Gravlyn Isshtail", "Permanent Dawn", "Lord Erin The Wise", "Tootsie Pop Rocks", "Aronorf Xideliesi", "Venomina The Fierce", "Zadey Starbolt", "Drevarr Moonwillow"];
const professions = ["Herald", "Dragonhunter", "Druid", "Vindicator", "Spellbreaker", "Weaver", "Weaver", "Scrapper", "Firebrand", "Spellbreaker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[260.8582, 402.9095], [18.744, 27.5871, 52.7406, 35.5266, 49.503, 56.8199, 19.6286, 0.0, 116.0712, 38.1402, 98.4886, 14.6006, 21.0569, 1.9146, 17.7358, 19.5079, 39.639, 45.0688], [0.0, 154.5214, 209.916, 138.8772, 243.9143], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 54.347, 160.542, 23.2298, 152.4096, 82.8576, 154.5824, 21.0905, 64.2049, 18.7686, 15.0671, 83.4372, 39.9677, 56.8512], [76.923, 19.9555, 14.6376, 42.7622, 21.852, 59.0278, 142.8948, 6.6582, 42.4157, 86.3272, 5.2034, 146.124, 171.6737, 51.5108, 134.8729], [47.3696, 55.7637, 131.7679, 121.338, 225.337, 114.0073, 215.8254, 107.6544, 190.8487, 19.6765, 96.7184, 44.6896, 14.485, 102.8412, 27.5968], [78.4148, 16.1286, 86.254, 17.556, 26.16, 35.4218, 101.2368, 37.179, 70.0419, 69.1353, 158.994, 159.327, 242.82, 60.8902, 118.5862, 180.9864, 54.5454, 125.6703, 22.718, 39.4352], [81.1188, 13.325, 94.1791, 24.057, 30.984, 28.021, 112.0836, 44.064, 37.8595, 236.2795, 0.0, 166.212, 257.3083, 57.0326, 170.924, 65.4444, 72.2736, 22.7115, 0.0, 29.1985, 47.5962, 0.0, 65.7311, 0.0, 45.7856], [115.6642, 0.0, 0.0, 0.0, 53.16, 5.1806, 283.9032, 41.1966, 91.9549, 272.3533, 68.6959, 242.271, 267.3448, 19.2315, 138.0028, 195.363, 158.6088, 125.2377, 7.7039, 43.4928, 29.0259, 0.0, 124.1163, 71.4918, 81.5808], [0.0, 75.7998, 177.1478, 516.5676, 88.3008, 516.942, 436.5094, 189.7808, 339.8774, 479.9844, 208.467, 305.7761, 26.7734, 190.4136, 134.0986, 96.9268, 209.9097, 243.1178, 211.9488], [185.198, 20.9895, 150.4406, 41.8046, 86.976, 86.8956, 437.802, 116.559, 170.4221, 490.6327, 297.5422, 394.308, 543.9977, 70.5343, 283.0766, 393.7248, 163.9386, 183.9992, 28.3542, 141.4842, 62.1686, 30.6029, 245.218, 183.0019, 268.576], [202.0278, 93.4349, 105.0249, 109.1558, 45.336, 58.4663, 426.012, 109.9656, 234.9677, 652.5605, 196.1014, 531.198, 538.8176, 144.5669, 407.7486, 598.0842, 254.4696, 644.574, 7.277, 134.1382, 99.8944, 2.714, 315.4189, 240.7667, 200.8832]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

