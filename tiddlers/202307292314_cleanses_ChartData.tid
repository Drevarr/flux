created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Grasszanine", "Ryvalia Fazebringer", "Newtype Khan", "Ex Warcraft", "Rahani Sunray", "N\u00eec\u00f4le", "Cesare Pirane", "Loganlek", "Kosa\u00efr", "Vini Boy", "Tootsie Pop Rocks", "Tegan Parker", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Firebrand", "Spellbreaker", "Chronomancer", "Spellbreaker", "Tempest", "Chronomancer", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1167, 0.0, 0.0267, 0.2958, 0.0827, 0.0, 0.0314, 0.0429, 0.1607, 0.0189, 0.0, 0.0671, 0.0745, 0.0], [0.2598, 0.0, 0.0, 0.0143, 0.0, 0.1038, 0.0, 0.118, 0.2234, 0.0, 0.0], [0.1086, 0.0, 0.0714, 0.3396, 0.0328, 0.1466, 0.1809, 0.0, 0.0], [0.0, 0.0167, 0.0, 0.0214, 0.6761, 0.1339, 0.0, 0.0971, 0.1214, 0.0, 0.1604, 0.0, 0.113, 0.2021, 0.0114], [2.1408, 0.4567], [0.5493, 0.2756, 0.0, 0.0914, 0.0643, 0.1071, 0.3396, 0.0, 0.1342, 0.2766, 0.0, 0.0], [0.1974, 0.2543, 0.1857, 0.0357, 0.6415, 0.1639, 0.4398, 0.5851, 0.0, 0.0494], [0.8028, 0.4488, 0.1184, 0.1743, 0.0714, 0.0714, 0.2925, 0.0492, 0.395, 0.8404, 0.0909, 0.1111], [1.5352, 0.5433, 0.1447, 0.3343, 0.0857, 0.1429, 0.2925, 0.1803, 0.3851, 0.4149, 0.0, 0.0494], [0.3657, 0.3857, 0.0714, 0.6226, 0.1639, 0.641, 1.1702, 0.0227, 0.037], [0.0321, 1.169, 0.0748, 0.0526, 0.4143, 0.1786, 0.0893, 0.7925, 0.0, 0.518, 1.0638, 0.0227, 0.0741], [0.0, 0.0333, 0.0053, 1.493, 0.5748, 0.0, 0.3171, 0.15, 0.1786, 0.5, 0.0, 0.472, 1.2872, 0.0114, 0.0], [0.0, 2.7042, 0.622, 0.0886, 0.3071, 0.0536, 0.5094, 0.1803, 0.6932, 0.7021, 0.1136], [0.04, 0.5667, 0.037, 0.139, 2.3662, 1.1024, 0.0526, 0.5286, 0.5571, 1.0714, 0.9245, 0.0984, 1.0261, 1.7553, 0.0568, 0.0], [0.04, 0.6, 0.0, 0.1176, 2.3521, 0.7126, 0.0, 0.7171, 0.6929, 0.4286, 1.1604, 0.0164, 1.2186, 1.9149, 0.1364, 0.037]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

