created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Clean And Green", "Zaedy Zae", "Venomina The Fierce", "Zanos Engine", "Nebula Davar", "Tribal S", "Oo Dads Mad", "Jimbo The Pleb", "Blaize Harlot", "Cat Wigglebooty", "Itacolomi", "Tootsie Pop Rocks", "Morton Saltbringer", "Xanvias Einzbern", "Belvyn Brightblade", "Tegan Parker", "Etchery Howls", "Mistwalker Cael", "Darks Na", "Drevarr Moonwillow", "Sygaldry Verdandi", "Arcanophage Farra", "Sub Train", "Rafaellagabriela", "Solus Luxes", "Koralia Danai", "Bella Sassy"];
const professions = ["Druid", "Druid", "Spellbreaker", "Scrapper", "Scourge", "Druid", "Berserker", "Berserker", "Scourge", "Scrapper", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Firebrand", "Tempest", "Druid", "Herald", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.6309, 161.818, 68.329, 0.0, 54.8336, 0.0], [57.5521, 0.0, 0.0, 117.4502, 0.0, 28.0632, 25.8344, 34.5578, 0.0, 0.0, 17.2801, 0.0, 17.3166, 0.0, 0.0], [169.635, 0.0, 7.5533, 0.0, 67.4111, 0.0, 88.0513], [99.427, 5.4027, 0.0, 58.7776, 11.856, 11.3652, 47.4376, 11.7042, 0.0, 16.606, 19.019, 0.0, 24.2172, 32.9094, 0.0], [0.0, 139.9449, 14.0741, 59.3606, 88.4383, 27.918, 19.7197], [153.0598, 108.6061, 0.0, 17.9482, 0.0, 0.0, 0.0, 0.0, 0.0, 73.7394, 0.0, 0.0, 0.0, 14.5487], [146.6651, 152.7101, 0.0983, 101.0765, 62.952, 16.896, 0.0, 2.718], [219.8945, 0.0, 0.0, 12.8051, 0.0, 0.0, 0.0, 3.8274, 23.4303, 0.0, 102.4852, 0.0, 137.0029, 0.0, 0.0], [115.7231, 94.162, 0.0, 95.1987, 69.264, 0.0, 14.2416, 46.0401, 39.9141, 28.9469], [35.8927, 54.689, 12.4816, 112.727, 19.056, 37.2636, 25.4216, 8.9861, 105.8496, 19.5776, 23.9639, 41.4185, 32.3873, 0.0, 4.6786], [90.0273, 0.5244, 1.5215, 87.952, 8.3979, 314.3736, 51.0332], [191.2216, 39.9141, 57.7395, 48.9114, 58.176, 8.844, 9.3224, 103.7844, 32.5267, 20.067, 63.8495, 0.0, 0.0, 0.0, 8.721], [0.0, 648.3288, 0.0, 0.0, 0.0, 0.0, 19.5736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [223.6075, 189.978, 0.0, 10.7059, 64.728, 42.5568, 59.5464, 16.4746, 35.5588, 146.3076, 7.9336, 0.0, 0.0, 0.0, 22.1], [652.2574, 188.4343], [0.0, 37.0474, 81.8672, 156.9152, 0.0, 50.9808, 91.2481, 203.8707, 40.1341, 94.0082, 76.0239, 77.9247, 0.0, 25.2396], [605.4318, 48.7349, 86.7321, 138.3373, 22.056, 74.2352, 15.4207, 123.7117, 99.0067, 160.7921, 47.0129, 137.9794, 29.282], [398.3267, 413.1442, 277.7393, 298.4013, 69.144, 38.0424, 38.9752, 103.6734, 119.5218, 40.3438, 106.0173, 31.3486, 110.1166, 79.947, 83.2291], [533.6464, 997.5222, 208.3045, 620.6285, 48.624, 107.4348, 307.0888, 171.2914], [600.8936, 367.2761, 171.0563, 583.8925, 145.44, 50.9256, 73.7192, 174.786, 247.3683, 145.119, 238.8243, 79.7402, 67.6064, 35.532, 53.6803], [866.5823, 203.7605, 255.7246, 355.7094, 113.544, 75.852, 212.561, 269.5306, 71.8078, 216.9253, 11.7083, 320.7477, 138.9301, 60.3698], [546.4357, 428.0293, 136.9532, 624.512, 247.848, 49.2888, 85.9312, 237.7444, 318.5411, 182.9457, 229.4778, 75.8041, 210.0777, 0.0, 36.4846], [1027.0681, 615.0303, 272.6779, 442.1965, 171.6, 329.6208, 311.7414, 47.2464, 42.4414, 100.1486, 105.9939, 54.9444, 35.9888, 45.4313], [845.748, 575.5572, 165.4052, 643.5098, 117.864, 52.7208, 276.4728, 270.0834, 309.555, 100.6498, 347.45, 81.938, 19.3347, 43.6028, 98.5986], [907.2194, 799.2747, 399.5573, 874.6317, 21.84, 118.3644, 131.1672, 57.7997, 87.3811, 18.0044, 237.7918, 147.2926, 117.0498, 64.9559, 82.2031], [1498.6242, 1043.0596, 190.8106, 342.6944, 85.896, 0.0, 228.9247, 308.3421, 18.0044, 101.2898, 106.4934, 41.5989, 142.0942, 21.6896], [1641.7825, 530.1301, 396.3632, 825.0906, 8.808, 79.2792, 254.9384, 255.4948, 289.2671, 98.5522, 226.8695, 118.1417, 433.6637, 193.1756, 115.0556]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

