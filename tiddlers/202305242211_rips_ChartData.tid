created: 20230524221126000
creator: Drevarr
modified: 20230705163531565
modifier: drevarr
tags: ChartData
title: 202305242211_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Morv\u00e4rth", "Panther B Me", "Grasszanine", "Morv\u00e4rth", "Morton Saltbringer", "Newtype Khan", "Nocta Asthariel", "Ria Zerria", "Smol Gluvs", "Demon Maddx", "Pie Snarglebringer", "Bee Honeybringer", "Brioche Bunbringer"];
const professions = ["Scourge", "Scourge", "Spellbreaker", "Reaper", "Chronomancer", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0123, 0.1923], [0.0912, 0.0, 0.0, 0.1083, 0.0273, 0.0036, 0.0, 0.0, 0.028, 0.0045, 0.0, 0.0916], [0.2707, 0.0, 0.0, 0.0667, 0.1365, 0.0145, 0.0247, 0.0333], [0.1681, 0.0, 0.2059, 0.3, 0.134, 0.0, 0.0234, 0.027, 0.0], [0.1111, 0.275, 0.072, 0.0036, 0.0741, 0.0, 0.0701, 0.045, 0.0083, 0.1117], [0.1909, 0.0294, 0.2083, 0.0769, 0.029, 0.0, 0.0, 0.0327, 0.0586, 0.0, 0.0788], [0.1197, 0.0, 0.1176, 0.1, 0.0968, 0.0326, 0.037, 0.0093, 0.0225, 0.0167, 0.1429], [0.1624, 0.1304, 0.0, 0.2417, 0.0273, 0.0072, 0.0123, 0.0607, 0.027, 0.0083, 0.1923], [0.208, 0.0, 0.0588, 0.2167, 0.0968, 0.0145, 0.0, 0.2167, 0.0467, 0.036, 0.0, 0.2216], [0.245, 0.0, 0.0588, 0.3833, 0.139, 0.0145, 0.037, 0.0, 0.1402, 0.0135, 0.0, 0.1813], [0.2821, 0.0435, 0.0588, 0.3667, 0.1663, 0.0109, 0.0617, 0.0167, 0.1262, 0.0405, 0.1083, 0.152], [0.3048, 0.325, 0.1464, 0.0145, 0.0617, 0.05, 0.0, 0.0167, 0.2619], [0.4815, 0.1304, 0.0882, 0.5, 0.2432, 0.029, 0.1235, 0.15, 0.1542, 0.0676, 0.1, 0.3333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

