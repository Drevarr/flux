created: 20230515002743000
creator: Drevarr
modified: 20230705163529901
modifier: drevarr
tags: ChartData
title: 202305150027_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Ever Moore", "Tootsie Pop Rocks", "Gabe Malhorn", "Mistwalker Caelon", "Koralia Danai", "Tika Mi", "Mybeau", "Artakama Nahid", "W V N D E R F O X", "Miphest\u00f6", "Vitis Mortis", "Blancooo Padreee", "Morv\u00e4rth", "Lucas Ryn", "Zanos Engine", "John John", "Crusader Siolith", "Grilo Gringo", "Morv\u00e4rth", "Aronorf Xideliesi", "Slautorn", "Ikong Winnie Ilocos", "Red Omega Red", "Smol Gluvs", "Lord Erin The Wise", "Cerys Fireblade", "Outer Ocean", "Rina Of Theros", "Xanvias Einzbern"];
const professions = ["Soulbeast", "Firebrand", "Scrapper", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Scourge", "Tempest", "Berserker", "Tempest", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Mechanist", "Holosmith", "Dragonhunter", "Dragonhunter", "Reaper", "Firebrand", "Weaver", "Scrapper", "Renegade", "Scourge", "Weaver", "Berserker", "Berserker", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.6164, 30.9585, 92.869, 0.0, 435.14], [2.5915, 10.5867, 0.0, 194.6415, 11.8065, 13.1429, 0.0374, 15.02], [53.4872, 4.5856, 24.1583, 5.0082, 23.8465, 4.6468, 3.48, 0.0, 6.4353, 2.5031, 22.7558, 9.5952, 41.8785, 6.18], [22.9107, 9.2248, 9.9588, 22.3713, 2.5234, 11.6, 0.0, 39.3167, 6.8, 24.5535, 10.1475, 100.2857, 4.5047, 10.7], [57.6325, 36.464, 14.4908, 0.8354, 16.0495, 4.5191, 13.84, 0.0, 16.5833, 5.5176, 29.4277, 5.7373, 2.6071, 1.9439, 0.0], [18.9402, 19.7469, 11.7982, 0.1317, 15.896, 0.0, 25.4667, 0.0, 0.0, 0.1529, 13.4277, 22.4055, 157.4524, 5.0467, 11.36], [63.5726, 11.8065, 9.0872, 0.0, 42.4554, 0.2723, 2.2267, 0.0, 32.2588, 54.1698, 11.9447, 6.5, 1.0654, 90.98], [171.7228, 26.9745, 71.2267, 9.9697], [58.7094, 12.8337, 6.7821, 7.8601, 14.2772, 3.2638, 59.8533, 1.6061, 81.7667, 6.2588, 21.4025, 30.7327, 73.1071, 0.3925, 0.0], [43.5782, 41.0596, 2.6255, 20.1436, 11.8511, 77.8133], [165.9402, 18.4665, 9.2683, 8.2798, 18.198, 5.9277, 4.7867, 2.4941, 0.0, 18.4977, 71.3333, 7.7664, 0.0], [58.4467, 59.9564, 14.8395, 0.0], [55.5983, 39.9007, 15.6147, 9.5144, 26.7327, 1.2383, 7.12, 0.0, 21.2, 65.6667, 15.1659, 50.25, 0.0, 0.0], [77.8394, 20.5597, 48.0891, 17.7489, 121.9067, 0.0], [93.9573, 20.4665, 41.6583, 10.8107, 7.995, 3.2, 2.4667, 0.0, 0.0, 13.9765, 77.4088, 16.6175, 18.3095, 20.6449, 66.26], [19.1934, 8.4554, 16.1191, 53.72, 0.1818, 73.5333, 57.6588, 124.1447, 26.5023, 124.7262, 10.0093, 153.62], [202.9744, 14.871, 16.1261, 8.6008, 64.099, 7.2043, 17.4533, 14.3294, 77.7358, 7.1751, 12.2976, 1.5514, 7.66], [86.1197, 37.5509, 35.3142, 17.6996, 60.6287, 1.7617, 62.3067, 2.2727, 0.0, 55.5849, 5.3318, 84.381], [37.7294, 176.2704, 111.4608, 222.8214, 18.6075, 68.84], [90.453, 96.9876, 61.2833, 18.1765, 38.8365, 74.9263, 21.2619, 15.1869, 3.62], [130.5641, 39.9653, 20.0115, 32.284, 13.5941, 0.6255, 10.0, 0.0, 6.5333, 84.3765, 43.2767, 41.4793, 50.8095, 10.6449, 42.7], [104.1795, 34.2159, 64.2156, 28.572, 86.4901, 3.8043, 0.0, 109.6167, 44.9294], [56.335, 29.8922, 9.1523, 61.104, 11.7404, 11.1467, 2.1818, 13.2333, 54.0941, 92.327, 40.3548, 123.6667, 12.2991, 16.7], [201.7143, 407.9643, 83.1308, 320.7], [140.4541, 7.0041, 142.6634, 19.4553, 90.5733, 172.1515], [22.1453, 55.201, 16.7867, 40.3992, 38.5792, 14.9106, 106.52, 37.6364, 43.3, 30.9647, 109.0252, 91.3041, 181.5238, 41.5607], [270.3761, 58.3722, 74.0482, 16.9959, 0.6634, 18.9957, 67.4933, 0.0, 4.1765, 0.0, 30.0968, 111.7619, 82.0187, 9.2], [671.6833, 70.1412, 320.2453, 119.9309, 245.0238, 85.4673], [111.1709, 69.9107, 24.8945, 8.0535, 23.0297, 50.5617, 104.28, 14.4545, 69.05, 86.2235, 233.8491, 165.9493, 137.4643, 42.4019, 97.94], [373.6581, 151.2407, 103.0711, 52.856, 109.1139, 58.7021, 68.4933, 292.9697, 279.3333, 96.0118, 224.1069, 192.0276, 326.7738, 75.1308, 268.68]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

