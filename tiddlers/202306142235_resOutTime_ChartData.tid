created: 20230614223544000
creator: Drevarr
modified: 20230705163535266
modifier: drevarr
tags: ChartData
title: 202306142235_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Elon The Archmagus", "Sygaldry Verdandi", "Lord Erin The Wise", "River No Hug", "Fribble Bibble", "Tegan Parker", "No Reserv\u00e9", "Be\u00eb", "Drevarr Moonwillow", "River No Hug", "Bella Sassy", "Eibh\u00ebar", "Raelyn Sunray", "Primal Clone", "Sub Train"];
const professions = ["Tempest", "Firebrand", "Weaver", "Reaper", "Scrapper", "Tempest", "Vindicator", "Reaper", "Scrapper", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 35.72, 0.0, 32.49, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 64.98, 60.8, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 106.4], [0.0, 0.0, 107.1, 0.0], [0.0, 0.0, 0.0, 0.0, 182.4, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 32.49, 212.8, 0.0, 0.0, 0.0, 0.0], [0.0, 62.51, 0.0, 0.0, 121.6], [0.0, 0.0, 0.0, 208.8], [0.0, 62.51, 0.0, 0.0, 152.0, 0.0, 0.0, 0.0, 0.0], [0.0, 53.58, 0.0, 0.0, 243.2], [0.0, 44.65, 0.0, 0.0, 288.8, 0.0, 0.0, 0.0, 0.0], [0.0, 8.93, 0.0, 0.0, 349.6, 0.0, 0.0, 0.0, 0.0], [0.0, 44.65, 0.0, 0.0, 212.8, 0.0, 0.0, 91.8, 0.0], [0.0, 0.0, 0.0, 292.41, 0.0, 0.0, 0.0, 0.0, 348.0], [0.0, 107.16, 0.0, 0.0, 380.0, 0.0, 0.0, 0.0, 83.52]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

