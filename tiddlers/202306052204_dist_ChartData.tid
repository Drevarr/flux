created: 20230605220452000
creator: Drevarr
modified: 20230705163533727
modifier: drevarr
tags: ChartData
title: 202306052204_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Be\u00eb", "Black Raspberry Pie", "Solus Sanctus", "Smol Gluvs", "Xanvias Einzbern", "Etchery", "Newtype Khan", "Eibh\u00ebar", "Artakama Nahid", "Johosh Of The North", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Reaper", "Reaper", "Chronomancer", "Firebrand", "Scourge", "Berserker", "Scrapper", "Spellbreaker", "Chronomancer", "Tempest", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[573, 933, 523, 276, 235, 478, 282, 304, 275, 390, 325], [1635, 467, 458, 276, 209, 280, 301, 310, 353, 264, 206], [653, 522, 400, 333, 227, 620, 612, 303, 341, 308, 227], [1917, 440, 288, 501, 504, 508, 313, 263, 241, 452, 296, 256, 1059, 313, 354], [689, 956, 414, 1619, 301, 703, 428, 192, 200, 530, 288, 274, 327, 357, 299], [554, 1716, 545, 1172, 420, 309, 247, 268, 210, 395, 308, 228, 270, 269, 280], [358, 1228, 330, 380, 1458, 482, 492, 267, 202, 315, 317, 277, 335, 291, 247], [1827, 936, 384, 5656, 1965, 419, 222, 234, 243, 375, 250, 228, 290, 248, 354], [2098, 445, 692, 436, 371, 261, 486, 241, 171, 303, 199, 299, 401, 212, 255], [501, 462, 449, 696, 504, 457, 514, 240, 182, 212, 249, 218, 275, 287, 230], [524, 1177, 594, 413, 477, 307, 307, 242, 194, 279, 240, 192, 281, 254, 216], [1084, 417, 339, 355, 506, 355, 295, 271, 201, 252, 215, 182, 273, 206], [239, 402, 301, 1181, 293, 379, 362, 227, 151, 211, 179, 185, 252, 205, 179]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

