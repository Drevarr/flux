created: 20231007004715000
creator: Drevarr
tags: ChartData
title: 202310070047_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Newtype Khan", "Arriasa", "Atria Ruinheart", "Legendary Sakis", "Zaedy Zae", "Amiti\u00e9l", "Air One Com", "Kisumaiassu", "Sub Train", "Gamora Titus", "Crusader Siolith", "Solus Luxes", "Bella Bitty"];
const professions = ["Spellbreaker", "Spellbreaker", "Druid", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.2656, 68.5542, 0.0, 0.0, 0.0, 47.5838, 0.0, 0.0, 33.798, 0.0, 0.0, 0.0, 0.0, 0.0, 48.1221], [0.0, 0.0, 39.8349, 29.844, 28.0628, 30.1277, 0.0, 22.5238, 0.0, 157.509, 37.057, 0.0, 30.2022, 0.0, 30.6504, 39.624, 34.0216, 0.0, 23.4819], [37.098, 0.0, 36.9138, 0.0, 0.0, 0.0, 25.4044, 25.4167, 144.6984, 142.287, 142.7026], [174.6036, 23.4201, 194.04, 40.0421, 0.0, 239.786], [0.0, 38.8784, 43.416, 0.0, 0.0, 86.9635, 32.1473, 220.3362, 152.478, 68.048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 179.9577], [18.2736, 0.0, 32.6486, 18.54, 20.6866, 0.0, 24.6123, 20.7526, 304.2738, 355.266, 105.2852, 0.0, 32.8795, 41.808, 77.732, 8.3477, 7.7664, 238.7151], [142.4628, 30.1871, 188.886, 373.572, 129.9982, 224.6429, 443.7004], [90.9144, 0.0, 108.396, 54.1844, 38.6496, 92.0557, 514.2744, 353.589, 155.135, 0.0, 84.7298, 0.0, 0.0, 0.0, 0.0, 375.8157], [56.0844, 23.8934, 187.671, 221.256, 40.0421, 40.2019, 79.8344, 161.6515, 429.5538, 109.392, 353.1528, 0.0, 0.0, 39.3811, 0.0, 31.8398, 0.0, 0.0, 286.5213], [39.6252, 0.0, 238.2595, 270.972, 192.3353, 0.0, 75.5909, 186.9206, 206.2422, 242.52, 377.2969, 47.376, 0.0, 0.0, 207.5636, 29.484, 39.9754, 0.0, 224.289], [213.341, 775.0134, 499.23, 485.1647, 0.0, 105.7373, 124.4592, 34.632, 19.7843, 0.0, 0.0, 138.0483], [91.6272, 144.76, 208.692, 158.8929, 68.4922, 289.4067, 198.2563, 1030.5846, 783.159, 334.1138, 0.0, 38.7773, 63.6925, 95.108, 70.6318, 0.0, 39.7056, 619.3746], [220.32, 40.3704, 204.9388, 272.376, 161.0004, 0.0, 332.6904, 284.3957, 863.9622, 595.593, 504.9244, 56.322, 0.0, 228.5312, 191.308, 30.2127, 0.0, 896.4189], [186.4944, 181.2602, 215.172, 60.3959, 102.2947, 234.4675, 135.3787, 902.1726, 726.786, 372.7924, 39.87, 0.0, 40.1264, 230.6675, 184.288, 220.4378, 109.582, 62.88, 908.0019]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

