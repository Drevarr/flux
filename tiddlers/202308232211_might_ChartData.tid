created: 20230823221146000
creator: Drevarr
tags: ChartData
title: 202308232211_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Rina Of Theros", "Arriasa", "Sub Train", "Sub Train", "Tegan Parker", "Daphne Agla\u00e9", "Jimbo The Pleb", "Klengah", "Crusader Siolith", "Tribal S", "Venomina The Sly", "Zaedy Zae", "Darks Na", "Koralia Danai", "Yummy Kiwi", "Zaylen Harker", "Bella Sassy", "Rafaellagabriela", "Sygaldry Verdandi", "Mistwalker Cael", "Solus Luxes", "My Birthday Girl", "Drevarr Moonwillow", "Arcanophage Farra", "Newtype Khan", "Nose Llama"];
const professions = ["Chronomancer", "Scourge", "Druid", "Dragonhunter", "Firebrand", "Tempest", "Scourge", "Berserker", "Druid", "Firebrand", "Druid", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Herald", "Firebrand", "Scrapper", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.4024, 0.264, 1.0838, 0.0, 3.0776, 0.0, 1.9395, 2.2464, 0.0, 0.0, 2.5331, 0.0, 1.8178, 0.663, 0.0254, 0.236, 0.5517, 2.7398, 0.9191, 1.8081, 0.0], [0.9828, 0.4894, 3.3144, 0.95, 1.0032, 1.1232, 0.0, 0.0, 0.6772, 0.287, 3.1734, 0.7956, 3.7772, 0.0944, 0.0, 4.0432, 0.1768, 3.2193, 0.8222], [15.6156, 9.9264], [6.2244, 0.4752, 1.3984, 0.0, 4.5657, 0.7207, 0.7691, 1.0179, 0.0, 0.0, 0.0, 1.9375, 3.235, 3.9448, 1.3436, 0.6135, 1.4974], [5.6126, 2.9341, 17.64, 3.0334], [9.7188, 0.4224, 4.1602, 0.0, 0.0, 0.0, 0.0, 2.63, 0.0, 0.0, 4.7362, 3.9437, 1.6906, 1.4703, 0.0, 0.0, 2.394, 0.0, 0.0, 0.0], [5.0232, 5.016, 4.8944, 4.4642, 0.0, 3.0263, 3.0537, 0.0, 0.1505, 0.4664, 3.0502, 3.2156, 2.5857, 1.5573, 0.0, 1.1438, 0.0, 1.1907, 0.7654], [11.1384, 1.7952, 3.6708, 0.0, 12.2767, 4.8812, 4.18, 1.2987, 0.1389, 0.0, 0.0, 3.5521, 3.0502, 5.7349, 9.126, 3.0202, 0.0, 0.0, 0.0, 5.6007, 1.2757], [18.4548, 5.7024, 2.9366, 4.0584, 0.6224, 6.6713, 10.8108, 1.5717, 1.8308, 10.8358, 0.4313, 5.8344, 4.7658, 7.2201, 0.4991, 0.9576], [54.8184, 19.536, 12.0962], [16.1616, 5.9136, 2.3423, 3.0438, 0.0983, 7.4237, 7.4061, 1.2936, 2.1318, 2.5475, 2.9578, 6.7957, 3.1688, 8.6358, 7.7496, 2.66, 2.4038, 5.9976, 0.4536], [11.6844, 4.0656, 2.3773, 3.9231, 9.959, 0.5518, 6.0021, 4.8481, 3.8623, 2.081, 8.3187, 3.4808, 11.7117, 2.6426, 14.6061, 3.325, 2.1563, 6.7032, 0.8222], [27.6276, 4.1184, 4.4749, 0.0, 9.8416, 3.0794, 5.0494, 5.7213, 0.0, 3.2353, 4.5926, 5.5766, 6.0664, 7.174, 4.8606, 9.247, 0.0, 0.0, 6.174, 0.4536], [22.7136, 12.9888, 5.279, 5.2083, 0.0, 2.391, 11.7234, 4.097, 5.5856, 4.6649, 7.8577, 6.5317, 7.6577, 3.2195, 7.5504, 11.0859, 3.6176, 5.7621, 1.3671, 3.0051], [28.2828, 9.8208, 7.6562, 6.0876, 0.0983, 0.3846, 9.8631, 3.8366, 5.0657, 7.2983, 4.2338, 7.4868, 6.7957, 4.1574, 8.1639, 2.0228, 2.1014, 7.5649, 10.1871, 3.884], [7.0224, 7.3416, 0.7894, 4.914, 2.1569, 12.8466, 4.2706, 6.5528, 9.7812, 17.9759, 13.3099, 4.9394, 11.6103, 8.2111, 3.0473, 2.1546, 10.5696, 6.9237, 7.4561], [24.8976, 15.7872, 7.6562, 4.9715, 10.0246, 6.7716, 16.4268, 0.2691, 6.577, 11.7124, 13.4909, 9.0273, 9.8124, 12.7257, 13.402], [45.2088, 10.4544, 3.8806, 0.0, 9.5372, 0.0, 5.7684, 15.8301, 9.574, 1.9465, 0.7775, 13.0962, 6.4085, 5.3372, 6.4389, 7.2673, 11.1385, 4.8944, 6.2216, 6.5709, 0.0], [40.1856, 11.5632, 11.9214, 5.9861, 12.285, 0.0, 20.8494, 0.0, 2.2729, 1.8308, 4.0186, 5.2685, 15.8457, 12.9792, 10.9481, 17.9424, 2.1014, 5.0904, 7.7175, 1.6159], [38.6568, 14.256, 0.7691, 1.1837, 3.8002, 10.032, 16.7076, 5.0344, 4.9327, 18.0074, 12.0916, 12.9094, 16.7076, 11.2554, 12.3166, 7.0141, 2.3142, 7.4588, 7.8057, 7.5411], [44.5536, 7.0224, 10.8376, 1.9963, 1.7925, 2.6536, 3.2437, 12.285, 3.0293, 3.9293, 10.1574, 14.5673, 11.03, 13.4258, 8.3401, 13.2132, 13.6604, 9.1504, 7.4235, 12.5685, 7.3143], [63.4452, 12.6192, 13.8092, 2.7399, 7.136, 7.6986, 8.5941, 15.2334, 0.9895, 3.1192, 4.5646, 5.7049, 9.4279, 11.6356, 9.6837, 7.0785, 9.5623, 5.9584, 1.2373, 9.0846, 3.884], [44.226, 19.008, 17.6548, 0.0, 7.8124, 4.0295, 4.7318, 15.1281, 0.0, 2.1883, 10.4333, 9.4006, 11.3997, 12.6965, 17.2633, 15.9974, 1.4448, 10.7996, 4.1006, 35.721, 1.8144], [64.7556, 18.6384, 11.5018, 6.3149, 13.1898, 15.43, 11.4699, 19.656, 1.927, 4.6426, 12.6152, 21.241, 15.6515, 20.6525, 13.7144, 20.4805, 17.2594, 3.2186, 8.0244, 16.2288, 4.7061], [92.4924, 31.152, 13.11, 1.7732, 1.4543, 15.1679, 3.7954, 17.1288, 0.0, 5.4526, 22.0202, 12.3068, 18.7017, 19.5253, 19.5955, 24.2557, 10.3241, 6.0914, 7.3881, 25.6662, 3.2886], [64.7556, 36.6432, 3.6708, 0.0, 2.1645, 0.0, 3.5446, 32.6781, 5.3469, 6.6858, 23.199, 19.447, 16.545, 26.7521, 21.6742, 39.4037, 14.2121, 8.645, 0.4595, 18.3897, 10.0075], [104.5044, 20.856, 29.4713, 20.5626, 14.0213, 25.7154, 7.371, 9.739, 4.8481, 36.065, 55.3987, 18.8865, 20.1552, 11.3061, 22.604, 18.4941, 5.187, 15.0944, 0.2646, 4.1108]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

