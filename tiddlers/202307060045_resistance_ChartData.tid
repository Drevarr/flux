created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Legacy Of Mathus", "Johosh The Mighty", "Stoic Rapidfire", "Grasszanine", "Newtype Khan", "Sygaldry Verdandi", "Tika Fiery", "Solus Sanctus"];
const professions = ["Chronomancer", "Berserker", "Berserker", "Druid", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.2848, 15.4253, 13.6326, 13.2797, 19.032, 18.408, 14.433, 18.8136, 10.1007, 30.0185, 21.6562], [38.9664, 17.2307, 27.7984, 0.0, 13.3673, 16.74, 15.1598, 14.8473, 23.0115, 9.2208, 61.4587, 0.0], [26.2925, 9.7427, 9.433, 0.0, 52.884, 36.096, 6.7703, 9.6759, 15.0771, 75.8513, 33.075], [46.3125, 37.92, 51.9563, 45.7587, 29.232, 60.1555, 70.2225, 0.0], [16.2032, 0.0, 51.0598, 40.5598, 53.1277, 62.868, 47.4682, 44.5653, 13.2588, 79.4446, 68.8275], [0.0, 0.0, 0.0, 14.221, 148.1902, 111.696, 114.6608, 86.9193, 20.0622, 39.2223, 60.5025], [55.1696, 43.4886, 57.9578, 51.1259, 81.588, 55.272, 58.854, 24.4179, 22.1154, 67.8, 97.7512, 0.0], [45.2771, 34.6362, 39.7773, 42.188, 67.4213, 63.324, 62.3857, 62.5248, 32.4597, 92.1741, 72.5512, 25.3317], [51.8634, 36.7661, 71.1443, 85.3427, 115.1183, 145.2, 88.7272, 112.8582, 64.3278, 153.2619, 100.4963, 10.606]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

