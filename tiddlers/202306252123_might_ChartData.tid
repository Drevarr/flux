created: 20230625212343000
creator: Drevarr
modified: 20230705163535804
modifier: drevarr
tags: ChartData
title: 202306252123_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Caelon Cai", "Ateriuz", "Seiker Novus Terra", "Belvyn Brightblade", "Tuff Spuffles", "Black Raspberry Pie", "Morton Saltbringer", "Primal Clone", "Irish Necroman", "Rahani Sunray", "Be\u00eb", "Tika Fiery", "K\u00f4sair", "Artakama Nahid", "Mike The Archmagus", "Koralia Danai", "Traidoruns Maximus", "K\u00f4sair", "Fribble Bibble", "Venomina The Siren", "Tegan Parker", "Johosh The Mighty", "Aronorf Xideliesi", "Crusader Siolith", "Drevarr Moonwillow", "Xanvias Einzbern", "Sygaldry Verdandi", "Yummy Kiwi", "Bella Sassy", "Sakis Ranger", "Miphest\u00f6", "Grasszanine", "Newtype Khan", "Blancooo Padreee", "Zayde Sunsabre"];
const professions = ["Reaper", "Berserker", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Reaper", "Chronomancer", "Reaper", "Firebrand", "Berserker", "Tempest", "Weaver", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Druid", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.2811, 10.7908, 6.1956, 1.692, 0.6384, 3.331, 1.9943, 3.1046, 2.6592, 1.2162, 4.3992, 2.5279, 3.8707, 2.8819, 3.2693, 2.1878, 0.3619, 1.2571, 4.4218, 5.8785, 3.3442, 1.0358, 6.392, 2.8238, 8.8435], [0.0, 9.1091, 3.1512, 3.29, 4.704, 4.3909, 5.3631, 11.2896, 2.3309, 0.0, 5.3655, 0.0, 0.0, 3.5942, 3.9034, 3.803, 4.0964, 0.0, 3.5851, 3.2458, 6.7003, 8.0262, 1.4342, 2.256, 5.2661, 8.7053], [24.8372, 27.3273, 4.0592, 6.627, 1.5792, 0.6561, 0.0, 6.3504, 0.0, 2.7901, 0.0, 0.0, 3.9168, 5.472, 7.6061, 2.6533, 0.0, 4.8888, 5.0333], [28.9614, 42.4624, 0.0, 6.157, 5.7792, 13.6774, 0.0, 6.9854, 1.6087], [0.0, 1.175, 0.705, 2.3184, 3.1291, 1.3205, 10.0195, 11.8188, 0.4089, 12.6983, 0.0, 10.338, 14.4691, 8.6822, 17.0136, 6.3774, 0.0, 13.7818, 0.0941], [6.763, 0.0, 14.112, 7.0256, 0.0, 5.4013, 10.4904, 0.8678, 10.6445, 3.3197, 8.8738, 4.3757, 0.0, 4.7957, 2.305, 3.8558, 7.8204, 3.3864, 10.9792, 1.7299, 10.018], [13.8392, 15.6957, 2.6171, 6.251, 3.2592, 6.1069, 2.7758, 6.4915, 2.8562, 0.0, 4.2566, 0.3396, 0.0, 4.633, 2.4019, 4.5619, 0.0, 3.492, 4.2336, 2.402, 6.4313, 4.6613, 9.2496, 2.1878, 9.4653], [1.2831, 9.9499, 0.0, 5.734, 3.024, 5.8041, 9.2978, 8.8906, 5.22, 0.0, 8.0125, 0.0, 0.9055, 5.0227, 2.0064, 8.2733, 4.5154, 0.0, 3.9576, 5.4096, 0.0, 7.0487, 2.4302, 10.152, 2.7221, 11.3998], [8.5234, 16.9569, 6.4092, 3.149, 3.0576, 5.3498, 3.2879, 7.6205, 4.3007, 0.0, 4.5786, 0.3396, 5.5296, 4.9613, 5.8046, 5.3067, 1.4147, 5.82, 2.305, 5.5625, 6.174, 3.4661, 7.9712, 0.0, 6.7017], [0.0, 5.045, 5.0205, 9.588, 3.36, 6.3592, 4.9049, 5.7154, 3.6113, 7.619, 1.1421, 0.0, 9.216, 6.6758, 2.4019, 8.7049, 0.0, 3.6782, 3.528, 4.9936, 9.0552, 2.5099, 10.8288, 1.043, 11.7453], [0.9165, 17.5175, 5.7149, 4.042, 3.024, 5.5517, 3.9077, 6.3504, 6.2377, 4.7216, 3.7647, 5.3577, 5.5296, 4.7059, 9.2074, 5.5394, 3.0433, 4.656, 5.6918, 5.1832, 6.2254, 6.3346, 4.2864, 4.4011, 8.429], [18.2384, 17.0971, 4.166, 5.593, 2.7888, 5.9555, 1.4284, 5.1509, 0.8536, 3.2908, 1.2267, 4.4521, 2.5344, 3.0278, 6.2717, 2.281, 0.4441, 6.7046, 4.3277, 2.718, 2.9327, 4.3027, 17.296, 3.5616, 16.098], [5.6022, 4.4467, 9.0317, 11.195, 14.4511, 1.3959, 5.9236, 6.8947, 15.9461, 10.1944, 1.2173, 7.1702, 7.7616, 11.2514, 5.9682, 5.737, 6.8432, 2.2133, 13.058], [22.6376, 46.6666, 12.9786, 0.0, 0.168, 3.7853, 0.0, 0.9878, 0.0, 0.0, 3.7201, 0.0, 0.0, 5.8061, 1.897, 16.9469, 6.5635, 1.4311, 3.4454, 1.3171, 3.919, 7.3573, 0.0, 2.0304, 0.0, 8.1526], [9.5316, 16.6767, 4.6467, 4.7, 1.848, 0.0, 1.8326, 9.455, 5.6468, 0.0, 7.9409, 1.269, 3.7353, 8.2022, 5.6179, 14.6117, 6.005, 1.4476, 4.4232, 6.4445, 5.6889, 3.2414, 7.6094, 6.1664, 4.2994, 12.4362], [26.7618, 27.8879, 0.6409, 1.598, 9.5424, 5.047, 1.8056, 5.0098, 4.1694, 0.0, 2.7543, 4.1454, 6.8291, 1.3824, 6.7123, 10.475, 4.236, 5.1216, 6.9619, 2.3388, 4.8878, 2.5498, 13.3856, 1.8317, 6.5636], [22.9125, 37.8378, 6.4092, 1.363, 8.0976, 4.29, 7.3304, 7.3382, 5.5483, 0.0, 4.4712, 0.4653, 0.2264, 4.1472, 1.6051, 11.2757, 5.3533, 0.6984, 5.927, 4.4247, 9.4154, 6.8923, 7.2944, 0.3562], [46.3599, 43.757, 24.024, 53.1302], [10.998, 24.5245, 2.7239, 6.721, 6.1824, 10.6996, 4.5815, 0.2822, 6.5332, 1.0266, 4.2566, 0.5076, 2.0752, 8.8013, 5.2896, 9.4075, 9.5427, 4.0467, 9.0792, 5.88, 11.7571, 5.9167, 4.9402, 1.4288, 2.0861, 17.687], [0.0, 38.5385, 13.1389, 5.499, 0.0, 5.6022, 0.0, 12.6302, 6.9271, 2.8616, 17.9352, 0.0, 12.4877, 3.4291, 26.2877, 0.7448, 0.0, 6.2856, 2.1168, 3.6662, 3.4986, 13.8245, 6.768, 1.3483, 1.6582], [66.0796, 51.011, 9.6672, 0.423, 1.848, 0.0, 0.0, 9.5256, 13.0007, 0.0, 0.0, 3.9239, 7.6032, 0.0, 8.6069, 2.6068, 0.0, 5.7734, 3.0576, 0.0, 2.1094, 4.6613, 9.9264, 0.0, 1.3818], [12.9226, 17.9379, 7.424, 11.233, 3.696, 9.6398, 4.0694, 15.7349, 10.9981, 1.9488, 12.7699, 1.0152, 4.6031, 7.0502, 3.7939, 16.8134, 11.4047, 0.8389, 10.5691, 5.7389, 10.9985, 9.3639, 1.5139, 15.4912, 7.5048, 14.1634], [0.0917, 19.1992, 9.1865, 5.123, 7.5264, 11.2548, 8.8396, 13.4064, 7.4524, 13.6999, 6.5565, 5.1313, 1.8893, 14.3002, 21.2837, 12.9409, 2.451, 11.0347, 7.9968, 7.838, 8.6436, 5.1792, 13.8368, 2.1624, 15.7525], [20.163, 46.3863, 2.7773, 4.794, 10.584, 6.7125, 1.7517, 5.0803, 10.1116, 0.0, 0.0715, 5.3298, 12.7527, 9.0778, 2.809, 22.4846, 13.6391, 2.5004, 10.476, 6.6326, 9.6711, 10.753, 1.9522, 15.6416, 4.859, 25.5633], [23.4624, 23.8238, 11.7502, 15.886, 5.712, 8.378, 6.5488, 13.3358, 8.9626, 0.0, 12.4122, 0.7191, 4.5653, 9.0317, 14.0083, 22.2845, 14.6633, 1.1186, 13.5955, 6.3034, 7.9645, 8.9523, 6.6931, 23.9136, 3.3072, 18.5852], [22.2709, 36.7167, 4.9671, 8.554, 7.4592, 11.4567, 8.7588, 18.3456, 13.2633, 10.9098, 2.6226, 8.3383, 6.9581, 9.4483, 13.6776, 15.3149, 1.9905, 5.9597, 6.7267, 12.1363, 14.1487, 18.5256, 10.9792, 10.0488, 8.429], [40.326, 53.1131, 8.0115, 11.891, 9.2064, 12.1128, 5.2014, 27.3773, 6.5003, 0.0, 10.2302, 1.0998, 2.0374, 15.2525, 5.7274, 28.8898, 22.5768, 2.9939, 14.4336, 13.0301, 9.4815, 10.7016, 12.3504, 22.2592, 4.8082, 23.5597], [37.7598, 47.6476, 19.7083, 16.779, 12.096, 11.6586, 13.2325, 25.4016, 14.5765, 10.1229, 3.2571, 12.3754, 12.7642, 14.0448, 27.4886, 19.4579, 4.9021, 19.788, 13.4064, 16.1818, 9.261, 8.4461, 17.5968, 1.3483, 22.7306], [44.267, 72.3122, 10.949, 24.44, 11.8272, 13.526, 4.0964, 25.0488, 6.9271, 0.0, 10.8741, 0.6768, 11.5454, 11.7043, 10.9075, 36.8294, 16.6649, 8.0441, 10.8485, 20.6976, 16.1818, 13.6857, 7.4501, 22.2592, 6.996, 26.6687], [3.1161, 102.5825, 28.5209, 36.989, 17.3376, 23.3676, 1.9134, 23.567, 29.547, 1.5921, 27.9006, 0.8037, 10.7908, 32.9933, 25.463, 39.565, 45.619, 8.6363, 34.3613, 30.2938, 26.0425, 0.4116, 24.8203, 35.4192, 11.9822, 43.3194], [166.9863, 73.1531, 36.7995, 1.3627, 0.566, 42.1243, 18.2206, 16.4184, 0.0, 18.9027, 26.9568, 25.2077, 75.5938, 20.0165, 25.0698, 14.5267, 41.3482, 50.9473, 24.2329], [37.4849, 98.5184, 32.046, 38.587, 12.3984, 18.8758, 14.6069, 48.4747, 28.398, 6.2292, 21.6051, 2.1573, 12.715, 29.4451, 17.8752, 43.9018, 32.9574, 9.0804, 36.4099, 27.6125, 29.5823, 27.4743, 20.4778, 32.8624, 7.0978, 35.9959], [9.3483, 95.7156, 33.1676, 30.409, 14.1456, 19.7842, 11.0764, 59.1293, 24.4255, 3.6453, 21.4978, 4.4415, 23.0153, 18.1094, 24.0768, 56.7787, 32.0729, 8.9652, 38.6914, 21.7795, 37.7364, 35.0374, 21.5534, 35.1936, 7.1995, 45.7376], [33.7272, 127.5274, 44.4905, 6.815, 0.4704, 7.9743, 18.0565, 48.6864, 27.5772, 24.6455, 2.8341, 18.9782, 26.7725, 23.785, 57.1123, 42.5932, 10.3799, 40.5072, 29.3059, 27.4963, 30.304, 28.7246, 47.4512, 15.6202, 53.2684], [87.984, 144.0639, 36.8529, 47.047, 19.7232, 15.9485, 15.065, 47.4163, 27.7085, 4.9242, 31.7638, 6.5565, 22.7512, 34.6061, 37.0272, 64.5182, 46.2707, 18.0457, 40.0882, 22.6262, 36.8514, 28.7091, 18.167, 40.3072, 11.9822, 39.0358]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

