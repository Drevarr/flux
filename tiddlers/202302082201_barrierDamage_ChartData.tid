created: 20230208220141000
creator: Drevarr
modified: 20230705163518831
modifier: drevarr
tags: ChartData
title: 202302082201_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Veron Blackburn", "Whose Guardian", "Ace Rages", "Arka\u00f1", "Tribal S", "Sp\u00edcy Cheese", "Blanco Padre Guard", "Stoic Rapidfire", "Lord Erin The Wise", "Rina Of Theros", "Drevarr Moonwillow", "Arcanophage Farra", "Fungus", "Rozaalyna", "Newtype Khan", "\u00c9\u00efbhear", "Smol Gluvs", "Panther B Me", "Nelliel T", "Be\u00eb", "Kosa\u00edr", "Tootsie Pop Bringer", "Skye Nightroad"];
const professions = ["Dragonhunter", "Herald", "Firebrand", "Berserker", "Chronomancer", "Druid", "Berserker", "Firebrand", "Druid", "Weaver", "Scourge", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36194, 0, 3464, 0, 0], [35831, 0, 4698, 0, 0, 0], [32386, 0, 501, 0, 0, 3925, 0, 547, 2445, 0, 2301], [28623, 0, 1119, 1248, 0, 0, 6797, 654, 3295, 564], [33490, 0, 2504, 0, 0, 0, 0, 4688, 0, 43, 3983], [24949, 0, 0, 1248, 0, 0, 0, 14793, 1919, 282, 4452], [18847, 1119, 2465, 0, 0, 0, 0, 19370, 4619, 2747, 0], [20145, 0, 4278, 0, 0, 0, 0, 13856, 4749, 0, 6649], [23479, 0, 4674, 1248, 0, 1235, 0, 19743, 3927, 1221, 3619], [36426, 0, 5485, 0, 0, 4160, 0, 9457, 3055, 282, 5071], [55214, 0, 3382, 2226, 0, 3503, 0], [33736, 660, 3012, 875, 0, 386, 0, 21549, 3691, 602, 8454], [53080, 0, 6466, 0, 0, 1248, 0, 14759, 2913, 282, 3018], [37307, 0, 3356, 0, 0, 3144, 0, 25038, 6750, 177, 7096], [74176, 0, 12191, 0, 0, 318], [35071, 0, 5724, 0, 0, 1681, 1048, 25468, 11788, 2308, 5731], [44261, 1221, 5668, 2817, 11, 501, 1470, 17973, 5182, 1093, 9826], [42371, 0, 3584, 0, 0, 1248, 0, 31875, 7119, 1249, 11353], [53600, 0, 6167, 0, 0, 3273, 0, 20933, 4722, 4655, 13291], [57732, 0, 7543, 0, 0, 2569, 0, 39018, 8333, 7474, 2731], [59465, 0, 8716, 0, 0, 1445, 0, 35249, 11860, 94, 18242], [212947, 371, 25245, 2247, 0, 3488, 0], [142517, 0, 3858, 737, 0, 7452, 961, 117462, 17876, 4874, 165], [130086, 2632, 21023, 0, 0, 7856, 2189, 110846, 23112, 4451, 78820]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

