created: 20230422220129000
creator: Drevarr
modified: 20230705163526480
modifier: drevarr
tags: ChartData
title: 202304222201_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Bluntnips", "Arriasa", "Belvyn Brightblade", "High Sorcer Baradun", "Mac Aaroni", "Ark Darkness", "Tempie Magie", "Madame Charrlotte", "Tika Sumiko", "Miphest\u00f6", "Ever Moore", "Blancooo Padreee", "Sygaldry Verdandi", "Zaylen Harker", "Zadie Miststep", "Drevarr Moonwillow", "Koralia Danai", "Bella Sassy", "Yummy Kiwi"];
const professions = ["Herald", "Druid", "Firebrand", "Tempest", "Tempest", "Firebrand", "Tempest", "Scourge", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 73.3689, 158.8741, 339.8472, 15.5848, 0.0, 32.4892, 23.2497, 12.4245, 0.0, 18.44, 10.3635, 0.0, 479.6066, 3.1308, 9.7952, 12.4488, 0.0, 15.3691, 347.9663, 20.7531], [0.0, 185.7923, 0.0, 82.3158, 360.444, 59.7256, 0.0, 127.5289, 101.5826, 138.402, 17.5787, 124.0574, 227.4443, 0.0, 134.8853, 0.0, 0.0, 0.0, 13.1477, 0.0, 43.5091, 168.7535], [31.0878, 443.9557, 0.0, 0.0, 229.9976, 480.8056, 135.7379, 80.7853, 76.4775, 0.0, 0.0, 221.3644, 13.7484, 425.3188], [0.0, 466.3467, 27.9576, 54.9759, 805.7272, 198.6336, 62.571, 114.695, 102.4654, 166.9635, 156.4325, 38.383, 132.2383, 18.0598, 20.1494, 116.9951, 24.1114, 26.35, 43.4885, 78.0914, 130.1541, 65.9216], [272.291, 0.0, 0.0, 1105.852, 95.0576, 0.0, 182.6796, 131.3068, 33.66, 181.6062, 15.9471, 469.812, 80.8924, 80.2125, 99.4016, 46.8896, 0.0, 15.8928, 109.0669, 9.8642, 13.1412], [2241.6184, 439.6656, 366.1685], [333.3792, 624.8105, 129.2958, 43.4115, 91.9975, 52.3871, 852.5706, 126.0873, 793.5262, 10.5493, 48.3386], [210.849, 30.6306, 102.0887, 1463.3536, 68.0504, 0.0, 318.4175, 17.9032, 69.8445, 29.0938, 78.1225, 187.5103, 103.2336, 154.778, 37.7733, 81.3469, 28.7524, 0.0, 198.967, 15.9427, 6.1757], [38.151, 277.6222, 31.9968, 204.0787, 1401.5632, 246.9368, 209.5034, 147.2972, 78.8535, 72.9488, 216.9905, 74.3408, 129.2832, 31.9567, 46.8593, 35.4425, 6.41, 44.6925, 100.5813, 141.8312, 41.2907], [417.0331, 54.3015, 56.9499, 1871.3664, 0.0, 328.592, 139.7925, 18.0675, 153.7375, 46.0083, 438.4094, 95.8658], [512.295, 195.7277, 939.7622, 320.6307, 174.4016, 88.7359, 13.533, 618.2041, 356.4442, 540.2984], [248.7005, 48.8862, 69.1229, 1286.8096, 326.5064, 451.7273, 85.9356, 63.855, 36.8113, 126.4403, 85.6716, 138.5091, 203.9323, 56.66, 78.246, 9.7188, 100.8952, 132.8029, 131.4871, 83.0842], [448.2206, 1.1484, 250.1716, 935.1928, 47.7224, 51.6285, 617.2952, 202.3312, 68.211, 177.135, 0.0, 306.6214, 148.0968, 213.4294, 78.5412, 30.7768, 0.0, 262.761, 31.0348, 39.2435, 152.4526], [300.3332, 305.514, 271.705, 144.6604, 1074.0731, 156.8403, 586.5138, 109.3044, 127.8308, 29.2874, 230.4456, 573.4618, 377.4523, 400.3408], [0.0, 670.7982, 61.5285, 0.0, 1805.1624, 181.5, 0.0, 148.9186, 176.7271, 194.5845, 309.3125, 49.1611, 365.9006, 69.7671, 536.2045, 104.37, 31.936, 47.2727, 66.0755, 287.0869, 281.6362, 120.8562], [15.4386, 573.2373, 36.5607, 43.4609, 2159.2312, 271.9112, 0.0, 161.6368, 21.2877, 255.222, 131.0138, 37.2832, 533.2366, 91.053, 480.2483, 127.3062, 76.1884, 10.9091, 66.8942, 343.0445, 300.4049, 27.8623], [34.7328, 762.095, 0.0, 324.394, 1915.5024, 488.9368, 68.0665, 594.7493, 270.1674, 204.534, 411.845, 118.1185, 763.5827, 161.5738, 833.44, 177.3984, 121.5131, 43.6909, 125.6976, 361.0839, 231.6754, 372.0476], [213.192, 956.5506, 41.0949, 266.3584, 3120.4152, 903.4344, 23.7976, 217.7125, 438.556, 406.098, 279.6675, 222.9295, 902.5918, 208.8792, 656.8441, 249.3718, 0.0, 45.3508, 281.9768, 243.65, 422.4544, 557.6046], [260.2854, 1644.2754, 48.9357, 207.1384, 3185.6384, 490.1952, 876.8621, 528.0232, 559.3995, 353.1062, 368.0297, 948.053, 301.7111, 578.6851, 300.2807, 228.4783, 84.8702, 290.1158, 400.545, 385.5569, 533.9792]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

