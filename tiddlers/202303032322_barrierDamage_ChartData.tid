created: 20230303232222000
creator: Drevarr
modified: 20230705163521003
modifier: drevarr
tags: ChartData
title: 202303032322_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "High Sorcer Baradun", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Eibh\u00ebar", "Ravioli Fetabringer", "Theevildead", "Morton Saltbringer", "Bella Sassy", "Seren\u00e1 Joy", "Xanvias Tseli", "Grasszanine", "Oo Dads Mad", "Venomina The Siren", "Nimplet", "Sp\u00edcy Cheese", "Drevarr Moonwillow", "Panther B Me", "Arcanophage Farra", "Nelliel T", "Rozaalyna", "Newtype Khan", "Smol Gluvs", "Seren Nightroad", "Delynai", "Heks Appeal", "Fruji", "Lucky Leipreach\u00e1n", "Kosa\u00edr"];
const professions = ["Scrapper", "Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Reaper", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Scourge", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2534, 0, 0, 708, 0, 164, 1911, 428, 18586, 639, 680, 24116, 775, 145, 0, 16440], [0, 6608, 0, 0, 0, 0, 2056, 3663, 0, 2334, 0, 244, 10927, 4304, 0, 0, 5915, 14912, 5583, 0, 0, 13118], [716, 1398, 0, 0, 1266, 859, 0, 1189, 465, 8599, 1155, 1268, 18619, 0, 0, 0, 9477, 0, 9107, 5133, 248, 0, 8705, 0, 1581, 728], [0, 7127, 0, 0, 2249, 0, 0, 0, 0, 11221, 189, 0, 18113, 4871, 0, 0, 4876, 0, 9996, 1244, 0, 0, 14271, 0, 434, 215], [2168, 1155, 0, 0, 522, 0, 0, 0, 2330, 7911, 0, 0, 20137, 0, 0, 0, 9646, 0, 21095, 3448, 0, 0, 11148, 0, 3583, 0], [0, 4488, 0, 0, 27, 0, 0, 2882, 0, 9946, 3150, 0, 27051, 86, 0, 0, 14295, 0, 12237, 1248, 0, 0, 11913, 0, 0, 0], [0, 228, 0, 0, 14838, 0, 0, 7538, 0, 0, 0, 14360, 17209, 23062, 14090], [0, 177, 0, 0, 0, 6, 0, 3042, 0, 2458, 32119, 73, 0, 0, 11255, 0, 19592, 7756, 0, 0, 14251, 419, 896, 1683], [0, 1283, 0, 0, 0, 6, 419, 0, 1433, 18488, 1643, 0, 30882, 0, 0, 0, 20779, 7274, 7590, 0, 0, 17014, 908, 0, 0], [0, 3387, 0, 0, 430, 0, 0, 0, 1599, 7922, 625, 920, 32319, 1131, 296, 0, 14074, 0, 13768, 8166, 0, 0, 18387, 2152, 7857, 979], [0, 2927, 0, 0, 2669, 0, 0, 0, 3941, 20014, 2733, 175, 27742, 2760, 0, 0, 20378, 0, 12569, 2840, 438, 0, 11973, 0, 2955, 3322], [0, 3851, 0, 0, 0, 0, 0, 669, 2456, 13519, 2134, 2918, 33902, 0, 0, 0, 10899, 13240, 7963, 0, 0, 16118, 416, 10359, 0], [0, 33431, 4100, 0, 2358, 15746, 0, 32749, 3557, 0, 23213, 2049, 2234], [1188, 3086, 0, 0, 0, 0, 0, 606, 580, 5440, 179, 2918, 36041, 0, 0, 0, 12935, 0, 23473, 9764, 0, 16404, 12, 4568, 2803], [0, 117811, 2060, 16900, 6548], [1188, 3438, 0, 0, 0, 0, 13540, 1451, 3682, 42882, 2527, 0, 0, 3413, 45528, 8013, 484, 0, 20313, 0, 3461], [0, 3290, 1917, 172, 453, 0, 26, 3716, 1837, 21461, 1153, 1249, 33259, 2455, 15, 916, 22337, 434, 21615, 6587, 627, 0, 27655, 1063, 2350, 458], [0, 0, 0, 0, 5796, 0, 0, 2420, 16614, 0, 3911, 42001, 6432, 1036, 0, 14502, 0, 20370, 8976, 0, 0, 24332, 3476, 5974, 729], [70, 3112, 0, 0, 0, 0, 461, 2220, 8126, 3790, 2897, 43572, 3609, 0, 0, 23875, 0, 24367, 5130, 0, 0, 34096, 0, 1273, 2250], [2420, 11263, 0, 0, 1777, 397, 0, 2636, 3608, 18187, 4308, 37252, 5936, 0, 0, 2456, 0, 28372, 12305, 0, 23229, 419, 13043, 678], [0, 3145, 0, 3149, 3212, 0, 0, 261, 34585, 1651, 2503, 50685, 1098, 0, 0, 32171, 0, 22686, 11202, 0, 29331], [3135, 10116, 0, 170, 34, 0, 0, 3973, 601, 28607, 3369, 3350, 43465, 2496, 0, 0, 22468, 0, 27446, 16329, 435, 0, 35223, 419, 2281, 3288], [0, 15730, 0, 0, 4075, 0, 0, 5507, 3376, 16458, 1829, 1125, 35855, 7849, 0, 0, 28147, 0, 28480, 13676, 0, 0, 35935, 4280, 10411, 4598], [0, 14886, 0, 0, 3777, 0, 0, 3688, 0, 6431, 0, 431, 67523, 2734, 0, 0, 31650, 0, 34323, 11893, 0, 0, 39583, 1667, 3000, 4963], [111700, 43162, 144, 104537, 1249, 24975, 7039], [0, 10548, 0, 0, 621, 905, 664, 3220, 6198, 50642, 362, 14008, 92755, 8057, 0, 0, 11986, 0, 70777, 17987, 0, 0, 55838, 1674, 11630, 11325], [1435, 35212, 0, 1082, 0, 0, 10490, 3742, 70765, 4083, 28014, 13927, 20816, 0, 0, 101630, 13841, 30996, 73054, 0, 0, 68636, 5056, 7736, 6734], [1288, 18065, 1565, 0, 0, 11811, 7768, 100898, 6658, 12538, 107383, 9547, 0, 289, 90626, 359, 73359, 21969, 1163, 0, 109399, 3014, 11328, 1829], [679, 23754, 0, 5439, 3773, 98915, 22680, 5176, 145730, 20331, 0, 1992, 66052, 79875, 45269, 8265, 0, 108885, 3174, 19831, 9611]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

