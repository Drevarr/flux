created: 20230625214256000
creator: Drevarr
modified: 20230705163535975
modifier: drevarr
tags: ChartData
title: 202306252142_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Booboo Hurts", "Vesnan", "Drevarr Moonwillow", "Charr Surethang", "Drumina", "Wall Knot", "Aronorf Xideliesi", "Jerryatric Reflexes", "Yedrax", "Melpomene Vandrish", "Ani Deasun", "Koralia Danai", "Tacitus Kilgore I"];
const professions = ["Firebrand", "Scourge", "Scrapper", "Spellbreaker", "Druid", "Dragonhunter", "Firebrand", "Berserker", "Scrapper", "Chronomancer", "Vindicator", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[973, 330, 415, 637, 255, 332, 1525, 1431, 2114, 718, 1075, 969, 351, 1022, 579, 1469, 1404], [365, 1268, 25903, 574, 503, 546, 2412, 2631, 2956, 784, 5983, 2042], [282, 20181, 982, 259, 256, 23631, 306, 411, 7662, 468, 11637], [8376, 18248, 678, 270, 883, 2015, 402, 480, 9088, 5755, 5525, 3922], [368, 276, 19760, 421, 367, 602, 324, 374, 643, 1013, 1833, 7212, 1479, 5891, 295, 351, 1023, 1887, 1303], [216, 405, 1212, 262, 3602, 604, 7290, 566, 1161, 629, 3186, 649, 1731, 1125], [291, 1171, 8856, 510, 1333, 10922, 1516, 693, 292, 311, 1493, 995, 1322], [8050, 3892, 4855, 1323, 4863, 5756, 915, 350, 533, 1018, 764, 3367], [1585, 2338, 1250, 13906, 1066, 4336, 850, 215, 2552, 518, 1874, 1234], [3894, 20976, 386, 206, 326, 9475, 230, 470, 5687, 7466, 13309], [225, 336, 269, 330, 545, 238, 521, 409, 303, 1474, 6328, 284, 807, 233, 240], [296, 327, 1035, 172, 309, 451, 286, 320, 1940, 301, 6695], [216, 177, 824, 221, 337, 499, 253, 224, 1182, 258, 2066, 573, 287, 631, 223, 1217]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

