created: 20230605220452000
creator: Drevarr
modified: 20230705163533735
modifier: drevarr
tags: ChartData
title: 202306052204_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Xanvias Einzbern", "Sister Elonith", "Stoic Rapidfire", "Melody Phoenixstorm", "Ak\u00e1nt\u00f3r", "Oo Dads Mad", "Sumatra Satyricon", "Newtype Khan", "Venomina The Siren", "Mistwalker Cael", "Primal Clone", "Be\u00eb", "Duke Silvver", "Blanco Padre Guard", "Crusader Siolith", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Aira Draugr", "Johosh Of The North", "Etchery", "Zaylen Harker", "Artakama Nahid", "Gabe Malhorn", "Bella Sassy", "Belvyn Brightblade", "Drevarr Moonwillow", "Cat Wigglebooty", "Solus Sanctus", "Koralia Danai", "Miphest\u00f6", "Roynec", "Tegan Parker", "Slingsshot", "Rozaalyna", "Skye Nightroad", "Necrotic Windrunner", "Black Raspberry Pie", "No Reserv\u00e9", "Be\u00eb", "Al\u00ee\u00e7ization", "Lilac D Moon", "Arriasa", "Shinda Fuyumi", "Nurse Pam", "Heeloz", "Marco D Roronoa", "Yngvar The Burdened", "Cosmedicz", "T\u00e4m\u00e4k\u00ef K\u00f6t\u00e4ts\u00fc"];
const professions = ["Berserker", "Berserker", "Berserker", "Druid", "Scrapper", "Druid", "Spellbreaker", "Soulbeast", "Spellbreaker", "Tempest", "Vindicator", "Chronomancer", "Scourge", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Herald", "Tempest", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Reaper", "Tempest", "Untamed", "Reaper", "Scrapper", "Scourge", "Chronomancer", "Vindicator", "Reaper", "Firebrand", "Virtuoso", "Druid", "Weaver", "Vindicator", "Mirage", "Revenant", "Scourge", "Soulbeast", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 851.8104, 648.0, 802.2074, 13.5385, 0.0, 0.0, 355.6154, 150.4337, 321.0423, 469.3333, 695.47, 135.0054, 8.5439, 56.2895], [0.0, 674.4821, 150.5714, 921.3862, 584.1111, 40.3333, 53.9474, 115.2069, 173.2727, 106.0714, 0.0, 425.1163, 567.0096, 212.9946, 25.5932, 59.6774], [268.1076, 569.7959, 1200.7024, 19.6774, 24.8182, 4.9048, 831.5517, 337.09, 388.7143, 406.3214, 645.0208, 908.7315, 355.6154, 18.1695, 218.8158], [0.0, 698.8437, 77.66, 811.7711, 246.4583, 13.5588, 22.1579, 353.7826, 293.4578, 140.4429, 73.05, 445.7391, 461.1981, 248.7235, 113.75, 0.0], [0.0, 814.2385, 424.9231, 1248.2367, 305.08, 32.9412], [11.9167, 597.7766, 66.64, 753.0974, 81.2857, 16.5667, 10.9524, 236.0588, 216.8652, 214.3134, 146.8889, 512.825, 475.0926, 267.7885, 28.6552, 151.9167], [0.0, 824.6627, 161.3725, 955.9412, 241.5385, 19.5833], [11.9412, 766.6793, 399.5102, 770.3043, 3.7, 0.0, 2.5625, 4.6897, 346.4, 440.4857, 0.0, 268.1042, 996.9041, 256.1518, 4.9655, 0.0], [3.0, 620.4704, 40.25, 689.6403, 152.0714, 122.7429, 4.2273, 414.4, 200.6705, 220.8116, 432.8333, 368.4062, 558.6451, 215.5973, 22.0345, 12.0], [4.7188, 543.3194, 173.0204, 710.041, 8.6154, 1.1515, 0.0, 290.6, 777.5955, 119.5972, 115.0952, 1103.5135, 573.6429, 191.7382, 31.1053, 171.0], [0.0, 566.1147, 175.0, 672.506, 109.1739, 24.5758, 1.4211, 76.6667, 303.0241, 406.3143, 111.2333, 268.2708, 568.4043, 263.628, 42.0847, 8.4706], [10.5143, 556.6215, 14.4889, 767.0712, 296.0, 0.0, 0.0, 42.5714, 123.5349, 98.0448, 0.0, 95.5, 500.5298, 179.575, 85.8621, 106.6176], [10.2424, 764.9252, 145.451, 883.804], [0.0, 560.7744, 180.5192, 794.1445, 0.0, 26.5588, 8.6842, 71.1724, 277.8148, 364.7143, 228.0, 721.8611, 521.5273, 152.1233, 1.661, 35.0], [0.0, 524.7731, 423.1429, 822.3006, 0.0, 0.0, 0.0, 82.9615, 448.9146, 315.3857, 136.92, 239.3514, 383.4889, 185.8164, 182.3393, 229.3846], [0.0, 536.8395, 141.3265, 710.4466, 173.0588, 12.6333, 0.0, 130.9394, 299.5, 107.3971, 38.4, 167.1351, 518.6817, 182.5852, 59.3559, 67.0968], [0.0, 455.7209, 1.7358, 700.5352, 15.8125, 0.0, 0.0, 214.9565, 398.5632, 60.0725, 84.4762, 447.0238, 549.0031, 159.5611, 27.8644, 14.7353], [7.8108, 415.7787, 74.98, 566.6763, 92.4375, 52.3529, 16.8095, 147.5862, 271.1786, 177.0423, 89.0345, 282.1395, 580.4043, 233.1581, 27.1429, 239.1538], [0.0, 864.4606, 271.5417, 866.6596, 431.625, 36.7188], [2.4706, 467.6952, 48.2308, 646.6101, 25.625, 1.7059, 42.3684, 157.5517, 143.6104, 234.0597, 99.2381, 549.425, 395.6142, 191.837, 186.5, 8.3333], [6.0625, 482.2292, 91.44, 593.9449, 170.8, 134.1538, 490.9615, 122.5517, 295.9759, 75.5429, 230.6667, 503.6571, 404.787, 199.6376, 10.2745, 6.7391], [0.0, 406.6287, 0.0, 822.3112, 0.0, 49.3704, 144.1429, 219.6829, 324.2222, 124.4, 208.225, 463.2671, 187.978, 166.2857, 156.3043], [0.0, 453.7309, 41.7551, 572.6906, 33.6, 14.9394, 0.0, 107.08, 207.8068, 110.3676, 12.8276, 415.2353, 343.1327, 244.1944, 63.4576, 79.5385], [0.0, 485.6247, 46.2174, 646.0396, 144.5294, 7.6061, 0.0, 44.875, 69.0575, 79.697, 28.6429, 418.8605, 315.899, 208.2466, 185.7966, 0.0], [2.6667, 386.3983, 53.2609, 659.0206, 81.9333, 3.65, 0.0, 60.7586, 274.5056, 224.0143, 81.3704, 334.4324, 360.8796, 150.1744, 12.6491, 46.9], [30.7429, 606.6637, 35.2128, 838.5962, 87.84, 0.0], [8.5806, 478.3352, 23.7143, 468.5665, 117.4583, 41.0303, 5.6, 122.2308, 127.8409, 106.3043, 103.75, 221.0263, 327.5833, 193.0591, 83.4576], [0.0, 553.4569, 322.3958, 702.5567, 6.6923, 0.0, 0.0, 168.3462, 165.9875, 190.9848, 208.3571, 76.6429, 387.5949, 103.2936, 16.4655, 15.7941], [0.0, 445.1519, 95.5849, 500.6095, 0.0, 33.3939, 0.0, 32.4828, 62.5663, 163.8714, 65.8333, 363.9722, 278.9784, 331.5065, 35.3036, 35.6842], [0.0, 391.8418, 147.4706, 547.8495, 268.1429, 15.9677, 8.7059, 201.7407, 185.6709, 72.6667, 20.4211, 274.8478, 285.645, 89.5961, 102.8571, 62.5758], [0.0, 18.8723, 912.5886, 0.0, 0.0, 35.8889, 219.1071, 331.1068, 173.8406, 64.5238, 239.5789, 542.3082, 220.9762, 44.4211, 243.3636], [0.0, 1312.9468], [0.0, 889.2781, 104.0, 50.5806, 0.0, 310.5385, 50.0482, 261.8788, 550.1333, 597.975, 407.8742, 107.8859, 138.1404, 146.25], [0.0, 571.6901], [0.0, 0.0, 10.6, 195.037, 342.9551, 567.4412, 103.95, 672.8, 745.0981, 292.0921, 169.5179, 193.0333], [232.6071, 313.0341, 228.8382, 176.5517, 595.675, 857.7516, 295.9838, 35.037, 50.5152], [0.0, 148.9655, 131.9806, 209.1571, 320.3478, 1460.5, 737.1678, 204.7351, 154.8966, 0.0], [3.7941, 0.0, 129.5862, 366.9036, 468.7647, 89.2581, 183.3824, 633.0755, 311.679, 0.0, 75.9714], [27.375, 104.0345, 631.1591, 178.6618, 332.4524, 279.0, 568.3056, 186.876, 40.3729, 37.9394], [244.9286, 69.5758, 9.0909, 52.5172, 214.092, 64.8971, 133.9667, 484.8108, 603.119, 228.1609, 57.4483, 76.2632], [70.5833, 155.3605, 211.5152, 44.56, 426.3, 670.3994, 138.8329, 34.3214, 90.6522], [16.5333, 39.1429, 342.4, 427.5167, 1030.4091, 348.2041, 1279.5161, 211.7778], [11.5588, 13.3846, 119.1154, 189.1205, 319.7206, 106.95, 338.5, 398.9903, 154.6205, 46.6491, 22.6667], [573.5301, 2554.2105], [25.5, 134.75, 237.4318, 160.6429, 112.6, 248.25, 376.2007], [180.637, 225.8238, 123.5472, 369.5278], [465.1053], [247.6695, 99.7679, 28.0], [1681.2], [36.0345, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

