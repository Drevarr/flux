created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Blaize Harlot", "Kittendo", "Regis Hawkesburne", "Belvyn Brightblade", "Aira Draugr", "Ean Thane", "Hawaiian Supreme", "Lasting Beauty", "Sub Train", "Toka Lockhart", "Raelyn Sunray", "Mistwalker Cael", "Bella Sassy", "Traidoruns Maximus", "Sonja Wintersong", "Malfax Jinn", "Koralia Danai"];
const professions = ["Scourge", "Soulbeast", "Berserker", "Firebrand", "Herald", "Chronomancer", "Spellbreaker", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Herald", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.6473, 1.448, 3.1294, 1.5708, 0.9946, 0.722, 2.1792, 3.8245, 0.0, 0.756, 0.0, 1.1923, 0.0, 0.5138, 0.4212, 3.275], [2.8594, 5.4481, 5.2152, 3.1126, 4.536], [1.3987, 2.9667, 1.1032, 2.8285, 2.1094, 1.3675, 0.0, 5.6038, 6.2582, 1.179, 2.016], [0.1166, 3.8837, 0.2069, 2.8285, 0.1795, 0.8081, 5.263, 5.7594, 6.9536, 1.2733, 0.0], [1.1656, 2.3734, 2.9648, 1.8054, 2.0196, 3.6674, 4.6698, 7.649, 0.0, 1.5624], [6.4915, 0.0, 1.4742, 28.3356], [3.5551, 5.9873, 1.5859, 2.7683, 4.5329, 4.1647, 0.399, 14.1651], [5.7918, 8.0641, 6.7769, 3.7918, 10.4292, 2.9553, 0.0], [6.517, 8.4056, 15.8194, 3.1126, 4.284], [0.5828, 0.5933, 2.0685, 2.8285, 2.5582, 2.0513, 0.532, 2.6462, 10.2566, 1.8392, 1.1592, 0.0, 4.7693, 1.1704, 0.9809, 1.8252, 6.6923], [2.7392, 1.0788, 2.9648, 9.0872, 11.9381, 11.0023, 1.406, 8.0943, 20.1654, 0.0], [0.5828, 3.7219, 0.0, 0.0, 3.5006, 2.6729, 7.4717, 13.2118, 9.1962, 2.8224, 1.2636, 9.2736, 6.6766, 3.1296, 11.8638, 14.3814], [25.0387, 5.2934, 14.1998, 25.3422, 49.1245], [6.0611, 11.2735, 13.79, 13.2396, 10.1429, 6.216, 6.175, 12.7641, 24.3376, 4.3387, 7.7616, 1.2324, 22.7866, 4.123, 0.0], [0.2486, 5.871, 15.566, 30.9435, 6.2251, 11.4912, 15.1027, 8.1928, 13.1255, 17.55, 45.28], [9.0334, 14.6177, 15.1001, 15.2857, 15.3041, 11.3131, 28.9528, 34.9418, 11.8372, 10.5336, 0.7644, 22.5216, 3.724, 11.8176, 18.1116, 6.2652], [12.2971, 19.2566, 24.0635, 24.1322, 18.0866, 20.6371, 8.151, 37.2027, 47.2845, 10.894, 13.4064, 0.0, 38.4192, 10.6932, 13.686, 30.186, 54.5354]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

