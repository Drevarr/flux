created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Kalisha Lafay", "Kat Bon Z", "Ax Axun", "Tegan Parker", "Newtype Khan", "Gadget Windrunner", "Venomina The Sly", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Chronomancer", "Scrapper", "Vindicator", "Tempest", "Spellbreaker", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3235, 0.1197, 0.0, 0.0, 0.0266, 0.0909, 0.1368, 0.0, 0.1333, 0.0547, 0.1167, 0.1596, 0.1181, 0.1467, 0.0909, 0.1089, 0.0, 0.1667, 0.0455, 0.0213, 0.1141, 0.2551, 0.1754, 0.0, 0.0, 0.0, 0.0], [0.8824, 0.1496, 0.1714, 0.1724, 0.0745, 0.2468, 0.2222, 0.0, 0.1417, 0.1406, 0.3333, 0.0, 0.0197, 0.0, 0.1818, 0.1881, 0.029, 0.0, 0.0, 0.0426, 0.1275, 0.4388, 0.0, 0.0275], [0.5882, 0.094, 0.1034, 0.1277, 0.2208, 0.2051, 0.0, 0.3, 0.1719, 0.4, 0.0053, 0.2835, 0.0667, 0.1742, 0.0297, 0.1304, 0.5], [0.7353, 0.2051, 0.2, 0.0, 0.266, 0.2078, 0.0342, 0.0, 0.2, 0.2734, 0.4167, 0.0106, 0.0669, 0.28, 0.2197, 0.3069, 0.1594, 0.0238, 0.0, 0.0468, 0.1735, 0.0, 0.0], [1.2551, 0.6842, 0.7725, 0.0, 0.124, 0.6765], [0.3462, 0.7429, 0.0, 0.3777, 0.0779, 0.1026, 0.0, 0.2083, 0.3359, 0.3, 0.0585, 0.1732, 0.2267, 0.2424, 0.0594, 0.0725, 0.5, 0.0152, 0.1532, 0.1678, 0.0918, 0.0175, 0.0, 0.0, 0.0, 0.5588], [0.9706, 0.265, 1.7429, 0.5517, 0.4309, 0.4026, 0.5128, 0.0, 0.125, 0.5156, 0.15, 0.2713, 0.2756, 0.4, 0.2424, 0.4059, 0.2246, 0.5476, 0.0303, 0.166, 0.2819, 0.1633, 0.2456, 0.2588, 0.0, 0.0388, 0.0], [0.4118, 1.4829, 3.5714, 0.0, 2.5053, 2.4935, 0.8547, 0.0, 1.3333, 1.2188, 1.5333, 0.4415, 0.6614, 2.2133, 1.5455, 0.8911, 0.7826, 1.9762, 0.0, 0.4809, 1.4497, 1.2551, 0.7544, 0.5765, 0.0, 0.0, 2.8529], [2.7059, 2.0897, 3.6857, 0.2759, 1.9468, 2.3896, 1.5897, 0.0, 1.2, 1.6016, 1.4833, 1.6596, 0.6535, 1.0133, 1.303, 0.8812, 0.8043, 3.0238, 0.4697, 0.3915, 0.0, 1.3367, 0.8246, 0.0, 0.0254, 0.2558, 0.6471], [0.0, 2.0513, 1.0286, 0.5862, 2.1383, 1.8571, 1.0256, 0.3158, 1.3417, 1.6328, 2.35, 1.3723, 1.122, 1.4133, 1.5379, 1.5248, 1.0507, 1.5714, 0.2273, 1.0383, 1.8054, 1.8469, 1.2105, 1.0941, 0.0, 0.155, 2.1176]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

