created: 20230415000841000
creator: Drevarr
modified: 20230705163525561
modifier: drevarr
tags: ChartData
title: 202304150008_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Nazhul Naxxremis", "Zadie Miststep", "Rozaalyna", "Rina Of Theros", "Cat Wigglebooty", "Air One Com", "Smol Daddy Tika", "Paul Bjart Mist Cop", "Bella Sassy", "Sheep Paws", "Be\u00eb", "Panther B Me", "Elonith Primal", "Tegan Parker", "Fruji", "The Fancy Cheese", "Drevarr Moonwillow", "Koralia Danai", "Xanvias Einzbern", "Kosa\u00edr", "Stoic Rapidfire", "Drogo Deception", "Black Raspberry Pie", "Aronorf Xideliesi", "Lucas Ryn", "Solus Sanctus", "Smol Gluvs", "Newtype Khan", "Blancooo Padreee", "Grasszanine", "Johosh The Great", "Mmathuss", "Arcanophage Farra", "Venomina The Siren", "Lord Erin The Wise", "Corlyss Velaryonn", "Mac Chiato", "Hauzzy", "Primal Clone", "High Sorcer Baradun", "Xyntharos", "Sassy Daddy Demon", "Inedible Plant", "Mistwalker Caelon", "Kmpek", "Ryvalia Fazebringer"];
const professions = ["Scourge", "Tempest", "Reaper", "Scourge", "Scrapper", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Berserker", "Reaper", "Scourge", "Tempest", "Tempest", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Berserker", "Scrapper", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Weaver", "Vindicator", "Tempest", "Spellbreaker", "Chronomancer", "Tempest", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 4, 16, 7, 11, 3, 3, 5, 2, 15], [14, 32, 0, 13, 0, 1, 0, 5, 0, 2, 14, 1, 12, 10], [8, 6, 9, 3, 10, 1, 6, 18, 5, 5, 0, 28, 7, 6], [2, 5, 2, 0, 6, 1, 5, 18, 1, 8, 1, 5, 0, 2, 5, 11, 2, 0, 12, 13, 1, 18], [3, 16, 2, 15, 0, 22, 9, 6, 10, 7, 6, 19, 4, 1, 11], [3, 3, 7, 0, 6, 6, 3, 30, 3, 5, 0, 10, 2, 1, 10, 1, 11, 15, 1, 0, 15], [19, 0, 12, 7, 2, 11, 2, 4, 57, 10, 4, 6], [6, 2, 9, 0, 6, 2, 2, 11, 9, 0, 40, 0, 8, 1, 13, 1, 0, 6, 6, 0, 14], [1, 0, 0, 0, 7, 0, 0, 7, 21, 46, 0, 2, 2, 2, 6, 3, 3, 8, 19, 7, 7], [8, 2, 6, 15, 5, 14, 1, 5, 0, 5, 2, 9, 7, 23, 47], [0, 2, 1, 2, 33, 22, 12, 0, 17, 0, 9, 1, 5, 0, 4, 29, 13], [27, 14, 13, 11, 24, 2, 1, 8, 5, 6, 0, 16, 0, 6, 6, 0, 2, 2, 9, 7], [0, 33, 8, 8, 7, 10, 15, 46, 10, 13, 11], [17, 8, 12, 2, 6, 7, 2, 38, 3, 4, 0, 17, 4, 2, 0, 1, 7, 9, 16, 2, 7], [0, 12, 10, 2, 11, 2, 0, 27, 17, 5, 0, 9, 5, 8, 0, 4, 1, 39, 13, 3, 4], [13, 9, 3, 0, 20, 2, 8, 23, 11, 12, 0, 18, 0, 10, 0, 0, 0, 4, 19, 12, 6, 30], [9, 5, 14, 0, 19, 1, 0, 9, 19, 21, 0, 17, 0, 5, 1, 0, 0, 7, 8, 30, 20, 20], [14, 5, 0, 0, 8, 0, 0, 8, 0, 16, 0, 22, 6, 12, 12, 3, 7, 25, 2, 28, 37], [2, 2, 14, 0, 28, 0, 1, 6, 23, 24, 0, 48, 0, 8, 5, 5, 8, 4, 14, 2, 4, 8], [6, 0, 9, 12, 12, 2, 16, 19, 8, 13, 0, 18, 0, 10, 2, 12, 4, 2, 30, 21, 15, 0], [10, 11, 9, 1, 14, 7, 11, 9, 13, 22, 0, 20, 9, 3, 4, 3, 15, 33, 9, 30, 1], [14, 19, 0, 11, 3, 3, 31, 11, 10, 0, 56, 0, 7, 1, 6, 3, 10, 21, 32], [11, 2, 9, 0, 25, 2, 0, 15, 0, 4, 0, 74, 0, 1, 3, 19, 5, 5, 41, 31, 3, 0], [10, 2, 22, 1, 7, 0, 1, 11, 21, 16, 0, 27, 9, 3, 18, 8, 3, 43, 15, 22, 22], [11, 3, 18, 0, 22, 1, 2, 31, 13, 19, 0, 43, 0, 14, 4, 35, 0, 7, 22, 25, 21, 1], [1, 2, 8, 3, 21, 2, 8, 35, 31, 20, 0, 25, 14, 3, 32, 4, 10, 32, 4, 13, 29], [6, 23, 3, 29, 6, 7, 40, 39, 18, 0, 11, 0, 12, 3, 9, 14, 14, 30, 33, 13, 5], [10, 8, 23, 2, 17, 3, 16, 21, 23, 15, 0, 26, 11, 9, 25, 8, 13, 35, 18, 8, 39], [14, 10, 19, 9, 19, 1, 14, 46, 17, 27, 3, 33, 12, 0, 27, 5, 5, 55, 20, 7], [35, 1, 21, 7, 26, 1, 12, 18, 15, 29, 0, 36, 20, 1, 2, 8, 6, 82, 9, 2, 18], [13, 4, 24, 1, 25, 0, 18, 45, 47, 44, 0, 19, 13, 3, 7, 2, 9, 37, 4, 4, 33], [12, 4, 1, 1, 37, 2, 4, 27, 15, 32, 0, 32, 13, 7, 22, 5, 10, 55, 42, 4, 32], [19, 4, 14, 1, 24, 5, 6, 13, 31, 33, 0, 63, 1, 4, 6, 1, 22, 30, 11, 33, 38], [9, 7, 16, 9, 35, 0, 8, 78, 16, 50, 0, 25, 10, 20, 2, 8, 37, 9, 11, 16], [26, 4, 19, 3, 33, 5, 11, 88, 40, 0, 2, 34, 0, 13, 2, 25, 18, 7, 39], [30, 59, 4, 9, 30, 9, 7, 32, 25, 23, 11, 23, 9, 19, 9, 22, 12, 47, 14], [25, 9, 24, 2, 42, 0, 8, 21, 26, 63, 1, 34, 4, 16, 4, 3, 9, 40, 30, 16, 35], [19, 22, 81, 0, 7, 3, 1, 52, 17, 57, 0, 52, 24, 8, 9, 14, 14, 33], [21, 3, 14, 0, 30, 1, 1, 45, 19, 35, 0, 32, 0, 8, 2, 31, 17, 14, 36, 28, 37, 47], [0, 11, 1, 0, 28, 2, 5, 47, 10, 87, 10, 42, 11, 3, 6, 21, 8, 49, 47, 22, 15], [5, 12, 29, 4, 33, 8, 32, 62, 39, 33, 2, 76, 0, 18, 1, 1, 11, 26, 42, 37, 14, 19], [15, 9, 74, 2, 40, 3, 37, 64, 46, 18, 6, 60, 0, 11, 29, 1, 10, 12, 53, 3, 7, 19], [34, 21, 27, 11, 33, 9, 5, 31, 31, 33, 8, 22, 0, 31, 8, 15, 10, 19, 78, 39, 10, 59], [12, 12, 18, 1, 24, 1, 23, 54, 11, 87, 2, 81, 0, 16, 13, 14, 3, 14, 47, 22, 18, 68], [13, 16, 15, 1, 83, 5, 21, 32, 18, 35, 13, 118, 0, 26, 10, 10, 8, 23, 24, 49, 15, 34], [54, 17, 79, 1, 62, 1, 1, 32, 38, 72, 1, 75, 0, 10, 7, 54, 10, 9, 64, 52, 11, 29]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

