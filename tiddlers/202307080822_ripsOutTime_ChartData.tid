created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Aronorf Xideliesi", "Heymerino", "Ateriuz", "Warrior W Warrior", "Elonith Requiem", "Synomi\u00f1 Spyce", "Bae Ken", "Elonith Requiem", "Heymerino"];
const professions = ["Firebrand", "Firebrand", "Virtuoso", "Berserker", "Spellbreaker", "Reaper", "Scourge", "Reaper", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.0, 3.0178, 0.0, 0.0, 1.0, 0.9897, 1.0142, 0.0, 8.7018, 1.0989, 0.0, 0.0, 0.0, 1.0078, 0.0, 1.0, 1.0], [1.0653, 4.2586, 4.9259, 8.9032, 3.9897, 4.1637, 2.9785, 6.5273, 4.0, 0.0, 0.9697, 6.8387, 0.0, 0.0, 1.0517, 4.042], [13.3237, 7.8012], [2.9964, 0.0, 6.3205, 0.0, 0.0, 0.0, 4.0103, 0.0, 2.9785, 6.5273, 2.989, 0.0, 0.0, 0.0, 3.9948, 0.0, 3.0, 0.0], [3.7419, 11.5788, 3.4694, 9.9483, 16.4118], [0.0, 7.5683, 33.8872, 15.6379, 38.963, 37.3871, 16.8557], [11.6192, 7.0968, 16.0655, 22.9451, 0.0, 4.6667, 19.7097, 13.3333, 7.4694, 19.4828, 7.7395], [8.7086, 13.7516, 9.3264, 1.0, 0.0, 0.0, 6.567, 6.0036, 2.1183, 10.4036, 0.0, 0.0, 0.0, 0.0, 8.0904, 0.0, 10.2672, 3.5882], [11.9253, 11.8817, 34.5527, 31.0769, 22.9697, 11.5161, 14.0594, 11.3265, 17.7069, 19.7479], [10.7069, 20.4074, 27.4839, 15.4639, 13.4911, 7.4194, 25.1636, 25.6484, 3.2923, 18.7273, 10.129, 15.1266, 1.102, 23.0517, 37.5966]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

