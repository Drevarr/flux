created: 20230510220110000
creator: Drevarr
modified: 20230705163529409
modifier: drevarr
tags: ChartData
title: 202305102201_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Binkety Bonk", "Jeckyll Mbs", "Mac Aaroni", "Raelyn Sunray", "No Reserv\u00e9", "Primal Clone", "Bella Sassy", "Khailerian", "Husky Guard", "Xanvias Einzbern", "Eibh\u00ebar", "Miphest\u00f6", "Sygaldry Verdandi", "Farra The Bloodless", "Mistwalker Caelon", "Lord Erin The Wise", "Ark Darkness", "Sub Train", "Etchery Howls", "Venomina The Siren", "Lucas Ryn", "Black Raspberry Pie", "Drevarr Moonwillow", "Oops All Beans", "Rozaalyna", "Ryvalia Fazebringer", "Permanent Dawn", "Kary\u00edna", "Kosa\u00efr", "Solus Sanctus", "Artakama Nahid", "Evan Nightroad", "Dimsnail", "Demon Sekhmet", "Roxy Willowmoon", "Tribal S", "Mike The Archmagus", "Tika Fiery", "Tegan Parker", "Pymmera", "Smol Gluvs", "Tootsy Pop Tart", "Johoshua", "Be\u00eb", "River No Hug", "Maaaathexxs", "Zaidy Sagemist", "Blancooo Padreee", "Elonith Requiem"];
const professions = ["Herald", "Scrapper", "Berserker", "Tempest", "Firebrand", "Herald", "Chronomancer", "Firebrand", "Vindicator", "Dragonhunter", "Berserker", "Chronomancer", "Tempest", "Firebrand", "Vindicator", "Vindicator", "Weaver", "Firebrand", "Firebrand", "Druid", "Tempest", "Firebrand", "Chronomancer", "Scrapper", "Spellbreaker", "Scourge", "Chronomancer", "Weaver", "Vindicator", "Weaver", "Firebrand", "Tempest", "Vindicator", "Vindicator", "Spellbreaker", "Scrapper", "Druid", "Weaver", "Firebrand", "Tempest", "Weaver", "Scourge", "Scourge", "Scrapper", "Scourge", "Scourge", "Scourge", "Vindicator", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 5151, 2434, 778, 4667], [2006, 11246], [616, 3713, 1541, 6708, 576, 0, 306], [0, 0, 6151, 696, 0, 3390, 899, 0, 0, 0, 0, 0, 237, 0, 0, 2357], [6990, 0, 1367, 0, 293, 24, 0, 5641, 0, 0, 438], [0, 0, 5027, 0, 2297, 4408, 269, 269, 0, 0, 1097, 809, 580, 0, 0, 0], [0, 0, 4737, 0, 0, 2211, 0, 1109, 0, 0, 214, 2678, 1981, 2140, 0, 1101], [0, 0, 3636, 683, 694, 6046, 0, 0, 0, 1304, 1101, 2080, 304, 379, 629], [0, 0, 3842, 0, 0, 0, 0, 2765, 0, 0, 2444, 3436, 4812, 0, 0, 1101], [0, 1108, 497, 1108, 3035, 0, 2948, 0, 607, 3866, 269, 0, 1627, 4231], [0, 0, 8394, 3615, 0, 2216, 0, 1029, 0, 42, 2766, 1920, 0, 0, 0], [0, 239, 1110, 1193, 686, 11213, 0, 0, 0, 0, 1985, 0, 3113, 1119, 0, 0], [0, 4944, 4709, 0, 1108, 0, 2754, 0, 521, 3008, 2434, 0, 2681], [0, 2390, 0, 388, 5572, 0, 4152, 650, 3858, 1096, 3240, 1560, 0, 0], [6748, 1590, 549, 5132, 1353, 2, 0, 0, 2230, 2530, 2592, 269, 0, 0], [0, 0, 1523, 1144, 0, 3476, 1338, 2461, 0, 0, 525, 2259, 6325, 0, 0, 5862], [0, 0, 4878, 3100, 0, 10072, 0, 0, 0, 0, 793, 6760, 414, 0, 0, 269], [3165, 8712, 10, 6377, 679, 0, 0, 958, 269, 361, 4633, 1524], [0, 5509, 3751, 0, 9589, 0, 3, 0, 0, 1759, 4994, 0, 923, 460], [111, 9819, 3357, 562, 6998, 1248, 0, 0, 605, 467, 1862, 3386], [3733, 2327, 520, 8431, 0, 1070, 0, 2901, 2636, 1039, 1459, 4598], [0, 9440, 2278, 0, 6267, 0, 1257, 0, 235, 1343, 903, 5320, 0, 0, 3022], [252, 0, 5364, 1968, 588, 10300, 0, 0, 0, 0, 390, 4810, 1763, 2078, 0, 3060], [306, 311, 3358, 4830, 511, 9940, 248, 1159, 0, 0, 1836, 1694, 793, 479, 1457, 3794], [0, 1563, 8261, 0, 16, 5454, 1101, 0, 0, 1596, 2492, 4649, 1909, 0, 3872], [0, 9406, 0, 12593, 0, 0, 0, 0, 3915, 5099], [0, 0, 10029, 742, 0, 6685, 0, 0, 0, 0, 2505, 431, 11552, 304, 0, 1198], [331, 4400, 5465, 0, 3771, 269, 2728, 0, 0, 4214, 5638, 2322, 4109, 538], [0, 0, 7112, 2735, 310, 10551, 608, 549, 0, 1338, 2401, 0, 5455, 0, 2777, 297], [0, 293, 13102, 984, 0, 9894, 304, 1115, 0, 0, 1265, 269, 4638, 2914], [0, 0, 4717, 7672, 0, 12563, 0, 1248, 0, 0, 1312, 3617, 3815, 326, 0, 0], [0, 101, 6882, 2623, 0, 11906, 0, 303, 0, 453, 1250, 0, 5928, 839, 2018, 3531], [0, 7345, 1088, 0, 13955, 0, 972, 0, 0, 2314, 1955, 2945, 1627, 0, 3992], [0, 3248, 8491, 4682, 0, 5847, 0, 1257, 0, 5200, 0, 5601, 1055, 365, 2250], [0, 1108, 6792, 6420, 12, 12679, 0, 4596, 0, 26, 2890, 1922, 1548, 0, 0, 1650], [0, 783, 17262, 5053, 113, 17470], [303, 0, 6307, 9523, 0, 6956, 0, 1297, 0, 0, 1761, 3713, 8406, 0, 0, 4426], [0, 152, 10247, 10763, 310, 13773, 0, 0, 0, 2713, 3699, 3009, 3112, 0, 269], [157, 1120, 7615, 4268, 0, 21535, 0, 2089, 0, 0, 4454, 242, 5712, 271, 0, 1916], [0, 21346, 5673, 0, 14989, 0, 521, 0, 391, 556, 5258, 1022, 0, 674], [0, 0, 411, 5824, 0, 0, 3654, 1737, 26838, 1311, 3383, 12268], [1551, 325, 11959, 3204, 0, 12602, 0, 3783, 0, 0, 3795, 5797, 8624, 1223, 2862, 1332], [0, 0, 8578, 1699, 2071, 8899, 0, 0, 0, 8853, 6377, 11448, 2581, 2465, 4622], [1302, 2783, 10955, 5626, 12, 16745, 78, 3512, 0, 163, 2094, 4444, 4914, 822, 1030, 3318], [0, 137, 11623, 6827, 486, 8868, 2496, 0, 610, 3691, 3886, 7413, 6638, 5932, 626], [1224, 0, 11171, 2711, 4647, 27650, 0, 6349, 0, 545, 2163, 6229, 1683, 0], [278, 10247, 3893, 1108, 20962, 0, 4798, 0, 269, 3434, 7740, 8653, 2936, 512], [0, 532, 16623, 8236, 539, 26811, 1242, 355, 1253, 636, 8105, 844, 0, 3244], [0, 0, 17816, 15203, 0, 20376, 0, 4878, 0, 0, 1871, 4530, 7260, 1529, 0, 641], [303, 1591, 12018, 9358, 0, 39162, 1248, 1103, 0, 0, 6157, 8297, 6480, 0, 2480, 1945]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

