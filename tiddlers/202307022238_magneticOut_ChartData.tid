created: 20230702223827000
creator: Drevarr
modified: 20230705163541108
modifier: drevarr
tags: ChartData
title: 202307022238_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Perpetual Hope", "Vini Boy", "Valaria Emberstorm", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.9129, 13.906, 56.6725, 0.0, 0.0, 0.0, 39.469, 44.1558, 42.331, 0.0, 39.0382, 34.742, 119.1818, 40.7462, 0.0, 83.8438, 0.0], [94.6099, 71.767, 74.5478, 0.0, 109.3488, 49.896, 37.6787, 7.5632, 39.6215, 34.953, 19.8947, 0.0, 76.4064, 39.8459, 75.9213, 58.5371, 29.172], [20.0047, 0.0, 34.839, 77.9549, 78.2711, 33.9487, 0.0, 17.5896, 19.1338, 79.7706, 55.1023, 17.867, 15.5501, 20.0424, 59.5866, 58.968, 20.034, 19.5967, 0.0, 60.0084, 0.0, 59.994, 0.0, 19.866, 0.0, 39.7188, 36.2943, 0.0, 46.69, 0.0, 0.0, 19.0002, 19.8135, 39.8446, 0.0, 18.9704, 58.8697, 55.9305, 19.7324, 0.0, 20.0038, 0.0, 78.1165, 20.106], [55.9797, 105.0473, 112.4784, 153.8582, 57.1725, 278.4797, 130.518, 66.5851, 57.6853, 59.7114, 75.2917, 96.0079, 0.0, 0.0, 39.816, 43.861, 73.5462, 190.1542, 64.719, 15.5828, 60.5808, 118.1611, 120.204, 60.0642, 69.2921, 19.7792, 194.1741, 111.4483, 311.9688, 19.7817, 74.1664, 195.4804, 82.1142, 48.613, 151.7584, 36.2675, 41.3425, 47.8451, 49.1186, 99.5803, 41.6621, 20.1462, 169.189, 222.0627, 66.4922, 59.7432, 63.9187, 0.0, 143.5578, 48.204]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

