created: 20230506002551000
creator: Drevarr
modified: 20230705163528331
modifier: drevarr
tags: ChartData
title: 202305060025_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Sanctus", "Stoic Rapidfire", "Artakama Nahid", "Tegan Parker", "Mrs Stealth Monkey", "\u00c1rkantor", "Mac Adaymia", "Drevarr Moonwillow", "Zaidy Sagemist"];
const professions = ["Firebrand", "Druid", "Tempest", "Tempest", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[149.797, 324.5176, 73.4027, 92.4324, 22.5217, 354.3271, 250.0554, 226.1915, 58.2576, 105.3125, 168.6618, 508.6131, 529.3738, 478.0317, 493.396], [352.7871, 927.3891, 134.8859, 114.7027, 158.9565, 18.3696, 979.7943, 627.6471, 851.4383, 156.5303, 98.3333, 273.8529, 865.6329, 1344.9439, 992.73, 303.7479], [248.6931, 982.1426, 111.255, 49.1081, 0.0, 753.6047, 634.045, 816.3574, 182.9545, 107.0625, 231.1324, 858.3651, 1640.3178, 973.83, 1113.967], [224.5693, 1176.3169, 60.2282, 182.027, 15.7609, 806.8971, 405.8512, 1007.8, 339.5, 294.9688, 168.1912, 851.4187, 1452.2336, 1071.385, 1140.2447], [653.7641, 114.4698, 396.6216, 39.6087, 1237.1549, 781.3702, 1038.6298, 465.3939, 14.0417, 103.2647, 936.2401, 1962.8598, 183.9183, 1594.7415], [1097.3564, 3712.662, 272.3087, 656.1622, 233.5, 3100.3222], [530.5644, 1994.7289, 81.7517, 980.2027, 0.0, 0.0, 1454.995, 1189.5017, 1097.3957, 327.1818, 198.4479, 180.3382, 1572.2381, 1463.729, 1315.1233, 982.462], [2665.1283, 373.0099, 1670.3099, 123.5369, 640.9595, 294.0435, 103.3913, 1753.0967, 1184.3218, 1364.9021, 353.3485, 361.6458, 288.1912, 1481.4008, 2346.8785, 1813.9617, 1604.4262], [776.8713, 2628.7975, 416.0604, 418.7432, 0.0, 276.3261, 2544.0793, 1720.3356, 1707.7745, 322.9559, 2073.2857, 2845.5234, 2211.1733, 2421.5142]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

