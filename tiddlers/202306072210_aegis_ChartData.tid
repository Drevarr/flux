created: 20230607221050000
creator: Drevarr
modified: 20230705163533934
modifier: drevarr
tags: ChartData
title: 202306072210_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Uneeta Healah", "Belvyn Brightblade", "Blanco Padre Guard", "Sub Train", "Crusader Siolith", "Gabe Malhorn", "Drevarr Moonwillow", "Rafaellagabriela", "Solus Sanctus", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Etcherii"];
const professions = ["Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[39.483, 14.996, 281.4565, 22.5315, 49.6838, 1.4269, 0.0, 33.1117, 0.0, 15.7821, 3.772, 1.9987, 5.3592], [0.0, 6.624, 363.5005, 5.2096, 8.3539, 6.1833, 0.0, 13.2894, 10.8753, 2.9511, 15.87, 0.3289, 44.0916], [64.2982, 11.5, 512.775], [39.852, 83.168, 443.2655, 52.6821, 24.4022], [384.0115, 7.6842, 77.0539, 31.8246, 0.0, 44.3891, 0.0, 92.6826, 14.996, 47.6905, 41.0222], [26.937, 35.098, 548.0995, 51.6402, 67.9306, 7.2211, 0.0, 41.7312, 0.165, 19.4176, 4.554, 0.0, 9.1594], [651.794, 0.0, 70.019, 38.8728, 0.0, 22.5299, 25.5196, 20.9573, 8.165, 93.4076, 101.3863], [17.0663, 106.26, 867.1595, 31.7134, 102.8851, 21.4903, 0.0, 42.5012, 11.5733, 37.1244, 11.73, 9.7405, 32.2526], [1528.0695, 250.7771, 70.019, 65.941, 12.5244, 39.1727, 10.6596, 100.8517, 14.95, 46.1978, 78.1956], [57.4718, 113.528, 2071.611, 137.6637, 148.8317, 88.4258, 0.0, 76.6562, 38.7299, 53.5908, 31.257, 54.0408, 58.9512], [327.7643, 150.604, 2070.4715, 74.5624, 92.003, 49.4233, 0.0, 36.9868, 5.0126, 49.9981, 3.956, 57.4563, 78.4392], [9.7785, 50.186, 2685.8015, 125.2258, 187.3037, 46.0938, 0.0, 69.403, 30.8367, 165.3488, 18.561, 86.8296, 97.0015], [371.3985, 101.752, 2643.64, 167.9445, 213.9043, 49.3368, 11.2812, 55.5671, 32.5372, 13.4726, 52.026, 51.9915, 136.8058], [566.9685, 158.332, 2803.17, 126.984, 209.7274, 59.6712, 0.0, 59.0695, 59.6811, 101.3649, 43.884, 135.2538]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

