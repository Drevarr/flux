created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Regis Hawkesburne", "Cat Wigglebooty", "Xanvias Einzbern", "Goggles With Frames", "Lucky Luprac\u00e1n", "Luke The Ghastly", "Jimbo The Pleb", "J\u00e2sm\u00eene", "Gamora Titus", "Forever Dreaming", "Lord Fluffernaut", "Liu Mira", "Greg The Knight", "Loganlek", "Venomina The Sly", "Tegan Parker", "High Sorcer Baradun", "Yummy Kiwi", "Scarlet Merc\u00fcry", "Zaedy Zae", "Gestern Yesteryear", "Air One Com", "Keypek The Drunk", "Koralia Danai", "Budget Chicken", "Mistwalker Cael", "Sub Train", "Bella Sassy", "Elizabeth Conbolt", "Drevarr Moonwillow", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Weaver", "Berserker", "Scrapper", "Berserker", "Berserker", "Scrapper", "Scourge", "Berserker", "Tempest", "Firebrand", "Scourge", "Berserker", "Berserker", "Firebrand", "Berserker", "Druid", "Tempest", "Tempest", "Firebrand", "Firebrand", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Herald", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.8154, 0.0, 8.519, 1.5053, 0.0, 0.0, 0.0, 2.7907, 3.2928, 3.3244], [0.0, 4.5101, 7.0963, 0.0, 0.0, 0.0, 0.0, 4.265, 0.0, 0.0, 1.8547, 0.0, 7.9486, 0.0, 0.0, 0.0, 0.0, 8.5344, 0.0], [6.2899, 0.0, 8.519, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6229, 1.1695, 11.923, 0.0, 0.0, 1.0102, 0.7943, 3.024, 0.0], [8.8733, 0.0, 4.343, 0.0, 3.5885, 3.5649, 2.7216, 0.0, 0.1882, 0.0, 0.0, 0.0, 0.661, 4.1163, 3.4546, 0.0, 0.0, 0.0, 4.1664, 0.0], [2.2644, 5.4432, 0.0, 2.8994, 1.8559, 0.0, 0.0, 15.1876, 0.0, 0.0, 0.0, 5.1324, 2.8224, 0.513], [9.8842, 0.0, 5.6794, 4.4621, 0.0, 0.0, 3.0996, 0.0, 4.7362, 0.0, 0.0, 2.1865, 10.9294, 0.0, 0.0, 0.0, 0.0, 1.5456, 0.0], [15.9494, 0.396, 10.0224, 7.2038, 4.7578, 0.918, 6.4512], [5.8406, 0.0, 7.6838, 1.6666, 0.0, 0.0, 3.6792, 0.0, 1.1603, 0.0, 0.0, 3.2458, 2.0848, 18.3103, 0.0, 0.0, 0.0, 0.9165, 3.4944, 3.7193], [9.9965, 0.0, 10.1894, 0.0, 0.0, 0.0, 0.0, 4.2022, 0.0, 0.0, 1.2172, 3.6612, 12.9165, 8.6365, 0.0, 3.2689, 3.8976, 0.0], [0.0, 7.5348, 7.1698, 40.0271, 2.1259, 0.0, 4.0937, 3.696, 0.0], [1.223, 3.461, 2.1934, 5.767, 5.6444, 11.3552, 8.1936, 0.0914, 0.9117, 13.2587, 11.6256, 0.9234], [46.8374, 0.0, 0.0, 13.8701, 2.4998, 0.0, 2.1672, 0.0, 1.8189, 0.0], [18.4205, 0.0, 20.3789, 5.376, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0106, 0.0, 28.2461], [23.4749, 4.95, 42.0941, 4.4621, 0.0, 4.284], [13.2538, 0.0, 16.537, 5.161, 0.0, 0.0, 8.5932, 0.0, 7.1498, 0.0, 2.3184, 4.6782, 11.3552, 6.7764, 0.0, 5.7128, 13.6416, 0.0], [17.7466, 15.5347, 11.3434, 2.0563, 0.0, 14.3388, 4.5862, 0.0, 9.7607, 8.0854, 4.8816, 10.9294, 0.0, 3.941, 14.8512, 0.9747], [16.848, 0.0, 23.2186, 5.2147, 3.7699, 0.0, 0.0, 11.5938, 0.0, 0.0, 0.0, 4.1731, 5.1359, 17.1747, 0.0, 0.0, 0.0, 0.0, 40.7904, 8.285], [74.5805, 41.0189, 1.3104, 0.0, 27.5436, 0.0], [45.1526, 6.732, 37.0829, 24.8371, 5.1005, 0.0, 6.9048, 5.8072, 13.3594, 2.6261], [36.167, 10.494, 66.649, 21.8803, 3.0643, 8.4762, 3.5532], [33.8083, 0.0, 32.4058, 3.9245, 0.0, 0.0, 9.0216, 0.0, 0.0, 6.2997, 0.0, 2.5502, 11.0853, 38.4657, 20.7277, 0.0, 0.0, 0.0, 17.0688, 0.0], [19.656, 4.9748, 40.4237, 10.2682, 7.8422, 3.1365, 4.1328, 2.801, 4.1709, 3.6432, 2.7839, 4.4919, 2.4408, 25.1234, 15.5015, 6.6528, 16.8941, 18.7488], [33.5837, 0.0, 33.408, 20.1062, 3.7901, 3.7485, 4.1328, 2.5855, 7.1187, 3.203, 9.4475, 7.8818, 45.9886, 4.3847, 4.0194, 4.4352, 2.8717, 8.6016, 0.0], [37.8518, 7.2023, 30.0672, 9.5155, 6.0682, 5.3091, 5.922, 5.089, 9.2826, 5.2523, 0.0, 7.7377, 9.9666, 38.3238, 8.9466, 8.1606, 4.928, 9.8371, 16.7328, 2.6676], [47.399, 6.9795, 52.6176, 16.343, 1.3507, 2.7693, 13.4568, 0.9234, 3.6378, 0.0, 9.7858, 7.8246, 13.1193, 41.8723, 1.9045, 7.2442, 5.9267, 14.0448, 3.1806], [29.3155, 7.2765, 46.103, 20.16, 1.1693, 4.1769, 5.67, 1.2209, 5.6134, 5.2067, 0.0, 10.3169, 13.4752, 35.0592, 7.7508, 8.2215, 19.367, 20.4074, 20.2944, 2.6419], [36.2794, 8.5388, 55.6243, 18.601, 6.9003, 7.1568, 3.4063, 12.3872, 3.203, 3.1213, 11.7949, 15.9669, 53.3694, 13.1984, 10.962, 6.9485, 15.1833, 20.8992, 5.3352], [39.312, 2.9452, 60.3014, 14.6227, 5.4835, 0.0, 1.9656, 2.1341, 16.0877, 5.7988, 0.0, 11.0704, 32.2897, 55.4985, 7.6622, 5.7246, 6.0861, 22.0571, 30.0384, 1.3338], [59.4173, 5.2965, 69.8227, 14.2464, 7.2576, 3.2283, 6.1992, 1.1491, 9.8157, 5.7532, 1.1178, 15.881, 22.3231, 70.1184, 3.7204, 14.9814, 15.8189, 12.6783, 22.176, 1.3594], [57.8448, 3.7867, 90.7027, 37.847, 0.0, 1.3311, 16.38, 19.8822, 7.7722, 3.4166, 7.1581, 9.3056, 111.281, 26.7069, 2.5626, 15.7027, 54.7008, 6.4382], [57.7325, 5.94, 75.335, 25.1059, 3.024, 9.1188, 19.1772, 8.721, 13.6416, 11.7493, 10.1654, 17.0113, 28.9336, 84.7382, 15.9001, 4.4762, 13.7738, 16.5887, 37.632, 14.4409], [76.7146, 3.4155, 144.6566, 5.3222, 12.6, 9.7002, 0.0, 9.4289, 20.4781, 11.9011, 20.8366, 42.9682, 141.0884, 23.518, 3.8976, 4.5091, 10.4481, 22.1088, 9.0801], [83.903, 11.0137, 100.8922, 27.7402, 10.7251, 0.0, 20.034, 20.6349, 13.6468, 5.2303, 19.4166, 54.9689, 131.1526, 23.9166, 15.0304, 22.2098, 60.48, 9.5161]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

