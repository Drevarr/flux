created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Crusader Siolith", "Leriel Nova", "Leyviathan", "Sofya De Nova", "Sly The Ele", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Scrapper", "Firebrand", "Tempest", "Herald", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 11.4446, 0.0, 0.0, 2.3104, 0.0, 0.0, 0.0, 10.086, 0.0, 6.9368, 220.4585, 236.3227, 0.0, 317.5128, 54.3845, 128.2163, 484.4561, 187.5627, 116.1216, 360.743], [299.0999, 843.4474, 154.1994, 16.488, 71.671, 22.4167, 71.7462, 256.4411, 239.604, 180.708, 0.0, 6.0583, 77.4835, 128.1423, 199.1352, 30.0366, 11.5492, 181.9915, 117.4601, 114.5088, 192.0794], [40.2368, 730.4549, 205.4045, 5.7888, 67.8285, 16.948, 282.2652, 296.6075, 518.322, 227.4967, 38.6454, 27.1609, 176.9229, 206.8209, 271.5328, 122.4219, 18.2831], [269.3798, 127.202, 595.8448, 26.6304, 11.1528, 45.7459, 274.8546, 361.1696, 266.664, 15.7265, 82.5045, 74.2599, 230.4852, 211.5305, 93.6859, 642.3228, 192.7115, 256.9728, 372.5669], [940.95, 564.102, 72.7246, 257.4998, 151.861, 373.7448, 597.4892, 162.9258, 183.2612, 1159.0459, 260.947, 416.0352, 686.7101], [73.4672, 37.2888, 138.9158, 372.6414, 685.6226, 1576.614, 602.3926, 39.425, 120.3943, 112.8, 406.0056, 655.5912, 196.6032, 92.9813, 1410.0946, 224.2265, 474.1632, 840.8837], [664.3642, 64.8887, 3690.4229, 460.4022, 56.4336, 563.081, 18.2742, 385.5996, 894.0118, 3773.64, 1213.8694, 230.5836, 510.2423, 598.253, 527.2839, 1164.6316, 639.8251, 411.7014, 1309.9766, 608.235, 817.9584, 1611.4039], [452.7819, 4210.8788, 342.5277, 179.8776, 543.7466, 0.0, 647.91, 1239.164, 4252.602, 1899.583, 93.2008, 254.247, 223.4726, 829.8147, 1175.416, 326.5342, 252.5175, 1925.4606, 521.9505, 800.352, 2275.2778]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

