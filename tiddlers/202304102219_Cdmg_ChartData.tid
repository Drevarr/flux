created: 20230410221909000
creator: Drevarr
modified: 20230705163525124
modifier: drevarr
tags: ChartData
title: 202304102219_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Blancooo Padreee", "Fecund Algorithm", "Aisling Sidra", "Mac Chiato", "High Sorcer Baradun", "Jeckyll Mbs", "Mistwalker Caelon", "Sygaldry Verdandi", "Sumatra Satyricon", "Solus Sanctus", "Xyntharos", "Ark Darkness", "Legacy Of Mathus", "Sub Train", "Johosh The Great", "Gavann", "R E A P E R Y U", "Eibh\u00ebar", "Lord Erin The Wise", "Sofya De Nova", "Rozaalyna", "Mike The Archmagus", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Rina Of Theros", "Smol Gluvs", "Nazhul Naxxremis", "Elonith Requiem", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Firebrand", "Berserker", "Mechanist", "Reaper", "Tempest", "Tempest", "Berserker", "Vindicator", "Firebrand", "Soulbeast", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Weaver", "Weaver", "Scourge", "Weaver", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.4806, 0.0, 1.0436, 0.6155, 9.6406, 0.0, 0.0, 0.0, 18.5417, 4.7273, 8.9712, 0.0, 26.875, 12.3871, 0.0, 0.0, 130.0519, 0.0, 9.2473, 14.5472, 0.0, 13.4286], [5.0699, 0.4909, 2.9723, 1.7826, 3.5613, 0.0, 1.6932, 12.0, 0.0, 0.6635, 9.875, 5.6528, 7.6935, 0.115, 0.5778, 7.987, 0.0, 8.8065, 85.066, 242.3433, 0.0], [10.5914, 19.5164, 0.0, 44.8654, 61.95, 97.0556, 129.0161, 7.9823, 41.3111, 63.6234, 6.9623], [6.8553, 13.729, 8.0714, 7.2727, 89.3333, 8.25, 27.2115, 0.45, 53.9861, 76.4516, 2.5841, 0.0889, 0.7922, 13.5094, 0.0, 20.2736, 22.2388, 49.875], [0.0, 1.4182, 1.6007, 8.4226, 5.0065, 0.0, 3.7841, 1.5, 0.0, 72.9808, 0.0, 42.5, 42.9516, 0.0, 0.0, 9.0, 0.0, 22.6022, 5.4906, 101.1642, 46.6518], [13.4409, 27.1564, 1.7209, 7.3159, 3.4, 1.3968, 8.3636, 57.5139, 14.8462, 10.475, 8.8472, 0.0, 0.0, 0.0, 50.0909, 7.5849, 11.1038, 2.0597, 74.0], [0.938, 0.3441, 7.1491, 0.7172, 3.9552, 23.3484, 0.0, 20.9773, 80.9583, 0.0, 6.4327, 34.025, 20.6667, 0.0323, 23.2124, 0.0, 137.987, 1.4151, 56.7634, 0.0, 40.9552], [0.9302, 3.4624, 2.6255, 7.976, 9.6365, 17.071, 2.4921, 7.6932, 11.6528, 3.8864, 4.5481, 86.325, 3.3889, 32.7419, 45.8407, 0.0, 9.0779, 2.8868, 11.5376, 46.1038, 0.0, 27.3839], [15.2742, 20.6691, 3.4713, 5.6671, 2.0323, 11.373, 6.7159, 14.4615, 0.0, 55.75, 25.2903, 8.2124, 0.0, 0.6104, 0.0, 38.8817, 25.5472, 0.0, 100.5536], [11.9624, 8.5782, 26.4233, 8.2894, 6.9613, 0.0, 11.4205, 38.7222, 57.2955, 9.8462, 30.65, 18.0, 17.8065, 4.646, 5.4222, 17.8182, 2.6792, 7.2473, 19.6132, 10.2537, 31.3304], [4.2097, 12.1818, 7.8614, 10.6175, 0.0129, 0.6587, 0.0, 91.3472, 91.2692, 0.0, 6.1111, 12.2903, 0.2124, 20.5778, 1.4935, 30.5849, 30.1398, 26.7642, 7.0149, 35.9286], [0.0, 5.0753, 2.2327, 19.9982, 13.0211, 0.0, 0.0, 26.8977, 1.5139, 0.0, 11.4808, 0.0, 0.0, 29.5, 39.9912, 0.0, 24.4416, 8.4151, 29.6774, 13.8585, 51.7612, 65.0268], [13.3333, 2.4145, 4.5952, 19.3071, 0.0, 17.3413, 10.2727, 85.75, 9.5909, 19.6923, 0.0, 0.0, 63.9355, 21.2124, 24.7556, 19.7662, 0.0, 8.1505, 36.3679, 3.0299], [15.9946, 21.1927, 33.281, 18.176, 11.4903, 19.2302, 56.4091], [9.4968, 3.5, 7.8523, 53.5, 2.1364, 16.2788, 38.325, 24.7361, 272.0968, 29.6106, 9.4, 35.987, 1.566, 37.8602, 97.8679, 73.5224, 79.6429], [7.124, 0.0, 16.8836, 4.3789, 15.0944, 3.9226, 1.0079, 0.0, 12.4583, 0.0, 1.4135, 0.0, 27.0417, 3.4839, 13.6195, 0.0, 29.5974, 0.0, 66.3226, 70.0094, 166.3731, 44.8214], [6.8871, 1.7709, 8.841, 12.4851, 0.9419, 0.0714, 9.8182, 7.2639, 0.0, 89.9423, 7.65, 32.9861, 131.4677, 7.0885, 7.2889, 33.7143, 3.3962, 49.0108, 26.5283, 113.1343, 70.0179], [110.1132, 251.1791, 460.4732], [2.7204, 35.2691, 8.2181, 12.4008, 3.1742, 1.7857, 9.5682, 57.25, 20.8636, 21.6154, 12.95, 12.7917, 147.8065, 0.7434, 10.3556, 44.5844, 0.4906, 57.5269, 142.1981, 110.8358, 104.4018], [125.4264, 33.8495, 10.8109, 9.8835, 25.4117, 4.5097, 0.0, 17.3295, 206.9861, 14.0, 50.2115, 0.0, 37.75, 22.3065, 45.115, 1.3333, 40.7143, 53.5472, 24.7634, 113.7736], [22.3641, 36.5489, 38.7548, 12.3016, 0.0, 33.7639, 33.2788, 24.675, 56.0694, 54.2742, 27.354, 74.0889, 116.026, 15.0, 54.914, 62.8208, 151.9851, 170.9375], [0.4301, 43.6618, 29.3438, 24.6787, 14.3484, 25.2619, 62.2955, 363.0833, 55.5865, 72.075, 74.5556, 255.6774, 4.9027, 15.4222, 0.6753, 0.0, 204.9677], [94.7984, 22.8925, 29.0618, 25.0869, 52.2643, 28.2387, 7.8175, 48.2955, 47.4861, 17.6591, 33.1923, 10.575, 122.5417, 108.9839, 60.9204, 29.3778, 107.7792, 5.717, 118.6882, 96.7358, 0.0, 34.4911], [0.0, 16.1828, 52.2473, 6.6654, 8.5251, 30.1613, 2.0714, 107.9659, 309.5417, 0.0, 95.8654, 57.7, 270.25, 168.371, 23.6726, 120.5333, 4.026, 0.0, 144.4301, 159.1415, 143.6866, 273.2857], [0.0, 27.8763, 84.7127, 18.9353, 27.1352, 36.3419, 8.9524, 24.5682, 253.0417, 116.8077, 0.0, 67.1806, 404.629, 21.7699, 1.2667, 137.8701, 7.717, 45.4624, 84.8585, 289.9254, 44.3482], [49.5215, 23.5418, 30.9612, 44.0557, 10.9935, 21.7698, 119.3409, 346.1528, 25.1818, 153.5673, 61.8, 102.0833, 80.8387, 61.7345, 28.5333, 104.5714, 4.0189, 150.957], [0.0, 27.1989, 45.1018, 35.3346, 38.1039, 51.4452, 55.0794, 89.0568, 198.5417, 47.8182, 93.7596, 175.55, 90.0278, 240.8871, 79.8584, 14.6667, 185.7662, 0.0, 156.7527], [170.7287, 35.1452, 96.1636, 34.1201, 39.3927, 235.8611, 54.4091, 165.0192, 272.35, 254.8472, 332.4516, 75.5487, 65.8889, 135.3117, 3.283, 281.3978], [14.7164, 40.4455, 72.4402, 74.3226, 39.8651, 171.125, 175.6389, 28.3182, 90.9904, 141.775, 296.6111, 323.5161, 2.4513, 18.9333, 368.5974, 69.5283, 189.828], [69.8527, 47.5645, 36.4836, 64.7634, 69.4185, 58.2452, 33.3889, 142.0795, 348.5278, 23.3409, 153.3173, 254.35, 207.7222, 420.9355, 23.885, 46.0889, 15.3377, 0.0, 440.3118], [109.5271, 1.2043, 117.9745, 41.0906, 39.9314, 72.2903, 35.619, 165.7727, 233.8472, 8.7273, 53.6635, 59.975, 282.1806, 154.1452, 68.0796, 121.6444, 82.5065, 0.0, 355.9247, 295.6321, 119.3582, 328.625]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

