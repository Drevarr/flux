created: 20230523000132000
creator: Drevarr
modified: 20230705163531312
modifier: drevarr
tags: ChartData
title: 202305230001_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Hyde En Sikh", "Arriasa", "Venomina The Fierce", "Smol Gluvs", "Nocta Asthariel", "Primal Clone", "Grasszanine", "Black Raspberry Pie", "Be\u00eb"];
const professions = ["Chronomancer", "Druid", "Spellbreaker", "Scourge", "Scourge", "Chronomancer", "Spellbreaker", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0762, 0.0048, 0.0037, 0.0157, 0.0484, 0.0, 0.0, 0.053, 0.0, 0.0, 0.0241], [0.0286, 0.0465, 0.0096, 0.0074, 0.0425, 0.0, 0.0, 0.0, 0.0391, 0.0, 0.0, 0.0448], [0.2, 0.0465, 0.0529, 0.0, 0.1096, 0.0, 0.06, 0.0, 0.0983], [0.1714, 0.0233, 0.0481, 0.0185, 0.1633, 0.2903, 0.26, 0.0172, 0.0753, 0.0, 0.0707], [0.0571, 0.0, 0.0529, 0.0, 0.132, 0.1452, 0.12, 0.0, 0.1492, 0.1212, 0.0, 0.1259], [0.1714, 0.0, 0.024, 0.0037, 0.1432, 0.3226, 0.3, 0.0086, 0.145, 0.0303, 0.0, 0.081], [0.1238, 0.0, 0.0096, 0.0, 0.179, 0.2742, 0.24, 0.0, 0.1158, 0.0, 0.1483], [0.3143, 0.0, 0.0769, 0.0333, 0.1186, 0.0323, 0.08, 0.0517, 0.2678, 0.0, 0.0, 0.2276], [0.3333, 0.1058, 0.0333, 0.1633, 0.129, 0.38, 0.0259, 0.2413, 0.0, 0.0, 0.2017]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

