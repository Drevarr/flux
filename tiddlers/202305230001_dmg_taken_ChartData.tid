created: 20230523000132000
creator: Drevarr
modified: 20230705163531182
modifier: drevarr
tags: ChartData
title: 202305230001_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Eruwon", "Cedryn X", "Mistwalker Caelon", "Gavann", "Black Raspberry Pie", "Alnerian", "Kmpek", "Drevarr Moonwillow", "Primal Clone", "Miphest\u00f6", "Elonith Primal", "Husky Guard", "Sumatra Satyricon", "Cat Wigglebooty", "Sygaldry Verdandi", "Soxxdodendron", "Crusader Siolith", "Sire Nighthawk", "Xanvias Einzbern", "Koralia Danai", "M\u00e4raas", "Fribble Bibble", "Blanco Padre Guard", "Hauzzy", "Phaydyd", "Hyde En Sikh", "Carne Palida", "Scraparone", "Bella Sassy", "Tribal S", "Cheaky Gadgetz", "Bamm\u00edt", "Hrakkus", "Mayauraa", "Oo Dads Mad", "Need Ragee", "Zefirokai", "Aira Draugr", "The Incredible Mr E", "Belvyn Brightblade", "Guntheryah", "Cerys Fireblade", "Chloe Phoenixshadow", "Scrivy", "Woginaator", "S\u00f6phie Dark", "Slingsshot", "Really Good Griefer", "Phaydyd"];
const professions = ["Vindicator", "Weaver", "Berserker", "Vindicator", "Firebrand", "Chronomancer", "Dragonhunter", "Vindicator", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Dragonhunter", "Soulbeast", "Scrapper", "Firebrand", "Willbender", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Dragonhunter", "Chronomancer", "Scrapper", "Scrapper", "Firebrand", "Druid", "Mechanist", "Berserker", "Catalyst", "Dragonhunter", "Spellbreaker", "Druid", "Tempest", "Herald", "Scourge", "Firebrand", "Soulbeast", "Berserker", "Dragonhunter", "Tempest", "Daredevil", "Reaper", "Untamed", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[117.4321, 0.0, 200.2947, 73.4185, 838.297, 92.1017, 13.3077, 48.113, 493.0169, 18.1852, 3.7683, 882.1684], [2608.3333, 25.9099, 756.1559, 0.0, 0.0, 1108.4307], [263.375, 165.7614, 218.3992, 594.3218, 19.1696, 482.0113, 39.0, 7.3188, 749.2153], [173.4314, 145.9368, 228.9689, 625.6674, 67.9184, 0.0, 32.8938, 462.5695, 683.3802], [2889.8421, 176.1034, 184.113, 700.5678, 0.0, 15.8506, 568.8499, 72.1, 6.0584, 737.1209], [131.8431, 0.0, 146.8032, 148.5092, 586.162, 19.9219, 0.0, 28.807, 499.9456, 73.1304, 2.2822, 575.7483], [40.1902, 36.8393, 0.0, 70.4474, 742.9228, 647.6786, 161.7892, 908.1335], [231.5784, 115.4657, 91.874, 628.0285, 26.8036, 2.1026, 46.1062, 555.2145, 0.0, 13.6087, 736.4428], [120.7429, 16.7419, 140.8937, 79.0584, 566.6591, 79.7368, 1.425, 16.8609, 320.9414, 79.8394, 671.8132], [333.2212, 0.0, 154.25, 157.2449, 686.5899, 30.32, 17.625, 20.3119, 327.2056, 0.0, 9.4215, 538.3392], [151.0891, 0.0, 239.5, 841.7754, 57.1429, 348.5897, 0.0, 404.0279, 0.0, 0.0, 509.6461], [145.2524, 493.4535, 164.8108, 500.6536, 20.9808, 0.0, 0.0, 482.901, 0.0, 65.2397, 541.2062], [192.699, 0.0, 325.4048, 136.506, 825.7638, 5.6481, 390.6842, 31.3211, 674.4, 0.0, 0.0], [216.2816, 366.7748, 200.2201, 582.7237, 184.3125, 0.0, 0.0885, 636.9199, 0.0, 0.0, 749.0985], [208.5962, 0.0, 147.4783, 155.8493, 586.3885, 56.9787, 375.1579, 31.871, 325.2598, 74.0, 27.1811, 553.8474], [183.0288, 209.75, 123.0385, 982.9014, 45.6, 0.0, 9.6486, 410.4856, 0.0, 0.0, 428.4948], [213.4476, 0.0, 123.7941, 131.9538, 518.6422, 126.3333, 0.0, 21.5398, 311.7504, 26.4074, 0.0, 522.4211], [121.6176, 112.2563, 136.7945, 580.4257, 16.5161, 405.8, 27.2088, 375.2671, 26.0, 0.0, 437.6346], [125.9423, 143.5, 183.8103, 35.3182, 130.0536, 65.1842, 15.6216, 609.925, 0.0, 579.731], [166.1429, 164.1947, 50.5479, 557.3801, 178.1489, 17.0256, 48.1518, 343.7087, 178.5217, 0.0, 543.974], [114.3462, 0.0, 94.0195, 121.7582, 610.1697, 15.377, 5.925, 2.0571, 298.2482, 0.0, 477.9921], [137.5534, 0.0, 325.8902, 150.7592, 438.5478, 28.9787, 245.6216, 41.4522, 346.8629, 399.2174, 0.0, 478.3364], [226.3883, 0.0, 96.4615, 184.612, 504.8715, 38.6667, 2.925, 21.2679, 427.8246, 0.0, 396.7726], [141.3077, 68.3382, 129.6706, 622.6066, 54.0182, 0.0, 71.7105, 254.6685, 0.0, 11.0662, 487.8958], [615.0831, 62.8, 15.3472, 903.6066], [101.4, 21.1593, 601.6772, 728.3293], [107.1456, 257.7091, 56.0548, 521.7149, 126.625, 65.675, 9.3509, 273.6835, 0.0, 0.0, 419.8319], [1303.3226, 52.2632, 1233.7727], [161.075, 22.2667, 517.9425, 193.4395, 898.9878], [116.4078, 97.8254, 84.1714, 456.6935, 35.6613, 49.6857, 14.2212, 253.9219, 0.0, 437.0139], [417.2992, 0.0, 12.3386, 782.4377], [427.738, 806.6098, 0.0, 45.5446, 380.2145, 0.0, 9.1214, 899.749], [266.7749, 400.4073, 192.9737, 0.0, 55.0345, 435.604, 70.4333, 438.5172], [245.5, 842.0786, 282.6667, 24.241, 955.5395], [286.5422, 227.5, 9.0811, 689.1934, 0.0, 0.0, 1143.841], [305.181, 0.0, 201.6749, 21.9359, 1011.5057], [432.2072, 163.1167, 838.8788], [708.2707], [344.6505, 0.0, 166.5435, 98.3358, 707.2442, 31.9818], [58.039, 443.7371, 60.8718, 11.4123, 950.2899], [185.3295, 219.3082, 149.3875, 502.7052, 0.0], [86.3794, 578.766], [338.7961, 0.0, 156.9806, 98.5, 501.2996, 31.7347], [335.3301, 171.4552, 72.1082, 504.6816], [212.2767, 106.5375, 130.7114, 311.2308], [409.8418], [503.2816, 146.25], [322.5644, 114.7968], [48.2963], [0.0, 32.0486]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

