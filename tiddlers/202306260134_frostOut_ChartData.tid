created: 20230626013408000
creator: Drevarr
modified: 20230705163538832
modifier: drevarr
tags: ChartData
title: 202306260134_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Zhavashian", "Venomina The Siren", "Miphest\u00f6", "Tegan Parker", "Artakama Nahid", "Elon The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[76.5987, 104.2949, 145.2338, 115.808, 131.5361, 129.4541, 53.6562, 54.0124, 77.1139, 84.7646, 72.7457], [59.0897, 19.9916, 34.709, 23.4388, 35.8547, 49.5286, 36.36, 122.04, 92.9682, 69.9924, 16.3003, 47.4192, 63.3146, 43.4195, 92.0674, 25.3819, 16.4774, 17.9782, 20.0606, 0.0, 45.1275, 16.0177, 48.0035, 20.1369, 48.3806], [33.0048, 35.64, 20.025, 20.1326, 333.8334, 43.8421, 0.0, 75.5566, 36.0508, 13.8186, 23.408, 38.6813, 55.1639, 33.2775, 12.2688, 69.5916, 21.9565, 8.708, 52.0102, 42.7061, 35.8901, 72.0905, 61.6602, 12.6605, 30.5573, 16.3576, 0.0, 36.9458, 24.6726], [116.843, 18.647, 44.1258, 24.486, 84.8355, 77.3949, 98.1, 106.488, 101.9772, 95.4006, 39.3939, 15.4066, 80.167, 55.5084, 68.2854, 45.402, 87.0643, 37.1809, 0.0, 0.0, 17.8976, 9.0937, 95.4922, 51.7238, 57.7421], [123.7939, 174.2256, 112.7167, 59.8075, 849.9034, 99.7777, 53.9195, 131.878, 70.4525, 38.0283, 79.0636, 120.0707, 62.8672, 94.905, 120.5712, 105.7212, 115.1519, 77.7222, 90.0821, 102.3322, 100.4757, 110.8862, 75.2808, 75.264, 35.3998, 92.1725, 86.3559, 72.8718, 50.8208, 35.2351, 85.37], [55.4688, 235.3968, 155.426, 99.4234, 1116.2492, 130.4061, 78.9551, 141.0421, 79.0783, 46.453, 76.4456, 62.9587, 118.5481, 113.7375, 117.8064, 124.2072, 160.1196, 11.8147, 63.7362, 78.2738, 138.2364, 131.2207, 87.0628, 108.8783, 104.8589, 91.839, 85.6198, 31.6148, 86.0363, 83.0139, 45.0778, 54.1258, 103.3828]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

