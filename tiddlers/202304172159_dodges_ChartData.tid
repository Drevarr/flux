created: 20230417215912000
creator: Drevarr
modified: 20230705163525741
modifier: drevarr
tags: ChartData
title: 202304172159_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Sheep Paw", "Miphest\u00f6", "Krelkit", "Zadie Miststep", "Black Raspberry Pie", "Tootsie Pop Rocks", "Kmpek", "Sygaldry Verdandi", "Tegan Parker", "Xanvias Einzbern", "Fribble Bibble", "Tribal S", "Skye Nightroad", "Be\u00eb", "Belvyn Brightblade", "Jeckyll Mbs", "Venomina The Siren", "Nazhul Naxxremis", "Demon Staph", "Rina Of Theros", "Drevarr Moonwillow", "Sub Train", "Mettrik Milliohm", "Ark Darkness", "Sumatra Satyricon", "Lord Erin The Wise", "Mike The Archmagus", "Grasszanine", "Cat Wigglebooty", "Arriasa", "Koralia Danai", "Sp\u00edcy Cheese", "Rozaalyna", "Elonith Requiem", "Gavann", "Etchery Howls", "Blancooo Padreee", "Inedible Plant", "Primal Clone", "Mac Chiato", "Ryvalia Fazebringer", "Arcanophage Farra", "Johosh The Great", "Smol Gluvs", "Eibh\u00ebar", "Newtype Khan", "Solus Sanctus", "Mistwalker Caelon", "Xyntharos"];
const professions = ["Spellbreaker", "Vindicator", "Tempest", "Scrapper", "Tempest", "Chronomancer", "Scrapper", "Vindicator", "Firebrand", "Tempest", "Berserker", "Scrapper", "Druid", "Scrapper", "Reaper", "Firebrand", "Berserker", "Tempest", "Reaper", "Druid", "Reaper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Soulbeast", "Weaver", "Catalyst", "Spellbreaker", "Scrapper", "Druid", "Firebrand", "Berserker", "Reaper", "Reaper", "Firebrand", "Druid", "Berserker", "Vindicator", "Chronomancer", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 6, 0, 5, 9, 0, 0, 1, 0, 0, 7, 0, 2, 5, 3], [7, 1, 0, 5, 4, 1, 3, 5, 6, 2, 6], [5, 1, 2, 2, 3, 2, 1, 0, 3, 3, 0, 2, 1, 1, 4, 0, 0, 1, 2, 0, 2, 0, 1, 1, 3, 2], [0, 0, 1, 0, 10, 0, 4, 3, 3, 0, 1, 2, 0, 7, 2, 0, 2, 0, 5, 4], [2, 2, 0, 0, 3, 0, 1, 0, 2, 0, 6, 2, 3, 2, 3, 3, 3, 1, 2, 0, 3, 0, 0, 4, 1, 2, 0, 2, 0, 0], [0, 0, 1, 5, 1, 0, 1, 0, 1, 4, 0, 0, 6, 1, 0, 4, 1, 3, 5, 0, 0, 1, 0, 0, 1, 2, 3, 0, 2, 3, 3], [2, 0, 0, 1, 7, 0, 3, 1, 0, 0, 7, 0, 0, 1, 2, 3, 2, 1, 3, 0, 0, 2, 1, 0, 2, 2, 4, 1, 2, 3, 1], [5, 0, 4, 4, 5, 4, 0, 1, 0, 4, 0, 6, 1, 4, 1, 5, 3, 4], [0, 0, 1, 8, 0, 2, 1, 1, 0, 2, 0, 0, 4, 4, 0, 3, 0, 5, 2, 0, 0, 1, 5, 1, 4, 0, 2, 0, 2, 2, 2], [1, 4, 6, 1, 3, 3, 2, 8, 2, 0, 5, 2, 0, 5, 5, 4, 0, 1, 0, 1], [0, 0, 1, 0, 9, 0, 2, 0, 1, 0, 8, 1, 0, 5, 3, 0, 2, 1, 2, 5, 0, 1, 1, 1, 1, 2, 0, 2, 0, 2, 2, 2], [2, 2, 16, 3, 0, 3, 0, 4, 1, 6, 5, 1, 4, 4, 5], [3, 1, 1, 0, 1, 1, 1, 0, 0, 2, 4, 0, 4, 1, 6, 6, 0, 0, 0, 2, 0, 4, 1, 5, 0, 6, 6, 5], [1, 0, 2, 17, 10, 2, 4, 5, 4, 0, 4, 1, 4, 3, 5], [1, 1, 0, 15, 0, 5, 1, 0, 3, 8, 0, 0, 3, 4, 0, 6, 1, 6, 4, 0, 0, 0, 3, 0, 4], [2, 0, 0, 1, 25, 0, 11, 3, 7, 0, 15, 1], [1, 0, 0, 0, 10, 1, 1, 6, 1, 3, 2, 1, 0, 4, 1, 5, 4, 1, 6, 0, 0, 1, 3, 0, 3, 2, 1, 1, 2, 5, 2], [6, 3, 0, 1, 0, 3, 0, 3, 7, 6, 2, 5, 4, 1, 0, 4, 0, 6, 3, 1, 1, 4, 4, 3], [10, 1, 1, 6, 5, 3, 6, 9, 7, 1, 1, 5, 5, 0, 7], [1, 0, 3, 1, 27, 7, 1, 3, 1, 7, 3, 1, 7, 5, 0, 7], [2, 0, 2, 1, 13, 0, 3, 1, 2, 0, 6, 1, 1, 2, 5, 0, 3, 3, 7, 9, 1, 0, 3, 1, 1, 8], [0, 0, 2, 1, 9, 1, 3, 2, 0, 3, 1, 0, 6, 2, 2, 1, 6, 10, 0, 0, 2, 3, 1, 4, 1, 2, 1, 3, 7, 4], [1, 1, 14, 0, 3, 2, 1, 0, 7, 1, 2, 5, 0, 4, 0, 6, 5, 2, 0, 1, 2, 0, 8, 1, 1, 0, 4, 2, 4], [0, 0, 14, 0, 4, 0, 3, 2, 4, 0, 0, 7, 7, 5, 5, 10, 7, 0, 0, 2, 2, 1, 6], [14, 1, 5, 2, 2, 1, 6, 0, 1, 2, 1, 5, 2, 6, 5, 0, 0, 2, 2, 0, 5, 3, 3, 0, 4, 4, 3], [1, 0, 2, 1, 17, 0, 3, 5, 0, 4, 0, 1, 5, 5, 4, 0, 7, 4, 0, 0, 3, 2, 2, 3, 4, 0, 0, 3, 5, 5], [2, 1, 0, 16, 1, 3, 0, 0, 1, 2, 0, 2, 3, 5, 1, 5, 1, 1, 5, 0, 1, 2, 3, 1, 6, 6, 6, 2, 5, 6], [2, 4, 11, 8, 7, 5, 2, 6, 3, 3, 15, 6, 5, 1, 7, 4], [0, 2, 0, 7, 3, 3, 3, 1, 8, 1, 0, 5, 3, 0, 10, 2, 8, 7, 0, 0, 1, 4, 0, 6, 1, 2, 0, 4, 6, 5], [0, 1, 13, 7, 1, 1, 2, 5, 0, 7, 5, 0, 4, 1, 4, 10, 0, 3, 2, 0, 4, 4, 4, 1, 5, 5, 5], [3, 0, 6, 2, 18, 0, 3, 1, 2, 0, 4, 0, 1, 6, 3, 1, 5, 2, 3, 7, 0, 1, 0, 3, 1, 6, 2, 6, 0, 3, 3, 4], [0, 2, 1, 8, 0, 9, 0, 2, 2, 4, 1, 0, 4, 5, 0, 4, 2, 8, 10, 0, 0, 0, 3, 0, 10, 4, 4, 1, 4, 6, 3], [2, 1, 1, 2, 19, 0, 3, 2, 5, 1, 7, 0, 0, 7, 4, 1, 2, 2, 7, 5, 0, 0, 1, 2, 0, 9, 1, 4, 1, 3, 7, 2], [0, 2, 20, 13, 7, 5, 0, 2, 3, 3, 7, 5, 0, 6, 4, 4, 11, 1, 0, 3, 2, 1, 2], [28, 1, 10, 5, 3, 1, 4, 2, 1, 10, 5, 0, 6, 1, 3, 9, 0, 0, 2, 4, 0, 6], [11, 0, 12, 1, 1, 2, 3, 1, 1, 10, 4, 1, 5, 0, 6, 9, 0, 0, 6, 4, 0, 7, 4, 2, 0, 7, 6, 3], [26, 1, 9, 3, 5, 0, 9, 0, 2, 8, 7, 1, 7, 2, 7, 7, 2, 0, 2, 3, 0, 6], [1, 0, 1, 1, 11, 1, 9, 0, 1, 2, 1, 1, 0, 5, 6, 2, 2, 7, 4, 10, 1, 0, 2, 3, 2, 11, 5, 5, 3, 5, 8, 5], [0, 0, 0, 3, 16, 1, 10, 0, 8, 5, 18, 5, 0, 9, 5, 0, 10, 0, 6, 5, 0, 0, 0, 4, 0, 5, 1, 3, 0, 0, 4, 3], [3, 0, 0, 23, 1, 10, 4, 5, 2, 14, 2, 0, 8, 6, 0, 6, 0, 6, 5, 0, 0, 1, 4, 0, 6, 2, 2, 0, 3, 5, 4], [0, 1, 1, 1, 23, 0, 7, 1, 5, 0, 11, 0, 2, 8, 5, 0, 3, 3, 13, 6, 0, 2, 3, 0, 8, 2, 4, 1, 6, 6, 1], [0, 2, 0, 26, 6, 3, 6, 1, 8, 1, 0, 13, 5, 8, 1, 4, 10, 2, 1, 2, 2, 0, 5, 6, 4, 0, 2, 4, 2], [4, 2, 23, 1, 6, 1, 1, 2, 7, 3, 0, 11, 8, 1, 5, 5, 7, 9, 0, 2, 3, 4, 0, 10, 4, 6, 0, 5, 3, 3], [1, 2, 3, 28, 0, 6, 3, 5, 1, 9, 1, 1, 8, 8, 7, 2, 6, 8, 0, 0, 2, 3, 1, 7, 5, 7, 1, 9, 6, 4], [3, 2, 4, 3, 33, 2, 11, 7, 7, 2, 14, 3, 1, 8, 7, 2, 5, 6, 8, 11, 3, 1, 4, 3, 5, 12], [1, 6, 2, 39, 2, 8, 6, 4, 6, 8, 1, 2, 8, 5, 1, 3, 2, 8, 11, 1, 0, 3, 5, 1, 10, 7, 4, 2, 5, 7, 4], [1, 3, 5, 41, 0, 11, 7, 9, 6, 12, 5, 0, 9, 9, 0, 7, 3, 9, 10, 0, 1, 2, 2, 3, 5, 2, 1, 7, 6, 3], [3, 0, 31, 3, 4, 6, 7, 8, 10, 5, 1, 9, 10, 2, 8, 8, 9, 15, 6, 2, 6, 5, 5, 12, 6, 4, 3, 4, 11, 5], [2, 1, 7, 4, 54, 0, 14, 8, 9, 4, 9, 4, 0, 8, 7, 0, 6, 3, 10, 12, 1, 2, 5, 5, 0, 7, 5, 5, 0, 8, 9, 5], [1, 5, 3, 47, 1, 16, 8, 9, 5, 8, 6, 0, 12, 7, 1, 4, 5, 10, 13, 0, 2, 7, 3, 2, 8, 6, 6, 0, 8, 9, 6]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

