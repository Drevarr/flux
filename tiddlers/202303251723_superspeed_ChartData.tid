created: 20230325172304000
creator: Drevarr
modified: 20230705163523055
modifier: drevarr
tags: ChartData
title: 202303251723_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Solikai", "K\u00f4sair", "Abigail Ryn", "Elonith Primal", "Mike The Archmagus", "Arcanophage Farra", "High Sorcer Baradun", "Sofya De Nova", "What Charr U Saying", "Venomina The Siren", "Mac Chiato", "Fruji", "Tika Sumiko", "Xanvias Einzbern", "Zadie Miststep"];
const professions = ["Berserker", "Weaver", "Spellbreaker", "Tempest", "Tempest", "Weaver", "Spellbreaker", "Tempest", "Weaver", "Berserker", "Tempest", "Tempest", "Scrapper", "Tempest", "Berserker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0.271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0.427, 0.325, 0.483, 0.89, 0, 0.221, 0.557, 0.393], [0.835, 0.201, 0.48, 0, 0.402, 0, 0.369, 0, 0.207, 0.573], [0, 0.162, 0, 0.203, 0.134, 0, 0.186, 0.057, 0, 0.151, 0, 0, 0, 0.129, 0, 0.22, 0.141, 0.423, 0.072], [0.787, 0.664, 0.785, 0.558, 0.746, 0.149, 0.753, 1.122], [0.16, 0, 0, 0.761, 0.271, 0, 0.195, 0.057, 0.577, 0.211, 0.679, 0.483, 0, 0, 0.359, 0.305, 0.527, 0.248, 0.533], [1.149, 1.064, 1.396, 0, 0.226, 0, 0.154, 0.855, 0.691, 0, 0.742, 1.126, 0, 0, 0.449, 0, 0.245, 0.23, 0.148], [0.634, 0.735, 0.784, 0.405, 0.397, 0.331, 0.42, 0.398, 0.503, 0.623], [0.778, 0.644, 0, 0.405, 0.138, 0.083, 0.288, 0.286, 0.0, 0.211, 0.641, 0.484, 0.171, 0.449, 0.219, 0.733, 0.328, 0.089], [0.541, 0.54, 0, 0.44, 0, 0.487, 0.666, 0.839, 0.402, 0.674, 0.806, 0, 0.286, 0.599], [0.571, 0.484, 0.784, 0, 0.136, 0.331, 0.608, 0.057, 0.577, 0.51, 0.645, 0.48, 0.3, 0.36, 0.111, 0.281, 0.623, 0.533], [0.653, 0.634, 0.782, 0.406, 0.27, 0, 0.626, 0.489, 0.264, 0, 0.482, 0, 0.299, 0.718, 0.332, 0.403, 0.247, 0.443], [0.78, 0.675, 0.392, 0, 0.41, 0, 0.759, 0, 0.503, 0.181, 0.9, 0.06, 0, 0.236, 0.045, 0.278, 0.07, 0.295, 0.497], [0.613, 0.64, 0.695, 0.203, 0.267, 0, 0.687, 0.285, 1.084, 0.361, 0.536, 0.483, 0.668, 0.357, 0.358, 0.553, 0.642, 0.912, 0.791], [0.818, 1.011, 0, 0, 0.642, 0, 0.712, 1.142, 0, 0.602, 0.545, 0.474, 0, 0.355, 0.599, 0.738, 1.063, 1.251, 0.912], [0.631, 0.81, 0.784, 0.406, 0.54, 0.166, 0.814, 0.48, 0.893, 0.723, 0.686, 0.966, 0.514, 0.717, 0.664, 0.703, 0.844, 0.8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

