created: 20230401000636000
creator: Drevarr
modified: 20230705163523716
modifier: drevarr
tags: ChartData
title: 202304010006_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Grasszanine", "Zadie Miststep", "Mac Chiato", "Newtype Khan", "Drevarr Moonwillow", "Mike The Archmagus", "Arkintor"];
const professions = ["Vindicator", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.6666, 50.1152, 23.1731, 16.9285, 37.0249, 42.0714, 20.333, 18.1013, 42.9264, 11.1197, 8.8858, 7.7893, 37.4808, 61.5019, 21.816, 5.0139, 59.9319, 19.656, 49.973, 0.0, 51.6542, 17.1972, 15.624, 26.973, 33.9862, 4.6087, 18.8179, 23.905, 11.8486, 33.154], [47.0016, 91.8691, 17.8223, 72.8387, 48.0146, 67.8434, 29.7587, 67.4515, 34.4256, 33.5491, 0.0, 0.0, 100.4642, 35.9208, 0.0, 65.6208, 0.0, 34.3204, 0.0, 23.6232, 0.0, 32.9022, 0.0, 0.0, 0.0, 0.0, 0.0, 34.5092], [63.1258, 90.7049, 31.0758, 0.0, 27.6051, 32.6516, 31.4051, 31.0219, 84.8496, 31.4107, 0.0, 0.0, 58.1403, 127.3608, 31.9248, 0.0, 47.4295, 0.0, 0.0, 0.0, 83.0174, 0.0, 0.0, 20.3634, 4.9612, 65.4931, 0.0, 0.0, 0.0], [277.7664, 56.201, 7.45, 0.0, 44.613, 74.4055, 51.8204, 10.7947, 48.8928, 30.793, 40.1568, 0.0, 31.2211, 68.9592, 14.8392, 0.0, 80.24, 14.5454, 0.0, 0.0, 59.495, 20.7162, 0.0, 56.0358, 54.6412, 31.1155, 30.9619, 15.5124, 7.2704, 41.382], [166.9862, 44.6116, 85.9421, 53.8112, 189.3982, 129.8128, 11.5248, 33.5813, 81.6288, 56.0736, 68.9501, 0.0, 24.7038, 166.8259, 69.5736, 198.7808, 17.4283, 184.917, 127.4962, 88.2504, 0.0, 113.5296, 59.6362, 0.0, 36.9811, 89.1606, 7.1639, 140.7956], [181.609, 123.727, 136.5689, 121.6069, 53.4222, 215.3844, 162.9524, 63.3854, 83.424, 152.0165, 195.4013, 14.4514, 85.3429, 355.2696, 52.6392, 0.0, 327.9055, 111.6898, 128.2358, 128.7792, 82.7118, 8.604, 138.3156, 91.1925, 54.3456, 77.4259, 235.4671, 90.9102, 176.0792], [315.1718, 380.4948, 212.2621, 164.0779, 234.8835, 292.9122, 202.1779, 144.6245, 106.8672, 154.0123, 334.9248, 54.479, 207.3938, 509.1918, 164.7, 18.8568, 341.2017, 157.9906, 245.4267, 93.528, 296.9525, 108.1098, 267.7374, 253.4288, 185.7082, 311.8501, 114.653, 374.9064], [341.6755, 303.9196, 217.4483, 210.7471, 179.4115, 385.3634, 194.7691, 232.9843, 379.2624, 321.3302, 292.7174, 29.7898, 277.3579, 556.5332, 190.8576, 520.7328, 152.0501, 298.415, 347.2286, 253.7352, 40.548, 405.324, 276.5813, 25.1482, 170.6285, 382.0093, 160.1157, 367.0656]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

