created: 20230603215001000
creator: Drevarr
modified: 20230705163533643
modifier: drevarr
tags: ChartData
title: 202306032150_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Melody Phoenixstorm", "Bianca Raveneye", "Newtype Khan", "Grasszanine", "Artakama Nahid", "Manuel Radiador", "Tegan Parker", "Tootsie Pop Rocks", "Pamtastic", "Xanvias Einzbern", "Zadey Starbolt", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Scrapper", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.134, 0.27, 0.906, 0.66, 0, 0.3, 0, 0.267, 0.389, 0], [1.168, 0.191, 0.736, 0.341], [0.313, 0.653, 1.278, 0, 1.144, 0, 0.988, 0, 0, 0, 0, 0.548, 0.424, 0.688, 0.331, 0], [1.097, 0, 1.142, 0, 0.998, 0, 0.428, 0, 0, 0.461, 1.077, 0.848, 0.607, 0.759, 0], [0, 0.752, 0.659, 0, 0.516, 0, 0.359, 0, 0.487, 0.33, 0.774, 0.655, 0.509, 0.779, 0.375, 0.852], [2.467, 1.594, 0.874, 1.175, 1.292, 4.471, 2.064], [0.178, 1.013, 0.164, 0.426, 0.69, 0.709, 0, 0.333, 0.468, 1.027, 0.905, 0.763, 0.457, 0.612, 0], [0.089, 0.896, 0.742, 0, 1.188, 0.3, 0.222, 0.888, 0.825, 0.831, 1.663, 0.946, 0.668, 0.195, 1.201, 0], [0.357, 1.175, 1.316, 0, 0.824, 0.985, 0.557, 0.445, 0.712, 0.547, 1.247, 1.247, 0.741, 0.759, 0.724, 0.238, 0.639], [1.189, 1.685, 1.098, 0, 1.432, 1.64, 0, 0, 0.446, 0, 0, 1.096, 0.914, 1.813, 1.1, 0.796], [0.854, 1.861, 2.96, 2.445, 0.986, 1.792, 1.105, 1.681, 1.238, 0.623, 0.795, 1.513, 0, 1.114, 0.48, 0.362], [0.825, 2.729, 2.544, 0.428, 2.352, 3.451, 2.477, 1.159, 0.964, 1.246, 1.691, 1.032, 2.152, 1.484, 1.241, 1.161, 0.426]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

