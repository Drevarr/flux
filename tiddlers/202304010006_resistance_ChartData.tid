created: 20230401000636000
creator: Drevarr
modified: 20230705163523680
modifier: drevarr
tags: ChartData
title: 202304010006_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elon\u00edth", "Xanvias Tlesel", "Raziel Umbra", "Primal Clone", "Brioche Bunbringer", "Blancooo Padreee", "Sp\u00edcy Cheese", "Ryvalia Fazebringer", "Jeckyll Mbs", "Gavann", "Ateriuz", "Smol Daddy Tika", "Etcherii", "Air One Com", "Grasszanine", "Ark Darkness", "Arcanophage Farra", "Koralia Danai", "Whose Guardian", "Newtype Khan", "Zaylen Harker", "Ju\u00e7", "Bella Lunabringer", "Aronorf Xideliesi", "Johosh The Great"];
const professions = ["Firebrand", "Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[106.7328, 36.0385, 95.0796, 19.4636], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 35.9486, 38.2844, 0.0, 68.4763, 56.3958, 0.0, 39.2202, 44.5163, 0.0, 0.0, 0.0, 0.0, 0.0], [5.6141, 9.1022, 4.4453, 6.6242, 17.226, 22.9144, 16.8756, 6.9763, 15.312, 14.5886, 34.176, 0.0, 7.3416, 27.2318, 6.588, 3.3291, 28.7752, 1.7909, 13.5859, 3.361, 14.9688, 8.1396, 4.932, 14.2884, 21.1613, 0.0, 5.4067, 6.6481, 0.0, 28.8464], [18.1478, 5.0274, 8.8082, 10.0317, 18.7523, 25.8779, 18.1927, 6.7906, 23.0736, 6.7003, 30.3312, 4.7141, 40.303, 6.3288, 0.0, 23.2186, 15.4627, 20.0908, 5.4259, 13.4482, 5.0796, 6.648, 12.2958, 15.39, 3.3566, 11.616, 13.3906, 1.6579, 7.986], [25.7203, 13.1242, 6.7091, 10.4406, 13.9116, 25.8779, 19.0571, 8.3798, 25.4496, 6.9379, 34.2614, 0.0, 4.3534, 34.4377, 8.856, 29.8336, 12.0557, 10.2318, 1.7453, 13.3531, 11.3526, 6.624, 14.9688, 11.6775, 5.0616, 0.3168, 13.2963, 7.6963, 23.3288], [34.2067, 15.3997, 18.0281, 0.0, 32.4458, 25.9308, 16.0112, 22.2499, 37.4352, 0.0, 11.9616, 0.0, 25.863, 52.7039, 0.0, 0.0, 40.4177, 0.0, 0.0, 0.0, 0.0, 47.9196, 34.0537, 0.0, 7.9622, 0.0, 0.0, 19.0212], [38.1235, 0.0, 18.0692, 0.0, 0.0, 0.0, 26.1778, 0.0, 11.88, 0.0, 78.4339, 0.0, 81.5277, 0.0, 97.902, 0.0, 0.0, 0.0, 46.0944, 11.8116, 0.0, 15.8436, 0.0, 0.0, 29.6947, 0.0, 10.0672], [31.2691, 14.8705, 20.7035, 13.2756, 24.4216, 30.5348, 24.9841, 7.5749, 18.5856, 7.5082, 52.8874, 7.3828, 14.0392, 36.7838, 2.3112, 0.0, 27.6507, 17.0789, 23.6482, 11.8325, 0.0, 0.0, 25.0776, 18.7988, 0.0, 14.9318, 14.8994, 0.0, 26.3296], [84.6029, 27.3067, 10.043, 43.9159, 22.4155, 17.9399, 14.8176, 0.0, 29.1456, 0.0, 20.6765, 29.0751, 0.0, 0.0, 77.9908, 50.4067, 27.9171, 10.057, 37.1131], [1.728, 126.0819, 48.6595, 64.4398, 20.0534, 3.8862, 9.912, 30.1806, 85.5563, 0.0, 13.4112, 17.0683, 9.126, 92.686], [0.0, 18.6043, 0.0, 63.6706, 101.9239, 52.479, 34.5926, 63.1488, 0.0, 62.3712, 0.0, 0.0, 95.5206, 0.0, 0.0, 102.334, 0.0, 0.0, 0.0, 35.0698, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 49.6584], [58.752, 33.0221, 49.9682, 6.3788, 12.2544, 0.0, 16.9579, 31.7856, 35.5344, 0.0, 24.6067, 6.4403, 26.2494, 101.6373, 21.2544, 8.5617, 17.0006, 0.0, 65.4223, 2.2982, 43.4333, 2.6316, 0.0, 65.0754, 39.1838, 0.0, 27.625, 0.0, 0.0, 26.9588], [82.775, 9.3139, 14.2414, 30.6948, 68.4241, 73.9822, 62.5632, 6.6254, 66.4752, 0.0, 119.9578, 0.0, 20.9429, 76.1651, 14.9472, 0.0, 51.4647, 48.179, 40.2156, 0.0, 52.1294], [38.0582, 3.7044, 50.4622, 38.1913, 62.4495, 71.9712, 11.1955, 27.9466, 64.2048, 0.0, 35.543, 0.0, 33.9774, 76.1651, 27.216, 79.9754, 27.5184, 39.7074, 29.0347, 25.551, 6.2208, 40.1625, 0.0, 4.9632, 9.9486, 5.5364, 31.0728], [74.3539, 0.0, 58.3649, 64.8243, 35.1497, 81.9731, 34.4921, 60.3307, 89.1792, 0.0, 98.3414, 0.0, 140.0131, 0.0, 0.0, 88.641, 40.7098, 52.3446, 0.0, 14.4432, 0.0, 15.552, 0.0, 0.0, 29.4413, 0.0, 0.0, 0.0], [99.4214, 0.0, 59.7232, 7.2512, 112.2521, 74.5643, 58.0356, 56.3885, 88.3872, 9.4565, 34.0906, 0.0, 32.3546, 105.9943, 12.636, 126.1481, 49.9262, 0.0, 61.776, 6.426, 48.5325, 0.0], [151.776, 0.0, 40.378, 0.0, 99.4308, 180.2984, 71.0422, 145.285, 109.5072, 0.0, 271.7846, 0.0, 71.6643, 52.6201], [80.2944, 36.2502, 20.827, 31.3217, 86.7403, 113.9368, 81.9907, 7.3685, 68.7984, 40.297, 23.2397, 0.0, 62.1074, 100.548, 18.5976, 49.7448, 36.6912, 74.9764, 78.6931, 4.1922, 0.0, 58.2714, 49.7475, 0.0, 9.2717, 18.3414, 0.0, 62.0972], [80.6861, 11.0603, 41.2835, 35.9832, 46.4446, 105.0991, 57.624, 16.5326, 104.2272, 21.5741, 66.216, 0.0, 52.7822, 118.2277, 30.672, 0.0, 178.8696, 39.0936, 9.6897, 0.0, 74.0362, 48.5622, 0.0, 56.133, 51.5025, 19.3248], [142.6368, 41.701, 58.1179, 41.9531, 69.2527, 92.5571, 31.2404, 26.6875, 74.5008, 26.4211, 63.2256, 0.0, 58.5267, 137.3318, 33.0912, 125.2881, 34.2888, 75.6202, 57.9744, 65.9124, 6.912, 81.7938, 31.5563, 5.1149, 27.2448, 61.295, 4.8368, 72.4548], [104.5786, 29.106, 38.073, 59.9993, 63.4526, 102.2414, 87.6708, 57.2554, 58.08, 10.4069, 187.2845, 0.0, 72.3083, 140.3483, 6.804, 0.0, 143.347, 21.4469, 55.9359, 53.2224, 6.9462, 0.0, 70.5672, 60.75, 27.7517, 0.0, 0.0, 114.6112], [108.8942, 133.9934, 132.9056, 47.2037, 114.048, 0.0, 41.7802, 0.0, 40.8038, 199.0012, 53.3952, 197.4578, 80.0218, 43.6036, 42.3878, 7.7112, 17.688, 95.8392, 46.6425, 9.697, 17.9309, 14.7108, 12.7308, 149.798], [111.6941, 41.9126, 79.8092, 56.1011, 120.2328, 211.2037, 123.6858, 55.728, 149.4768, 7.7933, 166.9498, 0.0, 61.5664, 148.4759, 44.1288, 12.0123, 84.2751, 52.5034, 91.6115, 40.0594, 57.8952, 0.0, 47.7738, 95.2425, 0.0, 24.3514, 18.86, 0.0, 148.2492], [145.8355, 25.6133, 45.7288, 62.0165, 143.6513, 165.9042, 69.8485, 60.4752, 118.9056, 20.7662, 249.0576, 0.0, 46.2392, 220.7866, 22.464, 163.5228, 67.7477, 74.0278, 0.0, 102.7858, 74.8782, 0.0, 48.2598, 77.1188, 51.6806, 30.9304, 7.0118, 115.8212], [99.4214, 66.2029, 124.1386, 39.1726, 136.8918, 193.793, 113.3135, 75.4805, 150.48, 7.9834, 60.8333, 0.0, 60.9739, 166.9097, 64.476, 8.9991, 178.9358, 106.0114, 47.432, 94.4698, 69.8598, 48.6972, 86.535, 4.7153, 40.2547, 15.5124, 42.6488, 185.4204]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

