created: 20230318001239000
creator: Drevarr
modified: 20230705163522288
modifier: drevarr
tags: ChartData
title: 202303180012_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Whose Guardian", "Fribble Bibble", "Ark Darkness", "Aronorf Xideliesi", "Drevarr Moonwillow", "Zaylen Harker", "Viral Marketing", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi", "Jupi Jupi Jupi"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[22.1328, 7.644, 95.3568, 10.5947, 0.0, 0.0, 0.0, 69.1398, 1.0152, 21.0912, 3.0624, 0.0, 208.7934, 0.0, 0.0, 0.0, 0.0, 14.4436, 0.0, 0.0, 0.0, 0.0, 70.61], [88.6704, 2.0328, 85.2432, 24.7211, 0.832, 0.6021, 5.4163, 47.7664, 0.0, 0.0, 11.0088, 90.9974, 9.1142, 14.5818, 0.0, 32.193, 10.2479, 21.7598, 0.0, 0.0, 0.0, 0.0, 138.2153], [210.4704, 44.016, 0.0, 188.2124, 10.2856, 32.5118, 0.0, 0.0, 8.8407, 282.7104, 18.6989, 0.0, 0.0], [137.112, 17.1864, 58.9478, 150.4038, 14.3, 75.8035, 13.8556, 92.173, 12.7323, 6.9888, 2.8776, 142.8277, 0.0, 0.0, 26.9539, 40.9248, 67.7622, 0.0, 38.269, 8.4456, 0.0, 47.172, 97.4375], [80.8752, 15.0192, 135.2333, 112.5951, 6.7912, 10.8086, 16.2173, 19.3494, 1.3959, 6.084, 10.7712, 0.0, 155.4907, 7.9507, 4.6319, 0.1411, 90.1845, 12.1415, 39.123, 5.8267, 0.0, 0.0, 21.5241, 364.6394], [217.152, 5.544, 261.7978, 197.1453, 5.1033, 14.076, 0.0, 6.7257, 39.0, 146.388, 0.0, 188.7681, 3.8784, 10.9106, 0.0, 13.4946, 87.6639, 10.2465, 10.1894, 0.0, 6.7157, 38.7233, 523.6728], [162.864, 38.4216, 94.3454, 358.9747, 11.7728, 0.0, 48.5891, 31.4125, 18.0621, 70.6992, 43.7712, 19.1531, 444.6799, 14.2046, 25.1149, 0.0, 11.2014, 94.9414, 0.0, 17.4216, 0.4167, 63.1139, 346.8259], [6.5988, 69.4824, 57.2352, 19.5993, 573.961, 74.029, 119.6047, 151.704, 168.3738, 134.7448, 106.8617, 112.1424, 33.3739, 11.8138, 193.0633, 486.1143], [187.3632, 84.7896, 374.4922, 389.3048, 66.0088, 71.675, 40.2757, 69.0184, 17.9352, 44.3664, 50.2392, 7.8719, 687.3397, 0.0, 1.5783, 44.3822, 99.9747, 128.2842, 24.2563, 0.0, 19.2158, 103.0945, 405.6318], [480.6576, 96.936, 550.0354, 412.1562, 52.4472, 60.5224, 82.5983, 80.7576, 81.9774, 171.444, 9.5568, 293.0176, 3.5875, 45.049, 17.8517, 3.969, 32.0061, 34.5028, 112.8451, 12.6472, 155.9493, 306.692], [517.128, 13.272, 631.811, 640.2547, 50.0968, 69.1234, 51.6751, 199.5664, 0.846, 46.3944, 7.1544, 781.5765, 80.7677, 72.3941, 75.0053, 99.9306, 152.5672, 32.528, 5.5632, 0.0, 36.8875, 46.3171, 692.7934]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

