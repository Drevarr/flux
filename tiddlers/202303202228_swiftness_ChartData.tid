created: 20230320222849000
creator: Drevarr
modified: 20230705163522746
modifier: drevarr
tags: ChartData
title: 202303202228_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "\u00c1rkantor", "Avanda Corone", "Be\u00eb", "Newtype Khan", "Dark Sidiuz", "Primal Clone", "Zefirokai", "Venomina The Siren", "Smol Gluvs", "Eibh\u00ebar", "Jeckyll Mbs", "Nazhul Naxxremis", "Raelyn Sunray", "Kiloak", "Stoic Rapidfire", "Fribble Bibble", "High Sorcer Baradun", "Black Raspberry Pie", "Zadie Miststep", "Ark Darkness", "Ryvalia Fazebringer", "Koralia Danai", "Drevarr Moonwillow", "Solus Sanctus", "Viral Marketing", "Zaylen Harker", "Johosh The Great", "Bella Sassy"];
const professions = ["Scrapper", "Vindicator", "Chronomancer", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Tempest", "Tempest", "Scourge", "Chronomancer", "Spellbreaker", "Scourge", "Firebrand", "Firebrand", "Druid", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.4538, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 720.6732, 103.9998, 0.0, 0.0, 34.4115, 62.7194, 0.0], [0.0, 24.853, 3.5136, 30.3525, 0.0, 0.0, 33.2171, 411.0912, 163.4112, 10.5094, 0.0, 39.8261, 16.6144, 48.767, 0.0, 59.535, 0.0, 8.2432, 27.2078, 165.996, 0.5031, 0.5694, 0.0, 27.8494], [77.2684, 37.0449, 1.4062, 78.848, 193.2075, 104.2733, 61.7085, 139.0534, 61.64, 27.8254, 261.2434, 46.2465, 0.0, 63.2051, 0.0], [49.8467, 17.7368, 28.8135, 51.6472, 53.728, 25.3785, 293.1552, 37.7746, 16.2316, 0.0, 0.0, 104.3046, 174.3386, 0.0, 97.4295, 125.2672, 60.536, 0.0, 5.953, 48.8007, 52.871, 0.0, 0.0, 48.4145], [21.9722, 0.0, 26.2368, 138.7665, 0.0, 0.0, 85.371, 374.4468, 236.8087, 0.0, 0.0, 0.0, 0.0, 106.9684, 106.6882, 34.1145, 0.0, 50.9312, 0.0, 111.2746, 0.0, 4.1483, 0.0, 50.8235, 0.0], [0.0, 143.241, 15.379, 131.2475, 27.9396, 0.0, 257.6087, 23.6742, 57.0851, 28.5919, 23.9923, 287.8181, 0.0, 0.0, 89.355, 95.5696, 18.596, 172.6358, 5.2632, 17.9355], [33.1571, 40.3488, 72.3615, 48.1562, 0.0, 13.0385, 591.786, 2.3908, 68.629, 105.5336, 74.6172, 29.4554, 64.181, 115.7904, 0.0, 0.0, 8.1328, 53.4893, 70.7486, 7.8561, 15.0479, 0.4127, 0.0], [518.8234, 147.7953, 4.2703, 9.9002, 656.2838, 121.0532], [526.5, 0.0, 45.2914, 31.3096, 36.8474, 39.7619, 158.393, 0.0, 41.958, 29.3595, 76.9488, 73.8008, 407.5488, 60.1398, 14.7225, 14.74, 57.0539], [19.4357, 24.7104, 68.001, 29.1353, 172.1737, 29.9575, 419.5152, 0.0, 28.1996, 0.0, 0.0, 46.3514, 377.3792, 72.4774, 24.2865, 14.5521, 57.1872, 131.0985, 117.9144, 34.056, 16.512, 0.0, 0.0, 43.5019], [34.4243, 0.0, 29.4192, 0.0, 41.1555, 24.0673, 152.2708, 413.1972, 107.2274, 0.0, 0.0, 10.2967, 71.808, 123.1798, 184.8622, 79.2855, 23.0621, 141.312, 17.3952, 137.376, 51.7032, 0.0, 19.6813, 49.5264, 17.5498], [315.0585, 0.0, 88.1685, 142.968, 54.3536, 94.3182, 740.4566, 79.4898, 73.1247, 28.887, 105.7742, 21.6154], [104.1282, 132.3936, 113.658, 34.2113, 85.8308, 53.9389, 220.7088, 10.659, 0.0, 0.0, 53.3914, 253.1364, 0.0, 70.0245, 0.0, 86.0016, 113.5661, 269.7149, 20.3562, 11.3876, 0.0, 0.0, 125.3899], [650.3328, 36.5792, 192.984, 31.1419, 0.0, 0.0, 303.2322, 93.8088, 100.4535, 284.9148, 0.0, 0.0, 65.7115], [390.2981, 110.2552, 0.0, 39.5388, 225.7306, 766.1861, 0.0, 57.4088, 0.0, 142.3792, 76.9916, 446.472, 0.0, 67.3495, 0.0, 78.771], [0.0, 103.2728, 0.0, 44.8875, 43.5331, 0.0, 217.6184, 511.758, 387.7878, 26.2922, 49.0355, 16.3145, 30.4128, 112.948, 0.0, 348.5696, 17.7008, 51.019, 349.8509, 18.3438, 17.7321, 34.2438, 117.7431, 18.8712], [16.8314, 0.0, 0.0, 0.0, 4.9817, 91.8575, 8.6923, 1243.8036, 221.7467, 15.6706, 0.0, 15.241, 78.3974, 194.8021, 17.3066, 50.3212, 183.9862, 37.352, 49.0633, 292.3819, 4.7601, 56.4093], [0.0, 87.324, 0.0, 64.0088, 168.5689, 505.8612, 479.2359, 20.757, 4.9304, 102.559, 116.5261, 99.66, 108.9173, 0.0473, 221.5153, 43.0192, 61.4492, 424.7208, 70.7823, 47.2179, 32.0813, 162.8475, 50.7184], [18.8115, 8.7199, 130.8672, 22.743, 423.4994, 39.5476, 16.6085, 1199.1564, 126.7124, 0.0, 29.4481, 1.7388, 0.0, 121.1866, 0.0, 5.9535, 43.9116, 52.072, 84.7457, 371.1442, 17.5698, 11.835, 51.3459, 294.2104, 15.9914], [90.2496, 20.9326, 0.0, 63.4695, 28.9654, 34.4663, 190.7654, 795.2256, 391.8521, 32.6128, 58.1416, 0.0, 26.583, 213.0066, 31.4554, 75.7417, 208.8354, 31.3168, 69.7522, 646.1251, 20.3949, 15.6986, 0.0, 71.8133, 70.8092], [46.9395, 73.7062, 164.5714, 196.4309, 1751.3496, 544.3852, 52.6218, 109.5416, 127.008, 164.3981, 1005.503], [96.1901, 0.0, 0.0, 369.246, 81.4995, 0.0, 0.0, 1723.5504, 219.4754, 54.8284, 0.0, 0.0, 765.5014, 153.7422, 38.1118, 123.228, 0.0, 0.0, 8.2001, 1229.5152, 83.8629, 20.823, 191.679, 0.0], [163.249, 66.528, 73.4256, 68.571, 20.8702, 63.6149, 576.6423, 906.4224, 684.7251, 123.5322, 442.7753, 42.6512, 105.7777, 1048.1789, 31.5018, 124.2468, 539.2482, 92.3569], [20.8298, 10.8464, 46.0944, 3.876, 31.9846, 63.1028, 309.5863, 2352.402, 52.9562, 124.2054, 15.3446, 37.9361, 92.0832, 449.533, 57.2141, 70.3552, 317.8485, 75.9552, 57.1948, 747.7834, 58.4757, 38.9619, 99.9539, 79.1243, 51.2943], [60.928, 65.1024, 142.4592, 93.936, 59.082, 312.9536, 476.7582, 974.2356, 618.0218, 155.958, 0.0, 21.168, 136.8013, 542.2833, 302.603, 157.8623, 68.08, 146.0224, 146.538, 691.4592, 79.2576, 111.5578, 92.5082, 15.246], [2489.292, 656.5137, 149.787, 96.0082, 75.4034, 389.5091, 688.717, 130.3416, 141.3247, 313.7637, 121.9184, 189.0481, 972.3931, 68.4216, 121.766, 188.4362, 135.0118], [13.1376, 35.0222, 62.5248, 55.8315, 36.9872, 165.2317, 2125.7964, 734.6928, 214.7134, 26.7314, 94.999, 492.3494, 817.8764, 97.9574, 22.1602, 721.9884, 255.0608, 269.9168, 1050.0106, 211.7664, 152.6752, 65.1942, 348.7484, 65.49], [214.7712, 66.2904, 52.992, 178.3245, 23.2101, 55.1854, 553.5145, 2150.226, 587.4196, 156.8182, 113.164, 108.8942, 338.2016, 660.4136, 192.1997, 2.8822, 765.3894, 184.0368, 123.7562, 1241.4211, 108.9405, 108.7922, 278.8218, 78.9743], [34.729, 81.5087, 124.92, 102.087, 59.2707, 209.7911, 596.6657, 2101.788, 696.5596, 209.066, 111.4702, 38.5258, 250.2298, 507.3358, 74.9232, 137.97, 584.7221, 210.9744, 155.2184, 1325.2205, 228.2526, 222.4242, 170.5645, 445.6786, 92.8312]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

