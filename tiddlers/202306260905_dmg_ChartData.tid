created: 20230626090515000
creator: Drevarr
modified: 20230705163539087
modifier: drevarr
tags: ChartData
title: 202306260905_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Geradenil", "Roywarr", "Koralia Danai", "Utopia Skye", "Vesnan", "Charr Surethang", "No Reserv\u00e9", "Urilstormwalker", "Drevarr Moonwillow", "Gestern Yesteryear", "Vesnan", "Govinda Ektar", "Smol Gluvs", "Brace Stonebrow", "C H A R C O A L", "Louie Runesoldier", "Necrotic Windrunner", "Drev Of The Dead", "Necrotic Windrunner", "Illusive Heart", "Koralia Danai", "Traidoruns Maximus", "Latedoctor", "Gamora Titus", "Yngvar The Burdened", "Elonith Requiem", "Charr Surethang"];
const professions = ["Vindicator", "Berserker", "Firebrand", "Tempest", "Reaper", "Spellbreaker", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Vindicator", "Reaper", "Firebrand", "Scourge", "Tempest", "Reaper", "Reaper", "Scourge", "Chronomancer", "Dragonhunter", "Firebrand", "Reaper", "Dragonhunter", "Scourge", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.3117, 17.7209, 190.7083, 12.5245, 0.9385, 0.0, 20.4048], [608.875, 5.7186], [0.0, 53.8846, 0.0, 0.0, 101.9524, 95.6301, 67.6861, 2.0915, 133.9159], [2.4146, 60.2991, 84.943, 156.0, 55.9767, 35.875, 12.1301], [95.6393, 271.0385, 0.0, 210.9429, 170.3942], [277.2652], [884.6027, 270.2993], [97.7349, 263.6364, 39.4884, 103.4883, 60.7846, 14.6471, 296.5595], [0.0, 98.1731, 36.5098, 24.9756, 106.0095, 261.0755, 210.5556, 126.5753, 41.4088, 63.4756, 66.028, 77.6409, 160.8571, 27.814, 421.7917, 35.0256], [0.0, 61.093, 33.8485, 28.2773, 88.1398, 0.0, 55.4615, 9.8725, 173.3415, 165.2952, 0.3396, 122.9444, 77.6164, 40.1241, 0.0, 32.6028, 85.1208, 89.8961, 42.6279, 227.1667, 42.6631, 69.0538, 16.0294, 126.5952], [66.1098, 363.0701, 326.9899], [82.8197, 356.0577, 60.0294, 239.0732, 72.981, 484.2453, 109.3504, 538.7922, 93.2558, 770.625, 45.2878, 101.0308, 0.0, 131.369], [0.0, 1072.3846, 299.1863, 597.2195, 559.581, 474.3973], [22.5753, 51.0657, 8.1524, 180.4953, 325.3893, 217.8312, 148.6047, 154.75, 49.258, 57.8923, 0.0, 258.5476], [624.2642, 811.8056, 25.8978, 129.75, 85.7591, 264.2615, 78.4412, 679.6786], [212.2453, 278.3889, 25.1533, 74.4939, 22.8645, 69.9799, 763.3247, 477.6279, 1980.3333, 68.7271, 38.6615], [0.0, 421.3271, 500.6711], [185.3091, 527.3953, 1170.9697, 659.2605, 443.2401], [1442.9091, 132.4651, 2096.1667, 140.3326, 385.4923, 39.7941, 493.7738], [0.0, 4.907, 138.7576, 109.5798, 69.1434, 0.0, 226.8654, 27.9412, 210.4878, 149.9048, 362.2264, 320.6944, 230.8219, 92.6204, 18.7683, 129.3224, 94.4262, 339.2468, 240.0, 406.75, 90.6652, 131.7, 0.0, 180.369], [407.1685, 451.5839, 364.2987, 28.907, 898.0417, 64.2026], [22.8, 130.7273, 97.521, 172.0, 0.0, 362.4615, 64.0588, 79.6585, 131.3333, 212.6226, 344.2917, 20.292, 1.0854, 116.2383, 406.7617, 93.8701, 133.3256, 410.5417, 145.2985, 188.5615, 28.9706, 436.1786], [229.7012, 807.4252, 466.5872, 1335.1948, 393.5581, 1672.25, 341.7292, 200.2308, 0.0, 555.0595], [285.4182, 7.6744, 2917.4545, 635.7815, 540.7348, 0.0, 577.1538, 28.7647, 359.0476, 818.6415, 1013.3611, 464.5985, 153.2805, 102.6729, 164.9295, 937.1818, 378.9767], [0.0, 378.3269, 249.5098, 1935.0244, 604.5238, 1404.1132, 1879.8194, 637.8029, 222.128, 142.1542, 774.245, 790.3377, 82.6977, 3514.75, 387.9041, 355.9538, 147.3529, 1143.6905], [537.2581, 322.6557, 1937.0192, 397.7843, 1827.5122, 720.3238, 2677.9623, 3053.5, 2120.2055, 276.0, 129.9329, 918.6963, 1773.0403, 1936.4675, 946.907, 2334.375, 804.4947, 628.8], [0.0, 4298.4242, 1716.2437, 0.0, 2876.2692, 1175.8922, 3169.561, 1050.7333, 3922.3585, 4015.3333, 1864.726, 834.8394, 27.2744, 1212.8131, 2783.453, 4056.1818, 756.814, 1622.0417, 544.3049, 579.5462, 0.0, 1498.25]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

