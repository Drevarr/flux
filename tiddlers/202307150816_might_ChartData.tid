created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Lions Main", "Scythe User", "Gamora Titus", "Herm E Licious", "Kahlianne", "Chocolate Teapot", "Charr Surethang", "Fluffy No Care Bear", "Shaca Booey", "Water M Elon", "Ateriuz", "Bae Ken", "Gestern Yesteryear", "Wall Knot", "Zevikah", "Avatar Sarvity", "Drevarr Moonwillow", "Elonith Primal", "Wix Myschief", "Legoh Brave", "Erin Celes"];
const professions = ["Berserker", "Scourge", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Berserker", "Berserker", "Berserker", "Firebrand", "Berserker", "Scourge", "Firebrand", "Firebrand", "Druid", "Catalyst", "Scrapper", "Tempest", "Scrapper", "Tempest", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.1489, 0.0, 0.0, 0.0, 0.0, 7.081, 4.8981, 0.0, 7.7913, 4.5375, 0.54], [0.0, 0.7695, 0.0, 3.4541, 2.7876, 1.47, 8.7856, 0.0, 0.7168, 2.7942, 1.42, 0.0, 1.8346, 3.7088, 0.1265, 3.3972], [4.6771, 7.1369, 5.635, 6.2424, 4.6267, 0.0, 7.703], [2.7951, 0.0, 7.5613, 0.0, 3.88, 0.0, 0.0, 2.2011, 0.0, 7.0762, 5.2455, 4.6364, 0.5184, 10.0007, 2.511, 1.872, 0.1642], [4.2537, 0.441, 1.066, 1.246, 2.196, 1.843, 1.8634, 4.818, 3.3925, 2.7187, 2.52, 0.0, 2.6772, 5.3026, 0.0, 3.6288, 0.1212, 5.6548, 1.368, 4.0226, 3.6366, 0.2511, 2.9952, 2.7976], [0.0, 0.0, 3.7825, 0.0, 0.0, 0.0, 4.4064, 0.0, 0.0, 0.0, 0.0, 3.0096, 0.0737, 11.6128, 0.0, 0.0, 5.9618, 0.0, 0.0, 0.0, 0.0, 3.3174, 10.1422, 3.3215, 10.4362, 0.0, 3.26, 0.0, 0.0, 0.0, 5.413, 0.0, 0.0, 0.0, 0.0, 0.0, 5.6916, 3.7066, 0.0], [2.8694, 0.0, 0.1234, 3.2256, 0.8261, 0.406, 2.3392, 0.0, 0.0, 4.5312, 0.0, 0.0, 0.2375, 3.344, 1.9614, 4.4916, 4.6872, 4.16, 0.0, 0.0, 8.4196, 3.8865, 1.606, 5.4912, 0.9938, 1.1, 1.9788, 11.2856, 0.0, 3.6288, 0.0, 0.938, 0.0, 0.6523, 0.0, 2.6282, 0.7301, 0.3215], [0.0, 0.0, 7.904, 2.9526, 4.3092, 1.3665, 2.1546, 2.47, 0.0, 0.0, 7.372, 8.5716, 0.0365, 11.6438, 1.9875, 3.02, 0.0, 0.0, 6.9635, 0.0, 10.1606, 0.0, 0.0, 1.1808, 4.9468, 0.4298, 2.2097, 0.9173, 0.0], [0.0, 0.3933, 0.0, 0.2688, 3.6992, 0.0, 4.6822, 0.0, 0.0, 0.0, 0.0, 5.6943, 11.3772, 3.9892, 2.6838, 2.418, 0.0, 0.0, 6.305, 8.0659, 0.876, 11.4138, 0.0, 0.74, 0.0, 2.9566, 8.4442, 0.0, 6.048, 0.0, 0.0, 0.0, 2.2831], [6.4247, 6.2622, 5.642, 2.581, 0.0, 0.5626, 5.7765, 0.0, 8.4525, 4.875, 6.12, 0.0, 4.493, 0.0, 0.0, 9.8582, 3.0415, 9.4336, 0.0, 1.0328, 1.5208, 1.5233, 7.9186, 1.8536], [4.0925, 13.2867, 2.9766, 7.728, 3.9549, 4.074, 5.4264, 0.8078, 2.496, 8.5338, 3.3545, 15.6875, 10.3968, 7.9298, 3.4086], [0.6997, 2.3324, 9.0288, 0.0, 1.6074, 4.959, 5.1408, 4.342, 5.2866, 1.392, 6.6736, 9.1573, 6.935, 13.1963, 6.1313, 0.84, 0.0, 1.6529, 6.1631, 1.2623, 8.4974, 1.4546, 9.4068, 0.0, 2.8539, 6.5293, 4.1683, 8.1619, 1.3543], [1.4717, 16.1082, 2.8459, 0.0, 0.6449, 0.49, 3.468, 4.6757, 0.0, 2.8698, 0.0, 0.0, 7.6304, 0.0, 0.0, 4.5623, 1.5876, 12.09, 3.6668, 4.452, 3.88, 10.3552, 0.6935, 8.1075, 0.0, 2.54, 0.0, 0.0, 6.063, 0.0, 18.2952, 2.182, 4.1004, 0.0, 5.5175, 6.4632, 3.7498, 0.0, 0.2257], [9.4618, 5.5112, 5.943, 6.4056, 0.0, 0.0, 7.9296, 4.7883, 9.7436, 0.8299, 16.5376, 6.6223, 5.1756, 2.0718, 5.5566, 12.22, 6.1588, 4.248, 9.9522, 2.6886, 0.1825, 7.3888, 0.0938, 6.88, 6.2402, 5.4475, 6.1831], [5.631, 2.2344, 4.2427, 8.0766, 12.116, 16.5896, 10.92, 10.4566, 12.7776, 8.0665, 18.1988, 3.8625, 3.6, 0.0, 1.4201, 5.6228, 0.0, 27.2765, 1.7191, 10.6128, 0.648, 8.3986, 4.149, 5.5242, 20.4984, 2.4282], [13.2787, 1.1033, 2.576, 5.9704, 10.5264, 0.0, 10.8182, 0.0, 1.8058, 1.8537, 15.2912, 0.0, 2.2002, 2.4244, 4.6494, 3.952, 4.0762, 0.0, 5.2962, 18.8736, 5.4385, 22.7413, 5.175, 3.88, 0.0, 2.6539, 5.3026, 0.0, 17.8416, 0.0, 11.4972, 2.952, 11.3069, 2.4795, 5.3401, 17.447, 2.6744], [8.7898, 1.4231, 7.322, 10.5808, 8.617, 1.6896, 20.919, 1.7973, 10.1198, 28.3328, 14.3201, 10.2486, 6.3034, 10.773, 17.16, 12.5668, 16.8, 11.155, 22.4673, 20.1115, 21.8212], [12.825, 4.719, 2.2176, 0.0, 6.6912, 0.0, 2.7264, 1.1706, 0.0, 50.1851, 0.4313, 14.0448, 3.8173, 4.0812, 9.1797, 6.0354, 12.428, 2.8658, 2.196, 16.6258, 18.7405, 11.315, 15.8413, 0.0, 1.16, 3.5834, 1.909, 25.3327, 1.0939, 21.9542, 0.0, 7.3432, 0.0, 11.4971, 0.6281], [0.0, 7.9897, 3.955, 11.7776, 0.0245, 0.0, 32.9078, 2.1443, 26.9648, 20.5627, 6.7488, 1.8293, 15.2586, 19.864, 6.853, 14.472, 6.9452, 14.6676, 30.1855, 36.9437, 5.7562, 7.42, 0.0, 10.5458, 9.8649, 5.4545, 27.851, 6.9646, 27.3896, 0.0, 6.3601], [2.0808, 22.3552, 45.6707, 2.6548, 2.9344, 3.0985, 14.3488, 23.8317, 14.8998, 6.5128, 16.506, 18.824, 25.9346, 33.036, 34.6096, 28.0841, 28.178, 46.9487, 18.8062, 8.16, 4.493, 14.6073], [26.2998, 3.8986, 7.2173, 4.7437, 4.249, 10.9072, 1.7136, 3.7696, 12.3853, 2.9772, 22.7601, 2.4543, 11.4304, 9.7436, 7.4784, 11.8024, 15.0066, 18.746, 14.4714, 9.612, 12.4936, 14.2949, 16.279, 21.5913, 6.9562, 12.86, 3.5506, 6.565, 6.5433, 24.7968, 9.3119, 23.2356, 4.968, 25.6851, 10.5131, 11.8519, 17.9899, 6.4364]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

