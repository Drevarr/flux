created: 20230607221050000
creator: Drevarr
modified: 20230705163534053
modifier: drevarr
tags: ChartData
title: 202306072210_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Tootsie Pop Rocks", "Lord Erin The Wise", "Skye Nightroad", "Cyclotechnist Farra", "Mistwalker Cael", "Permanent Dawn", "Uneeta Healah", "Arriasa", "Zayde Sunsabre", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scrapper", "Weaver", "Scrapper", "Scrapper", "Vindicator", "Weaver", "Scrapper", "Druid", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 822.719, 0.0, 94.9709, 24.69, 0.0, 32.2672, 26.0526, 27.7577, 18.032, 32.7635, 40.9248], [31.9185, 122.36, 1058.5955, 0.0, 340.752, 61.7467, 0.0, 34.304, 5.4948, 75.7457, 44.574, 0.0, 94.127], [20.5718, 70.794, 1521.2325, 222.588, 28.1492, 22.6548, 47.7673, 8.0962, 105.7702], [25.092, 143.29, 1931.4525, 232.3709], [69.0952, 116.104, 1987.288, 32.039, 83.6491, 91.6688, 76.0352, 28.4383, 110.2183, 43.884, 32.2828, 127.3541], [65.5897, 97.75, 2190.119, 78.665, 222.2582, 54.4824, 54.797, 14.8219, 62.7436, 12.282, 56.672, 81.947], [84.87, 141.128, 2748.474, 61.0826, 222.2582, 59.0658, 16.1532, 47.6928, 4.0481, 80.1082, 0.0, 19.8858, 113.8586], [258.3, 132.342, 3258.97, 197.9648, 117.2846, 64.7303, 1.3692, 149.6858, 46.1155, 51.7517, 53.475, 144.5389, 186.5489], [273.6135, 313.49, 3401.4075, 167.2282, 353.5027, 73.335, 30.6012, 87.8591, 79.4775, 112.4423, 62.974, 41.8968, 117.1716], [172.1385, 153.732, 3872.021, 236.7112, 208.9579, 89.3338, 0.0, 80.3077, 9.9236, 117.5747, 42.642, 116.1017, 126.4284], [220.7542, 225.446, 3717.049, 243.3534, 246.5506, 140.4003, 27.8544, 100.0307, 37.4609, 154.3997, 44.827, 27.2987, 209.2037], [271.8607, 307.004, 7313.311, 494.7818, 593.2382, 180.2243, 51.8616, 157.734, 72.9167, 260.0844, 115.713, 149.1688, 205.7446]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

