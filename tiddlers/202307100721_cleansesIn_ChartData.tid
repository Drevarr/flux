created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Ria Zerrah", "Scarlet Merc\u00fcry", "Enter Effore", "Sigewulf Bloodhawk", "Nelanthrope", "Necrotic Windrunner", "Kaiya Tseng", "Tybalt Returns", "Ephuras", "Palaven Night", "Luke The Knight", "Zogratis Lucius", "Govinda Ektar", "Hit The Gas", "Xanvias Einzbern", "Hahrruun", "Locopuff", "Whip \u00d1 Sl\u00e0pper", "Porlen", "Chocolate Teapot", "Yngvar The Burdened", "Legoh Brave", "Elonith Requiem", "Anti Jimbo", "Mirhayna", "Notorious H U D", "Charr Surethang", "Latedoctor", "Danaeryn", "Drevarr Moonwillow", "Erinthal", "Gestern Yesteryear"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Berserker", "Druid", "Reaper", "Catalyst", "Mechanist", "Reaper", "Reaper", "Berserker", "Virtuoso", "Vindicator", "Berserker", "Berserker", "Revenant", "Firebrand", "Tempest", "Ranger", "Chronomancer", "Scourge", "Tempest", "Reaper", "Weaver", "Berserker", "Firebrand", "Berserker", "Reaper", "Tempest", "Scrapper", "Druid", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2609, 0.25, 0.3182, 0.4643, 0.3333], [0.2174, 0.4167, 0.4643, 0.4242], [0.1652, 0.4792, 0.8182, 0.5357, 0.1667], [0.1565, 0.1667, 0.7727, 0.6786, 0.5152], [0.2261, 0.1667, 0.2727, 0.8571, 0.5152], [0.0233, 0.1818, 0.226, 0.2437, 0.0, 0.075, 0.0315, 0.027], [0.2609, 0.4583, 0.5909, 0.5, 0.3636], [0.2054, 0.0, 0.0814, 0.1299, 0.2101, 0.0, 0.225], [0.3892, 0.8421], [0.3652, 0.25, 0.9545, 0.5, 0.5303], [0.0584, 0.0784, 0.0152, 0.1122, 0.2591, 0.0508, 0.5273, 0.4074], [0.0, 0.0756, 0.039, 0.2727, 0.0904, 0.1765, 0.0, 0.45, 0.1853, 0.0811], [0.0233, 0.0196, 0.0, 0.0408, 0.0829, 0.0, 0.0545, 0.2222, 0.0811, 0.1579, 0.0, 0.1395, 0.0, 0.3409, 0.0508, 0.1597, 0.225], [0.1838, 0.2456, 0.037, 0.1221, 0.026, 0.2273, 0.2712, 0.2101, 0.0625, 0.15, 0.1119, 0.0541], [0.2696, 0.5, 0.7273, 0.7143, 0.5, 0.6923, 0.2412, 0.2353], [0.0, 0.0, 0.1818, 0.2407, 0.2378, 0.1337, 0.013, 0.3636, 0.2542, 0.1849, 0.1094, 0.125, 0.1084], [0.1628, 0.0, 0.4318, 0.1356, 0.6891, 0.0, 0.275, 0.2343, 0.0], [0.1245, 0.6863, 0.5152, 0.0918, 0.2435, 0.322, 0.4182, 0.8333], [0.3652, 0.4583, 0.6818, 0.3214, 0.4394, 0.1167, 0.1569, 0.3182, 0.0816, 0.1192, 0.0508, 0.2909, 0.0, 0.3704, 0.1946, 0.0526, 0.0, 0.1047], [0.4087, 0.3958, 0.5455, 0.3214, 0.1515, 0.7692, 0.1128, 0.3922, 0.303, 0.102, 0.1658, 0.4237, 0.3455, 0.2258, 0.8148], [0.0182, 0.0, 1.1111, 0.4054, 0.6316, 0.0, 0.186, 0.0, 0.0227, 0.1356, 0.563, 0.0156, 0.1, 0.0629, 0.1081], [0.1525, 0.5091, 0.0, 0.7222, 0.5135, 0.386, 0.0, 0.157, 0.0, 0.2727, 0.1243, 0.5126, 0.0938, 0.15, 0.1259, 0.4324], [0.2727, 0.051, 0.1813, 0.1356, 0.5455, 0.0, 0.6481, 0.2703, 0.4737, 0.0, 0.1744, 0.013, 0.3182, 0.3955, 0.3866, 0.0156, 0.15, 0.1294, 0.1081], [0.1556, 0.0196, 0.5303, 0.0612, 0.3472, 0.3051, 0.4727, 0.0, 0.463, 0.4919, 0.7018, 0.037, 0.1047, 0.026, 0.5, 0.2034], [0.0612, 0.0984, 0.2712, 0.3455, 0.0, 0.6296, 0.5784, 0.5439, 0.0, 0.2035, 0.026, 0.4773, 0.3559, 0.6134, 0.0312, 0.1], [0.3077, 0.1012, 0.2941, 0.2727, 0.0714, 0.399, 0.322, 0.2545, 0.7222, 0.3405, 0.3684, 0.0185, 0.2209, 0.013, 0.2273, 0.1977, 0.2185, 0.0156, 0.1, 0.2552, 0.1892], [0.1739, 0.5417, 0.4545, 0.4091, 0.7692, 0.1907, 0.3725, 0.3333, 0.051, 0.2435, 0.2034, 0.7818, 0.537, 0.2811, 0.2807, 0.037, 0.1163, 0.0, 0.1818, 0.2712, 0.4118, 0.0, 0.075, 0.007], [0.487, 0.4167, 0.4091, 1.0714, 0.6818, 0.4231, 0.1284, 0.0784, 0.4394, 0.1122, 0.1088, 0.2373, 0.4909, 0.0968, 0.6852, 0.3027, 0.807, 0.0185, 0.1628, 0.013, 0.1364, 0.2881, 0.2773, 0.2, 0.0734, 0.1081], [0.2802, 0.0392, 0.2879, 0.051, 0.2021, 0.2542, 0.6545, 0.0, 0.8148, 0.4595, 0.4561, 0.0, 0.2849, 0.0, 0.5455, 0.3616, 0.4622, 0.0156, 0.35, 0.1608, 0.3784], [0.3913, 0.5417, 0.8636, 0.9643, 0.7727, 1.0, 0.2179, 0.5098, 0.197, 0.1327, 0.3782, 0.2034, 0.4364, 0.0, 0.5741, 0.4757, 0.2982, 0.1667, 0.2326, 0.0, 0.3864, 0.2429, 0.6975, 0.1], [0.4, 0.5208, 0.4545, 0.8929, 0.3788, 0.3077, 0.1829, 0.451, 0.2273, 0.0714, 0.1917, 0.322, 0.5455, 0.0, 0.8148, 0.4054, 0.2807, 0.0185, 0.1512, 0.026, 0.4091, 0.3729, 0.563, 0.0938, 0.625, 0.2937, 0.0541], [0.2957, 0.4375, 0.5909, 0.5357, 0.5758, 0.6538, 0.1634, 0.6078, 0.6061, 0.0918, 0.2383, 0.322, 0.6, 0.6852, 0.4432, 0.614, 0.2267, 0.026, 1.0909, 0.2712, 0.4034, 0.1406, 0.075, 0.1818, 0.0541]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

