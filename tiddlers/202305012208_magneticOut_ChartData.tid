created: 20230501220820000
creator: Drevarr
modified: 20230705163527915
modifier: drevarr
tags: ChartData
title: 202305012208_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Needragee", "Venomina The Siren", "Miphest\u00f6", "Xkaet", "Tyzzki", "Tika Sumiko", "Mac Aaroni", "Zadie Miststep", "Elonith Primal"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.9178, 0.0, 15.7608, 15.876, 31.981, 140.3234, 15.9848, 117.5055], [19.9984, 234.0002, 16.9884, 56.4224, 19.9111, 20.0577, 77.2702], [60.1868, 59.9831, 0.0, 0.0, 27.3861, 36.1983, 265.5815, 19.5808, 238.0434, 16.929, 23.9354, 0.0, 0.0, 58.8014], [495.553, 114.0455, 59.015, 0.0, 9.4815, 66.8615, 430.44, 28.4664], [118.5103, 164.3488, 15.9687, 24.9826, 137.8523, 872.0714], [629.1062, 47.4623, 0.0, 0.0, 40.3295, 40.0642, 274.1903, 31.1344, 251.6892, 19.008, 71.4978, 0.0, 0.0, 108.7758], [519.7156, 59.9831, 0.0, 4.9995, 15.016, 79.9526, 321.1082, 31.5984, 429.0846, 20.097, 72.159, 20.0214, 0.0, 214.0887], [626.4703, 105.3101, 16.7794, 0.0, 39.227, 80.1283, 448.5185, 39.9968, 445.7628, 20.1564, 34.9995, 0.0, 20.0144, 113.8004], [645.3611, 128.8957, 39.1094, 19.7208, 20.0655, 57.0211, 467.4578, 17.6784, 407.8578, 40.2732, 78.9914, 15.9421, 16.1183, 114.3436], [1564.8578, 219.7438, 48.169, 0.3663, 67.3848, 155.2486, 1067.9216, 42.9896]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

