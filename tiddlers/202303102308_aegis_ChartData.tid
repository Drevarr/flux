created: 20230310230833000
creator: Drevarr
modified: 20230705163521549
modifier: drevarr
tags: ChartData
title: 202303102308_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Ryvalia Fazebringer", "Blanco Padre Guard", "Ark Darkness", "Drevarr Moonwillow", "Raelyn Sunray", "Aronorf Xideliesi", "Zaylen Harker", "Viral Marketing", "Kiloak", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 41.9715, 20.079, 0.0, 37.1537, 48.1307, 8.9338, 0.0, 64.5192, 0.0, 0.0, 4.4669, 0.0, 26.4627, 0.0, 82.478, 42.7605, 39.3914, 26.8983, 130.0302, 18.252, 31.464, 15.8508, 11.426, 18.275], [16.434, 72.8847, 10.8284, 93.38, 0.0, 105.9875, 28.161, 77.4076, 9.9949, 0.0, 0.0, 0.0, 0.0902, 0.0, 52.1065, 1.2698, 4.4608, 0.2275, 0.0, 0.0, 0.0, 46.1127, 83.0342, 24.8987, 23.2303, 0.0, 0.0, 20.079, 20.8202, 11.2303, 33.3178], [27.324, 55.062, 53.2312, 11.9945, 0.0, 184.525, 0.0, 19.606, 5.4436, 0.0, 6.4239, 0.0, 94.1654, 16.8777, 28.4867, 0.0, 0.0, 0.0, 0.0, 36.8145, 0.0, 15.3709, 46.9744, 25.0501, 35.0064, 8.5608, 0.0, 30.3048, 40.3124, 25.5519, 61.1033], [151.7375, 0.0, 74.6482, 40.515, 7.1581, 32.1982, 56.8342, 14.2128, 0.0, 81.7988, 28.314, 0.0, 63.7151, 27.374, 0.0, 91.6256, 30.3952, 39.2779, 16.1518, 8.4825, 4.266, 37.1358, 10.3459, 46.2517, 56.0683], [13.266, 86.2155, 26.9192, 107.1455, 13.9633, 253.15, 32.382, 148.4251, 25.2103, 6.6139, 8.705, 3.6383, 117.2669, 1.9543, 60.5454, 2.8486, 0.0, 16.2338, 5.4446, 35.8304, 5.1383, 34.8657, 83.5868, 28.3043, 39.6396, 3.4191, 41.742, 55.5174, 12.188, 5.5565, 128.0496], [69.003, 102.5892, 65.6788, 59.248, 12.7673, 495.625, 0.0, 42.1167, 7.6746, 2.7628, 5.3489, 28.0195, 14.7712, 32.1927, 70.5619, 25.9681, 26.4084, 26.3386, 17.4596, 81.1284, 79.5111, 37.9535, 64.9291, 28.3185, 12.096, 92.736, 16.1078, 57.3646, 91.8103], [48.3615, 79.2603, 94.7232, 77.3605, 21.6775, 709.125, 16.632, 103.1133, 3.3465, 78.0689, 23.8864, 10.5108, 21.2966, 30.8621, 36.5683, 2.6083, 0.0, 0.0, 36.9451, 26.5356, 0.0, 96.7242, 24.5925, 36.5156, 38.5456, 6.9426, 18.576, 20.079, 41.3834, 34.5518, 67.8787], [88.7535, 99.2565, 158.7828, 104.5695, 12.7075, 1245.1625, 40.131, 270.1278, 25.2103, 154.7146, 23.4407, 20.3795, 91.4131, 45.0749, 48.3113, 31.4714, 12.4511, 33.4189, 52.6338, 109.4708, 91.6001, 71.7446, 114.7361, 46.0926, 48.276, 62.3898, 3.9413, 157.3417, 91.0644], [70.6365, 308.4921, 163.5392, 90.321, 27.0894, 1380.8875, 125.118, 164.4004, 57.6937, 79.4921, 41.5063, 26.5147, 150.0691, 46.2424, 108.2316, 75.4354, 11.7887, 23.5752, 8.3904, 97.9411, 0.0, 66.7322, 170.973, 81.6209, 65.9587, 18.8442, 145.26, 72.6984, 22.0198, 73.3296, 102.564], [54.252, 227.2032, 43.8196, 215.257, 29.9299, 1116.3, 36.288, 436.1257, 136.1356, 111.6825, 15.2076, 28.3695, 133.2845, 88.7285, 99.3462, 71.317, 0.0, 76.9503, 21.9336, 26.7907, 7.7739, 163.7563, 107.4194, 38.7103, 128.9574, 14.9553, 81.486, 88.4304, 54.8138, 142.7462, 126.8686], [147.015, 140.553, 263.626, 336.651, 29.7505, 1764.425, 51.723, 383.9881, 140.8653, 116.7475, 79.2368, 36.7877, 145.3766, 111.9512, 78.9858, 95.993, 49.7732, 51.4932, 92.9475, 48.5293, 187.7499, 187.7594, 115.9796, 91.8274, 21.9762, 118.152, 121.6746, 26.4965, 74.8948, 161.6782], [63.162, 215.3214, 153.824, 195.3735, 17.4018, 1820.0875, 66.024, 412.5984, 122.9727, 156.3471, 39.1202, 51.6502, 109.7318, 71.9015, 83.2722, 62.0506, 68.2996, 81.5412, 66.5941, 91.074, 167.5803, 201.7136, 76.399, 128.3139, 100.7199, 193.482, 173.3004, 73.1493, 196.9413, 83.4809]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

