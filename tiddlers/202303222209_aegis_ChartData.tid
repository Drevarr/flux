created: 20230322220917000
creator: Drevarr
modified: 20230705163522751
modifier: drevarr
tags: ChartData
title: 202303222209_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Charred Fishbringer", "Ark Darkness", "Gabe Malhorn", "Drevarr Moonwillow", "Amiti\u00e9l", "Blanco Padre Guard", "Viral Marketing", "Kiloak", "Zaylen Harker", "Solus Sanctus", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.6381, 14.8456, 0.0, 0.0, 42.8208, 37.8317, 0.0, 54.4253, 1.4053, 0.0, 0.9293, 9.0846, 114.086, 0.0, 37.3565, 25.092, 10.0456, 8.0275, 5.3834, 0.0, 37.5091, 7.144, 0.0, 0.0, 0.0], [58.7002, 0.1628, 7.659, 0.0, 7.8672, 8.8013, 36.9792, 3.4339, 7.4236, 8.617, 5.2332, 88.102, 5.8034, 5.9242, 43.848, 1.6337, 6.7234, 14.8854, 55.075, 63.9302, 0.0, 6.2294, 20.6568, 0.1291, 10.7964], [7.6781, 44.6688, 34.007, 41.4144, 35.1859, 19.9491, 43.296, 15.6996, 88.914, 6.8522, 44.4067, 30.204, 0.0, 21.3293, 28.8951, 50.2402, 0.0], [298.816, 6.6424, 16.1568, 42.876, 0.0, 38.1667, 21.3389, 20.7407, 39.5366, 19.7532, 7.3339, 119.5632, 0.0, 0.0], [88.4218, 5.8894, 7.751, 0.0, 52.8, 23.8234, 31.7376, 25.4486, 10.4481, 0.5741, 17.1072, 24.3432, 151.438, 15.6621, 58.0666, 8.388, 0.9038, 15.3014, 10.0209, 48.2782, 56.7072, 17.6278, 6.9804, 0.1642, 0.0, 10.0096], [211.526, 7.1318, 15.4714, 77.652, 24.7491, 43.0353, 4.4753, 65.4454, 130.0147, 44.5428, 37.2437, 45.3902, 0.0, 0.8159], [8.4211, 20.4636, 21.045, 0.0, 12.2496, 17.5565, 93.744, 8.7494, 19.552, 0.0, 60.4877, 39.7194, 386.918, 42.791, 7.5398, 3.42, 44.0409, 24.2273, 16.3447, 79.6696, 71.7235, 7.8227, 0.0, 26.977, 0.0, 21.1702], [247.68, 53.2758, 34.132, 21.62, 71.0688, 70.9171, 23.1552, 36.5501, 61.3139, 80.7206, 41.8362, 377.58, 20.2768, 41.2243, 28.044, 31.5968, 15.968, 49.8125, 134.7446, 76.729, 15.2703, 20.9192, 29.3573, 0.0, 13.8852], [438.1459, 57.5097, 20.148, 0.0, 30.7296, 63.913, 12.1248, 24.2726, 70.3567, 0.0, 57.1507, 23.6964, 557.438, 17.1304, 50.8694, 22.356, 173.3829, 54.3085, 54.1257, 116.2461, 67.225, 102.4628, 29.7331, 46.3478, 0.0, 31.9083], [393.0682, 44.9981, 36.018, 0.0, 86.0112, 41.5642, 62.6112, 51.9322, 44.9085, 34.0032, 32.6634, 869.246, 46.6366, 29.2291, 31.68, 29.2332, 24.1403, 36.6459, 180.7806, 51.575, 53.1871, 26.265, 35.1302, 38.1079, 31.6169], [513.193, 48.1192, 44.275, 154.675, 118.4832, 81.8381, 11.664, 100.1011, 54.3484, 7.7126, 79.4957, 33.4278, 634.984, 113.8298, 85.4842, 61.488, 95.5205, 67.5814, 58.2118, 134.6045, 48.5338, 62.8136, 28.7833, 35.8963, 1.4637, 24.5213], [504.0288, 41.3885, 27.002, 0.0, 147.3648, 51.6096, 47.5488, 83.1667, 33.0551, 120.553, 56.9184, 967.904, 118.5144, 34.5168, 50.688, 212.3141, 12.7802, 38.8187, 136.8467, 250.2086, 19.4317, 67.6396, 44.4874, 19.1486, 18.2999], [401.9846, 74.7436, 85.215, 0.0, 99.0, 59.305, 87.552, 109.8384, 95.1327, 117.9763, 56.4774, 926.086, 87.8195, 72.8525, 52.56, 171.4016, 39.094, 61.0333, 157.9378, 127.0368, 112.8395, 97.2181, 90.6984, 13.819, 17.0906], [745.7645, 82.0171, 154.675, 51.52, 103.0656, 189.7114, 124.848, 135.4752, 73.1672, 25.3094, 127.0579, 85.4364, 1259.818, 230.6661, 53.1706, 20.16, 66.0092, 28.2555, 30.5491, 196.9668, 194.5152, 61.5277, 34.4825, 27.5242, 14.4734, 1.355]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

