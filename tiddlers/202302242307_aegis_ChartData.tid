created: 20230224230708000
creator: Drevarr
modified: 20230705163520049
modifier: drevarr
tags: ChartData
title: 202302242307_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Blanco Padre Guard", "Kosair", "Air One Com", "Aronorf Xideliesi", "Kahless The Drunk", "Drevarr Moonwillow", "Gavann", "Zaylen Harker", "Ravioli Fetabringer", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.3325, 20.2613, 15.0336, 0.0, 0.0, 5.9956, 15.3708, 8.0438, 9.4554, 0.0, 0.0, 15.2848, 0.0, 87.3053, 0.0, 0.0, 0.0, 9.2851, 40.8524, 1.9541, 4.0141, 4.4355, 11.7286, 27.7805, 25.7936, 24.7104, 32.1239, 14.5599, 6.4023], [10.9054, 22.0646, 19.9891, 1.1722, 1.1088, 45.1628, 25.7632, 142.6106, 1.7901, 29.2694, 0.0, 0.0, 4.2984, 0.0, 33.912, 0.0, 52.2288, 10.1135, 27.4704, 49.8624, 48.8814, 23.3279, 21.8784, 65.3072, 43.848, 69.19, 31.3159, 0.0], [89.5642, 72.3955, 56.8968, 106.7971, 206.1136, 125.3232, 98.8428, 52.1389, 20.6349], [21.1817, 13.7904, 80.7917, 0.0, 11.4912, 23.1353, 29.2481, 57.3962, 24.2581, 26.8933, 0.0, 16.7149, 103.7347, 0.0, 14.832, 0.0, 64.5941, 78.8152, 26.6491, 74.4486, 4.4051, 70.3287, 14.857, 44.296, 12.9168, 47.6736, 24.158, 5.6654], [57.5681, 139.7074, 39.9782, 31.8614, 44.9568, 46.9876, 35.0355, 54.5473, 34.7233, 0.0, 0.0, 0.0, 13.144, 47.1869, 3.276, 0.0, 29.5517, 38.6105, 48.5688, 39.5763, 5.7722, 68.3883, 17.7062, 29.792, 25.5312, 62.3192, 43.8423, 21.4179], [67.1104, 96.3206, 27.1718, 27.9898, 37.7328, 40.1447, 27.3812, 57.6475, 14.6421, 0.0, 0.0, 0.0, 0.0, 56.4523, 0.0, 1.008, 0.7995, 19.463, 34.5253, 43.2446, 58.1414, 0.0, 47.5398, 44.749, 71.1872, 26.9568, 35.0771, 29.6078, 117.2457], [82.9443, 75.4229, 58.5197, 55.056, 43.008, 40.4706, 53.8289, 39.4651, 35.4577, 14.6718, 14.6765, 10.9683, 0.0, 66.1954, 0.0, 16.056, 0.6726, 20.6237, 43.2936, 16.8221, 44.4685, 28.3749, 23.6082, 6.8688, 55.1936, 34.8192, 32.9677, 52.2203, 16.881], [322.0251, 58.8744, 69.6557, 15.7354, 2.5536, 57.1541, 102.1817, 240.3097, 7.5735, 59.8752, 0.0, 30.1629, 90.744, 4.284, 0.0, 138.875, 37.0661, 1.9258, 63.2845, 42.8966, 45.5778, 87.4882, 97.8432, 67.9243, 25.5001, 3.1781], [186.2314, 275.9141, 78.7315, 37.4381, 22.7472, 46.3359, 54.6379, 56.7258, 34.3103, 9.0787, 0.0, 239.0866, 0.0, 33.912, 86.6219, 94.3243, 160.3208, 14.4432, 67.9258, 107.0591, 39.4548, 37.6766, 117.992, 36.8928, 66.4175, 48.4786, 7.9914], [267.7076, 65.8757, 133.1866, 89.2618, 45.0912, 81.0063, 111.8895, 119.9035, 37.3626, 65.4291, 33.6101, 50.6957, 0.0, 246.4416, 10.8029, 17.964, 8.3754, 52.7645, 151.8514, 57.1498, 91.8221, 62.2182, 58.212, 54.5942, 111.4064, 68.1696, 99.325, 81.3807, 24.2045], [266.7638, 288.8558, 151.7837, 52.9958, 32.7264, 75.2713, 113.5697, 114.0382, 11.6815, 74.3232, 53.9888, 236.7941, 89.3506, 67.284, 13.4006, 102.5381, 116.8279, 79.4659, 98.1568, 98.3401, 103.143, 123.4349, 174.832, 93.312, 79.255, 64.462, 60.5459], [364.7031, 260.6386, 212.976, 116.5056, 107.6544, 63.0194, 201.6252, 170.6802, 49.6408, 48.7377, 33.563, 40.7638, 39.616, 291.8136, 107.9653, 99.072, 46.6611, 74.6381, 122.607, 88.7832, 93.0765, 53.0435, 60.8423, 99.1651, 183.7696, 72.2304, 169.7203, 90.2061, 69.2052]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

