created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Surethang Jr", "Danu Leon", "Zatcha Wildbloom", "Brazilian Hookah", "Govinda Ektar", "Flick Embermage", "Reina Armitage", "Holo Viking", "Gamora Titus", "Kosair", "Gestern Yesteryear", "Selandir", "Nose Llama", "Chocolate Teapot", "Drac Tepes", "Serene Azura", "Aloe Pen", "Ax Axun", "Serosh Loux", "Gamora Titus", "Vesnan", "Necrotic Windrunner", "Xuerreux", "Sister Elonith", "Glizzy Gobbl\u00e9r", "Nose Llama", "Charr Surethang", "Drevarr Moonwillow", "Xanvias"];
const professions = ["Chronomancer", "Druid", "Firebrand", "Tempest", "Vindicator", "Tempest", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Weaver", "Tempest", "Chronomancer", "Scourge", "Dragonhunter", "Vindicator", "Vindicator", "Willbender", "Dragonhunter", "Reaper", "Reaper", "Berserker", "Berserker", "Reaper", "Weaver", "Berserker", "Scrapper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [36.8485, 38.2683, 62.9273, 0.0, 107.9123, 35.9808, 76.7907, 93.1566, 10.3571], [57.1463, 0.0, 127.5818, 2.5539, 155.9825, 24.75, 82.3488, 88.6145, 79.8571], [241.0, 35.2561, 33.2, 19.3578, 775.0351, 78.2308], [210.8675, 202.9537, 96.1136, 195.9556, 158.3333, 37.7561, 0.549], [22.5075, 165.4194, 272.68, 14.6327, 5.6129, 6.4714, 62.4833, 172.4043, 120.6901, 169.2727, 34.8478, 108.0825, 11.5802, 33.0693, 28.6627, 60.6389, 22.9091, 12.4286, 0.0, 156.4062, 143.9778, 61.0303], [66.7742, 33.46, 14.102, 39.2177, 67.4714, 73.7333, 67.3404, 23.4789, 139.3636, 49.3043, 67.134, 88.8155, 90.7525, 123.747, 41.5, 27.8045, 39.0, 38.4286, 147.5938, 72.0, 19.1515], [2394.4444, 1038.1212], [333.5663, 173.8241, 32.9636, 87.8095, 0.0, 211.875, 248.6444, 36.6667, 264.439, 83.6707, 162.0727, 9.8284, 236.4211, 0.0, 133.6279, 353.9157, 210.8929], [60.8171, 408.5417, 171.3582, 189.1613, 305.04, 37.3265, 41.75, 10.6429, 0.3167, 78.0426, 42.1268, 332.1818, 344.2391, 44.4639, 40.1631, 90.2079, 220.5542, 73.8519, 77.9045, 14.7024, 50.9643, 181.6061], [15.1212, 0.0, 159.2609, 61.561, 220.0625, 113.1194, 189.7419, 146.36, 25.3776, 38.4274, 13.2286, 44.7167, 103.1489, 92.8592, 8.0, 125.7391, 130.8144, 42.2888, 232.4851, 82.988, 35.1574, 24.7318, 31.5, 0.0, 126.1562, 273.6, 225.0303, 19.6098, 0.0, 48.9273, 11.5637, 66.6667, 0.0, 206.4884, 31.7952, 152.75], [6583.4242], [281.4783, 63.4021, 79.393, 193.8317, 332.7952, 211.7407, 50.5227, 197.1071, 420.5312, 552.2667, 346.3333, 123.4878, 0.0, 164.0727, 8.2451, 484.5965, 187.3462, 131.1395, 220.3976, 123.75], [15.9024, 338.8125, 201.5224, 257.4194, 150.04, 47.1224, 110.8226, 66.0143, 96.8167, 778.4255, 69.7606, 118.1818, 213.6304, 14.6907, 95.3904, 91.6535, 231.2771, 75.3796, 34.8455, 26.5833, 0.0, 226.3438, 127.7333, 0.2424, 72.6585, 0.0, 116.3818, 21.5686, 415.0526, 0.0, 67.0465, 344.4217, 66.7143], [421.1111, 199.2045, 458.8333, 0.0, 86.1875, 1126.0444, 1383.3939, 294.0, 85.8902, 458.5091, 76.9216, 741.1579, 393.3077, 489.0233, 1101.6627, 929.4643], [412.3426, 292.5136, 345.3571, 236.9286, 1221.2188, 1969.8889, 900.3636, 643.0488, 489.4727, 78.4363, 566.0351, 30.3654, 338.814, 990.8554, 431.3929], [1072.7188, 2461.0444, 1111.8788, 1499.5366, 0.0, 1372.4909, 25.3382, 1576.5789, 52.9423, 580.2791, 1021.2289, 1000.2143], [0.0, 0.0, 83.3913, 184.8293, 600.1042, 525.3582, 762.0645, 688.04, 349.5612, 297.6048, 247.0429, 289.1833, 1076.5106, 201.6479, 3.3182, 293.6739, 108.0515, 228.4064, 0.0, 526.3494, 338.1574, 142.7409, 674.0595, 0.0, 347.3438, 20.1778, 72.7273], [898.0312, 1677.5111, 569.7879, 1102.1463, 513.2927, 1837.9091, 115.8284, 1710.7018, 812.5385, 1035.5814, 1161.8675, 974.25], [369.0806, 279.4143, 606.5667, 830.7021, 690.7746, 2103.3182, 2996.5435, 1126.3608, 415.4492, 540.8614], [723.3241, 441.3909, 1015.8452, 685.6429, 52.4062, 3461.7778, 475.3333, 612.4634, 0.0, 745.6182, 32.6814, 0.0, 387.6512, 1911.0241, 544.4643], [885.7229, 998.4259, 346.9364, 656.4643, 208.5714, 797.7188, 1018.1333, 769.0303, 1187.0488, 0.0, 1261.4909, 13.4706, 646.8947, 338.7692, 739.9302, 1564.1807, 820.3571], [3533.0727, 15.4608, 5406.0702, 0.0, 877.9535, 2299.2651, 3809.0357], [668.1727, 2391.3333, 211.75, 397.7188, 2709.6889, 7206.8182, 2230.4878, 7.5732, 2242.7636, 238.6569, 2662.4035, 2604.5769, 3213.814, 1998.012, 1124.3571], [2176.413, 306.3918, 558.8289, 1815.7129, 1485.8795, 1511.4722, 695.4273, 1696.5238, 115.8571, 438.9062, 1091.1111, 1566.9091, 1390.3171, 76.4512, 518.6, 74.049, 861.0526, 502.6154, 1751.9302, 2412.9639, 304.2143], [2335.1818, 172.2667, 1486.2826, 1676.3902, 8083.25, 1705.9851, 2750.9194, 779.1, 760.9796, 2324.2177, 1746.0286, 2068.55, 4258.5745, 2068.831, 3089.4545], [2747.2439, 4426.7917, 1432.6866, 2559.5323, 1264.54, 1031.1531, 1898.4274, 1453.9, 1963.1833, 3159.8298, 841.5352, 3938.0, 4887.3043, 1701.1546, 845.5802, 3062.396, 2290.4217, 2068.8611, 786.3182, 2047.2619, 0.0, 7997.0, 2967.4545], [184.2121, 16.3667, 580.087, 1978.2805, 5512.2708, 2751.4179, 3305.7258, 1962.54, 960.0306, 938.6532, 822.2, 999.1833, 1645.5745, 2677.0141, 0.0, 3437.6087, 1717.6804, 1722.2647, 2076.2178, 3501.3735, 2219.1852, 1168.6, 1474.3452, 550.6786, 2009.9375, 2475.1111, 3274.4545, 129.1951, 59.8171, 273.7818, 2.9363, 277.4737, 6.6731, 78.9535, 211.7952, 261.8929], [299.9091, 303.4, 604.8043, 1551.1585, 4440.1667, 2549.2537, 2830.8548, 3426.94, 1026.5, 1546.0081, 823.7571, 1943.4333, 3028.9574, 2299.5211, 2037.3636, 4954.913, 733.1134, 1307.4519, 2773.0, 2732.5904, 1811.1296, 789.2636, 1639.8095, 823.6786, 1043.3438, 4079.9111, 2730.5152, 1698.4634, 0.0, 2204.7091, 117.4216, 2849.6842, 1987.1163, 4075.9759, 4103.2857]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

