created: 20230225215428000
creator: Drevarr
modified: 20230705163520235
modifier: drevarr
tags: ChartData
title: 202302252154_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Skywalker Folk", "Zanos V", "Viral Marketing", "Roided Barack", "Zadie Miststep", "Nekroomori", "Prince Valentin X", "Nekroomori", "Harry Callahann", "Sizklea", "Xanvias Tseli", "Vopiscus Zergherdus", "Grasszanine", "Bella Sassy", "Smol Daddy Tika", "Tootsie Pop Tart", "Drevarr Moonwillow", "Blackchars", "Blanco Padre Guard", "Sp\u00edcy Cheese", "Venomina The Fierce", "Lord Erin The Wise", "Madrigal Moonshade", "Viral Marketing", "Be\u00eb", "Mac Aaroni", "Sygaldry Verdandi", "Daring Deathblade", "Sumatra Satyricon", "Sparks Malefacio", "Primal Clone", "Hyde En Sikh", "Aronorf Xideliesi", "Tribal S", "Mistwalker Caelon", "Tegan Parker", "Ace Hammers", "Morv\u00e4rth", "Sassy Daddy Demon", "Cat Wigglebooty", "Gabe Malhorn", "Xyntharos", "Husky Guard", "Koralia Danai", "Smol Gluvs", "Newtype Khan"];
const professions = ["Reaper", "Berserker", "Firebrand", "Tempest", "Tempest", "Reaper", "Druid", "Scourge", "Scrapper", "Firebrand", "Berserker", "Scrapper", "Spellbreaker", "Firebrand", "Berserker", "Scrapper", "Scrapper", "Renegade", "Firebrand", "Berserker", "Spellbreaker", "Weaver", "Vindicator", "Willbender", "Scourge", "Tempest", "Firebrand", "Scourge", "Soulbeast", "Scourge", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Vindicator", "Tempest", "Vindicator", "Scourge", "Vindicator", "Scrapper", "Firebrand", "Vindicator", "Dragonhunter", "Firebrand", "Scourge", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7], [7], [2, 1, 7], [2, 8], [4, 0, 0, 0, 0, 0, 3, 2, 0, 0, 2], [0, 3, 1, 5, 4, 0, 0], [1, 3, 10], [5, 3, 3, 4], [0, 3, 2, 5, 3, 0, 1, 2], [1, 1, 3, 4, 0, 3, 4, 2], [2, 0, 1, 4, 0, 2, 3, 4, 2, 0, 4], [3, 1, 2, 1, 4, 2, 1, 8], [3, 2, 3, 4, 3, 1, 2, 3, 2], [1, 4, 4, 2, 0, 1, 4, 4, 0, 0, 4], [3, 0, 5, 3, 2, 3, 2, 0, 0, 6], [5, 3, 9, 0, 2, 0, 2, 0, 0, 3], [2, 3, 5, 2, 1, 1, 3, 1, 2, 2, 5], [3, 5, 6, 0, 5, 5, 3], [2, 0, 2, 10, 1, 2, 3, 3, 1, 4], [3, 1, 1, 6, 4, 3, 7, 0, 0, 3], [5, 5, 4, 3, 3, 3, 5, 1], [3, 0, 4, 8, 5, 3, 3, 4], [4, 0, 5, 1, 0, 4, 5, 4, 0, 7], [3, 3, 9, 2, 3, 4, 6], [2, 4, 6, 3, 2, 5, 3, 0, 0, 6], [2, 1, 3, 7, 3, 5, 5, 2, 0, 0, 4], [5, 2, 4, 4, 3, 3, 3, 4, 1, 5], [8, 0, 2, 9, 4, 3, 3, 5], [1, 2, 1, 10, 4, 4, 2, 3, 0, 3, 6], [0, 2, 10, 4, 2, 4, 6, 2, 0, 6], [0, 3, 7, 3, 3, 3, 7, 2, 1, 8], [1, 4, 4, 8, 3, 4, 3, 4, 0, 1, 7], [5, 0, 5, 8, 3, 0, 2, 7, 3, 6], [5, 0, 6, 5, 3, 5, 3, 5, 2, 0, 7], [1, 2, 5, 8, 4, 2, 6, 6, 0, 7], [5, 1, 3, 8, 5, 5, 3, 4, 2, 3, 2], [6, 1, 0, 16, 5, 3, 1, 4, 0, 8], [4, 0, 6, 11, 4, 5, 5, 9, 1], [5, 0, 6, 11, 6, 4, 5, 2, 2, 2, 4], [5, 1, 4, 11, 3, 4, 3, 5, 3, 3, 7], [1, 1, 6, 11, 4, 6, 5, 2, 3, 5, 7], [4, 0, 2, 15, 6, 4, 0, 8, 2, 5, 9], [7, 3, 4, 13, 5, 4, 5, 2, 5, 7], [5, 1, 5, 15, 4, 4, 8, 3, 3, 3, 8], [8, 7, 16, 7, 5, 8, 2, 4, 8], [5, 1, 6, 16, 4, 6, 10, 4, 3, 4, 9]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

