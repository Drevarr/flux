created: 20230805215730000
creator: Drevarr
tags: ChartData
title: 202308052157_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Civil Rules", "Crabbedmermaid", "Gabe Malhorn", "Aronorf Xideliesi", "Kosair", "Miphest\u00f6", "Ryntha Bloodfang", "Isis Urd", "Be\u00eb", "Thetatia", "Leto Warr", "Kumengo", "Frozen Impaler", "Vee Usagi", "One Bad King", "Avalanche", "Rina Of Theros", "Fee Oh Na", "Rina Of Theros", "Xanvias Einzbern", "Permanent Dawn", "Ajja Leu", "Lucas Might", "Jimbo One Eye", "Be\u00eb", "Govinda Ektar", "Vee Nemesis", "K H I T H", "Melody Phoenixstorm", "One Bad King", "Kat From Shadows", "King Jamls", "Vee Usagi", "Aira Draugr", "Frozen Impaler", "Chicken Of Gears", "Daphne Agla\u00e9", "Belvyn Brightblade", "Lord Erin The Wise", "Eaffi", "Frozen Chaos", "Crabbedmermaid", "Leirynn Kyja", "Birdyguard", "Hellyrian", "Veio De Fralda", "Johanna Jadsdottir", "Masky De Googlieyes", "Auro Vivier", "Hellyrian"];
const professions = ["Berserker", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Tempest", "Berserker", "Untamed", "Scourge", "Scourge", "Berserker", "Firebrand", "Reaper", "Reaper", "Dragonhunter", "Berserker", "Reaper", "Scourge", "Scourge", "Berserker", "Weaver", "Tempest", "Tempest", "Scrapper", "Reaper", "Vindicator", "Chronomancer", "Dragonhunter", "Scrapper", "Guardian", "Reaper", "Virtuoso", "Scourge", "Herald", "Scourge", "Scrapper", "Reaper", "Firebrand", "Weaver", "Tempest", "Firebrand", "Dragonhunter", "Renegade", "Guardian", "Tempest", "Necromancer", "Tempest", "Mirage", "Willbender", "Catalyst"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[113.6591, 0.0, 4126.7143, 1177.3768, 3986.5, 4360.0417, 0.0, 487.9104, 140.4013, 1.4737, 1077.3654, 1366.8824], [22.5362, 0.0, 159.6735, 0.0, 2234.7458, 50.1957, 1368.0, 3670.8276, 2763.5952, 232.6245, 246.4392, 0.0, 640.4587, 1268.028], [57.4082, 126.4579, 17.8462, 82.1442, 0.0, 107.6633, 0.0, 2001.6364, 61.814, 0.0, 2710.3784, 1074.5977, 2546.3636, 2224.3696, 0.0, 199.3616, 133.1837, 0.0, 419.5769, 785.4904], [25.9808, 201.7836, 57.6136, 117.1471, 0.125, 0.0, 48.3053, 809.75, 1903.1129, 31.1667, 77.1481, 790.3282, 1060.8925, 2436.06, 1737.2258, 18.4524, 198.0449, 190.627, 0.0, 53.1901, 364.5517], [0.0, 1887.12, 184.3721, 27.0333, 2375.3171, 1120.6915, 1914.2857, 1782.7759, 14.8723, 203.7333, 140.672, 0.0, 900.0962, 953.4857], [114.0952, 324.1323, 60.6364, 78.9143, 0.0, 258.0947, 2526.0189, 209.4884, 3626.7561, 1102.3729, 2442.6512, 1676.5968], [1828.3913, 2526.9818, 4252.3143, 0.0, 615.7773, 1321.4035], [1979.2927, 647.0196, 1963.48, 1354.2373, 0.0, 301.3175, 132.7662, 0.0, 976.9266, 1381.4265], [98.6556, 311.5, 26.2619, 116.0192, 5.3611, 0.0, 192.4388, 0.0, 1987.7937, 143.6744, 0.0, 3780.6512, 1083.5679, 3145.8776], [147.0233, 0.0, 1629.2419, 772.3571, 2215.7317, 1906.6667, 23.9767, 463.6798, 12.9605, 0.0, 539.5827, 1497.4198], [877.2222, 94.1087, 76.7879, 6.2174, 0.0, 201.1939, 0.0, 2205.8333, 28.9429, 0.0, 4479.2812, 150.0857, 1728.5862, 462.8857, 5.6176, 77.5591, 252.2941, 0.0, 160.028, 109.2613], [0.0417, 131.5699, 0.0, 1721.2222, 64.2727, 0.0, 5610.1333, 783.3284, 3399.7273, 2746.9231, 0.0, 201.4522, 269.3191], [0.0, 353.5052, 100.9362, 2915.0256, 255.0455, 0.0, 4276.0227, 4216.72], [4614.8125, 21.0, 327.9274, 409.3701, 102.2222, 558.4545, 1586.6117], [2292.2692, 3522.5938, 0.0, 366.5475, 858.5536, 0.0, 881.1031, 1052.3495], [4060.3143, 11.766, 524.419, 249.1946, 489.8381, 1159.7434], [3158.4667, 4.22, 493.962, 454.7383, 0.0, 225.5612, 1843.4478], [52.725, 0.0, 1395.5469, 1546.875, 4300.0, 1638.0238, 136.4483, 235.2412, 71.2055, 307.8252, 637.9569], [171.8095, 367.9351, 96.75, 364.0283, 3.6389, 0.0, 298.1633, 0.0, 2599.6923, 108.2, 269.8182, 1980.8571, 772.4198, 517.5172], [153.2476, 298.1958, 96.1, 118.5673, 11.1304, 0.0, 203.9293, 1943.8548, 39.5952, 0.0, 3024.5814, 1238.0333], [104.77, 469.6885, 132.9762, 212.2736, 0.0725, 301.9286, 2021.5238, 170.6061, 53.75, 1703.1, 1195.0854, 445.4746, 1762.7368], [1911.2069, 1233.322, 207.122, 159.1068, 0.2206, 0.0, 147.4421, 0.0, 6265.2222, 177.425, 0.0, 2726.617, 895.2381], [2529.2979, 3.6939, 274.4177, 338.3014, 0.0, 672.0707, 1376.9315], [72.5441, 33.814, 167.2212, 15.493, 0.0, 281.1959, 157.8438, 2418.0, 42.9767, 32.7353, 2832.973, 1811.4068], [2335.9153, 24.0741, 171.5905, 111.7794, 0.0, 448.4348, 1276.785], [0.0, 153.3662, 7.2979, 6804.1429, 1.0, 363.3079, 27.9508, 0.0, 447.303, 1614.0127], [47.2303, 430.2235, 23.5349, 233.9804, 0.4167, 0.0, 225.8163, 170.6406, 3301.2683, 160.561, 123.697, 3117.9032], [173.906, 385.3684, 167.1707, 96.43, 0.0685, 0.0, 285.3505, 0.0, 2360.46, 48.3571, 0.0, 4241.5909], [1125.6364, 328.746, 158.5714, 213.9619, 4.0, 331.398, 0.0, 2817.0435], [128.4318, 213.4286, 0.0, 169.6421, 0.0, 1948.3793, 87.8837, 0.0, 2611.5676, 1002.7742], [68.2609, 599.3841, 0.0, 544.2451, 1341.0472], [91.75, 112.9245, 0.0, 0.0, 106.1313, 0.0, 2110.8654, 102.0208, 6.4375, 3004.2979], [1583.1266, 3122.9184], [265.8714, 589.5738, 36.119, 115.1748, 16.9583, 0.0, 139.8469, 4245.5238], [1492.8495, 3456.3429], [214.0, 205.6957, 372.8293, 2383.2245, 4164.2353], [2992.0476, 20.1489, 386.941], [56.2534, 139.9121, 190.8367, 109.0571, 2.375, 148.9205, 0.0, 2117.4861], [148.5172, 379.8226, 270.7674, 208.6095, 0.0, 0.0, 160.25, 0.0, 3170.1429], [36.725, 149.9201, 395.3311, 0.0, 223.0769, 969.3014], [92.075, 86.5036, 0.0, 624.9633, 1140.9362], [106.6667, 104.7019, 23.7576, 4135.625, 45.3529], [70.9338, 1815.9775], [670.4563, 924.7143], [60.2286, 650.3591], [244.0769, 0.0, 0.0, 6083.3529], [16.7857, 333.4158, 160.6316, 97.0291, 0.0, 187.3646], [7759.8182, 329.6111], [183.9143], [69.88]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

