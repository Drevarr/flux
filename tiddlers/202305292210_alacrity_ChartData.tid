created: 20230529221000000
creator: Drevarr
modified: 20230705163532128
modifier: drevarr
tags: ChartData
title: 202305292210_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Ryvalia Fazebringer", "Zadey Starbolt", "Drevarr Moonwillow", "Venomina The Siren", "Pamtastic", "Tegan Parker", "Primal Clone", "Artakama Nahid", "Black Raspberry Pie", "Miphest\u00f6", "Johosh Of The North"];
const professions = ["Scrapper", "Chronomancer", "Scrapper", "Scrapper", "Tempest", "Tempest", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 218.6554, 0.0, 0.0, 22.3852, 0.0, 7.3172, 55.224, 5.1678, 135.7528, 0.0, 10.4452, 115.8606, 0.0, 142.14], [35.847, 214.8854, 0.0, 0.0, 48.7296, 34.1875, 29.1619, 37.5024, 35.7831, 87.7219, 27.8881, 0.0, 233.9559, 9.3786, 85.33], [0.0, 297.1954, 5.1888, 0.0, 40.6588, 0.0, 21.364, 63.7104, 16.7562, 78.7644, 17.5767, 19.862, 192.3561, 10.0548, 161.92], [0.0, 483.8064, 5.5131, 0.0, 60.912, 0.0, 33.221, 70.8864, 59.7429, 249.7295, 13.717, 16.1278, 238.2534, 43.6296, 230.0], [42.1405, 206.7936, 128.0988, 604.9415, 43.0052, 49.8986, 415.998, 133.182, 695.52], [25.5765, 88.596, 161.7975, 42.0662, 134.0057, 224.328, 266.4549, 613.4357, 0.0, 245.2718, 596.1492], [80.6085, 771.2628, 42.0725, 0.0, 147.0263, 0.0, 52.502, 153.8784, 127.2375, 470.2698, 0.0, 104.8846, 455.0193, 57.6534, 631.12], [0.0, 899.4401, 73.5945, 13.1818, 214.4102, 0.0, 118.1963, 225.7008, 98.1099, 473.6675, 0.0, 130.808, 488.5398, 79.1742, 531.76], [90.8145, 1035.7855, 90.6743, 43.4369, 227.1256, 0.0, 154.6219, 225.9504, 314.3745, 621.1577, 60.8467, 166.0402, 367.1784, 103.1646, 783.61], [35.2485, 1241.5603, 0.0, 33.4678, 129.2096, 65.4797, 199.1125, 190.632, 221.7456, 310.8877, 78.8207, 193.3708, 543.5478, 110.544, 1043.05], [55.7865, 873.9931, 48.7099, 0.0, 216.9229, 49.6387, 159.9095, 245.9808, 323.5356, 645.0959, 46.1459, 149.5336, 796.5846, 94.9914, 1008.78], [42.3045, 1378.8482, 86.1341, 32.3086, 277.4542, 69.5165, 130.534, 327.2256, 262.2267, 996.7558, 41.378, 215.127, 1001.4894, 152.292, 1282.94]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

