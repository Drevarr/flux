created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Air One Com", "Mike The Archmagus", "Tegan Parker", "Arcanophage Farra", "K\u00f4sair", "Mike The Archmagus", "Zaedy Zae", "Grasszanine", "Newtype Khan", "Mother Ship", "Drevarr Moonwillow"];
const professions = ["Druid", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Weaver", "Druid", "Spellbreaker", "Spellbreaker", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 44.161, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9175, 14.6458, 0.0, 0.0, 0.0, 54.0187, 75.438, 21.6577, 0.0, 34.3892, 0.0, 441.8018, 0.0, 0.0, 158.9758, 153.4925], [0.0, 0.0, 0.0, 20.4163, 0.0, 0.0, 24.9413, 0.0, 0.0, 12.4416, 0.0, 0.0, 0.0, 19.4085, 21.4709, 0.0, 24.9173, 24.9458, 102.9756, 0.0, 10.2141, 25.6106, 0.0, 0.0, 13.739, 29.9074, 0.0, 19.7, 0.0, 31.117, 22.61, 664.818, 0.0, 95.9881, 65.156], [1274.9275], [0.0, 0.0, 0.0, 31.824, 0.0, 0.0, 28.8725, 0.0, 0.0, 0.0, 0.0, 110.8025, 0.0, 25.6072, 0.0, 7.6417, 0.0, 0.0, 110.1516, 0.0, 37.4868, 31.8762, 0.0, 0.0, 0.0, 0.0, 0.0, 31.6912, 0.0, 31.7961, 0.0, 811.6823, 0.0, 0.0, 157.2541, 63.5271], [0.0, 60.912, 0.0, 31.3344, 22.4952, 0.0, 19.525, 0.0, 35.8352, 0.0, 0.0, 90.3575, 0.0, 0.0, 63.3302, 0.0, 41.7533, 0.0, 0.0, 51.8319, 64.0224, 31.1322, 0.0, 0.0, 0.0296, 0.0, 0.0, 66.3803, 0.0, 31.7344, 0.0, 1877.2043], [65.8141, 50.478, 0.0, 73.0973, 41.184, 0.0, 54.9494, 0.0, 63.0763, 30.6634, 87.1429, 55.8125, 35.3984, 0.0, 46.681, 45.5834, 69.3643, 0.0, 245.6883, 48.3699, 82.4148, 62.656, 0.0, 0.0, 25.7607, 71.5999, 14.6124, 23.1872, 0.0, 69.7662, 0.0, 1011.7321, 0.0, 121.958, 78.1872], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1031.6767, 0.0, 1682.4465], [100.7304, 59.9532, 27.3578, 82.7424, 32.4792, 6.903, 85.8749, 0.0, 9.783, 0.0, 0.0, 121.8475, 26.0291, 78.9592, 72.265, 0.0, 0.0, 58.3648, 29.8149, 114.6366, 0.0, 66.1986, 22.1646, 0.0, 0.0, 0.0, 74.5752, 65.5776, 0.0, 0.0, 14.6324, 49.434, 1077.0052, 0.0, 0.0, 232.868, 208.4992], [72.8888, 44.3194, 19.8551, 0.0, 13.581, 69.4347, 202.3632, 35.4485, 82.1691, 75.6571, 0.0, 0.0, 51.8471, 51.8162, 51.084, 57.8151, 0.0, 23.8316, 39.998, 1572.5968, 0.0, 74.0267, 192.8371], [24.8254, 0.0, 68.9697, 0.0, 143.1456, 68.8838, 121.6488, 0.0, 22.8632, 87.6096, 47.0501, 197.7525, 0.0, 70.965, 0.0, 50.689, 0.0, 60.1045, 106.7867, 281.0301, 31.3527, 55.8792, 16.7213, 0.0, 0.0, 60.9374, 0.0386, 17.5824, 39.4611, 62.3385, 126.567, 95.62, 1605.2333, 84.7668, 0.0, 414.9442, 367.129], [139.4419, 62.2656, 72.741, 155.3011, 23.868, 24.0727, 106.6229, 0.0, 101.614, 95.7485, 126.2039, 319.6, 74.1787, 172.8383, 0.0, 121.4668, 38.5261, 156.182, 142.8047, 457.1112, 48.8088, 108.9855, 75.5396, 36.9882, 0.0, 58.2429, 68.0837, 172.2204, 57.2645, 24.129, 97.7962, 6.566, 2913.716, 50.4098, 518.9672, 919.9526], [156.8555, 206.4804, 89.8715, 323.185, 121.1184, 43.4655, 90.5486, 68.7312, 110.208, 79.9891, 50.7351, 348.975, 51.7532, 211.1422, 39.2222, 14.0821, 123.464, 236.3848, 430.4703, 206.5474, 136.7145, 89.6764, 88.253, 60.5524, 66.6926, 41.0652, 105.0461, 155.4525, 193.6784, 5.152, 3887.3722, 73.7433, 4.1441, 1115.4135, 792.5225]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

