created: 20230614224052000
creator: Drevarr
modified: 20230705163535608
modifier: drevarr
tags: ChartData
title: 202306142240_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Black Raspberry Pie", "Sakis Ranger", "Johosh The Mighty", "Zayde Sunsabre", "Artakama Nahid", "Koralia Danai", "Ryvalia Fazebringer", "Shaca Booey", "Venomina The Siren", "Tika Fiery", "Xanvias Einzbern", "Momomeko", "Crusader Siolith", "Solus Sanctus"];
const professions = ["Druid", "Chronomancer", "Druid", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Chronomancer", "Berserker", "Tempest", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 71.0471, 37.9962, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [3.2026, 10.2963, 8.8407, 80.9309, 35.0744, 26.5843, 6.9722, 3.5686, 0.0], [33.2833, 23.7806, 47.8924, 33.0235, 63.7976, 53.2482, 34.8932, 1.4358], [163.8229, 179.6626], [25.7515, 55.5982, 82.2415, 88.6926, 108.1744, 0.0], [58.1782, 59.8578, 42.9077, 106.8613, 32.2864, 15.012, 17.8429, 94.7781, 0.0], [47.9279, 25.3612, 76.8702, 108.6055, 58.9832, 51.255, 16.2256, 65.3089, 0.0], [24.8018, 0.0, 0.0, 140.6697, 209.8616, 30.6733, 0.0, 53.7805, 0.0], [68.8009, 93.4524, 24.0768, 141.8907, 0.0, 43.8401, 19.5993, 64.9186, 42.8738], [78.8278, 14.797, 44.4647, 104.3613, 70.3936, 36.6302, 15.2082, 46.462, 91.5685], [29.6989, 40.8726, 68.1549, 100.9601, 79.9136, 109.1048, 0.0, 70.2994, 53.1694], [8.8073, 0.0, 49.7838, 76.0055, 181.2025, 133.6288, 111.6684], [25.5746, 81.7274, 58.4469, 211.0773, 65.5928, 47.8608, 47.3918, 28.8, 16.2982], [130.3493, 63.0905, 70.7569, 177.5305, 127.636, 12.7226, 119.6628, 31.839, 0.0], [152.1719, 60.1971, 126.4241, 134.9429, 77.656, 98.3526, 49.7265, 134.6325, 87.7849]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

