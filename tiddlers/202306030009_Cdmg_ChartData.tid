created: 20230603000934000
creator: Drevarr
modified: 20230705163532974
modifier: drevarr
tags: ChartData
title: 202306030009_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sigrid Oluvkin", "Venomina The Siren", "Kary\u00edna", "Johosh Of The North", "Sureting", "Tika Fiery", "Aronorf Xideliesi", "Grilo Gringo", "Kardknight", "Miphest\u00f6", "Dargon Spiritwalker", "Melli Dragonswrath", "Lord Erin The Wise", "Grothez", "Morv\u00e4rth", "Xanvias Tsoli", "Smol Gluvs", "Be\u00eb", "Wild Doggy"];
const professions = ["Scourge", "Tempest", "Vindicator", "Tempest", "Reaper", "Firebrand", "Firebrand", "Dragonhunter", "Renegade", "Tempest", "Scourge", "Berserker", "Weaver", "Tempest", "Scourge", "Holosmith", "Scourge", "Scourge", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[95.3778, 0.9877, 84.2059, 0.0, 75.0074, 33.011], [0.0, 2.1111, 31.7552, 0.0, 0.0, 65.5238, 22.0169, 1.2599, 19.4923, 39.9716, 0.0, 4.1739, 13.7143, 60.4974, 24.5705, 0.563, 11.75, 0.0, 9.563, 1.8235], [1.9149, 6.9383, 0.0, 38.3349, 0.0, 0.0, 7.8571, 33.6102, 4.7473, 26.159, 60.156, 6.6098, 0.0, 0.0, 18.9029, 36.1852, 35.3423, 0.3185, 0.0, 20.9559, 9.2195, 20.5481, 5.989], [0.0, 0.9506, 0.4412, 22.9284, 0.0, 0.0, 0.0, 28.9492, 41.3646, 54.8615, 8.8582, 0.0, 25.3913, 0.0, 7.1943, 51.0265, 40.8456, 3.6, 0.0, 26.6691, 0.0, 3.7185, 6.489], [0.0, 13.3951, 0.0, 11.9492, 0.0, 0.0, 26.2455, 11.6872, 44.1773, 79.4348, 0.0, 60.7371, 50.582, 64.0604, 27.4667, 3.4691, 40.5662, 0.0, 24.4148, 5.6397], [10.8085, 89.9383, 3.5588, 5.6097, 0.0, 0.0, 68.7143, 70.4407, 29.3574, 40.5026, 49.6667, 0.0, 107.3261, 0.0, 23.5029, 12.5238, 45.7181, 31.3556, 0.0, 13.1397, 0.0, 53.9259, 15.8566], [0.0, 13.5926, 0.0, 38.4042, 0.0, 11.4762, 8.3051, 6.917, 8.8718, 99.0284, 0.0, 15.9348, 0.0, 33.4914, 43.7354, 25.8523, 42.1778, 4.3951, 40.0956, 0.0, 37.0074, 15.4853], [58.4007, 61.641, 108.922, 38.6829, 227.9565, 0.0, 112.7714], [45.5679, 126.7279, 160.8171, 222.9852, 56.6875], [29.5658, 43.639, 18.0462, 58.6879, 0.0, 267.1087, 0.0, 100.7886, 99.6402, 23.5503], [3.617, 110.8025, 0.0, 82.8822, 0.0, 0.0, 6.5238, 197.8644, 106.2671, 40.7128, 51.1135], [10.2979, 88.9012, 111.9412, 28.5381, 0.7333, 0.0, 65.3333, 67.4407, 16.9856, 5.3077, 34.7163, 1.878, 103.2609, 0.0, 150.92, 54.8942, 71.255, 0.9333, 0.0, 67.0588, 0.0, 54.9778, 9.4816], [4.5319, 45.3704, 191.7353, 67.9769, 4.1167, 47.0238, 19.0952, 27.678, 59.7292, 54.3538, 34.8936, 58.2927, 33.1739, 30.0357, 53.3657, 87.4286, 92.5168, 30.837], [19.9753, 341.6765, 42.455, 80.9333, 0.0, 536.0476, 105.8644, 95.491, 36.7026, 300.7163], [119.5128, 161.4965, 0.0, 574.8478, 0.0, 58.2857, 96.5026, 121.953, 120.8593, 14.6173, 56.9191], [0.0, 191.8765, 0.0, 17.0115, 0.0, 0.0, 65.9048, 91.4068, 20.1805, 105.4205, 98.1348, 0.0, 24.9348, 0.0, 161.5486, 94.6561, 44.0805, 53.6222, 10.6296, 43.7868, 0.0, 73.7333, 35.4596], [5.5532, 106.3827, 12.4412, 57.582, 0.0, 0.0, 93.619, 182.9322, 85.3574, 186.4564, 78.773, 9.3537, 361.1304, 25.4286, 174.8571, 213.3598, 189.2886, 256.2, 3.5679, 112.3971, 0.0, 77.7704, 23.8824], [3.2553, 115.4444, 0.5588, 82.552, 2.95, 0.0, 3.5238, 194.0508, 274.509, 233.2513, 156.6738, 13.0, 336.6304, 0.0, 163.3651, 296.094, 88.5481, 1.4938, 186.625, 0.3902, 139.837, 41.2647], [0.0, 43.5238, 42.1905, 82.2542, 54.3718, 396.5179, 229.5461, 45.2439, 9.5714, 333.3429, 304.2116, 72.5369, 275.1481, 176.4568, 105.7426, 145.061, 175.0667, 55.4853]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

