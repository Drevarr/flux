created: 20230626220846000
creator: Drevarr
modified: 20230705163539455
modifier: drevarr
tags: ChartData
title: 202306262208_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Gravlyn Isshtail", "Specialist Zeff", "Dim Og", "Cyclotechnist Farra", "Mistwalker Cael", "Drumina", "Etchery Howls", "Ateriuz", "Caelon Cai", "Irish Necroman", "Lord Erin The Wise", "Zadey Starbolt", "Rozaalyna", "Ak\u00e1nt\u00f3r", "Cat Wigglebooty", "Mike The Archmagus", "Regis Hawkesburne", "Arcanophage Farra", "Johosh The Mighty", "Xanvias Einzbern", "Arriasa", "My Birthday Girl", "Newtype Khan", "Blancooo Padreee", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Scrapper", "Scrapper", "Scrapper", "Vindicator", "Druid", "Druid", "Spellbreaker", "Reaper", "Reaper", "Weaver", "Scrapper", "Reaper", "Druid", "Scrapper", "Weaver", "Berserker", "Spellbreaker", "Berserker", "Berserker", "Druid", "Scrapper", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[353.687, 0.0, 60.6896, 19.4506, 0.0, 37.9638], [8.6654, 72.3736, 24.6992, 50.7311, 39.79, 33.2138, 62.64, 13.0496, 77.49, 112.7412], [68.0901, 23.8078, 41.8439, 19.366, 99.2772, 68.9823, 19.5977, 91.2168, 111.4542], [57.2898, 43.9953, 24.2797, 101.8325, 16.008, 80.2718, 88.0875, 4.4118, 15.9408, 125.8043], [41.1699, 45.8247, 31.4378, 101.9806, 56.212, 75.5357, 67.5337, 16.5172, 59.0769, 104.9549], [77.728, 33.2207, 35.6969, 36.846, 109.2353, 72.036, 4.9536, 72.6561, 168.4039], [68.9535, 73.2283, 50.7086, 170.2345, 51.0178, 19.0109, 62.2272, 160.5946], [38.0688, 20.5682, 66.939, 104.9909, 130.4873, 64.8324, 105.6816, 134.2985], [278.7742, 63.6867, 50.6405, 43.6356, 24.2334, 86.6539, 9.8226, 27.9505, 79.128, 99.2074], [647.5052, 9.4479, 50.4583, 68.7047, 38.614, 78.1572, 25.4975, 25.0272, 42.2688, 58.3884], [443.0299, 12.2661, 33.6692, 23.8142, 11.0387, 107.8654, 32.0611, 29.4593, 29.7696, 43.2533, 23.3473, 42.1659, 16.0204, 47.5465, 34.73, 82.4578, 72.1926, 12.1054, 52.4718, 25.6113], [102.2815, 139.259, 44.5216, 124.3467, 71.668, 251.5022, 150.0228, 0.0, 138.6333, 305.8556], [588.8644, 20.1432, 11.6582, 47.5714, 0.3018, 93.403, 77.4792, 12.4287, 69.1488, 40.4309, 56.4194, 47.208, 18.7211, 145.4538, 56.856, 28.2348, 76.3817, 35.4182, 68.4495], [1115.0966, 42.8043, 49.6082, 59.3786, 53.1454, 120.5803, 32.3595, 22.7452, 39.6816, 54.7193], [1014.3941, 0.0, 40.4092, 71.0148, 56.4872, 211.5126, 27.0351, 3.3948, 23.4864, 80.2267, 4.011, 34.3128, 24.0437, 54.286, 21.298, 35.7034, 46.5102, 42.5088, 131.4027], [68.8611, 66.0937, 95.485, 1.5523, 146.3715, 67.7484, 34.9287, 111.888, 57.1384, 110.8361, 132.4193, 92.414, 238.8725, 234.117, 61.3472, 175.2012, 267.7603], [816.3662, 41.58, 97.4252, 55.4714, 40.3388, 111.9631, 62.9978, 19.6898, 27.6528, 9.7373, 78.8586, 49.7959, 50.4473, 67.839, 70.656, 110.7533, 84.7989, 55.2636, 166.8249, 157.1427], [1245.2731, 50.9124, 95.0875, 96.2835, 34.4313, 211.9947, 84.1118, 97.6759, 157.5504, 164.1931], [619.8734, 35.3661, 68.8868, 86.4156, 100.5558, 66.045, 9.7308, 40.5301, 68.88, 69.2194, 110.909, 194.3647, 79.7875, 126.8648, 105.57, 179.4883, 82.4499, 48.4988, 29.8152, 143.951], [651.4964, 48.1866, 107.0494, 80.626, 58.2336, 145.2869, 34.8151, 41.36, 64.9488, 37.3968, 49.7974, 90.8909, 77.9258, 84.9468, 166.428, 164.0047, 131.3482, 53.7466, 101.5857, 179.6652], [1141.5004, 0.0, 34.0943, 28.4915, 52.3908, 86.2321, 53.5882, 16.5402, 93.408, 38.5211, 95.1298, 23.9126, 105.8317, 56.856, 179.3669, 102.2989, 0.0, 104.6115, 173.552], [67.7523, 195.0326, 158.4286, 100.7714, 180.5992, 98.4555, 56.5989, 87.8304, 95.3618, 198.7735, 205.2966, 174.4417, 166.4128, 169.372, 287.5699, 164.3517, 49.4741, 178.4484, 299.871], [1529.8807, 7.6204, 58.8368, 27.3381, 167.7036, 75.9874, 82.7954, 99.2208, 67.3142, 70.9122, 64.7882, 79.3155, 149.0828, 114.724, 119.6791, 113.809, 50.8828, 114.9804, 144.0153], [1448.2133, 0.0, 88.8941, 88.4405, 7.5244, 185.1187, 37.3626, 92.9798, 103.656, 228.0852, 81.1668, 112.1747, 113.5588, 184.5575, 105.018, 224.7247, 128.412, 78.9944, 72.6561, 201.9303], [1929.9277, 46.8699, 63.331, 102.0731, 88.1373, 150.7103, 39.6805, 104.4467, 55.9776, 76.2401, 124.7585, 204.7612, 92.1895, 257.0623, 90.022, 252.1094, 190.3473, 106.8739, 158.1165, 370.9134]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

