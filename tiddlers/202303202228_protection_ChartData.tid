created: 20230320222849000
creator: Drevarr
modified: 20230705163522703
modifier: drevarr
tags: ChartData
title: 202303202228_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Venomina The Siren", "Newtype Khan", "Cat Wigglebooty", "Ark Darkness", "Primal Clone", "Eibh\u00ebar", "Black Raspberry Pie", "Ryvalia Fazebringer", "Zadie Miststep", "Kiloak", "Stoic Rapidfire", "Fribble Bibble", "Tribal S", "\u00c1rkantor", "Raelyn Sunray", "Drevarr Moonwillow", "Zaylen Harker", "Koralia Danai", "Viral Marketing", "Solus Sanctus", "Bella Sassy", "Johosh The Great"];
const professions = ["Tempest", "Tempest", "Spellbreaker", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Firebrand", "Druid", "Scrapper", "Druid", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 30.78, 18.5115, 0.0, 0.0, 243.0324, 135.917, 22.9636, 18.6818, 3.9312, 22.8659, 74.9443, 18.4522, 9.261, 37.0185, 27.4528, 25.6982, 135.0864, 6.7725, 13.7871, 13.8682, 18.4545, 0.0], [238.8204, 0.0, 54.7162, 23.3941, 29.0455, 64.9933, 230.0153, 0.0, 19.278, 35.8271, 13.8368, 52.4257, 62.0482, 18.576, 70.8878, 52.0027, 10.0962], [31.8349, 35.5925, 40.3344, 44.0325, 15.6244, 26.155, 16.6085, 684.45, 121.2136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [17.7834, 0.0, 10.8432, 18.069, 49.2696, 39.2324, 97.0125, 602.7372, 116.432, 42.3742, 0.0, 80.256, 342.6975, 16.6565], [62.073, 30.0033, 39.5476, 38.8826, 769.1112, 149.6641, 39.4196, 0.0, 2.2226, 112.4147, 220.7137], [19.4832, 47.5632, 35.9385, 16.9264, 14.6925, 52.6196, 502.0704, 140.6986, 44.7678, 19.8389, 5.8363, 38.6355, 125.7045, 0.0, 32.4135, 40.5927, 46.1472, 18.5617, 202.4006, 32.9724, 32.414, 37.6165, 9.4864], [4.9123, 5.1559, 41.5584, 34.941, 25.984, 20.7191, 41.2885, 569.0412, 79.8527, 26.8906, 21.0128, 0.0, 33.1162, 103.3806, 28.669, 45.4545, 43.0606, 39.3024, 25.8354, 247.5058, 24.768, 42.2968, 0.0, 23.3482, 48.4484], [14.4323, 33.8461, 36.72, 41.9235, 36.7776, 25.0127, 52.542, 575.3592, 135.917, 47.124, 10.1291, 20.8656, 29.7933, 162.9109, 15.2942, 21.9713, 26.381, 32.1264, 31.8054, 246.361, 26.3547, 22.8159, 5.3171, 20.9898, 37.7423], [40.479, 22.0255, 16.8768, 29.6685, 28.7201, 0.0, 66.667, 565.2504, 104.9561, 26.3296, 22.7569, 34.6399, 27.0336, 182.5771, 23.6225, 55.1407, 95.2269, 52.1824, 56.0282, 241.3238, 22.4847, 26.3542, 81.5417, 64.3042], [27.5318, 28.1556, 46.2816, 75.9525, 16.1527, 18.8284, 37.7961, 424.9908, 160.1836, 0.0, 19.1178, 0.0, 32.215, 153.6093, 23.5606, 21.924, 370.0148, 45.632, 31.9769, 235.8288, 27.9801, 18.8302, 18.9075, 37.6754, 34.2866], [81.6458, 129.8902, 0.0, 0.0, 163.5533, 646.3283, 23.0962, 61.2832, 106.2048, 147.2, 25.9384, 426.0946, 0.0, 72.2299, 50.2929, 54.2758], [61.5373, 62.1799, 72.6768, 79.971, 55.0249, 62.9058, 42.9959, 622.9548, 275.4202, 44.0946, 0.0, 13.3812, 40.5504, 186.8293, 0.0, 69.2714, 89.0192, 20.5517, 508.7491, 80.3025, 49.048, 0.0, 62.6745, 40.5882], [67.5539, 7.7576, 9.0288, 25.935, 17.8699, 19.8132, 68.9177, 1141.0308, 210.6295, 47.7224, 0.0, 0.0, 71.4701, 361.035, 11.0527, 82.4985, 125.6927, 43.8656, 96.3768, 347.1034, 30.6117, 71.3758], [48.3235, 67.0032, 70.7616, 41.7525, 42.967, 41.0838, 52.6196, 1094.6988, 227.7237, 61.0368, 27.05, 0.0, 51.5328, 209.1531, 50.4958, 49.9905, 56.4213, 109.0016, 21.5124, 443.0376, 50.7744, 72.2706, 0.0, 61.7311, 45.5686], [30.4259, 17.131, 24.984, 35.226, 44.3634, 14.4561, 30.7336, 1395.8568, 155.7606, 57.4464, 0.0, 53.9935, 64.0922, 205.1667, 44.0561, 103.0523, 69.9522, 60.6832, 18.6303, 389.003, 103.6386, 37.8638, 88.8527, 69.2168], [1301.508, 345.2315, 90.6576, 21.7171, 21.6216, 193.065, 381.3656, 34.087, 104.7533, 47.656, 145.728, 81.6578, 408.4646], [103.5776, 27.1458, 93.2832, 86.6685, 36.3814, 78.071, 129.6863, 1198.7352, 129.8204, 12.0054, 73.134, 39.7958, 169.8048, 364.4898, 88.236, 64.827, 257.0871, 78.1632, 138.7153, 652.536, 60.7977, 54.2538, 32.24, 154.6521, 45.467], [0.0, 60.3504, 54.8928, 91.827, 0.0, 101.4363, 1576.5516, 201.5444, 47.311, 0.0, 3.5078, 145.193, 540.9545, 20.5265, 65.8192, 87.3977, 135.792, 105.5719, 603.0806, 158.5539, 74.8735, 0.0, 50.9414, 74.2988], [110.889, 17.4992, 36.9792, 178.467, 100.9356, 105.9197, 155.2976, 2000.2788, 367.2269, 21.8416, 248.0665, 138.2944, 164.7909, 822.1954, 139.2426, 161.4192, 160.7839, 95.0673], [1977.9552, 281.3972, 123.5696, 49.1529, 46.1009, 207.0886, 510.3921, 79.6291, 165.4222, 91.3974, 197.6528, 137.4459, 869.1322, 169.4286, 117.2109, 43.3946, 144.4982], [0.0, 71.779, 37.4112, 41.7525, 82.2921, 94.5754, 151.8052, 1898.7696, 433.8107, 25.619, 0.0, 32.0242, 123.0029, 462.821, 14.2726, 132.489, 190.4538, 128.1376, 122.1436, 893.6309, 88.8165, 111.1104, 37.7934, 109.9067], [44.9725, 57.4636, 47.6352, 158.6025, 63.6108, 102.8867, 322.2367, 1600.1388, 528.6059, 88.7502, 20.0905, 59.9508, 215.1424, 516.6374, 71.8272, 94.5472, 313.6786, 117.1344, 79.4276, 926.6011, 128.8323, 117.0483, 7.3408, 219.0954, 79.7535], [123.8742, 93.9114, 118.3536, 181.4595, 124.3533, 125.2996, 160.7303, 2250.8928, 662.7298, 50.7892, 63.1055, 65.651, 225.5053, 580.5527, 69.66, 159.9412, 259.9805, 163.944, 211.6584, 1077.0278, 188.9721, 121.9693, 69.1601, 146.26]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

