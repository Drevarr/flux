created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Edgy Nekrodancer", "Crusader Siolith", "Newtype Khan", "Sub Train", "Sygaldry Verdandi", "Aronorf Xideliesi", "Yummy Kiwi", "Bella Sassy"];
const professions = ["Firebrand", "Harbinger", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.591, 273.954, 0.0, 41.1135, 73.3236, 16.6558, 22.8031, 15.3446, 96.1772], [154.8687, 74.5351, 154.5779, 0.0, 94.6033, 32.3304, 58.5165, 43.7976, 40.9836, 23.7877, 55.8232, 22.7244, 16.0704], [9.1837, 415.5171, 10.0395, 85.5539, 42.1732, 19.602, 9.9236, 17.1029, 105.2896, 13.566, 27.6045, 72.0006, 49.1918, 31.2501, 37.0783, 24.1077, 59.7456, 9.3594, 35.8848], [23.5805, 571.7902, 0.0, 68.1839, 42.8432, 51.2028, 0.0, 89.7157, 11.9016, 35.4795, 62.489, 48.1299, 0.0, 31.8304, 102.2544, 13.4406, 15.5568], [10.4748, 433.5153, 11.5161, 83.6628, 90.467, 58.8298, 0.0, 17.1029, 73.3548, 10.9896, 28.308, 78.4707, 67.1867, 49.2901, 52.1875, 33.6516, 75.6432, 14.8086, 105.672], [14.5023, 500.3165, 0.0, 81.3865, 50.4861, 25.2094, 15.6478, 40.6193, 132.8754, 11.6964, 25.431, 109.9364, 64.7472, 34.3896, 35.8778, 26.1609, 143.9856, 15.0138, 126.336], [16.3537, 571.2711, 89.8263, 28.5012, 56.0974, 7.9295, 18.4016, 144.0173, 11.8332, 31.2375, 129.4573, 60.0117, 61.9447, 55.6174, 48.2154, 63.0288, 18.468, 54.7008], [12.8458, 542.5431, 7.1208, 97.6708, 68.1775, 64.1758, 0.0, 19.6204, 163.8575, 86.5445, 82.8569, 48.3241, 64.3811, 53.4093, 136.728, 28.8192, 97.7088], [31.6518, 560.7144, 9.9843, 118.8229, 84.7728, 75.1054, 27.9643, 38.921, 140.331, 47.7432, 39.8895, 133.1624, 58.2323, 41.9486, 49.3063, 31.6506, 135.7776, 19.494, 61.3872]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

