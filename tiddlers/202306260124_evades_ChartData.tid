created: 20230626012458000
creator: Drevarr
modified: 20230705163538213
modifier: drevarr
tags: ChartData
title: 202306260124_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Momomeko", "Arcanophage Farra", "Elonith Requiem", "Rozaalyna", "Versimon", "Necrotic Windrunner", "Orunnii", "Smol Daddy Tika", "Orunnii", "Tootsy Pop Star", "Naosiva", "My Birthday Girl", "Bella Sassy", "Arriasa", "Johosh The Mighty", "Cyclotechnist Farra", "Morton Saltbringer", "Shaca Booey", "Smol Gluvs", "Yuwathida", "Sygaldry Verdandi", "Primal Clone", "Zayde Sunsabre", "Raelyn Sunray", "Blanco Padre Guard", "Tribal S", "Drevarr Moonwillow", "Bender Ale Devourer", "Koralia Danai", "Xanvias Einzbern", "Regis Hawkesburne", "Miphest\u00f6", "Crusader Siolith", "Elon The Archmagus", "No Reserv\u00e9", "Newtype Khan", "Kary\u00edna", "Charr Surethang", "Liyo Morgaine", "Johosh The Mighty", "Solus Sanctus", "Night Of The Wabbit", "Mememonoko", "Venomina The Siren", "Tegan Parker", "Eibh\u00ebar", "Mistwalker Cael", "Lord Erin The Wise", "Ryvalia Fazebringer", "Artakama Nahid"];
const professions = ["Chronomancer", "Spellbreaker", "Reaper", "Scourge", "Chronomancer", "Scourge", "Vindicator", "Spellbreaker", "Herald", "Scourge", "Catalyst", "Scrapper", "Firebrand", "Druid", "Berserker", "Scrapper", "Chronomancer", "Berserker", "Scourge", "Berserker", "Firebrand", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Druid", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Berserker", "Tempest", "Firebrand", "Tempest", "Vindicator", "Spellbreaker", "Vindicator", "Berserker", "Herald", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Tempest", "Tempest", "Chronomancer", "Vindicator", "Weaver", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 13, 0, 0, 17, 4, 1, 4, 6], [0, 0, 3, 1, 27, 4, 11, 3], [5, 1, 16, 10, 8, 0, 0, 5, 1, 1, 2, 3], [0, 7, 2, 2, 10, 0, 2, 0, 5, 18, 5, 3], [4, 0, 6, 7, 19, 5, 14], [1, 4, 0, 1, 42, 0, 2, 7, 1, 0, 0, 1], [25, 34], [8, 0, 0, 6, 6, 11, 12, 17], [0, 1, 3, 59], [4, 0, 8, 5, 16, 0, 0, 2, 0, 0, 16, 13], [0, 6, 4, 0, 0, 50, 0, 0, 4, 0], [0, 19, 6, 4, 0, 5, 2, 6, 2, 0, 0, 1, 12, 1, 5, 2], [0, 6, 2, 20, 2, 8, 11, 7, 2, 0, 0, 3, 4, 1, 0], [0, 10, 0, 7, 6, 8, 11, 0, 0, 7, 0, 1, 0, 8, 12], [0, 10, 7, 0, 2, 29, 0, 3, 1, 1, 5, 12], [18, 0, 5, 22, 3, 2, 9, 11], [0, 0, 2, 3, 7, 15, 12, 1, 5, 0, 11, 3, 2, 6, 1, 3], [0, 0, 1, 4, 4, 1, 9, 35, 7, 0, 10, 0], [4, 3, 7, 12, 6, 0, 4, 4, 9, 11, 13, 0], [36, 1, 15, 16, 12], [0, 2, 4, 3, 2, 9, 17, 2, 17, 3, 5, 0, 5, 0, 14], [0, 13, 6, 4, 3, 3, 0, 7, 10, 8, 6, 4, 0, 5, 17], [0, 2, 11, 7, 7, 0, 0, 7, 1, 0, 1, 13, 0, 7, 27, 5], [0, 5, 6, 7, 0, 10, 1, 2, 1, 0, 7, 15, 10, 1, 9, 14], [0, 8, 5, 22, 0, 0, 0, 5, 8, 0, 1, 13, 2, 14, 6, 6], [9, 8, 8, 6, 0, 7, 1, 0, 19, 6, 2, 24, 0, 3], [0, 2, 4, 1, 2, 8, 7, 5, 1, 0, 1, 32, 7, 2, 8, 14], [0, 4, 7, 15, 5, 0, 12, 2, 15, 0, 3, 2, 3, 10, 15, 3], [0, 11, 6, 2, 1, 8, 4, 21, 10, 1, 9, 4, 7, 10, 3], [0, 2, 0, 4, 0, 1, 9, 6, 13, 0, 20, 5, 16, 0, 22], [0, 9, 11, 8, 14, 3, 16, 14, 10, 0, 1, 14, 2, 0, 2, 1], [0, 11, 23, 5, 4, 1, 5, 13, 4, 0, 0, 1, 0, 1, 20, 18], [0, 2, 15, 1, 2, 0, 1, 37, 2, 0, 2, 11, 0, 2, 0, 32], [4, 0, 23, 2, 1, 22, 50, 5], [0, 37, 36, 6, 13, 25], [0, 10, 5, 4, 15, 7, 4, 1, 4, 0, 0, 15, 0, 25, 31, 0], [2, 2, 1, 37, 0, 27, 4, 0, 2, 0, 14, 7, 0, 24, 0, 1], [0, 14, 3, 9, 12, 8, 0, 7, 3, 0, 13, 29, 17, 5, 3, 5], [3, 27, 0, 0, 15, 16, 52, 18, 0], [10, 72, 45, 14], [0, 14, 26, 5, 15, 8, 12, 6, 6, 0, 10, 4, 9, 12, 4, 11], [16, 15, 2, 0, 3, 20, 19, 36, 36, 0], [0, 24, 19, 36, 27, 46], [0, 14, 2, 6, 0, 6, 2, 27, 0, 0, 29, 30, 3, 6, 7, 25], [0, 0, 13, 7, 3, 16, 12, 9, 46, 0, 17, 13, 3, 18, 27, 2], [0, 18, 27, 22, 18, 19, 1, 31, 15, 17, 13, 10, 9, 11, 2], [0, 46, 2, 29, 22, 12, 5, 3, 6, 0, 2, 39, 7, 19, 23, 12], [0, 100, 11, 8, 0, 30, 24, 24, 1, 0, 4, 9, 1, 10, 9, 6], [0, 4, 14, 20, 10, 16, 49, 6, 0, 0, 19, 39, 13, 18, 31, 11], [0, 0, 4, 18, 34, 0, 60, 0, 37, 43, 13, 9, 21, 8, 36]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

