created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Necrotic Windrunner", "Wags The Beast", "Rina Of Theros", "Gavann", "Daphne Agla\u00e9", "X Mad X King X", "Drevarr Moonwillow", "Eibh\u00ebar", "Bella Sassy", "Mistwalker Cael", "Alarics Bane", "Aspros Gemeos", "Kisumaiassu", "Xo Zen Xo", "Sygaldry Verdandi", "Blancooo Padreee", "Victoria Raskae", "Glorious Gluvs", "Miphest\u00f6", "Civil Rules", "Lumerence", "Name Is What", "Solus Sanctus", "Be\u00eb", "Darks Na", "Lord Erin The Wise", "Luke The Ghastly", "Mike The Archmagus", "K\u00e2 \u00d4tik R\u00e6j", "Xanvias Einzbern"];
const professions = ["Reaper", "Reaper", "Firebrand", "Scourge", "Firebrand", "Reaper", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Vindicator", "Reaper", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Renegade", "Berserker", "Tempest", "Berserker", "Virtuoso", "Scourge", "Firebrand", "Reaper", "Dragonhunter", "Weaver", "Scourge", "Weaver", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.6296, 17.9054, 5.1337, 11.1696, 9.9149, 9.9195, 4.6606, 0.0, 11.4706, 10.2722, 20.0889, 12.9714, 0.3097, 20.8846, 1.3259, 0.0, 3.8632, 12.6489, 0.7927, 4.5522, 0.8904, 16.0806, 12.3415], [22.0926, 17.8919, 6.9626, 7.2411, 2.2553, 4.9885, 12.156, 19.4294, 10.3228, 3.5333, 43.4714, 5.4779, 23.7404, 0.0, 0.0, 1.4211, 6.5638, 1.3527, 12.5224, 0.0, 3.7903, 3.6341], [23.2262, 349.0185], [5.5574, 72.8947, 360.1, 43.9881], [0.8361, 0.0, 9.175, 21.2976, 2.1852, 28.1216, 26.4759, 15.9643, 22.6596, 4.1379, 11.2018, 0.0, 10.0176, 1.4177, 15.5556, 0.0, 8.0, 17.7404, 1.263, 4.8211, 7.4149, 4.2945, 16.791, 2.7671, 0.0, 1.9756], [32.3889, 22.7162, 2.7914, 12.7321, 0.4468, 15.1839, 12.5138, 0.0, 17.0412, 20.8671, 0.0, 6.9714, 5.3717, 8.1442, 0.0, 0.0, 4.6105, 55.1702, 6.3418, 1.194, 4.1096, 5.6935], [11.2857, 0.9574, 23.7586, 36.4862, 0.0, 40.5412, 13.2975, 8.6889, 48.3, 0.2389, 23.0865, 3.1148, 0.4667, 12.5368], [3.5246, 2.3158, 19.925, 5.0357, 11.963, 18.3378, 15.508, 6.2768, 0.6596, 18.1839, 16.6789, 0.0, 11.9882, 2.4114, 0.0444, 8.2571, 8.823, 26.7404, 3.1296, 3.8333, 16.4842, 19.0106, 5.8473, 17.9254, 5.726, 13.8871, 5.6463], [4.1803, 13.9474, 6.675, 9.5476, 11.2222, 53.8243, 14.0695, 10.4911, 11.1277, 29.6207, 18.156, 0.0, 8.6059, 2.4494, 2.8, 11.6143, 3.6283, 23.7019, 2.0, 0.0, 6.8421, 31.4787, 0.9964, 16.6866, 5.3973, 5.129, 0.0], [0.0, 0.0, 0.25, 1.1667, 4.2963, 3.1081, 11.2032, 18.7232, 18.6809, 11.4598, 14.1009, 0.0, 20.1529, 0.8734, 6.7556, 6.3429, 3.7611, 13.75, 0.0, 0.0, 23.6737, 3.1596, 3.5455, 9.0, 88.863, 57.8226, 6.3537], [13.1967, 0.1053, 4.425, 15.2381, 36.0741, 28.7297, 10.4385, 12.1071, 36.617, 1.0575, 12.7523, 25.5059, 0.6709, 47.4222, 33.6571, 0.1681, 10.3077, 1.2481, 11.0, 0.0, 34.4574, 5.9818, 4.1642, 5.3973, 8.1935, 0.0732], [20.5738, 27.8684, 26.25, 21.3929, 52.6111, 56.5676, 10.9037, 30.4681, 7.7701, 30.3211, 8.5333, 44.8, 7.4494, 9.5111, 6.7143, 6.292], [25.8919, 4.9733, 3.2768, 40.766, 56.8506, 65.211, 0.0, 66.6471, 5.3734, 28.2222, 28.3143], [0.0, 0.0, 1.975, 0.0, 11.3704, 40.2568, 14.984, 8.0446, 28.2979, 86.4598, 0.0183, 0.0, 33.8, 8.6582, 2.7556, 6.3857, 0.0, 49.2788, 0.0, 0.0, 0.0, 8.2128, 6.6582, 0.0, 0.8356, 21.5968, 2.9878], [32.1161, 29.766, 32.2069, 47.7523, 0.0, 46.8412, 3.8924, 45.3778, 2.8857, 1.0088, 41.7596, 0.4296, 0.0, 57.6947], [10.1803, 6.3947, 0.0, 12.9881, 27.7407, 81.9054, 2.4332, 1.9286, 4.2553, 0.046, 19.7431, 0.0, 18.8529, 7.6962, 0.0, 51.4714, 3.2035, 15.8173, 0.0, 37.0, 1.4105, 72.9574, 0.0, 1.4179, 5.8356, 62.7258, 15.0976], [0.0, 0.0, 9.037, 2.2162, 10.4973, 7.1161, 32.1915, 17.2644, 6.2477, 0.0, 73.4588, 40.8228, 1.0889, 78.6571, 15.7699, 0.0, 3.3963, 0.0, 0.0, 27.3723, 43.2945, 10.791, 1.1781, 0.0], [79.4737, 212.05, 32.0595, 169.2778, 109.5135, 87.107, 56.6786, 49.1702], [35.2787, 2.1053, 208.725, 190.1548, 16.0741, 37.4189, 0.0749, 63.8393, 247.0426, 3.4828, 23.156, 0.0, 8.1647, 11.4873, 0.0, 0.0, 0.5044, 0.0, 0.0, 0.0, 0.0, 1.1064, 2.0836, 0.0, 6.7534, 2.4032, 1.4512], [5.5745, 69.8391, 8.1193, 0.0, 93.5647, 0.2658, 17.6222, 74.8, 1.4071, 75.3173, 23.0556, 0.0, 5.2842, 76.8085, 18.2291, 5.403, 13.3836], [0.0, 119.25, 1.4481, 69.6915, 108.4327, 156.7463, 0.0], [143.1475, 29.5, 114.575, 76.2024, 90.8333, 0.0, 5.8824, 22.3482, 5.5745, 0.0, 37.4771, 9.1667, 150.7353, 9.2911, 48.9778, 0.0, 0.0], [38.7213, 49.0526, 29.725, 107.2024, 110.4, 13.019, 26.2444, 353.9286, 25.4878], [10.3934, 3.5526, 0.0, 30.6667, 17.9259, 83.8243, 11.4118, 10.5446, 2.4043, 16.3793, 25.8807, 0.0, 50.4765, 4.5063, 4.7111, 36.7571, 5.3274, 66.0865, 31.8444, 109.7667, 39.5474, 16.2766, 3.7636, 44.2537, 45.6849, 3.8387, 28.5488], [39.7593, 66.7568, 2.3904, 6.5982, 11.5106, 30.8736, 64.5138, 10.8667, 16.4, 28.8228, 16.3111, 72.5714, 16.2212, 38.0481, 16.6926, 65.3667, 36.0316, 35.9681, 17.0509, 34.3433, 33.1644, 59.9839, 50.061], [0.0, 77.5789, 34.85, 11.619, 70.8148, 24.7027, 40.5348, 57.0268, 58.234, 79.4368, 132.2661, 75.9235, 48.1899, 14.2222, 20.6714, 0.0, 14.2074, 30.2, 23.4211], [18.5574, 29.6579, 29.3, 71.3571, 46.4815, 125.3243, 46.3369, 42.5982, 0.0, 82.908, 62.9908, 102.6588, 24.8291, 81.7556, 24.8571, 19.5221, 49.6154, 6.8593, 0.0, 24.3474, 86.2766, 43.6036, 21.403, 43.9315], [225.7941, 5.1646, 77.6222, 153.9143, 5.7788, 216.6154, 16.0926, 9.8667, 114.0737, 251.2553, 32.9927, 219.5522], [40.8158, 137.525, 59.8571, 77.2407, 118.1892, 46.0909, 80.8214, 234.2553, 92.4598, 171.8165, 0.0, 85.9882, 19.6709, 34.6444, 56.5, 44.8319, 115.5769, 8.5889, 0.0, 49.6526, 68.4362, 4.2618, 20.3433, 63.8219, 106.1452, 98.6098], [42.0656, 23.2895, 10.125, 94.381, 90.6111, 292.9459, 89.4492, 56.2946, 21.5745, 0.0, 68.2385, 0.0, 107.1059, 0.0, 76.6889, 358.2714, 85.6106, 63.9423, 0.1407, 0.0, 93.5579, 103.1277, 47.8764, 86.6567, 35.8082], [45.9508, 104.7632, 157.15, 128.2381, 185.4074, 381.4459, 116.4064, 178.875, 525.2128, 252.7586, 83.1468, 0.0, 186.9353, 133.2152, 107.6667, 152.7143, 15.7168, 399.4231, 2.3963, 31.9, 25.0316, 349.8617, 41.6, 64.194, 121.2055, 277.7097]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

