created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Absern", "Pafema", "Mmathuss", "P\u00edogre", "Eloraaaaaaaaa", "Absern", "Chocolate Teapot", "Tribal S", "Sister Seraphena", "N\u00e8yp\u00e4", "Alarics Clone", "Explorer Theodora", "Bella Sassy", "Gamora Titus", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19.9976, 47.6373, 13.8041, 19.301, 10.3464, 3.4412, 7.6538, 17.303, 13.9863, 25.1706, 12.3462, 14.661, 0.0, 0.0, 13.8261, 35.9699, 19.7114, 0.4165, 0.0], [0.0, 0.0, 0.0, 0.0, 47.036, 0.0, 0.0, 25.5981, 6.6976, 0.0, 14.1918, 76.426, 40.3675, 0.0, 7.5776, 0.0, 24.6243, 33.1073, 28.6827], [0.0, 40.0858, 19.2258, 104.675, 0.0, 29.1368, 111.5376, 77.4409, 56.2088], [20.0024, 0.0, 0.0, 7.6912, 0.0, 0.0, 19.7811, 0.0, 2.6275, 32.0362, 0.0, 0.4748, 0.0, 0.0, 0.0, 0.0, 67.568, 21.6531, 2.5891, 24.4507, 0.0, 8.6583, 0.0, 13.068, 21.7779, 19.6902, 17.5312, 8.7139, 0.0, 2.6029, 26.3501, 5.2281, 0.0, 0.0, 2.6048, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.7947, 12.7575, 30.7216, 7.9072, 41.4923, 0.0, 0.0, 2.3638, 5.1952, 0.0, 0.0, 0.0, 4.7029, 13.0464, 0.0, 0.0, 5.2409, 0.0, 0.0, 8.6697, 0.0, 10.435, 12.1528, 0.0, 0.0, 6.6555, 25.1955, 0.0, 2.6213, 10.4613, 2.6144, 0.0, 0.0, 2.6085, 0.0, 56.1045], [84.5437, 160.9975, 132.5638, 23.915, 23.8368, 16.0176, 17.5172, 0.0, 468.696], [32.9966, 49.1446, 36.2963, 159.4147, 124.9618, 108.2848, 19.2168, 33.6872, 37.3507, 75.1779, 103.68, 242.5601, 132.2611, 27.9387], [39.9686, 46.0683, 33.737, 48.5414, 41.85, 10.9313, 33.33, 16.9884, 54.4068, 22.6578, 55.6776, 35.9168, 15.5454, 24.7517, 0.0, 20.7407, 19.6741, 35.1319, 25.2797, 26.962, 16.7541, 42.2678, 17.5873, 18.3984, 15.0067, 14.909, 110.7328, 0.0, 61.4166, 11.6742, 62.0525, 22.5894, 71.1333, 43.3228, 32.2632, 0.0, 47.7753, 14.6243, 38.9482, 23.5435, 56.1744, 76.313], [31.8298, 39.3162, 49.016, 51.6646, 54.378, 9.0227, 0.0, 31.3208, 18.1709, 60.0952, 4.5338, 28.9616, 43.241, 18.2692, 48.2995, 0.0, 55.4554, 34.1843, 37.917, 17.2881, 23.2818, 0.0, 15.4056, 31.0944, 0.0, 38.5816, 55.3493, 9.7952, 88.8174, 16.1327, 56.6928, 96.5267, 95.4929, 37.6253, 58.5336, 0.0, 90.4102, 64.8374, 0.0], [22.6776, 26.2938, 62.0029, 69.339, 47.1487, 325.8515, 59.4664, 214.6861, 0.0, 41.116, 98.7156, 76.6768, 0.0, 31.2048, 18.4216, 113.9331, 65.5236, 23.0578, 46.5696, 22.8014, 14.3037, 72.1349, 41.5587, 17.9307, 82.9506, 71.4226, 0.0, 36.7863], [25.0305, 0.0, 62.3664, 98.07, 30.3765, 36.2037, 0.0, 64.3076, 29.6747, 109.8152, 0.0, 29.8116, 0.0, 0.0, 12.7473, 5.2684, 6.272, 43.8845, 59.9617, 39.5643, 29.3265, 6.307, 39.072, 53.5862, 102.0998, 0.0, 109.5885, 44.2934, 165.4946, 0.0, 57.9033, 0.0, 0.0, 32.0502, 115.0487, 0.4463, 85.0651, 0.0, 111.1934, 76.6589, 76.8897], [24.4781, 36.0672, 3.9949, 22.8044, 20.1037, 230.2432, 22.0136, 80.5488, 24.911, 85.3328, 25.0538, 53.9648, 34.7318, 19.9286, 34.729, 61.3656, 59.4762, 34.9921, 26.1717, 49.9338, 14.8542, 20.7777, 27.5575, 0.0, 23.1081, 67.6538, 24.9302, 39.8138, 102.8145, 80.9914, 14.9739, 19.7548, 22.8279, 15.0322, 73.023, 409.5132], [25.7125, 44.3713, 0.0, 56.7749, 34.836, 109.34, 23.4563, 19.688, 4.7398, 9.3257, 33.0569, 72.1497, 57.1282, 86.579, 15.0711, 45.2523, 15.5524, 54.5826, 93.8768, 56.4336, 251.904, 131.2563, 11.8552, 143.7038, 20.9509, 77.1603, 16.0779, 21.312, 56.8512, 161.8635, 124.8735, 118.1669, 28.4654, 176.199, 57.0618, 65.9007], [15.2892, 172.7865, 104.4888, 79.7103, 79.8996, 66.7641, 69.9818, 23.6603, 25.0388, 104.0174, 123.7478, 39.5888, 99.666, 70.1475, 144.1933, 21.9017, 209.2986, 62.6851, 82.2384, 194.7981, 275.7403, 121.9283, 97.1477, 0.0, 100.2906, 99.4294, 124.0425, 18.846], [24.0975, 502.0787, 38.2368, 185.8435, 0.0, 67.3968, 38.012, 0.0, 43.3224, 24.3271, 62.5632, 71.55, 30.2526, 9.7383, 22.3215, 56.2371, 64.581, 4.8006, 60.3002, 59.0861, 0.0, 0.0, 4.845, 147.1475, 0.0, 106.5487, 70.62, 24.9606, 50.3607, 38.2928, 27.7347, 98.5205, 840.3759], [17.159, 20.6105, 0.0, 8.0032, 29.82, 8.008, 23.8838, 8.0649, 0.0, 24.0856, 10.14, 14.2736, 10.8118, 9.3678, 10.8781, 11.8093, 4.4481, 0.0, 59.1233, 69.8741, 40.8408, 41.7021, 69.4192, 8.379, 29.1203, 37.7273, 6.7686, 216.2176, 16.1306, 84.7896, 18.2723, 111.4221, 35.0727, 159.8184, 40.1635, 47.6496, 51.4518, 117.8726, 61.5825, 64.8115, 43.5389, 108.0461, 82.8253, 61.3719, 25.01, 40.8679, 16.9904, 0.0, 7.73, 17.0208, 26.5874, 37.947, 20.8845, 15.1902, 10.935, 392.7638, 14.308, 183.463, 57.5837, 67.4576, 9.7002, 49.9664, 44.352, 37.8893, 0.0, 49.5505, 93.3768, 0.0, 46.3442, 58.7301, 0.0, 98.9242, 35.8815, 6.1292, 12.4005, 3.4884, 34.8333, 27.9509, 42.1425, 166.1395, 60.7917, 20.424, 62.7744, 22.8843, 11.9574, 115.852, 812.5719]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

