created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Revitiel", "Klenga", "Arriasa", "Cat Wigglebooty", "Mistwalker Cael", "Etchery Howls", "Tootsie Pop Rocks", "Grasszanine", "Crusader Siolith", "Ex Warcraft", "Arcanophage Farra", "Tegan Parker", "Drevarr Moonwillow", "Newtype Khan", "High Sorcer Baradun"];
const professions = ["Vindicator", "Firebrand", "Druid", "Scrapper", "Vindicator", "Druid", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.899, 239.1318, 33.5258, 0.0, 21.804, 8.9501, 39.0673, 5.8282, 20.0827, 0.0, 2.9957, 97.5283, 7.056, 0.0], [0.0, 263.9473, 149.0374, 0.0, 0.0, 0.0, 46.2536, 0.0, 0.0, 0.0, 0.0, 170.8311, 0.0, 0.0], [0.0, 283.687, 145.6848, 0.0, 0.0, 74.0842, 0.0, 0.0, 0.0, 0.0, 222.6234, 0.0], [0.0, 247.0276, 183.7823, 0.0, 0.0, 0.0, 4.9651, 0.0, 0.0, 0.0, 296.7616, 0.0], [16.9785, 385.7692, 279.1785, 0.0, 0.0, 20.424, 15.7919, 0.0, 13.9748, 15.7483, 2.4309, 1.2118, 167.9074, 4.914], [26.1469, 479.9555, 109.416, 0.0, 26.6064, 0.0, 46.3843, 0.0, 5.129, 0.0, 0.0, 212.808, 26.514], [16.3302, 676.224, 266.6825, 0.0, 0.0, 0.0, 81.2705, 0.0, 51.6275, 0.0, 0.0, 131.9869, 0.0], [69.3032, 633.9248, 615.9604, 0.0, 0.0, 0.0, 0.0, 0.0, 33.3914, 0.0, 0.0, 0.0, 436.8933, 0.0], [37.8775, 884.3363, 336.4771, 0.0, 57.9587, 278.5671, 9.982, 0.0, 26.1571, 29.9742, 416.6358, 0.0, 0.0], [85.5716, 2292.0554, 785.7228], [0.0, 1937.3057, 869.5373, 0.0, 9.9912, 0.0, 242.505, 56.35, 0.0, 0.0, 0.0, 718.2008, 0.0, 0.0], [77.0515, 1854.3991, 867.0991, 8.6339, 99.5808, 114.3275, 33.0372, 22.9723, 695.4372, 48.294, 13.4244], [26.7952, 2098.6068, 1179.8034, 0.0, 0.0, 87.3264, 40.9473, 377.6074, 0.0, 18.5416, 15.318, 0.0, 927.8761, 65.574, 0.0], [76.4032, 2015.7003, 1334.3268, 0.0, 0.0, 163.668, 49.546, 412.1016, 0.0, 64.7752, 0.0, 0.0, 729.4781, 61.704, 0.0], [163.9197, 3202.8992, 73.452, 23.6729, 332.0832, 396.4224, 70.3248, 89.4683, 1156.1382, 128.538, 50.9949]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

