created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Glorious Gluvs", "Graumas", "High Sorcer Baradun", "Philip Poundhouse", "Loganlek", "Mew Mew", "Mort\u00e4rion", "Lucky Luprac\u00e1n", "Permanent Dawn", "Snugglies Wugglies", "Lord Erin The Wise", "Cupi Cupita", "Brutal Araden", "Heals For Daddy", "Trooobi", "Tribal S", "Mistwalker Cael", "Drevarr Moonwillow"];
const professions = ["Berserker", "Thief", "Tempest", "Herald", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Virtuoso", "Weaver", "Herald", "Renegade", "Druid", "Herald", "Druid", "Herald", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.9386, 389.963, 31.7188, 9.8389, 57.888, 79.5405, 0.0, 0.0, 0.0, 0.0, 0.0, 68.1043], [31.1264, 0.0, 205.6954, 77.4988, 207.7824, 66.748, 0.0, 0.0, 0.0, 150.6221], [0.0, 34.7002, 271.6013, 21.3928, 17.1116, 116.8051, 27.988, 348.7776], [0.0, 0.0, 169.5653, 3.047, 186.9139, 0.0, 595.1482, 0.0, 0.0, 0.0], [0.0, 54.5798, 258.2438, 141.1372, 0.0, 51.456, 106.933, 162.5155, 0.0, 0.0, 0.0, 0.0, 209.7179], [77.763, 78.0845, 85.5804, 366.2165, 83.148, 26.665, 25.6455, 37.1639, 442.8579], [0.0, 37.081, 558.0442, 38.5958, 0.0, 72.2957, 0.0, 422.2435, 66.83, 34.6752, 0.0, 0.0, 334.3955], [0.0, 53.8061, 89.7917, 42.2777, 0.0, 243.3869, 107.6136, 548.0261, 84.46, 19.8912, 0.0, 16.8761, 389.8879], [0.0, 12.2016, 45.2669, 44.5841, 6.7922, 185.3702, 103.0198, 434.8589, 84.542, 0.0, 28.413, 19.1927, 658.7015], [0.0, 6.5472, 340.6147, 48.9219, 7.6986, 213.671, 129.7318, 271.9723, 113.488, 14.8915, 45.2763, 33.2186, 604.6505], [12.1522, 44.8781, 752.4691, 37.7283, 185.8848, 120.2039, 700.8946, 136.94, 108.1114, 60.2208, 24.3734, 652.9361], [0.0, 426.8179, 1244.4682, 197.4624, 64.4831, 1054.8667], [6.4694, 57.7344, 653.7725, 46.6366, 6.4428, 263.5834, 186.8137, 681.2294, 254.118, 139.5072, 53.8002, 17.4236, 886.0761], [41.3785, 179.8694, 1367.2824, 69.6587, 20.6497, 334.2067, 254.8697, 1344.2779], [163.4335, 305.6947, 1409.581, 62.0411, 372.2842, 76.3929, 1353.5539], [75.9831, 74.0429, 1180.2782, 65.1728, 5.1542, 425.0266, 227.9025, 690.1344, 137.76, 191.3318, 58.9662, 15.444, 1331.096], [115.6111, 418.9613, 1447.056, 86.3751, 89.5877, 532.055, 431.5601, 2427.7147, 572.688, 295.0886, 309.7017, 22.0288, 1804.9431], [160.8712, 364.0243, 2504.52, 127.8064, 832.944, 519.7777, 2548.3027, 567.44, 462.9811, 275.8275, 175.3877, 2365.2718]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

