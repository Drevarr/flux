created: 20230703220627000
creator: Drevarr
modified: 20230705163541246
modifier: drevarr
tags: ChartData
title: 202307032206_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Vopiscus Zergherdus", "Mike The Archmagus", "Erma Starr", "Govinda Ektar", "Il Dim Snail Il", "Lucky Leipreach\u00e1n", "Morvtron", "Air One Com", "Zadie Miststep", "Smol Daddy Tika", "Newtype Khan", "Miphest\u00f6", "Drumina", "Be\u00eb", "Gamora Titus", "Oo Dads Mad", "Grim Grooblin", "Inedible Plant", "Big Baby Norn", "Mike The Archmagus", "Fribble Bibble", "Kary\u00edna", "Johosh The Mighty", "\u00c1rkantor", "Be\u00eb", "Artakama Nahid", "Ateriuz", "Xanvias Einzbern", "Tootsie Pop Rocks", "Glorious Gluvs", "Rahani Sunray", "Arriasa", "Crusader Siolith", "Arcanophage Farra", "Sub Train", "Zaylen Harker", "Gabe Malhorn", "Grasszanine", "Morton Saltbringer", "Drevarr Moonwillow", "Mmathuss", "Sister Elon\u00edth", "Koralia Danai", "Mistwalker Cael", "Solus Sanctus", "Tegan Parker", "Black Raspberry Pie", "Primal Clone", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Scrapper", "Tempest", "Guardian", "Vindicator", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Druid", "Reaper", "Dragonhunter", "Berserker", "Chronomancer", "Vindicator", "Mechanist", "Weaver", "Scrapper", "Vindicator", "Berserker", "Vindicator", "Scourge", "Tempest", "Berserker", "Berserker", "Scrapper", "Berserker", "Chronomancer", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 4, 0, 46, 2, 10, 3, 2], [3, 5, 9, 8, 7, 13, 8, 10, 10], [7, 0, 3, 4, 1, 1, 48, 2, 3, 0, 6], [2, 4, 4, 5, 5, 10, 9, 10, 4, 4, 19], [12, 2, 1, 2, 2, 1, 41, 2, 2, 1, 0, 13], [2, 0, 0, 0, 0, 29, 0, 0, 0, 1, 9, 9, 5, 4, 6, 6, 7, 3], [3, 0, 0, 0, 34, 1, 0, 0, 0, 19, 10, 9, 8], [7, 8, 8, 5, 5, 2, 3, 4, 6, 7, 8, 2, 2, 18], [5, 6, 3, 4, 5, 11, 8, 9, 12, 2, 20], [12, 1, 4, 0, 0, 34, 1, 0, 1, 0, 10, 10, 6, 2, 4, 3], [1, 0, 0, 1, 0, 0, 21, 2, 0, 0, 0, 5, 6, 7, 3, 2, 2, 3, 2, 1, 5, 6, 5, 6, 3, 15], [8, 5, 10, 15, 9, 13, 7, 8, 21], [6, 1, 2, 0, 0, 25, 0, 1, 0, 0, 9, 1, 6, 3, 0, 3, 2, 1, 5, 5, 6, 6, 5, 4, 8], [8, 1, 3, 4, 5, 6, 13, 11, 11, 13, 4, 22], [11, 10, 8, 17, 18, 41], [3, 0, 1, 0, 0, 21, 0, 4, 4, 4, 4, 4, 5, 8, 3, 8, 6, 6, 10, 3, 15], [16, 3, 3, 0, 1, 61, 2, 2, 1, 2, 6, 3, 5, 5], [8, 1, 2, 0, 0, 19, 0, 0, 0, 0, 4, 5, 3, 6, 3, 3, 1, 7, 6, 7, 7, 2, 9, 2, 15], [10, 3, 8, 2, 1, 8, 7, 7, 21, 13, 1, 7, 4, 20], [20, 1, 0, 3, 0, 50, 0, 2, 0, 1, 7, 8, 4, 7, 4, 8], [13, 0, 1, 6, 0, 0, 63, 0, 3, 0, 0, 7, 6, 9, 11], [5, 0, 1, 0, 0, 0, 23, 0, 1, 0, 0, 12, 7, 10, 5, 5, 3, 2, 0, 3, 7, 9, 4, 6, 1, 16], [5, 0, 0, 0, 0, 25, 1, 0, 0, 0, 5, 8, 4, 4, 5, 3, 3, 4, 3, 1, 7, 7, 11, 6, 19], [8, 0, 1, 2, 0, 0, 22, 1, 0, 0, 0, 10, 33, 7, 5, 8, 4, 11, 7, 5, 2], [20, 1, 1, 1, 0, 0, 74, 3, 2, 0, 1, 9, 7, 9], [10, 0, 0, 1, 26, 0, 2, 0, 1, 5, 5, 3, 7, 5, 5, 4, 3, 4, 3, 6, 9, 7, 7, 18], [6, 0, 0, 0, 0, 24, 0, 0, 0, 0, 12, 4, 3, 8, 3, 10, 3, 5, 6, 11, 9, 5, 10, 2, 20], [11, 0, 3, 1, 44, 3, 2, 0, 0, 11, 9, 5, 1, 9, 5, 5, 6, 8, 6, 7, 11, 9], [16, 0, 3, 0, 29, 2, 1, 2, 0, 9, 10, 7, 2, 4, 4, 4, 3, 6, 6, 10, 12, 3, 7, 20], [17, 1, 1, 5, 0, 60, 1, 2, 0, 1, 5, 0, 3, 5, 4, 3, 2, 3, 3, 7, 5, 4, 3, 3, 23], [3, 9, 22, 15, 21, 7, 6, 16, 10, 10, 14, 11, 8, 21], [10, 0, 0, 4, 0, 0, 54, 4, 2, 0, 1, 10, 5, 6, 3, 3, 4, 4, 6, 9, 7, 9, 10, 5, 3, 21], [9, 0, 1, 1, 1, 1, 41, 3, 1, 0, 8, 9, 5, 4, 8, 7, 5, 7, 5, 9, 9, 11, 7, 6, 23], [11, 0, 0, 2, 0, 0, 39, 2, 2, 1, 0, 11, 14, 5, 5, 2, 7, 9, 7, 7, 7, 13, 8, 6, 6, 22], [13, 1, 3, 0, 0, 35, 3, 1, 1, 1, 12, 6, 3, 5, 5, 4, 3, 5, 8, 12, 12, 14, 12, 6, 23], [16, 2, 1, 1, 36, 3, 1, 1, 17, 13, 9, 7, 6, 8, 10, 7, 3, 3, 14, 8, 9, 4, 20], [16, 1, 0, 5, 0, 1, 39, 3, 1, 1, 0, 17, 9, 8, 7, 6, 8, 6, 8, 11, 12, 7, 9, 11, 9, 26], [16, 0, 0, 3, 0, 1, 62, 1, 1, 1, 10, 8, 12, 7, 5, 7, 5, 7, 4, 12, 10, 9, 9, 10, 25], [12, 0, 2, 0, 0, 47, 1, 0, 12, 8, 9, 7, 9, 7, 16, 19, 11, 14, 13, 14, 25], [12, 1, 1, 4, 0, 0, 61, 1, 2, 0, 0, 13, 9, 3, 13, 5, 4, 9, 5, 8, 11, 10, 12, 20, 7, 23], [15, 1, 2, 4, 1, 1, 52, 5, 2, 1, 15, 10, 5, 11, 6, 9, 10, 10, 9, 11, 8, 6, 9, 9, 22], [16, 0, 1, 4, 0, 65, 3, 2, 0, 1, 10, 11, 7, 10, 7, 7, 8, 6, 9, 11, 8, 11, 10, 10, 20], [15, 1, 0, 5, 0, 0, 58, 5, 2, 2, 0, 11, 12, 4, 10, 9, 7, 9, 11, 5, 12, 7, 14, 13, 7, 21], [8, 0, 0, 3, 0, 0, 35, 2, 1, 1, 1, 24, 15, 6, 21, 6, 22, 9, 7, 9, 2, 10, 13, 2, 27, 17], [14, 3, 2, 2, 0, 74, 2, 2, 0, 0, 11, 10, 11, 7, 7, 6, 4, 8, 9, 10, 12, 16, 12, 12, 21], [20, 0, 0, 3, 0, 63, 3, 3, 1, 0, 10, 7, 6, 10, 4, 8, 4, 7, 7, 15, 12, 17, 15, 11, 33], [9, 1, 5, 0, 0, 57, 0, 1, 0, 10, 37, 18, 7, 34, 28, 1, 1, 5, 9, 7, 7, 5, 18, 24], [16, 1, 2, 0, 61, 2, 1, 0, 1, 7, 19, 11, 6, 4, 5, 4, 24, 14, 27, 18, 21, 13, 12, 28], [12, 1, 1, 6, 0, 1, 68, 3, 3, 0, 12, 11, 4, 10, 11, 7, 25, 5, 13, 15, 13, 18, 21, 10, 54], [19, 0, 1, 3, 0, 0, 55, 1, 2, 0, 0, 9, 22, 16, 14, 6, 4, 32, 26, 6, 22, 21, 10, 35, 26, 43]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

