created: 20230524221126000
creator: Drevarr
modified: 20230705163531601
modifier: drevarr
tags: ChartData
title: 202305242211_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sizzln Sisigbringer", "Grasszanine", "Mouschi W", "Al Darasum", "Tootsie Pop Bringer", "Johosh Of The North", "Newtype Khan", "Bork Borkbringer", "Xkaet", "Xanvias Einzbern", "Plum Crazybringer", "Mixon Cue Bringer", "Spicy Gyrosbringer", "Band Aidbringer"];
const professions = ["Weaver", "Spellbreaker", "Berserker", "Berserker", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.074, 1.431, 0.026, 0.207, 0.38, 0.369, 0, 0, 0.23, 0.213, 0.045], [0.634, 0, 0, 0.692, 0.335, 0.116, 0, 0], [0.847, 0.523, 0, 0.61, 0, 0.355, 0.224], [0.154, 0, 0, 0.407, 0.365, 0.354, 0.619], [0.428, 0.647, 0, 0.31, 0.253, 0.278, 0.315, 0, 0.122, 0, 0.346, 0.26], [0.223, 0, 0.831, 0.415, 0.254, 0.277, 0.314, 0, 0.745, 0.345, 0.213, 0.224], [0.652, 0, 0.861, 0.509, 0.484, 0, 0, 0.61, 0, 0, 0.224], [0.824, 1.294, 0, 0.639, 0.506, 0.277, 0.079, 0, 0.305, 0.736, 0.212, 0.388], [0, 0, 0.649, 0.697, 0.781, 0.313, 0, 0.831, 0.77, 0.85, 0.536], [1.065, 2.157, 1.383, 1.036, 0.729, 0.465, 0, 0, 0.812, 0.575, 1.066, 0], [0.818, 1.245, 0.417, 0.83, 1.092, 0.37, 1.414, 0.24, 0.976, 0.994, 1.066, 0.611], [1.67, 1.943, 0, 1.451, 1.33, 0.416, 0.939, 0.954, 1.037, 0.88, 0.266, 0.721], [1.893, 1.296, 0, 1.565, 1.152, 1.199, 0.943, 0.961, 1.099, 1.059, 1.172, 0.841], [1.754, 3.519, 0.623, 1.658, 1.428, 1.074, 1.412, 1.08, 1.539, 1.635, 1.276, 1.135]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

