created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Nose Llama", "Necrotic Windrunner", "Kosair", "Reina Armitage", "Xanvias", "Drac Tepes", "Ax Axun", "Flick Embermage", "Chocolate Teapot", "Gestern Yesteryear", "Vesnan", "Drevarr Moonwillow"];
const professions = ["Weaver", "Reaper", "Firebrand", "Druid", "Reaper", "Scourge", "Vindicator", "Tempest", "Chronomancer", "Firebrand", "Reaper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2728, 3370, 2415, 4455, 1562, 585, 179, 1112, 983, 8106, 275, 310, 0, 3991, 371], [0, 456, 833, 0, 0, 0, 0, 0, 1524, 0, 3445, 17135, 240, 3414, 3317, 2193, 1885], [2281, 0, 2110, 135, 1315, 606, 4664, 983, 456, 0, 2102, 3725, 0, 2434, 9098, 5791, 0, 310, 227, 0, 0, 535], [351, 1517, 269, 6166, 0, 504, 4444, 2655, 585, 3291, 0, 13162, 11970, 0, 310, 2139, 0, 0, 0, 0, 4279], [1891, 0, 3043, 7185, 635, 3295, 962, 217, 304, 2339, 275, 3868, 694, 2709, 297, 3069, 0, 1296, 6319, 99, 947, 467, 3192, 0, 0, 632, 0, 0, 168, 0, 7748, 588, 0, 5235, 0], [1543, 13247, 3133, 0, 0, 8379, 5366, 0, 0, 862, 12114, 280, 329, 6498, 15048, 5474], [1272, 0, 3022, 76, 940, 4299, 213, 86, 1609, 7897, 3200, 3252, 0, 6070, 3096, 701, 2642, 15465, 0, 0, 1046, 10801, 3042, 0, 124, 3192, 3501], [4212, 539, 0, 1080, 7070, 675, 1902, 2836, 9332, 263, 4102, 2640, 27015, 8940, 0, 2039, 3177, 205, 0, 96, 5543, 3244], [2375, 675, 2903, 2010, 2958, 2449, 9552, 3467, 4088, 6623, 1780, 6943, 3042, 0, 27948, 4228, 3039, 356, 4055, 461, 0, 188, 4062, 3114, 1351, 0, 2446, 7050, 1277, 0, 2082, 11890, 940], [383, 0, 6460, 2758, 1358, 3274, 1252, 596, 0, 18758, 513, 4497, 4147, 3546, 3408, 3042, 392, 26473, 12778, 0, 1154, 5249, 1856, 0, 0, 3184, 3142, 0, 6, 4723, 14571, 0, 0, 6461, 6976, 3702], [31352, 43942, 26001, 2526, 0, 43142, 1257, 8202, 1036, 26885, 19806, 0, 13330, 39938, 8088], [958, 0, 13740, 23003, 20998, 34742, 11221, 9793, 8196, 24532, 2348, 8395, 24378, 30434, 3304, 31409, 17512, 94140, 40245, 24542, 28155, 31743, 18193, 0, 173, 26777, 22077, 688, 1337, 5666, 16407, 1729, 3968, 2452, 9858, 2990]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

