created: 20230716213730000
creator: Drevarr
tags: ChartData
title: 202307162137_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Brutal Araden", "Tribal S", "Johosh The Mighty", "Urilstormwalker", "Vampguard", "Grootsmaid", "Alarics Clone", "Scarlet Merc\u00fcry", "Koralia Danai"];
const professions = ["Renegade", "Druid", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.06, 0.7128, 1.1745, 0.0, 0.0, 0.3499, 2.0425, 0.6688, 2.9853, 1.0363, 2.1946, 0.9405, 2.5677, 0.0, 0.6514, 0.0], [0.5676, 0.5418, 1.1172, 1.035, 0.5841, 0.7308, 0.7623, 0.653, 0.4087, 0.378, 2.261, 0.4925, 0.5719, 0.2717, 0.0, 0.8379, 0.6658, 1.417, 0.798, 0.0, 0.3796, 0.6035, 1.4994, 0.4851, 0.5946], [2.3754, 2.7563, 0.1462, 2.5747, 5.8995, 1.3818, 0.0, 2.6781, 1.4641, 0.9563, 0.6054], [3.2508, 1.9684, 3.645, 4.0194, 2.2968, 3.9252, 3.5593, 12.7585, 4.3675, 2.2549, 5.4131, 4.3977], [18.981, 2.4589, 3.8982, 3.8852, 9.7726, 7.8309, 6.9292], [21.5602, 2.916, 2.3448, 5.7266, 2.6001, 8.2246, 0.9988, 5.2531, 12.939, 1.0934, 0.803, 4.5264, 6.862, 6.8884, 2.8106], [3.5838, 9.4996, 2.3674, 9.105, 3.1185, 11.1447, 0.0, 5.5131, 3.9169, 13.6332, 17.119, 0.0, 0.5474, 8.0256, 4.2854, 6.4386, 0.0, 5.8752, 6.1275, 0.0, 4.7158, 5.2808, 3.0164, 0.0, 1.5458], [3.2076, 11.0888, 6.2776, 9.285, 6.1596, 2.8759, 9.0301, 4.4619, 12.6504, 31.7348, 8.0741, 5.768, 7.0224, 4.7027, 13.2961, 0.0, 8.6054, 16.53, 0.9411, 1.8396, 8.0344, 9.1022, 8.912, 7.4697], [5.2602, 18.6018, 8.5519, 5.46, 7.3359, 22.9941, 5.1579, 7.9617, 13.079, 9.576, 43.282, 7.9186, 5.8661, 11.3278, 4.2051, 16.9785, 12.2861, 22.401, 1.447, 1.2994, 7.0914, 12.7184, 5.3361, 6.5184]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

