created: 20230210230955000
creator: Drevarr
modified: 20230705163519014
modifier: drevarr
tags: ChartData
title: 202302102309_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Sumatra Satyricon", "Elonith Tenebris", "Warrior Husky", "Rozaalyna", "Newtype Khan", "Ace Hammers", "Arcanophage Farra", "Smol Gluvs", "Oo Dads Mad", "Seren Nightroad", "Dark Sidiuz", "Kyllarian", "Burnhard Riemann", "Panther B Me", "Jeckyll Mbs", "Fungus", "Kary\u00edna", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Be\u00eb", "Lord Erin The Wise", "Jupi Jupi Jupi", "Kosa\u00edr", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Soulbeast", "Scourge", "Berserker", "Scourge", "Spellbreaker", "Vindicator", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Berserker", "Scourge", "Vindicator", "Berserker", "Berserker", "Scourge", "Weaver", "Dragonhunter", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[321.3784, 283.0303, 288.2714, 702.7174, 118.7969, 0.0], [280.3964, 304.9091, 110.6857, 282.1884, 107.2344, 21.1566, 18.1705, 147.1566, 177.7254, 790.4366], [168.4091, 611.1205, 339.6268, 2158.9437], [1122.2252, 234.2251, 183.25, 234.413, 212.0938, 85.3636, 119.375, 176.2169, 121.2535], [335.5495, 449.8442, 140.1357, 998.058, 186.0312, 0.0], [480.4505, 251.0563, 153.4857, 631.9348, 126.0312, 0.0, 141.3864, 176.0241, 86.1408, 649.3521], [742.3063, 217.4632, 132.7143, 676.8841, 113.3594, 121.2576, 0.0, 74.8072, 121.4366, 378.9859], [466.6937, 316.7489, 156.0286, 708.3768, 59.7188, 0.0, 120.2841, 40.0361, 113.5563, 1117.2535], [690.5586, 415.6753, 208.6, 765.8913, 122.4531, 44.0051, 79.6705, 122.7349, 74.2042, 776.3099], [733.027, 370.9481, 347.8643, 1290.8841, 134.1406, 0.0, 722.1364, 110.7108, 0.0], [635.3063, 390.7056, 347.1857, 909.0072, 192.1406, 0.0, 139.1818, 102.2771, 275.6268, 1506.0141], [1155.8288, 522.5714, 580.7786, 1343.4058, 525.5, 143.0859], [709.2072, 883.5801, 510.9857, 1303.2681, 229.9219, 132.7828, 164.5455, 498.2289, 142.9366, 264.0141], [937.1712, 393.7186, 743.8786, 902.4203, 328.7656, 97.7121, 143.7614, 278.0723, 310.4014, 1971.1831], [951.1081, 702.1688, 570.3714, 1466.3841, 311.9531, 80.6566, 336.4659, 321.3614, 446.169, 939.662], [1424.3153, 551.6667, 710.2929, 1377.9783, 0.0, 102.7626, 566.375, 139.6867, 425.4085, 1550.8592], [1419.3423, 501.9004, 514.4429, 1663.942, 59.4688, 48.8939, 217.0682, 133.0482, 554.493, 2120.4789], [866.3063, 684.6797, 606.7643, 1501.6377, 437.375, 71.7828, 589.7386, 276.6867, 597.9155, 2137.7183], [594.0541, 688.7186, 486.5143, 2130.471, 329.1719, 39.303, 46.7955, 368.1205, 569.1127, 2531.662], [2097.4414, 988.9394, 957.3786, 2708.0797, 332.1562, 66.5354, 179.2841, 168.3735, 0.0], [1334.7477, 908.7446, 807.8571, 1972.2754, 574.0781, 171.4545, 157.3182, 496.3373, 531.2817, 1913.4648], [1422.6216, 905.0866, 1178.4857, 2473.1522, 333.4219, 566.9545, 144.7045, 405.6386, 286.4155], [1658.045, 1998.7662, 566.0429, 1908.2246, 180.4062, 374.6313, 273.0455, 509.6627, 1087.6549, 1912.5352], [2417.1351, 1277.5022, 1828.1071, 3880.3261, 921.7031, 250.5303, 134.8523, 319.0361, 435.4296, 3345.9577], [2305.4144, 1708.5714, 1507.7429, 3690.2101, 765.1875, 372.399, 286.2045, 399.6867, 1274.838, 1897.5493], [2382.1802, 1491.5195, 1366.3714, 5126.8696, 371.5625, 365.8687, 1193.125, 267.4096, 658.7324, 5008.4648]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

