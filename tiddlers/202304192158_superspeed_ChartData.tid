created: 20230419215809000
creator: Drevarr
modified: 20230705163526065
modifier: drevarr
tags: ChartData
title: 202304192158_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Mike The Archmagus", "Tootsie Pop Rocks", "Abigail Ryn", "Newtype Khan", "Miphest\u00f6", "Smol Daddy Tika", "Tegan Parker", "Mac Chiato", "Grasszanine", "My Birthday Girl", "Arcanophage Farra", "Skye Nightroad", "Venomina The Siren", "Zadie Miststep", "Xanvias Einzbern", "Drevarr Moonwillow"];
const professions = ["Berserker", "Weaver", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper", "Tempest", "Tempest", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0.199, 0.56, 0, 0.307, 0, 0, 0, 0, 0, 0, 0.157, 0, 0.592, 0.269, 0.185, 0.351, 0, 0, 0.948, 0], [0, 0, 0.137, 0, 0.34, 0, 0.246, 0.629, 0, 1.876, 0.697, 0, 0.118, 0.251, 0.382, 0.162, 0.326, 0.42, 0.823, 0, 0, 0], [0.379, 0.344, 0.168, 0.229, 0.276, 0.243, 0.772, 0, 0, 0.285, 0, 0.28, 0.157, 0.282, 0.714, 0.097, 0.553, 0.11, 0, 0.228, 0.35], [0, 0, 0.393, 0.333, 0.156, 0.322, 0.356, 0.631, 0, 0, 0.455, 0.419, 0.283, 0.565, 0.357, 0.607, 0.221, 0.344, 0.108, 0, 0.452, 0.351], [0, 0, 0.702, 0.189, 0.77, 0.563, 0.372, 0, 0, 0.846, 0, 0.323, 0.578, 0.373, 0.27, 0.23, 0.668, 0.311, 0, 0.19, 0.474], [0, 0.343, 0.335, 0.113, 0.554, 0.488, 0.631, 0, 0, 0.251, 0.094, 0.63, 0.356, 0.704, 0.341, 0.628, 0.169, 0, 0.455, 0.873], [0, 0.487, 0.561, 0.188, 0.693, 0.205, 0.701, 0, 1.161, 0.422, 0, 0.457, 0, 0.298, 0.501, 0.185, 0.527, 0.731, 1.288, 0, 0.584], [0.189, 0.312, 0.716, 0.157, 0.37, 0.369, 0.416, 0, 0, 0.254, 0.42, 0.392, 0.628, 0.358, 0.643, 0.317, 0.841, 0.317, 0.455, 0.35], [0.376, 0.411, 0.674, 0.221, 0.415, 0.553, 0.421, 0, 0, 0.468, 0, 0.142, 0.658, 0.532, 0.646, 0.306, 0.419, 0.501, 0, 0.903, 0.418], [0, 0, 0.32, 0.561, 0.188, 0, 0.764, 0.559, 0.352, 0.562, 0, 0.313, 0.797, 0.562, 1.077, 0.322, 0.351, 0.359, 0, 0.518, 0.438], [0, 0, 0.611, 0, 0.028, 0.645, 0.827, 0.786, 0, 0, 0.254, 0, 0.111, 1.085, 0.446, 0.526, 0.57, 1.053, 0.412, 0, 1.085, 0.684], [0, 0.328, 1.123, 0.188, 0.615, 0.796, 0.701, 0, 0, 0.949, 0.7, 0.554, 0.406, 0.237, 0.808, 0.185, 0.728, 0.941, 0, 0, 0.516], [0.727, 0.619, 0.839, 0.399, 0.277, 0.121, 0.078, 0, 0.917, 0, 0.329, 0.524, 0.655, 1.193, 0.512, 0.732, 0.96, 1.253, 1.239, 1.275], [0.747, 0.396, 1.008, 0.452, 0.92, 0.154, 0.838, 0, 0.572, 0.752, 0.471, 0.601, 0.491, 0.807, 0.653, 0.21, 0.826, 1.237, 0.792, 0.662], [0.567, 0.59, 1.008, 0.507, 0.554, 0.646, 0.841, 0, 0, 0.761, 0.837, 0.376, 0.554, 0.489, 0.836, 0.597, 0.632, 0.589, 0, 0.878, 0.74], [0, 1.256, 0.868, 1.121, 0.58, 0.924, 1.009, 1.076, 0, 1.201, 0, 0.308, 1.228, 0.892, 1.079, 0.843, 1.015, 1.225, 2.601, 0.995, 1.098], [2.163, 2.209, 1.336, 1.648, 1.356, 1.847, 1.694, 1.392, 0.212, 0.112, 1.901, 0.928, 1.269, 1.826, 0.979, 2.344, 1.559, 1.061, 1.647, 1.249, 1.779, 2.114]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

