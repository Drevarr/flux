created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Absern", "Jimbo The Pleb", "Mmathuss", "N\u00e8yp\u00e4", "Sakis Unleashed", "Absern", "Chocolate Teapot", "Explorer Theodora", "Sister Seraphena", "Alarics Clone", "Eloraaaaaaaaa", "Gamora Titus", "Charr Surethang", "Tribal S", "Bella Sassy"];
const professions = ["Scrapper", "Dragonhunter", "Berserker", "Firebrand", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Druid", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5, 0.0, 0.0, 0.0, 0.0, 7.6266, 0.0, 0.0, 5.0753, 2.5453, 2.5456, 1.1172, 0.0, 2.5536, 0.0, 2.5431, 0.0, 0.0, 0.0, 16.0788, 0.0, 2.5613, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.5238, 7.4947, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4898, 0.0, 0.0, 0.0, 0.0, 2.5185, 0.0, 0.0, 2.4948, 2.4769, 0.0, 0.0, 0.0, 2.565, 2.5583, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [5.7288, 21.369, 4.5112, 4.7135, 2.3004, 1.1471, 3.8318, 5.7701, 4.6368, 9.1978, 4.5372, 4.5414, 0.0, 0.0, 4.6155, 9.2115, 4.7282, 0.0, 0.0], [7.259, 0.0, 26.9192, 14.6906, 24.609, 19.4672, 11.993, 0.0, 0.0, 7.2808, 2.448, 13.1981], [0.0, 14.837, 15.7509, 30.57, 0.0, 3.8685, 36.5104, 12.3471, 21.964], [0.0, 0.0, 14.6888, 0.0, 6.446, 0.0, 0.0, 0.0, 0.0, 20.5216, 0.0, 0.0, 0.0, 0.0, 0.0, 6.3333, 0.0, 0.0, 17.4944, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 13.1565, 8.997, 15.8749, 0.0, 4.6452, 0.0, 0.0, 0.0, 18.7874, 0.0, 34.1875, 0.0, 14.2229, 3.1283, 0.0], [0.0, 0.0, 35.8568, 0.0, 0.0, 0.0, 28.6211, 64.6609, 0.0, 0.0, 64.6736, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [7.6349, 24.1338, 20.9962, 38.2838, 21.4861, 16.2792, 3.7485, 13.464, 16.8749, 18.361, 5.445, 20.34, 23.3094, 0.0], [13.3164, 15.9829, 11.22, 18.0267, 13.026, 5.5303, 9.3225, 5.6619, 14.8512, 7.5492, 13.1384, 8.5523, 5.1792, 11.3344, 0.0, 6.9124, 6.7239, 13.3773, 7.8091, 8.3008, 6.7089, 11.6377, 5.0274, 7.0909, 5.9977, 4.9665, 44.2406, 0.0, 23.7258, 7.7813, 31.2178, 7.0444, 22.491, 14.4357, 6.3432, 0.0, 28.6805, 7.242, 15.5208, 7.8478, 25.3648, 23.1165], [9.405, 5.115, 0.0, 11.1265, 0.0, 22.264, 0.0, 5.3213, 1.5814, 4.8812, 15.9727, 7.1053, 7.14, 27.7046, 6.6825, 13.4013, 5.8995, 7.1359, 14.19, 11.2385, 84.9914, 28.2534, 6.6259, 48.0715, 6.9817, 28.5327, 6.9833, 13.7808, 29.5837, 51.3867, 14.2545, 30.1507, 17.7839, 19.8403, 19.0707, 33.8328], [6.1169, 6.786, 23.8966, 23.9494, 25.7475, 105.1286, 30.38, 118.415, 22.1514, 21.6144, 15.7743, 12.6072, 0.0, 15.9509, 17.5265, 51.6891, 31.806, 6.3501, 13.6514, 6.3563, 6.2169, 35.5368, 14.7744, 6.2964, 14.322, 14.6217, 0.0, 6.2169], [10.1798, 12.7062, 4.8048, 7.141, 6.7013, 80.8214, 7.2352, 28.4274, 7.5398, 20.0488, 9.9603, 19.8968, 7.1438, 6.6396, 12.8531, 21.7836, 17.8556, 13.3347, 10.6743, 18.1597, 6.4239, 13.2194, 7.7982, 0.0, 6.6249, 24.1773, 6.6522, 13.1175, 39.8694, 24.9194, 6.6434, 6.5832, 7.3954, 5.0544, 21.2858, 161.4618], [63.2925, 73.9636, 99.1133, 16.9386, 48.2196, 44.0836, 23.3626, 21.9978, 297.5028], [4.9425, 129.2333, 11.4352, 50.8205, 0.0, 12.388, 16.4832, 0.0, 6.4574, 4.9427, 10.0122, 19.4076, 9.7706, 6.4922, 3.3051, 29.5443, 1.6131, 1.5984, 28.9274, 12.8559, 0.0, 0.0, 5.1816, 30.6419, 0.0, 18.9787, 22.721, 6.4534, 19.4583, 6.4428, 5.7457, 19.4223, 250.1367], [0.0, 21.4774, 16.225, 0.0, 0.0, 18.0758, 29.9612, 0.0, 3.9824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.6195, 11.5838, 96.1485, 38.8136, 56.3011, 29.5434, 84.8464, 0.0, 0.0, 49.9858, 0.0, 0.0, 0.0, 0.0, 28.6552, 31.9605, 0.0, 0.0, 9.8952, 0.0, 35.4138, 0.0, 0.0, 0.0, 35.7805, 0.0, 44.1675, 21.6572, 34.3037, 14.0359, 0.0, 15.9964, 3.8797, 0.0, 65.7366], [37.4998, 18.84, 12.056, 18.1926, 53.826, 4.51, 0.0, 32.9154, 6.4186, 46.816, 30.2496, 15.7136, 17.7363, 30.4704, 25.1193, 24.737, 27.8256, 31.0461, 38.8763, 24.5813, 0.0, 24.6758, 0.0, 24.7968, 0.0, 33.3384, 80.1405, 0.0, 31.3698, 26.1814, 30.9888, 18.4842, 68.0418, 24.8498, 24.8611, 24.7755, 43.9568, 10.8288, 0.0], [5.3243, 51.9522, 57.9686, 54.8787, 55.8228, 68.1498, 38.6032, 75.3957, 6.204, 22.3492, 45.815, 7.9295, 82.8051, 20.3789, 90.8656, 5.8694, 62.1663, 39.8038, 9.756, 61.1226, 115.1639, 62.3475, 36.7349, 8.815, 57.2501, 56.2947, 48.8511, 1.962]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

