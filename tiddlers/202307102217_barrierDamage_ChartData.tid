created: 20230710221759000
creator: Drevarr
tags: ChartData
title: 202307102217_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Il Kurai Il", "Irin The Undeath", "Amitiels Revenge", "Be\u00eb", "Cyclotechnist Farra", "Daphne Agla\u00e9", "Mister Jekyll"];
const professions = ["Scourge", "Scourge", "Scourge", "Reaper", "Scourge", "Scrapper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16966, 6969, 0, 0, 1268, 0, 4661, 7284, 0, 5359, 0, 0, 0, 12291, 6371, 8566, 5242, 4645, 0, 2917, 5984, 6537, 0, 6102], [24037, 0, 0, 0, 5982, 0, 3984, 10576, 0, 6645, 3886, 306, 0, 18015, 8795, 13552, 6236, 3466, 5032, 6284, 0, 11209], [35051, 11, 0, 3259, 13426, 0, 3986, 18327, 0, 3604, 5928, 2226, 3465, 25363, 3435, 10034, 7800, 5911, 2789, 5890, 6036, 0, 10999], [207717, 1634], [23490, 367, 754, 0, 21009, 0, 10030, 28913, 0, 11845, 4533, 401, 0, 39975, 14155, 24077, 10273, 17108, 9943, 5747, 11229, 16436, 25784], [33219, 0, 387, 28548, 0, 8103, 55250, 2080, 13645, 7765, 490, 1344, 52710, 12401, 22848, 19105, 25533, 8114, 6018, 6938, 28221, 28680], [123938, 1149, 2297, 59268, 681, 10970, 435, 2804, 19552, 17526, 2362, 0, 115698, 27472, 28698, 18453, 1740, 2731, 6299, 27983, 35449], [148497, 0, 0, 602, 92150, 236, 14950, 73901, 5910, 34366, 19752, 510, 0, 126182, 20016, 64233, 7839, 25966, 1139, 16055, 11842, 63770, 58693]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

