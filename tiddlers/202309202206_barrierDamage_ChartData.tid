created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Raelyn Sunray", "Lord Erin The Wise", "Jimbo The Pleb", "Mellody Moon", "Lowella Slytherin", "Leafzel", "Vinetacle", "Etchery Howls", "N\u00edcki M\u00edraj", "Necrotic Windrunner", "Ateriuz", "Dark Sidiuz", "Mort\u00e4rion", "Lord Erin The Wise", "Grasszanine", "Aira Draugr", "Tootsie Pop Rocks", "Xanvias Einzbern", "Cat Wigglebooty", "Arriasa", "Eibh\u00ebar", "Tegan Parker", "Daphne Agla\u00e9", "Cedryn X", "Vangar Deathclaw", "Mistwalker Cael", "Belvyn Brightblade", "Alhana Lafay", "Meme Soulmessor", "Bella Sassy", "Sister Elon\u00edth", "Jmbrage Rev", "Oo Dads Mad", "Black Raspberry Pie", "Glorious Gluvs", "Koralia Danai", "Klengah", "Primal Clone", "Arcanophage Farra", "Mike The Archmagus", "Solus Luxes", "Kurn The Drunk", "Morton Saltbringer", "Rina Of Theros", "Sub Train", "Ryvalia Fazebringer", "Zaedy Zae", "Drevarr Moonwillow", "Venomina", "Be\u00eb"];
const professions = ["Firebrand", "Weaver", "Berserker", "Dragonhunter", "Scourge", "Firebrand", "Scrapper", "Druid", "Chronomancer", "Reaper", "Berserker", "Reaper", "Scrapper", "Tempest", "Spellbreaker", "Herald", "Scrapper", "Berserker", "Scrapper", "Druid", "Chronomancer", "Tempest", "Reaper", "Berserker", "Harbinger", "Herald", "Firebrand", "Reaper", "Reaper", "Firebrand", "Firebrand", "Vindicator", "Berserker", "Chronomancer", "Berserker", "Firebrand", "Druid", "Chronomancer", "Spellbreaker", "Weaver", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Firebrand", "Chronomancer", "Druid", "Scrapper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1689, 4019, 1287, 0, 3287, 140, 0, 3617], [14807], [3139, 0, 0, 0, 887, 5734, 1751, 3709, 0], [9356, 0, 3018, 642, 911, 0, 2960], [9088, 0, 1798, 356, 5662, 0], [4516, 644, 0, 5436, 304, 0, 0, 0, 1285, 642, 0, 590, 838, 3225, 555], [4657, 6296, 8104], [1968, 0, 0, 3862, 0, 5115, 0, 4854, 2953, 1223, 0], [15264, 0, 2638, 274, 1284, 3086, 0, 0, 0, 541, 0, 0], [993, 0, 269, 3377, 642, 0, 131, 0, 3617, 9067, 5435], [8250, 3026, 4261, 5414, 3597], [7885, 0, 0, 0, 0, 0, 306, 12634, 0, 7023], [12373, 24296], [7116, 3152, 3794, 9014, 3149, 2468, 0, 0, 99, 0, 592, 8288], [4495, 3915, 0, 2708, 6419, 3377, 4189, 3731, 3332, 3366, 0, 5185], [4867, 0, 586, 1551, 6574, 4451, 22796, 0], [26886, 692, 1359, 4302, 317, 2070, 3378, 568, 3396, 0, 389, 283, 269, 44, 813], [4789, 820, 0, 614, 545, 0, 4317, 1170, 9024, 7415, 0, 5917, 0, 3378, 2955, 5217], [22314, 0, 227, 1389, 1722, 1842, 13174, 1618, 3501, 513, 528, 1218], [0, 2917, 965, 12831, 10357, 9157, 3530, 541, 2949, 2935, 3566], [6862, 6063, 0, 4389, 14352, 3533, 4758, 0, 3255, 2949, 0, 3388, 3439], [2697, 2002, 0, 13641, 5193, 15191, 0, 3547, 6225, 2798, 455, 5748], [20456, 0, 3152, 3161, 3986, 4311, 12790, 2490, 0, 8, 114, 0, 2606, 6926], [22936, 0, 0, 3152, 3458, 13848, 3306, 2870, 0, 269, 226, 2920, 2916, 4711], [0, 32842, 15978, 12115], [2638, 0, 715, 1285, 5870, 0, 9265, 14771, 8207, 4107, 0, 6020, 0, 5384, 2984, 3012], [36453, 644, 1211, 6064, 2867, 0, 4152, 11097, 2999], [29773, 3660, 3143, 0, 3499, 16281, 2998, 3480, 0, 2702], [14134, 0, 644, 6202, 2509, 8043, 21908, 4934, 9667], [4087, 6268, 0, 7398, 21797, 3338, 7057, 3254, 2948, 2511, 3161, 7212], [3263, 3658, 0, 6656, 14265, 4508, 9723, 0, 6285, 3239, 6361, 6831, 8434], [35382, 1060, 3871, 6119, 5531, 7335, 6951, 2476, 5958], [43533, 0, 4491, 9130, 0, 4120, 6638, 3222, 3934, 0, 3361], [56979, 1746, 2895, 0, 23, 0, 3480, 7980, 642, 1484, 0, 0, 1083, 3785, 2504, 0], [14617, 0, 0, 3229, 3720, 0, 5701, 7879, 6308, 6845, 0, 6544, 3093, 9741, 8106, 9400], [36386, 2718, 1435, 3593, 1999, 0, 5750, 11981, 9195, 3923, 2699, 0, 6131, 1894, 2596], [37795, 0, 1918, 2693, 3245, 0, 1464, 16461, 5366, 7908, 0, 2627, 7204, 269, 1876, 7456], [41258, 0, 7099, 1914, 276, 5238, 14401, 6118, 4269, 0, 3089, 5881, 3219, 2946, 4924], [24879, 137, 6340, 2860, 6657, 3721, 2812, 20319, 8661, 11410, 1890, 0, 2801, 6504, 2949], [33331, 2575, 485, 0, 6450, 0, 1335, 23735, 5919, 6908, 0, 854, 9167, 3222, 3073, 6168], [48464, 865, 0, 5797, 3590, 0, 6208, 8766, 5576, 5214, 0, 3036, 5012, 2295, 2501, 8707], [7819, 0, 1882, 0, 869, 181, 1309, 1013, 0, 32, 41240, 16864, 36929, 0], [55212, 2798, 0, 1140, 2354, 0, 3532, 11221, 5176, 8954, 0, 5762, 10341, 0, 903, 3993], [23581, 0, 3008, 3154, 0, 2698, 16298, 4782, 11537, 0, 430, 6146, 8851, 26536, 6681], [45958, 644, 807, 6277, 3856, 0, 371, 23662, 8279, 9530, 0, 247, 7767, 2953, 3121, 5346], [35795, 1855, 1223, 4243, 3624, 0, 7794, 23499, 5809, 10938, 590, 3525, 6382, 3226, 3742, 8471], [46043, 253, 1352, 7113, 4862, 3229, 20454, 3224, 8180, 3692, 0, 6292, 6877, 9489], [54844, 827, 1236, 5634, 3300, 0, 6998, 21918, 4834, 11791, 0, 4887, 3053, 9774, 7669, 6953], [51046, 130, 1367, 3210, 6000, 7150, 7442, 8067, 6919, 0, 3685, 8999, 33709, 21499, 281], [52981, 5173, 644, 5373, 2935, 1492, 12491, 5376, 9438, 0, 3069, 19033, 57482, 26797, 8033]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

