created: 20230701000406000
creator: Drevarr
modified: 20230705163539993
modifier: drevarr
tags: ChartData
title: 202307010004_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Sister Elonith", "Ima Lou", "Sumatra Satyricon", "Oo Dads Mad", "Lord Erin The Wise", "Fluffy No Care Bear", "Vhalloe", "Xyntharos", "K\u00f4sair", "Brad Bellick", "Blancooo Padreee", "High Sorcer Baradun", "Dingle Mcbingle", "Drumina", "Latedoctor", "Air One Com", "Mike The Archmagus", "Broken Cheese", "Gavann", "Demon Staph", "Duke Silvver", "Melli Dragonswrath", "Klengah", "Sakis Ranger", "Ak\u00e1nt\u00f3r", "Koralia Danai", "Primal Clone", "Gestern Yesteryear", "Xanvias Einzbern", "Tribal S", "Mmathuss", "Aronorf Xideliesi", "Smol Daddy Tika", "Solus Sanctus", "Be\u00eb", "Morton Saltbringer", "Kary\u00edna", "Bella Sassy", "Arcanophage Farra", "Ryvalia Fazebringer", "Smol Gluvs", "Drevarr Moonwillow", "Arriasa", "Gamora Titus", "Johosh The Mighty", "Morv\u00e4rth", "Tegan Parker", "Newtype Khan", "Lucky Leipreach\u00e1n", "Zayde Sunsabre"];
const professions = ["Berserker", "Druid", "Soulbeast", "Spellbreaker", "Weaver", "Berserker", "Druid", "Vindicator", "Berserker", "Scrapper", "Berserker", "Tempest", "Firebrand", "Druid", "Reaper", "Firebrand", "Weaver", "Chronomancer", "Firebrand", "Druid", "Vindicator", "Berserker", "Druid", "Druid", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Druid", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Scourge", "Chronomancer", "Vindicator", "Firebrand", "Spellbreaker", "Chronomancer", "Reaper", "Scrapper", "Druid", "Firebrand", "Berserker", "Reaper", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2222, 0.4362, 0.56, 0.49, 0.4242, 0.0, 0.5495, 0.1496, 0.3679], [0.541, 0.4754, 0.3333, 0.5625, 0.7717, 0.16, 0.198, 0.2698, 0.98, 0.6667, 0.5067, 0.72], [0.4262, 0.3934, 0.3718, 0.4375, 0.5, 0.2, 0.1287, 0.2063, 0.44, 0.2353, 0.296, 0.4533, 0.4865, 0.5, 0.1489, 0.03, 0.28, 0.1515, 0.0, 0.2088, 0.1111], [0.8033, 0.5574, 0.3974, 0.9062, 0.663, 0.62, 0.2376, 0.4921, 0.6, 0.9216, 0.2332, 0.4533, 0.1081], [0.4426, 0.5246, 0.359, 0.5833, 0.2935, 0.32, 0.0495, 0.254, 0.52, 0.2353, 0.0987, 0.52, 0.3378, 0.2083, 0.5532, 0.22, 0.26, 0.3333, 0.0, 0.2967, 0.2564], [0.5, 0.25, 0.5319, 0.54, 0.52, 0.5758, 0.0, 0.6044, 0.3632, 0.3827], [0.2332, 0.6533, 0.7027, 0.5278, 0.8404, 0.19, 0.5, 0.697, 0.0, 0.2527, 0.2735, 0.2389], [0.5738, 0.4426, 0.4872, 0.4167, 0.5326, 0.1, 0.1881, 0.3333, 0.8, 0.5294, 0.296, 0.6133, 0.4189, 0.2778, 0.7234, 0.37, 0.14, 0.5], [0.66, 0.9804, 0.3677, 0.64, 0.4189, 0.3472, 0.5319, 0.51, 0.53, 0.5758, 0.0, 0.4615, 0.2137, 0.1649], [0.541, 0.7213, 0.4103, 0.8333, 0.5978, 0.52, 0.2277, 0.4286, 0.84, 0.5098, 0.4126, 0.6267, 0.4054, 0.1667, 0.4681, 0.8636], [0.4098, 0.4426, 0.4231, 0.5729, 0.5761, 0.12, 0.2376, 0.3492, 0.5, 0.451, 0.2915, 0.7067, 0.1351, 0.3472, 0.6915, 0.32, 0.23, 0.3788, 0.0, 0.2637, 0.0598, 0.1121], [1.3443, 0.9344, 0.3077, 0.8854, 0.5652, 0.06, 0.3564, 0.6508, 1.4, 0.6667, 0.5336, 1.1333], [0.6026, 0.4479, 0.3804, 0.278, 0.7067, 0.7162, 0.3194, 0.7128, 0.23, 0.53, 0.6212, 0.2308, 0.1068, 0.3002], [0.4574, 0.7867, 0.9189, 0.4583, 0.7553, 0.49, 0.62, 0.7273, 0.3187, 0.3761, 0.1945], [0.84, 0.6892, 0.5278, 0.9043, 0.29, 0.3, 1.0606, 0.0, 0.4725, 0.4188, 0.4123], [0.4754, 0.5902, 0.2949, 0.6667, 0.5543, 0.1, 0.1584, 0.381, 0.44, 0.8235, 0.3453, 0.8133, 0.473, 0.2639, 0.3085, 0.17, 0.53, 0.303, 0.0, 0.1538, 0.1624, 0.1966], [0.6393, 0.5738, 0.6026, 0.6667, 0.5, 0.3, 0.2079, 0.4444, 0.64, 0.5098, 0.5247, 0.84, 0.3649, 0.4722, 0.7979, 0.51, 0.38, 0.4091], [0.7541, 0.5246, 0.7308, 0.625, 0.4239, 0.18, 0.1683, 0.5079, 0.8, 0.4902, 0.5247, 0.3333, 0.2766, 0.84, 0.47, 0.5152, 0.0, 0.1538, 0.3761, 0.0169], [0.62, 0.2772, 0.3333, 0.96, 0.6863, 0.4081, 0.96, 0.7162, 0.0139, 0.7979, 0.0, 0.43, 0.1364, 0.3626, 0.4231, 0.3446], [0.9672, 0.7869, 0.5897, 0.7917, 0.7391, 0.1, 0.0792, 0.4603, 0.8, 0.6863, 0.5605, 0.4933, 0.2973, 0.4306, 0.6064, 0.21, 0.76, 0.8788], [0.3607, 0.6066, 0.5641, 0.7292, 0.5, 0.48, 0.2574, 0.2381, 0.98, 1.098, 0.287, 0.3467, 0.5676, 0.3194, 0.9787, 0.14, 0.71, 0.4545, 0.0, 0.2778, 0.0994], [0.5082, 0.9672, 0.7051, 0.3438, 0.4565, 0.22, 0.1584, 0.6032, 0.74, 0.5098, 0.4395, 0.7333, 0.2838, 0.5, 0.6809, 0.5, 0.35, 0.4545, 0.0, 0.3956, 0.2949, 0.1797], [0.5082, 0.8361, 0.5513, 0.4583, 0.4783, 0.22, 0.2277, 0.4444, 1.08, 0.8235, 0.4529, 0.8933, 0.3243, 0.4167, 0.8298, 0.36, 0.48, 0.6667, 0.0, 0.1758, 0.3162, 0.1121], [0.7705, 0.7869, 0.5513, 0.5208, 0.6522, 0.3, 0.2277, 0.8413, 0.9, 0.3333, 0.5381, 0.6533, 0.5, 0.4028, 0.7128, 0.1, 0.29, 0.6061, 0.0, 0.2747, 0.2051, 0.1945], [0.8525, 0.5738, 0.8718, 0.5521, 0.3804, 0.22, 0.1584, 0.1905, 0.68, 0.7255, 0.4305, 0.6267, 0.4054, 0.3056, 1.0213, 0.43, 0.65, 0.6364, 0.0, 0.1868, 0.3718, 0.2072], [0.8033, 0.7377, 0.6154, 1.0417, 0.6087, 0.62, 0.0891, 0.4127, 0.76, 0.7059, 0.5112, 0.64, 0.6216, 0.3194, 0.9787, 0.14, 0.57, 0.7576, 0.0, 0.1319, 0.1496, 0.1628], [0.7213, 0.3279, 0.3077, 0.8021, 0.5326, 0.0, 0.3366, 0.4286, 0.86, 0.4902, 0.5247, 0.9067, 0.5405, 0.4306, 0.7234, 0.43, 0.43, 0.8788, 0.0, 0.2418, 0.2692, 0.2981], [0.623, 0.7705, 0.6538, 0.7604, 0.5543, 0.24, 0.1485, 0.3333, 0.7, 0.8039, 0.5022, 0.6933, 0.6216, 0.5278, 0.734, 0.24, 0.68, 0.8485, 0.0, 0.3297, 0.1496, 0.277], [0.8033, 0.7705, 0.2949, 0.75, 0.5109, 0.22, 0.1584, 0.4127, 0.82, 0.9216, 0.4529, 0.6, 0.5946, 0.3333, 0.6809, 0.64, 0.66, 0.697, 0.0, 0.2527, 0.2692, 0.2706], [0.5902, 0.8197, 0.5385, 0.6875, 0.4565, 0.2, 0.099, 0.3492, 0.78, 0.9608, 0.5247, 0.6267, 0.6486, 0.375, 0.7234, 0.41, 0.84, 0.7273, 0.0625, 0.3956, 0.2436, 0.2896], [1.0164, 1.0984, 0.4487, 0.625, 0.6087, 0.08, 0.1188, 0.4127, 0.7, 0.5882, 0.5112, 0.88, 0.5405, 0.3056, 0.7979, 0.18, 0.66, 0.6212, 0.0, 0.4286, 0.3205, 0.3002], [0.9508, 0.4262, 0.6026, 0.6458, 0.6739, 0.18, 0.2475, 0.4762, 0.68, 0.6471, 0.4215, 0.5733, 0.4324, 0.3056, 0.7021, 0.34, 0.58, 0.7576, 0.6044, 0.3248, 0.3679], [0.4918, 0.359, 0.8021, 0.4457, 0.2, 0.1782, 0.6508, 1.02, 0.7451, 0.4709, 0.6, 0.7568, 0.4583, 0.5319, 0.41, 0.96, 0.6364, 0.0625, 0.2527, 0.3419, 0.3869], [0.623, 0.5902, 1.0385, 0.6562, 0.4348, 0.58, 0.1386, 0.4127, 0.82, 0.7451, 0.4753, 0.8, 0.473, 0.375, 0.5213, 0.44, 0.67, 0.9091, 0.0, 0.3407, 0.3462, 0.2833], [0.3279, 0.5513, 0.8021, 0.5978, 0.16, 0.2574, 0.5714, 1.06, 0.8824, 0.5336, 0.8933, 0.4459, 0.3472, 0.6809, 0.48, 0.6, 0.8333, 0.0312, 0.4286, 0.359, 0.3087], [0.7705, 0.8033, 0.8974, 0.7917, 0.5109, 0.22, 0.1782, 0.4762, 0.78, 0.9608, 0.4126, 0.527, 0.3472, 0.617, 0.5, 0.57, 1.0606, 0.0, 0.2198, 0.3803, 0.3721], [0.6721, 0.7049, 0.3077, 0.5938, 0.7065, 0.34, 0.1485, 0.3651, 0.88, 0.8627, 0.4395, 0.7333, 0.7838, 0.5278, 0.7021, 0.31, 0.44, 0.803, 0.0, 0.5165, 0.2607, 0.4609], [1.0984, 0.7049, 0.6282, 0.7917, 0.6739, 0.4, 0.2277, 0.3333, 1.04, 0.7059, 0.5516, 0.9867, 0.2838, 0.3333, 0.9149, 0.49, 0.63, 0.6515, 0.0, 0.3407, 0.2906, 0.241], [0.7541, 1.1148, 0.5897, 0.4792, 0.6304, 0.42, 0.297, 0.5714, 1.2, 0.8235, 0.1121, 0.88, 1.0541, 0.6944, 0.5851, 0.84, 0.95, 1.1364, 0.5275, 0.4188, 0.0465], [0.7869, 0.7541, 1.0385, 1.0104, 0.5761, 0.38, 0.1584, 0.5873, 0.76, 0.9216, 0.4798, 0.6133, 0.3378, 0.3333, 0.3936, 0.38, 0.81, 0.9394, 0.0, 0.4615, 0.359, 0.3171], [0.7377, 0.9344, 0.7949, 0.7917, 0.5326, 0.46, 0.2079, 0.5714, 0.96, 0.5686, 0.5112, 0.7733, 0.5541, 0.4583, 0.4787, 0.22, 0.56, 0.6818, 0.0625, 0.6154, 0.3803, 0.3784], [0.8361, 0.6066, 0.8974, 0.8229, 0.4891, 0.32, 0.2079, 0.254, 1.06, 0.8039, 0.5247, 0.84, 0.3378, 0.5139, 1.0426, 0.36, 0.68, 0.7576, 0.0, 0.3956, 0.3291, 0.3404], [0.9016, 1.0328, 0.2949, 1.0625, 0.8804, 0.5, 0.1188, 0.3492, 0.84, 0.9608, 0.4888, 0.7467, 0.6351, 0.3194, 0.8936, 0.32, 0.59, 1.0606, 0.0312, 0.1429, 0.3761, 0.3002], [0.9487, 0.9688, 0.3804, 0.3, 0.3465, 0.381, 1.06, 0.8039, 0.5112, 1.04, 0.7027, 0.3889, 0.9255, 0.49, 0.8, 0.6515, 0.0, 0.5385, 0.3376, 0.3953], [0.7049, 0.6393, 0.7051, 0.5625, 0.587, 0.26, 0.2574, 0.4286, 0.84, 0.6863, 0.5157, 0.7467, 0.4459, 0.3056, 0.9255, 0.47, 0.57, 0.8333, 0.0, 0.6703, 0.4573, 0.408], [0.5574, 1.0, 0.6282, 0.7604, 0.5, 0.54, 0.3762, 0.5079, 1.24, 0.7843, 0.4484, 0.6667, 0.4595, 0.5556, 0.7872, 0.6, 0.62, 1.0152, 0.0, 0.3846, 0.1581, 0.4567], [1.1311, 0.8361, 0.9359, 0.6458, 0.7174, 0.48, 0.2376, 0.4762, 1.04, 0.8235, 0.5561, 1.0133, 0.6757, 0.4583, 0.5106, 0.34, 0.3, 1.3333, 0.0, 0.2418, 0.3632, 0.3763], [0.9344, 0.7869, 0.5769, 0.6979, 0.3261, 0.5, 0.2277, 0.3651, 1.14, 1.1373, 0.6143, 1.0133, 0.7703, 0.5833, 0.766, 0.99, 0.78, 0.4697, 0.0625, 0.3297, 0.3205, 0.2918], [0.7541, 0.8033, 0.8333, 0.7604, 0.6957, 0.32, 0.1584, 0.6349, 1.02, 1.1765, 0.3901, 0.88, 0.7838, 0.4444, 0.266, 0.76, 0.64, 0.7879, 0.5604, 0.4573, 0.3636], [0.7213, 0.459, 0.4744, 0.6979, 1.0761, 0.68, 0.495, 0.6667, 1.04, 0.9412, 0.6861, 0.7333, 0.8378, 0.1806, 0.5319, 0.46, 0.43, 0.9545, 0.0938, 0.5604, 0.3803, 0.4757]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

