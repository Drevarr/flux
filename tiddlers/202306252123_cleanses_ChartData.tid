created: 20230625212343000
creator: Drevarr
modified: 20230705163535652
modifier: drevarr
tags: ChartData
title: 202306252123_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Yummy Kiwi", "Newtype Khan", "Aronorf Xideliesi", "Grasszanine", "Enter Effore", "Crusader Siolith", "Miphest\u00f6", "Ildemir Fares", "Black Raspberry Pie", "Eibh\u00ebar", "Morton Saltbringer", "Rahani Sunray", "Primal Clone", "Fribble Bibble", "Seiker Novus Terra", "Venomina The Siren", "Tegan Parker", "Sakis Ranger", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0315, 0.0459, 0.26, 0.2714, 0.2718, 0.6364, 0.25, 0.0746, 0.1781, 0.0, 0.3377, 0.0417, 0.3684, 0.1295, 0.1474, 0.0, 0.0928, 0.3061, 0.0233, 0.1524, 0.253, 0.2625, 0.434, 0.1973], [0.0, 0.0105, 0.0, 0.3, 0.3857, 0.3883, 0.1818, 0.3611, 0.2388, 0.0, 0.2329, 0.0, 0.2857, 0.2188, 0.2632, 0.3165, 0.2105, 0.0, 0.0928, 0.2245, 0.062, 0.381, 0.241, 0.3875, 0.0, 0.1429], [0.0051, 0.0455, 0.1651, 0.33, 0.5857, 0.4466, 0.4909, 0.3125, 0.2388, 0.411, 0.1333, 0.1299, 0.2083, 0.3026, 0.1511, 0.2842, 0.0, 0.2474, 0.3265, 0.0233, 0.2571, 0.3735, 0.35, 0.5094, 0.2517], [0.0154, 0.0559, 0.0275, 0.29, 0.4286, 0.699, 0.4909, 0.3264, 0.3881, 0.069, 0.4384, 0.0, 0.1688, 0.125, 0.1579, 0.1367, 0.3368, 0.0, 0.2268, 0.6122, 0.0853, 0.0476, 0.3133, 0.6062, 0.0, 0.2517], [0.6575, 0.1889, 0.6364, 0.2812, 0.5658, 0.295, 0.3579, 0.0, 0.4021, 0.2041, 0.2093, 0.5238, 0.6747, 0.3688, 1.0755, 0.483], [0.0, 0.035, 0.1835, 0.24, 0.3286, 0.4078, 0.0, 0.375, 0.4925, 0.0, 0.274, 0.2222, 0.2597, 0.2083, 0.6711, 0.1583, 0.3263, 0.0, 0.2577, 0.5204, 0.1163, 0.1429, 0.4578, 0.875, 1.0755, 0.3537], [0.0564, 0.3042, 0.2018, 0.0, 0.6727, 0.7222, 0.6567, 0.6986, 0.0, 0.4416, 0.6146, 0.6974, 0.5827, 0.5474, 0.2286, 0.7732, 0.5714, 0.1085, 0.6], [1.4337, 2.8687, 2.7358, 1.6327], [1.068, 0.1455, 1.0, 0.8507, 0.0, 0.6986, 0.2556, 0.5455, 0.625, 0.8816, 0.6691, 0.6632, 0.0, 0.3505, 0.6429, 0.186, 0.5714, 0.5904, 0.4875, 0.5283, 0.3741], [1.0448, 0.9589, 0.4667, 0.6234, 0.7292, 1.5658, 0.2662, 0.7053, 0.0286, 0.7835, 0.9184, 0.3023, 0.5619, 0.6386, 0.8625, 1.1132, 0.5782], [0.041, 0.1119, 0.3945, 0.53, 0.9571, 1.0485, 0.6, 0.8819, 0.3134, 0.0, 1.0959, 0.2208, 0.0, 0.9868, 0.3165, 0.4632, 0.0, 0.299, 0.8061, 0.1163, 0.5143, 0.2289, 0.8125, 0.4717, 0.3537], [0.0, 0.0734, 0.2752, 1.05, 1.5857, 1.1748, 1.1455, 1.0, 0.4478, 1.2603, 0.2667, 0.2987, 0.3333, 1.0395, 0.3741, 0.7474, 0.1143, 0.4639, 0.449, 0.1163, 0.5429, 0.3614, 0.3688, 0.6226, 0.3469], [0.1026, 0.1259, 0.2752, 0.79, 0.9429, 1.3592, 0.6909, 0.8472, 1.2836, 0.0, 0.9726, 0.3667, 0.3506, 0.5833, 0.8816, 0.3669, 0.8842, 0.4, 0.4948, 0.7347, 0.3643, 0.5429, 0.7831, 1.0063, 1.7358, 0.3605], [0.2462, 0.472, 0.6055, 0.91, 1.6714, 1.8155, 1.3636, 0.1458, 1.4328, 0.0, 1.0411, 0.3333, 0.4026, 0.4896, 1.3158, 1.3022, 1.1474, 0.3143, 0.866, 1.3878, 0.4884, 0.8571, 1.2892, 0.325, 1.3396, 1.1088], [0.1744, 0.3566, 0.8624, 1.03, 2.1, 0.6408, 1.4, 1.4167, 1.9254, 2.3425, 0.4111, 0.6623, 1.1042, 2.3684, 1.1223, 1.7158, 0.3714, 2.0825, 1.6939], [0.0359, 0.2517, 0.7248, 1.32, 2.0286, 2.5437, 2.1636, 1.5833, 1.6567, 2.3014, 0.4111, 0.4286, 1.0417, 1.5658, 1.0144, 1.3789, 0.1714, 1.2165, 1.1429, 0.3333, 1.4, 1.6145, 2.0562, 1.6604, 1.4082], [0.2513, 0.7413, 1.0367, 0.8, 1.1143, 1.068, 1.4364, 0.9375, 1.9552, 0.9178, 0.0778, 0.9481, 1.1979, 2.0658, 1.2518, 1.9053, 0.3714, 1.5773, 1.9694, 0.9535, 1.581, 1.253, 2.275, 0.5849, 1.7347], [0.0974, 0.6049, 0.8716, 1.93, 2.4143, 2.6505, 2.0, 2.0139, 1.7761, 0.0, 2.9178, 0.3889, 1.5584, 1.4896, 1.6447, 1.2734, 2.3158, 0.0, 1.8454, 2.6224, 0.6434, 0.4857, 1.4578, 1.825, 2.3396, 1.4354], [0.2308, 0.9301, 0.8624, 1.79, 1.7857, 2.3786, 2.1091, 1.6389, 2.1045, 0.8621, 2.5479, 0.3556, 1.1948, 1.1979, 2.4605, 1.1942, 1.8105, 0.1143, 1.4845, 1.9898, 0.8295, 1.2, 1.6145, 2.7812, 2.1321, 1.2925], [0.3538, 0.7413, 0.8807, 2.09, 2.0, 2.6505, 1.5091, 2.0, 2.1045, 0.1034, 2.137, 0.7667, 0.4935, 1.5938, 2.5, 1.5755, 1.2947, 0.2286, 1.433, 2.2347, 0.7364, 1.181, 1.3253, 2.4062, 2.0377, 1.6667]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

