created: 20230520000848000
creator: Drevarr
modified: 20230705163530692
modifier: drevarr
tags: ChartData
title: 202305200008_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Grilo Gringo", "Newtype Khan", "Smol Gluvs", "Kary\u00edna", "Cedryn X", "Rozaalyna", "Binkety Bonk", "Drogo Discourteous", "Grasszanine", "Morv\u00e4rth", "Nomi No Mi", "Sister Elonith", "Soxxdodendron", "Lucky Leipreach\u00e1n", "Cerys Fireblade", "Lord Erin The Wise", "Khailerian", "Paul Bjart Mist Cop", "\u00c1rk\u00e1ntor", "Hauzzy", "Be\u00eb", "Kosa\u00efr", "Mistwalker Caelon", "Cyclotechnist Farra", "Xanvias Einzbern"];
const professions = ["Dragonhunter", "Spellbreaker", "Scourge", "Vindicator", "Berserker", "Scourge", "Scrapper", "Dragonhunter", "Spellbreaker", "Scourge", "Berserker", "Berserker", "Willbender", "Scrapper", "Berserker", "Weaver", "Vindicator", "Scrapper", "Scourge", "Berserker", "Scourge", "Weaver", "Vindicator", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[48.0377, 89.2635, 41.6471, 11.3256, 48.9487, 18.4965, 33.3667, 117.2019, 177.4868, 0.0, 208.782, 51.9278, 38.886, 74.4348, 20.68, 8.6377, 26.9708], [73.3208, 109.541, 26.7059, 67.6047, 32.9231, 21.0699, 251.7, 114.4615, 90.2105, 0.0, 60.5972, 71.5111, 31.7979, 29.8478, 0.0, 78.6304, 36.5906, 13.5106, 0.0, 0.0, 0.0, 50.7397, 50.5508, 0.0, 73.9728, 83.283, 147.614], [162.5377, 79.6183, 251.1765, 12.1705, 18.4872, 40.4545, 0.0, 21.2788, 255.5395, 17.6804, 75.2844, 64.3944, 99.6632, 230.8478, 5.94, 96.2899, 39.345, 24.4255, 0.0, 29.5, 42.6053, 79.1096, 19.0695, 0.0, 43.0054, 547.2264, 107.1404], [216.1887, 244.171, 66.5217, 0.0, 334.2174, 236.6433, 312.4787, 0.0, 0.0, 157.9342, 190.4932, 86.3636, 48.6667, 181.1413, 486.1509, 0.0], [93.5472, 45.692, 48.7287, 67.641, 23.8322, 0.0, 124.2788, 382.0658, 26.3505, 181.0664, 61.1056, 5.228, 292.1304, 65.68, 75.0217, 144.5497, 0.0, 0.0, 53.6667, 87.9474, 160.0137, 128.0856, 0.0, 94.6848, 239.3158], [36.4906, 167.0386, 211.8824, 116.9651, 138.7273, 0.0, 0.0, 229.5263, 0.0, 303.5877, 39.1667, 17.6943, 97.3696, 153.24, 26.1739, 18.3509], [310.2453, 91.5596, 111.3261, 156.66, 255.3188, 277.6023, 7.8404, 0.0, 255.7083, 181.6316, 135.2192, 265.6417, 0.0, 156.2989, 794.2642, 292.9649], [91.7824, 262.5435, 42.18, 84.7464, 380.7076, 31.1277, 0.0, 0.0, 127.0132, 475.6575, 245.7754, 65.697, 140.2989, 1269.7547, 334.7544], [25.5377, 151.5386, 73.7451, 83.4109, 33.0769, 8.7413, 57.0, 51.2788, 43.6711, 0.0, 116.6588, 145.6, 32.4663, 221.4783, 37.76, 16.529, 74.9006, 134.234, 0.0, 0.0, 71.2105, 239.3425, 65.1337, 0.0, 83.9348, 297.1698, 100.6842], [362.8039, 77.0581, 0.0, 219.0839, 150.3667, 138.3173, 232.7632, 231.6186, 297.1043, 201.5, 46.487, 230.8478, 197.04, 174.058, 91.5088, 77.6064, 0.0, 121.9605, 196.726, 32.4652, 140.4545, 91.3261, 765.4151, 164.0175], [120.0189, 201.3899, 302.1961, 152.7946, 0.0, 303.5524, 211.8333, 80.3269, 0.0, 68.5567, 119.4218, 0.0, 102.4767, 420.1087, 0.0, 100.8889, 222.9787, 0.0, 0.0, 238.9605, 27.3014, 243.7219], [115.934, 371.596, 68.2383, 418.3696, 254.08, 360.8551, 204.538, 118.9894, 0.0, 448.4868, 335.6575, 172.369, 200.2727, 59.712, 534.9057, 267.4561], [91.0283, 144.7295, 241.0784, 147.7946, 548.4359, 226.6364, 182.7667, 24.3269, 373.1447, 93.2784, 168.8578, 226.5667, 126.228, 413.1522, 301.04, 223.058, 109.6316, 66.2979, 0.0, 8.25, 310.1711, 342.9315, 8.5401, 31.5455, 64.9402, 1046.8302, 429.6053], [172.8113, 56.2951, 382.6667, 99.686, 0.0, 257.3217, 145.0667, 200.1346, 672.2763, 144.5567, 270.9858, 42.6167, 197.658, 705.5652, 195.16, 119.6232, 271.7895, 132.5426, 0.0, 35.625, 174.75, 15.3562, 187.6845, 347.303, 194.3859, 1140.1509, 266.4912], [51.4057, 304.0152, 45.5294, 92.2984, 178.9487, 71.965, 530.0, 81.5769, 642.2105, 152.0, 177.2085, 27.0667, 293.5699, 465.913, 39.18, 235.4275, 144.6667, 13.8936, 0.0, 0.0, 12.6053, 54.1781, 176.5348, 8.1515, 51.6848, 318.4717, 231.1404], [115.0755, 318.1007, 182.4706, 37.4264, 156.9744, 227.8531, 465.2667, 183.5, 765.8947, 77.8969, 179.763, 202.3833, 82.0, 595.7391, 212.26, 0.0, 156.1988, 23.4255, 0.0, 0.0, 153.8026, 196.0274, 259.6417], [32.9434, 315.767, 0.0, 261.1899, 0.0, 125.972, 377.8333, 144.875, 679.8289, 278.3081, 329.8556, 68.3782, 445.7826, 351.28, 483.5145, 10.7368, 167.5213, 0.0, 89.9583, 60.4474, 0.0], [162.9434, 164.2389, 60.376, 350.0256, 265.2587, 418.8667, 46.3462, 474.5658, 0.0, 218.1374, 226.2611, 121.9793, 1091.0652, 168.16, 220.4565, 310.4094, 118.383, 0.0, 0.0, 65.0658, 48.1507, 49.4973, 195.7273, 210.8804, 1224.8679, 450.5702], [47.5755, 412.5913, 576.451, 84.1008, 25.5897, 304.3007, 67.9667, 116.4423, 417.1316, 109.5876, 265.3886, 175.7333, 97.7202, 508.8261, 119.4, 125.442, 234.7368, 27.9681, 0.0, 48.7083, 117.8289, 172.0822, 119.2193, 11.7576, 56.1848, 674.566, 68.1404], [132.1509, 400.356, 215.0784, 498.186, 0.0, 391.6224, 0.0, 289.8462, 1231.8553, 196.3608, 566.4502, 131.9778], [220.9623, 347.5515, 323.2941, 94.7597, 154.4615, 302.1608, 256.8333, 176.3077, 929.4737, 29.567, 365.3934, 167.6778, 231.5855, 451.2826, 372.86, 344.058, 125.3392, 238.5745, 0.0, 38.625, 150.1711, 152.9726, 224.246, 334.4545, 244.3207, 1356.0189, 186.1404], [71.283, 601.493, 246.098, 127.9729, 201.5128, 227.3287, 225.5667, 273.1442, 1199.3553, 72.6082, 254.8957, 86.2444, 65.4197, 325.2174, 0.0, 205.5145, 346.2632, 157.3404, 83.2237, 452.6438, 93.4171, 0.0, 44.4728, 950.4151], [256.1321, 340.7014, 301.2745, 277.0891, 188.4476, 0.0, 132.1154, 962.6184, 643.5498, 157.5444, 51.7927, 1480.5652, 73.44, 407.7174, 249.6082, 217.5745, 0.0, 0.0, 0.0, 335.6027, 67.984, 309.4242, 270.8533, 1185.1321, 540.5175], [424.4434, 566.4859, 426.2353, 213.7016, 291.3077, 287.7902, 166.5667, 173.5769, 642.5, 160.2474, 222.0948, 408.3333, 217.3264, 1469.5652, 0.0, 393.9855, 281.5029, 315.5532, 0.0, 142.7237, 792.9589, 278.2513, 0.0, 124.4783, 1397.8302, 397.307], [554.6226, 833.2705, 408.6078, 589.5504, 553.2308, 281.1818, 498.6, 259.4615, 1529.25, 25.9897, 315.2512, 340.2889, 198.171, 1530.587, 144.4, 582.4203, 271.3158, 426.2234, 0.0, 0.0, 388.1096, 271.6043, 0.0, 255.7717, 1182.7547, 737.8509]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

