created: 20230330095927000
creator: Drevarr
modified: 20230705163523398
modifier: drevarr
tags: ChartData
title: 202303300959_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Mistwalker Caelon", "Retropawn", "Al Darasuun", "Jeckyll Mbs", "Sygaldry Verdandi", "Legacy Of Mathus", "Eibh\u00ebar", "Dark Sidiuz", "Flanneryflame", "Rozaalyna", "Lord Erin The Wise", "Smol Daddy Tika", "Sofya De Nova", "Rina Of Theros", "Smol Gluvs", "River No Hug", "Be\u00eb", "Xanvias Einzbern", "Fungus", "Einar Xxl"];
const professions = ["Tempest", "Vindicator", "Scourge", "Scourge", "Berserker", "Firebrand", "Berserker", "Chronomancer", "Scourge", "Weaver", "Scourge", "Weaver", "Berserker", "Weaver", "Scourge", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 43.3131, 6.0, 23.8608, 24.8282, 6.4286, 14.9313, 0.0, 24.8221, 15.5726, 0.0, 7.144, 0.0, 39.0391], [0.0, 9.7744, 0.0, 10.4641, 28.5447, 56.4714, 11.0763, 0.1333, 3.2577, 10.3419, 0.0, 35.264, 15.0455, 48.4609], [3.1286, 99.2137, 1.3556, 178.3374, 226.3419, 0.0, 203.32, 0.0, 301.1562], [167.5429, 186.9847, 46.0222, 199.0552, 191.735, 0.0, 26.6364, 176.488, 9.4242, 190.4531], [25.0625, 40.4175, 15.68, 3.2785, 27.0598, 29.0429, 17.4656, 0.0, 44.3865, 23.3248, 0.0, 0.0, 70.536, 6.4545, 85.1641], [43.4276, 26.7, 10.211, 29.4154, 40.5143, 107.458, 7.7778, 27.8896, 69.7265, 0.0, 0.0, 4.608, 12.8788, 29.7656], [41.8249, 0.0, 2.346, 41.4106], [14.2708, 25.0135, 28.86, 11.9198, 28.1452, 48.1286, 91.6947, 12.3556, 51.3497, 35.7949, 25.5417, 0.0, 57.64, 2.4545, 115.0156], [20.6476, 531.0143, 218.916, 115.3558, 114.0855, 0.0], [36.9428, 110.0534, 59.0, 36.7607, 143.3846, 0.0, 26.1818, 144.936, 5.3485, 141.2578], [0.0417, 10.8081, 1.74, 0.5738, 38.4915, 87.2143, 133.5496, 0.0, 167.2822, 148.265, 0.0], [15.375, 33.9125, 0.0, 6.0253, 41.0194, 131.3429, 115.3664, 43.6444, 90.2577, 26.0513, 0.0, 0.0, 208.256], [39.2708, 30.6195, 15.94, 7.6962, 53.3455, 31.1714, 65.2214, 9.5333, 52.9939, 54.2393, 0.0, 0.0, 82.16, 4.6061, 65.6719], [7.3, 0.0, 40.7968, 92.4143, 193.6336, 83.8444, 167.4724, 140.9915, 5.7083, 0.0, 108.608, 43.2273, 175.2969], [30.125, 60.9798, 6.84, 24.3797, 74.1769], [30.375, 15.7374, 176.76, 2.4008, 55.2096, 250.4714, 219.4351, 32.6444, 167.1288, 132.735, 133.4167, 0.0, 256.536, 12.7727, 410.0469], [11.3125, 68.3737, 49.4, 10.8903, 83.9082, 350.8571, 305.8244, 9.3333, 165.8712, 174.8718, 2.6667, 127.216, 76.1667, 412.3984], [41.0625, 49.7374, 4.08, 1.9114, 84.1963, 343.2286, 289.0, 34.4444, 271.1411, 134.9915, 0.0, 18.0455, 306.272, 84.4848, 291.3203], [0.0, 38.7879, 12.96, 22.5401, 134.0149, 428.1571, 85.5267, 10.7556, 37.0429, 41.8376, 0.0, 0.0, 202.936, 7.0, 259.6875], [46.1667, 34.037, 109.86, 15.2236, 99.9436, 472.9714, 249.1374, 66.0, 266.0307, 251.453, 43.5, 48.0455, 430.664, 17.6818, 356.1875], [203.0899, 322.6429, 928.8473, 137.3111, 667.7117, 563.094, 1173.168]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

