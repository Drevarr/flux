created: 20230208220141000
creator: Drevarr
modified: 20230705163518841
modifier: drevarr
tags: ChartData
title: 202302082201_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Kahless The Drunk", "Jupi Jupi Jupi", "Gabe Malhorn", "Kosa\u00edr", "Kira Dragonblaze", "Belvyn Brightblade", "Rina Of Theros", "Tegan Parker", "Govinda Ektar", "Legacy Of Mathus", "Oo Dads Mad", "Rozaalyna", "Koralia Danai", "Johosh The Great", "Etchery Howls", "Xyntharos", "Stabby Beech", "Bella Sassy", "Whose Guardian", "Blanco Padre Guard", "Arka\u00f1", "Elonith Primal", "Black Raspberry Pie", "Stoic Rapidfire", "Drevarr Moonwillow", "Ace Rages", "Be\u00eb", "Daddys Lil Orchid", "Nelliel T", "Xanvias Einzbern", "Fungus", "Sp\u00edcy Cheese", "Ryvalia Fazebringer", "Zaylen Harker", "Mac Aaroni", "\u00c9\u00efbhear", "Smol Gluvs", "Demon Sekhmet", "Panther B Me", "Skye Nightroad", "Raziel Umbra", "Tacoplasm", "Tribal S", "Tootsie Pop Bringer", "Arcanophage Farra", "Smol Daddy Tika", "Mistwalker Caelon", "Zadie Miststep", "Lord Erin The Wise", "Newtype Khan"];
const professions = ["Firebrand", "Dragonhunter", "Firebrand", "Scrapper", "Dragonhunter", "Firebrand", "Scourge", "Tempest", "Renegade", "Berserker", "Spellbreaker", "Scourge", "Firebrand", "Firebrand", "Druid", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Druid", "Scrapper", "Berserker", "Scourge", "Vindicator", "Scourge", "Berserker", "Scourge", "Berserker", "Chronomancer", "Firebrand", "Tempest", "Scrapper", "Scourge", "Berserker", "Scourge", "Scrapper", "Chronomancer", "Tempest", "Druid", "Scrapper", "Spellbreaker", "Berserker", "Vindicator", "Tempest", "Weaver", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2909, 0.4752, 0.1268, 0.0932], [0.3697, 0.0515, 0.1057, 0.0, 0.0, 0.234], [0.1322, 0.129, 0.0, 0.1702, 0.0, 0.2881, 0.3191, 0.2817, 0.0827], [0.3897, 0.0309, 0.1189, 0.0484, 0.0, 0.234, 0.0], [0.4448, 0.0103, 0.0793, 0.0161, 0.0638], [0.4061, 0.0309, 0.1806, 0.129, 0.0, 0.1489], [0.3826, 0.0515, 0.207, 0.1613, 0.02, 0.4255, 0.0212], [0.0, 0.4468, 0.0, 0.3552, 0.3546, 0.2394, 0.1098], [0.3916, 0.1915, 0.4085, 0.1564], [0.507, 0.0206, 0.1278, 0.0484], [0.4613, 0.0, 0.2291, 0.0645, 0.0, 0.5319], [0.527, 0.0412, 0.3656, 0.0161, 0.0, 0.2766], [0.3521, 0.0206, 0.0617, 0.0, 0.0, 0.234, 0.0053, 0.2378, 0.2837, 0.0845, 0.0722], [0.3462, 0.0619, 0.0881, 0.0, 0.0, 0.1064, 0.0, 0.2867, 0.2411, 0.1831, 0.0571], [0.3087, 0.0515, 0.0925, 0.0645, 0.0, 0.0851, 0.0265, 0.2629, 0.1702, 0.2394, 0.1278], [0.3462, 0.0206, 0.1498, 0.0, 0.0, 0.383, 0.0053, 0.2867, 0.3333, 0.1408, 0.0692], [0.3099, 0.0412, 0.1145, 0.1613, 0.1277, 0.0053, 0.3413, 0.3759, 0.2254, 0.0782], [0.358, 0.0515, 0.1718, 0.0323, 0.0, 0.0851, 0.0, 0.3119, 0.305, 0.1972, 0.0812], [0.392, 0.0928, 0.1542, 0.0323, 0.0, 0.2979, 0.0, 0.2713, 0.2695, 0.1127, 0.0932], [0.3685, 0.0412, 0.1013, 0.0161, 0.0, 0.1915, 0.0, 0.3399, 0.3191, 0.2958, 0.0887], [0.3533, 0.0515, 0.1145, 0.0, 0.02, 0.1915, 0.0212, 0.3804, 0.383, 0.2394, 0.0737], [0.3286, 0.0928, 0.1101, 0.0161, 0.0, 0.1702, 0.0, 0.4014, 0.3333, 0.0563, 0.1158], [0.3815, 0.0309, 0.1189, 0.0645, 0.02, 0.1277, 0.0106, 0.3161, 0.5035, 0.3803, 0.0752], [0.3791, 0.0515, 0.1145, 0.0484, 0.0, 0.1915, 0.0053, 0.3524, 0.3759, 0.3521, 0.0707], [0.3638, 0.0722, 0.141, 0.0968, 0.0, 0.0851, 0.0, 0.3944, 0.2837, 0.2254, 0.0827], [0.3721, 0.0, 0.0485, 0.1774, 0.4255, 0.0053, 0.3287, 0.5603, 0.493, 0.0902], [0.4507, 0.0515, 0.1718, 0.0323, 0.02, 0.1277, 0.0, 0.2909, 0.3901, 0.1972, 0.1098], [0.446, 0.0825, 0.1454, 0.2097, 0.02, 0.3404, 0.1058, 0.1944, 0.4539, 0.5211, 0.1158], [0.3744, 0.0825, 0.1366, 0.0, 0.0, 0.1915, 0.0053, 0.4098, 0.4965, 0.3239, 0.0526], [0.3991, 0.0515, 0.1366, 0.0, 0.02, 0.3617, 0.0106, 0.3483, 0.4113, 0.4789, 0.0827], [0.3897, 0.0515, 0.141, 0.0, 0.02, 0.1702, 0.0, 0.3455, 0.5532, 0.2535, 0.1248], [0.4225, 0.0206, 0.1894, 0.0323, 0.02, 0.1915, 0.0053, 0.3832, 0.4113, 0.169, 0.0947], [0.4049, 0.0206, 0.141, 0.0484, 0.02, 0.1277, 0.0, 0.393, 0.5532, 0.3944, 0.0872], [0.4601, 0.1134, 0.0749, 0.0, 0.0, 0.2766, 0.0106, 0.3077, 0.5035, 0.4507, 0.1308], [0.4425, 0.0309, 0.1674, 0.2903, 0.0, 0.1489, 0.0, 0.3189, 0.5674, 0.2254, 0.1173], [0.3779, 0.0928, 0.1542, 0.1452, 0.02, 0.1915, 0.0317, 0.4028, 0.5035, 0.3521, 0.1248], [0.3955, 0.0619, 0.2026, 0.0323, 0.02, 0.234, 0.0106, 0.3636, 0.4326, 0.5915, 0.1368], [0.4038, 0.0515, 0.1542, 0.0806, 0.0, 0.2766, 0.0053, 0.3776, 0.3475, 0.2958, 0.182], [0.4577, 0.0515, 0.2247, 0.0323, 0.02, 0.2766, 0.0, 0.3245, 0.5461, 0.4225, 0.0947], [0.4002, 0.0206, 0.3789, 0.0161, 0.0, 0.2979, 0.0423, 0.3762, 0.5532, 0.3662, 0.0752], [0.5176, 0.0103, 0.1938, 0.0, 0.0, 0.3617, 0.0053, 0.3189, 0.5319, 0.2676, 0.1143], [0.5153, 0.0, 0.2203, 0.0, 0.0, 0.5106, 0.0, 0.3063, 0.4539, 0.3099, 0.1474], [0.4202, 0.0309, 0.1674, 0.0806, 0.04, 0.2128, 0.0688, 0.4406, 0.2837, 0.2254, 0.1835], [0.4894, 0.0, 0.1938, 0.0323, 0.0, 0.3617, 0.0053, 0.449, 0.5035, 0.3239, 0.0391], [0.5223, 0.0206, 0.2026, 0.0161, 0.12, 0.3617, 0.0106, 0.379, 0.4043, 0.5493, 0.0707], [0.4836, 0.0928, 0.185, 0.2903, 0.0, 0.1702, 0.0106, 0.3385, 0.6241, 0.5493, 0.1308], [0.4425, 0.0206, 0.1542, 0.0806, 0.02, 0.1915, 0.0053, 0.3888, 0.5957, 0.6479, 0.1699], [0.4988, 0.0412, 0.348, 0.0806, 0.0, 0.2553, 0.0635, 0.3343, 0.4681, 0.493, 0.1158], [0.4883, 0.0722, 0.1938, 0.0161, 0.0, 0.2979, 0.0, 0.3958, 0.4468, 0.338, 0.1579], [0.5892, 0.0309, 0.2291, 0.0645, 0.02, 0.4468, 0.0635, 0.372, 0.7518, 0.3803, 0.1429]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

