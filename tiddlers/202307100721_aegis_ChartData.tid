created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Scarlet Merc\u00fcry", "Enter Effore", "Drevarr Moonwillow", "Chocolate Teapot", "Notorious H U D", "Locopuff", "Gestern Yesteryear"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.4047, 29.0909, 0.8389, 33.7075], [26.013, 23.016, 28.3569, 14.1826, 9.863], [12.006, 0.719, 0.0, 0.1058, 4.6147, 1.0525, 5.2454, 17.5761, 0.0343, 5.1587, 32.2503, 2.3034, 5.1051, 0.0, 2.7448, 39.2811, 7.3051, 0.0, 1.3726, 0.0, 0.2816, 18.8611, 6.2308, 7.7452], [1.4663, 0.0, 0.0, 0.0, 1.4573, 0.5179, 1.9712, 0.0, 58.4984, 21.362, 16.1252, 50.6362, 7.7231, 0.0, 12.4756], [0.0, 27.296, 23.2713, 1.5959, 11.9501, 14.6487, 3.3418, 36.9044, 4.9664, 12.1712, 13.981, 0.0, 1.7647, 0.0, 4.8294, 8.8252, 17.6203, 0.0, 0.0, 3.5607, 0.0], [90.2622, 61.6408, 4.9562, 61.6491, 46.7313, 64.1894, 9.5948, 131.8317, 0.0], [7.4692, 8.5142, 14.5398, 6.1152, 55.5245, 2.2797, 49.8143, 22.8934, 23.5693, 56.7871, 88.3265, 40.2427, 13.4546, 5.1408, 99.3505, 4.5965, 47.6474, 9.0583, 6.2656, 51.6451, 12.6842, 0.0, 15.7352, 67.1385, 19.2977]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

