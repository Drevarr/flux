created: 20230426221022000
creator: Drevarr
modified: 20230705163526692
modifier: drevarr
tags: ChartData
title: 202304262210_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Viral Marketing", "Tika Rucola", "Raelyn Sunray", "Lucas Ryn", "Drevarr Moonwillow", "Sister Elon\u00edth", "Zaylen Harker", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Bella Sassy", "Jupi Jupi Jupi"];
const professions = ["Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[245.0672, 11.975, 67.8144, 270.5539, 376.2612], [20.1539, 126.8436, 61.2278, 0.0, 0.0, 0.4992, 107.4235, 291.254, 42.3864, 47.1325, 0.0, 9.9772, 46.1916, 16.9686, 2.6413, 243.4083], [395.928, 228.4952, 112.0776, 54.1728, 56.2944, 77.1446, 352.1062, 26.796], [0.0, 7.92, 84.7872, 21.4378, 733.4771, 132.2261, 225.3584, 0.0, 142.7879, 84.0736, 28.3338, 30.193, 513.1526], [20.2501, 383.8302, 188.8968, 2.8019, 0.887, 29.4912, 73.4674, 845.4264, 61.3872, 221.542, 0.0, 58.6363, 51.4462, 10.791, 2.0948, 244.2064], [178.0229, 496.3228, 82.5024, 202.7326, 372.5878, 8.6328, 71.2246, 932.9321], [55.1467, 501.5088, 316.3438, 95.5393, 48.0269, 74.0352, 49.8389, 828.2392, 228.8866, 389.082, 10.3252, 95.6008, 227.4142, 0.0, 23.5897, 969.2439], [21.9336, 880.5732, 258.9982, 209.6671, 321.9955, 112.4736, 118.3771, 1240.2684, 137.4878, 243.2955, 39.0259, 189.4025, 356.0908, 0.0, 67.8546, 881.8563], [44.2039, 1070.8386, 400.1994, 93.9675, 114.4915, 77.5296, 135.7464, 1383.8051, 143.4317, 564.2547, 0.0, 173.4554, 233.402, 30.195, 34.9747, 1096.5344], [72.15, 1345.0554, 291.2759, 153.765, 127.2902, 170.1504, 297.2338, 1416.3215, 300.6024, 441.7483, 24.6261, 188.1758, 370.9992, 15.741, 55.6043, 987.2002], [86.8445, 1132.794, 342.8537, 75.7891, 232.7846, 100.1088, 281.2728, 1794.4408, 189.131, 493.0789, 29.4129, 246.2396, 286.9256, 41.2632, 67.9457, 1123.6685], [129.2687, 2114.9154, 531.085, 205.5667, 347.6563, 148.6464, 441.1954, 1556.142, 254.3184, 746.8695, 83.2145, 334.8891, 607.2118, 3.9006, 145.1815, 1280.8863]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

