created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Rosreipp", "Nidircc", "Venomina The Siren", "Tegan Parker", "Tribal Z", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.0152, 0.0, 20.0229, 201.5664, 17.3318, 83.1559, 183.9852], [20.0578, 94.5331, 63.4099, 20.1034, 14.2344, 394.2119, 40.7842, 53.0846, 40.8023, 68.7196, 40.368, 12.576, 41.1677, 60.6197, 0.0, 73.6988], [161.454, 0.0, 0.0, 129.5952, 19.9022, 51.1869, 137.6802, 43.655, 19.9718, 0.0, 17.712, 156.7936, 43.2893, 16.9238, 65.5424, 101.6652, 16.464, 17.1264, 19.9982, 64.4182, 56.9696], [265.3071, 0.0, 59.6012, 155.3888, 0.0, 20.0229, 244.1376, 20.0578, 74.2579, 57.4426, 16.0786, 19.7856, 384.6642, 37.4543, 69.1301, 68.1835, 85.4599, 28.4352, 19.8912, 26.0885, 93.3183, 52.3091], [526.3315, 0.0, 101.4388, 245.8624, 16.9891, 68.5608, 232.4952, 32.5864, 69.0941, 28.1971, 0.0, 31.428, 380.2086, 79.9799, 77.2699, 73.304, 83.9311, 27.744, 19.8912, 25.1222, 84.0765, 0.0, 68.0992], [741.3181, 15.5509, 0.0, 196.4111, 333.3568, 117.553, 104.737, 376.4376, 40.1056, 132.6758, 134.7226, 96.6571, 56.7648, 675.1249, 4.0021, 122.2733, 168.8148, 171.6078, 43.1328, 80.8512, 72.1752, 134.9454, 150.1453]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

