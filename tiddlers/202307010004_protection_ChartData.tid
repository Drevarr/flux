created: 20230701000406000
creator: Drevarr
modified: 20230705163540168
modifier: drevarr
tags: ChartData
title: 202307010004_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Mike The Archmagus", "Ima Lou", "Erin Celes", "Drumina", "Traidoruns Maximus", "Klengah", "Demon Staph", "Ryvalia Fazebringer", "Seiker Soulkeeper", "Arriasa", "Ak\u00e1nt\u00f3r", "Dingle Mcbingle", "Drevarr Moonwillow", "Tribal S", "Aronorf Xideliesi", "Gavann", "Air One Com", "Gamora Titus", "Mmathuss", "Gestern Yesteryear", "Bella Sassy", "Koralia Danai", "Solus Sanctus"];
const professions = ["Chronomancer", "Tempest", "Druid", "Herald", "Druid", "Firebrand", "Druid", "Druid", "Chronomancer", "Firebrand", "Druid", "Druid", "Firebrand", "Scrapper", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.5965, 14.4497, 21.7152, 24.6528, 37.7918, 3.648, 36.8448, 21.6821, 14.553, 17.4787, 82.171, 13.1735, 9.3845, 14.555, 27.025, 28.012, 3.6604, 0.0, 25.6192, 44.591, 93.3418], [26.2752, 49.4421, 159.1574, 323.9766], [32.1104, 41.8295, 47.6237, 70.2259, 60.1036, 41.688, 99.6749, 24.9782, 26.1905, 28.4213, 95.1742, 32.0505], [0.0, 97.0024, 166.7952, 369.0157], [142.1603, 42.297, 48.6432, 0.0, 66.9712, 74.495, 37.365, 30.6478, 27.6722, 98.617, 135.1172], [53.0968, 67.5465, 157.847, 0.0, 148.4862, 103.512, 123.3331, 112.8557, 84.77], [35.4361, 40.5967, 36.2045, 18.3859, 55.7796, 33.888, 14.3501, 36.3182, 30.6985, 29.4494, 68.0752, 31.7055, 50.7196, 55.4249, 71.0245, 26.602, 35.861, 10.2366, 0.0, 67.2344, 84.1277, 58.7466], [31.7377, 50.1438, 34.1827, 44.1907, 43.1535, 39.432, 70.5384, 50.4101, 31.066, 21.3221, 202.4773, 73.5195, 43.4691, 52.673, 68.1688, 96.115, 61.805, 49.0736], [18.0908, 28.67, 44.8157, 42.5779, 40.2564, 14.256, 55.8005, 50.4403, 39.2245, 23.1581, 103.1509, 50.7495, 16.1009, 33.8335, 17.1804, 51.982, 32.994, 35.1146, 0.0, 60.5623, 141.2986, 182.332], [116.8589, 73.6532, 184.4294, 105.5232, 211.9192, 108.456, 144.9067, 156.4013], [47.6209, 31.451, 52.416, 64.8806, 93.6578, 51.048, 43.0018, 19.4141, 35.1575, 5.7038, 205.0998, 57.753, 58.7871, 40.7131, 52.5545, 42.77, 59.361, 20.7214, 0.0, 12.6599, 129.9542, 257.6147], [50.3732, 16.0265, 19.0195, 53.3606, 61.3576, 42.792, 62.4907, 47.0232, 26.754, 51.3346, 166.746, 62.1, 70.8032, 52.3908, 66.6488, 121.542, 90.71, 43.8313, 0.0, 73.7355, 144.7805, 220.191], [98.3174, 89.9482, 1.1242, 97.2503, 104.328, 67.7056, 51.8616, 102.115, 60.677, 123.422, 81.0553, 38.9207, 190.1578, 447.7796], [49.2264, 17.7467, 33.8832, 28.7078, 24.2144, 53.712, 74.4653, 87.4541, 37.9995, 24.5534, 146.6403, 47.4375, 13.1054, 38.173, 95.8509, 49.632, 39.903, 70.0432, 35.8579, 122.7499, 204.0854, 308.746], [59.0315, 61.5832, 39.911, 96.215, 80.3832, 21.552, 100.7414, 60.359, 53.8265, 65.9981, 189.3649, 53.3025, 36.6611, 48.7922, 52.5545, 93.953, 50.713, 35.735, 0.0, 90.2447, 116.9251, 286.5529], [70.1268, 113.4185, 104.832, 174.0442, 129.8497, 23.208, 4.3632, 48.6259, 51.891, 35.5694, 178.0008, 43.056, 92.9632, 52.7789, 52.5545, 66.646, 41.595, 41.0084, 53.1631, 149.4979, 222.3668], [18.888, 19.392, 64.4112, 51.94, 68.6174, 430.9609, 116.5065, 82.9214, 57.33, 147.8526, 0.0, 101.708, 21.8071, 142.8518, 228.9082, 427.1095], [37.1563, 27.1792, 86.711, 97.367, 105.3326, 74.496, 83.0462, 71.9107, 14.8715, 80.5882, 225.6425, 100.2225, 85.1, 70.3836, 93.64, 59.502, 73.226, 80.621, 0.0, 108.8069, 168.0307, 376.4134], [69.9379, 141.2813, 70.9568, 53.808, 122.0726, 124.9517, 119.266, 76.5, 297.5422, 148.971, 91.4655, 65.8325, 143.1545, 86.339, 76.281, 68.6783, 0.0, 99.9535, 260.4701, 360.0949], [141.5151, 61.2678, 34.9315, 100.5005, 171.706, 54.024, 180.1032, 123.1675, 169.54, 118.8259, 278.6385, 149.178, 146.9166, 135.1577, 128.185, 143.914, 81.874, 92.1294, 0.0, 167.5729, 366.3878, 697.7791], [93.0915, 91.0272, 130.4784, 186.6701, 183.6835, 138.336, 150.0941, 109.3478, 92.463, 91.5062, 534.8766, 92.046, 182.4204, 106.0517, 142.9702, 159.753, 118.44, 120.8849, 13.7626, 177.3672, 481.0666, 895.1241], [31.1643, 101.0904, 101.0131, 159.7594, 117.0939, 81.624, 141.5131, 80.5594, 43.904, 75.937, 385.9416, 184.782, 240.5607, 113.1782, 167.7966, 221.84, 216.529, 127.4302, 0.0, 170.9517, 695.9347, 1013.4876], [157.0829, 92.0307, 120.2947, 233.5334, 182.1701, 62.04, 192.9504, 177.2971, 156.1385, 139.0709, 533.0191, 142.968, 177.5526, 182.2212, 272.0304, 172.067, 143.726, 144.4601, 0.0, 211.0272, 366.7248, 767.1871], [130.7639, 106.6811, 162.4896, 238.5101, 180.0946, 78.36, 183.7877, 137.9246, 187.719, 126.5616, 452.05, 198.0645, 243.1477, 127.1491, 200.1768, 227.433, 198.246, 155.131, 0.0, 141.4832, 349.8768, 835.2896]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

