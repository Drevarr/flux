created: 20230902151000000
creator: Drevarr
tags: ChartData
title: 202309021510_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Wall Knot", "Pinksta", "Smol Gluvs", "Aloe Pen", "Drevarr Moonwillow", "Unbreakable Nemesis", "Serene Azura", "Klee Flamepumpkin", "Surethang Jr", "Gestern Yesteryear", "Barrett Provencal", "Koisx", "Mortuus Araden", "Minnie Darley", "Nose Llama", "Drac Tepes", "Xerox T\u00f6sen", "Frozen Chaos", "Lurker Holystrike", "San Kell", "Xuerreux", "Elonith Requiem", "Liu Mira", "Jimbo The Pleb", "Legoh Brave"];
const professions = ["Firebrand", "Reaper", "Reaper", "Vindicator", "Scrapper", "Firebrand", "Dragonhunter", "Tempest", "Chronomancer", "Firebrand", "Scourge", "Dragonhunter", "Harbinger", "Dragonhunter", "Tempest", "Scourge", "Mirage", "Firebrand", "Firebrand", "Berserker", "Berserker", "Reaper", "Berserker", "Berserker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.6182, 10.2982, 15.52, 3.7887, 15.1667, 0.0, 9.6522, 8.875, 10.6111, 0.0, 7.8682, 5.7591, 10.3294, 9.9465, 8.878, 5.0661, 8.5526, 6.7736, 11.0985], [5.9582, 9.9124, 14.7346, 6.8848, 37.4268, 4.4579, 25.7632, 1.7547, 25.7652, 27.4815, 15.9], [13.3128, 27.6132, 43.0122, 8.0397, 30.1447, 16.434, 30.9545], [0.0, 6.5498, 16.5547, 4.4953, 2.7407, 22.7927, 36.0545, 0.0, 2.9245, 1.8182, 0.0, 0.0], [13.6757, 0.8182, 23.9825, 18.46, 32.2817, 35.5185, 13.9028, 48.3043, 117.1111, 45.9722, 10.9483, 24.5531, 3.7518], [43.0556, 72.0278, 13.1379, 16.3891, 18.5766, 14.4005, 68.4691, 102.1829, 9.2066], [0.0, 7.2281, 1.7467, 13.169, 17.4444, 1.0833, 25.4444, 124.5139, 26.9722, 5.4483, 14.1833, 28.5036, 14.3246, 18.0576, 59.6951, 24.9785], [0.1486, 32.0727, 32.3509, 87.08, 0.0, 47.4074, 9.9444, 26.3671, 21.5694, 19.8611, 17.5086, 11.7524, 13.4964, 45.3863, 9.5556, 73.5122], [9.027, 13.7895, 27.3267, 0.0, 17.7037, 0.0, 40.4879, 44.8056, 34.3056, 20.2586, 5.1479, 0.9197, 24.4479, 44.0, 116.8659, 11.6182, 34.75, 60.4717, 14.8485, 6.5, 13.4222], [4.9054, 0.0, 1.2368, 17.3333, 0.0, 0.0, 0.0, 21.8357, 43.5556, 86.5278, 1.7931, 1.3055, 5.3942, 26.7417, 64.4897, 63.061, 21.7107, 19.1711, 81.4717, 39.6591, 10.1667, 128.7111], [14.0836, 2.9343, 107.7464, 146.2428], [71.4583, 113.1389, 11.6466, 23.7267, 16.5036, 53.5308, 48.7613, 20.2439, 31.5504, 137.0263, 37.6981, 87.5076, 0.0, 89.0556], [0.0, 0.0, 68.614, 34.6, 2.3099, 204.4259, 31.5, 29.9372, 65.7639, 25.3889, 32.1983, 70.0418, 134.6277, 79.0569], [64.3312, 33.8905, 45.9834, 84.5062, 161.5244, 64.119, 21.5132, 255.2453, 29.7045, 49.6481, 29.0667], [69.4595, 0.0, 36.1842, 163.36, 12.9718, 15.3704, 18.7917, 74.1208, 28.1944, 62.0, 13.8793, 3.6527, 4.6131, 46.6991, 56.535, 124.2317, 37.243, 30.8289, 2.0189, 24.1364, 3.037, 149.6556], [83.0, 525.0976, 40.4446, 286.8553, 276.2264, 146.4697, 262.7407, 252.7444], [56.6715, 111.1389, 98.7222, 38.0431, 7.5209, 59.073, 81.372, 156.3086, 10.9756, 73.5339, 154.3553, 96.8113, 104.9773, 78.8704, 169.5556], [0.0, 58.8889, 29.1389, 110.7295, 192.4444, 260.4167, 26.6724, 19.582, 25.1825, 15.2796, 255.1111, 176.5244, 43.0132, 102.1184, 99.3962, 41.1439, 1.5741, 189.9], [34.9155, 509.8704, 7.0278, 47.1787, 6.8611, 0.0, 13.9828, 239.2154, 204.9854, 38.6422, 36.9835, 98.0732, 35.6975, 54.9245, 0.0, 69.3], [0.0, 0.0175, 59.0, 1.0563, 64.6111, 0.0, 177.2319, 299.3611, 15.4148, 25.781, 110.6943, 56.1193, 7.0732, 126.3835], [98.8378, 4.2, 0.6404, 6.1333, 0.662, 0.1667, 0.0, 106.1208, 440.2778, 880.3889, 12.0086, 7.717, 10.6715, 108.4834, 156.3663, 394.6341, 52.9736], [23.0135, 17.0909, 20.9649, 96.6733, 32.3239, 72.6852, 26.6528, 78.6763, 22.5972, 131.8333, 4.4569, 42.9389, 35.6788, 133.2488, 161.0864, 126.9756, 103.9719, 121.0526, 56.5283, 109.8258, 35.7407], [5.3621, 129.6495, 16.5401, 65.0758, 286.6626, 73.1098, 121.4446, 201.3158, 175.9434, 100.9318, 13.2963, 182.1222], [92.0946, 31.4727, 381.7018, 156.8, 0.0, 73.8889, 10.6806, 98.9227, 4.0556, 474.5, 15.5, 19.4855, 65.562, 121.8507, 188.0, 94.9878, 108.2595, 484.1974, 187.6981, 164.9848, 241.7593], [0.0, 2.5493, 35.5, 12.125, 115.5604, 171.5694, 281.1111, 58.5948, 24.1511, 24.4307, 242.3033, 384.786, 436.8049, 170.7388, 144.7237, 241.9811, 164.9091, 81.9259, 297.1333]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

