created: 20230427220456000
creator: Drevarr
modified: 20230705163526918
modifier: drevarr
tags: ChartData
title: 202304272204_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Hyde En Sikh", "Mac Aaroni", "Xanvias Tlesia", "Primal Clone", "Tootsy Pop Tart", "Clem Storage Xviii", "Puny Tinker", "Drevarr Moonwillow", "Malfax Jinn", "Johosh The Great", "Rylov", "Cordelia Darin", "Forever Broke", "Xkaet", "Choo Sayaccho", "Abserns Sorcerer", "Amandavanbot", "Morv\u00fcs", "Necrotic Windrunner", "Heal Warriior", "Blaize Harlot", "Mysterious Nature", "Smol Gluvs"];
const professions = ["Chronomancer", "Tempest", "Daredevil", "Chronomancer", "Reaper", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Catalyst", "Scourge", "Scourge", "Tempest", "Firebrand", "Weaver", "Necromancer", "Berserker", "Scourge", "Berserker", "Scourge", "Tempest", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.7667, 0.0, 8.5167, 29.9804, 15.0984, 3.5948, 14.6712, 26.1071, 0.0, 18.1465, 2.1714, 1.1377, 0.6354, 0.0, 0.0, 1.3304, 1.691, 0.7941], [19.6333, 9.7463, 0.9333, 6.9216, 0.0, 0.3791, 2.3664, 14.0929, 0.2065, 11.4343, 15.2857, 2.994, 6.1562, 48.2037, 23.9434, 0.513, 0.0, 23.5588], [13.1154, 0.0, 10.4333, 5.098, 0.0, 0.0, 4.1541, 15.3714, 4.1087, 22.7121, 15.1429, 6.6108, 18.9167, 4.7037, 6.2358, 10.5565, 0.0, 49.9118], [8.9333, 1.7164, 50.4, 7.0, 12.0984, 1.9869, 5.2671, 13.4429, 4.3261, 8.9343, 33.1143, 6.8024, 11.1632, 40.037, 13.4434, 5.9043, 0.4583, 55.4412], [15.5897, 6.9602, 12.3667, 30.3137, 0.0, 0.268, 7.6712, 16.0929, 2.3478, 15.7323, 20.7714, 1.6347, 15.1875, 26.037, 8.6226, 0.0, 7.5833], [0.0, 12.3714, 6.2065, 32.0051, 86.6, 19.4132, 34.1875, 23.8148, 2.4811, 2.4609, 1.4132, 32.7353], [80.2935, 35.9495, 23.0571, 2.4671, 41.7743, 23.9444, 9.4151, 6.0783, 4.1528, 45.1176], [13.3821, 7.5522, 33.9, 13.2941, 13.4918, 8.8235, 20.7397, 42.3214, 3.9891, 10.0202, 24.4, 7.3054, 22.75, 19.8704, 2.7642, 0.0, 1.8958, 15.3529], [21.15, 12.9565, 0.2727, 316.8, 2.4371, 44.1007, 3.0556, 25.4528, 5.2174, 19.441, 77.3824], [34.4205, 0.0, 88.25, 121.5098, 0.0, 1.4641, 12.1815, 30.55, 0.0, 18.2525, 33.4571, 10.9581, 16.6701, 14.3704, 7.6132, 4.8522, 1.0799, 1.2647], [110.2286, 48.25, 32.1414, 172.3429, 30.9281, 49.8646, 23.3704, 25.3491, 5.2696, 4.7014, 66.3824], [125.1296, 2.1132, 47.1652, 52.8611, 1103.2059], [2.3821, 0.1791, 174.3, 340.7255, 18.8197, 46.1699, 37.6301, 123.3], [0.0, 111.8667, 92.2353, 5.9836, 14.3529, 54.6164, 46.3214, 13.6196, 18.5909, 130.0286, 11.3054, 40.6424, 37.1481, 4.3208, 4.2087, 3.4201, 56.7647], [45.5643, 14.0326, 24.8434, 102.7714, 70.5269, 74.1319, 36.9444, 12.6038, 72.1739, 12.6146, 23.3529], [28.024, 91.1215, 27.3519, 129.9057, 124.313, 6.3576, 170.1765], [168.3478, 2.0404, 540.2286, 67.1976, 95.0451], [139.3737, 152.8571, 54.7545, 92.4028, 38.2963, 14.9528, 0.0, 1.0, 141.8824], [167.9643, 62.2609, 52.7828, 289.8286, 44.3353, 73.2361, 19.6667, 26.1509, 51.7478, 5.1007, 42.9706], [176.8838, 124.2857, 7.4671, 176.9688, 207.1852, 77.6226, 73.0609, 55.0868, 375.5588], [86.5385, 6.5572, 11.2167, 75.1569, 0.0984, 15.183, 80.8699, 74.6714, 46.663, 66.7273, 255.8286, 46.1497, 120.0521, 3.5, 23.3679, 0.5304, 22.5729, 85.1176], [306.098, 267.5902, 5.0458, 2.3767, 35.6, 33.4674, 56.8384, 1102.9714, 42.4371, 223.9583, 0.0, 0.4245, 0.0, 1.0972], [64.5692, 8.7313, 238.1167, 192.0588, 29.6393, 31.1503, 32.7842, 216.5714, 54.9022, 29.7929, 620.8, 52.9341, 120.0868, 30.5, 63.5283, 49.487, 23.6771, 533.7353]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

