created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Laddimus", "Squishy Jellyfish", "St\u00e1rless", "Igh Homura", "Elvezio Figone", "Drac Tepes", "Sakis Ranger", "Jimbo The Pleb", "Vee Usagi", "Scarlet Merc\u00fcry", "Drevarr Moonwillow", "Sister Elon\u00edth", "Grasszanine", "Whip \u00d1 Sl\u00e0pper", "Lady Fluffs", "Mother Ship", "Fyshaye"];
const professions = ["Tempest", "Firebrand", "Spellbreaker", "Tempest", "Virtuoso", "Scourge", "Druid", "Berserker", "Scourge", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Druid", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 1.1846, 0.0, 0.0149, 0.0], [0.0923, 0.0, 0.0, 0.1828, 0.1161, 0.0143, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0676, 0.1418, 0.0164, 0.0, 0.1791], [0.1154, 0.0455, 0.0, 0.0215, 0.0, 0.0143, 0.0165, 0.0, 0.0714, 0.0, 0.0, 0.0773, 0.0638, 0.0, 0.0167, 0.0, 0.1642, 0.0517, 0.0755, 0.075, 0.4615, 0.0, 0.097, 0.0], [0.375, 0.5672, 1.5882], [0.087, 0.2979, 0.1579, 0.0, 0.0, 0.2687, 0.0], [0.0099, 0.0923, 0.0758, 0.0, 0.1075, 0.0714, 0.0429, 0.0413, 0.0645, 0.0, 0.0, 0.125, 0.0435, 0.0426, 0.1349, 0.0, 0.1343, 0.0, 0.0377, 0.075, 0.1538, 0.0625, 0.0448, 0.1176], [0.0, 0.5439, 0.8148, 1.375, 0.1779, 0.18, 0.0891], [0.0, 0.0, 0.1579, 0.0, 0.1481, 0.0781, 0.0192, 0.07, 0.0693, 0.0308, 0.2273, 0.0, 0.2151, 0.0893, 0.0857, 0.0661, 0.0, 0.2143, 0.0625, 0.5, 0.1304, 0.234, 0.1053], [0.0725, 0.0, 0.0351, 0.0, 0.0, 0.25, 0.0385, 0.08, 0.0, 0.0462, 0.1515, 0.0, 0.1075, 0.1339, 0.0143, 0.0744, 0.0108, 0.0, 0.0, 0.175, 0.1643, 0.1986, 0.0164, 0.0167, 0.0, 0.194, 0.0, 0.0, 0.0, 0.2462, 0.125, 0.0672, 0.2941], [0.0, 0.0, 0.0, 0.0, 0.1406, 0.0144, 0.06, 0.0693, 0.1154, 0.2121, 0.0, 0.5054, 0.1518, 0.1857, 0.1736, 0.0215, 0.2143, 0.0, 0.35, 0.1063, 0.1844, 0.1151, 0.0, 0.0, 0.1343, 0.0, 0.1226, 0.025, 0.1846, 0.0, 0.0896, 0.6471], [0.1256, 0.0, 0.3684, 0.12, 0.5185, 0.375, 0.0817, 0.13, 0.297, 0.2923, 0.2424, 0.0, 0.2903, 0.2054, 0.2857, 0.1983, 0.0, 0.75, 0.0, 0.6], [0.963, 0.375, 0.0673, 0.055, 0.0, 0.1231, 0.197, 0.0303, 0.3118, 0.0982, 0.0, 0.1157, 0.0753, 0.4643, 0.375, 0.0725, 0.227, 0.1382, 0.1833, 0.0, 0.1716, 0.0943, 0.0, 0.4, 0.0, 0.0672, 0.3529], [0.0, 0.1442, 0.06, 0.099, 0.3462, 0.3182, 0.0909, 0.5591, 0.3661, 0.0143, 0.2149, 0.043, 0.1786, 0.0, 0.1, 0.1932, 0.2908, 0.3454, 0.0333, 0.5522, 0.0, 0.0283, 0.1, 0.5692], [0.3769, 1.1667, 0.1818, 1.3011, 0.625, 0.1714, 0.2314, 0.1075, 0.6429, 0.0, 0.65, 0.6957, 0.4468, 0.0164, 0.0, 1.1343, 0.5472, 0.7, 1.4, 0.3125, 0.4104, 0.2353], [0.2, 0.4976, 0.0526, 1.0351, 0.0, 0.4444, 1.3906, 0.2933, 0.34, 0.1881, 2.1364, 0.2424, 2.3011, 0.8393, 0.5429, 0.7273, 0.5054, 1.5357, 1.325], [1.0769, 0.7273, 1.6022, 0.8214, 0.0143, 0.5289, 0.4086, 1.2143, 0.0, 0.7, 0.9227, 0.617, 0.727, 0.1833, 1.2537, 0.0, 0.4057, 0.725, 1.3231], [0.9324, 1.2624, 1.2533, 1.9254, 0.0, 0.5943, 1.1, 1.7077, 2.375, 1.5075, 1.2647]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

