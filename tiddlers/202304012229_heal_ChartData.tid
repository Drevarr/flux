created: 20230401222944000
creator: Drevarr
modified: 20230705163523966
modifier: drevarr
tags: ChartData
title: 202304012229_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Johosh The Great", "Tribal S", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Firebrand", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[614.3117, 162.1462, 433.0, 1361.0195, 107.1765, 357.3094, 383.25, 297.2762, 23.3023, 528.4299, 249.0, 10.8864, 464.0877, 0.0, 103.973, 65.4054, 426.4048, 5.2, 358.0909, 4.8235, 556.3372, 108.8571, 505.6607, 3.4634, 0.6, 102.8958, 90.1756, 998.6353], [631.0649, 281.6769, 454.1948, 894.9935, 641.8824, 434.0144, 165.9265, 158.3333, 22.2558, 474.2336, 806.8103, 652.5802, 400.2727, 640.1667, 15.1481, 216.5946, 361.1081, 410.881, 331.1818, 39.0882, 613.0477, 103.2418, 88.7179, 518.6786, 102.1707, 494.3333, 87.9792, 378.9771, 1219.5059], [917.9004, 442.5943, 236.3182, 417.3876, 651.7941, 811.0791, 517.3529, 206.8, 224.4186, 1357.5794, 1598.4198, 269.0341, 888.2895, 66.5185, 50.7568, 62.4595, 526.7738, 165.9333, 502.6198, 215.9559, 1365.1036, 526.044, 54.9744, 954.9643, 200.2, 337.0208, 377.0153, 2284.8824], [1111.329, 801.5189, 1131.9286, 2202.8502, 772.2647, 1276.1079, 759.7206, 628.4, 613.5814, 1275.4299, 1644.2414, 142.7407, 758.2386, 1758.2018, 0.0, 351.0811, 300.2973, 1063.3214, 427.9, 1303.9174, 235.8382, 1570.6102, 688.1758, 1050.1964, 461.878, 677.2333, 557.4792, 467.6718, 2156.2706], [2170.2641, 749.5896, 1073.1558, 3185.1857, 1207.1765, 1260.6403, 550.3824, 696.6762, 756.186, 1721.6449, 2842.8793, 3485.6667, 617.125, 1697.6491, 107.4537, 755.1622, 627.7027, 1299.256, 1053.5702, 155.5588, 1936.7138, 758.7033, 383.4872, 2005.2143, 192.561, 778.4667, 809.625, 897.9924, 3347.2941]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

