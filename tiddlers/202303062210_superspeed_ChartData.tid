created: 20230306221045000
creator: Drevarr
modified: 20230705163521401
modifier: drevarr
tags: ChartData
title: 202303062210_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Nova", "Klee Flamepumpkin", "Tootsie Pop Bringer", "Estryl", "Mac Aaroni", "Zadie Miststep", "Tegan Parker", "Cerys Fireblade", "Arcanophage Farra", "Smol Daddy Tika", "Mike The Archmagus", "My Birthday Girl", "Xanvias Tseli", "Cat Wigglebooty", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Weaver", "Tempest", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Berserker", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Berserker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0.234, 0.321, 0.256, 0.386, 0.271, 0, 0.201, 0.418, 0.491, 0.061, 0.573, 0, 0.116, 0.085, 1.222, 0, 0.182, 0.395, 0.216, 1.275, 0, 0, 0.338, 0.335, 0.602, 0, 0.174, 0.159], [0.763, 0.533, 0.491, 0.071, 0, 0.972, 0.084, 0.982, 0.877, 1.042, 0.647, 0, 0.636, 0.43, 0.365, 0.453], [0.705, 0.109, 0, 0.204, 0, 0, 0.821, 0, 1.038, 0.101, 0, 0.719, 1.458, 0.479, 0.625, 0, 0.207, 0.806, 0.409, 0, 0.159, 0.173, 0.414, 0.329, 0.374, 0.377, 0.085, 0.239], [0.265, 0.364, 0, 0.701, 0.342, 0.757, 0.541, 0, 0.636, 0, 0.719, 0.438, 0.567, 0, 0.792, 0, 0.683, 0, 0.531, 0.515, 0.461, 0.48, 0.344, 0.401, 0.513, 0.263], [0.54, 0.436, 0, 0.599, 0, 0.525, 0.176, 0.56, 0.418, 0, 0.45, 0.777, 0.806, 0.535, 0.738, 0.485, 0, 0.432, 0.475, 0.595, 0, 1.796, 0.45, 0.042, 0.617, 0, 0.634, 0.483, 0.368, 0.781, 0.215, 0.375, 0.492, 0.239], [0.455, 0.382, 0, 0.536, 0, 0.447, 0.233, 0.319, 0.403, 0, 0.404, 1.06, 0.458, 0.891, 0.736, 0.261, 0.564, 0.336, 0.255, 0.599, 0.517, 0.614, 0, 0.633, 0.733, 0.491, 0.655, 0.48, 0.603, 0.604, 0.475], [0.023, 0.855, 0, 0.472, 0, 0.344, 0.274, 0.234, 0.319, 0.606, 0, 0.46, 1.24, 0.807, 0.502, 0.677, 0.374, 0.43, 0.711, 0.695, 0.6, 0.537, 0.647, 0, 0.637, 0.768, 0.61, 0.623, 0.429, 0.531, 0.673, 0.203], [0.643, 1.277, 0, 0.676, 0, 0, 0.456, 0.39, 0.935, 0.744, 0.322, 0.344, 0.471, 0.589, 0.67, 0.363, 0.045, 0.36, 1.03, 0.778, 0, 0.749, 0.321, 0.086, 0, 1.003, 0.575, 0.409, 0.823, 1.013, 0.503, 0.7, 0.464], [0.455, 1.211, 0, 0.403, 0, 0.124, 0.386, 0.977, 0.672, 0, 0.767, 0.487, 1.01, 0.893, 0.513, 0.623, 0.36, 0.476, 0.567, 0, 0.75, 1.31, 0.941, 0, 1.062, 0.576, 0.87, 1.097, 0.359, 0.251, 0.593, 0.265], [0.62, 1.207, 0.16, 0.701, 0, 0.392, 0.863, 0.39, 0.019, 0.75, 0.322, 0.619, 0.322, 0.084, 0.893, 0.41, 0.506, 0.808, 0.553, 0.743, 1.086, 3.001, 0.749, 0.89, 0.654, 0, 0.531, 0.54, 0.819, 0.548, 0.717, 0.452, 0.647, 0.266], [0.703, 0.874, 0.42, 0, 0.682, 0.753, 0.701, 0.603, 0.607, 0.193, 0.456, 0.391, 0.808, 0.691, 0.492, 0.269, 1.14, 0.954, 1.341, 0.17, 0, 0.713, 0.531, 0.82, 1.274, 0.955, 0.852, 0.595, 0.986, 0.896, 0.538, 0.875, 0.498], [0.853, 0.109, 0.526, 0, 0, 1.593, 0.059, 1.159, 0, 0, 0.076, 2.494, 1.312, 0.961, 0.415, 1.078, 0, 1.186, 0.545, 0.87, 0, 0.543, 0.534, 0.942, 0, 0.677, 0.863, 1.118, 1.023, 0.188, 0.132, 0.683, 0.315], [0.643, 1.093, 0, 0.877, 0, 0.383, 0.457, 0.681, 0.951, 0.59, 0, 0.773, 1.26, 1.28, 0.893, 1.23, 0.634, 0, 0.539, 1.119, 0.846, 0, 4.982, 0.938, 0.809, 0.929, 1.062, 0.509, 1.074, 1.097, 0.752, 0.88, 1.004, 0.846], [0.952, 1.321, 0.632, 1.507, 0.558, 1.107, 1.405, 0.361, 1.011, 0.314, 0.586, 0.684, 0.833, 1.246, 0.699, 0.24, 0.287, 0.94, 0.573, 1.147, 0.736, 1.276, 0, 1.653, 1.474, 1.208, 1.142, 1.312, 1.181, 1.331, 1.374, 1.053], [0.942, 1.383, 0.882, 1.156, 0, 1.373, 1.23, 1.24, 1.831, 1.258, 0.578, 1.23, 1.773, 1.463, 1.496, 0.49, 0.602, 1.079, 1.3, 1.072, 2.351, 0, 1.235, 1.717, 1.54, 1.278, 1.275, 1.382, 0.982, 1.467, 0.999, 1.404, 1.414, 0.852], [1.442, 1.283, 0.321, 1.168, 0.28, 0.919, 1.721, 0.818, 1.117, 1.818, 0.964, 0.998, 1.747, 1.771, 1.629, 1.742, 0.816, 0.573, 1.408, 1.123, 1.569, 1.95, 1.625, 1.264, 1.806, 0.209, 1.915, 2.251, 1.641, 1.885, 1.144, 1.245, 1.407, 0.994]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

