created: 20230510220110000
creator: Drevarr
modified: 20230705163529458
modifier: drevarr
tags: ChartData
title: 202305102201_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Koralia Danai", "Demon Sekhmet", "Eibh\u00ebar", "Johoshua", "Smol Gluvs", "Tika Fiery", "Lucas Ryn", "Oops All Beans", "Xanvias Einzbern", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Tempest", "Firebrand", "Spellbreaker", "Chronomancer", "Scrapper", "Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[380, 1045, 250, 359, 394, 475, 485, 314, 874, 136, 343, 470, 360, 233, 402, 473], [412, 524, 457, 376, 430, 415, 836, 270, 705, 187, 321, 504, 398, 293, 794, 430], [257, 1013, 513, 632, 485, 744, 792, 289, 196, 220, 292, 405, 424, 216, 896, 797], [231, 1939, 458, 1543, 259, 484, 987, 267, 754, 161, 239, 522, 468, 403, 698, 867], [429, 1043, 266, 424, 418, 474, 498, 248, 425, 180, 240, 368, 299, 215, 608, 562], [518, 1431, 344, 472, 460, 304, 735, 295, 609, 233, 207, 508, 364, 333, 380, 392], [340, 1603, 257, 339, 552, 595, 375, 409, 702, 190, 244, 390, 333, 225, 965, 545], [517, 251, 381, 380, 622, 529, 511, 642, 145, 318, 425, 724, 220, 608, 513], [176, 775, 249, 416, 258, 407, 668, 238, 196, 177, 426, 510, 330, 325, 521], [328, 925, 325, 348, 310, 534, 732, 176, 154, 293, 337, 486, 241, 895, 438], [305, 507, 255, 364, 327, 311, 462, 153, 295, 287, 206, 319, 296, 238, 515, 380], [234, 807, 230, 235, 338, 193, 329, 245, 163, 204, 336, 266, 170, 331, 345]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

