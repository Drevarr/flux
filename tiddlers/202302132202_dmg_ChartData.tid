created: 20230213220222000
creator: Drevarr
modified: 20230705163519199
modifier: drevarr
tags: ChartData
title: 202302132202_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Arcanophage Farra", "Jupi Jupi Jupi", "Kira Dragonblaze", "Newtype Khan", "Grasszanine", "Nelliel T", "Smol Gluvs", "Ace Hammers", "Dark Sidiuz", "Rina Of Theros", "Smol Daddy Tika", "Elonith Tenebris", "Skye Nightroad", "Jeckyll Mbs", "Whose Guardian", "Legacy Of Mathus", "Xyntharos", "Sassy Daddy Demon", "Lord Erin The Wise", "Be\u00eb", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Spellbreaker", "Dragonhunter", "Dragonhunter", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Scourge", "Scourge", "Berserker", "Scourge", "Scrapper", "Berserker", "Dragonhunter", "Berserker", "Vindicator", "Vindicator", "Weaver", "Scourge", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.5312, 216.98, 319.8902, 1460.4054, 742.0348, 123.2655, 246.25, 1056.7, 13.9358], [40.6063, 183.5372, 304.1341, 420.5946, 580.8, 67.7273, 19.2, 812.8875, 167.6899, 304.7167, 266.3514], [525.1625, 607.5699], [228.875, 375.0145, 935.8415, 9.05, 2023.4054, 663.4348], [85.4062, 205.4664, 138.8293, 0.0, 959.5946, 500.3043, 125.5091, 123.15, 714.325, 179.6425, 461.2667, 101.8216], [101.8812, 211.9927, 284.9512, 692.6216, 596.7304, 130.1164, 217.075, 720.0375, 197.9916, 589.6833, 203.2054], [141.1219, 391.0345, 956.8537, 2613.7027, 346.8696, 95.1345, 150.25, 1415.1375, 157.0112, 678.9333, 300.2486], [155.8469, 207.6407, 792.7561, 11.9, 2505.2162, 916.7826, 204.1418, 159.875, 1059.275, 226.067, 642.3667, 353.0], [159.3406, 357.1016, 1299.1707, 2712.4054, 1030.2696, 139.2836, 203.875, 1356.0875, 45.2318, 1116.55, 227.0973], [280.5375, 485.6715, 1264.2683, 2327.2432, 1125.1739, 123.4145, 118.0, 1230.425, 375.2165, 722.6, 324.3514], [257.9875, 479.5191, 1297.3902, 236.8, 2315.1622, 731.1913, 366.9309, 396.625, 1291.8, 409.7416, 1041.6, 522.4757], [261.8125, 433.4574, 728.2805, 91.65, 1683.2162, 20.6087, 315.7891, 255.325, 2028.5625, 673.0782, 1435.15, 1156.1243], [0.0, 1569.8171, 110.25, 3652.7838, 1167.3739, 532.1782, 576.15, 1979.0125, 780.3855, 2217.6833, 842.5838], [193.275, 651.2359, 1090.2805, 6.4, 4153.9189, 1418.0, 405.7382, 728.225, 3194.2375, 538.0628], [196.2844, 606.3575, 966.122, 175.2, 3394.4324, 2373.1478, 0.0, 216.75, 1445.8125, 675.9804, 1080.75, 621.5405], [331.175, 722.1978, 1457.2561, 3284.8919, 1528.4261, 280.1164, 752.3, 1096.15, 501.3994, 1410.4833, 766.2595], [528.9344, 752.1633, 2444.9268, 61.6, 1701.2432, 0.0, 741.68, 331.375, 2040.925, 510.6159, 1150.2833, 637.8324], [257.7688, 565.0417, 1598.9634, 592.15, 2022.7568, 2176.513, 319.1164, 414.15, 1466.6375, 854.5475, 1460.05, 639.6108], [300.3531, 548.0889, 2198.878, 0.0, 5348.0, 1104.3913, 361.5636, 569.125, 3397.775, 595.8953, 1460.8, 728.9243], [310.7656, 765.1724, 2699.4756, 234.8, 4073.5405, 80.8348, 569.6618, 1111.075, 2911.2, 928.4008, 815.5667, 940.1784], [456.3531, 806.4047, 1816.5976, 99.55, 4135.027, 1946.5478, 557.0182, 116.125, 2418.0375, 849.7947, 2487.2, 812.7838], [396.7, 989.5626, 1425.9512, 593.9, 5108.9459, 4477.9652, 555.5455, 0.0, 3146.075, 1012.4651, 3784.3167, 1343.4595], [436.3656, 1144.3575, 2559.2073, 211.25, 8103.2162, 4670.6174, 887.9564, 300.55, 2294.8625, 990.6271, 3766.9667, 1488.5838]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

