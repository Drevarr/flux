created: 20230222220539000
creator: Drevarr
modified: 20230705163519822
modifier: drevarr
tags: ChartData
title: 202302222205_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Spreadflamesoflight", "Etchery", "Oo Dads Mad", "Pixil Ranger", "Tootsie Pop Bringer", "Skye Nightroad", "Mike The Archmagus", "Tribal S", "Zadie Miststep", "Black Raspberry Pie", "Blanco Padre Guard", "Zaylen Harker", "Primal Clone", "Fribble Bibble", "Koralia Danai", "Ryvalia Fazebringer", "Cat Wigglebooty", "Mac Aaroni", "Bella Sassy", "Sygaldry Verdandi", "Venomina The Siren", "Eibh\u00ebar", "Kiloak", "Kosair", "K\u00e2 \u00d4tik R\u00e6j", "Drevarr Moonwillow", "Ark Darkness", "Mustache Bloodclaw", "Newtype Khan", "Ravioli Fetabringer", "Sumatra Satyricon", "Acme Corporation", "Forever Broke", "Dark Sidiuz", "Arcanophage Farra", "Smol Gluvs", "Sheep Poh", "Husky Guard", "Ace Hammers", "Kmpek", "Rina Of Theros", "Panther B Me", "Smol Daddy Tika", "\u00c1rk\u00e1ntor", "Elonith Tenebris", "Jeckyll Mbs", "Legacy Of Mathus", "Lord Erin The Wise", "My Birthday Girl", "Xyntharos", "Sassy Daddy Demon", "Sofya De Meme", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Xanvias Tseli", "One Whole Keg"];
const professions = ["Dragonhunter", "Scrapper", "Spellbreaker", "Druid", "Scrapper", "Scrapper", "Tempest", "Druid", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Chronomancer", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Herald", "Spellbreaker", "Firebrand", "Soulbeast", "Scrapper", "Reaper", "Scourge", "Spellbreaker", "Scourge", "Catalyst", "Dragonhunter", "Vindicator", "Vindicator", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker", "Berserker", "Weaver", "Scrapper", "Vindicator", "Vindicator", "Catalyst", "Berserker", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [0.0, 39.1892], [0.0, 216.0], [11.5098, 16.3333, 32.383], [0.0, 0.0, 0.0, 48.7326, 0.0, 20.2373, 2.7125, 0.0, 7.0026, 0.25, 4.6216, 8.8298], [94.0233, 326.1892], [0.0, 6.9459, 4.2273, 10.5233, 0.0, 23.7119, 16.8375, 21.525, 9.291, 14.1814, 4.0721, 23.5638], [21.3488, 23.4865, 35.2424, 10.2442, 0.0, 4.4237, 7.45, 39.8125, 18.4286, 14.598, 28.991, 15.117], [0.0, 1.7297, 30.5455, 126.1744, 6.7697, 9.661, 28.1875, 85.9625, 19.6799, 8.7892, 6.6547, 41.5213], [5.6279, 88.2973, 18.0152, 9.5233, 5.9803, 26.9831, 12.925, 47.325, 54.1746, 5.9461, 17.0511, 33.7872], [0.0, 0.0, 14.5303, 1.8953, 7.5526, 3.0424, 59.9875, 0.0, 72.4921, 0.0, 15.4234, 63.0957], [7.4419, 20.4324, 3.1395, 6.2039, 8.4661, 21.4625, 0.0, 40.5899, 42.549, 25.021, 93.6383], [0.0, 19.7297, 26.8788, 27.9767, 2.5526, 42.1441, 31.1125, 58.225, 45.873, 15.2843, 36.8168, 16.4043], [0.0, 17.6757, 37.803, 17.7209, 0.0, 45.7542, 56.0375, 83.0, 31.045, 22.0049, 30.2132, 67.9255], [0.0, 5.8378, 7.5455, 4.3605, 0.0, 2.4237, 8.8375, 39.075, 77.8466, 34.5441, 8.1351, 181.0532], [42.3256, 1.3784, 47.9545, 100.314, 11.4211, 13.5, 21.7375, 105.8, 65.2513, 33.1225, 30.2312, 96.3511], [0.0, 41.6216, 71.9697, 21.1512, 1.3355, 1.8305, 27.6125, 41.6, 69.9815, 32.9853, 44.0841, 177.8298], [11.5349, 16.0, 149.5152, 33.9186, 3.2632, 43.1356, 23.3, 86.4, 39.6825, 15.3627, 76.9489, 88.3723], [0.0, 0.0, 9.6667, 40.7209, 13.8947, 28.9322, 34.0625, 92.9375, 65.0212, 22.4902, 33.6637, 216.5213], [0.0, 31.7297, 144.1212, 46.3023, 0.0, 51.4576, 50.2375, 42.775, 52.7593, 88.2059, 32.4595, 52.6277], [9.5, 67.2093, 1.0724, 47.8136, 58.6375, 105.6125, 49.2513, 50.6765, 68.2883, 76.266], [12.7674, 31.3784, 10.5758, 43.6977, 0.25, 38.7627, 48.1375, 159.85, 50.5979, 19.9118, 80.3303, 128.2766], [143.8636, 21.0698, 36.0461, 21.0678, 61.0, 66.3125, 80.4471, 43.6422, 44.8318, 125.6915], [14.2791, 0.0, 48.9848, 76.5233, 3.8224, 53.3729, 10.3125, 111.3375, 74.8095, 42.2941, 43.5706, 213.4043], [1112.4787], [58.0758, 84.3605, 0.0, 46.8136, 117.1625, 288.125, 74.3201, 59.3431, 45.4745, 111.0957], [155.1061, 67.2791, 1.4145, 19.8814, 28.3375, 87.5375, 84.5926, 186.098, 49.009, 111.8723], [223.4242, 236.9186, 66.0592, 62.2288, 350.5625, 382.425, 187.3519], [22.6744, 111.2432, 133.1818, 218.093, 0.0, 50.0847, 87.2, 291.4125, 171.0291, 100.348, 104.0781, 173.8617], [0.0, 388.5135, 57.4394, 41.9186, 50.6645, 88.1017, 45.7625, 52.1125, 176.0079, 94.1765, 43.7087, 615.8723], [154.1395, 74.0541, 186.2879, 108.0349, 114.6382, 146.6441, 233.4, 164.3875, 35.1825, 302.4265, 192.2793], [0.0, 208.9803, 628.2627, 336.5, 4.3875, 327.127, 59.5049, 214.7748, 0.0], [571.9242, 537.2093, 257.1382, 571.1525, 899.25, 1323.425], [71.4884, 0.0, 779.9875, 209.7169, 434.1912, 221.0631, 1072.8298], [55.8837, 38.1081, 505.6515, 344.4186, 0.0, 228.8051, 414.95, 592.025, 330.7989, 111.1029, 124.994, 549.0319], [44.6512, 0.0, 375.0349, 40.0197, 49.5424, 263.8375, 790.625, 439.2619, 329.3529, 200.1201, 671.4894], [1305.7108, 1087.3664], [246.8256, 129.0, 245.0339, 647.1, 372.7125, 500.3201, 383.4118, 349.6577, 1050.1383], [67.2326, 112.9459, 404.7121, 307.2326, 23.2895, 199.2797, 346.5625, 1079.025, 645.1164, 261.4951, 345.0901, 1098.7021], [407.3485, 470.1512, 33.875, 81.2458, 736.7375, 1250.0375, 623.6561, 744.1569, 233.6907, 616.0532], [148.7442, 332.9459, 770.7121, 535.9302, 128.6908, 415.8136, 927.75, 1334.775, 727.6296, 423.6127, 329.7838, 1378.8404], [105.3488, 284.2162, 719.0909, 607.4884, 259.9145, 279.4407, 936.325, 1418.175, 697.5952, 510.8333, 417.4294, 1530.0106], [55.5814, 616.1622, 1320.6212, 492.814, 155.9737, 223.7712, 820.9, 469.0, 1046.463, 533.0686, 1009.3994, 1310.2447], [77.3023, 404.1081, 568.3939, 394.6163, 428.0395, 386.4322, 1052.725, 1757.825, 1075.4815, 832.4118, 454.7477, 1621.6489], [245.3256, 1059.5135, 1716.9848, 310.8605, 124.6974, 733.8983, 1115.4125, 886.1, 1070.4709, 761.8235, 565.027, 1253.0213], [904.0698, 465.8378, 536.3837, 361.3355, 301.661, 1100.6125, 1857.6625, 959.4286, 555.6078, 790.1622, 2332.4894], [314.3953, 602.2703, 330.1212, 615.6977, 334.6579, 533.6864, 792.625, 1057.75, 1514.6958, 669.1176, 620.9189, 1463.234], [0.0, 850.7027, 863.2424, 717.7442, 680.4539, 403.5339, 1467.6375, 1549.7125, 891.8307, 1111.4363, 722.8709, 881.234], [0.0, 411.4865, 752.197, 390.8837, 479.5395, 824.9492, 1906.1875, 1567.375, 1069.5344, 983.2304, 669.4174, 958.9149], [172.4651, 885.9459, 77.4091, 987.6977, 144.5921, 499.2797, 1135.5625, 226.125, 1485.8624, 648.4853, 783.6967, 2052.8191], [664.814, 404.0, 1478.4848, 1039.8605, 221.5724, 706.7034, 1341.5, 1730.2125, 1277.6005, 626.0392, 921.997, 1933.4362], [1087.6061, 969.0698, 348.5658, 446.1695, 1499.5625, 964.3875, 1483.4021, 1547.2843, 789.6607, 1217.0532], [234.2093, 271.973, 690.4848, 1134.6395, 16.6645, 274.6102, 2187.825, 2997.875, 2016.963, 966.9167, 1001.8649], [872.6977, 1431.1351, 1021.3485, 1083.8256, 425.3882, 1026.4746, 2102.5125, 1254.0625, 1693.5291, 1036.9314, 852.018, 3684.2553], [379.8605, 1312.2703, 1092.2879, 1225.1395, 550.3553, 829.7712, 562.025, 2617.525, 1727.3466, 1712.4951, 874.997, 4213.1064], [197.1628, 1149.4865, 2153.1061, 227.0526, 653.7373, 2703.475, 2833.075, 2444.0503, 1753.25, 1183.5075, 2043.8936]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

