created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Sr Conrad", "Kylo Milan", "Bee Nemesis", "Govinda Ektar", "Ax Axun", "Illusionist Zeroo", "Sofya De Nova", "Sienna Veil", "Dalveirric", "Rina Of Theros", "Mordelon The Tiger", "Roderik Manloy", "Yummy Kiwi", "Darth Sammy", "Darks Na", "Greg The Knight", "Forever Dreaming", "Xanvias Einzbern", "Narciza", "Sygaldry Verdandi", "Aira Draugr", "Vee Usagi", "Rhaevynn", "Daphne Agla\u00e9", "Jamaass", "Tootsie Pop Rocks", "Hyde En Sikh", "Darkandshadow", "Kurtis Ruhr", "Belvyn Brightblade", "Lord Erin The Wise", "Blaize Harlot", "Loganlek", "Be\u00eb", "Mort\u00e4rion", "Mistwalker Cael", "Oo Dads Mad", "Rahani Sunray", "Belladonna Horror", "Koralia Danai", "Crusader Siolith", "Talia The Pestilent", "Drevarr Moonwillow", "Venomina The Fierce", "Morv\u00e4rth", "Sub Train", "Gabe Malhorn", "Tegan Parker", "Glorious Gluvs", "Bearah", "Newtype Khan"];
const professions = ["Spellbreaker", "Chronomancer", "Spellbreaker", "Vindicator", "Vindicator", "Chronomancer", "Tempest", "Renegade", "Soulbeast", "Reaper", "Warrior", "Renegade", "Firebrand", "Reaper", "Dragonhunter", "Firebrand", "Scourge", "Berserker", "Chronomancer", "Firebrand", "Herald", "Reaper", "Reaper", "Reaper", "Reaper", "Scrapper", "Chronomancer", "Virtuoso", "Vindicator", "Firebrand", "Weaver", "Scourge", "Spellbreaker", "Reaper", "Scrapper", "Herald", "Berserker", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Spellbreaker", "Reaper", "Firebrand", "Firebrand", "Tempest", "Berserker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[19], [1, 7, 10, 1], [11, 12], [0, 1, 2, 0, 1, 3, 0, 1, 0, 0, 5, 3, 8], [5, 1, 3, 0, 0, 2, 1, 1, 3, 0, 0, 0, 0, 4, 1, 4], [4, 2, 4, 0, 5, 3, 2, 5], [0, 6, 16, 2, 1], [3, 4, 18], [4, 21], [5, 0, 1, 0, 3, 1, 1, 0, 2, 0, 0, 0, 2, 8, 0, 3], [7, 1, 7, 10, 1], [11, 4, 2, 0, 2, 5, 0, 4], [14, 2, 1, 1, 4, 5, 2], [11, 18], [13, 0, 3, 0, 2, 0, 0, 4, 1, 0, 0, 0, 0, 3, 4], [12, 1, 2, 2, 6, 4, 1, 2], [2, 3, 2, 1, 2, 5, 15], [8, 1, 2, 0, 1, 2, 1, 0, 1, 2, 0, 0, 4, 6, 3, 1], [5, 7, 2, 2, 7, 3, 7], [5, 0, 1, 2, 3, 2, 0, 1, 0, 1, 0, 0, 1, 5, 10, 2, 3], [25, 4, 2, 1, 4, 0, 0, 0], [8, 1, 2, 1, 1, 5, 1, 2, 2, 4, 3, 1, 0, 1, 6], [15, 2, 4, 0, 2, 4, 1, 2, 2, 3, 0, 0, 4], [9, 1, 3, 0, 2, 0, 1, 3, 0, 2, 3, 0, 3, 2, 11, 1, 0], [2, 7, 10, 4, 4, 5, 5, 0, 6, 0], [9, 1, 3, 0, 2, 1, 1, 0, 3, 1, 0, 5, 3, 10, 3, 2], [13, 1, 3, 0, 1, 3, 1, 1, 3, 2, 1, 2, 2, 10, 2, 4], [1, 1, 5, 10, 7, 10, 16], [42, 11], [23, 3, 4, 1, 7, 8, 0, 8], [3, 4, 4, 2, 4, 3, 1, 4, 9, 5, 4, 11], [17, 4, 3, 0, 6, 2, 2, 5, 3, 7, 5, 2, 4], [32, 13, 21], [10, 1, 3, 1, 1, 2, 0, 1, 1, 2, 0, 0, 3, 9, 20, 5, 8], [4, 0, 2, 0, 5, 4, 1, 5, 2, 5, 0, 2, 2, 14, 3, 18], [15, 1, 5, 1, 5, 5, 0, 4, 2, 1, 1, 0, 0, 9, 12, 2, 10], [16, 2, 3, 0, 8, 4, 0, 5, 3, 4, 1, 2, 2, 11, 19], [10, 0, 25, 19, 32], [2, 8, 4, 2, 8, 2, 10, 8, 2, 5, 14, 25], [14, 5, 1, 0, 7, 3, 6, 1, 3, 5, 1, 1, 9, 25, 4, 7], [12, 4, 1, 0, 4, 6, 0, 6, 3, 5, 3, 0, 3, 6, 25, 4, 11], [9, 6, 1, 8, 18, 8, 14, 29], [13, 2, 3, 1, 5, 3, 1, 7, 3, 4, 3, 1, 1, 7, 17, 8, 15], [5, 2, 2, 0, 6, 18, 38, 5, 21], [31, 2, 0, 0, 4, 5, 5, 4, 4, 4, 0, 3, 12, 9, 8, 11], [19, 3, 6, 2, 9, 3, 1, 5, 1, 3, 2, 0, 0, 7, 23, 6, 13], [20, 3, 2, 2, 7, 9, 2, 4, 0, 6, 3, 4, 6, 5, 22, 5, 8], [24, 9, 5, 2, 11, 8, 2, 3, 9, 2, 0, 0, 10, 23, 10, 22], [21, 3, 8, 7, 11, 5, 9, 4, 1, 6, 23, 48, 21, 21], [32, 8, 6, 3, 8, 10, 8, 5, 6, 7, 2, 6, 17, 32, 16, 28], [30, 6, 5, 2, 9, 7, 0, 11, 5, 6, 8, 2, 9, 16, 35, 19, 29]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

