created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Myuros", "Zefirokai", "Belvyn Brightblade", "Darkened Sword", "Gamora Titus", "Venomina The Fierce", "Newtype Khan", "Glass Tingle", "Sub Train", "Crusader Siolith", "Bella Sassy", "Koralia Danai"];
const professions = ["Harbinger", "Catalyst", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[182.6062, 0.0], [0.0, 22.968, 0.0, 24.2802, 0.0, 14.9266, 0.0, 46.992, 0.0, 82.4943, 45.1], [8.6768, 134.2352, 70.7995, 24.3243, 53.6085, 13.9339, 6.7954], [0.0, 0.0, 25.4945, 22.3872, 38.3473, 25.7294, 25.4169, 12.8097, 50.8297, 9.5634, 71.6144, 12.8445, 0.0, 28.5755, 65.8055, 129.4403], [42.8032, 9.3652, 31.552, 11.0785, 40.6737, 40.7264, 1.575, 146.9472, 26.4286, 47.502, 6.2678, 32.5338, 111.6775], [42.8504, 136.3182, 85.8581, 61.9866, 60.8355, 30.3389, 10.6049, 9.7902, 9.5445, 44.352, 0.0, 12.6324, 12.7207, 49.4586, 67.8251, 12.7764, 12.6702, 25.6348, 45.675, 12.6781, 42.6629, 196.9744], [38.86, 100.2135, 82.3768, 60.4773, 61.1325, 39.8284, 28.5199, 0.0, 0.0, 59.0304, 0.0, 19.0648, 15.7844, 69.5632, 37.437, 0.0, 203.2747, 0.0, 38.367, 0.0, 0.0, 180.7944], [0.0, 64.5718, 67.5206, 50.8248, 82.7145, 55.7357, 14.7919, 19.6098, 2.4499, 117.04, 29.4831, 10.9916, 28.9953, 43.8858, 57.4869, 43.029, 159.0666, 18.4549, 10.4992, 0.0, 31.1922, 163.2074], [46.3304, 117.1086, 96.5043, 84.24, 79.4475, 52.0806, 1.9734, 0.0, 49.8916, 87.7888, 0.0, 44.6635, 15.6619, 60.3333, 38.2985, 0.0, 143.2288, 35.7914, 62.6539, 0.0, 57.018, 226.1688], [63.1272, 219.2894, 75.819, 75.6405, 51.876, 32.2093, 9.8842, 11.9217, 50.0192, 73.1456, 17.9596, 24.8437, 33.5787, 52.3417, 116.7751, 2.0034, 169.5333, 26.6451, 53.9087, 13.9601, 74.9954, 212.0992], [68.7184, 211.189, 142.7325, 86.3109, 84.1995, 51.2054, 25.9802, 41.9979, 18.9103, 72.688, 31.9497, 26.3248, 58.2358, 66.3705, 149.043, 41.958, 225.1722, 49.2853, 77.3917, 17.8632, 84.5208, 313.0486], [65.0992, 290.5729, 125.2856, 80.0982, 107.118, 62.4796, 19.5967, 49.8918, 55.8633, 79.728, 0.0, 19.8924, 66.2015, 45.4918, 143.5606, 12.0204, 314.1393, 33.1575, 55.8088, 33.9316, 105.9864, 407.3149]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

