created: 20230415000841000
creator: Drevarr
modified: 20230705163525608
modifier: drevarr
tags: ChartData
title: 202304150008_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuuka Chou", "Stark Gandalf", "Tegan Parker", "High Sorcer Baradun", "Zadie Miststep", "Venomina The Siren", "Mac Chiato", "Elonith Primal"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25.056, 15.9318, 31.6571, 16.056, 55.6695, 15.9975, 31.878, 41.8209], [92.1895, 76.9014, 55.5386, 58.4347, 177.1778], [39.6144, 12.9258, 55.1565, 20.052, 99.2439, 0.0, 19.8706, 60.0438, 16.0524, 59.8428, 0.0, 166.049, 36.8129, 19.9849, 19.9566, 34.7774, 39.8776, 88.0771, 16.8216, 0.0, 35.38], [39.7872, 40.5059, 0.0, 18.648, 70.488, 28.08, 79.8013, 17.1741, 20.0304, 36.0286, 0.0, 155.8057, 34.925, 19.7475, 0.0, 79.6936, 157.8279, 55.5122, 19.1952, 25.8275, 107.9509], [36.4104, 76.2054, 60.099, 156.3448, 0.0, 63.0329, 59.7173, 19.7947, 138.0193, 179.3652, 156.244, 59.4948, 19.1608, 39.9722], [78.7536, 19.9148, 57.1032, 19.8, 79.3791, 20.0475, 39.9538, 78.66, 31.8708, 56.0786, 19.918, 158.6361, 31.9473, 37.3226, 88.1972, 110.2103, 118.9546, 77.9676, 52.8205, 35.0566], [71.2368, 33.4417, 54.0905, 19.836, 99.6444, 40.095, 57.5929, 77.349, 20.0304, 76.8968, 0.0, 94.7503, 39.9593, 39.6849, 54.9314, 19.9507, 156.8183, 178.8538, 35.7072, 56.3636, 69.1429], [78.476, 388.0316, 214.3223, 86.7752, 70.1518, 142.4891, 327.2657, 486.1111, 120.6924, 144.0558, 148.57]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

