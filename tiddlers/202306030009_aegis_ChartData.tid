created: 20230603000934000
creator: Drevarr
modified: 20230705163532949
modifier: drevarr
tags: ChartData
title: 202306030009_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Zadey Starbolt", "Drevarr Moonwillow", "Air One Com", "Pu Ella", "Gestern Yesteryear", "Tika Fiery", "Aronorf Xideliesi", "Koralia Danai", "Bella Sassy", "Sister Elon\u00edth"];
const professions = ["Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.3478, 1.9246, 3.8893, 25.5253, 0.0, 0.0, 0.0, 6.988, 28.4147, 3.2292, 21.1444, 32.8, 0.0, 0.0, 3.381, 29.0228, 33.7634, 9.9981, 0.0, 65.3453, 0.0, 33.8026, 34.7861], [0.0, 36.923, 108.1418, 1.1352, 0.0, 5.1269, 14.9176, 14.3985, 25.0263, 72.5135, 7.9376, 13.5994, 0.0, 41.055, 24.6985, 41.1061, 20.6793, 10.5851, 63.9744, 0.0, 14.4207, 54.6448], [0.0, 39.596, 5.5621, 40.9185, 11.1144, 0.0, 0.6142, 3.6179, 31.2179, 67.3647, 65.4437, 1.6072, 7.6388, 0.0, 33.4075, 41.3305, 26.6174, 25.6473, 5.3104, 61.2979, 1.1808, 31.1566, 85.699], [0.0, 24.6629, 0.0, 85.9288, 0.0, 0.0, 12.7121, 32.6195, 92.7498, 53.4446, 0.0, 19.5077, 67.137, 49.7297, 53.3003, 17.3259, 9.9079, 2.807, 0.0, 42.4683, 53.8451], [32.575, 76.7955, 90.0207, 30.7296, 0.0, 0.0, 50.6255, 54.5358, 100.9125, 62.0062, 34.768, 3.531, 0.0, 20.5275, 79.1683, 0.0], [35.6756, 108.6912, 31.8816, 109.1475, 358.3899], [30.5585, 48.6842, 0.0, 99.9581, 0.0, 0.0, 0.0, 22.6985, 105.1215, 176.3502, 82.5668, 65.8952, 14.8755, 0.0, 113.344, 137.713, 88.2438, 9.6255, 39.7386, 36.0998, 30.8853, 83.5474, 179.928], [26.7364, 54.6005, 0.0, 341.9617, 138.336, 38.7633, 23.8384, 55.9374, 86.9193, 203.5307, 26.1744, 12.673, 0.0, 72.772, 104.8648, 250.7014, 48.7485, 66.1835, 128.3405, 0.0, 152.4758, 120.4851], [84.3171, 112.3373, 39.4502, 446.5962, 19.5096, 56.8663, 12.7436, 91.1656, 183.4848, 59.2917, 157.6098, 11.6768, 46.4094, 232.806, 224.4488, 180.8145, 70.6698, 97.4754, 197.6026, 56.7522, 127.3387, 243.6358], [81.0487, 84.146, 70.2715, 437.0485, 61.4592, 7.9078, 11.7527, 130.0207, 204.1268, 231.9642, 139.5787, 38.3104, 97.9404, 53.3344, 99.5785, 333.2221, 160.1631, 101.2851, 55.5984, 196.6886, 15.9408, 117.5485, 339.9973], [71.4582, 26.4024, 494.1396, 192.8784, 57.9606, 67.3768, 155.5798, 321.6642, 210.7301, 111.52, 98.0278, 69.9888, 269.2725, 219.3761, 161.0809, 68.931, 91.9512, 293.9558, 97.4898, 146.4561, 428.6285]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

