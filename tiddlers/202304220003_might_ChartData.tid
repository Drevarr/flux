created: 20230422000344000
creator: Drevarr
modified: 20230705163526209
modifier: drevarr
tags: ChartData
title: 202304220003_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Primal", "Zadie Miststep", "Ark Darkness", "Jupi Jupi Jupi", "Soxx", "Stoic Rapidfire", "Air One Com", "Tegan Parker", "Zaylen Harker", "Aronorf Xideliesi", "Johosh The Great", "Koralia Danai", "Drevarr Moonwillow", "Venomina The Siren", "Lucas Ryn", "Bella Sassy", "Newtype Khan", "Blancooo Padreee", "Solo Bloodborn", "Domina Flagbringer"];
const professions = ["Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.9183, 2.982, 0.0, 7.5104, 2.5344, 0.0, 2.6541, 9.4163, 0.0, 26.64, 0.0, 0.0, 0.0, 0.0, 0.9274, 3.8902, 0.0, 8.3068, 0.0, 0.0, 7.2576, 14.7168, 3.3403, 21.724, 3.483], [0.0, 3.3497, 3.1152, 0.0, 0.0, 3.7247, 11.2783, 38.52, 12.411, 4.5747, 1.6836, 0.1819, 2.4192, 5.3326, 0.0, 1.355, 3.8775, 22.1184, 0.0, 0.6486, 7.1318, 0.0], [5.7077, 5.7652, 3.7622, 11.389, 1.0824, 12.0237, 3.3431, 9.0815, 1.1821, 43.56, 15.876, 0.0, 4.4436, 2.1625, 1.5322, 9.7473, 0.2957, 4.4584, 1.3042, 18.6624, 0.0, 0.8756], [8.1972, 5.5664, 6.2533, 10.1549, 14.0976, 12.5878, 2.9858, 4.0595, 2.0128, 64.44, 16.443, 4.4712, 3.2568, 0.5457, 3.2659], [8.7437, 2.0164, 1.6523, 10.578, 6.1248, 4.7954, 3.9811, 4.5617, 2.6519, 45.0, 13.986, 0.0, 1.3248, 0.9094, 1.8547, 4.5896, 1.6474, 2.3631, 4.6333, 3.384, 11.232, 8.208, 5.805, 5.3958, 11.4552], [0.0, 10.2524, 3.2029, 12.5526, 7.788, 2.8561, 4.7212, 4.9383, 3.2589, 34.56, 7.497, 15.3387, 3.1464, 0.0, 4.5562, 2.3166, 0.0, 8.0426, 4.0185, 18.144, 8.4384, 3.3403, 11.6831, 3.6378], [1.4573, 6.2764, 3.4063, 4.5133, 3.564, 5.6769, 1.2505, 9.3326, 1.6933, 40.5, 20.034, 12.6891, 5.7408, 0.4446, 4.6771, 9.5288, 0.8659, 0.0, 4.5896, 1.8682, 20.8224, 1.9584, 9.1453, 7.4603, 0.0], [0.0, 5.5889, 0.0, 28.8828, 5.04, 54.873, 1.5111, 9.7152, 1.4515, 0.0, 0.0, 4.1087, 3.1372, 47.088, 15.7536, 0.0, 18.2519, 4.4892], [7.59, 6.5036, 7.9565, 11.0011, 5.412, 12.6231, 3.9556, 4.7709, 9.1377, 48.42, 16.821, 4.3056, 0.0, 1.4955, 4.2739, 12.3262, 0.9715, 6.7313, 7.7198, 16.416, 7.4016, 1.3945, 0.0, 13.6611], [5.7684, 9.7412, 10.7018, 10.9659, 5.4384, 13.7867, 5.2316, 13.2665, 7.4444, 25.74, 13.104, 1.0764, 2.208, 6.7704, 2.9434, 15.3859, 4.6253, 7.5191, 10.4467, 9.6938, 18.8352, 7.0848, 8.4642, 3.4721, 4.9536], [4.3111, 4.5156, 8.9224, 9.0618, 4.5408, 12.5878, 9.621, 7.8259, 5.3676, 59.4, 26.712, 5.7339, 2.3184, 0.0606, 2.0966, 11.4083, 2.9146, 5.2889, 5.9573, 16.5024, 1.8144, 2.7566, 6.0527, 13.3515], [5.5862, 5.3392, 5.7703, 13.9982, 12.7776, 9.5202, 2.7817, 0.7951, 0.9904, 63.72, 37.8, 8.901, 5.7408, 2.2635, 1.5322, 15.517, 2.64, 11.9765, 3.3487, 34.6464, 6.0192, 3.5673, 9.9001, 0.0], [3.5218, 16.1312, 7.1939, 10.9659, 8.6064, 19.1462, 8.1919, 14.7312, 10.256, 40.14, 7.812, 5.5062, 3.864, 1.9604, 9.8784, 4.6333, 6.1248, 10.4467, 9.4118, 35.0784, 3.8016, 6.9076, 6.8034, 15.867], [0.0, 6.3042, 37.5872, 5.7288, 1.1988, 1.3526, 8.4119, 0.5432, 39.96, 69.048, 0.0, 0.0, 0.0606, 13.1846, 2.0107, 0.0, 2.3603, 0.0, 37.152, 14.7456, 6.3239, 21.724, 18.8469], [4.9183, 4.5756, 22.8485, 14.0184, 9.0266, 6.9414, 14.6475, 5.9108, 95.4, 23.94, 15.6078, 5.1888, 6.4268, 4.153, 14.3369, 2.6189, 6.6836, 12.064, 6.345, 57.6288, 9.5328, 9.6317, 20.3633, 1.5093], [7.0435, 5.254, 9.2275, 23.7652, 8.8176, 6.0647, 14.1126, 4.8964, 2.9713, 94.32, 31.752, 1.4283, 3.4224, 6.9927, 5.7658, 12.6759, 3.5059, 4.1295, 15.2111, 18.33, 50.112, 12.3264, 2.5295, 22.7562, 18.5373], [11.2332, 20.2488, 32.2982, 22.3045, 27.1188, 27.7965, 72.9, 57.204, 9.8739, 6.762, 1.1924, 5.5238, 10.7527, 6.8006, 7.2559, 18.0832, 51.6672, 15.408, 8.3021, 24.5861, 21.1302], [14.3906, 20.3912, 40.0365, 45.5559, 25.7664, 48.8704, 27.8423, 58.0041, 31.0554, 166.32, 71.82, 16.3737, 19.6788, 6.7704, 27.216, 41.306, 15.4598, 39.5138, 36.9772, 105.0624, 12.9888, 14.3341, 38.9905, 40.7898], [25.1988, 37.5164, 54.4242, 58.179, 14.4408, 68.1576, 43.5882, 37.0373, 58.9797, 147.24, 87.003, 27.7587, 29.3664, 21.1397, 33.7075, 52.3646, 26.928, 48.4307, 44.8732, 46.4832, 25.8048, 28.96, 51.8935, 3.2895], [35.6426, 37.1756, 30.5294, 63.3622, 53.8032, 52.7842, 42.3632, 69.5129, 27.3172, 239.76, 38.115, 21.7971, 30.5808, 10.489, 28.9094, 44.016, 18.5434, 59.0522, 39.6562, 88.8192, 34.8768, 45.8236, 29.4188, 30.6891]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

