created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Minnie Darley", "Cat Wigglebooty", "Zaylen Harker", "Mistwalker Cael", "Imalou", "Tootsie Pop Rocks", "Inedible Plant", "Tirluka", "Arcanophage Farra", "High Sorcer Baradun", "Crusader Siolith", "Tegan Parker", "Drevarr Moonwillow", "Newtype Khan", "Elementsofmathus"];
const professions = ["Dragonhunter", "Scrapper", "Dragonhunter", "Vindicator", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Spellbreaker", "Tempest", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 66.7498, 29.3466, 271.6589], [0.0, 10.0128, 30.0048, 40.0423, 4.998, 24.0433, 0.0, 0.0, 0.0, 0.0, 25.033, 5.0274, 55.5866, 5.0019, 138.1016, 221.832], [0.0, 0.0, 15.0024, 33.0784, 0.0, 56.9302, 0.0, 0.0, 69.2885, 219.865, 82.4494, 0.0, 131.6022, 184.8437, 64.8432], [8.46, 57.3216, 97.2336, 65.7472, 23.0908, 62.7337, 12.1402, 26.1292, 2.416, 4.8917, 175.4669, 29.2706, 0.0, 77.4435, 69.0508, 290.088], [0.0, 130.7183, 0.0, 34.0673, 0.0, 287.879, 38.2455, 0.0, 63.6451, 44.3519, 550.8259], [0.0, 73.0464, 52.0008, 20.8916, 0.0, 41.5922, 0.0, 41.5275, 0.0, 0.0, 285.5174, 57.4241, 0.0, 118.6662, 313.3844, 785.2853], [31.6066, 83.7312, 114.7176, 108.0425, 41.8333, 113.3076, 34.7822, 53.7285, 20.9496, 316.6906, 48.1141, 23.2863, 123.4094, 188.0306, 682.9013], [179.1244, 136.6772, 453.9674, 721.7137, 740.5776], [0.0, 80.976, 184.5408, 37.7893, 56.4774, 120.7693, 75.2993, 0.0, 51.9929, 0.0, 712.0224, 75.7462, 69.4296, 123.6682, 154.7004, 957.6317], [84.2741, 0.0, 350.2206, 591.5795, 2017.9886], [77.1214, 105.84, 292.716, 309.1758, 152.8888, 434.8525, 250.3273, 39.9105, 49.6041, 0.0, 243.481, 99.0212, 106.9881, 194.2125, 305.2842, 594.5098], [0.0, 147.504, 336.144, 213.4224, 0.0, 300.2651, 0.0, 20.5065, 9.4731, 0.0, 893.3933, 140.8417, 105.1996, 296.4069, 371.0153, 1837.1102], [72.7898, 167.3952, 337.9488, 258.278, 42.0332, 325.2757, 91.238, 47.7015, 20.2976, 0.0, 797.2762, 79.7308, 100.7999, 244.4904, 819.3143, 1422.7963], [67.0709, 285.7344, 464.736, 299.6517, 142.393, 473.2665, 251.6679, 95.697, 39.732, 1070.5133, 218.5243, 15.4169, 285.7131, 448.4318, 1513.5768], [87.4426, 154.2912, 524.4072, 291.6637, 162.2851, 630.5153, 163.1112, 110.6175, 22.891, 1201.3459, 263.2496, 123.4065, 371.0045, 596.7583, 2119.3488]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

