created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosair", "Jimbo The Pleb", "Crystal Shadowmist", "Lady Sherena", "Lastsuperman", "Grasszanine", "Astraeus Windrunner", "Divine Mimine", "Aira Draugr", "Newtype Khan", "Mort\u00e4rion", "Black Raspberry Pie", "Bryxzi", "L\u00e4n\u00e7e", "Daphne Agla\u00e9", "Oo Dads Mad", "Rozaalyna", "\u00c7onstant\u00edne", "Morton Saltbringer", "Lucky Leipreach\u00e1n", "Lord Erin The Wise", "Swithblight", "Glorious Gluvs", "No Reserv\u00e9", "Eibh\u00ebar", "Adjudicatrix Farra", "Be\u00eb", "Jmbrage Rev", "Rina Of Theros", "Elonith Requiem", "Mike The Archmagus", "Halfpint The Drunk", "Mistwalker Cael", "Jimbo The Pleb", "Xanvias Tseli"];
const professions = ["Firebrand", "Spellbreaker", "Herald", "Willbender", "Dragonhunter", "Spellbreaker", "Berserker", "Renegade", "Herald", "Spellbreaker", "Scrapper", "Chronomancer", "Herald", "Vindicator", "Reaper", "Berserker", "Reaper", "Reaper", "Chronomancer", "Scrapper", "Weaver", "Scourge", "Berserker", "Vindicator", "Chronomancer", "Reaper", "Reaper", "Vindicator", "Reaper", "Reaper", "Weaver", "Berserker", "Herald", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[70.5138, 19.4545, 56.0806, 109.6895, 4.4105, 18.2269, 9.5341, 9.6914, 6.6626, 0.0, 8.5192, 11.1, 2.4561, 5.1831, 1.359, 7.8125], [420.8947, 8.3803, 337.7436, 172.7955], [428.6271, 172.3243, 0.0, 46.0526, 0.0, 35.9311, 60.6689, 19.4404], [73.3798, 0.0, 212.5505], [40.5263, 0.0, 643.5641, 262.8807], [22.2687, 30.4032, 15.5053, 100.2017, 0.0, 87.4444, 7.0123, 0.0, 22.3654, 0.0, 127.4561, 125.4648, 233.3846, 77.0511], [13.0847, 355.4054, 0.0, 73.4211, 0.0, 35.9969, 46.3311, 16.2385, 0.0, 11.3015, 0.0, 22.5579, 41.2437, 12.625, 2.716, 21.3129, 0.0, 33.6346, 7.5333, 10.2807, 0.0, 146.7436, 35.9375], [0.0, 59.2632, 0.0, 0.0, 3.3017, 70.1419, 27.945, 0.0, 17.3552, 46.1411, 0.0, 37.8655, 21.9659, 6.5432, 42.681, 0.0, 74.8462, 0.0, 30.0702, 82.4507, 285.5641, 58.2898], [269.2373, 68.7027, 0.0, 65.8421, 0.0, 77.5, 74.4303, 37.8378, 104.6514, 0.0], [142.9322, 193.8108, 0.0, 82.0132, 0.0, 32.4977, 90.8514, 96.3119, 0.0, 42.3612, 40.7056, 38.6737, 49.0588, 47.4886, 6.716, 3.0061, 4.6803, 16.75, 0.0, 120.8596, 75.6761, 73.1538, 21.3295], [0.0, 388.2763, 0.0, 0.0, 38.0842, 422.1743, 126.9545, 56.1731], [363.8919, 0.0, 94.1842, 0.0, 30.7955, 72.2711, 72.9459, 61.3578, 25.3818, 40.1851, 39.0161, 12.0842, 146.521, 11.7614, 3.9012, 10.8037, 0.0, 17.8846, 0.0, 19.2632, 18.3521, 117.359, 83.1932], [0.0, 112.3684, 0.0, 0.0, 91.8147, 125.3176, 196.5138, 0.0, 16.6418, 61.3992, 0.0, 226.5546, 21.9545, 64.2346, 39.816, 1.1475], [8.9038, 0.0, 586.4211, 384.5915, 1656.359, 295.3636], [857.8305, 616.4865, 0.0, 208.6842, 0.0, 30.317, 104.2027, 49.6697, 0.0, 18.2358, 25.8427, 30.1895, 112.5126, 125.0, 42.1605, 29.9693, 0.1148, 0.1731], [0.0, 285.1351, 0.0, 352.4737, 0.0, 153.3262, 297.9527, 0.0, 0.0], [152.5135, 0.0, 245.3553, 0.0, 119.4257, 178.2432, 90.4128, 79.1273, 8.3284, 201.6723, 0.0, 22.2469, 39.1472, 0.0, 37.5, 86.05, 114.7193, 59.4225], [0.0, 420.3026, 0.0, 0.0, 0.0, 146.2027, 198.7248, 8.6091, 137.206, 109.75, 37.8, 443.6303, 16.1818, 65.5556, 134.5337, 0.4426, 10.6923, 0.0, 137.5614, 151.3803, 79.2821, 162.25], [103.3243, 0.0, 142.2368, 0.0, 170.0306, 187.5473, 194.8257, 13.1909, 6.5045, 107.1371, 24.6211, 342.5798, 87.9545, 0.0, 67.4969, 0.0, 36.2308, 4.2833, 143.7719, 87.4085, 85.9487, 95.6989], [307.7706, 0.0, 58.8418, 269.0242, 246.9684, 368.7311, 17.25, 162.2346, 118.3067, 35.0082, 37.6346, 83.9667, 215.6491, 244.7606, 393.8974, 366.7386], [0.0, 0.0, 78.3684, 110.3706, 207.9392, 201.8073, 0.0, 55.2537, 174.9919, 335.5158, 176.0168, 0.0, 41.963, 190.9202, 7.3115, 156.25, 0.0, 256.6667, 286.3239, 56.7949, 146.3636], [318.322, 628.2703, 0.0, 72.7237, 0.0, 0.0, 138.7397, 213.6149, 141.7615, 7.1, 74.9463, 124.5444, 69.8526, 219.8655, 98.1705, 217.3827, 52.2822, 41.5, 114.4038, 116.4, 84.9825, 202.3099, 746.0, 92.875], [398.2373, 81.4054, 0.0, 212.2632, 0.0, 0.0, 128.9495, 452.0, 52.055, 0.0, 74.5582, 139.8427, 47.5053, 541.605, 168.1477, 116.9753, 71.9571, 7.2377, 122.2115, 68.9, 24.2456, 48.5352, 188.641, 88.5455], [694.5405, 0.0, 383.2105, 0.0, 242.8637, 124.723, 350.1835, 0.5273, 36.3582, 212.0081, 215.6947, 556.6555, 263.6591], [598.9459, 0.0, 249.0526, 0.0, 124.6708, 280.0135, 404.6239, 0.0, 133.6179, 108.8629, 60.7684, 196.9496, 145.625, 30.4321, 69.3742, 9.5902, 97.5, 180.3833, 175.3509, 329.1972, 990.2564, 205.392], [363.2542, 212.8919, 0.0, 389.9079, 0.0, 227.5957, 564.8446, 109.6606, 0.0, 62.8657, 45.4274, 73.4632, 284.1849, 39.0568, 89.8765, 83.8834, 10.6967, 30.0385, 0.0, 20.5915, 1022.0769, 148.9432], [0.0, 408.2237, 0.0, 0.0, 231.0444, 406.7838, 127.1743, 18.7, 92.6507, 94.5645, 135.4737, 352.0588, 46.0114, 29.4815, 71.2945, 9.8443, 81.9615, 10.8833, 158.8596, 252.3803, 646.4103, 199.8807], [0.0, 32.6364, 225.9495, 6.6824, 264.2936, 31.3182, 159.8179, 267.379, 143.4947, 374.1765, 307.8409, 107.0741, 460.7301, 69.4426, 216.5577, 0.0, 531.0702, 207.5634, 584.8974], [793.661, 596.9459, 0.0, 530.3421, 0.0, 0.0, 271.6799, 239.7297, 136.9817, 87.5273, 113.9731, 231.246, 0.0, 499.4118, 49.7727, 12.6543, 32.865, 18.4918, 8.7692, 222.2, 108.3333, 201.7324, 868.8205, 150.5], [168.6784, 0.0, 900.5505, 251.9273, 189.8597, 219.8508, 197.2737, 764.1681, 283.9091, 173.8272, 19.1043, 37.2705, 207.8077, 34.5167, 130.386, 314.0986, 1238.1282, 283.0511], [968.5763, 1297.0811, 0.0, 193.5395, 98.3636, 219.2603, 253.3446, 360.9541, 64.0364, 193.5373, 110.6532, 690.6632, 636.1681, 80.0, 264.1605, 248.7853, 0.0, 294.0962, 7.7833, 191.9825, 187.2535, 528.3077, 133.1193], [1358.9661, 1255.5946, 0.0, 446.4342, 0.0, 0.0, 314.026, 629.5203, 270.9174, 116.1455, 23.8866, 94.3065, 209.6526, 296.521, 323.2159, 129.0741, 453.9632, 25.2541, 284.1923, 27.75, 1334.4737, 223.9859, 145.2308, 185.2955], [1170.1864, 1409.5405, 0.0, 704.3421, 0.0, 0.0, 358.0199, 430.4054, 511.8257, 216.2273, 180.6119, 462.1573, 203.8211, 768.2605, 274.5795, 151.284, 181.5951, 42.041, 118.1731, 155.5667, 490.386, 543.6761, 1422.9744, 401.1364], [1242.5424, 1103.3514, 0.0, 1061.2368, 0.0, 0.0, 594.4181, 546.1486, 634.7431, 324.2, 420.7313, 308.7702, 370.2526, 393.1345, 76.7159, 150.4321, 59.0798, 164.9836, 287.0962, 284.6333], [1907.1017, 1036.2703, 0.0, 970.3553, 0.0, 102.9091, 566.3538, 521.3919, 786.367, 0.0, 88.4716, 462.0121, 127.3158, 1347.395, 646.7045, 690.6667, 139.7055, 47.1721, 423.0385]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

