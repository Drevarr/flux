created: 20230625212343000
creator: Drevarr
modified: 20230705163535751
modifier: drevarr
tags: ChartData
title: 202306252123_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Ildemir Fares", "Tegan Parker", "Artakama Nahid", "Sakis Ranger", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Tempest", "Tempest", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.0462, 83.958, 137.5138, 936.58, 858.3143, 859.233, 900.6182, 852.0486, 648.1045, 926.4932, 109.7778, 663.5325, 238.6458, 657.7895, 159.9209, 451.7263, 0.0, 432.4536, 313.0102, 215.2171, 315.581, 379.2771, 654.7062, 1049.9057, 330.7959], [2471.5422, 3124.0062, 3644.0377, 1750.8299], [109.9436, 601.965, 729.9174, 951.43, 1641.5286, 1722.9709, 1923.6727, 928.2292, 1144.3582, 1119.6027, 312.5222, 1571.1818, 736.5625, 1873.2632, 1034.8129, 1547.5053, 88.1143, 1402.4639, 2377.2245, 859.124, 1275.3714, 1222.2048, 2673.0938, 721.5094, 1644.9456], [151.5641, 700.6678, 608.6422, 2557.15, 2042.0, 3426.3301, 2764.3455, 2275.3333, 1686.3881, 317.0345, 2529.8082, 871.8444, 612.9091, 1104.4792, 2188.7368, 1145.3669, 1407.2316, 65.4, 1532.4021, 2743.7143, 989.3023, 847.8095, 1375.0482, 2871.9563, 3679.9245, 1494.0068], [125.6513, 819.0245, 1255.1193, 2255.9, 2567.4143, 2686.5534, 1941.2182, 2590.3819, 2041.597, 20.4828, 3340.7671, 1759.0111, 2916.961, 1326.5833, 2617.1974, 1498.8417, 2095.6842, 534.3143, 1954.134, 3946.5, 772.3411, 653.181, 1781.6988, 3236.85, 3034.3396, 2289.2517], [119.8103, 815.2867, 967.8257, 3225.75, 4419.9857, 4930.9417, 4838.4545, 2510.75, 3224.3284, 257.7241, 4646.9452, 211.1333, 1725.4416, 1289.7083, 3560.7105, 1532.1439, 2913.2632, 104.1714, 3445.7216, 4404.8673, 1432.5349, 1545.6476, 2159.4578, 5835.8188, 3930.5094, 2241.0408]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

