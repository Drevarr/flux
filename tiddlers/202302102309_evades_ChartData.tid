created: 20230210230955000
creator: Drevarr
modified: 20230705163518981
modifier: drevarr
tags: ChartData
title: 202302102309_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Burnhard Riemann", "Johosh The Great", "Koralia Danai", "Be\u00eb", "Black Raspberry Pie", "Jeckyll Mbs", "Kosa\u00edr", "Sp\u00edcy Cheese", "Seren Nightroad", "Tegan Parker", "Air One Com", "Zaylen Harker", "Fungus", "Drevarr Moonwillow", "Arka\u00f1", "Dark Sidiuz", "Mike The Archmagus", "Kyllarian", "Oo Dads Mad", "Sumatra Satyricon", "Arcanophage Farra", "Legacy Of Mathus", "Veggie Mac", "Abigail Ryn", "Ace Hammers", "Newtype Khan", "Xanvias Tseli", "Ravioli Fetabringer", "Aronorf Xideliesi", "Warrior Husky", "Jupi Jupi Jupi", "Bambiae", "Venomina The Siren", "Kary\u00edna", "Smol Gluvs", "Rozaalyna", "Ryvalia Fazebringer", "Grasszanine", "Lord Erin The Wise", "Mistwalker Caelon"];
const professions = ["Berserker", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Berserker", "Scrapper", "Berserker", "Scourge", "Tempest", "Firebrand", "Firebrand", "Scourge", "Scrapper", "Chronomancer", "Scourge", "Tempest", "Scourge", "Spellbreaker", "Soulbeast", "Spellbreaker", "Berserker", "Tempest", "Tempest", "Vindicator", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Berserker", "Dragonhunter", "Chronomancer", "Tempest", "Vindicator", "Scourge", "Scourge", "Chronomancer", "Spellbreaker", "Weaver", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 2, 1, 0, 0, 0, 0, 1, 3], [0, 1, 0, 0, 0, 0, 0, 1, 0, 6], [0, 2, 1, 2, 0, 0, 0, 0, 1, 3], [2, 3, 0, 2, 0, 0, 0, 0, 0, 3], [0, 6, 3, 0, 1, 0, 0, 0, 0, 0], [2, 1, 0, 0, 0, 0, 2, 0, 1, 4], [0, 5, 3, 2, 0, 0, 0, 0, 0, 0], [1, 1, 6, 2, 0, 0, 0, 0, 0], [2, 1, 2, 2, 2, 0, 0, 0, 1, 0], [0, 2, 3, 1, 0, 1, 0, 1, 3, 0], [1, 3, 3, 0, 0, 1, 0, 0, 1, 2], [0, 6, 4, 1, 1, 0], [1, 0, 0, 3, 0, 0, 0, 0, 0, 9], [0, 12, 1, 1, 0, 0, 0, 0, 0, 0], [1, 1, 8, 4, 0, 2], [6, 6, 2, 2, 0, 0], [0, 3, 0, 3, 0, 0, 0, 0, 5, 6], [3, 1, 0, 6, 0, 2, 1, 0, 2, 2], [4, 2, 10, 1, 1, 0, 0, 0, 0], [0, 8, 3, 3, 0, 0, 0, 0, 0, 4], [0, 4, 1, 6, 1, 0, 3, 2, 0, 2], [2, 7, 7, 0, 1, 0, 0, 0, 0, 2], [3, 2, 4, 5, 0, 0, 4, 1, 1, 0], [2, 11, 2, 2, 0, 0, 1, 2, 0, 0], [0, 10, 3, 8, 0, 0, 0, 0, 0, 0], [4, 6, 7, 1, 0, 0, 0, 0, 0, 4], [2, 6, 2, 6, 0, 0, 0, 0, 1, 6], [2, 1, 6, 5, 1, 1, 0, 0, 5, 3], [0, 2, 5, 5, 0, 2, 1, 1, 3, 5], [2, 9, 0, 14, 0, 0, 0, 0, 0], [5, 2, 14, 4, 0, 0, 0, 0, 0, 3], [4, 3, 5, 11, 1, 0, 1, 2, 2, 0], [0, 3, 0, 9, 0, 0, 19, 0, 0, 1], [8, 6, 5, 9, 0, 0, 0, 1, 3, 1], [3, 4, 8, 6, 1, 0, 0, 0, 0, 11], [1, 20, 16, 0, 0, 1], [0, 2, 4, 22, 0, 0, 0, 1, 2, 10], [5, 14, 19, 6, 1, 0], [3, 16, 6, 34, 0, 0, 0, 0, 0], [6, 15, 10, 16, 0, 4, 0, 2, 4, 13]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

