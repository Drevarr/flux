created: 20230628220723000
creator: Drevarr
modified: 20230705163539709
modifier: drevarr
tags: ChartData
title: 202306282207_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Irin The Undeath", "I Toxicheart I", "Crusader Siolith", "Rahani Sunray", "Blade Stacker", "Belvyn Brightblade", "Primal Clone", "Sub Train", "Sygaldry Verdandi", "Rozaalyna", "Xyntharos", "Johosh The Mighty", "Tribal S", "Tika Fiery", "Tootsie Pop Rocks", "Arcanophage Farra", "Solus Sanctus", "Smol Gluvs", "Demon Staph", "Eibh\u00ebar", "Bella Sassy", "Grasszanine", "Drevarr Moonwillow"];
const professions = ["Reaper", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Reaper", "Vindicator", "Berserker", "Druid", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Reaper", "Druid", "Chronomancer", "Firebrand", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1453, 349, 9267, 313, 430, 1515, 2785, 360, 888, 767, 1265, 902, 843, 267, 294], [1209, 291, 7239, 850, 384, 1798, 3851, 477, 5950, 442, 702, 878, 3770], [1396, 9909, 346, 269, 511, 1047, 4427, 360, 628, 704, 2094, 834, 915, 242, 3625, 979, 3110, 332, 559, 1163, 279, 933, 203, 726], [303, 302, 407, 1600, 231, 539, 892, 1051, 2884, 989, 1262, 199, 3264, 4793, 1124, 218, 954, 1290, 265, 499, 337], [219, 320, 675, 1184, 1012, 403, 1094, 2051, 3887, 1679, 228, 746, 1285, 360, 915, 226, 534], [408, 267, 234, 380, 316, 554, 1691, 4921, 669, 900, 561, 2904, 723, 1055, 185, 7681, 550, 984, 266, 1458, 750, 330, 1172, 310, 3282], [809, 507, 282, 438, 522, 383, 2562, 1110, 771, 669, 1184, 831, 1292, 312, 279, 1234, 585, 206, 2918, 1112, 257, 398, 297, 475], [2484, 613, 352, 241, 435, 733, 1008, 844, 654, 773, 463, 744, 414, 195, 3405, 1575, 1957, 2612, 583, 638, 314, 351, 219, 480], [620, 369, 304, 310, 557, 1507, 2404, 278, 6367, 617, 452, 715, 1264, 230, 2709, 2838, 1294, 3595, 600, 1090, 237, 471, 227, 416], [4386, 640, 294, 353, 395, 2912, 1781, 318, 436, 683, 3282, 387, 774, 5676, 2605, 617, 3672, 228, 7269, 1414, 456, 1105, 294, 3655], [393, 1880, 209, 1006, 323, 379, 388, 2028, 429, 4018, 774, 297, 798, 2364, 307, 3549, 1112, 2748, 263, 611, 812, 300, 2617, 351, 623], [1003, 1315, 246, 326, 213, 338, 854, 4987, 1403, 1064, 13795, 1387, 685, 1172, 191, 461, 699, 2618, 205, 452, 1014, 242, 498, 189, 502], [976, 264, 337, 332, 495, 1575, 1049, 1350, 450, 564, 371, 301, 383, 405, 2267, 824, 685, 201, 1317, 1078, 1048, 511, 291, 623], [429, 173, 261, 250, 332, 1423, 9810, 391, 833, 1266, 1016, 751, 580, 236, 4485, 726, 999, 314, 317, 539, 1076, 418, 222, 443], [900, 284, 446, 306, 435, 1505, 1671, 310, 807, 474, 2103, 780, 1419, 161, 7845, 4368, 2123, 272, 641, 1408, 296, 255, 403, 1225], [220, 357, 289, 254, 462, 2718, 6223, 273, 869, 990, 3035, 804, 694, 147, 8713, 2416, 479, 3339, 2300, 2948, 476, 765, 460, 1642], [778, 659, 348, 347, 284, 650, 1445, 5357, 1044, 832, 340, 313, 706, 283, 290, 2215, 1791, 2029, 289, 789, 1208, 217, 240, 302, 495], [1035, 269, 254, 236, 337, 284, 1694, 1583, 832, 642, 1694, 863, 775, 197, 17142, 782, 2280, 247, 373, 387, 348, 989, 200, 626], [482, 565, 484, 239, 252, 985, 1540, 344, 310, 5875, 1426, 4393, 194, 491, 1290, 282, 359, 368, 485], [197, 220, 260, 275, 423, 1030, 1294, 1016, 729, 452, 278, 702, 1009, 176, 645, 1302, 1084, 180, 469, 1066, 186, 347, 161, 405], [323, 246, 232, 220, 289, 929, 4399, 492, 1433, 593, 389, 728, 1166, 144, 141, 330, 1383, 180, 489, 1194, 2350, 448, 277, 464], [5189, 226, 343, 217, 544, 1463, 1536, 350, 722, 682, 315, 5038, 2892, 198, 791, 1571, 1071, 217, 444, 538, 203, 253, 300, 408], [713, 309, 184, 171, 235, 235, 1423, 9892, 193, 528, 825, 541, 617, 1097, 333, 150, 1382, 905, 127, 508, 1011, 203, 242, 277, 428]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

