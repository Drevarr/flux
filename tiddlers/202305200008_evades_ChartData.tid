created: 20230520000848000
creator: Drevarr
modified: 20230705163530717
modifier: drevarr
tags: ChartData
title: 202305200008_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Grenths Agony", "Drogo Discourteous", "Artakama Nahid", "Kary\u00edna", "Sylia Raskae", "Madame Charrlotte", "Cat Wigglebooty", "Morv\u00e4rth", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Black Raspberry Pie", "Jupi Jupi Jupi", "Paul Bjart Mist Cop", "Tegan Parker", "Sylia Raskae", "Tika Fiery", "Be\u00eb", "Primal Clone", "Oo Dads Mad", "Lucky Leipreach\u00e1n", "Blanco Padre Guard", "Zaylen Harker", "Smol Gluvs", "Rhaeltob", "Miphest\u00f6", "Rozaalyna", "Air One Com", "\u00c1rk\u00e1ntor", "Hauzzy", "Spreadflamesoflight", "Newtype Khan", "Morv\u00e4rth", "Xanvias Einzbern", "High Sorcer Baradun", "Sister Elonith", "Venomina The Siren", "Aronorf Xideliesi", "Kosa\u00efr", "Cyclotechnist Farra", "Solus Sanctus", "Cerys Fireblade", "Grasszanine", "Soxxdodendron", "Khailerian", "Grilo Gringo", "Nomi No Mi", "Mistwalker Caelon", "Lord Erin The Wise"];
const professions = ["Reaper", "Dragonhunter", "Tempest", "Vindicator", "Berserker", "Scourge", "Scrapper", "Scourge", "Chronomancer", "Scrapper", "Chronomancer", "Firebrand", "Scrapper", "Tempest", "Spellbreaker", "Firebrand", "Scourge", "Chronomancer", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Scourge", "Soulbeast", "Tempest", "Scourge", "Firebrand", "Scourge", "Berserker", "Firebrand", "Spellbreaker", "Reaper", "Berserker", "Tempest", "Berserker", "Tempest", "Firebrand", "Weaver", "Scrapper", "Firebrand", "Berserker", "Spellbreaker", "Willbender", "Vindicator", "Dragonhunter", "Berserker", "Vindicator", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 0, 3, 3, 0, 0, 12, 0, 0], [0, 0, 0, 5, 2, 1, 0, 0, 0, 2, 0, 1, 10, 0, 2], [0, 19, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 3, 0, 0, 0, 0, 4, 3, 0, 8, 6, 4], [0, 0, 0, 1, 0, 5, 0, 25], [0, 25, 0, 1, 0, 0, 0, 0, 0, 0, 6, 0], [0, 25, 0, 0, 0, 0, 0, 3, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 4, 0, 4, 0, 0, 4, 0, 4, 2, 0, 0, 0, 5, 1, 0, 0, 0, 1, 1, 1, 2, 0, 5], [1, 7, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2, 8, 0, 1, 1, 0, 2, 2, 1, 0, 3, 0, 1], [0, 28, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 36, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 42, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 29, 2, 0, 1, 0, 1, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 1, 0, 0, 3], [0, 36, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 2, 0, 1, 0, 2], [0, 0, 0, 8, 29, 13], [0, 50, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 52, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 25, 0, 0, 0, 0, 0, 0, 1, 0, 3, 2, 1, 2, 1, 3, 0, 1, 0, 3, 0, 0, 0, 2, 0, 12], [0, 42, 1, 4, 0, 0, 0, 3, 4, 0, 1, 2], [0, 30, 0, 5, 0, 0, 0, 1, 0, 0, 7, 5, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 4, 0, 1], [1, 47, 0, 2, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1], [0, 44, 0, 5, 0, 1, 0, 0, 3, 0, 8, 3, 0, 0, 0, 0, 0], [0, 51, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 4, 1, 0, 0, 0, 5], [3, 10, 13, 0, 5, 1, 0, 3, 0, 13, 14, 5, 4], [1, 47, 1, 2, 0, 1, 1, 1, 4, 0, 6, 1, 0, 0, 0, 4, 2, 0, 0, 0, 4], [0, 73, 0, 4, 0, 1, 0, 0, 0, 3, 2, 2, 0, 0, 0, 0], [0, 65, 0, 6, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 1, 1, 3, 2], [0, 65, 0, 5, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 1, 1, 0, 1, 0, 5, 0, 0, 0, 4, 0, 1], [0, 70, 0, 1, 0, 1, 0, 1, 1, 0, 17, 1], [0, 65, 0, 3, 0, 2, 10, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 1, 0, 4, 0, 4], [1, 63, 1, 4, 0, 0, 1, 0, 2, 0, 6, 3, 1, 0, 0, 4, 5, 2, 0, 0, 1, 0, 2, 0, 2, 1, 3], [103], [0, 50, 0, 4, 1, 2, 0, 0, 14, 2, 3, 4, 7, 0, 2, 6, 0, 1, 0, 0, 0, 3, 0, 0, 2, 9], [0, 86, 3, 5, 0, 7, 0, 0, 3, 0, 1, 8], [1, 89, 1, 0, 1, 3, 8, 0, 1, 2, 1, 1, 0, 2, 3, 1], [2, 59, 0, 2, 1, 0, 0, 3, 16, 0, 1, 0, 0, 0, 0, 5, 1, 0, 0, 1, 0, 12, 3, 0, 1, 3, 5], [1, 58, 1, 1, 0, 2, 0, 0, 1, 0, 11, 5, 0, 0, 1, 6, 0, 1, 0, 0, 0, 3, 1, 0, 4, 0, 19], [0, 94, 0, 4, 0, 0, 0, 3, 5, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 1, 2], [2, 81, 0, 9, 0, 2, 1, 0, 7, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0, 1, 0, 2, 0, 4, 0, 1], [1, 84, 0, 6, 0, 3, 0, 3, 1, 0, 2, 3, 0, 0, 0, 3, 3, 0, 0, 0, 0, 1, 0, 0, 3, 2, 4], [0, 102, 0, 6, 0, 0, 0, 1, 4, 0, 5, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 8], [0, 107, 0, 11, 1, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 2, 0, 1], [0, 83, 1, 4, 0, 4, 1, 1, 13, 0, 7, 4, 1, 1, 0, 1, 2, 0, 0, 0, 0, 1, 4, 0, 4, 1, 2], [3, 93, 3, 5, 0, 8, 0, 3, 0, 6, 3, 2, 0, 0, 11, 5, 0, 0, 0, 2, 9], [1, 126, 1, 6, 0, 0, 0, 0, 1, 0, 16, 1, 2, 0, 0, 0, 6], [0, 120, 0, 4, 2, 1, 0, 2, 2, 0, 16, 3, 6, 0, 0, 10, 1, 0, 0, 14, 0, 5], [4, 122, 0, 15, 3, 0, 3, 2, 7, 4, 3, 1, 1, 2, 5, 0, 0, 0, 2, 0, 10, 0, 5, 1, 3], [1, 107, 0, 2, 0, 2, 1, 0, 3, 1, 35, 5, 0, 1, 0, 29, 15, 0, 1, 0, 3, 4, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

