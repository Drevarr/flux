created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Luke The Ghastly", "Cuz Imasir", "Hyde En Sikh", "Tootsie Pop Rocks", "Zaedy Zae", "Forever Dreaming", "Bee Nemesis", "Xanvias Einzbern", "Belvyn Brightblade", "High Sorcer Baradun", "Belladonna Horror", "Newtype Khan", "Mistwalker Cael", "Tegan Parker", "Loganlek", "Greg The Knight", "Yummy Kiwi", "Venomina The Fierce", "Bearah", "Sofya De Nova", "Sub Train", "Sygaldry Verdandi", "Koralia Danai", "Drevarr Moonwillow", "Gabe Malhorn", "Crusader Siolith"];
const professions = ["Berserker", "Scourge", "Scrapper", "Chronomancer", "Scrapper", "Druid", "Scourge", "Spellbreaker", "Berserker", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Herald", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 149.7272, 0.0, 117.5475, 0.0, 0.0, 29.711, 0.0, 73.0735], [180.2689, 138.1559, 49.094, 182.9084, 9.996], [53.169, 75.8115, 132.1577, 111.9225, 191.3072], [0.0, 0.0, 0.0, 56.8339, 0.0, 191.68, 8.5176, 0.0, 0.0, 0.0, 49.7896, 0.0, 0.0, 100.0646, 19.2683, 194.1724], [98.2998, 0.0, 0.0, 0.0, 8.892, 30.12, 79.092, 8.6567, 46.8105, 19.0118, 0.0, 9.472, 78.2861, 182.1901, 20.8145, 44.9616], [127.6326, 89.9708, 17.4041, 0.0, 17.328, 78.24, 81.4648, 0.0, 18.7143, 0.0, 0.0, 0.0, 61.3578, 69.2882, 0.0, 164.8592], [67.3302, 133.1345, 51.6865, 24.7996, 139.675, 131.2079, 227.6141], [329.107, 498.104], [1.9206, 0.0, 0.0, 28.6697, 0.0, 0.0, 113.9533, 0.0, 70.6874, 111.8614, 0.0, 104.451, 109.668, 126.0683, 67.7958, 103.8084], [349.5492, 173.8634, 75.6864, 0.0, 193.8912, 99.6, 17.743, 222.6744], [593.1162, 16.4145, 26.0733, 53.3146, 176.7456, 193.6, 22.8965, 91.26], [0.0, 178.0224, 175.92, 0.704, 98.2566, 76.9488, 128.3194, 125.1754, 0.0, 56.536, 308.9826, 171.1632], [152.9496, 0.0, 51.5872, 52.3411, 0.0, 5.44, 1.3365, 148.3888, 96.186, 94.3656, 38.0817, 0.0, 131.165, 64.1698, 230.9057, 97.2929, 457.1096], [198.5202, 82.7251, 36.8151, 11.129, 2.4168, 78.72, 7.7715, 103.6714, 26.4394, 322.0643, 46.8027, 59.6904, 79.809, 178.2246, 142.8554, 304.3675, 272.8552], [302.058, 36.5034, 19.1314, 29.8771, 72.2304, 174.36, 4.939, 9.0321, 89.352, 139.943, 0.0, 0.0, 126.2026, 322.2476, 290.3325, 348.4524], [437.4536, 826.2762, 860.0008], [1093.869, 191.5142, 67.2147, 21.631, 398.316, 152.64, 24.8765, 270.5555], [982.4742, 209.1993, 88.9123, 0.0, 513.3192, 247.4, 489.5186], [146.062, 69.9924, 251.6299, 103.8275, 173.974, 110.0054, 455.8866, 532.7323, 879.396], [747.1134, 197.5924, 9.0969, 13.8434, 34.9752, 78.44, 229.1843, 161.2875, 172.5486, 206.804, 0.0, 127.539, 87.397, 197.3314, 128.4552, 675.526], [465.904, 337.665, 743.737, 894.072, 974.6088], [573.9102, 249.1024, 20.9079, 0.0, 0.0, 144.52, 7.667, 196.8174, 180.2901, 87.8628, 153.8384, 9.1868, 226.403, 217.4238, 452.4304, 433.2984, 1159.304], [559.7676, 251.3688, 130.0866, 0.0, 174.192, 76.76, 24.8985, 166.3974, 75.2597, 219.9548, 320.6421, 60.6424, 115.736, 217.9862, 601.5399, 454.5887, 924.3576], [755.6688, 186.0885, 53.7751, 11.466, 227.2248, 119.16, 89.3131, 58.8611, 217.8203, 473.3177, 27.6556, 135.013, 212.5872, 525.9977, 805.2238, 1193.466], [1197.2322, 119.2285, 82.6942, 0.0, 495.0792, 165.84, 50.578, 254.2504, 174.8474, 250.1856, 263.5486, 52.3719, 226.477, 278.5567, 777.9697, 300.3235, 938.4632], [730.0026, 292.3708, 67.6589, 25.3937, 86.3664, 226.92, 27.676, 470.1107, 157.487, 334.8218, 298.8977, 45.8864, 267.954, 177.9434, 486.9922, 568.7711, 1409.8988], [1207.5336, 58.9274, 96.9398, 39.181, 199.044, 276.96, 46.53, 533.0801, 87.9281, 305.4846, 658.3192, 119.2142, 66.711, 35.2625, 574.2196, 1001.8316, 1635.1476]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

