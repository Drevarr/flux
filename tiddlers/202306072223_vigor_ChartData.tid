created: 20230607222341000
creator: Drevarr
modified: 20230705163534483
modifier: drevarr
tags: ChartData
title: 202306072223_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Grasszanine", "Inedible Plant", "Uneeta Healah", "Newtype Khan", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Tempest", "Spellbreaker", "Vindicator", "Scrapper", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[95.202, 0.0, 1849.4085, 31.7786, 110.5795, 19.4195, 0.0, 42.7496, 29.6058, 0.0, 0.0, 13.742, 31.1328, 46.767], [0.0, 15.962, 2021.473, 0.0, 176.4216, 64.7087, 0.0, 60.0631, 0.0, 52.7782, 0.0, 2.0093, 0.0, 67.1244], [35.9775, 66.516, 1853.9665, 67.855, 230.0626, 55.5136, 7.0476, 47.3947, 7.0303, 73.4789, 0.0, 25.4389, 27.784, 102.5573], [71.955, 69.506, 2922.8175, 63.2315, 69.7992, 32.6288, 0.0, 53.7289, 7.7409, 4.4481, 0.0, 43.5045, 69.6624, 122.0894], [104.7037, 35.834, 2804.3095, 249.3445, 221.5987, 75.5163, 0.0, 93.1252, 28.9967, 71.2976, 0.0, 70.9168, 28.704, 62.6128], [356.2695, 232.346, 5955.027, 210.533, 376.2562, 132.9856, 35.2464, 74.5697, 28.4129, 141.3548, 0.0, 31.3053, 74.0784, 220.9603], [543.0757, 410.09, 9702.8425, 623.524, 709.9733, 223.2895, 68.0904, 177.7054, 104.1088, 364.2721, 146.8175, 128.6477, 167.624, 341.124]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

