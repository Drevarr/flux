created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00e2 \u00d4tik R\u00e6j", "Aidoneusz", "Bella Sassy", "Amiti\u00e9l", "Hayuf", "Zayde Sunsabre", "Sonia Truestrike", "Jerryatric Reflexes", "K\u00e2 Otik", "Sarette Fay", "Jmbrage Rev", "Koranthin", "Blaze All Might", "Boof Floof", "Tika Fiery"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.087, 0.0, 2.1054, 3.2615, 1.4844, 1.555, 1.4737], [14.2912], [14.6612], [2.2662, 3.2314, 1.421, 6.0192, 2.823], [2.6825, 0.0, 1.1124, 4.853, 7.2804], [5.8212, 0.0, 2.5648, 6.2844, 0.0, 2.6196, 1.6887, 1.0275], [7.056, 5.3209, 3.4207, 0.0, 3.9512, 0.0, 1.5278], [1.85, 1.0445, 1.3236, 2.8215, 15.4523], [6.9837, 0.0, 29.5674], [3.6075, 2.2195, 0.0, 1.9939, 17.8296, 6.8796, 0.0, 3.139, 4.5343, 0.0, 3.7766, 2.5247, 1.1762], [3.2837, 5.8752, 4.0113, 1.2038, 23.6242, 8.6436, 1.0962, 2.9476], [2.3125, 2.8723, 1.4129, 5.342, 7.8747, 6.5268, 0.0, 7.9622, 11.137, 0.0, 2.0957, 3.2102, 0.4732], [33.5791, 13.5828, 2.6726, 8.4982, 21.6376, 1.848, 5.0209, 1.4546, 0.0], [9.8513, 2.9866, 3.2561, 8.3893, 36.2535, 15.6996, 3.299, 9.1872, 16.3873, 5.0864, 4.1967, 3.2583], [3.6538, 6.8707, 2.0056, 8.6902, 39.2251, 19.1394, 2.4534, 10.6801, 23.7059, 0.0, 5.654, 4.6314, 2.4742]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

