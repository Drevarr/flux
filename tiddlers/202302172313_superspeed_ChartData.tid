created: 20230217231312000
creator: Drevarr
modified: 20230705163519527
modifier: drevarr
tags: ChartData
title: 202302172313_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Mike The Archmagus", "Tribal S", "Mac Aaroni", "Mako Engi", "Sofya De Meme", "Tegan Parker", "Arcanophage Farra", "Zadie Miststep", "Minka Bringer", "Venomina The Siren", "Jeckyll Mbs", "Fruji", "Demon Sekhmet", "K\u00f4sair", "Cat Wigglebooty", "Xanvias Tseli", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Tempest", "Weaver", "Druid", "Tempest", "Scrapper", "Weaver", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Berserker", "Scrapper", "Berserker", "Berserker", "Scrapper", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.631, 0, 0, 0.175, 0.264, 0.242, 0.277, 0, 0.777, 0.317, 0.205, 0.309, 0, 0.08, 0.236, 0, 0.444], [0, 0.164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.443, 0.749, 0.337, 0, 0.642, 0.188, 0, 1.004, 0.038, 0, 0, 0], [0.36, 0, 0, 0.38, 0.475, 0.457, 0.217, 0, 0.484, 0.616, 0.427, 0, 0, 0.435, 0.118, 0.4, 0, 0, 0, 0, 0], [0.36, 0, 0, 0.543, 0.463, 0.936, 0.647, 0.49, 0.777, 0.375, 0.169, 0, 0.681, 0.155, 0.244, 0.536], [0.856, 0, 0, 0.646, 0.463, 0.62, 1.056, 0, 1.101, 0, 0.045, 0.246, 0, 0.774, 0.36, 0.043], [0.111, 0.0, 0, 0.32, 0.022, 0, 0, 0, 0, 0.137, 0, 0, 0.309, 0, 0.214, 0.652, 1.507, 0.198, 0.713, 0.542, 0, 0, 0.557, 0.816, 0.348, 0.206, 0.534], [0.36, 0.437, 0, 0.499, 0.529, 0.457, 0.341, 0.777, 0.403, 0.205, 0, 0.506, 0.429, 0.279, 0.713, 0, 0.466, 0, 0.542, 0.36, 0, 1.11, 0.676, 0.155, 0.261, 1.071], [0.542, 0.729, 1.005, 0.733, 0.141, 0.727, 0, 0.816, 1.088, 0.659, 0.473, 0.674, 0.739, 0.382, 0.359, 0, 0.612, 0, 0.813, 0, 0, 0, 0, 0, 0, 0], [0.36, 0.328, 0, 0.652, 0.264, 0.446, 0.406, 0, 0.49, 0, 0.351, 0.205, 0, 0.607, 0.432, 0.534, 0.679, 0.348, 0.499, 0.542, 0.721, 0.336, 0.552, 0, 0.31, 0.261, 1.437], [0.897, 0.656, 0, 1.097, 0.364, 1.256, 0.486, 0.192, 0, 0.392, 0.388, 0, 0.983, 1.014, 0.449, 0.911, 2.261, 0.291, 0.249, 0.271], [0.36, 0.437, 0, 0.628, 0.759, 0.619, 0.395, 0.49, 0.777, 0.54, 0.205, 0, 0.581, 0.772, 0.428, 0.684, 0.637, 0.249, 0.542, 0.457, 0.336, 0.557, 0.77, 0, 0.261, 1.06], [0.491, 0.729, 0, 0.94, 0.756, 0.438, 0.655, 0, 0.816, 1.295, 0.891, 0.501, 0.739, 0.357, 0.801, 1.881, 0, 0.416, 0.678, 0.599, 0.42, 0, 0, 0, 0.543, 0], [0.18, 0.219, 0.302, 0.635, 0.488, 0.627, 0.746, 0, 0.245, 0.389, 0.289, 0.513, 0, 1.162, 0.222, 0.334, 1.386, 0, 1.508, 0, 1.038, 0.954, 0, 0.279, 0, 0.077, 0.13, 1.406], [0.347, 0.643, 0, 0.572, 1.015, 0.761, 0.724, 0, 0.815, 0.345, 0.892, 0.342, 0.516, 0.722, 0.511, 0.798, 0.486, 0.364, 0, 0.601, 0, 0.588, 0, 0, 0.557, 0.891], [0.601, 0.729, 1.001, 0.562, 1.229, 0.761, 0.714, 0, 0.959, 0.972, 0.855, 0.342, 0, 0.945, 0.702, 0.357, 0.761, 0, 1.165, 0, 0.904, 1.192, 0, 0.929, 2.14, 0, 0.434, 0.67], [0.405, 0.875, 1.193, 1.632, 0.86, 0.228, 0.217, 1.915, 0.774, 0.434, 0.385, 0.608, 0.811, 0, 0.575, 1.043, 0.591, 0.331, 0.418, 0.161, 0.751, 1.003, 1.115, 1.156, 0.619, 0.584, 0.526], [0.601, 0.699, 1.002, 1.02, 0.973, 0.571, 0.57, 0.816, 1.295, 1.04, 0.342, 1.348, 0.681, 0.713, 1.145, 0, 0.389, 0.416, 0.904, 1.201, 0, 0.929, 1.347, 0, 0.434, 1.671], [1.709, 1.264, 1.508, 1.899, 0.925, 1.542, 0.38, 1.224, 2.532, 1.949, 0.513, 1.292, 1.512, 1.658, 2.226, 1.392, 1.942, 0.873, 1.22, 1.597, 1.339, 2.599, 1.018, 0.6, 0.656, 2.495], [1.617, 0.866, 2.399, 2.253, 1.417, 1.142, 0.893, 1.057, 1.845, 1.499, 0.755, 0.202, 1.945, 1.48, 1.682, 1.526, 0.6, 2.559, 0.957, 1.356, 2.042, 1.172, 2.224, 1.027, 0.616, 0.627, 1.83]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

