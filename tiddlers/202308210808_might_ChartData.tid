created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosair", "Drevarr Moonwillow", "Gumaass", "Crabbedmermaid", "Meryndah", "Xuerreux", "Luke The Ghastly", "Minnie Darley", "Ka Otik Nightm\u00e6r", "Ria Zera", "Mom Tapper", "Grae Leon", "Flick Embermage", "Reina Armitage", "Drac Tepes", "Gestern Yesteryear", "Hawaiian Supreme", "Xanvias Tsolice", "Serum Vision", "Darks Na", "Sapir Yong", "Crabbedmermaid"];
const professions = ["Firebrand", "Scrapper", "Dragonhunter", "Dragonhunter", "Druid", "Berserker", "Scourge", "Dragonhunter", "Reaper", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Druid", "Scourge", "Firebrand", "Spellbreaker", "Weaver", "Tempest", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6586, 0.0, 1.9854, 0.0, 0.0, 1.3651, 4.4688, 4.7436], [0.0, 0.0, 4.0678, 0.0, 0.0, 0.0, 3.5568, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.726, 2.1379, 2.3166], [1.2841, 8.1972, 1.1587, 0.0, 0.0, 0.0, 0.2975, 3.6105, 0.0, 1.1536, 1.2006, 4.38], [0.4446, 0.669, 0.0, 0.159, 0.0, 11.5824, 8.4688], [0.0, 0.9117, 1.3768, 0.0, 0.0, 1.4909, 0.0, 5.7144, 1.8392, 7.4613, 0.0, 0.0, 0.0, 2.898], [0.0, 0.0, 2.412, 0.0, 0.0, 2.3905, 0.0, 0.0, 0.0, 0.0, 2.7398, 0.0, 5.5427, 0.0, 1.0659, 1.0037, 6.7896], [0.6021, 0.4266, 18.7872, 6.9144], [3.3022, 2.6292, 1.8282, 0.6052, 6.8724, 0.8976, 2.673, 0.9891, 0.0, 0.0, 1.6683, 0.0, 3.2144, 1.8922, 2.2426], [1.2798, 24.4416, 7.6648], [0.0, 7.3048, 0.0, 0.0, 0.0, 14.7744, 17.4736], [0.0, 0.0, 9.4848, 0.9648, 0.0, 0.9229, 0.3087, 1.0353, 1.0989, 0.0, 0.5871, 0.0, 10.0195, 0.0, 0.0, 0.0, 2.484, 2.3827, 5.3262, 0.0, 0.0, 0.0, 0.2988, 0.0, 2.9792, 0.0, 9.0754], [0.0, 0.0, 17.3448, 0.0, 0.0, 0.0, 0.0, 12.7456, 10.1024, 14.2114, 2.3827], [5.0025, 3.1968, 11.4534, 0.0, 0.0238, 3.1007, 7.6162, 10.1764, 4.389, 15.0647, 0.0], [0.4368, 0.0, 4.3376, 1.2897, 0.0, 2.0761, 26.5392, 12.0332, 0.0, 0.0, 3.2227, 1.9341, 2.5704, 3.1066, 2.1254, 6.0667, 3.4694, 14.3541, 0.0, 0.0, 0.0, 20.2032, 5.1571, 8.6526], [4.7476, 2.1532, 0.8293, 3.0431, 12.4032, 10.586, 0.0, 4.7952, 6.7631, 0.5355, 2.6359, 1.0692, 5.2546, 7.6323, 11.8294, 11.0854, 0.0, 0.0, 3.2767, 18.63, 0.1958, 0.0, 0.0, 0.0, 9.0636, 0.6832, 4.1104, 0.1566, 5.9918], [3.649, 6.197, 5.6971, 0.0, 4.7598, 0.0, 5.2896, 2.0904, 0.0, 5.109, 0.0, 0.5733, 2.7787, 0.4039, 9.7416, 3.8944, 5.4758, 25.6527, 0.0, 4.1215, 0.0, 20.5344, 5.9242, 0.891, 0.0, 0.0, 0.0, 0.249, 4.6592, 2.4304, 4.5022, 14.6117], [15.1668, 6.331, 42.4794, 19.0624, 18.0096, 6.1465, 73.2686], [27.9984, 10.1036, 2.7275, 4.0078, 5.4165, 1.4616, 3.689, 2.2988, 8.177, 6.1646, 16.7618, 11.867, 1.9186, 2.0959, 25.668, 5.2877, 4.4946, 1.3835, 1.4455, 9.8853, 4.3008, 6.5968, 4.3326, 13.3502], [4.7376, 2.223, 4.8879, 0.836, 1.1133, 1.7633, 29.0016, 9.8892, 2.2098, 2.2437, 5.8402, 1.7073, 0.0, 1.6513, 2.214, 1.6047, 10.7844, 15.42, 2.5646, 1.4096, 25.0056, 4.6349, 3.861, 0.5562, 0.8683, 7.7439, 2.6656, 4.3568, 3.0015, 27.4714], [4.3814, 12.3714, 37.2096, 23.2088, 0.0, 3.2205, 8.7905, 0.2394, 8.6156, 1.1999, 9.1512, 6.6538, 6.1446, 18.973, 2.7, 1.1951, 1.3505, 38.8332, 14.0842, 13.167], [1.3817, 3.7873, 0.352, 8.679, 9.5558, 65.7552, 26.7732, 0.7221, 2.6166, 17.339, 7.5981, 7.0092, 0.797, 21.39, 21.1926, 23.4498, 6.1564], [2.0662, 3.8302, 10.9995, 5.9283, 4.4327, 1.289, 10.6862, 6.0276, 14.9644, 34.0377, 0.33, 11.4407, 1.3874, 49.68, 13.4966, 7.9794, 0.0, 2.9646, 23.9787, 5.4768, 11.5024, 7.6342, 23.7221]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

