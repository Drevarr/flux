created: 20230726221017000
creator: Drevarr
tags: ChartData
title: 202307262210_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00edr", "Koralia Danai", "Brioche Bunbringer", "Brie Cheesebringer", "Nilann Thunderfury", "Johosh Icebringer", "Dizzy Bunnyhopper", "Bella Sassy", "Crusader Siolith", "Permanent Dawn", "Drevarr Moonwillow", "Oo Dads Mad", "Cael Saladbringer", "Gavann", "Mort\u00e4rion", "Necrotic Windrunner", "Vee Usagi", "Sub Train", "Ravioli Ryebringer", "Keypek The Drunk", "Bubble Teabringer", "Jimbo The Pleb", "Lord Erin The Wise", "Cedryn X", "Kahlianne", "Rozaalyna", "Kosa\u00edr", "Legacy Of Mathus", "Name Is What", "Xanvias Einzbern", "Be\u00eb", "Il Dim Il", "Sister Elonith"];
const professions = ["Scrapper", "Firebrand", "Chronomancer", "Dragonhunter", "Dragonhunter", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Weaver", "Scrapper", "Berserker", "Vindicator", "Firebrand", "Scrapper", "Scourge", "Scourge", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Weaver", "Berserker", "Scourge", "Scourge", "Holosmith", "Berserker", "Scourge", "Berserker", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[59.4932, 15.1261, 0.0, 2.0105, 37.3009], [0.0, 19.7755, 0.0, 16.2059, 0.0, 0.0, 31.9118, 9.8729, 2.8767, 0.0, 0.0, 1.2772, 27.9, 25.7188, 0.087, 0.8772, 4.4194, 5.1106, 0.1799, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.8936, 3.7092, 0.0, 0.0, 4.2222, 0.0, 27.1961, 4.4068, 17.8904, 1.2252, 0.0, 1.0877, 10.7556, 0.0, 16.1304, 19.8596, 16.3952, 0.1, 6.0354, 8.1007, 0.0, 1.5345, 7.2321, 29.8077, 4.1429, 0.0, 0.9502, 0.0209], [5.5532, 9.5051, 0.0, 38.0588, 0.0, 3.48, 39.0294, 70.5593, 16.1644], [4.5918, 0.0, 0.0, 12.5556, 0.0, 8.1961, 8.822, 11.6438, 37.7748, 0.0, 3.1789, 47.5333, 40.0625, 25.4457, 46.9123, 0.0, 0.0], [0.0, 10.9898, 0.0, 2.4265, 175.3056, 0.0, 14.402, 13.0424, 7.863, 1.7387, 0.0, 0.2877, 32.0556, 0.0625, 5.6522, 2.2807, 12.4758, 24.9248, 3.8058, 0.0, 0.0, 2.9911, 0.0, 1.8889, 0.0, 4.2534, 0.0], [6.4414, 2.4222, 9.9614, 0.2333, 47.6562, 11.6413, 7.1404, 39.9194, 0.0, 33.1062, 13.1151, 0.0, 13.8621, 17.4821, 85.7692, 6.6825, 0.7763], [0.0, 1.0153, 0.0, 17.2206, 0.0, 0.0, 33.1863, 27.9492, 9.9452, 10.3063, 0.0, 4.5228, 18.4111, 9.25, 2.8804, 33.1404, 24.6371, 0.0, 7.9513, 6.4173, 0.0, 5.1897, 30.0982, 0.0, 5.5397, 0.0, 8.4389, 0.0], [3.2128, 0.0, 0.0, 2.7794, 5.75, 4.7333, 46.7157, 3.2712, 5.137, 0.0, 0.0, 0.0316, 43.2111, 18.5938, 0.5435, 7.6667, 36.0887, 39.5398, 6.6403, 0.0, 0.0, 0.8214, 0.0, 3.8254, 0.0, 5.0995, 0.0], [0.0, 3.6596, 61.6556, 88.0938, 11.1087, 84.9123, 24.7016, 6.4823, 11.6835, 65.0446, 0.0, 22.2381, 0.0, 4.8959, 0.0], [4.1064, 9.9643, 0.0, 20.3676, 11.4444, 0.0, 23.3725, 30.2881, 12.6712, 31.9099, 1.0167, 2.786, 23.7222, 5.7188, 9.7609, 12.4035, 19.2903, 0.0, 31.7655, 8.4245, 11.125, 0.0, 1.1786, 13.1538, 23.3651, 0.0, 0.6878, 0.0], [2.1915, 2.7806, 0.0, 253.3824, 9.9444, 1.2267, 134.9902, 6.0932], [2.7021, 6.1327, 0.0, 11.6471, 0.0, 6.36, 19.8725, 45.9407, 13.1644, 5.1982, 1.3944, 16.2632, 15.4, 83.4375, 23.2174, 15.2807, 28.9758, 0.0, 18.8584, 41.741, 5.7188, 0.0, 10.4286, 58.8077, 0.5079, 0.0, 3.3077, 7.7696], [0.0, 0.0, 0.0, 0.4167, 0.0, 60.4608, 76.9492, 51.5616, 6.8468, 0.0, 2.4491, 12.5938, 0.0217, 8.5263, 34.2258, 32.9735, 34.8273, 0.0, 4.5345, 9.4643, 5.3077, 38.7143, 0.0, 1.5928, 1.1152], [2.766, 15.5561, 0.0, 44.2059, 0.0, 15.4322, 4.9041, 17.7297, 0.3333, 9.6456, 41.3111, 0.0, 30.5, 49.2632, 70.1613, 2.1, 39.4779, 53.6978], [0.0, 22.5123, 86.2444, 72.5312, 79.2935, 191.0702, 52.3387, 6.95, 2.5354, 7.9568, 0.0, 5.5345, 15.0268, 3.2692, 27.254, 0.0, 4.6968, 0.0], [11.5745, 70.4286, 18.1562, 198.7059, 47.5278, 41.08, 77.4412, 118.5676], [4.5957, 8.5969, 0.0, 30.9118, 9.9444, 0.2267, 17.1471, 41.6949, 10.4658, 8.5225, 0.5333, 0.6737, 21.8667, 43.375, 13.3152, 11.9123, 99.9355, 0.0, 34.2301, 16.3165, 0.0, 16.3448, 9.7857, 289.0769, 40.8889, 0.0, 5.2398, 1.8168], [1.8298, 4.8214, 0.0, 41.0, 0.0, 4.88, 10.1176, 11.3898, 29.7397, 49.4324, 11.3111, 20.3018, 9.1778, 117.5312, 10.663, 5.2807, 3.3629, 60.1947, 6.5899, 47.9062, 0.0, 8.8839, 225.3846, 151.8254, 0.0, 0.181, 2.4764], [6.4043, 28.0714, 0.0625, 45.9706, 6.1111, 8.5867, 4.8431, 47.5678, 12.1507, 19.8649, 0.3333, 10.2737, 65.7, 58.6562, 59.5543, 29.2456, 54.75, 0.2, 58.6416, 50.0504, 21.5625, 4.6724, 39.2589, 80.1538, 39.873, 1.3158, 4.5566, 3.2304], [9.6809, 29.9643, 13.7188, 76.0147, 8.6, 105.7255, 21.5254, 38.6712, 26.9009, 0.4222, 13.8351, 22.3222, 0.0, 3.8478, 12.5263, 78.4597, 81.5841, 36.9065, 0.0, 49.7931, 3.5804, 325.7692, 53.0476, 4.9868, 13.3439, 0.0], [77.0851, 21.9592, 3.4375, 37.4118, 0.7778, 43.04, 113.3725, 48.4576, 40.7671, 20.7838, 9.5278, 28.7368, 20.7222, 138.7812, 80.6196, 155.5439, 70.9516, 0.0, 0.0, 5.0504, 28.2812, 6.1207, 22.2768, 10.8462, 93.5714, 0.0, 12.5566, 4.534], [1.9235, 44.3125, 97.5294, 0.0, 25.3733, 139.0392, 134.7458, 10.5342, 23.1622, 15.2333, 23.6842, 42.1333, 182.125, 104.5435, 56.2807, 102.6371, 0.0, 27.9912, 0.0, 39.9375, 58.3448, 54.8661, 78.6923, 81.6349, 0.0, 0.0181, 0.0], [3.7447, 34.7347, 0.0, 0.0, 0.6111, 23.8933, 14.7157, 83.0169, 0.0, 119.4144, 2.2167, 21.2702, 28.5111, 169.875, 104.337, 100.7018, 220.1694, 21.8673, 13.0647, 0.0, 6.5517, 73.2054, 58.8846, 79.5397, 0.0, 7.6652, 0.0], [119.0541, 0.3444, 50.5368, 0.0, 179.0938, 83.2935, 82.3158, 22.6774, 0.0, 103.6593, 140.3381, 0.0, 9.1379, 75.1875, 124.7308, 104.6825, 0.0, 29.5792, 19.6021], [7.4681, 63.5357, 0.0, 57.3824, 0.5067, 142.4902, 82.2523, 0.0, 12.0035, 200.8333, 90.8438, 92.9348, 149.2281, 146.9194, 0.0, 86.2301, 48.1583, 2.9688, 6.8103, 29.9554, 2.1538, 62.381, 0.0, 8.0543], [18.4894, 28.801, 0.5625, 93.4118, 0.3056, 5.96, 242.3529, 199.2034, 87.9778, 96.125, 108.9674, 308.5965, 175.8548, 78.3165, 3.8125, 13.1207, 100.0179, 5.5769, 22.6667, 0.0, 2.5249, 2.4084], [9.0, 17.8163, 11.3125, 134.2794, 0.0, 1.8533, 0.0, 190.6525, 205.4795, 70.6757, 0.0, 36.3754, 0.0, 0.0, 99.5439, 190.2984, 0.0, 158.531, 100.5683, 0.0625, 0.0, 2.0446], [18.3617, 42.5408, 15.0938, 116.5147, 11.1944, 20.8533, 97.1569, 150.1351, 0.7278, 32.2035, 82.3222, 144.4375, 189.5217, 429.3333, 208.621, 2.8, 178.1327, 113.1367, 4.125, 12.6379, 87.5982, 11.0769, 42.873, 0.0, 12.5249, 0.0], [0.0, 50.551, 0.0, 132.6618, 19.2778, 0.1067, 112.5392, 258.7797, 216.7671, 72.3964, 21.1167, 33.3053, 159.2111, 179.25, 8.7826, 107.3509, 245.9758, 4.25, 130.6549, 227.6835, 0.8125, 9.8448, 14.1964, 0.0, 16.2381, 0.0, 7.4887, 5.9529], [0.0, 41.1173, 10.2188, 225.2647, 33.3725, 182.2973, 2.4833, 22.5123, 331.1222, 502.2188, 213.7283, 259.6491, 281.9758, 5.35, 202.8894, 186.0863, 25.75, 19.0862, 48.75, 16.6538, 79.2857, 0.0, 8.4751, 3.0471], [216.3191, 49.1786, 44.0938, 76.1765, 2.6111, 50.36, 156.3824, 86.8468, 19.1944, 49.5579, 207.9, 348.1562, 158.9457, 229.1754, 161.121, 185.45, 186.8186, 149.7914, 16.3125, 23.8793, 130.8125, 409.0385, 142.3968, 11.3421, 36.5973, 8.9005], [6.383, 49.8061, 5.75, 195.6912, 0.0, 3.4667, 233.0784, 122.5, 253.9452, 3.3694, 0.0, 28.3439, 182.7556, 200.0625, 279.2826, 157.5614, 373.7177, 0.0, 217.854, 254.3885, 0.0, 5.2931, 54.6339, 174.5385, 123.0317, 0.0, 6.9955, 10.7644]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

