created: 20230925221023000
creator: Drevarr
tags: ChartData
title: 202309252210_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Grasszanine", "Amiti\u00e9l", "Sub Train", "Belvyn Brightblade", "Newtype Khan", "Sygaldry Verdandi", "Crusader Siolith", "Arcanophage Farra", "Glass Tingle", "Solus Luxes", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[68.2492, 5.4765, 8.19, 56.2516, 202.8705, 69.9699, 5.4522, 0.0, 0.0], [0.0, 94.1147, 98.7755, 37.674, 45.4609, 63.48, 37.6146, 67.4701, 0.0, 0.0, 72.4638], [3.0537, 55.3402, 47.8413, 41.7022, 61.6032, 76.0656, 44.7308, 63.8862, 0.0, 0.351, 157.0868], [6.1495, 76.0927, 78.2217, 61.6405, 56.8118, 45.9264, 41.6326, 131.5121, 33.767, 31.941, 79.9558], [5.1246, 65.4889, 48.0371, 48.9762, 57.04, 128.616, 15.4428, 174.0509, 6.9763, 55.3995, 90.2727], [81.6904, 104.5696, 83.6653, 31.7142, 42.1728, 40.3739, 151.457, 19.0026, 34.5735, 71.3584, 225.9306, 31.7717, 15.8114, 23.7485, 0.0], [13.6188, 107.3581, 82.6848, 47.4982, 101.189, 97.8144, 62.4973, 178.4139, 20.1309, 36.0945, 103.2916, 501.7761, 66.0059, 64.6994, 8.0165, 0.0], [81.2353, 73.7586, 43.0933, 70.9007, 135.9024, 70.2429, 238.4046, 25.5936, 54.2295, 147.5068, 402.822, 54.4744, 114.8597, 20.0412, 15.8246], [0.0, 111.7271, 91.9242, 35.4136, 48.0847, 135.24, 101.2253, 223.9133, 23.2957, 48.555, 148.2437, 479.0079, 131.9518, 165.656, 11.9048], [43.5521, 107.7677, 119.8381, 47.0345, 27.4933, 172.4448, 7.1647, 278.9178, 59.3606, 95.6475, 201.7933, 642.18, 51.2912, 13.3579, 9.4529, 7.5079], [3.9242, 158.6934, 95.6043, 55.9894, 102.0446, 170.6784, 100.0635, 259.2845, 20.4749, 89.5635, 296.7331, 739.9665, 115.4353, 99.6844, 12.0247, 11.884], [11.7023, 118.9631, 77.9868, 67.1177, 97.1391, 207.8832, 67.1931, 260.9985, 30.4096, 70.1415, 215.1806, 758.0643, 139.8797, 139.4854, 44.0086, 41.6459], [120.0099, 77.6736, 68.161, 117.7876, 208.3248, 93.044, 334.3897, 26.4054, 96.876, 248.4649, 791.3409, 181.4413, 220.7232, 8.4679]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

