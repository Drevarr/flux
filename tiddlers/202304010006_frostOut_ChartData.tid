created: 20230401000636000
creator: Drevarr
modified: 20230705163523624
modifier: drevarr
tags: ChartData
title: 202304010006_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Abigail Ryn", "Tegan Parker", "Mac Chiato", "Zadie Miststep", "Arkintor", "Mike The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[69.0662, 0.0, 82.567, 76.1372, 31.4864, 54.931, 14.8999, 20.124, 126.5616, 19.2931, 48.7862, 0.0, 33.4365, 176.6293], [20.041, 59.2704, 82.2788, 55.3923, 64.8481, 100.7068, 67.9963, 69.8045, 122.496, 20.0059, 119.1888, 11.1065, 63.6787, 140.432], [142.441, 63.2394, 16.711, 56.7553, 82.9898, 167.7564, 127.2256, 0.0, 100.7952, 0.0, 152.1686, 0.0, 72.5659, 213.1618, 19.656, 27.1026, 111.3305, 77.401, 72.5371, 16.0445, 69.8069, 30.753, 19.788, 105.8022, 112.32, 0.0, 75.2083, 19.8973, 0.0, 140.2632], [168.4877, 92.1866, 32.8457, 34.3749, 103.6174, 151.7746, 106.769, 75.5837, 159.2976, 31.5058, 246.9216, 0.0, 54.4051, 192.1305, 37.9296, 0.0, 236.2878, 98.411, 88.7656, 0.0, 109.2485, 62.271, 0.0, 114.5502, 127.6425, 16.0373, 58.3968, 19.9445, 22.4652, 141.7152], [199.2998, 144.5245, 87.7943, 45.6605, 93.369, 240.4685, 110.1853, 74.0976, 173.712, 101.0275, 45.9667, 37.0524, 137.5069, 261.9275, 97.3944, 0.0, 229.8051, 73.033, 0.0, 12.1219, 168.1733, 14.4432, 19.884, 157.3668, 142.2562, 110.0352, 69.3105, 0.0, 138.3756], [158.5651, 115.101, 141.5081, 110.9209, 121.6719, 260.631, 97.8785, 63.0552, 187.5456, 107.3952, 242.9059, 19.4225, 97.2698, 219.446, 111.8232, 304.0916, 115.5773, 92.7973, 106.1122, 102.8466, 25.488, 146.9178, 138.3412, 0.0, 95.568, 166.0623, 78.3011, 225.9312], [183.6979, 207.711, 138.8738, 125.0689, 126.8179, 201.2018, 169.2911, 110.0731, 84.4272, 92.3789, 247.776, 58.6093, 102.1126, 316.5586, 112.1256, 8.0109, 258.3157, 100.595, 137.5189, 56.3328, 178.4851, 72.522, 139.3848, 100.035, 96.6662, 166.3923, 67.1674, 181.3064]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

