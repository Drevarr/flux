created: 20230626011754000
creator: Drevarr
modified: 20230705163537832
modifier: drevarr
tags: ChartData
title: 202306260117_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Raziel Umbra", "Eibh\u00ebar", "Black Raspberry Pie", "Primal Clone", "Seiker Novus Terra", "Tegan Parker", "Zhavashian", "Arriasa", "Sakis Ranger", "Etchery Of Ascalon", "Elon The Archmagus", "Daddy Demon", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0185, 0.1313, 0.0, 0.0476, 0.4111, 0.5795, 1.1429, 0.0, 0.1377, 0.427, 0.3675, 0.4969, 0.0, 0.0, 0.59, 0.0753, 0.431, 0.4769, 0.4737, 0.9388, 0.0, 0.0575, 0.4222, 0.0], [0.3889, 0.4545, 0.0112, 0.1984, 0.6167, 0.2841, 0.7045, 0.7143, 0.7516, 0.0272, 0.0, 0.0204, 0.38, 0.3305, 0.4483, 0.8462, 0.3553, 0.0843, 0.7959, 0.0, 0.235, 0.2444, 0.0], [0.3704, 0.404, 0.0168, 0.1865, 0.6278, 0.2273, 0.25, 1.0714, 0.0, 0.6886, 0.5618, 0.247, 0.6087, 0.1875, 0.1582, 0.0204, 0.62, 0.2176, 1.0, 0.4308, 0.0921, 0.2651, 0.9388, 0.0, 0.205, 0.1778, 0.0], [0.5741, 0.6364, 0.0112, 0.1786, 0.1389, 0.4432, 0.3523, 0.9524, 0.1212, 0.7006, 0.5618, 0.0, 0.2745, 0.2559, 0.102, 0.77, 0.1757, 1.0, 0.7538, 0.8158, 0.4337, 1.2245, 0.0, 0.225, 0.9333, 0.0], [1.037, 0.5455, 0.0112, 0.2579, 0.7778, 0.375, 1.6136, 1.5357, 0.0, 0.6886, 0.8202, 0.5783, 1.1429, 0.4375, 0.2694, 0.0, 0.3775, 0.2444, 0.0], [0.0391, 0.4405, 1.5222, 0.2045, 0.9318, 1.4286, 1.1377, 0.764, 0.6145, 1.3106, 0.3723, 0.404, 0.0408, 1.1, 0.0251, 0.5862, 1.4308, 0.8684, 0.8916, 1.1633, 0.0, 0.48, 0.9556, 0.0], [1.2037, 0.7778, 0.0, 0.504, 1.1111, 1.1591, 1.1818, 1.2024, 1.3353, 1.4944, 0.7289, 1.4348, 0.4592, 0.6768, 0.0816, 0.98, 0.4351, 1.1552, 1.5538, 0.8289], [1.2593, 0.899, 0.0279, 0.4325, 1.5889, 0.5455, 0.6591, 1.618, 0.8012, 0.7764, 0.037, 0.7143, 2.05, 0.6987, 1.1897, 1.6923, 1.1447, 0.8193, 0.8163, 0.1481, 1.325, 0.6222], [1.2778, 0.4141, 0.095, 0.4365, 1.1722, 1.9432, 1.1932, 1.9286, 0.0, 1.6707, 1.8764, 0.7771, 1.6211, 0.2038, 0.0, 0.0408, 1.37, 0.6527, 0.5862, 1.8923, 1.1711, 0.8313, 1.4286, 0.0, 0.5875, 1.0667, 0.0], [1.5185, 0.8384, 0.0782, 0.7857, 1.2611, 2.3636, 1.5795, 2.4643, 0.0, 1.0299, 1.2584, 0.8313, 1.8758, 0.5571, 1.037, 0.2449, 1.5, 0.5858, 1.4828, 1.9692], [1.2381, 0.0303, 1.9222, 1.809, 0.9819, 2.1925, 0.8533, 0.6296, 0.3673, 1.99, 0.7992, 2.0345, 2.7231, 1.3158, 1.0241, 2.2245, 0.5185, 1.3625, 1.3556, 0.0435], [1.2593, 1.0202, 0.0279, 0.5516, 1.3722, 1.4432, 0.7159, 1.9286, 0.2121, 1.6048, 1.573, 1.0422, 1.9068, 0.7473, 0.9596, 0.0408, 1.61, 0.5774, 1.5517, 2.3077, 1.0395, 0.8795, 1.5102, 0.037, 0.6425, 0.9111, 0.1739], [1.0, 0.9293, 0.162, 0.5833, 1.7111, 1.5227, 2.6818, 2.1905, 0.2424, 1.9341, 1.6517, 0.8675, 1.8696, 1.0299, 1.4613, 0.4082, 1.82, 0.6192, 2.1034, 1.6769, 0.9737, 1.2771, 1.8571, 1.3333, 1.0225, 0.9778, 0.0], [1.5185, 1.4646, 0.1117, 0.2341, 2.2857, 0.1818, 3.2515, 2.7978, 0.8976, 2.5528, 1.0353, 1.8249, 0.2449, 2.82, 0.9456, 2.0517, 2.3385, 1.5789, 1.7349, 1.9592, 0.3333, 1.49, 2.4444, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

