created: 20230212214943000
creator: Drevarr
modified: 20230705163519068
modifier: drevarr
tags: ChartData
title: 202302122149_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Legionstorm", "Dark Sidiuz", "Shade Ilia", "Gangsta Mech", "Sumatra Satyricon", "Sizklea", "Koralia Danai", "Blanco Padre Guard", "Harry Callahann", "Tootsie Pop Bringer", "Primal Shield", "Ark Darkness", "Joh Oshi", "Ace Hammers", "Reverve Mk V", "Sygaldry Verdandi", "Lord Erin The Wise", "Minka Bringer", "Venomina The Fierce", "Arka\u00f1", "Be\u00eb", "Zaylen Harker", "Bella Sassy", "Smol Gluvs", "Xanvias Tseli", "Whose Guardian", "Rina Of Theros", "Ez Mode Mathus", "Kosa\u00edr", "Daring Deathblade", "Bambiae", "Morv\u00e4rth", "High Sorcer Baradun", "Hyde En Sikh", "Tegan Parker", "Newtype Khan", "Zadie Miststep", "Veggie Mac"];
const professions = ["Soulbeast", "Reaper", "Soulbeast", "Engineer", "Soulbeast", "Dragonhunter", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Druid", "Vindicator", "Herald", "Firebrand", "Weaver", "Scrapper", "Spellbreaker", "Chronomancer", "Scourge", "Firebrand", "Firebrand", "Scourge", "Berserker", "Willbender", "Scourge", "Scourge", "Scrapper", "Scourge", "Chronomancer", "Scourge", "Tempest", "Chronomancer", "Tempest", "Spellbreaker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.013, 0.0897, 0.0108, 0.0, 0.11, 0.1333, 0.1321, 0.2764], [0.1818, 0.2724], [0.0, 0.1763, 0.1075, 0.0606, 0.15], [0.1169, 0.0, 0.3871, 0.0303, 0.18], [0.1688, 0.109, 0.147, 0.0, 0.17, 0.1667, 0.0943, 0.187], [0.2208, 0.1955, 0.2581, 0.0, 0.25], [0.1299, 0.1827, 0.3584, 0.0303, 0.52, 0.1667, 0.0755, 0.0976], [0.2857, 0.2179, 0.319, 0.0909, 0.21, 0.1667, 0.1321, 0.252], [0.3117, 0.2212, 0.2652, 0.2727, 0.24, 0.1333, 0.0566, 0.3252], [0.3269, 0.3047, 0.2727, 0.43, 0.1, 0.0377, 0.3415], [0.2078, 0.2019, 0.4839, 0.2424, 0.67, 0.1, 0.0566, 0.2358], [0.2597, 0.2436, 0.6022, 0.0909, 0.62], [0.2338, 0.2404, 0.5914, 0.1212, 0.34, 0.2333, 0.0566, 0.1951], [0.1818, 0.2179, 0.4875, 0.0, 0.73, 0.3667, 0.1132, 0.2114], [0.4935, 0.2147, 0.5448, 0.0, 0.37, 0.2, 0.0943, 0.2602], [0.4545, 0.1763, 0.5341, 0.1515, 0.61, 0.1333, 0.0755, 0.2439], [0.1169, 0.2051, 0.5376, 0.1212, 0.32, 0.2333, 0.3585, 0.5528], [0.1299, 0.2436, 0.6846, 1.0606, 0.2, 0.0377, 0.2846], [0.0, 0.2244, 0.6631, 0.1212, 0.45, 0.1333, 0.1509, 0.374], [0.4805, 0.2436, 0.6846, 0.1212, 0.18, 0.3, 0.1132, 0.3496], [0.3766, 0.3205, 0.6667, 0.0, 0.71, 0.4], [0.3896, 0.2276, 0.6953, 0.5152, 0.5, 0.1667, 0.1698, 0.2195], [0.1688, 0.3141, 0.5197, 0.5758, 0.88, 0.2, 0.1887, 0.2927], [0.2987, 0.3237, 0.6595, 0.0, 0.48, 0.4667, 0.3962, 0.3496], [0.4026, 0.266, 0.6416, 0.1515, 0.81, 0.1333, 0.2075, 0.3496], [0.3117, 0.234, 0.6882, 0.0909, 0.81, 0.2, 0.1132, 0.4715], [0.3896, 0.3173, 0.7419, 0.0, 0.61, 0.0667, 0.1321, 0.3577], [0.3173, 0.7957, 0.0303, 0.66, 0.2333, 0.2075, 0.3577], [0.2917, 0.7491, 0.0606, 0.96, 0.3667, 0.1132, 0.3089], [0.4026, 0.3141, 0.3011, 0.303, 1.08, 0.2, 0.3019, 0.8374], [0.2208, 0.3045, 0.6738, 0.3939, 0.87, 0.3667, 0.2642, 0.3496], [0.4156, 0.391, 0.6989, 0.0303, 0.59, 0.2667, 0.0566, 0.4553], [0.5455, 0.2596, 0.8459, 0.58, 0.2667, 0.2075, 0.4228], [0.3247, 0.266, 0.8172, 0.3333, 0.98, 0.1667, 0.3019, 0.3333], [0.3766, 0.2949, 0.9427, 0.303, 0.71, 0.2333, 0.1321, 0.2846], [0.4156, 0.3301, 0.8961, 0.2121, 0.25, 0.1, 0.4151, 0.6667], [0.5974, 0.3301, 0.8136, 0.4848, 0.85, 0.3333, 0.0755, 0.4065], [0.2987, 0.3301, 0.8996, 0.2424, 0.89, 0.4, 0.5283, 0.4634]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

