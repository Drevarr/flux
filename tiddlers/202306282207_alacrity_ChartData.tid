created: 20230628220723000
creator: Drevarr
modified: 20230705163539637
modifier: drevarr
tags: ChartData
title: 202306282207_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Conditions M\u00e6 Apply", "My Birthday Girl", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Rahani Sunray", "Tegan Parker", "Arriasa", "Demon Staph", "Tribal S", "Miphest\u00f6"];
const professions = ["Scrapper", "Tempest", "Scrapper", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Druid", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.8065, 24.3099, 14.7294, 32.1597, 8.3177, 10.7482, 2.5872, 23.0707, 0.0, 23.139, 7.776, 12.054, 17.2753, 10.4717, 0.0, 7.5456, 30.2438, 22.5346, 0.0, 27.8663, 19.1835, 0.0, 17.0726], [150.2388, 200.5781, 0.0, 32.3424, 42.8544], [0.0, 0.0, 24.2256, 33.4454, 16.1406, 41.7637, 20.2953, 8.9856, 7.9772, 14.807, 0.0, 21.3493, 0.0, 16.0598, 2.6813, 51.001, 25.8437, 37.388, 47.7642, 4.5641, 31.0087, 19.845, 0.0, 19.7338], [2.6082, 0.0, 45.423, 34.9938, 26.5041, 36.2208, 19.6774, 2.9376, 14.8225, 5.4374, 0.0, 43.0182, 7.3613, 10.143, 7.1769, 39.6566, 0.0, 15.4056, 39.6106, 25.1723, 0.0, 34.151, 16.5596, 0.0, 22.2566], [0.0, 0.0, 32.5532, 46.1423, 48.7746, 22.9398, 0.0, 0.0, 10.4566, 16.3738, 0.0, 26.399, 10.6272, 24.6593, 16.9285, 28.3123, 0.0, 51.876, 22.0676, 20.0117, 16.3705, 10.1386, 21.5428, 0.0, 27.4061], [168.6982, 63.1512, 68.161, 29.8013, 0.0, 26.6535, 7.1578, 0.0, 34.4529, 54.8986, 47.8117, 13.0732, 44.6016, 0.0, 19.4299, 58.2649, 16.9726, 50.0167, 55.9105, 7.497, 10.0224], [142.2245, 184.4919, 40.2633, 99.2779, 22.1965, 12.2353, 17.4797, 0.0, 73.4441, 76.2048, 41.1233, 9.378, 71.4595, 1.5235, 76.3992, 136.5336, 123.0516, 45.1508, 101.5638, 38.3229, 80.5248], [0.0, 218.3332, 425.9648, 185.4405, 316.8771, 136.0309, 0.0, 77.616, 154.4294, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [61.7501, 34.9197, 133.3922, 357.2159, 106.5015, 38.0867, 62.597, 44.0986, 28.6209, 59.6789, 0.0, 10.8782, 178.6844, 127.7535, 68.0846, 150.4187, 84.4074, 0.0, 122.2387], [0.0, 147.8771, 455.849, 167.8005, 181.3784, 41.6363, 45.8611, 72.9267, 108.0115, 0.0, 167.8539, 69.2582, 68.649, 70.4085, 70.6838, 0.0, 149.7173, 309.3439, 155.162, 19.7276, 141.1102, 50.7591, 0.0, 82.3219], [27.6012, 135.6129, 428.2874, 187.2045, 190.4885, 119.0151, 53.1187, 47.9979, 40.1203, 91.5729, 49.6019, 144.3744, 21.4252, 63.1916, 93.9058, 105.5461, 137.3928, 291.9596, 226.7797, 145.5238, 115.2598, 67.6274, 30.088, 176.567]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

