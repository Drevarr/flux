created: 20230520000848000
creator: Drevarr
modified: 20230705163530740
modifier: drevarr
tags: ChartData
title: 202305200008_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Solus Sanctus", "Tegan Parker", "Artakama Nahid", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[169.8113, 455.7763, 0.0, 100.3721, 35.4103, 120.6364, 35.1, 10.5481, 84.1579, 16.1237, 69.545, 98.15, 123.2539, 104.8696, 9.12, 98.942, 159.7836, 18.883, 0.0, 24.0921, 2.6301, 150.6845, 81.0, 87.4457, 77.717, 52.5526], [144.1698, 660.267, 50.5882, 148.2093, 82.4545, 24.9667, 18.875, 332.5132, 0.8247, 255.5024, 222.3944, 151.5078, 314.7826, 139.4493, 229.0994, 29.5106, 6.1111, 18.5833, 25.8947, 16.9726, 119.8717, 57.7879, 191.9674, 245.283, 151.2982], [18.2358, 1997.1311, 203.2941, 434.0194, 232.7622, 99.3667, 244.3269, 584.8289, 106.5464, 312.1991, 554.6556, 264.2953, 641.8478, 32.88, 169.8696, 413.5029, 23.1383, 329.9079, 262.8767, 83.4973, 30.8788, 557.212, 709.1887, 67.7105], [533.283, 2269.7752, 113.5882, 623.3256, 474.3846, 478.5524, 492.1667, 159.5192, 729.7368, 119.2784, 796.891, 609.2833, 417.6632, 179.087, 86.94, 380.6449, 673.0058, 279.5426, 14.3651, 407.3026, 95.1781, 549.7807, 422.0, 764.6033, 479.0377, 668.6579], [619.3019, 3375.4309, 345.8431, 667.0698, 258.0256, 704.2238, 512.7667, 483.3173, 1431.1053, 314.732, 1033.7014, 904.8278, 510.399, 648.6957, 302.4, 988.2464, 942.0877, 328.8191, 26.7619, 0.0, 386.4211, 473.589, 630.6471, 250.7273, 1286.5707, 698.2453, 1113.0351]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

