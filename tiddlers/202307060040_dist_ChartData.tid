created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Rahani Sunray", "Ateriuz", "Lord Erin The Wise", "Miphest\u00f6", "Necrotic Windrunner", "Fribble Bibble", "Xanvias Einzbern", "Gavann", "Body Ody Ody", "Black Raspberry Pie", "Drevarr Moonwillow", "Koralia Danai", "Glorious Gluvs", "Bella Sassy"];
const professions = ["Chronomancer", "Berserker", "Weaver", "Tempest", "Reaper", "Scrapper", "Berserker", "Firebrand", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[374, 404, 1439, 944, 0, 0, 0, 0, 0, 0, 0, 0], [775, 1023, 574, 1228, 647, 794, 100, 258, 254, 503, 398, 240], [1090, 679, 588, 421, 1145, 838, 746, 536, 501, 704, 728, 374], [809, 1062, 453, 1237, 1210, 558, 1071, 419, 373, 672, 606, 320], [933, 792, 685, 851, 474, 355, 610, 664, 387], [337, 1258, 818, 1363, 274, 697, 450, 234, 245, 648, 490, 234], [879, 897, 953, 1226, 524, 272, 1216, 267, 237, 442, 539, 197], [884, 1130, 421, 2492, 519, 348, 776, 251, 196, 496, 242, 347], [481, 1003, 1218, 2293, 2840, 750, 772, 316, 303, 495, 489, 181], [444, 704, 634, 1340, 468, 345, 663, 226, 361, 646, 217, 192], [360, 635, 599, 1048, 344, 291, 418, 243, 210, 514, 228, 237], [365, 450, 1013, 1043, 257, 248, 334, 247, 242, 633, 465, 297], [245, 1123, 383, 756, 428, 345, 800, 314, 253, 689, 419, 196], [324, 525, 737, 1346, 263, 211, 574, 250, 177, 462, 164, 266]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

