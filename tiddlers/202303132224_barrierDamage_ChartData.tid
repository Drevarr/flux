created: 20230313222416000
creator: Drevarr
modified: 20230705163521847
modifier: drevarr
tags: ChartData
title: 202303132224_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Black Raspberry Pie", "C R U E L S U N", "Morton Saltbringer", "Hauzzy", "Sygaldry Verdandi", "Venomina The Siren", "Cerys Fireblade", "Legendary Hacker", "Mistwalker Caelon", "Whose Guardian", "Tegan Parker", "Johosh The Great", "Daring Deathblade", "Koralia Danai", "Pererek Ninja", "Primal Clone", "Ravioli Fetabringer", "Ryvalia Fazebringer", "Etchery Howls", "Mac Chiato", "Sp\u00edcy Cheese", "Smol Daddy Tika", "Tribal S", "Sofya De Nova", "Bella Sassy", "Blanco Padre Guard", "Cat Wigglebooty", "Ark Darkness", "Neuronut C", "Eibh\u00ebar", "Sigmund Mistwalker", "Drevarr Moonwillow", "Oo Dads Mad", "Elonith Tenebris", "Rina Of Theros", "Fribble Bibble", "Arcanophage Farra", "Seren Nightroad", "Newtype Khan", "Rozaalyna", "Smol Gluvs", "Minka Bringer", "Tootsie Pop Rock"];
const professions = ["Tempest", "Chronomancer", "Scrapper", "Chronomancer", "Spellbreaker", "Firebrand", "Tempest", "Berserker", "Herald", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Reaper", "Firebrand", "Dragonhunter", "Chronomancer", "Firebrand", "Chronomancer", "Druid", "Tempest", "Berserker", "Berserker", "Druid", "Weaver", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Chronomancer", "Vindicator", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 2628, 1192, 0, 337, 0, 485, 0, 0, 0, 0, 0, 2534, 493, 0, 4630, 0, 3303, 478, 6874, 0, 0, 6707, 3957, 0, 3028], [0, 164, 3153, 1249, 408, 0, 2670, 1469, 0, 1371, 1175, 0, 0, 4524, 4685, 0, 1051, 1602, 0, 4197, 6303, 1802, 3423, 193], [39993], [1332, 0, 9116, 2185, 0, 2721, 304, 0, 0, 0, 0, 14501, 0, 478, 0, 0, 275, 0, 0, 5287, 957, 269, 3015], [0, 1034, 3392, 3706, 0, 2465, 0, 0, 0, 1192, 0, 0, 0, 4138, 2571, 0, 4816, 0, 2546, 0, 6545, 0, 1166, 4449, 0, 3659, 0], [0, 0, 2660, 0, 0, 108, 2078, 0, 0, 0, 0, 347, 8104, 3945, 0, 2052, 1304, 464, 0, 4818, 0, 0, 7737, 2387, 5894, 0], [0, 9358, 2255, 0, 0, 2622, 3360, 0, 0, 0, 0, 2465, 6243, 0, 463, 3371, 0, 30, 0, 0, 0, 0, 4292, 1588, 4844, 1045], [579, 2465, 12715, 3713, 0, 269, 0, 304, 0, 261, 0, 0, 0, 4377, 3769, 965, 464, 0, 878, 0, 875, 0, 0, 4916, 878, 1946, 3598], [0, 20099, 161, 0, 0, 1112, 2507, 0, 1754, 0, 8165, 1021, 0, 3755, 0, 5592, 0], [0, 0, 7378, 109, 0, 0, 0, 108, 0, 0, 0, 0, 2410, 9574, 0, 638, 0, 4110, 1103, 0, 5852, 0, 1082, 1756, 878, 6457, 3003], [0, 0, 11508, 4504, 0, 0, 0, 3497, 0, 4364, 0, 0, 0, 1248, 0, 539, 0, 1304, 943, 0, 3773, 0, 878, 7539, 2980, 2604], [0, 0, 10778, 9618, 0, 0, 2154, 238, 550, 0, 0, 0, 6352, 1436, 0, 1111, 0, 880, 0, 878, 0, 0, 2477, 2377, 3437, 3440], [0, 0, 7367, 2597, 0, 0, 0, 0, 0, 0, 1247, 0, 3471, 2046, 269, 0, 2984, 1806, 6214, 0, 2977, 0, 1594, 5522, 7783, 1244, 0], [0, 0, 4323, 3761, 0, 0, 0, 1248, 0, 3176, 0, 0, 0, 5052, 3695, 1929, 0, 3577, 5187, 0, 3566, 0, 364, 2182, 0, 2507, 6764], [0, 0, 0, 6370, 2584, 0, 793, 2727, 1348, 0, 0, 0, 0, 6638, 0, 3414, 1241, 0, 2095, 0, 8506, 0, 3097, 3550, 5300, 269], [0, 7870, 1186, 0, 0, 7740, 0, 0, 0, 0, 0, 0, 0, 0, 3364, 0, 0, 4300, 0, 0, 0, 1248, 12557, 6571, 3106], [1248, 0, 8210, 4632, 0, 0, 2562, 420, 0, 0, 0, 10662, 1713, 304, 304, 0, 2496, 0, 6277, 0, 973, 2462, 4369, 316, 1181], [666, 0, 2777, 4610, 0, 896, 3391, 0, 0, 1188, 0, 0, 0, 16306, 0, 0, 0, 1810, 4631, 0, 2467, 0, 0, 5154, 5352, 0, 764], [1248, 422, 11390, 2507, 0, 927, 0, 1426, 0, 3636, 1393, 0, 2465, 5084, 2577, 4735, 0, 0, 2616, 0, 0, 0, 1600, 2881, 4545, 3208, 962], [0, 1248, 21902, 269, 0, 1124, 1248, 1685, 295, 1497, 0, 0, 5466, 0, 3201, 560, 0, 2465, 0, 614, 0, 1016, 4039, 5180, 3708], [0, 0, 17386, 2507, 0, 0, 170, 0, 0, 0, 0, 0, 12714, 2423, 2386, 1276, 5330, 5589, 0, 0, 0, 4843, 1092, 878, 269, 0], [1249, 0, 15382, 4930, 2452, 2497, 610, 0, 53, 0, 0, 2448, 3597, 0, 1248, 1854, 0, 0, 0, 905, 0, 3957, 10323, 4558, 1310, 0], [0, 0, 19001, 1421, 0, 1104, 1279, 990, 0, 504, 3461, 0, 172, 0, 0, 3382, 2552, 0, 878, 0, 6914, 0, 0, 1779, 14248, 0, 1189], [2170, 269, 8769, 3499, 0, 0, 304, 1201, 0, 1188, 1606, 0, 0, 7128, 0, 3260, 1248, 3769, 1991, 0, 2094, 0, 5381, 11887, 1294, 1248, 1248], [114, 0, 30822, 5031, 269, 269, 608, 7067, 0, 465, 0, 0, 0, 1973, 0, 3498, 0, 538, 900, 125, 339, 0, 0, 5490, 1076, 397, 1040], [0, 0, 15868, 7582, 0, 2474, 326, 1244, 0, 2992, 897, 0, 291, 0, 0, 370, 1307, 0, 8868, 0, 4638, 0, 878, 5823, 7674, 1572, 16], [0, 152, 26050, 6010, 798, 1481, 0, 3357, 0, 0, 0, 0, 0, 3803, 2039, 304, 0, 0, 3593, 0, 1248, 0, 0, 8333, 4441, 3820, 723], [538, 0, 13573, 2486, 0, 123, 3034, 761, 1910, 852, 0, 401, 4454, 4271, 845, 683, 829, 3408, 244, 2807, 0, 6215, 14483, 3102, 5577, 2343], [0, 0, 15175, 7044, 0, 2232, 2083, 2982, 0, 295, 0, 1654, 1517, 7500, 3942, 1954, 0, 6779, 9184, 8184, 0, 2674, 3094], [1734, 1602, 48425, 12857, 3407, 8473, 1244], [0, 0, 30476, 4065, 0, 1797, 0, 0, 0, 3601, 529, 0, 3478, 7212, 1248, 315, 760, 0, 4770, 0, 5188, 0, 5849, 12018, 2552, 7169, 1090], [122, 113, 22026, 2496, 702, 0, 3497, 1188, 0, 0, 1460, 0, 1248, 3708, 3954, 2383, 3497, 5883, 4519, 0, 11238, 0, 2216, 12609, 5373, 0, 3963], [0, 96, 669, 25171, 6974, 0, 1603, 1512, 1070, 0, 6303, 1091, 10, 85, 21852, 1373, 4727, 358, 1227, 4598, 383, 4216, 112, 263, 9094, 7223, 4543, 728], [0, 0, 17715, 6482, 0, 1095, 4943, 2640, 1817, 0, 0, 685, 5318, 5845, 2045, 399, 4851, 4869, 0, 8618, 0, 1513, 18126, 15192, 6722, 6218], [822, 13186, 6310, 2652, 17625, 0, 6139, 0, 4745, 44506, 14506, 2507, 4703], [1087, 0, 15993, 7257, 489, 6868, 0, 0, 4218, 1244, 0, 18, 26507, 813, 6024, 4778, 0, 3673, 0, 7839, 0, 0, 14212, 4722, 10075, 3424], [106, 88, 25509, 6326, 269, 2906, 0, 6740, 0, 1781, 14, 567, 547, 5901, 635, 1182, 141, 2001, 5217, 0, 18357, 1810, 4879, 36286, 1265, 425, 1003], [0, 0, 36689, 4359, 954, 0, 4190, 5263, 0, 5369, 0, 0, 3573, 19214, 0, 1545, 104, 1304, 0, 0, 10249, 0, 2136, 13120, 10204, 7975, 2371], [3249, 409, 57134, 6207, 0, 5937, 9664, 5096, 8839, 3376, 1786, 2916, 10531, 7474, 6382], [0, 4441, 0, 26559, 7004, 3497, 3000, 5425, 5038, 0, 4649, 4672, 0, 3497, 21014, 1934, 6886, 3731, 3497, 4335, 0, 7311, 0, 6771, 12664, 9417, 9808, 4944], [0, 0, 39410, 10965, 0, 2507, 3559, 1766, 0, 4181, 463, 0, 0, 10022, 6072, 2261, 3341, 6444, 16954, 0, 3787, 0, 0, 18206, 12654, 19377], [1754, 1517, 52885, 16893, 1274, 5558, 5186, 6362, 0, 3812, 3328, 0, 0, 27489, 1040, 8173, 3218, 4192, 3474, 0, 12344, 0, 8177, 7970, 15350, 10457], [1715, 89329, 13519, 0, 7532, 8700, 13673, 0, 7027, 1244, 137, 3308, 9932, 8149, 4439, 4892, 375, 3446, 0, 22713, 0, 4112, 37132, 7882, 5424, 7561], [2465, 0, 76804, 7206, 0, 14334, 7902, 21537, 18786, 6460, 0, 0, 37313, 9714, 269, 7477, 14393, 16906, 677, 0, 758, 4856, 52117, 11577, 11102]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

