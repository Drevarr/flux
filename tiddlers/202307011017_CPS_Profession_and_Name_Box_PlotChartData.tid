created: 20230701101710000
creator: Drevarr
modified: 20230705163540319
modifier: drevarr
tags: ChartData
title: 202307011017_CPS_Profession_and_Name_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps\nCharr Surethang', 'Berserker_Dps\nLegacy Of Mathus', 'Berserker_Dps\nRyvalia Routbringer', 'Berserker_Dps\nSister Elonith', 'Chronomancer_Support\nRyvalia Fazebringer', 'Dragonhunter_Cele\nGamora Titus', 'Druid_Dps\nAtros Beta Ranger', 'Druid_Dps\nDrumina', 'Druid_Support\nDrumina', 'Druid_Support\nSakis Ranger', 'Firebrand_Dps\nWall Knot', 'Firebrand_Support\nBella Sassy', 'Firebrand_Support\nGestern Yesteryear', 'Firebrand_Support\nViolet Stab', 'Firebrand_Support\nWall Knot', 'Holosmith_Dps\nDizzy Bunnyhopper', 'Reaper_Dps\nGrim Breacher', 'Reaper_Dps\nLatedoctor', 'Scourge_Dps\nElonith Requiem', 'Scrapper_Dps\nTrodek', 'Scrapper_Support\nDrevarr Moonwillow', 'Tempest_Support\nFùgly', 'Vindicator_Dps\nAtros Shroudkeeper', 'Vindicator_Dps\nGovinda Ektar', 'Vindicator_Dps\nNo Reservé']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'CPS by Profession_and_Name across all fights', left: 'center'},
    {text: 'CPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[0.0174, 0.0698, 0.0094, 0.1285, 0.0537, 0.0542, 0.0786], [0.0141, 0.0642, 0.0537, 0.0191, 0.0718, 0.0313, 0.0083], [0.0571], [0.0761, 0.0283, 0.0214], [0.1509, 0.2195, 0.1465, 0.2873, 0.1489], [0.028], [2.0982], [1.4272], [0.923, 0.056, 0.4763, 0.2353, 0.7494, 0.7243, 0.79, 0.1197, 0.4841, 0.1724, 0.4399, 0.4482], [0.0481, 0.0736, 0.3654, 0.9614, 0.1679, 1.7697, 0.7309, 0.4923], [0.0642, 0.0219, 0.1147, 0.1197, 0.0248, 0.0157, 0.0314, 0.0913], [0.0128, 0.056, 0.0254, 0.0755, 0.0642, 0.0573, 0.0471], [0.0128, 0.0317, 0.0236, 0.0162, 0.0428, 0.0223, 0.0289, 0.0372, 0.0083], [0.0519, 0.0487], [0.0216], [0.0287, 0.0166], [0.019], [0.0254], [0.0878, 0.1625, 0.0239, 0.0745, 0.0471, 0.1245], [0.1071, 0.0446, 0.0124], [0.2519, 1.8394, 1.4006, 0.687, 0.9207, 0.4833, 1.0755, 1.2805, 0.2025, 1.1255, 1.0923, 0.765, 0.1881, 1.4768, 1.0291], [1.8816, 0.7087], [0.0159, 0.0496], [0.0256, 0.0634, 0.0248], [0.0478, 0.0372]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 30}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'CPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
