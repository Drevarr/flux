created: 20230603215001000
creator: Drevarr
modified: 20230705163533593
modifier: drevarr
tags: ChartData
title: 202306032150_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Pocket Stabbs", "Belvyn Brightblade", "Sygaldry Verdandi", "Blanco Padre Guard", "Aronorf Xideliesi", "Crusader Siolith", "Koralia Danai", "Tika Fiery"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.3731, 0.0, 40.28, 0.0, 39.8635, 12.799, 21.3744, 12.9043, 151.7952, 19.2356, 19.8307, 27.378], [5.9206, 118.9534, 86.3117, 23.6826, 28.1491, 0.0, 0.0, 0.0, 143.7677, 8.2357, 17.6406], [77.0753, 151.2225, 257.24, 167.1127, 71.3076, 41.4882], [93.4618, 0.0, 120.3725, 0.0, 79.553, 0.0, 47.4608, 21.2302, 36.2061, 15.7447, 214.9742, 307.1304, 71.9665, 46.5192, 47.1323], [167.5945, 274.7431, 48.4272, 18.0224, 80.5939, 22.2466, 68.2343, 0.0, 147.6558, 25.7066, 26.2313, 7.4446, 143.1573, 106.2944, 93.7809, 67.7258, 52.3692], [99.9781, 466.9409, 51.7834, 0.0, 106.8077, 68.0952, 96.2088, 40.0288, 212.3222, 157.9554, 35.4314, 162.2938, 320.2992, 193.1444, 18.6077, 0.0], [170.1511, 546.4267, 165.3456, 42.071, 174.7872, 24.0903, 164.0, 65.2292, 103.9489, 105.5209, 10.4954, 428.4088, 190.0744, 161.1661, 36.2762, 56.2162], [510.9916, 688.3263, 159.144, 0.0, 128.5286, 40.1465, 83.9435, 254.3532, 122.5847, 71.8177, 0.0, 35.9978, 327.4838, 345.74, 151.0022, 137.5483, 72.6149]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

