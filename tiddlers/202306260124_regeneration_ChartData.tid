created: 20230626012458000
creator: Drevarr
modified: 20230705163538311
modifier: drevarr
tags: ChartData
title: 202306260124_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Mememonoko", "Crusader Siolith", "Elon The Mender", "Miphest\u00f6", "Artakama Nahid", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Vindicator", "Firebrand", "Druid", "Tempest", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 40.6685, 54.2871, 440.6315, 89.8562, 149.3603], [66.0716, 51.503, 16.5816, 47.5143, 43.2401, 250.6522, 38.808, 9.7608, 47.9002, 89.056, 16.6118, 30.2078, 25.0939, 42.6835, 39.0216, 34.765], [338.7831, 51.8659, 16.6698, 561.1794, 21.9966, 627.7258, 59.8954, 27.5184], [239.982, 91.4976, 92.3454, 493.9788, 32.1768, 376.687, 25.9459, 20.5296, 42.2611, 15.4, 28.9901, 38.0136, 28.0407, 75.8208, 112.4295, 94.6147], [244.5263, 132.3216, 144.6921, 677.9601, 87.8305, 855.3102, 50.4403, 46.8384, 132.1373, 39.8362, 44.9846, 120.1225, 164.7149, 91.5702, 73.5499], [38.2347, 1418.989, 111.9567, 1149.2627, 0.0, 70.0056, 0.0, 160.336, 12.4589, 5.5723, 31.5344, 49.4208, 242.0522, 20.2286], [537.0491, 249.1171, 364.0014, 1484.2453, 246.9487, 1177.2275, 195.5117, 236.5776, 288.8899, 102.278, 152.5709, 204.5741, 303.8911, 118.8211, 450.1816, 152.953], [1199.093, 35.7178, 75.9402, 2010.0623, 159.326, 2357.1612, 115.3757, 31.6176, 221.2848, 281.4538, 212.267, 391.3552, 82.4736, 233.5399, 168.6792]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

