created: 20230506220820000
creator: Drevarr
modified: 20230705163528920
modifier: drevarr
tags: ChartData
title: 202305062208_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00efr", "Kira Dragonblaze", "Grilo Gringo", "Smol Gluvs", "Smol Daddy Tika", "Hauzzy", "Im Killin It", "Guard Ferro", "Antherisa", "My Birthday Girl", "Puny Demon", "Artofliving", "Husky Guard", "Dargon Spiritwalker", "Permanent Dawn", "Demon Dalham", "Kmpek", "Rina Of Theros", "Lord Erin The Wise", "Cerys Fireblade", "Abigail Ryn", "Be\u00eb", "Kosa\u00efr", "Xanvias Einzbern"];
const professions = ["Catalyst", "Dragonhunter", "Dragonhunter", "Scourge", "Spellbreaker", "Berserker", "Scourge", "Willbender", "Reaper", "Scrapper", "Scourge", "Herald", "Dragonhunter", "Scourge", "Weaver", "Dragonhunter", "Vindicator", "Scourge", "Weaver", "Berserker", "Catalyst", "Scourge", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[93.7726, 1003.6103], [45.0201, 650.8342, 197.5231, 160.2125, 262.7572, 226.1432], [237.375, 87.5754, 206.1586, 168.2754, 516.2593, 437.708, 242.5556, 480.5878, 701.3415], [87.3144, 117.135, 19.159, 4.6188, 74.2757, 229.3542, 187.7817, 234.7284, 732.5072, 313.358, 244.5044, 0.0, 156.1824, 536.5976], [48.4181, 254.8667, 37.7462, 0.0, 81.5309, 179.526, 302.2738, 157.0723, 449.3913, 408.679, 279.6667, 19.8413, 0.0, 157.0405, 441.5488], [617.6154, 849.5521, 387.9538], [175.5128, 392.8375, 351.7078, 571.2995, 744.8095, 252.4708], [633.5859, 823.631, 458.8494], [118.2313, 195.9259, 305.6615, 490.6865, 331.6749, 776.7681, 601.1111, 315.7345, 28.1746, 280.8333, 404.0338, 886.7927], [278.2274, 327.0923, 263.8872, 75.4625, 63.2428, 478.7604, 744.5278, 261.7334], [87.0067, 564.3111, 246.5846, 43.4813, 167.9136, 252.6302, 368.4048, 359.7116, 427.5797, 50.5062, 176.2271], [114.592, 263.8479, 199.7821, 0.0, 130.1728, 168.5911, 509.1429, 271.7047, 338.3913, 858.0494, 477.587, 0.0, 0.0, 577.9932, 543.0122], [134.2843, 524.0821, 260.5821, 51.75, 162.1564, 25.0156, 268.2302, 312.9663, 654.6232, 541.1481, 395.0118, 128.0159, 0.0, 63.7365, 546.8171], [158.893, 416.5026, 92.2846, 72.4938, 41.8107, 311.3828, 481.4683, 348.7374, 836.2899, 726.0123, 343.4631, 79.5397, 0.0, 691.3041, 733.1829], [159.204, 489.8615, 278.3625, 299.1399, 477.5078, 721.746, 1.0634, 342.6254, 27.8254, 0.0, 1944.3851, 1805.1341], [424.6957, 1971.1744, 615.8385, 115.5812, 394.1728], [94.9256, 166.4062, 232.7531, 687.4635, 596.2976, 519.5907, 1457.6957, 1573.6914, 595.5841, 177.4444, 220.375, 618.9662, 1090.3171], [122.4013, 590.453, 410.3282, 46.1313, 264.0658, 203.0026, 388.4841, 446.7265, 332.3913, 1222.0617, 401.7404, 108.6349, 383.625, 694.7432, 877.9146], [836.869, 829.0099, 1243.4321, 753.3746, 57.0159, 456.9167, 1322.8446, 1620.7561], [294.3746, 945.0701, 203.5, 189.7312, 176.5638, 483.4766, 763.7937, 250.3786, 1142.1594, 747.5185, 527.2006, 91.127, 0.0, 1088.8311, 383.1951], [88.8786, 276.5385, 225.1312, 373.749, 581.651, 593.2857, 685.4995, 529.6667, 706.1605, 820.6991, 205.0794, 173.375, 566.7973, 1959.4756], [392.9599, 950.453, 398.3667, 79.9875, 402.8436, 722.6432, 558.5516, 638.6442, 223.029, 1183.8272, 577.9882, 18.0794, 36.3333, 765.6284, 1124.4146], [1343.3564, 153.4563, 685.7613, 1783.3125, 1446.7698, 1319.3984, 1825.5679, 1735.8997, 102.6349, 603.2083, 879.223], [670.9732, 2199.0085, 1120.5615, 142.3125, 631.4156, 1508.1849, 1716.3214, 1299.662, 2204.913, 2508.4815, 1724.5811, 149.5873, 302.0833, 2507.6959, 2689.122]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

