created: 20230702223827000
creator: Drevarr
modified: 20230705163541206
modifier: drevarr
tags: ChartData
title: 202307022238_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Gustav Glaivesson", "Tuandha Lan", "Vini Boy", "Neohelios", "Tootsie Pop Rocks", "Kayrin Willowroot", "Vanillatwist", "Newtype Khan", "Vopiscus Zergherdus", "St\u00e1rless", "Lucky Leipreach\u00e1n", "Grasszanine", "Valaria Emberstorm", "Artakama Nahid", "Zayde Sunsabre"];
const professions = ["Tempest", "Herald", "Tempest", "Druid", "Scrapper", "Druid", "Virtuoso", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.238, 0.863, 0.528, 0.616], [0, 0.582, 0.508, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.303, 0.548, 0, 0, 0, 0, 0, 0, 0, 0, 0.539, 0, 0, 0, 0, 0.237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.322, 0.347, 0.606, 0.808, 0, 0.78, 0, 0, 0, 0.346, 0, 0, 0.237, 0, 0.439, 0.326, 0], [0, 0, 0.498, 0.42, 0, 0.886, 0.358, 0, 0.388, 0.25, 0.19, 0, 0, 0.636, 0.192, 0, 0, 0.123], [0.111, 0.788, 0, 0.82, 1.295, 1.094, 0.982, 0, 0, 0, 0.219, 0.502, 0], [0, 0.591, 0, 0, 0, 0.385, 0, 0, 0.931, 0.461, 0, 0, 0.619, 0.737, 0.425], [0, 0, 2.199, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0.491, 0.386, 0.132, 0, 0, 0, 0.449, 0, 0.61, 0, 0, 0, 1.11, 0.746, 0, 0, 0.781, 0, 1.223, 0, 0, 0, 0.426], [0.463, 0.73, 0.946, 2.578, 0, 1.475, 0, 1.141, 2.287], [0.37, 0, 0.905, 0.576, 0.655, 0, 0.39, 0.36, 0.244, 0.548, 0, 0, 0.492, 0, 0.528, 2.284, 0.28, 0.235, 0.543, 0, 0.598, 0, 0, 0.427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.587, 0.772, 0.962, 0.939, 0.187, 0, 0.167, 0.342, 0, 0, 1.048, 0, 0.265, 0, 0.216, 0.226, 0, 0.635, 0.685, 0, 0.169, 0.199, 0.377, 0, 0, 0, 0.486, 0, 0, 0, 0.082, 0.636, 0.264, 0, 0.121, 0.061, 0, 0, 0, 0.206, 0.378], [0, 0.492, 0.309, 0.53, 2.284, 0, 0, 0.469, 0.326, 0, 0.592, 0, 0.482, 0.34, 0, 0.625, 0, 0, 0, 0, 0, 0.64, 0, 0, 0, 0.613, 0, 0, 0, 0.425, 1.116], [0.414, 0, 0.919, 0.545, 0.689, 0.393, 0.59, 0.238, 0.432, 0.582, 0.819, 1.419, 0, 0.72, 0.295, 0.175, 0.294, 1.37, 0, 0.336, 0, 0.179, 0.882, 0.718, 0, 0.419, 0.58, 0, 0.522, 0.538, 0.892, 0.663, 0.632, 0.384, 0, 0, 0.243, 0.469, 0.737, 0, 0, 0, 0.255, 0.67], [2.349, 0.323, 0.347, 0.304, 0.238, 0.166, 0.502, 0.74, 0, 0, 0.544, 0.346, 0.39, 1.568, 0.24, 0.866, 0.293, 0.821, 1.426, 0, 0, 0.295, 0.557, 0.159, 0, 0, 0.507, 0, 0.302, 0, 0.359, 0.003, 0.991, 1.745, 0.379, 0.952, 0.538, 0, 0, 0.193, 0.515, 0, 0.186, 0.366, 0, 0, 0.619, 0.517, 0.636, 1.341], [1.199, 0.583, 1.934, 1.347, 0.485, 0.371, 0.618, 0.912, 0.909, 0.576, 1.309, 0, 1.183, 0, 0.732, 1.028, 0, 0, 0, 0.492, 0.462, 0.53, 2.283, 0, 1.125, 0.913, 0.362, 0, 1.198, 1.866, 0, 0.453, 2.907, 0.317, 0, 0, 1.116, 0, 1.06, 0.321, 0, 0.771, 1.215, 0.391, 0, 1.032, 0, 0.852, 1.117]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

