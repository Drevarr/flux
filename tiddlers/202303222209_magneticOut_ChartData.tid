created: 20230322220917000
creator: Drevarr
modified: 20230705163522855
modifier: drevarr
tags: ChartData
title: 202303222209_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Sizzln Sisigbringer", "Zadie Miststep", "Abigail Ryn", "Elonith Primal"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.8237, 20.0022, 19.895, 0.0, 45.7776, 20.0909, 29.7504, 20.0861, 75.9167, 0.0, 40.0858, 37.485, 224.112, 18.5987, 41.0774, 16.056, 19.0137, 28.5743, 48.6774, 102.1621, 39.9802, 19.8782, 54.4519, 19.9454, 0.0, 36.5561], [176.8435, 45.1067, 39.767, 0.0, 80.0448, 57.3235, 39.7728, 40.1722, 38.5236, 19.8806, 60.1498, 39.396, 434.826, 19.9971, 39.8045, 89.928, 94.1301, 95.5471, 45.0128, 174.6845], [308.1139, 56.1798, 38.87, 39.836, 79.728, 40.2278, 39.7728, 34.9037, 58.656, 11.9059, 60.1498, 40.2486, 536.326, 98.5872, 54.4435, 32.184, 37.5756, 38.0797, 37.2945, 74.9048, 38.7763, 19.8067, 24.7187, 19.9454, 20.3885, 16.435], [442.8518, 37.7789, 34.362, 37.237, 59.7696, 116.8589, 59.6448, 97.0435, 77.2915, 0.0, 57.5731, 20.0802, 893.606, 110.8931, 19.8288, 36.864, 0.0, 39.4349, 74.6245, 79.9603, 19.8782, 17.4953, 39.7814, 0.0, 18.3436], [473.3165, 113.8794, 87.446, 39.813, 171.5472, 97.5053, 90.7776, 119.3405, 91.4972, 31.799, 98.9683, 101.1654, 883.862, 96.979, 90.9187, 73.116, 80.7127, 122.6434, 17.4798, 170.7606, 174.5568, 59.9739, 57.8095, 84.2141, 0.0, 55.2349]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

