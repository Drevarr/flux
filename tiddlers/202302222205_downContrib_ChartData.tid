created: 20230222220539000
creator: Drevarr
modified: 20230705163519828
modifier: drevarr
tags: ChartData
title: 202302222205_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Dark Sidiuz", "Forever Broke", "Smol Gluvs", "Arcanophage Farra", "Ace Hammers", "Sheep Poh", "Husky Guard", "Kmpek", "Rina Of Theros", "\u00c1rk\u00e1ntor", "Panther B Me", "Lord Erin The Wise", "Legacy Of Mathus", "Smol Daddy Tika", "Sofya De Meme", "Elonith Tenebris", "Jeckyll Mbs", "Xyntharos", "My Birthday Girl", "Sp\u00edcy Cheese", "Sassy Daddy Demon", "Xanvias Tseli", "One Whole Keg", "Mistwalker Caelon"];
const professions = ["Soulbeast", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Vindicator", "Catalyst", "Dragonhunter", "Vindicator", "Scourge", "Scourge", "Scourge", "Weaver", "Berserker", "Berserker", "Catalyst", "Scourge", "Berserker", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Berserker", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 890.0, 4395.0, 1981.0, 4093.0, 2553.0, 4587.0, 3091.0, 723.0, 23069.0, 25872.0], [25.0, 0.0, 13233.0, 11308.0, 15423.0, 22839.0, 14490.0], [12566.0, 9333.0, 16862.0, 19318.0, 16067.0, 13134.0], [0.0, 0.0, 6876.0, 1868.0, 2584.0, 4246.0, 6288.0, 41892.0, 13846.0, 24303.0, 9176.0], [676.0, 796.0, 12322.0, 18274.0, 0.0, 4315.0, 6802.0, 7497.0, 30653.0, 5085.0, 23609.0, 16218.0], [0.0, 0.0, 4715.0, 0.0, 428.0, 2106.0, 2449.0, 2319.0, 75434.0, 5438.0, 24748.0, 26912.0], [51701.0, 138229.0], [5686.0, 4021.0, 11363.0, 8446.0, 9717.0, 57135.0, 17132.0, 40846.0, 36004.0], [15791.0, 32623.0, 24.0, 3485.0, 18345.0, 11438.0, 69476.0, 40310.0, 20425.0, 6767.0], [3125.0, 5849.0, 31050.0, 19178.0, 8381.0, 19064.0, 23241.0, 8176.0, 58154.0, 20899.0, 42289.0, 31905.0], [0.0, 4125.0, 17996.0, 2284.0, 34246.0, 12668.0, 8838.0, 3697.0, 86608.0, 22367.0, 61822.0, 28991.0], [2731.0, 5718.0, 24113.0, 19310.0, 11733.0, 6221.0, 16528.0, 5187.0, 88499.0, 32521.0, 44028.0, 32923.0], [0.0, 11132.0, 33756.0, 20819.0, 23323.0, 15594.0, 7334.0, 6626.0, 80219.0, 43928.0, 45545.0, 23677.0], [0.0, 5272.0, 14262.0, 14266.0, 13820.0, 9291.0, 14681.0, 14475.0, 155063.0, 9328.0, 54661.0, 21260.0], [0.0, 8664.0, 32414.0, 15522.0, 14081.0, 11838.0, 16507.0, 9795.0, 92883.0, 29749.0, 62822.0, 49401.0], [5662.0, 23442.0, 10428.0, 3261.0, 17220.0, 6442.0, 125196.0, 66521.0, 62303.0, 25642.0], [1948.0, 17429.0, 53274.0, 11698.0, 5270.0, 23648.0, 18308.0, 8604.0, 91541.0, 28344.0, 81602.0, 23628.0], [16326.0, 9406.0, 26355.0, 24285.0, 10038.0, 5811.0, 11596.0, 69841.0, 27499.0, 128501.0, 39778.0], [0.0, 8365.0, 0.0, 38804.0, 7661.0, 30357.0, 8569.0, 474.0, 125364.0, 26081.0, 81742.0, 48976.0], [0.0, 3322.0, 9885.0, 16365.0, 24516.0, 17488.0, 22305.0, 23632.0, 122148.0, 39275.0, 69415.0, 32696.0], [3177.0, 4486.0, 28987.0, 27202.0, 1159.0, 11752.0, 35128.0, 38515.0, 149476.0, 38870.0, 118263.0], [11750.0, 0.0, 40456.0, 29006.0, 18984.0, 22764.0, 22653.0, 31047.0, 157352.0, 21913.0, 143809.0, 25346.0], [4604.0, 8699.0, 29101.0, 29564.0, 22303.0, 5649.0, 0.0, 25800.0, 157383.0, 48175.0, 110364.0, 95219.0], [5743.0, 18874.0, 66452.0, 3615.0, 20049.0, 48700.0, 18704.0, 189838.0, 51181.0, 155636.0, 73055.0], [6007.0, 7601.0, 39251.0, 28581.0, 26671.0, 47947.0, 17595.0, 2562.0, 188035.0, 69405.0, 116135.0, 106863.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

