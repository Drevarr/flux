created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Super Druid", "Xo Zen Xo", "Hawaiian Supreme", "Belvyn Brightblade", "Aspros Gemeos", "Darks Na", "X Mad X King X", "Vanhelsing Wizard", "Alizayd Delnbone", "Luke The Ghastly", "Lord Erin The Wise", "Lumerence", "Victoria Raskae", "Philip Poundhouse", "Mort\u00e4rion", "Name Is What", "Hawaiian Supreme", "Avatar Shazbott", "Morton Saltbringer", "Darks Na", "Civil Rules", "F\u00f9gly", "Milvia Rosalyn", "Reila Feres", "Be\u00eb", "Irish Necroman", "Kylo Milan", "Rina Of Theros", "Daphne Agla\u00e9", "Viperoverride", "Reina Cato", "Cura Ativos", "Y U So Mean", "Boba Gats", "Narciza", "Wags The Beast", "Blancooo Padreee", "Healdone", "Scythe Of Soulz", "Tommy Sneakers", "Welf Ricks", "Samara Evermoore", "Wags The Beast", "L\u00edzardoverr\u00edde", "Nsidejob", "Crazy Pog", "Necrotic Windrunner", "Vanhelsing Wizard", "Kemper"];
const professions = ["Tempest", "Druid", "Tempest", "Berserker", "Firebrand", "Spellbreaker", "Dragonhunter", "Firebrand", "Virtuoso", "Firebrand", "Scourge", "Weaver", "Virtuoso", "Renegade", "Herald", "Scrapper", "Scourge", "Spellbreaker", "Tempest", "Chronomancer", "Firebrand", "Berserker", "Tempest", "Druid", "Druid", "Scourge", "Reaper", "Chronomancer", "Scourge", "Scourge", "Deadeye", "Vindicator", "Dragonhunter", "Mirage", "Scrapper", "Chronomancer", "Dragonhunter", "Spellbreaker", "Holosmith", "Scourge", "Chronomancer", "Dragonhunter", "Deadeye", "Firebrand", "Scrapper", "Catalyst", "Daredevil", "Scourge", "Chronomancer", "Soulbeast"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2100.2273, 2088.0, 1945.4265, 16.3182, 486.0129, 536.5918, 806.0, 2335.0, 1328.375, 1583.6235, 16.0581, 0.0, 1164.0133, 1704.3146, 94.0511, 1703.1463, 2126.4386], [3001.1111, 2604.9444, 2798.3226, 1260.5085, 1971.9231, 2019.825, 2103.1333, 2484.7973, 20.52, 280.3882, 704.2692, 2500.6071], [1996.5385, 4001.0, 3439.2712, 1968.975, 16.1667, 609.5253, 758.0763, 688.4146, 1731.8136, 193.0625, 1959.5059, 15.2348, 0.0, 1284.775], [2335.6667, 1485.0, 2372.0286, 2991.1333, 1315.8108, 1822.4026, 3174.4516, 2020.371, 2670.6333, 61.0345, 292.4459, 637.3778, 2917.9167, 2552.4043], [1560.9375, 5208.0667, 4481.2121, 836.5063, 1263.1346, 3520.2188, 1622.2179, 1881.7981, 6120.2941, 1294.9326, 3418.2083, 0.0, 662.2455], [1549.0133, 2429.3939, 2095.8721, 2042.8718, 1803.029, 2896.2308, 13.4583, 922.4114, 583.6058, 872.3659, 1028.0429], [64.5397, 1089.9412, 1286.5429, 803.4819, 522.9804, 3539.087, 981.7634, 2825.6744, 3279.0, 1783.35, 1400.3171, 698.3694, 466.4028, 1552.5833, 2227.25, 352.8, 40.8771, 0.0, 1175.9077], [3451.7407, 3400.5476, 2330.5735, 1526.8765, 13.8, 401.497, 763.7293, 1165.0244, 1778.1562, 317.5327, 2950.4706, 75.4274, 0.0, 1095.6552], [566.5345, 4238.8889, 699.5476, 1667.4565, 2327.8049, 1056.6667, 1964.2597, 598.5946, 3078.2545, 1747.0864, 410.5422, 1435.0833], [770.3094, 2047.0455, 2120.6458, 4916.3889, 2260.6056, 40.1174, 0.0, 616.3951, 2231.0488, 94.927, 301.5517, 1706.5082, 1189.0323, 1963.0612], [670.3885, 1086.2347, 3587.88, 2319.8909, 1526.0923, 2519.1282, 13.4701, 0.0, 1777.2361, 827.2043, 147.5242, 826.0333], [313.661, 274.7059, 517.9143, 223.5974, 13.2353, 419.6389, 718.0634, 585.7212, 4263.4286, 856.2169, 989.71, 418.8294, 151.95, 939.7105, 1592.1463, 715.3733, 526.0337, 54.156, 0.0, 111.9121, 656.8901, 206.2038, 1069.1613, 155.96], [1297.8431, 3794.7647, 869.3714, 607.4625, 2023.6552, 271.1622, 1205.1127, 1309.3671, 928.8864, 7475.5714, 1277.9375, 41.4, 573.6168, 435.4082, 1833.0, 10884.2, 1451.7143], [3103.4074, 1272.7714, 1819.4615, 2457.3409, 2607.0, 1238.0, 2024.1059, 1081.4595], [1829.1071, 50.2937, 0.0, 1476.6164, 1638.6447, 266.9463, 3225.5, 2543.18, 2948.8621, 1674.0676], [2013.4717, 1158.0, 1296.3846, 1508.8627, 3100.4783, 3480.2727, 1100.6273, 1896.6], [1347.1897, 12121.4286, 1542.6667, 1458.7042, 1072.4591, 685.9318, 226.8049, 1355.193, 2365.449], [2680.8056, 6824.5333, 1176.0556, 2843.0274, 12.8889, 787.8587, 1352.5357, 23.5519], [1981.5, 1420.64, 2230.5373, 10.129, 479.1699, 967.1224, 1969.1212, 1689.4043], [2873.1481, 2631.9, 2168.8594, 1711.4157, 52.2105, 0.0, 1462.163], [1498.1548, 218.5159, 878.2424, 2181.6739, 2113.1818, 2784.8333], [1097.8462, 2113.4, 30.9506, 1413.3818, 193.0849, 2927.1579, 6667.5833], [2265.6341, 1443.369, 2059.2903, 50.4074, 399.4114, 720.5396], [622.2759, 406.8491, 504.7867, 1152.8, 436.9823, 728.8478, 549.75, 152.6667, 349.5159, 239.5613, 573.625], [176.5897, 300.6508, 2061.746, 1867.7407, 1562.2], [2479.9815, 3593.4444, 2973.3333, 1304.9608], [2104.403, 2957.9677, 3565.1622], [58.905, 0.0, 1775.3099, 931.8451, 171.6691, 1355.0909], [2757.6154, 3901.1154, 1095.6389, 1911.0], [2071.3617, 4796.8, 3465.375], [1884.8163, 584.5556, 1915.0714], [1834.2632, 1217.1957, 1401.3529], [147.6866, 536.1587, 1629.098, 1150.5435, 905.0], [67.964, 483.4043, 42.4354, 33.3077, 1099.2267, 794.3789], [1270.6481, 2269.8846, 2422.8], [51.098, 443.5952, 287.9444, 220.4364, 80.0625, 208.2357, 571.713, 57.3529, 889.0], [3171.2143, 777.62], [2873.4444, 1809.5161], [7069.6923, 1786.129], [1779.8667], [1384.5484], [875.5417, 1069.8143], [2177.5667, 1454.4118], [3772.2778, 911.1837], [4086.1429, 288.4819], [1159.2826, 787.3521], [187.7625, 441.8, 1132.9344], [308.0545, 558.5, 712.0323, 297.7037], [1402.6071], [83.8889]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

