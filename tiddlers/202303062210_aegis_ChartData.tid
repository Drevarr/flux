created: 20230306221045000
creator: Drevarr
modified: 20230705163521272
modifier: drevarr
tags: ChartData
title: 202303062210_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Cristalius", "Cat Wigglebooty", "Ryvalia Fazebringer", "Blanco Padre Guard", "Viral Marketing", "Raelyn Sunray", "Fribble Bibble", "Ark Darkness", "Kahless The Drunk", "Drevarr Moonwillow", "Zaylen Harker", "Koralia Danai", "Ravioli Fetabringer", "Sygaldry Verdandi", "Bella Sassy"];
const professions = ["Dragonhunter", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[109.5341, 61.6851, 59.3529, 70.6879, 43.4218, 40.2831, 3.4094, 25.1076, 17.689, 6.9962, 0.0, 5.88], [17.9262, 0.0, 0.0, 18.9762, 0.0, 5.8134, 11.4734, 0.0, 15.4154, 0.0, 2.4304, 10.7254, 18.9135, 4.1621, 21.9265, 0.0, 0.0, 2.2702, 1.3853, 60.2582, 0.0, 82.0037, 0.0, 51.2545, 16.8106, 4.1126, 83.6035, 43.3457, 55.9383, 3.4219, 5.13, 16.7808], [76.0544, 34.0256, 0.4807, 34.57, 0.0, 5.547, 19.1887, 0.1029, 0.0, 29.1114, 0.0, 26.4992, 4.3764, 1.838, 23.0927, 37.3042, 0.0, 20.3208, 13.249, 62.375, 0.0, 0.0, 26.4528, 14.4835, 27.9888, 0.0, 11.3069, 0.0, 43.4582, 19.4509, 50.7063, 15.3589, 35.7732, 4.214], [24.1212, 0.2195, 0.0, 22.1867, 0.0, 0.0, 30.6844, 0.0, 38.2455, 31.7794, 0.0, 17.7184, 12.0814, 33.3803, 112.3085, 16.6874, 5.9388, 0.0, 5.8138, 25.0771, 47.5574, 133.3862, 15.792, 6.4141, 0.0, 57.1709, 50.2848, 0.0, 35.7694, 20.5385, 9.7088, 4.1724, 9.632], [71.7046, 48.4042, 0.0, 42.3669, 0.0, 0.0, 33.3944, 0.0, 17.7262, 46.9577, 0.0, 24.1472, 34.9807, 63.9146, 10.2038, 2.0374, 8.6113, 0.0, 24.5843, 9.7325, 59.976, 0.0, 68.2963, 0.0, 41.575, 0.0, 19.0944, 0.8294, 74.639, 61.9954, 3.8962, 27.6938, 43.0236, 11.438], [38.8942, 75.7226, 108.4198, 7.572, 6.0134, 19.9332, 18.7901, 144.9302, 10.643, 12.1968, 131.783, 20.9357, 90.0889, 34.2185, 53.4643, 25.1251, 59.6333], [13.9719, 23.9277, 0.0, 47.6412, 0.0, 0.2831, 30.4222, 3.5501, 17.838, 23.301, 0.0, 18.816, 11.1568, 34.151, 84.3153, 27.5052, 26.7741, 15.4482, 33.1402, 86.7888, 15.8323, 0.0, 37.4347, 0.0, 27.6973, 0.0, 33.1718, 2.9376, 89.0602, 84.2146, 41.5224, 59.7646, 19.0152, 16.254], [121.6606, 58.6667, 0.0, 30.3849, 32.2591, 19.5882, 50.3372, 0.0, 28.6944, 25.858, 35.6333, 52.4285, 42.7373, 30.8818, 30.1767, 35.1293, 83.9664, 0.0, 154.3882, 5.0986, 103.9084, 65.7342, 57.2458], [22.6713, 72.8258, 0.0, 45.4627, 15.5232, 12.3423, 13.5938, 31.333, 28.7493, 103.2832, 0.0, 37.0048, 19.0468, 109.4493, 75.1856, 29.6881, 13.9562, 45.1819, 26.0006, 76.3459, 0.0, 0.0, 71.9035, 19.3565, 41.4584, 0.0, 28.5667, 7.8451, 110.6918, 54.6375, 26.3828, 23.9536, 45.3492, 35.518], [40.3339, 31.8853, 0.0, 23.9639, 0.0, 0.0, 41.9616, 27.9374, 16.2739, 52.6495, 5.4762, 21.4816, 15.5025, 66.8198, 61.2226, 43.8045, 29.1991, 0.0, 46.4001, 21.312, 90.1757, 0.0, 81.8434, 3.4742, 55.2196, 0.0, 22.2768, 42.7162, 92.8603, 39.5576, 104.6965, 105.8414, 42.75, 39.3558], [55.7556, 79.7406, 51.5397, 0.0, 11.3256, 58.6151, 161.4501, 30.0899, 136.7227, 24.4564, 57.7024, 42.809, 89.2314, 63.2365, 21.4414, 23.9532, 0.0, 55.2039, 18.0442, 154.2442, 6.7032, 19.2175, 156.2318, 30.9974, 67.6396, 8.7885, 33.5462, 52.393, 188.3515, 69.4261, 28.6092, 26.8185, 73.8036, 23.2522], [236.2035, 101.528, 51.3677, 44.1549, 65.9147, 189.7476, 59.0254, 185.8149, 91.6648, 108.584, 35.8437, 126.0505, 124.6604, 58.9397, 48.3517, 62.2912, 48.023, 145.2125, 26.4499, 199.1976, 57.2798, 117.3197, 53.1648, 21.6346, 190.4952, 156.9189, 78.9815, 126.9301, 112.5864, 61.4793], [164.2353, 118.8152, 0.0, 64.5536, 18.4985, 70.9909, 51.9275, 137.2686, 41.8578, 125.2205, 50.8419, 69.384, 34.4259, 103.2239, 131.5077, 170.0275, 54.538, 69.3232, 133.6618, 171.3197, 25.4995, 14.49, 131.9434, 37.224, 133.4716, 44.5945, 40.6224, 55.1578, 186.1104, 143.7331, 45.7525, 145.1539, 135.5004, 91.3535], [89.1036, 213.593, 58.9831, 46.9533, 21.4091, 0.0, 92.1844, 123.8402, 41.6716, 121.4852, 13.1928, 60.6032, 50.2366, 183.3247, 114.121, 115.1142, 33.3563, 53.7034, 45.9571, 42.8016, 320.6246, 0.0, 19.8425, 230.5402, 48.8875, 164.9007, 20.2891, 92.2522, 82.08, 184.9411, 194.2181, 120.5039, 56.1835, 109.9872, 29.799], [369.7271, 182.1467, 48.8321, 62.4324, 14.8548, 72.0334, 39.2953, 198.597, 36.6442, 115.0819, 58.0606, 120.6576, 27.738, 137.3156, 95.9959, 102.0165, 13.4118, 48.1165, 41.9846, 246.3955, 15.7411, 238.7165, 80.5618, 95.4535, 29.2194, 75.5165, 95.4893, 180.8486, 192.4697, 105.3644, 174.5985, 191.5884, 286.6273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

