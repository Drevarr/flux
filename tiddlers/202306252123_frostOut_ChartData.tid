created: 20230625212343000
creator: Drevarr
modified: 20230705163535738
modifier: drevarr
tags: ChartData
title: 202306252123_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Ildemir Fares", "Miphest\u00f6", "Venomina The Siren", "Seiker Novus Terra", "Tegan Parker", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[157.607, 255.68, 79.2965, 243.8877], [36.7517, 125.145, 37.7075, 0.0, 19.8891, 85.1659, 34.4058, 49.7561, 0.0, 0.0, 75.0182, 52.4218, 78.7296, 51.205, 15.8742, 56.5704, 66.7027, 37.0411, 36.478], [36.1101, 91.091, 82.8923, 106.455, 74.9952, 96.1958, 58.7779, 125.3146, 75.903, 130.7751, 15.3126, 15.1675, 61.056, 55.5955, 66.253, 144.5378, 16.121, 68.0707, 51.0384, 26.4218, 83.915, 77.3693, 140.4736, 40.0426, 143.2927], [57.6478, 273.9737, 86.8447, 79.195, 96.7008, 48.4512, 53.2263, 143.5896, 118.9759, 162.1454, 18.3582, 57.3496, 144.6451, 150.553, 193.3546, 177.821, 27.307, 192.9912, 115.0128], [55.9065, 386.0857, 80.9161, 66.411, 48.3504, 34.4205, 38.3229, 99.7013, 109.7835, 63.7421, 30.033, 64.6315, 98.0582, 138.551, 181.6118, 155.5236, 20.1019, 117.9365, 135.193, 102.7163, 117.4089, 101.4326, 239.512, 22.9469, 235.1133], [254.6037, 464.7042, 109.9178, 183.253, 78.1872, 189.1111, 80.6075, 226.7798, 157.3214, 31.8594, 129.5232, 41.4963, 8.112, 165.7498, 143.9866, 250.7338, 184.1984, 77.2985, 131.113, 191.5469, 150.3134, 142.2593, 89.2416, 242.52, 75.0226, 210.9318]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

