created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Revenant Brandorf", "Mistwalker Cael", "Austinyaj", "Sana Minatozak", "Lord Erin The Wise", "Tootsie Pop Rocks", "Aira Draugr", "Etcherii", "Meme Soulmessor", "Xeltrom", "Belvyn Brightblade", "No Reserv\u00e9", "Tegan Parker", "Puppy Sky", "Etchery Howls", "Arch Wells", "Arlyss Phury", "Adrinz", "Zori Fizbow", "La Poupounette", "Elfina Lightborn", "Gamora Titus", "Sofya De Nova", "Necrocorruption", "Hawaiian Supreme", "Jimbo The Plug", "Kronika Riddle", "Lowella Slytherin", "Gluzzen", "Verris The Wanderer", "Hawaiian Supreme", "Lord Of Bones", "Miphest\u00f6", "Nazhul Naxxremis", "S\u00e4int Cel\u00e9stine", "Katiana Lafay", "Nox Anathema", "Reynard Revsen", "Venutia", "Seiker Novus Terra", "Ares Slot", "Raziel Umbra", "Adrinz", "Shanayynayray", "Lady Bear Snoogans", "Gavid Doggins", "Nemvar", "Verris The Wanderer", "Mokaris", "Fqa Rev"];
const professions = ["Vindicator", "Vindicator", "Dragonhunter", "Scrapper", "Weaver", "Scrapper", "Herald", "Firebrand", "Reaper", "Druid", "Firebrand", "Vindicator", "Tempest", "Reaper", "Druid", "Reaper", "Vindicator", "Firebrand", "Vindicator", "Renegade", "Berserker", "Firebrand", "Weaver", "Reaper", "Spellbreaker", "Reaper", "Chronomancer", "Scourge", "Deadeye", "Soulbeast", "Berserker", "Reaper", "Tempest", "Reaper", "Firebrand", "Herald", "Herald", "Berserker", "Mirage", "Tempest", "Spellbreaker", "Chronomancer", "Dragonhunter", "Daredevil", "Willbender", "Herald", "Warrior", "Untamed", "Herald", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[512.6775, 574.1077, 13.75, 20.5263, 20.5208, 1099.0667, 71.9254, 2654.4762, 1022.9388, 203.0, 3813.0625, 106.0877, 1312.2439, 1505.4697, 12081.625, 3210.4359, 303.8095, 323.3267, 22.0594], [530.2581, 748.6266, 335.3548, 92.1765, 52.8596, 246.6852, 1171.6932, 2350.5455, 591.7158, 1059.0222, 433.8462, 2519.5429, 96.3158, 7250.8889, 2392.2593], [890.4788, 981.9905, 106.1597, 250.8108, 390.6863, 670.1667, 790.7273, 1321.3659, 1121.4429, 330.2, 3618.0909, 1246.2941, 13215.3333, 3520.7778, 2681.0, 513.1389, 824.6316, 547.5114, 981.0], [1207.1277, 1450.8721, 247.6489, 0.0, 786.6909], [1015.9396, 32.9667, 80.3643, 0.0, 356.5536, 1252.767, 495.56, 503.8021, 445.1058, 435.3793, 856.375, 511.0189, 5014.5333, 1723.6863, 132.2727, 1168.0968, 3424.4375, 1266.08, 705.1758, 140.1023], [447.8595, 747.3662, 60.0, 64.4301, 35.3393, 26.84, 1163.3647, 253.622, 2283.973, 978.7576, 366.4091, 4495.2667], [707.034, 841.9125, 18.625, 179.5263, 0.0, 141.3929, 973.2621], [44.0078, 0.0, 71.6545, 2446.8333, 122.45, 745.8871, 717.4, 393.1, 1024.6716, 2980.2, 4224.3077, 2201.6351, 3125.4688, 5343.68, 2791.3902, 1893.2381, 1157.8085, 243.8764], [801.101, 1077.117, 588.1379, 1808.0323, 674.2982, 5658.3571, 1730.2805, 4019.1333, 10937.75, 2334.4146, 2321.0, 424.402, 933.1029], [588.4936, 720.7948, 28.0417, 100.7185, 19.6667, 174.2593, 1522.9286], [563.405, 685.266, 157.5, 53.0, 134.0714, 894.3511], [603.4512, 656.5317, 85.7, 157.8523, 0.0, 215.5091, 814.3671], [2.2675, 33.0, 24.3534, 358.0741, 2177.2308, 153.5432, 1408.4219, 1050.8958, 464.0385, 2251.6562, 317.5636, 2899.4, 2416.0294, 1282.6176, 7510.6429, 2709.6552, 2697.7, 560.2959, 69.9438], [278.2716, 3286.1373, 1268.9012, 519.1923, 6247.0, 3960.1923, 16116.4286, 8149.3182, 7263.7059], [596.7921, 695.0604, 0.0], [786.662, 879.8046, 233.2, 131.7953, 91.5965, 197.3393], [1504.1429, 1681.0, 716.32, 2923.9062, 430.193, 14756.1667, 4246.6129, 1980.2222, 7504.0833, 4312.6087, 951.9091, 291.1139, 38.1807], [1103.5714, 666.4231, 1994.5714, 3514.52, 6058.9333, 6319.0714, 8492.7778, 5808.1176, 4977.2857, 793.1905, 737.3097, 119.4045], [518.7328, 619.7383, 26.5746, 46.5714, 10.5577], [291.4469, 1083.7572, 2.931, 108.9658, 56.6154, 251.6545, 523.5965, 4106.4], [4530.4667, 4665.1739, 8538.0909, 11550.125, 6003.0588, 2221.1364, 1010.3419, 199.4096], [3372.9385, 2186.9474, 3722.1379, 4214.0, 6886.0, 726.4773, 101.0778], [719.2271, 81.1935, 68.5149, 24.9167, 170.2727, 812.0792], [415.7103, 1508.3571, 604.2917, 3696.2222, 9208.6667, 18902.0, 2023.5926, 27.9744, 516.8889, 110.5, 5.6], [625.2174, 3506.7647, 2856.193, 2256.2381, 5743.7083, 8230.5], [855.065], [1635.7727, 7093.1304, 833.871, 3743.2, 1049.0909, 805.2097, 88.8068], [2397.9167, 1183.2917, 592.2857, 1638.0, 786.1026, 240.7727, 0.0, 6.0, 155.475, 0.5, 1917.9762, 223.625], [2492.1739, 984.0938, 1008.7391, 5526.4444, 3184.6667, 13589.75, 4033.0, 10.2973], [81.8829, 676.2439, 1049.9293, 3.3256, 224.2368, 1996.5, 18.697, 875.8615, 81.3333, 81.4444], [243.0877, 14151.0, 2930.087, 2281.3256, 154.7805], [5221.5882, 1812.7826, 1856.9552, 232.9467], [2470.65, 483.2083, 3681.1923], [3300.4348, 1152.1975, 1050.0986], [2461.6538, 4441.3684, 544.7431, 103.04], [21353.4, 18836.5, 55.8953], [1158.3111, 131.759], [7223.2727, 859.3187], [755.4706, 138.0, 79.0444, 13.4364, 2354.3056, 24.9394, 129.2667, 378.7907, 3.6364], [31.1613, 113.6593, 0.0, 279.9455, 1099.9333], [745.35, 1953.037, 44.2892], [960.2609, 3117.5484, 39.6782], [421.5275, 1112.4928], [669.2685, 234.4091], [495.459, 1610.0909], [796.033], [4513.9375], [0.0, 238.6364, 237.6923], [75.4514, 203.6765], [170.2195]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

