created: 20230503220838000
creator: Drevarr
modified: 20230705163527997
modifier: drevarr
tags: ChartData
title: 202305032208_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Drevarr Moonwillow", "Demon Dalham", "Gavann", "Zaylen Harker", "Lucas Ryn", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Willbender", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[329.3285, 166.7416, 13.6475, 11.0757, 34.447, 107.4276, 0.0, 0.0, 228.686], [506.4883, 75.8157, 2.8136, 5.4684, 5.5488, 20.4771, 0.0, 0.0, 85.0925, 0.0, 0.0, 150.8755, 265.4977], [370.4251, 187.4186, 14.0194, 33.2553, 39.5136, 35.124, 0.0, 225.5837, 0.0, 236.7955, 233.0563], [883.0224, 355.2206, 37.1587, 0.0, 50.4602, 351.918, 0.0, 61.4492, 1040.6101], [925.2298, 206.5051, 4.9318, 80.6991, 223.1901, 0.0, 13.6554, 455.1561, 0.0, 359.833, 521.6731], [729.1877, 232.4839, 14.3751, 0.0, 46.9969, 213.4146, 11.186, 39.628, 754.7526, 10.6661, 67.562, 458.1254, 487.7401], [1003.5355, 173.3689, 59.9422, 6.918, 134.5854, 91.7868, 81.0186, 199.9244, 717.5246, 0.0, 418.6022, 480.6552], [850.8115, 241.497, 54.0725, 0.8246, 145.6829, 421.4784, 136.7249, 32.7317, 947.9834, 0.0, 371.5181, 418.3826], [1257.8904, 453.3039, 36.9323, 113.0606, 334.6308, 42.7305, 1092.9065, 0.0, 0.0, 461.2186, 795.3744], [1350.0802, 437.1334, 47.4428, 124.8285, 316.3146, 15.2679, 1181.1014, 247.5182, 574.9766, 903.5125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

