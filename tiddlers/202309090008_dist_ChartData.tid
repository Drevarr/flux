created: 20230909000818000
creator: Drevarr
tags: ChartData
title: 202309090008_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Elon Illusionblade", "No Reserv\u00e9", "Brutal Araden", "Permanent Dawn", "Mort\u00e4rion", "Black Raspberry Pie", "K\u00f4sair", "Heals For Daddy", "Jobless Jennifer", "Trooobi", "Sofya De Nova", "Mister Jekyll", "Legoh Brave", "Be\u00eb", "Kahlyanne", "Xanvias Einzbern", "Gestern Yesteryear", "Mistwalker Cael", "Glorious Gluvs", "Drevarr Moonwillow", "Firebrand pl1-2628"];
const professions = ["Chronomancer", "Vindicator", "Renegade", "Weaver", "Scrapper", "Chronomancer", "Spellbreaker", "Druid", "Berserker", "Herald", "Tempest", "Reaper", "Tempest", "Reaper", "Tempest", "Berserker", "Firebrand", "Herald", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[359, 308, 254, 606, 481, 357, 247, 330, 562, 248, 1006, 1545, 280], [373, 216, 2030, 438, 512, 354, 271, 439, 389, 355, 2008, 365, 354], [233, 215, 4456, 279, 325, 359, 342, 490, 421, 412, 2071, 960, 549], [11283, 1023, 17848, 334, 250, 398, 309, 471, 277, 309, 1902, 2627, 382], [991, 317, 1472, 1091, 765, 8214, 27148, 2031, 545, 346, 1379, 4892, 12965], [204, 222, 1572, 388, 348, 294, 380, 436, 273, 1874, 289, 336], [232, 155, 5219, 532, 335, 315, 297, 376, 489, 1409, 2076, 328], [292, 222, 1642, 458, 257, 334, 243, 397], [390, 219, 4295, 361, 230, 446, 314, 428], [195, 251, 371, 286, 279, 290, 309], [236, 202, 275, 312, 383, 283, 254, 299, 484, 229, 1810, 488, 226], [180, 171, 488, 406, 284, 280, 274, 407, 427, 247, 1690, 466, 378], [185, 198, 2154, 395, 633, 297, 390, 444, 230, 308, 2094, 784, 336], [279, 214, 1649, 804, 567, 304, 213, 427, 318, 285, 935, 1099, 12770], [161, 164, 768, 245, 296, 280, 360, 256, 462, 1983, 777, 243], [227, 181, 522, 410, 294, 208, 320, 292, 213, 1815, 359, 21768], [196, 174, 1689, 292, 257, 216, 1139, 241, 167, 1757, 211], [253, 166, 237, 516, 627, 222, 255, 385, 244, 339, 299, 1751, 331], [172, 239, 452, 493, 321, 291, 336, 216, 215, 1840, 318, 627], [193, 147, 199, 194, 185, 170, 208, 239, 224, 1779, 410, 195], [160, 198, 189, 233, 206, 210, 215, 196, 204, 1732, 1558, 184]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

