created: 20230607221050000
creator: Drevarr
modified: 20230705163533938
modifier: drevarr
tags: ChartData
title: 202306072210_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Chrozz", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Primal Clone", "Tegan Parker", "Eibh\u00ebar", "Venomina The Siren", "Artakama Nahid"];
const professions = ["Willbender", "Chronomancer", "Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[82.9327, 72.082, 239.295, 0.0, 190.2715, 60.1901, 0.0, 87.412, 0.0, 36.9533, 0.0, 24.1109, 0.0], [0.0, 156.492, 534.4255, 0.0, 105.0835, 18.8526, 37.9512, 37.6574, 42.1943, 26.5174, 39.169, 0.0, 41.1684], [0.0, 2.714, 954.901, 2.8002, 100.5768, 23.8685, 0.0, 4.8935, 11.5987, 41.273, 28.106, 8.3743, 48.4277], [129.9803, 32.292, 2593.502, 62.8408, 434.2939, 69.1408, 0.0, 52.3627, 58.1837, 146.8722, 40.917, 102.1614, 130.8132], [267.8018, 133.722, 3180.3445, 42.9141, 265.127, 37.4458, 0.0, 77.5505, 38.6664, 32.2914, 33.511, 62.9717, 103.0915], [127.2127, 133.17, 2943.3285, 111.9413, 441.109, 100.533, 0.0, 43.0974, 31.5981, 150.5932, 56.35, 153.0903, 165.7942], [151.662, 3592.8435, 304.5662, 452.8704, 79.9508, 42.4368, 118.2136, 41.2933, 68.7742, 32.407, 67.9558, 128.5721], [185.5148, 174.892, 3812.767, 267.9037, 232.5907, 87.4313, 30.1056, 62.1248, 34.7833, 158.1207, 36.087, 32.9912, 125.6489]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

