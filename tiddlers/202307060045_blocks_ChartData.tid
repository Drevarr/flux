created: 20230706004528000
creator: Drevarr
tags: ChartData
title: 202307060045_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Mike The Archmagus", "Mistwalker Cael", "Grasszanine", "Newtype Khan", "Xyntharos", "Kary\u00edna", "Zaedy Zae", "Stoic Rapidfire", "Legacy Of Mathus", "River No Hug", "Johosh The Mighty", "Tika Fiery", "Tegan Parker", "Solus Sanctus", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Tempest", "Tempest", "Vindicator", "Berserker", "Spellbreaker", "Vindicator", "Vindicator", "Druid", "Druid", "Berserker", "Reaper", "Berserker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6, 5, 2, 5, 6], [10, 5, 6, 7], [14, 6, 4, 4], [7, 4, 1, 2, 3, 3, 8, 4, 6, 8, 6], [6, 5, 4, 2, 3, 3, 7, 5, 5, 8, 8], [11, 11, 10, 6, 10, 8, 3], [3, 6, 2, 5, 6, 10, 1, 7, 3, 12, 9, 0], [6, 1, 0, 6, 4, 6, 10, 6, 4, 13, 8, 0], [8, 12, 10, 10, 8, 17, 8, 0], [6, 6, 4, 6, 7, 6, 9, 10, 5, 9, 6, 0], [2, 7, 5, 3, 11, 12, 7, 5, 7, 9, 9], [11, 5, 7, 4, 4, 11, 10, 5, 7, 14, 7], [11, 6, 4, 6, 6, 10, 14, 10, 8, 15, 8, 4], [7, 8, 8, 9, 12, 11, 8, 8, 10, 16, 13, 1], [12, 8, 8, 9, 8, 13, 12, 9, 10, 17, 13, 2], [11, 9, 6, 10, 11, 15, 12, 10, 8, 15, 12, 3], [11, 4, 12, 11, 11, 13, 12, 16, 9, 12, 13], [9, 7, 14, 10, 13, 27, 14, 8, 9, 21, 19], [17, 7, 13, 12, 13, 34, 22, 33, 11, 29, 14, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

