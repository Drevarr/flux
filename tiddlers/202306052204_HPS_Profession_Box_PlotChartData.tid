created: 20230605220452000
creator: Drevarr
modified: 20230705163533807
modifier: drevarr
tags: ChartData
title: 202306052204_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Cele', 'Berserker_Dps', 'Chronomancer_Support', 'Druid_Support', 'Firebrand_Dps', 'Firebrand_Support', 'Herald_Dps', 'Mirage_Condi', 'Scrapper_Dps', 'Scrapper_Support', 'Soulbeast_Dps', 'Spellbreaker_Cele', 'Spellbreaker_Dps', 'Tempest_Support', 'Untamed_Cele', 'Vindicator_Dps', 'Vindicator_Support', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[5.9188], [2.2182, 0.9539, 0.0312, 80.8382, 43.807, 1.0926, 58.3205, 17.3431, 22.3521, 33.3569], [0.1381, 24.1607, 173.1317, 20.3602, 12.608, 153.6705, 16.5539, 29.7852, 28.5107, 31.5248, 9.5252, 20.4431, 0.6222, 2.2201, 71.0479, 8.3059, 12.368, 168.6013, 6.7674, 12.4142, 2.1335, 3.0103, 6.4218, 7.2667, 25.4674], [11.8476, 3068.3766, 1517.9707, 302.0684, 365.2632, 2933.6949, 1725.352, 78.0161, 92.9187, 134.6382, 25.7107, 65.5018, 32.9942, 23.6715, 739.9133, 382.7833, 590.7804, 992.6175, 481.7921, 700.3165, 665.4364, 457.6616, 914.0223, 876.1995, 30.7073, 460.425, 1370.5608, 951.7674, 849.7023, 1706.0747, 1116.466, 1834.6993, 748.9704, 384.3491, 580.2447, 189.0181, 261.9576, 350.3002, 224.4053, 69.3172, 389.6476], [53.9482, 32.0485, 38.1057], [5.0262, 1.9608, 2.5684, 122.1602, 609.6916, 84.1629, 52.1359, 49.9886, 130.8182, 25.8902, 64.2087, 68.0565, 38.037, 325.6962, 11.8527, 12.3562, 29.7285, 13.0728, 20.5291, 103.6565, 529.0547, 124.4468, 93.07, 143.9406, 206.2882, 81.1047, 60.5576, 63.4707, 16.5218, 20.8505, 16.0592, 47.6159, 33.8037, 15.5305, 2.3692, 41.0834, 1.5346, 5.0883, 6.919, 69.594, 32.9528, 58.2465, 40.8587, 529.7784, 11.6223, 46.8505, 19.6315, 38.5704, 95.7779, 126.0969, 29.345, 18.0959, 20.1802, 65.9362, 8.4246, 12.9632, 35.9289, 68.4569, 179.4361, 47.2453, 46.9625, 30.7144, 140.0532, 34.5325, 62.5177, 196.1755, 16.9029, 38.6848, 14.5675, 261.2931, 120.0508, 100.2956, 85.3283, 76.5436, 172.6758, 137.7243, 98.7968, 166.9928, 149.044, 481.9052, 126.6511, 38.7881, 159.0751, 192.4844, 79.4021, 32.7104, 86.4774, 82.8086, 48.0161, 28.1289, 31.2668, 15.2109, 53.3034, 45.5797, 7.5138, 68.3338, 250.9382, 3.1216, 13.5951, 26.0815, 5.7656, 14.7721, 11.63, 46.8282, 15.9912, 15.022, 20.837, 60.022, 47.489, 38.6564], [5.0447], [1.5384], [3.7468, 10.4057, 17.8047, 84.8654, 8.0373, 7.3337, 24.5814, 41.3446, 114.4593, 32.4819, 5.209, 26.7373, 20.2873, 17.5603, 36.7385, 19.8823, 0.4163, 44.215, 48.2118, 55.1987, 43.3911, 22.6208, 23.7846, 0.7865, 10.2132, 4.2006, 2.4904, 93.6123, 10.1322], [4.3082, 27.8376, 2995.7011, 200.0745, 2015.564, 1023.531, 368.2457, 3289.0757, 106.8306, 2358.7481, 130.5555, 317.4834, 157.3067, 24.3108, 40.4929, 300.3526, 528.6342, 375.6172, 61.5139, 1035.4711, 792.5883, 44.8308, 1036.2153, 765.2299, 81.7778, 989.1091, 405.5541, 23.7936, 2252.5292, 1799.6586, 18.2772, 2195.163, 2117.5252, 177.801, 1103.8302, 526.9174, 26.4258, 206.3148, 59.9925, 91.3216, 21.2335], [25.0211, 16.0359, 1.6559], [5.4096, 79.3054, 22.8144, 3.6302, 114.1911, 0.0991, 13.8624, 14.1515, 60.7159, 97.9976, 2.7516, 34.7433, 13.8428, 162.5974, 38.7779, 7.533], [0.3061], [106.0204, 2325.2146, 1635.9802, 191.8946, 878.2198, 444.92, 37.1267, 96.0995, 2576.1128, 1517.1825, 1509.8095, 381.9919, 229.8843, 383.9342, 781.5154, 122.5589, 201.4323, 119.4809, 23.4762, 9.647, 84.958, 595.2066, 300.7648, 106.3772, 102.4027, 841.8115, 601.9187, 82.9511, 565.8534, 111.439, 377.6656, 630.8756, 76.1497, 681.1471, 23.3186, 376.1648, 230.1663, 557.9578, 1178.5253, 879.6578, 313.023, 88.7214, 1680.2765, 1218.2241, 272.1051, 1153.3976, 210.3082, 790.8065, 575.1433, 43.5498, 307.2715, 9.3125, 433.5255, 199.2188, 407.7681, 315.5727, 223.348, 24.8238, 410.1762], [0.2062], [17.2214, 0.794, 29.0749], [36.8449, 501.0839, 572.671, 582.7394, 330.4738, 722.6362, 1437.8398], [0.0805, 13.3633, 8.1653]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
