created: 20230415000841000
creator: Drevarr
modified: 20230705163525539
modifier: drevarr
tags: ChartData
title: 202304150008_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Cedryn X", "Smol Daddy Tika", "Zadie Miststep", "Smol Daddy Tika", "Bella Sassy", "Black Raspberry Pie", "Nazhul Naxxremis", "Paul Bjart Mist Cop", "Panther B Me", "Nazhul Naxxremis", "Kosa\u00edr", "Cat Wigglebooty", "Be\u00eb", "Rozaalyna", "Corlyss Velaryonn", "Koralia Danai", "Grasszanine", "Drevarr Moonwillow", "Rina Of Theros", "Xanvias Einzbern", "Hauzzy", "Sheep Paws", "Venomina The Siren", "Fruji", "Lord Erin The Wise", "The Fancy Cheese", "Air One Com", "Aronorf Xideliesi", "High Sorcer Baradun", "Drogo Deception", "Elonith Primal", "Tegan Parker", "Blancooo Padreee", "Inedible Plant", "Kmpek", "Lucas Ryn", "Arcanophage Farra", "Ryvalia Fazebringer", "Mac Chiato", "Primal Clone", "Johosh The Great", "Smol Gluvs", "Newtype Khan", "Mmathuss", "Mistwalker Caelon", "Stoic Rapidfire", "Solus Sanctus", "Sassy Daddy Demon", "Xyntharos"];
const professions = ["Berserker", "Berserker", "Tempest", "Spellbreaker", "Firebrand", "Chronomancer", "Reaper", "Scrapper", "Scourge", "Scourge", "Scrapper", "Scrapper", "Reaper", "Reaper", "Vindicator", "Firebrand", "Spellbreaker", "Scrapper", "Scourge", "Berserker", "Spellbreaker", "Berserker", "Tempest", "Scrapper", "Weaver", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Tempest", "Spellbreaker", "Vindicator", "Vindicator", "Firebrand", "Spellbreaker", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Reaper", "Spellbreaker", "Firebrand", "Vindicator", "Druid", "Firebrand", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 0, 3, 3, 2, 5, 1, 1, 0, 4, 0, 4, 0, 2, 0, 2, 2, 0, 1, 0], [3, 4, 3, 1, 7, 4, 0, 10, 5], [3, 5, 0, 6, 2, 2, 0, 2, 0, 6, 7, 4, 0, 2], [5, 1, 5, 4, 0, 3, 1, 5, 17, 6, 3, 3], [4, 3, 2, 0, 4, 2, 1, 5, 4, 9, 0, 2, 3, 1, 2, 2, 3, 2, 6, 1, 4], [3, 3, 1, 0, 7, 2, 0, 5, 2, 2, 0, 11, 0, 3, 3, 1, 3, 6, 5, 5, 2, 0], [8, 2, 24, 0, 8, 5, 5, 8, 5], [1, 4, 1, 0, 9, 3, 1, 4, 4, 0, 12, 0, 6, 2, 5, 2, 0, 5, 3, 3, 4], [7, 4, 6, 3, 9, 6, 2, 4, 1, 5, 0, 12, 0, 2, 2, 0, 1, 3, 6, 2], [10, 8, 5, 6, 12, 9, 4, 9, 3, 12], [2, 0, 2, 4, 8, 1, 4, 8, 3, 6, 0, 9, 0, 5, 2, 2, 4, 2, 10, 4, 4, 2], [2, 10, 2, 4, 1, 12, 6, 4, 5, 7, 8, 6, 6, 6, 5], [0, 7, 1, 1, 13, 6, 6, 0, 9, 0, 6, 2, 3, 3, 7, 17, 5], [5, 5, 4, 5, 5, 8, 4, 14, 6, 6, 3, 13, 5, 4], [4, 10, 1, 5, 9, 3, 3, 12, 5, 3, 4, 6, 2, 4, 0, 6, 6, 7, 2], [5, 5, 2, 0, 7, 0, 1, 3, 0, 3, 1, 18, 5, 3, 4, 3, 3, 11, 5, 10, 10], [7, 3, 4, 2, 9, 2, 8, 5, 6, 4, 0, 7, 5, 0, 1, 4, 4, 15, 6, 5, 2], [6, 4, 5, 1, 7, 1, 2, 5, 5, 9, 1, 9, 1, 3, 3, 1, 1, 6, 8, 9, 8, 6], [4, 3, 3, 1, 6, 6, 5, 6, 1, 5, 2, 11, 1, 5, 1, 4, 3, 7, 11, 5, 4, 7], [1, 1, 2, 0, 6, 4, 2, 8, 6, 11, 0, 16, 0, 6, 1, 4, 2, 7, 11, 4, 6, 5], [8, 4, 7, 1, 13, 2, 1, 12, 4, 8, 0, 13, 7, 2, 2, 4, 9, 6], [4, 2, 4, 10, 5, 6, 1, 11, 0, 8, 3, 5, 4, 20, 22], [3, 4, 5, 1, 12, 2, 2, 5, 5, 6, 2, 14, 2, 3, 3, 7, 12, 6, 6, 6], [1, 5, 3, 1, 9, 2, 3, 11, 7, 4, 0, 8, 4, 5, 0, 6, 7, 19, 5, 4, 3], [1, 5, 2, 4, 12, 8, 8, 10, 3, 3, 3, 14, 0, 7, 2, 5, 8, 13, 10], [3, 6, 2, 0, 13, 2, 10, 11, 5, 3, 1, 16, 0, 3, 1, 1, 4, 6, 16, 5, 7, 6], [10, 5, 5, 3, 7, 6, 6, 14, 6, 4, 0, 5, 5, 1, 5, 4, 19, 15, 2, 0, 5], [5, 4, 6, 2, 12, 1, 3, 3, 5, 5, 1, 14, 7, 3, 4, 5, 13, 18, 7, 8, 6], [0, 6, 2, 8, 12, 4, 3, 9, 3, 8, 4, 20, 6, 2, 3, 7, 10, 11, 1, 7, 9], [9, 3, 0, 13, 2, 5, 20, 6, 5, 0, 23, 0, 7, 2, 3, 2, 17, 15, 9], [4, 23, 12, 5, 6, 11, 22, 28, 11, 10, 9], [7, 9, 5, 6, 8, 8, 6, 15, 4, 3, 2, 13, 8, 5, 1, 3, 17, 10, 4, 4, 5], [5, 6, 5, 2, 7, 4, 6, 13, 5, 8, 1, 26, 5, 1, 3, 4, 11, 19, 7, 6], [9, 5, 8, 4, 15, 3, 4, 10, 7, 8, 1, 6, 0, 8, 7, 4, 9, 8, 17, 8, 3, 6], [6, 11, 5, 4, 17, 2, 10, 12, 2, 8, 3, 25, 0, 8, 5, 3, 3, 8, 7, 8, 1, 4], [9, 5, 8, 1, 13, 4, 5, 20, 7, 8, 1, 15, 0, 4, 3, 6, 6, 9, 11, 9, 7, 1], [8, 5, 2, 2, 10, 4, 6, 10, 5, 7, 0, 20, 5, 3, 3, 8, 17, 17, 5, 10, 6], [7, 5, 9, 2, 15, 2, 3, 12, 6, 14, 2, 18, 0, 5, 7, 6, 2, 11, 25, 7, 12, 6], [9, 4, 7, 5, 14, 5, 7, 16, 7, 11, 1, 23, 4, 5, 3, 4, 18, 20, 11, 9, 8], [10, 6, 9, 5, 17, 2, 3, 22, 5, 13, 0, 21, 1, 10, 5, 5, 5, 13, 22, 10, 9, 8], [8, 7, 9, 3, 14, 3, 18, 23, 8, 13, 2, 25, 8, 4, 4, 9, 21, 27, 6, 5, 11], [12, 8, 6, 18, 9, 12, 21, 15, 12, 1, 14, 5, 12, 7, 8, 7, 22, 21, 12, 9, 10], [11, 14, 6, 5, 15, 7, 17, 12, 11, 6, 2, 21, 12, 10, 7, 7, 24, 22, 8, 9, 16], [10, 8, 2, 3, 20, 4, 9, 21, 9, 10, 3, 30, 13, 5, 7, 9, 25, 32, 13, 9, 9], [11, 13, 10, 5, 11, 7, 15, 22, 5, 16, 0, 28, 1, 11, 10, 6, 9, 26, 29, 10, 8, 11], [8, 14, 6, 6, 18, 12, 12, 18, 6, 12, 5, 24, 12, 8, 8, 16, 34, 26, 11, 14, 5], [9, 14, 8, 5, 21, 9, 15, 24, 9, 12, 4, 32, 8, 9, 7, 12, 24, 30, 7, 11, 14], [9, 12, 13, 11, 28, 14, 32, 38, 17, 18, 5, 25, 0, 7, 9, 3, 9, 15, 21, 2, 6, 7], [11, 18, 8, 8, 17, 9, 23, 29, 15, 11, 1, 30, 1, 13, 11, 5, 11, 28, 25, 11, 9, 12]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

