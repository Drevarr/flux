created: 20230628220723000
creator: Drevarr
modified: 20230705163539855
modifier: drevarr
tags: ChartData
title: 202306282207_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Zayde Sunsabre", "Shaca Booey", "Arcanophage Farra", "Gavann", "Grasszanine", "Blade Stacker"];
const professions = ["Spellbreaker", "Spellbreaker", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 8.9837, 107.0719, 75.4992, 55.813, 84.9836, 16.105, 14.4452, 31.3958, 0.0, 56.3135, 19.2845, 31.6417, 0.0], [0.0, 93.42, 172.1821, 58.9617, 62.179, 38.024, 10.2989, 13.7984, 13.8854, 10.3287, 32.5992, 25.8682, 16.6477, 14.9275, 10.6656, 0.0, 0.0, 27.6242, 13.7616, 14.6446, 13.8254, 0.0, 13.9277], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 650.9613, 68.0659, 0.0, 0.0, 4.4602, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 49.3862], [33.6442, 45.0697, 101.9621, 62.6661, 77.271, 37.8339, 13.8586, 29.1599, 8.6323, 13.9816, 89.2962, 14.6189, 24.8798, 1.9743, 0.0, 20.8426, 52.6306, 47.9455, 64.3355, 24.9329, 49.4479, 26.5041, 10.4507, 43.1309], [51.8832, 97.7815, 46.5255, 81.3322, 72.2456, 16.8307, 24.9018, 31.5187, 4.881, 40.717, 41.8349, 30.2085, 28.5343, 104.7168, 8.0196, 53.951, 120.2607, 85.0926, 14.5222, 63.2031, 25.6662, 0.0, 31.657], [0.0, 95.3883, 222.8922, 46.9665, 114.6443, 63.5476, 5.6333, 48.9951, 38.7379, 0.0, 117.2932, 10.4198, 22.7115, 24.679, 103.3594, 30.153, 48.4805, 82.8727, 65.769, 59.3713, 69.31, 27.0333, 0.0, 91.6877], [321.5444, 449.5005, 241.3394, 208.8266, 137.1168, 76.5135, 26.5466, 174.4795, 148.2258, 217.7534, 245.5223, 155.7928, 212.0996, 248.6623, 134.0199, 0.0, 85.6397]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

