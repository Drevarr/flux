created: 20230212214943000
creator: Drevarr
modified: 20230705163519140
modifier: drevarr
tags: ChartData
title: 202302122149_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Arka\u00f1", "Bambiae", "Hyde En Sikh", "Koralia Danai", "Primal Shield", "Sygaldry Verdandi", "Blanco Padre Guard", "Zaylen Harker", "Newtype Khan", "Bella Sassy", "Xanvias Tseli", "Venomina The Fierce"];
const professions = ["Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.815, 20.3923, 89.3916, 0.0, 12.987], [10.0069, 55.8418, 64.2816, 6.2149, 5.587, 12.672, 6.2752, 22.4746], [13.2779, 71.7288, 73.723, 10.2808, 24.753, 6.6429, 13.1949, 26.7648], [13.361, 73.3886, 78.8454, 13.3089, 22.977, 7.0983, 14.0938, 26.135], [35.7865, 48.6096, 105.2611, 5.2869, 28.231, 7.2171, 7.1741, 21.6874], [6.9023, 63.0739, 123.4408, 5.2747, 31.82, 6.8904, 6.9197, 59.4336], [3.4927, 81.3322, 150.3587, 6.8132, 38.887, 6.93, 6.9027, 71.3597], [30.2702, 98.2862, 145.9393, 7.1551, 11.248, 7.4646, 5.8682, 108.3581], [27.7754, 86.0746, 159.9005, 10.3663, 45.843, 6.7122, 13.3475, 102.4541], [37.2557, 106.5854, 194.1505, 0.0, 0.0, 20.4633, 20.335, 77.8147], [38.7803, 148.0814, 135.7949, 2.1001, 61.642, 5.8608, 13.5341, 72.5798], [54.9688, 112.632, 215.4438, 4.884, 16.946, 19.0179, 0.0, 127.8413], [0.0, 298.0598, 286.1536, 23.8217, 71.632, 36.0954, 42.2134, 215.3779]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

