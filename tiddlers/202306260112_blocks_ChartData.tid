created: 20230626011254000
creator: Drevarr
modified: 20230705163537439
modifier: drevarr
tags: ChartData
title: 202306260112_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Skylar Shadowmoon", "Morton Saltbringer", "Suredude", "Freyja Asgrimrkin", "Sumatra Satyricon", "Permanent Dawn", "Warrior Constantine", "Lord Erin The Wise", "Zayde Sunsabre", "Eoooeee", "Good Sir Ragnarok", "Belvyn Brightblade", "Crusader Siolith", "Smol Daddy Tika", "Grasszanine", "Oo Dads Mad", "Axunar", "Newtype Khan", "Tribal S", "Tootsie Pop Rocks", "Fuuko Kazari", "Rina Of Theros", "Raziel Umbra", "Artakama Nahid", "Imalou", "Dargon Spiritwalker", "Lucky Leipreach\u00e1n", "Mmathuss", "Fribble Bibble", "Johosh The Mighty", "Miphest\u00f6", "Arcanophage Farra", "Primal Clone", "Xanvias Einzbern", "Mistwalker Cael", "Smol Gluvs", "Blancooo Padreee", "Be\u00eb", "Yummy Kiwi", "Demon Staph", "Momomeko", "Hyde En Sikh", "Traidoruns Maximus", "Sub Train", "Black Raspberry Pie", "Gestern Yesteryear", "Drevarr Moonwillow", "Sygaldry Verdandi", "Ryvalia Fazebringer", "Bella Sassy"];
const professions = ["Scrapper", "Chronomancer", "Weaver", "Vindicator", "Soulbeast", "Weaver", "Spellbreaker", "Weaver", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Dragonhunter", "Spellbreaker", "Druid", "Scrapper", "Berserker", "Scourge", "Chronomancer", "Tempest", "Firebrand", "Reaper", "Scrapper", "Firebrand", "Scrapper", "Berserker", "Tempest", "Spellbreaker", "Chronomancer", "Berserker", "Vindicator", "Reaper", "Spellbreaker", "Reaper", "Firebrand", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 3, 11, 3, 0, 5, 0, 13, 2], [0, 3, 3, 0, 1, 5, 16, 8, 8], [2, 1, 6, 28, 2, 0, 11, 0], [1, 0, 2, 5, 12, 2, 1, 2, 1, 4, 0, 5, 2, 5, 0, 2, 0, 0, 0, 7, 1, 0, 0], [2, 0, 0, 4, 18, 2, 1, 8, 2, 4, 0, 0, 3, 0, 1, 1, 0, 1, 6, 5, 5], [0, 0, 4, 10, 24, 1, 1, 6, 1, 0, 0, 2, 4, 0, 1, 3, 0, 0, 5, 0, 2, 0, 2], [3, 0, 11, 0, 11, 2, 2, 4, 0, 4, 2, 0, 2, 1, 1, 4, 10, 10, 5], [5, 0, 0, 5, 9, 2, 0, 5, 2, 20, 0, 3, 2, 0, 4, 0, 1, 5, 4, 5, 0, 2, 1], [1, 0, 2, 2, 9, 2, 0, 7, 4, 4, 0, 6, 2, 2, 0, 2, 2, 0, 0, 4, 8, 8, 4, 5, 1, 1], [1, 2, 19, 40, 5, 7, 3], [5, 11, 7, 1, 1, 1, 1, 2, 12, 10, 7, 7, 5, 10], [5, 1, 1, 8, 32, 3, 7, 2, 14, 5, 5], [13, 3, 2, 3, 1, 2, 11, 11, 12, 10, 11, 1, 9], [2, 2, 0, 5, 18, 1, 0, 4, 0, 5, 2, 4, 1, 8, 5, 0, 2, 4, 1, 1, 7, 6, 3, 0, 8, 2, 5], [2, 6, 2, 4, 3, 4, 14, 1, 1, 2, 0, 0, 5, 13, 11, 7, 9, 9, 6], [1, 0, 1, 4, 2, 3, 6, 0, 7, 6, 4, 1, 4, 3, 0, 2, 5, 1, 1, 12, 12, 4, 6, 5, 5, 6], [5, 4, 1, 8, 8, 5, 1, 4, 3, 13, 7, 1, 3, 7, 1, 2, 2, 0, 1, 4, 11, 1, 1, 9, 1, 1], [5, 1, 1, 4, 5, 2, 0, 5, 1, 5, 1, 9, 3, 2, 8, 2, 0, 2, 0, 1, 8, 9, 11, 4, 12, 1, 6], [3, 1, 1, 12, 12, 5, 5, 2, 11, 2, 2, 4, 8, 1, 5, 3, 0, 2, 3, 1, 5, 7, 3, 5, 9], [3, 0, 0, 0, 2, 6, 0, 10, 2, 15, 6, 6, 0, 4, 3, 0, 3, 2, 0, 0, 9, 6, 3, 2, 8, 3, 22], [6, 1, 1, 4, 16, 1, 0, 8, 3, 4, 1, 3, 3, 10, 2, 0, 3, 0, 1, 11, 7, 12, 4, 11, 5], [4, 2, 2, 14, 42, 5, 0, 9, 1, 14, 2, 0, 2, 2, 0, 3, 2, 1, 2, 2, 4, 6, 0, 2, 3, 0], [4, 2, 0, 0, 9, 24, 24, 20, 16, 20, 7], [2, 1, 1, 7, 5, 0, 4, 0, 11, 3, 7, 9, 6, 9, 1, 2, 2, 0, 1, 12, 9, 6, 7, 8, 9, 8], [2, 1, 4, 6, 22, 4, 1, 3, 3, 7, 3, 8, 6, 5, 6, 2, 2, 1, 0, 10, 9, 4, 2, 10, 7, 2], [3, 1, 1, 3, 20, 4, 0, 8, 4, 9, 0, 4, 4, 0, 11, 0, 2, 1, 1, 0, 9, 11, 5, 1, 16, 10, 4], [5, 4, 0, 8, 32, 3, 0, 12, 2, 12, 1, 5, 0, 3, 8, 2, 2, 0, 0, 1, 3, 9, 1, 1, 7, 5, 8], [6, 9, 7, 20, 3, 4, 9, 4, 8, 1, 4, 2, 0, 2, 13, 8, 8, 3, 11, 5, 8], [6, 1, 2, 5, 32, 1, 7, 0, 8, 0, 4, 2, 6, 0, 1, 1, 0, 0, 16, 7, 8, 4, 11, 7, 7], [4, 1, 1, 8, 39, 1, 0, 4, 2, 8, 3, 6, 5, 5, 1, 5, 2, 1, 1, 3, 11, 8, 4, 8, 0, 5], [0, 10, 38, 9, 1, 8, 0, 17, 3, 3, 0, 2, 8, 1, 2, 4, 1, 3, 5, 5, 1, 7, 3, 1, 4], [2, 2, 1, 7, 31, 5, 0, 6, 3, 11, 6, 9, 9, 7, 5, 0, 0, 2, 0, 1, 5, 6, 3, 8, 8, 3, 5], [3, 2, 5, 19, 48, 4, 8, 0, 21, 4, 32], [2, 1, 1, 3, 29, 3, 0, 4, 2, 15, 1, 9, 6, 4, 8, 2, 2, 2, 0, 1, 14, 5, 6, 5, 10, 6, 6], [2, 0, 1, 5, 5, 2, 0, 8, 1, 14, 3, 14, 4, 19, 11, 0, 5, 2, 0, 1, 9, 28, 3, 4, 9, 6], [4, 1, 1, 11, 39, 4, 2, 8, 3, 11, 1, 13, 8, 6, 1, 1, 2, 0, 1, 5, 8, 6, 8, 4, 2, 7], [4, 2, 3, 12, 45, 3, 0, 12, 5, 12, 3, 6, 2, 10, 1, 3, 2, 0, 0, 4, 4, 6, 4, 6, 6, 3], [6, 2, 6, 14, 49, 4, 1, 17, 1, 24, 3, 8, 2, 3, 0, 14, 5, 1, 4, 1, 1], [1, 15, 3, 16, 6, 14, 10, 5, 13, 2, 4, 3, 0, 1, 6, 12, 12, 11, 13, 11, 9], [6, 1, 4, 15, 42, 2, 11, 2, 15, 3, 11, 3, 4, 10, 0, 2, 2, 1, 3, 11, 4, 10, 2, 7, 5], [7, 1, 1, 13, 58, 5, 1, 4, 1, 12, 0, 2, 14, 17, 10, 0, 2, 3, 0, 0, 12, 9, 8, 3], [8, 1, 9, 19, 61, 6, 18, 2, 26, 6, 7, 9, 9, 17], [8, 2, 3, 8, 53, 4, 2, 10, 4, 12, 5, 7, 13, 11, 10, 1, 6, 5, 1, 2, 10, 10, 12, 8], [4, 2, 2, 6, 37, 1, 1, 8, 2, 7, 6, 13, 12, 1, 14, 0, 2, 1, 1, 2, 14, 16, 11, 8, 22, 14, 8], [7, 0, 2, 13, 15, 5, 0, 12, 2, 10, 3, 3, 18, 26, 20, 0, 8, 5, 1, 2, 8, 10, 14, 7, 14, 45, 4], [4, 4, 7, 15, 59, 4, 0, 13, 4, 21, 6, 9, 10, 10, 14, 1, 4, 5, 0, 16, 13, 10, 8, 5, 11, 11], [8, 2, 9, 19, 72, 6, 0, 16, 2, 21, 8, 6, 6, 9, 12, 0, 3, 3, 1, 1, 14, 16, 5, 8, 13, 4, 11], [8, 2, 3, 14, 60, 8, 1, 12, 2, 20, 7, 12, 6, 17, 15, 2, 4, 4, 1, 2, 4, 16, 10, 14, 16, 9, 10], [3, 3, 6, 23, 69, 4, 1, 14, 7, 18, 28, 7, 3, 3, 10, 0, 4, 6, 1, 3, 6, 17, 12, 9, 16, 9, 11], [7, 3, 10, 18, 56, 5, 1, 17, 6, 32, 6, 6, 11, 13, 12, 4, 3, 3, 2, 1, 16, 13, 14, 8, 16, 4, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

