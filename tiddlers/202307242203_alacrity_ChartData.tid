created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Tootsie Pop Rocks", "Name Is What", "Drevarr Moonwillow", "Tegan Parker", "Venomina The Sly", "Zaedy Zae", "Klengah", "Arriasa"];
const professions = ["Scourge", "Scrapper", "Scourge", "Scrapper", "Tempest", "Druid", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[103.8855, 17.7223, 48.0102, 16.359, 7.6424, 11.3904, 0.0, 29.4899, 17.8266, 10.8819, 17.9314, 56.9498, 4.2854, 13.8067, 10.0622, 11.1761, 5.0873, 30.537], [88.6118, 22.4224, 87.3655, 18.1829, 7.8057, 30.24, 0.0, 10.1921, 7.2234, 20.9268, 23.0042, 54.6918, 9.9101, 0.0, 0.0, 0.0, 20.8116, 71.253], [81.8235, 37.0401, 80.9968, 14.984, 40.4331, 28.56, 0.0, 25.1127, 21.1401, 10.3668, 11.4431, 42.6496, 28.8821, 8.6659, 5.711, 6.5076, 20.696, 38.025], [194.6793, 57.1771, 108.4312, 14.7315, 31.8762, 26.4768, 0.0, 9.7767, 25.514, 41.7247, 140.0304, 164.0755, 49.5504, 16.9891, 9.065, 2.5667, 10.5214, 57.33], [261.8352, 22.8536, 125.741, 13.6372, 36.6445, 63.4368, 39.712, 40.0653, 83.1688, 42.3042, 110.184, 242.0992, 49.9075, 0.0, 39.9766, 0.0, 84.2292, 241.137], [94.0878, 171.465, 136.2594, 76.1631, 115.584, 0.0, 0.0, 103.1161, 110.622, 85.1743, 554.9466, 125.5723, 75.0557, 53.0302, 30.1331, 165.9725, 202.41], [384.6311, 139.1051, 234.0089, 87.6033, 100.9521, 134.0976, 0.0, 111.7611, 58.0525, 121.0532, 217.4187, 849.7306, 76.6022, 69.6701, 60.4636, 70.5531, 153.7168, 402.948], [625.374, 224.0084, 490.3899, 78.5961, 117.3147, 220.416, 0.0, 105.7545, 175.0853, 212.809, 331.8496, 1201.9661, 146.5531, 79.6579, 270.409, 0.0, 79.0263, 229.905], [1163.712, 338.0608, 543.789, 231.4108, 122.377, 333.2784, 0.0, 224.3529, 152.1559, 359.4894, 393.6659, 1941.0586, 251.9482, 123.8198, 124.2812, 0.0, 311.9428, 595.764]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

