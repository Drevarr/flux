created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Keypek The Drunk", "Mort\u00e4rion", "Rina Of Theros", "Belvyn Brightblade", "Sub Train", "Venomina The Fierce", "Bella Sassy", "Tegan Parker", "Crusader Siolith", "Arcanophage Farra", "Zori Fizbow", "Leafzely", "Revenant Brandorf", "Anja Starkin", "Tootsie Pop Rocks", "High Sorcer Baradun", "Xeltrom", "Etchery Howls", "Drevarr Moonwillow", "Zaedy Zae", "Tribal S"];
const professions = ["Scrapper", "Scrapper", "Reaper", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Vindicator", "Scrapper", "Vindicator", "Druid", "Scrapper", "Tempest", "Druid", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.0069, 13.0013, 0.0, 0.0, 0.0, 1.0, 0.0, 4.02, 1.9907, 12.0367, 4.1463, 0.0, 0.0, 9.9535, 1.0, 0.0, 2.9355, 0.0, 13.25, 14.0242, 0.0], [24.0069, 6.0872, 7.0327, 19.06, 12.0833, 34.156, 20.7561, 28.3372, 2.614, 23.186], [36.0414, 19.0026, 0.0, 0.0, 0.0, 0.0, 14.0159, 3.99, 3.9815, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9744, 0.0, 0.0, 2.0, 0.0, 3.01], [51.1271, 18.0079, 0.0, 0.0, 0.0, 19.0714], [46.1961, 21.033, 0.0, 0.0, 0.0, 1.0, 18.0159, 0.99, 8.963, 0.0, 0.0, 8.0233, 0.0, 0.0, 25.3086, 0.0, 16.4839, 0.0, 0.0, 0.0, 0.0], [47.2867, 4.9118, 6.9739, 0.0, 22.0179, 13.0238, 17.99, 23.9259, 31.0275, 0.0, 28.1047, 20.8947, 0.0, 36.679, 14.9231, 34.871, 9.9375], [30.1409, 39.3448, 0.0, 1.9935, 0.0, 0.0, 11.0079, 1.99, 0.0, 5.0, 0.0, 13.0349, 0.0, 0.0, 20.2346, 0.0, 0.0, 6.9583, 0.0, 0.0, 3.99], [1.0, 3.9412, 42.9346, 42.125, 115.0635, 79.71, 89.3056, 83.2752, 27.2927, 73.6279, 67.3158, 53.7907, 124.2593, 46.8974, 37.3226, 72.3333, 49.7083, 78.3273, 51.12], [63.8633, 64.2893, 0.0, 3.9869, 4.9643, 3.0, 14.1429, 7.99, 12.9537, 22.0092, 1.0, 11.0233, 2.9649, 2.9767, 24.1358, 17.9744, 0.9677, 9.9375, 0.0, 0.0, 9.99], [72.1229, 84.4055, 0.0, 2.9869, 0.0, 4.0, 31.1111, 7.99, 12.0185, 27.0183, 0.0, 27.1512, 0.0, 15.186, 31.0741, 14.9231, 4.0, 0.9792, 3.0, 0.0, 0.99], [128.3025, 103.5403, 23.9281, 0.0, 14.1964], [199.6989, 47.2325, 4.9706, 40.8693, 0.0, 1.0, 50.1746, 38.28, 48.0, 35.0917, 21.0, 38.1744, 42.2105, 38.186, 39.1481, 3.9744, 0.0, 48.2708, 71.9167, 65.1333, 38.03], [165.6077, 153.9326, 4.9118, 7.9739, 11.0, 25.2222, 34.07, 22.9444, 22.211, 9.0732, 22.0581, 17.8772, 27.3953, 75.679, 3.9355, 39.9167, 7.0417, 35.3818, 13.98], [238.3854, 194.2985, 12.7941, 22.9281, 22.3214, 62.5635, 32.04], [188.0994, 238.5905, 6.8824, 11.1503, 0.0, 45.4286, 73.6587, 64.7, 0.0, 49.7798, 16.0, 4.0116], [189.6229, 203.8098, 0.9706, 39.9346, 1.9821, 15.1071, 9.0079, 80.38, 71.3056, 70.0642, 22.3902, 8.0233, 17.7193, 47.7209, 72.4074, 0.9744, 21.2903, 1.9792, 25.2917, 66.2848, 39.34], [292.3453, 291.3686, 4.9118, 51.9216, 4.1071, 43.3214, 50.9206], [327.1464, 353.6024, 18.7059], [318.6754, 342.9974, 22.5294, 77.2026, 10.9464, 58.7321, 147.5556, 105.33, 111.4074, 114.4495, 68.9024, 94.2558, 57.8596, 52.3953, 130.1975, 55.0256, 100.8387, 54.7292, 24.25, 119.1818, 59.17], [330.7472, 368.2893, 6.8824, 77.2941, 1.9821, 63.75, 81.381, 114.45, 133.0278, 93.0367, 40.1951, 120.2093, 71.7368, 118.0698, 148.1358, 59.359, 121.871, 89.5, 72.7917, 126.0303, 56.25], [335.9848, 377.8137, 29.9706, 59.9216, 7.0357, 90.0714, 163.9921, 97.95, 129.463, 115.2936, 54.9024, 82.4419, 78.1404, 88.0233, 218.0741, 104.7949, 117.0323, 91.6667, 81.0833, 122.2424, 42.28]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

