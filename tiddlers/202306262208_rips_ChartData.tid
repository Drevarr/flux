created: 20230626220846000
creator: Drevarr
modified: 20230705163539570
modifier: drevarr
tags: ChartData
title: 202306262208_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Caelon Cai", "Latedoctor", "Rozaalyna", "Arcanophage Farra", "Ateriuz", "Smol Gluvs", "Be\u00eb", "Blancooo Padreee", "Newtype Khan", "Rahani Sunray", "Grasszanine", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Reaper", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1401, 0.0545, 0.4545, 0.4516, 0.551, 0.2748, 0.6667, 0.4878, 0.0143, 0.4881], [0.0966, 0.0545, 0.1212, 0.5161, 0.4694, 0.7252, 0.7451, 0.8049, 0.6857, 0.25], [0.0, 0.3636, 0.0484, 0.551, 0.0, 0.0, 0.3415, 0.0286, 0.5238, 0.6977, 0.3093, 0.4211, 0.1615, 0.27, 0.3409, 0.2644, 0.0, 0.2317, 0.1748], [0.0798, 0.0, 0.5909, 0.2581, 0.0, 0.313, 0.6078, 0.7317, 0.2714, 0.1905, 0.7442, 0.1031, 0.0351, 0.4845, 0.21, 0.0682, 0.1494, 0.0, 0.2683], [0.1695, 0.0, 1.0606, 0.7742, 0.1224, 0.7481, 1.3529, 0.439, 0.0, 0.7143], [0.8714, 0.5238, 0.9651, 0.9691, 0.4773, 0.7816, 0.4756, 0.5175], [0.084, 0.0182, 0.2121, 0.3387, 0.7347, 0.3359, 0.4314, 0.7073, 0.2429, 0.8605, 0.5876, 0.2632, 0.5093, 0.31, 0.3106, 0.5057, 0.0, 0.4756, 0.2657], [0.1106, 0.0727, 0.6515, 1.1774, 0.7959, 0.0611, 0.5686, 0.7561, 0.5857, 0.4762, 0.5, 0.4433, 0.3509, 0.559, 0.31, 0.2576, 0.2069, 0.0, 0.7073, 0.2168], [0.1232, 0.0, 0.8636, 0.7258, 0.0, 0.084, 0.8627, 0.1951, 0.5429, 0.381, 0.4767, 0.6289, 0.3684, 0.5093, 0.15, 0.5985, 0.7356, 0.0, 0.4756, 0.3427], [0.1807, 0.5, 0.5161, 0.3061, 0.6107, 0.3333, 0.2439, 0.0857, 0.1667, 0.8953, 0.8351, 1.1053, 0.4099, 0.12, 0.9848, 0.6897, 0.0, 0.7317, 0.965], [0.0727, 1.1364, 0.6129, 0.6327, 0.8092, 1.1569, 1.3171, 0.6714, 0.5357, 1.1395, 1.3505, 0.9298, 1.1863, 0.45, 1.0227, 0.8736, 0.0278, 0.6463, 0.5594], [0.2619, 0.0364, 1.4848, 1.2258, 1.1429, 0.8702, 1.2549, 1.3171, 0.2429, 0.5833, 1.3023, 1.3608, 1.6842, 1.0, 0.43, 0.8182, 0.9655, 0.0833, 0.4634, 1.042], [0.3235, 0.0, 0.4242, 1.6774, 1.551, 0.9008, 1.0392, 1.2195, 1.8286, 0.8571, 1.4767, 0.5258, 0.7018, 1.4845, 0.46, 1.0758, 0.9885, 0.1111, 1.0488, 0.8112], [0.5014, 0.0909, 0.9545, 0.7258, 0.9184, 0.7405, 1.3137, 1.3415, 1.1714, 0.1905, 0.8837, 1.3814, 1.0877, 1.1677, 0.59, 1.0682, 1.2069, 0.0833, 1.2317, 1.1189], [0.5448, 0.0364, 1.5152, 1.5161, 0.6939, 1.229, 2.0196, 1.0732, 1.4143, 0.5595, 2.4651, 2.2577, 1.9123, 1.9068, 0.65, 1.3258, 1.0805, 0.0556, 1.439, 1.2168]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

