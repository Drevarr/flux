created: 20230626011754000
creator: Drevarr
modified: 20230705163538027
modifier: drevarr
tags: ChartData
title: 202306260117_resOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Black Raspberry Pie", "Rina Of Theros", "Elon The Archmagus", "Traidoruns Maximus", "Primal Clone", "Gabe Malhorn", "Kosair", "Johosh The Mighty", "Grasszanine", "Tegan Parker", "Etchery Of Ascalon", "Morv\u00e4rth", "Momomeko", "Tika Fiery", "Arriasa", "Lord Erin The Wise", "Bella Sassy", "Ryvalia Fazebringer", "Newtype Khan", "Oo Dads Mad", "Koralia Danai", "Blancooo Padreee", "Solus Sanctus", "Sakis Ranger", "Zhavashian", "Arcanophage Farra", "Sumatra Satyricon", "Warrior Constantine"];
const professions = ["Scrapper", "Chronomancer", "Scourge", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Willbender", "Berserker", "Spellbreaker", "Tempest", "Tempest", "Reaper", "Chronomancer", "Firebrand", "Druid", "Weaver", "Firebrand", "Chronomancer", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Druid", "Tempest", "Spellbreaker", "Soulbeast", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Time Spent Ressurecting per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 86.4, 147.84, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 74.48, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 673.98, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0], [0.0, 0.0, 0.0, 246.96, 0.0, 113.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 400.0, 0.0, 0.0], [0.0, 0.0, 526.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 740.88, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 234.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 75.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 336.99, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000.0, 0.0, 0.0], [0.0, 0.0, 0.0, 370.44, 172.8, 36.96, 0.0, 0.0, 0.0, 151.34, 0.0, 0.0, 0.0, 0.0, 336.99, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 172.8, 369.6], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1460.29, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 234.06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 240.1, 0.0, 0.0, 0.0, 0.0], [0.0, 864.36, 172.8, 0.0, 0.0, 0.0, 150.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 400.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1572.62, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 226.8, 375.75, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 92.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1852.2, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 73.92, 151.36, 0.0, 0.0, 75.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 216.09, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 950.4, 0.0, 0.0, 0.0, 312.08, 151.34, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 195.05, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 172.8, 739.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 617.4, 172.8, 0.0, 75.68, 0.0, 0.0, 676.35, 0.0, 0.0, 0.0, 0.0, 136.62, 0.0, 0.0, 336.99, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 200.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 75.67, 0.0, 0.0, 0.0, 0.0, 1123.3, 0.0, 0.0, 0.0, 156.04, 0.0, 0.0, 2000.0, 0.0, 0.0], [0.0, 0.0, 0.0, 246.96, 345.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 136.62, 0.0, 460.0, 449.32, 0.0, 0.0, 0.0, 39.01, 24.01, 0.0, 1400.0, 0.0, 0.0], [0.0, 0.0, 0.0, 3457.44, 172.8, 0.0, 0.0, 0.0, 0.0, 75.15], [0.0, 0.0, 0.0, 987.84, 1123.2, 0.0, 113.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 673.98, 0.0, 0.0, 0.0, 0.0, 0.0, 400.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2505.6, 0.0, 0.0, 0.0, 0.0, 225.45, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [72.9, 0.0, 0.0, 617.4, 1209.6, 0.0, 113.52, 0.0, 0.0, 601.2, 0.0, 156.04, 75.67, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 864.36, 2246.4, 0.0, 0.0, 0.0, 0.0, 75.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 400.0, 0.0, 0.0], [0.0, 0.0, 0.0, 740.88, 2332.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 336.99, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 370.44, 1814.4, 36.96, 151.36, 37.8, 0.0, 75.15, 0.0, 156.04, 0.0, 172.96, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 312.08, 72.03, 0.0, 400.0, 0.0, 0.0], [0.0, 0.0, 864.36, 0.0, 0.0, 189.2, 0.0, 0.0, 1427.85, 0.0, 0.0, 529.69, 0.0, 1639.44, 0.0, 138.0, 336.99, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 600.0, 0.0, 0.0], [0.0, 0.0, 1111.32, 2851.2, 0.0, 37.84, 0.0, 0.0, 0.0, 122.82, 0.0, 0.0, 0.0, 1092.96, 0.0, 0.0, 1797.28, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

