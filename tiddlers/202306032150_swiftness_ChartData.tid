created: 20230603215001000
creator: Drevarr
modified: 20230705163533651
modifier: drevarr
tags: ChartData
title: 202306032150_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Be\u00eb", "Mammary Mission", "Yngvar The Burdened", "Miphest\u00f6", "Smol Gluvs", "Grasszanine", "Sygaldry Verdandi", "Belvyn Brightblade", "Tegan Parker", "Artakama Nahid", "Pamtastic", "Blanco Padre Guard", "Newtype Khan", "Pocket Stabbs", "Drevarr Moonwillow", "Koralia Danai", "Tika Fiery", "Crusader Siolith", "Aronorf Xideliesi"];
const professions = ["Dragonhunter", "Scourge", "Scourge", "Scourge", "Tempest", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[99.8435, 144.592, 0.0, 12.0243, 0.0, 0.0, 0.0, 43.4591, 40.9807, 0.0, 0.0], [0.0, 10.2799, 24.7699, 0.0, 6.1171, 0.0, 30.4114, 10.3178, 17.9207, 0.0, 20.4034, 123.4709, 61.596, 27.0633, 5.9186, 24.8929], [0.0, 62.4139, 92.6173, 109.7586, 20.8608, 0.0, 6.7973, 0.0, 15.4734, 75.9158, 0.0], [0.0, 0.0, 0.0, 0.8938, 52.8039, 39.0497, 88.9738, 121.2096, 62.1363, 13.8684, 39.8596], [0.0, 90.9965, 94.4199, 81.6878, 23.0936, 156.1916], [0.0, 0.0, 89.5584, 0.0, 0.7603, 0.0, 0.0, 0.0, 24.5348, 0.0, 18.7503, 142.2775, 135.5584, 8.92, 0.0, 34.5946], [63.4205, 0.0, 0.0, 101.2087, 61.145, 0.0, 10.9937, 0.0, 17.3116, 10.6699, 147.0433, 34.2672, 49.0901, 2.0093, 0.0], [6.1033, 188.3591, 169.448, 93.0224, 75.217, 95.135], [232.2506, 271.4388, 8.0438, 0.0, 6.8083, 0.0, 0.0, 73.7103, 18.591, 13.7116, 5.4332], [60.3502, 243.6586, 35.6957, 70.5408, 22.8787, 79.4322, 0.0, 48.9802, 0.0, 23.409, 46.9981, 75.048, 0.0, 10.2866, 0.0], [36.4658, 247.6359, 86.8406, 0.0, 22.8096, 2.6862, 50.209, 0.0, 91.4804, 10.1914, 32.4836, 67.1611, 114.6016, 31.8873, 9.6533, 4.4366], [221.0148, 171.638, 96.143, 0.0, 25.5571, 0.0, 26.9675, 78.356, 198.4236, 29.5311, 0.0, 10.3462, 57.1163, 52.8168, 20.6312, 15.5282, 15.1632], [34.4736, 50.0403, 60.5837, 84.2368, 25.8396, 254.5422, 173.6653, 84.5514, 18.2671, 16.6695, 78.929, 169.7312, 35.3158, 3.8875, 5.4756], [170.9585, 309.7438, 89.3213, 45.8726, 69.9322, 70.293, 44.1267, 81.057, 182.2905, 56.1503, 0.0, 74.6031, 59.6608, 75.668, 0.0, 0.0], [160.2029, 58.7545, 167.8669, 239.7948, 184.0781, 28.0752, 22.0449, 149.4995, 362.0712, 83.4047, 2.4461, 42.471], [493.1624, 254.5504, 96.9638, 104.2765, 116.8128, 43.3455, 24.9736, 98.8296, 59.3036, 111.7791, 0.0, 11.6294, 54.5134, 145.0456, 31.2805, 6.9888, 15.7248], [519.6034, 504.5115, 70.8989, 150.3744, 36.3226, 113.1745, 113.65, 219.2942, 206.4678, 68.0366, 0.3208, 113.4627, 213.3912, 137.865, 18.2146, 0.0], [641.8512, 352.4544, 111.2822, 266.0275, 126.2822, 79.2917, 144.7865, 224.129, 263.671, 59.6923, 44.1846, 30.4722, 84.7579, 41.2528, 133.0106, 13.7155, 6.5707], [160.8665, 1000.0894, 91.4371, 124.8333, 134.5248, 126.1904, 211.47, 79.8686, 67.3031, 74.925, 59.2566, 95.4626, 223.02, 184.4975, 0.0, 36.7006], [298.8578, 748.8432, 162.9562, 117.5398, 82.0627, 0.0, 158.8845, 44.4585, 181.4414, 22.9469, 33.6108, 25.7672, 258.343, 296.0856, 114.5032, 80.5459, 74.3699]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

