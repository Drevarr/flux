created: 20230405220700000
creator: Drevarr
modified: 20230705163524451
modifier: drevarr
tags: ChartData
title: 202304052207_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Yuuka Chou", "Xyntharos", "Eibh\u00ebar", "Grasszanine", "Johosh The Great", "Smol Daddy Tika", "Newtype Khan", "Smol Gluvs", "Xanvias Tlesel", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Tempest", "Vindicator", "Chronomancer", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Scourge", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[799, 2720, 542, 678, 306, 251, 321, 373, 572, 973, 265, 331, 367, 293, 456, 925, 493], [264, 185, 391, 311, 1019, 1005, 858, 1012, 1208, 1270, 1100, 167, 441, 232, 321, 444, 393, 357, 358, 314, 337, 230, 432, 433, 400], [309, 537, 562, 396, 424, 1018, 698, 1716, 1167, 1195, 1621, 99, 515, 287, 787, 457, 505, 341, 378, 306, 299, 522, 377, 207, 373], [180, 205, 372, 473, 1802, 968, 1353, 1476, 573, 1719, 1594, 97, 466, 390, 257, 671, 3433, 275, 314, 294, 310, 304, 574, 574, 476], [188, 283, 460, 311, 846, 775, 1182, 688, 371, 3142, 673, 136, 397, 398, 473, 294, 679, 398, 350, 333, 422, 212, 308, 778, 568], [231, 212, 283, 572, 610, 1257, 238, 544, 446, 2858, 1765, 468, 1056, 328, 423, 575, 298, 261, 306, 323, 191, 337, 387, 653, 432], [254, 230, 451, 275, 571, 555, 497, 671, 450, 394, 386, 360, 246, 253, 306, 391, 1123, 363, 295, 315, 242, 291, 364, 140, 443], [1306, 550, 331, 409, 808, 749, 385, 516, 1592, 574, 309, 388, 203, 412, 337, 612, 257, 283, 287, 256, 284, 324, 785, 275], [346, 225, 477, 282, 753, 362, 319, 1048, 442, 827, 786, 145, 298, 217, 335, 264, 678, 337, 286, 261, 258, 256, 271, 402, 349], [173, 211, 284, 186, 1608, 988, 262, 1048, 322, 1403, 870, 105, 176, 315, 267, 590, 256, 314, 235, 236, 208, 272, 661, 175, 360], [221, 201, 217, 182, 461, 223, 448, 326, 323, 352, 335, 245, 210, 318, 302, 251, 231, 247, 209, 153, 206, 254, 998, 282]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

