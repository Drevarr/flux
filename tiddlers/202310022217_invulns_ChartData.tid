created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Gollum Mah Precious", "Bryxzi", "Liyo Morgaine", "Gabe Malhorn", "Grayson Kin", "Xanvias Tseli", "Lhew Silverhead", "Cedryn X", "Revenant Brandorf", "Elonith Requiem", "\u00c7onstant\u00edne", "Nickhia", "Sub Train", "Tegan Parker", "Halfpint The Drunk", "Jimbo The Pleb", "Tribal S", "High Sorcer Baradun", "Divine Mimine", "Solus Luxes", "Rozaalyna", "Rina Of Theros", "Morton Saltbringer", "Drell The Silent", "Kosair", "Newtype Khan", "Adjudicatrix Farra", "Cat Wigglebooty", "Be\u00eb", "Grasszanine", "Venomina The Sly", "Glorious Gluvs", "Drevarr Moonwillow", "Lord Erin The Wise", "Heres A Quarter", "Zaedy Zae", "Klenga", "Ryvalia Fazebringer", "Crusader Siolith", "Jmbrage Rev", "Black Raspberry Pie", "Astraeus Windrunner", "Mistwalker Cael", "Lucky Leipreach\u00e1n", "Eibh\u00ebar", "Mike The Archmagus", "Daphne Agla\u00e9", "Swithblight", "Tootsie Pop Rocks", "Bella Bitty"];
const professions = ["Harbinger", "Herald", "Herald", "Firebrand", "Berserker", "Berserker", "Scrapper", "Berserker", "Vindicator", "Reaper", "Reaper", "Scourge", "Firebrand", "Tempest", "Berserker", "Berserker", "Druid", "Tempest", "Renegade", "Firebrand", "Reaper", "Reaper", "Chronomancer", "Druid", "Firebrand", "Spellbreaker", "Reaper", "Scrapper", "Reaper", "Spellbreaker", "Druid", "Berserker", "Scrapper", "Weaver", "Herald", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Chronomancer", "Berserker", "Herald", "Scrapper", "Chronomancer", "Weaver", "Reaper", "Scourge", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 13, 0, 53], [0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 29, 0, 8, 7, 0, 15], [0, 13, 0, 8, 23, 28, 0, 0, 0], [0, 11, 4, 0, 14, 0, 0, 10, 26, 10, 0, 0, 0, 0], [0, 14, 21, 17, 4, 14, 15, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 8, 11, 16, 13, 27], [0, 0, 96, 0, 0, 0], [2, 18, 45, 20, 13, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 41, 0, 0, 32, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 19, 6, 10, 2, 16, 22, 3, 22, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 20, 2, 28, 36, 9, 3, 5, 2, 0, 0, 0, 0], [11, 1, 11, 70, 18, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 15, 31, 0, 34, 1, 25, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 37, 0, 40, 17, 21, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 21, 17, 0, 9, 13, 17, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 11, 8, 12, 26, 18, 13, 14], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 37, 26, 12, 2, 21, 0, 0, 0, 0], [0, 0, 0, 0, 30, 0, 0, 0, 0, 15, 36, 29, 26], [0, 0, 0, 0, 11, 0, 0, 0, 0, 12, 9, 17, 12, 1, 28, 43, 0, 9, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 30, 20, 46, 35, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 34, 35, 35, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 8, 17, 26, 20, 28, 16, 0, 0, 0, 7], [0, 0, 0, 0, 1, 0, 0, 3, 0, 8, 30, 5, 22, 27, 22, 20, 8, 17, 0, 0, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 29, 4, 11, 18, 63, 20, 0, 0, 0, 0], [0, 0, 0, 0, 37, 0, 10, 64, 15, 25, 16, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 28, 20, 35, 24, 2, 5, 25, 29, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 40, 0, 11, 28, 22, 20, 14, 35, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 24, 9, 0, 40, 46, 28, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 42, 8, 50, 3, 35, 12, 16, 7, 0, 0, 0, 0], [0, 0, 18, 0, 14, 21, 24, 14, 41, 45, 0, 0, 0, 0], [0, 25, 0, 29, 20, 32, 18, 44, 11, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 28, 24, 49, 31, 23, 11, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 29, 28, 31, 35, 37, 18, 0, 0, 0, 0], [0, 0, 0, 36, 0, 0, 0, 0, 21, 46, 0, 22, 20, 17, 9, 7, 6, 0, 0, 1, 0], [0, 35, 0, 17, 49, 59, 2, 23], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 32, 8, 69, 32, 19, 18, 0, 0, 0, 0], [0, 0, 0, 0, 31, 0, 18, 6, 19, 45, 47, 30, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 20, 28, 26, 34, 25, 48, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 10, 26, 23, 22, 31, 32, 23, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 20, 17, 31, 37, 38, 41, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 14, 9, 11, 28, 31, 28, 26, 55, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 40, 0, 9, 13, 31, 31, 0, 63, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 5, 0, 3, 0, 0, 5, 35, 5, 22, 30, 0, 45, 31, 30, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 39, 35, 92, 18, 31, 18, 0, 0, 0, 0], [1, 0, 2, 0, 15, 1, 1, 5, 2, 9, 22, 7, 21, 15, 19, 18, 41, 48, 3, 0, 4, 4], [0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 3, 33, 0, 44, 29, 24, 41, 21, 28, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 34, 33, 11, 22, 80], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 32, 0, 21, 11, 101, 16, 41, 33, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 15, 14, 28, 71, 16, 29, 114, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 49, 77, 25, 34, 10, 41, 0, 0, 0, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

