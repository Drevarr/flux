created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Chocolate Teapot", "Kosair", "Crabbedmermaid", "Meryndah", "Gumaass", "Crabbedmermaid", "Sapir Yong", "Gestern Yesteryear", "Darks Na"];
const professions = ["Chronomancer", "Firebrand", "Dragonhunter", "Druid", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 7.6334, 0.0, 0.0, 0.0, 0.0, 5.628, 0.0, 5.2804, 0.0, 0.0, 10.3178, 0.0, 3.1508, 5.6012, 10.4458, 0.0, 0.0, 0.0, 58.2912, 0.1306, 6.7518], [0.0, 19.2272, 10.2289, 3.2368, 0.0, 2.6449, 112.5408, 12.7568], [0.0, 0.0, 0.5032, 3.1467, 0.9101, 157.0464, 0.0], [7.4646, 5.3694, 39.7768, 0.0, 4.873, 3.3026, 26.4794, 3.3073, 22.4884, 60.2589, 0.0, 0.0, 0.0, 64.8324], [0.0, 161.7912, 0.0, 0.0, 0.0, 0.0, 0.0, 64.9641, 95.592, 12.3088, 71.2922, 65.4898], [0.0, 0.0, 16.0075, 0.0, 0.0, 0.0, 0.6494, 32.3883, 37.4528, 33.8956, 0.0, 0.0, 0.0, 163.3644, 11.5872, 13.6422, 0.0, 35.5817, 19.5216, 30.0384, 0.1568, 24.5471, 147.7286], [0.0, 99.8722, 1.0917, 0.0, 0.0, 85.1808, 68.8224, 33.9083, 16.428, 3.6009, 15.2439, 0.0, 59.4238, 49.1794, 61.9476, 103.3923, 0.0], [18.937, 50.5271, 16.8864, 5.082, 1.1474, 20.164, 103.512, 104.3592, 18.9834, 13.1542, 35.2529, 9.7398, 3.0107, 35.1945, 9.6826, 59.8646, 37.7454, 84.135, 0.0, 19.8387, 45.9995, 199.7136, 27.8909, 14.3946, 0.0, 26.3736, 0.0, 86.154, 5.8016, 24.7968, 31.5549, 117.5942], [86.1706, 43.5701, 199.8192, 210.0584, 30.7719, 49.1774, 65.7398, 0.0, 8.0028, 22.3047, 0.0, 42.3495, 66.3366, 148.3022, 0.0, 8.2623, 0.0, 161.2944, 76.6224, 24.6312]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

