created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Funky Loot", "Be\u00eb", "Morton Saltbringer", "Black Raspberry Pie", "Il Dim Il", "Jimbo Mann", "Frosmor", "Sygaldry Verdandi", "Raziel Umbra", "F\u00f9gly", "Primal Clone", "Tirluka", "Newtype Khan", "Grasszanine", "Eibh\u00ebar", "Cat Wigglebooty", "Tootsie Pop Rocks", "Gestalia Yesteryear", "My Birthday Girl", "Klengah", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Scourge", "Virtuoso", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scrapper", "Scrapper", "Druid", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0896, 0.0, 0.0204, 0.0177, 0.0, 0.05, 0.0087, 0.2165, 0.0392, 0.1957, 0.1813, 0.0, 0.0, 0.0672, 0.0, 0.0, 0.0, 0.0938, 0.0, 0.0, 0.0, 0.0213, 0.0051, 0.0, 0.0, 0.0958, 0.0, 0.036, 0.2031, 0.01, 0.034, 0.2083], [0.0435, 0.2472, 0.0758, 0.1641, 0.0, 0.0804, 0.0, 0.0, 0.1489, 0.0609, 0.0, 0.0, 0.0, 0.4072, 0.2075, 0.0631, 0.1172, 0.0, 0.1617, 0.0, 0.4271], [0.1194, 0.0847, 0.0, 0.0177, 0.0, 0.1083, 0.0348, 0.2732, 0.1176, 0.1217, 0.0659, 0.1273, 0.0, 0.0979, 0.0, 0.0435, 0.0449, 0.0303, 0.1328, 0.1143, 0.0179, 0.0, 0.0, 0.117, 0.0051, 0.0, 0.0, 0.0, 0.1557, 0.0, 0.009, 0.125, 0.1, 0.0979, 0.0, 0.2812], [0.0746, 0.4576, 0.0, 0.0088, 0.0, 0.1167, 0.0, 0.1804, 0.0196, 0.5455, 0.0, 0.0825, 0.0, 0.1562, 0.0, 0.0446, 0.0, 0.0, 0.0213, 0.0609, 0.0, 0.0, 0.0, 0.3353, 0.0, 0.018, 0.0, 0.22, 0.2128, 0.3229], [0.2239, 0.1356, 0.0, 0.0177, 0.0, 0.375, 0.2348, 0.067, 0.0392, 0.0913, 0.0, 0.4, 0.0, 0.0537, 0.0, 0.3261, 0.0449, 0.0303, 0.1406, 0.2857, 0.125, 0.0, 0.0, 0.0957, 0.0609, 0.0, 0.0, 0.0, 0.1257, 0.0566, 0.3153, 0.0625, 0.3, 0.0766, 0.0, 0.0417], [0.1493, 0.0339, 0.0, 0.1062, 0.0084, 0.1833, 0.1043, 0.3299, 0.4314, 0.1478, 0.1154, 0.0364, 0.0, 0.0729, 0.0, 0.0, 0.0, 0.0455, 0.0703, 0.1143, 0.0446, 0.0, 0.0, 0.0426, 0.0609, 0.0, 0.0, 0.0, 0.0778, 0.0189, 0.1712, 0.1797, 0.17, 0.0596, 0.0, 0.3646], [0.1017, 0.2449, 0.2478, 0.0504, 0.0167, 0.087, 0.3196, 0.2157, 0.1522, 0.1593, 0.0, 0.0, 0.1017, 0.0, 0.1304, 0.0, 0.0, 0.0781, 0.3857, 0.0625, 0.0, 0.0, 0.1383, 0.0254, 0.0, 0.0, 0.0, 0.0778, 0.0, 0.009, 0.25, 0.08, 0.0851, 0.0, 0.1979], [0.2449, 0.5575, 0.2689, 0.175, 0.0435, 0.1373, 0.3217, 0.2088, 0.5455, 0.2083, 0.2457], [0.0, 0.1356, 0.0, 0.177, 0.1261, 0.0667, 0.2087, 0.2165, 0.1176, 0.1174, 0.1044, 0.1636, 0.0208, 0.1478, 0.0, 0.0, 0.0, 0.1406, 0.3, 0.0446, 0.0, 0.0, 0.0532, 0.132, 0.0, 0.0, 0.1557, 0.0, 0.1351, 0.2266, 0.12, 0.0596, 0.1979], [0.1642, 0.5932, 0.0, 0.0442, 0.0, 0.4083, 0.2, 0.7216, 0.2157, 0.3957, 0.0824, 0.3091, 0.0208, 0.0845, 0.913, 0.0449, 0.0, 0.0469, 0.3143, 0.1696, 0.0, 0.0, 0.2553, 0.0355, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0541, 0.1328, 0.25, 0.1319, 0.0, 0.0417], [0.98, 1.566, 2.5833], [0.1493, 0.0339, 0.0, 0.1681, 0.0, 0.275, 0.1739, 0.4278, 0.0588, 0.1957, 0.1538, 0.4182, 0.0, 0.2668, 0.0, 0.0217, 0.191, 0.4697, 0.1875, 0.0143, 0.125, 0.0, 0.0, 0.266, 0.1574, 0.0345, 0.0, 0.0, 0.4611, 0.0189, 0.2523, 0.2891, 0.39, 0.183, 0.0, 0.0417], [0.0, 0.3304, 0.0, 0.15, 0.8617, 0.6497, 0.0, 1.3473, 0.4528, 0.6126, 0.6641, 0.31, 0.5277, 0.9792], [0.1791, 0.2034, 0.0, 0.1593, 0.0756, 0.2833, 0.1913, 0.7732, 0.4902, 0.3696, 0.3022, 0.0, 0.0833, 0.2438, 0.0, 0.3696, 0.0674, 0.0, 0.0938, 0.3857, 0.0804, 0.0, 0.0, 0.234, 0.1523, 0.0345, 0.0, 0.0, 0.3593, 0.0, 0.2523, 0.6641, 0.18, 0.1787, 0.3646], [0.0, 0.1186, 0.1633, 0.0708, 0.1092, 0.0667, 0.1913, 0.8608, 0.3922, 0.4217, 0.3462, 0.0545, 0.0, 0.286, 0.0, 0.3043, 0.0, 0.1515, 0.125, 0.3429, 0.0, 0.0, 0.1596, 0.0914, 0.0, 0.0, 0.0, 0.4012, 0.0, 0.2703, 0.6875, 0.24, 0.1915, 0.4479], [0.1045, 0.3729, 0.0, 0.0354, 0.0, 0.3, 0.287, 0.4381, 0.8627, 0.2, 0.3352, 1.1091, 0.0, 0.1939, 0.0, 0.6087, 0.0674, 0.3333, 0.2891, 0.2429, 0.2232, 0.0, 0.0, 0.3511, 0.0761, 0.0, 0.0, 0.1552, 0.4431, 0.0, 0.4775, 0.5391, 0.36, 0.2383, 0.0, 0.3542], [0.4627, 0.1356, 0.4082, 1.0, 0.3697, 0.4667, 0.9826, 1.0, 0.4706, 0.3652, 0.6044, 0.3091, 0.0, 0.4837, 0.7174, 0.1685, 0.4242, 0.1328, 0.4857, 0.0714, 0.0, 0.0, 1.0745, 0.335, 0.0, 0.0, 0.5808, 0.0, 0.5766, 1.0], [0.5821, 0.3559, 0.0, 0.6903, 0.1092, 0.325, 0.4783, 1.3144, 0.8627, 0.1043, 0.4066, 0.8182, 0.0, 0.428, 0.3913, 0.1573, 0.0, 0.4141, 0.7143, 0.1964, 0.0, 0.3191, 0.2437, 0.0, 0.0, 0.7904, 0.2642, 0.5315, 0.8984, 0.44, 0.2553, 1.4479], [0.4182, 0.2708, 0.8925, 1.2391, 0.0562, 0.5758, 0.5469, 0.8286, 0.2232, 0.05, 0.2872, 0.5228, 0.0, 0.0, 0.0, 1.4072, 0.0377, 0.8468, 1.5312, 0.52, 0.8809, 0.0, 1.2396], [0.403, 0.6102, 0.3061, 0.9646, 0.2689, 0.425, 0.6087, 1.6082, 0.8431, 0.7739, 0.7143, 0.6, 0.0, 0.7198, 0.2584, 0.803, 0.4062, 0.6571, 0.0, 0.0, 0.225, 0.7234, 0.4315, 0.8984, 0.46, 0.4681, 0.0, 1.3229], [0.5672, 0.2203, 0.1429, 0.823, 0.5546, 0.7167, 0.9565, 0.5464, 0.2941, 1.0913, 0.5495, 0.1091, 0.4375, 0.9347, 0.0938, 0.6739, 0.1348, 0.0, 0.5547, 1.5857, 0.1071, 0.0, 0.0, 0.5851, 0.6701, 0.0, 1.6108, 0.0943, 1.1532, 1.1094, 0.21, 0.7362, 0.0, 0.7396], [0.9661, 1.0816, 1.0885, 0.8824, 1.0583, 1.5478, 2.8866, 0.7843, 0.6304, 0.7033, 1.2, 0.375, 1.6526, 0.0, 1.8913, 0.6742, 0.9242, 0.6016, 0.9714, 0.2679, 0.15, 1.5, 0.9645, 1.7425, 0.7925, 0.955, 2.3672, 0.79, 0.5319, 1.5521], [0.8657, 0.8305, 1.3265, 1.9292, 0.8403, 0.7917, 1.487, 2.8711, 1.2157, 1.5783, 1.2527, 0.8182, 0.7292, 1.7236, 0.3125, 1.2609, 0.6517, 1.0303, 1.1172, 0.8429, 0.6875, 0.1039, 0.3, 1.4362, 0.7919, 0.0345, 0.0, 0.4828, 2.1617, 0.566, 1.036, 2.4688, 0.91, 1.166, 0.0, 1.9479]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

