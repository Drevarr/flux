created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Raghnaid", "Drac Tepes", "Masa Yuki Asahina", "Konztantin\u00eb", "Meryndah", "Govinda Ektar", "Xx Zen Xx", "Blackjuniper", "Kisumaiassu", "Don Saki Purrito", "Aezlenne", "Drevarr Moonwillow", "Ttv Rodrigoapss", "Palm Sauce", "Nyriss Hrafn", "Kisumaiasu", "I Mad X King I", "Brace Stonebrow", "Surethang Blind", "Xuerreux", "Forever Dreaming", "Unbreakable Nemesis", "Microsakis", "Revitiel", "Vee U", "Alarics Bane", "Rockdevil", "Dimiskus", "Liza Hexx", "Forever Dreaming", "Illusions Of Kaos", "Hawaiian Supreme", "Roderik Manloy", "Aloe Pen", "Xanvias Tsolea", "Avatar Shazbott", "Gestern Yesteryear", "Mom Tapper", "Jerryatric Reflexes", "Dragon Deezz", "Crabbedmermaid"];
const professions = ["Firebrand", "Scourge", "Reaper", "Herald", "Druid", "Vindicator", "Druid", "Druid", "Firebrand", "Holosmith", "Virtuoso", "Scrapper", "Spellbreaker", "Vindicator", "Berserker", "Reaper", "Holosmith", "Firebrand", "Vindicator", "Berserker", "Scourge", "Firebrand", "Spellbreaker", "Vindicator", "Tempest", "Reaper", "Weaver", "Mesmer", "Scourge", "Harbinger", "Chronomancer", "Berserker", "Renegade", "Vindicator", "Dragonhunter", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 9, 0, 0, 0, 0, 0, 0, 21, 19], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 3], [0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 10, 0, 0, 0, 21, 0, 15], [0, 27, 38, 0, 3, 0], [16, 0, 0, 0, 16, 14, 0, 0, 0, 0, 22, 0, 0, 0, 0], [0, 6, 0, 0, 0, 0, 44, 18], [0, 0, 0, 47, 6, 0, 17], [0, 0, 0, 19, 4, 0, 0, 0, 0, 19, 31], [0, 0, 15, 0, 33, 30], [0, 0, 11, 0, 54, 14, 0], [8, 5, 24, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 9, 11], [0, 0, 0, 0, 0, 6, 7, 0, 0, 0, 0, 0, 11, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 33, 0, 0, 9, 0], [0, 0, 0, 0, 0, 0, 7, 0, 4, 0, 44, 0, 14, 2, 0, 0, 0, 26], [0, 0, 0, 0, 0, 28, 9, 9, 3, 0, 0, 6, 17, 0, 0, 10, 17, 0, 0], [0, 0, 7, 0, 0, 0, 14, 0, 8, 0, 0, 26, 0, 41, 3, 0, 0], [15, 0, 0, 48, 18, 9, 17, 0, 0, 0, 9], [8, 0, 7, 19, 23, 0, 0, 0, 34, 11, 0, 14], [0, 0, 0, 0, 30, 7, 0, 0, 0, 0, 40, 0, 0, 11, 0, 6, 0, 28], [0, 0, 0, 8, 22, 9, 0, 0, 19, 2, 12, 0, 0, 0, 7, 0, 0, 0, 2, 12, 0, 22, 0, 13], [38, 5, 0, 0, 0, 0, 19, 0, 32, 7, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0], [0, 0, 0, 47, 6, 9, 0, 0, 0, 0, 67, 0, 0, 9], [0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 46, 13, 5, 0, 0, 0, 18, 0, 0, 0, 0, 41, 0, 0, 18], [50, 0, 25, 39, 0, 3, 48], [19, 33, 11, 9, 0, 0, 0, 0, 2, 0, 38, 24, 0, 1, 0, 24, 12], [0, 0, 0, 0, 23, 12, 0, 0, 0, 35, 30, 0, 7, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0], [22, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 34, 11, 0, 1, 0, 0, 23, 0, 0, 0, 0, 0, 0, 23, 43], [2, 0, 0, 0, 24, 0, 0, 15, 0, 0, 0, 0, 0, 63, 0, 0, 0, 8, 0, 0, 2, 0, 11, 0, 9, 0, 32, 13, 0, 7, 0, 0], [10, 24, 5, 9, 10, 0, 13, 8, 13, 0, 0, 3, 0, 27, 11, 0, 3, 0, 0, 0, 6, 0, 0, 18, 0, 0, 0, 30, 0], [0, 5, 14, 12, 9, 0, 0, 0, 20, 0, 0, 0, 0, 28, 0, 27, 0, 16, 5, 0, 0, 0, 0, 18, 3, 0, 24, 0, 0, 0, 0, 14, 8], [13, 0, 0, 0, 29, 28, 0, 32, 0, 11, 24, 0, 14, 0, 0, 11, 0, 0, 0, 0, 0, 18, 24], [21, 11, 43, 23, 0, 0, 41, 2, 0, 8, 16, 20, 0, 8, 0, 31, 10], [12, 7, 0, 0, 19, 12, 12, 9, 0, 0, 0, 9, 19, 20, 0, 25, 0, 16, 0, 19, 2, 0, 17, 0, 0, 13, 0, 14, 0, 0, 0, 0, 0, 0, 14], [0, 0, 0, 0, 28, 0, 38, 0, 0, 0, 23, 0, 15, 30, 0, 0, 9, 0, 0, 37, 8, 20, 0, 0, 0, 20, 17, 0, 13, 0, 0, 11], [35, 15, 0, 12, 0, 11, 23, 0, 29, 19, 3, 0, 0, 0, 13, 8, 0, 20, 0, 0, 4, 0, 18, 19, 0, 0, 0, 0, 31, 10], [0, 0, 0, 5, 32, 24, 18, 0, 0, 0, 24, 0, 0, 0, 10, 32, 0, 0, 0, 30, 6, 0, 59, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 22], [98, 0, 32, 0, 18, 44, 0, 27, 0, 1, 49, 0, 0, 27, 0, 11, 17], [0, 0, 0, 0, 0, 22, 11, 21, 0, 0, 0, 9, 35, 50, 23, 29, 0, 0, 10, 0, 0, 0, 0, 0, 0, 12, 0, 14, 0, 0, 21, 0, 0, 34, 0, 0, 0, 0, 0, 0, 8, 28], [13, 0, 38, 16, 31, 0, 49, 0, 44, 60, 0, 1, 0, 0, 19, 0, 13, 16, 0, 0, 9, 9, 27, 29], [17, 0, 12, 10, 149, 0, 78, 0, 48, 12, 0, 28, 0, 0, 49, 21, 15], [0, 0, 0, 0, 0, 16, 37, 20, 31, 0, 0, 87, 14, 17, 0, 0, 0, 19, 0, 0, 33, 0, 44, 0, 38, 0, 4, 9, 0, 17, 0, 0, 73], [0, 0, 0, 0, 0, 26, 17, 68, 50, 0, 0, 92, 38, 17, 7, 0, 0, 0, 28, 11, 0, 36, 24, 93, 0, 41, 0, 16, 9, 0, 71, 0, 0, 28, 0, 4, 0, 0, 0, 75, 48]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

