created: 20230513000456000
creator: Drevarr
modified: 20230705163529710
modifier: drevarr
tags: ChartData
title: 202305130004_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Im Alt Tabbed", "Cedryn X", "Bella Sassy", "Arriasa", "Nomii Tsunami", "Hauzzy", "Rina Of Theros", "Nazhul Naxxremis", "Leetle Dim", "Jupiter Four", "Tika Fiery", "Khailerian", "Xanvias Einzbern", "Sub Train", "Black Raspberry Pie", "Lookin Boi", "Drevarr Moonwillow", "No Reserv\u00e9", "Panther B Me", "Sumatra Satyricon", "Cerys Fireblade", "Jeckyll Mbs", "Husky Guard", "Lord Erin The Wise", "Miphest\u00f6", "Venomina The Techie", "Mac Aaroni", "Koralia Danai", "Blancooo Padreee", "Domitia Gravestorm", "Lucas Ryn", "Ark Darkness", "Be\u00eb", "Ryvalia Fazebringer", "Bubblesparklepuff", "Air One Com", "Cyclotechnist Farra", "Kmpek", "Tegan Parker", "Demon Dalham", "Smol Gluvs", "Aronorf Xideliesi", "Mike The Archmagus", "Newtype Khan", "Eibh\u00ebar", "Johosh The Great", "Solus Sanctus", "Mistwalker Caelon", "Zaidy Sagemist"];
const professions = ["Tempest", "Berserker", "Berserker", "Firebrand", "Druid", "Reaper", "Berserker", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Chronomancer", "Tempest", "Scrapper", "Vindicator", "Scourge", "Soulbeast", "Berserker", "Berserker", "Dragonhunter", "Weaver", "Tempest", "Scrapper", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Scourge", "Chronomancer", "Vindicator", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Dragonhunter", "Scourge", "Firebrand", "Weaver", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 4, 18, 3, 1, 0, 0, 6], [15, 1, 1, 0, 11, 1, 3, 0, 0, 0], [0, 3, 9, 10, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0], [0, 1, 4, 11, 0, 1, 0, 0, 3, 0, 0, 0, 3, 2, 0, 2, 0, 0, 1, 0, 3, 0, 2, 0, 1, 0, 0, 0], [1, 7, 2, 1, 10, 2, 2, 6, 2, 0, 4, 0, 0, 3, 1, 3, 0, 0], [1, 0, 3, 8, 8, 2, 4, 0, 1, 0, 7, 1, 8, 1, 1, 0], [1, 2, 11, 15, 3, 3, 0, 0, 3, 0, 0, 7, 0, 0, 3], [2, 2, 5, 10, 1, 0, 0, 0, 9, 0, 0, 1, 3, 1, 0, 1, 2, 0, 4, 0, 1, 0, 4, 0, 3, 0, 0, 0], [4, 5, 22, 14, 2, 3, 0], [1, 1, 9, 13, 3, 1, 0, 0, 7, 0, 0, 3, 0, 0, 3, 4, 1, 3, 0, 0, 0, 3, 0, 4, 0, 0, 0], [2, 0, 4, 15, 2, 1, 0, 0, 6, 0, 5, 0, 4, 3, 0, 7, 0, 0, 4, 0, 4, 0, 0, 0], [2, 1, 6, 18, 3, 1, 0, 0, 5, 0, 0, 0, 5, 2, 0, 4, 4, 0, 5, 0, 0, 0, 2, 0, 1, 0, 0, 0], [1, 2, 10, 4, 0, 2, 0, 4, 0, 0, 9, 1, 0, 6, 3, 0, 4, 3, 2, 0, 6, 0, 2], [1, 0, 6, 20, 3, 0, 0, 0, 8, 1, 4, 0, 0, 3, 2, 0, 6, 0, 0, 0, 3, 0, 3, 0, 0, 0], [2, 4, 16, 33, 2, 1, 0, 0, 4], [2, 1, 5, 11, 1, 1, 0, 0, 7, 1, 0, 7, 2, 0, 5, 3, 0, 6, 0, 0, 6, 0, 7, 0, 0], [17, 3, 11, 3, 3, 1, 11, 15, 0, 1], [2, 3, 19, 14, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 3, 3, 1, 6, 0, 0, 1, 2, 0, 5, 0, 0, 0], [2, 7, 10, 14, 4, 2, 1, 0, 3, 0, 0, 5, 2, 0, 3, 4, 1, 3, 0, 1, 0, 7, 0, 4, 0, 0, 0], [0, 6, 8, 12, 0, 2, 0, 1, 4, 0, 0, 6, 0, 0, 7, 4, 0, 10, 0, 1, 0, 7, 0, 6, 0, 0, 0], [1, 3, 13, 19, 3, 3, 0, 0, 2, 2, 0, 0, 7, 1, 5, 3, 0, 5, 0, 0, 1, 3, 1, 3, 0, 0], [0, 3, 12, 26, 1, 1, 0, 0, 4, 0, 0, 7, 3, 0, 8, 0, 0, 0, 5, 0, 8, 0, 0, 0], [1, 10, 12, 33, 2, 0, 0, 5, 0, 0, 2, 1, 4, 0, 4, 1, 0, 0, 6, 0, 6, 2, 0, 0], [5, 5, 6, 20, 2, 2, 0, 0, 3, 0, 6, 0, 0, 7, 3, 2, 10, 0, 0, 0, 4, 0, 10, 0, 1, 3], [1, 5, 18, 24, 0, 2, 0, 1, 2, 0, 0, 2, 7, 2, 1, 7, 6, 1, 3, 0, 3, 5], [0, 3, 16, 38, 2, 1, 0, 0, 2, 0, 0, 4, 0, 4, 2, 0, 6, 1, 2, 0, 2, 0, 3, 2, 2, 0], [2, 1, 14, 21, 5, 3, 0, 0, 10, 0, 7, 0, 1, 4, 3, 0, 9, 0, 3, 0, 4, 0, 4, 0, 0], [0, 7, 14, 20, 3, 4, 0, 0, 6, 0, 0, 0, 5, 0, 0, 5, 4, 0, 8, 0, 0, 0, 9, 1, 3, 2, 1], [0, 2, 15, 19, 3, 1, 0, 0, 12, 1, 8, 2, 0, 5, 4, 1, 10, 0, 0, 1, 3, 5, 0, 0], [2, 4, 10, 19, 2, 3, 0, 1, 7, 0, 1, 8, 2, 4, 7, 1, 10, 2, 0, 4, 8, 2, 1, 1], [3, 3, 11, 23, 2, 4, 0, 0, 4, 0, 0, 9, 1, 1, 9, 5, 0, 8, 0, 1, 0, 7, 0, 8, 0, 0, 1], [2, 5, 7, 30, 3, 7, 0, 0, 7, 0, 0, 9, 2, 4, 3, 0, 8, 1, 2, 1, 1, 0, 8, 0, 0], [2, 7, 15, 34, 3, 3, 0, 0, 6, 1, 0, 10, 0, 1, 7, 6, 1, 4], [0, 2, 17, 25, 2, 4, 0, 0, 11, 0, 0, 12, 1, 0, 8, 5, 0, 10, 0, 0, 0, 4, 0, 8, 0, 0], [5, 3, 6, 11, 5, 2, 0, 0, 11, 1, 0, 11, 0, 4, 11, 9, 3, 9, 1, 2, 2, 8, 0, 10, 2, 2, 1], [4, 4, 8, 43, 3, 6, 2, 1, 1, 3, 1, 1, 11, 1, 1, 6, 9, 0, 9, 0, 1, 8, 0, 8, 0, 0, 1], [2, 10, 9, 40, 2, 6, 0, 1, 4, 1, 8, 0, 3, 4, 12, 2, 7, 4, 4, 8, 0, 5, 3, 3], [4, 4, 17, 52, 5, 3, 0, 1, 5, 2, 0, 1, 11, 1, 5, 6, 2, 3, 5, 2, 4, 1, 8, 0], [5, 2, 23, 37, 3, 8, 2, 4, 7, 1, 4, 0, 4, 2, 5, 11, 11, 3, 4, 0, 5, 1, 1, 0], [4, 11, 20, 47, 3, 3, 1, 0, 0, 3, 5, 1, 4, 7, 7, 2, 9, 1, 3, 8, 1, 10, 0, 0, 1], [9, 8, 24, 36, 3, 6, 1, 0, 8, 1, 2, 3, 2, 0, 11, 11, 1, 5, 0, 2, 0, 8, 0, 10, 0, 0, 0], [5, 11, 23, 37, 3, 3, 0, 1, 11, 0, 2, 12, 1, 1, 8, 6, 2, 8, 0, 1, 0, 6, 0, 12, 1, 0, 0], [1, 3, 22, 47, 4, 4, 0, 1, 10, 1, 8, 2, 9, 11, 0, 14, 2, 4, 1, 3, 0, 6, 8, 3], [5, 9, 19, 55, 2, 1, 10, 0, 4, 11, 10, 4, 9, 1, 5, 7, 1, 11, 2, 2, 3], [7, 14, 26, 44, 1, 10, 2, 3, 3, 2, 7, 4, 6, 13, 5, 4, 2, 7, 2, 8, 10, 4, 3, 2], [7, 13, 21, 59, 3, 4, 0, 1, 11, 1, 0, 1, 12, 2, 3, 8, 8, 2, 6, 0, 5, 8, 0, 13, 0, 2, 1], [4, 10, 24, 62, 4, 5, 1, 1, 10, 0, 1, 11, 2, 2, 11, 9, 2, 4, 0, 4, 0, 9, 0, 12, 1, 1, 1], [7, 10, 11, 58, 6, 7, 1, 0, 10, 2, 0, 2, 12, 2, 6, 8, 15, 0, 7, 0, 7, 10, 0, 10, 3, 4, 4], [8, 5, 25, 60, 4, 12, 2, 3, 3, 2, 10, 2, 1, 9, 12, 2, 14, 0, 3, 1, 8, 0, 15, 1, 1, 4], [0, 26, 15, 16, 5, 6, 23, 5, 6, 3, 29, 1, 1, 24, 22, 5, 17, 0, 10, 12, 2, 29, 0, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

