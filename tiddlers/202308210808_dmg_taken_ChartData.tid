created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Mom Tapper", "Drac Tepes", "Masa Yuki Asahina", "Gestern Yesteryear", "Serum Vision", "Minnie Darley", "Necrotic Windrunner", "Darks Na", "Elonith Requiem", "Amiti\u00e9l", "Reina Armitage", "Xanvias Tsolice", "Xuerreux", "Chocolate Teapot", "Crabbedmermaid", "Govinda Ektar", "Gumaass", "Grae Leon", "Sapir Yong", "Crabbedmermaid", "Kosair", "Hawaiian Supreme", "Ria Zera", "Grae Leon", "Mold One", "Luke The Ghastly", "Meryndah", "Flick Embermage", "Samara Evermoore", "Ka Otik Nightm\u00e6r", "Jerryatric Reflexes", "Aloe Pen", "Darks Na", "Flick Embermage", "Amiti\u00e9l"];
const professions = ["Scrapper", "Spellbreaker", "Scourge", "Reaper", "Firebrand", "Tempest", "Dragonhunter", "Reaper", "Firebrand", "Reaper", "Willbender", "Druid", "Weaver", "Berserker", "Chronomancer", "Firebrand", "Vindicator", "Dragonhunter", "Tempest", "Firebrand", "Dragonhunter", "Firebrand", "Spellbreaker", "Scrapper", "Weaver", "Reaper", "Scourge", "Druid", "Weaver", "Deadeye", "Reaper", "Berserker", "Vindicator", "Dragonhunter", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[434.6197, 1380.0755, 24.4231, 3401.7273, 224.507, 529.3819, 518.0135, 299.5154, 190.4615, 102.6857, 523.4737, 0.0, 181.1818, 410.3824, 156.5078, 299.734, 121.6099, 428.7572, 0.0, 37.0312, 173.5143, 622.3786, 775.2644, 2024.7191], [1226.5862, 494.3929, 262.5748, 357.7015, 43.5185, 287.0625, 68.2955, 168.5333, 560.6562, 177.5035, 603.3689, 184.6667, 334.3675, 0.0, 339.5217, 56.975, 596.2829, 502.5595, 2681.5789, 28.2381, 0.0, 33.4828, 441.2143, 94.3333, 1080.0845, 298.2338, 564.1507], [61.3846, 910.88, 301.1176, 426.05, 408.4603, 81.1, 0.0, 96.8571, 174.6543, 3.7381, 222.6129, 494.4706, 3.9848, 225.7935, 187.9364, 235.0893, 26.8571, 44.2333, 241.8421, 381.2757, 2208.5319, 468.2055, 1.2083, 0.0, 436.0494, 279.942, 511.2182, 180.7077, 839.4254], [150.3333, 32.2024, 3537.8947, 388.9108, 390.7462, 0.0, 62.1176, 200.5714, 110.4286, 205.9394, 38.3361, 171.5217, 118.703, 343.3812, 0.1613, 42.5161, 868.807, 1229.1463, 1328.1446, 113.0, 0.0, 0.0, 631.5211, 96.0615, 440.8393, 259.3529, 277.0701], [317.6824, 44.1481, 54.1296, 4423.8333, 449.2063, 735.7842, 131.2163, 106.2545, 233.0769, 133.9697, 131.5949, 0.0, 213.8966, 84.4412, 9.0781, 121.1505, 124.3054, 167.895, 0.0, 0.1, 38.75, 230.6477, 537.1348, 2081.5811, 15.6, 34.4583, 11.6486, 651.3208, 116.7742, 401.3214, 45.6364, 461.2407], [316.7381, 113.8958, 191.6667, 1868.5455, 490.3387, 1012.3857, 163.128, 115.5923, 18.8889, 12.0556, 173.038, 31.2093, 213.92, 105.7273, 24.1885, 75.2323, 97.8557, 163.6822, 0.0, 93.1, 465.8339, 527.2418, 1937.3163, 98.5, 22.6087, 452.5508, 90.1408, 350.2923, 50.9432, 313.8333], [39.3553, 183.6864, 30.88, 19.5152, 536.5786, 654.5222, 2876.1475, 227.6429, 205.6667, 343.1429, 769.5684, 266.3529, 286.2429, 528.8594, 1113.9928], [0.0, 79.6548, 130.17, 114.5499, 0.0, 55.4839, 251.8158, 527.9202, 763.8202, 2878.1795, 674.4848, 9.3684, 0.0, 552.5506, 172.3286, 256.0806, 303.1525, 873.8551], [543.0125, 715.2, 227.403, 107.0155, 38.7308, 42.1081, 176.15, 5.6667, 41.5862, 351.2857, 8.4724, 193.8061, 77.555, 210.0919, 273.3333, 3.3429, 28.8, 442.733, 892.0556, 3199.359], [47.8, 383.3553, 1.8205, 62.875, 413.1429, 30.5083, 313.9891, 67.2228, 215.1321, 0.0, 263.75, 37.5, 487.2581, 519.6154, 3852.1053, 304.75, 0.0, 0.0, 490.4056, 248.4507, 403.0164, 313.2727, 752.6682], [98.7966, 146.587, 740.7414, 15986.0, 143.6283, 266.8106, 38.9, 198.6667, 455.191, 141.92, 333.7647, 93.2812, 138.8488, 67.9065, 295.6555, 0.0, 295.7105, 597.0329, 685.7711, 3176.3784], [23.24, 58.26, 25.8625, 5933.875, 1780.3721, 2101.8163, 224.5319, 36.7273, 113.4231, 2.5405, 297.4868, 0.0, 93.0741, 211.9062, 34.1983, 113.7692, 149.5567, 88.8984, 0.0, 124.0625, 0.0, 201.4661, 482.8061, 2517.6515], [150.2082, 106.3664, 183.5769, 56.1667, 343.7671, 0.0, 19.5294, 292.9091, 0.0, 135.6237, 61.1719, 132.5419, 179.1875, 315.2812, 355.7827, 917.6548, 1996.2712, 20.0769, 5.4167, 343.0067, 248.8028, 399.4857, 78.0227, 401.6215], [5475.4444, 414.0638, 315.3769, 0.0, 24.0833, 371.2078, 0.0, 235.0, 335.2188, 48.0807, 126.7826, 158.3636, 170.6578, 0.0, 24.5625, 120.027, 514.3649], [14.7857, 151.9808, 86.6981, 230.6885, 214.8879, 304.7877, 209.4495, 250.7667, 366.4557, 85.6087, 154.5278, 239.697, 35.1687, 322.0108, 64.3333, 108.0912, 151.8421, 307.1944, 69.2564, 401.6732, 440.8764, 1196.4615], [75.6296, 38.0588, 154.1548, 19.0606, 99.4688, 198.1714, 7.4562, 150.9457, 55.1393, 213.7054, 0.0, 0.0, 135.9375, 278.1247, 441.6173, 2186.5949, 204.6538, 9.7368, 531.3625, 145.4167, 359.871, 250.9683, 320.3624], [41.2923, 4836.4444, 529.5761, 76.44, 116.6, 19.5, 435.6234, 8.9444, 86.28, 179.625, 0.0, 24.0, 289.6695, 0.0, 155.7647, 594.9095], [46.9412, 271.7319, 1958.0312, 392.0928, 195.8276, 2.7037, 0.0, 420.3789, 142.3944, 451.8235, 462.4531, 466.554], [33.2424, 582.9767, 1908.2326, 240.8148, 67.5185, 0.0, 236.1937, 130.0845, 332.5556, 89.7386, 697.3589], [77.9024, 26.5417, 6591.1818, 4571.4762, 1944.4074, 271.0338, 99.8583, 2.0, 9.5294, 294.2027, 22.2083, 138.5882, 0.0, 80.8315, 140.535, 70.312, 0.0], [310.96, 211.3623, 2765.4, 935.3409, 487.45, 418.828, 414.9549], [144.0471, 22.6, 84.7391, 3377.96, 10363.5556, 921.4161, 187.7586, 168.0827], [3178.2373, 74.4706, 347.8848, 190.7049, 229.0545, 26.6034, 603.7887], [43.2979, 63.1765, 7007.1111, 1734.4717, 4013.6, 379.2476, 124.1705], [9.6612, 212.5957, 84.9303, 255.7072, 0.0, 210.4848, 291.2432, 524.9497], [44.1562, 16170.4, 0.0, 29.0, 474.35, 297.4127, 1062.6232, 429.1562, 443.1408], [832.3443, 469.3861, 520.5982, 237.1642], [0.0, 0.0, 209.0787, 0.0, 19.44, 278.5714, 46.2636, 191.6735, 169.542, 112.2219, 25.3182, 0.125, 236.1842, 408.7069], [139.4684, 68.8305, 169.6154, 2840.28, 1035.6774, 372.5593, 331.9062, 84.5725], [534.4815, 378.7846, 442.2985, 297.1111, 998.093], [1225.0244, 358.7085, 187.8837], [875.6232, 671.8387, 353.8976, 133.5725], [309.746, 275.8286, 449.2812, 650.5027], [101.28, 347.0909, 837.6522, 1543.1304], [22.2083, 39.3889, 300.4935, 35.4231, 60.3824, 88.0571, 3.0547, 199.828, 146.0818, 67.8077, 25.875], [177.9882]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

