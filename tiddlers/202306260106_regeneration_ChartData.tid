created: 20230626010646000
creator: Drevarr
modified: 20230705163537289
modifier: drevarr
tags: ChartData
title: 202306260106_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Pale Pam", "Rednuii", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89.8627, 18.5385, 28.3353, 0.0, 60.0135, 25.5686, 139.8208, 12.8419, 11.6825, 13.0221, 0.0, 71.4189, 19.2522, 186.3061, 14.7186, 31.6944, 26.1, 11.0476, 25.9529, 7.308, 11.7557, 16.977, 16.5581, 26.3704, 55.7654, 9.7768, 23.5314, 14.0536, 19.2982, 4.721, 35.4211], [220.805, 0.0, 73.1003, 31.4907, 423.9708, 88.4621, 474.1632, 222.0764, 35.9365], [67.8505, 16.1725, 51.8978, 130.9022, 43.3072, 267.1872, 44.6264, 61.3957, 31.9293, 17.336, 115.0406, 74.6988, 110.2979, 51.3115, 28.4878, 31.254, 11.1095, 5.2569, 5.9363, 5.3762, 2.4194, 0.0, 66.6112, 52.7422, 9.0684, 90.9126, 0.0, 58.3531, 83.3913, 45.1282, 43.512, 65.5296, 75.0982, 21.2738, 63.1526, 184.2007], [0.0, 0.0, 0.0, 0.0, 249.4219, 5.2998, 202.9542, 191.2045, 511.8773, 95.0573, 1059.2064, 114.5071, 134.4272, 366.8301, 146.0701, 368.2099, 277.0218, 825.7511, 139.6091, 395.3839, 281.994, 325.7714, 287.496, 160.4715, 157.9128, 95.8335, 0.0, 101.9021, 223.1518, 583.9582, 180.1492, 364.8234, 252.9541, 320.4012, 285.4523, 492.3677, 220.32, 25.4544, 388.2602, 53.7322, 127.273]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

