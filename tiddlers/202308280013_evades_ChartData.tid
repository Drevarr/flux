created: 20230828001355000
creator: Drevarr
tags: ChartData
title: 202308280013_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrotic Windrunner", "Samara Evermoore", "Trodek", "Loganlek", "Kadie Mae", "The Arch\u00eetect", "Lookatyou Lookatme", "Ax Axun", "Bee Nemesis", "Xanvias Einzbern", "Chocolate Teapot", "Sister Elonith", "Heals For Daddy", "Ka Otik Nightm\u00e6r", "Necrophagya", "Gamora Titus", "Flick Embermage", "Bee Nemesis", "Ryasma", "Ayrion", "Gestern Yesteryear", "Koralia Danai", "Double Choco Mint", "Flick Embermage", "Mom Tapper", "Drevarr Moonwillow", "Jade Quufu", "Reina Armitage", "P Ain", "Unbreakable Nemesis"];
const professions = ["Scourge", "Deadeye", "Scrapper", "Berserker", "Renegade", "Reaper", "Catalyst", "Vindicator", "Berserker", "Berserker", "Chronomancer", "Berserker", "Druid", "Reaper", "Reaper", "Dragonhunter", "Tempest", "Spellbreaker", "Harbinger", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Weaver", "Spellbreaker", "Scrapper", "Firebrand", "Druid", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13, 0], [11, 5, 0, 0, 2, 0], [0, 10, 0, 8, 2, 0, 0], [2, 23], [17, 6, 4, 8], [0, 36], [3, 10, 6, 0, 16, 0, 1, 5, 0, 0, 0], [0, 2, 3, 0, 0, 11, 0, 0, 0, 2, 0, 0, 2, 10, 16], [0, 26, 16, 0, 9], [31, 22, 1, 21, 5, 0], [4, 6, 1, 0, 3, 4, 3, 9, 0, 27, 8, 0, 1, 0, 0, 16, 0, 2], [17, 41, 1, 12, 7, 0, 9, 0, 2], [30, 12, 0, 7, 5, 0, 37, 0], [2, 31, 33, 2, 23, 1, 0, 13, 0], [13, 0, 0, 12, 6, 12, 9, 0, 11, 11, 0, 11, 3, 0, 21], [1, 4, 9, 12, 15, 7, 10, 0, 14, 0, 0, 3, 1, 0, 47, 0], [58, 2, 66], [15, 21, 39, 4, 0, 37, 0, 1, 10], [1, 5, 3, 0, 3, 8, 24, 12, 13, 1, 19, 17, 0, 4, 2, 0, 12, 1, 1, 5], [0, 8, 4, 0, 2, 3, 27, 2, 51, 2, 20, 17, 0, 21, 0], [3, 7, 8, 0, 0, 0, 23, 15, 11, 0, 30, 17, 4, 5, 20, 15, 0, 0, 1], [0, 9, 11, 18, 29, 1, 37, 14, 0, 15, 11, 0, 16], [7, 3, 1, 3, 8, 34, 19, 17, 0, 49, 10, 1, 5, 16], [0, 7, 9, 0, 1, 32, 15, 1, 7, 1, 63, 0, 26, 13], [1, 26, 54, 0, 40, 4, 8, 19, 0, 9, 16], [0, 2, 8, 1, 2, 5, 29, 12, 31, 0, 18, 21, 0, 9, 29, 1, 19, 0, 0], [0, 24, 46, 2, 20, 16, 0, 60, 12, 4, 10], [2, 4, 10, 0, 20, 33, 9, 35, 0, 3, 31, 0, 13, 20, 41, 1, 2], [1, 23, 27, 15, 34, 1, 41, 4, 0, 40, 39, 0, 13, 0, 6], [28, 12, 3, 9, 2, 45, 44, 0, 25, 24, 1, 54]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

