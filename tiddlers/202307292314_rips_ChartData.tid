created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Irish Necroman", "Daphne Agla\u00e9", "Marceluuk", "N\u00eec\u00f4le", "Smol Gluvs", "Master Marcovius", "Kisumaiasu", "Loganlek", "Daphne Agla\u00e9", "Zaedy Zae", "Irish Necroman", "Be\u00eb", "Smol Gluvs", "Be\u00eb", "Alarics Bane", "Grasszanine", "Ryvalia Fazebringer", "Cesare Pirane", "Newtype Khan", "Rahani Sunray"];
const professions = ["Firebrand", "Scourge", "Scourge", "Reaper", "Spellbreaker", "Scourge", "Harbinger", "Reaper", "Spellbreaker", "Reaper", "Druid", "Reaper", "Reaper", "Reaper", "Scourge", "Reaper", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0107, 0.0704, 0.0118, 0.0, 0.0086, 0.0071, 0.0, 0.0094, 0.0164, 0.0199, 0.0426, 0.0, 0.0], [0.0333, 0.0, 0.0642, 0.3944, 0.0709], [0.24, 0.0167, 0.0, 0.0, 0.3803, 0.1142, 0.0], [0.5211, 0.1024], [0.0, 0.1257, 0.0, 0.0, 0.217, 0.0, 0.0062, 0.1489, 0.0, 0.0], [0.08, 0.05, 0.0, 0.0214, 0.9437, 0.0945], [0.0, 0.0107, 0.0, 0.0, 0.0, 0.1114, 0.0143, 0.0, 0.0377, 0.0328, 0.0273, 0.3298, 0.0341, 0.0741], [0.0906, 0.0, 0.0, 0.0, 0.0357, 0.0, 0.0882, 0.2128, 0.0, 0.0], [0.1127, 0.0079, 0.0, 0.1057, 0.0857, 0.0, 0.0472, 0.0, 0.0497, 0.1596, 0.0, 0.0], [0.0, 0.1057, 0.0571, 0.1964, 0.0566, 0.0, 0.0671, 0.234, 0.0], [0.0, 0.0833, 0.0, 0.0107, 0.0986, 0.0197, 0.0, 0.0829, 0.0714, 0.0357, 0.0943, 0.0, 0.0758, 0.117, 0.0114, 0.0123], [0.0, 0.1057, 0.0286, 0.0179, 0.2736, 0.0164, 0.0783, 0.2447, 0.0, 0.0], [0.1, 0.0, 0.0371, 0.0286, 0.125, 0.2736, 0.0, 0.0957, 0.2766], [0.0132, 0.1686, 0.0714, 0.0357, 0.066, 0.0656, 0.0783, 0.1596, 0.0, 0.0494], [0.0, 0.0, 0.0214, 1.0423, 0.5118, 0.0227, 0.037], [0.0, 0.0333, 0.0, 0.0, 0.2113, 0.2008, 0.0, 0.06, 0.0714, 0.0, 0.1792, 0.0492, 0.1155, 0.1489, 0.0, 0.0], [0.185, 0.0263, 0.0, 0.1, 0.1786, 0.2736, 0.0328, 0.1466, 0.6702, 0.0, 0.037], [0.3143, 0.0714, 0.2143, 0.6792, 0.0984, 0.205, 0.4149, 0.0568, 0.0864], [0.8028, 0.1654, 0.0, 0.2571, 0.0571, 0.125, 0.2547, 0.0164, 0.154, 0.7128, 0.0, 0.0494], [0.16, 0.05, 0.0, 0.0053, 0.9155, 0.2165, 0.0263, 0.2286, 0.0429, 0.125, 0.3868, 0.0984, 0.1615, 0.3723, 0.0455], [0.5915, 0.4252, 0.0132, 0.1543, 0.0643, 0.3036, 0.4245, 0.082, 0.3043, 0.8404, 0.0, 0.0247]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

