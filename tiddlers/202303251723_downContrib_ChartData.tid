created: 20230325172304000
creator: Drevarr
modified: 20230705163522959
modifier: drevarr
tags: ChartData
title: 202303251723_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Zefirokai", "Eibh\u00ebar", "Oo Dads Mad", "Newtype Khan", "Arcanophage Farra", "Smol Gluvs", "Kalenthian", "Rozaalyna", "What Charr U Saying", "Sassy Daddy Demon", "Panther B Me", "Kmpek", "Cerys Fireblade", "Sp\u00edcy Cheese", "K\u00f4sair", "Lord Erin The Wise", "Legacy Of Mathus", "Xyntharos", "Be\u00eb", "Fruji", "Mike The Archmagus", "Xanvias Einzbern", "Sofya De Nova"];
const professions = ["Tempest", "Chronomancer", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Mechanist", "Scourge", "Berserker", "Vindicator", "Scourge", "Vindicator", "Berserker", "Berserker", "Berserker", "Weaver", "Berserker", "Vindicator", "Scourge", "Scrapper", "Weaver", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14630.0, 1417.0, 0.0, 3912.0, 710.0, 69944.0, 3218.0, 4685.0, 4001.0, 1662.0, 0.0, 0.0, 0.0, 16059.0, 5651.0, 1173.0, 1750.0, 8064.0], [9018.0, 5582.0, 0.0, 3485.0, 1821.0, 321.0, 60559.0, 4854.0, 648.0, 9633.0, 4770.0, 2968.0, 774.0, 14398.0, 12630.0, 21.0, 273.0, 3100.0, 14399.0], [8300.0, 6184.0, 1035.0, 0.0, 0.0, 1823.0, 56933.0, 7646.0, 1284.0, 14237.0, 4578.0, 24247.0, 2684.0, 26859.0, 3060.0], [10581.0, 9672.0, 2765.0, 0.0, 0.0, 0.0, 75794.0, 13508.0, 4646.0, 17438.0, 2523.0, 9912.0, 0.0, 5394.0, 3804.0, 1196.0, 1186.0, 900.0, 7098.0], [27282.0, 10244.0, 0.0, 0.0, 0.0, 0.0, 82903.0, 7315.0, 6969.0, 3401.0, 2568.0, 5835.0, 821.0, 7563.0, 5989.0, 544.0, 2190.0, 4667.0, 12016.0], [26516.0, 3965.0, 0.0, 1494.0, 1780.0, 1940.0, 45433.0, 28656.0, 1446.0, 9677.0, 10828.0, 4136.0, 609.0, 8302.0, 29772.0, 18.0, 2425.0, 2822.0, 33384.0], [13167.0, 0.0, 114725.0, 18065.0, 10146.0, 10439.0, 5778.0, 6535.0, 0.0, 14018.0, 14556.0, 0.0, 21511.0, 15339.0, 12526.0], [15970.0, 3054.0, 0.0, 12278.0, 0.0, 192508.0, 775.0, 0.0, 8644.0, 980.0, 0.0, 7605.0, 69112.0, 0.0, 4127.0, 0.0, 10911.0], [19653.0, 10737.0, 0.0, 7275.0, 0.0, 170407.0, 14088.0, 5047.0, 20345.0, 3121.0, 0.0, 0.0, 45427.0, 30245.0], [40543.0, 10231.0, 4534.0, 0.0, 13803.0, 0.0, 41331.0, 49904.0, 6115.0, 50771.0, 21367.0, 0.0, 0.0, 19620.0, 40923.0, 0.0, 7106.0, 4974.0, 97893.0], [38365.0, 3606.0, 5261.0, 0.0, 9091.0, 1654.0, 207957.0, 25467.0, 10502.0, 24882.0, 2983.0, 0.0, 264.0, 1916.0, 24307.0, 6555.0, 9093.0, 17597.0, 39385.0], [45327.0, 11170.0, 4371.0, 0.0, 7085.0, 0.0, 122350.0, 19901.0, 3145.0, 38428.0, 10369.0, 0.0, 9718.0, 17220.0, 57746.0, 18655.0, 9641.0, 25618.0, 30917.0], [20971.0, 19966.0, 6084.0, 0.0, 4046.0, 0.0, 229669.0, 2656.0, 6234.0, 40365.0, 8134.0, 13634.0, 0.0, 5488.0, 20470.0, 2072.0, 8221.0, 16348.0, 34915.0], [40129.0, 41913.0, 8611.0, 176574.0, 16167.0, 4934.0, 86518.0, 26985.0, 0.0, 6355.0, 64508.0, 59808.0, 0.0, 3674.0, 13616.0, 23721.0], [59574.0, 22828.0, 0.0, 0.0, 9096.0, 8767.0, 450947.0, 89195.0], [29958.0, 39978.0, 2263.0, 0.0, 2720.0, 2648.0, 223945.0, 17030.0, 3774.0, 49920.0, 15570.0, 0.0, 1384.0, 19520.0, 85056.0, 4415.0, 25507.0, 10481.0, 126874.0], [31923.0, 13539.0, 1776.0, 0.0, 14534.0, 0.0, 374562.0, 21826.0, 11184.0, 78119.0, 15273.0, 1801.0, 0.0, 23398.0, 46533.0, 47.0, 11386.0, 17006.0, 55063.0], [37588.0, 31935.0, 3841.0, 4703.0, 1980.0, 272300.0, 20389.0, 11902.0, 62034.0, 14475.0, 4048.0, 858.0, 54945.0, 59381.0, 21874.0, 15871.0, 37653.0, 73911.0], [30205.0, 15727.0, 11439.0, 6619.0, 0.0, 24547.0, 342951.0, 44826.0, 15288.0, 44779.0, 32998.0, 1320.0, 3029.0, 58810.0, 9260.0, 21916.0, 14292.0, 12796.0, 59052.0], [64355.0, 51921.0, 6923.0, 0.0, 9009.0, 0.0, 452285.0, 11127.0, 61.0, 73813.0, 24154.0, 18939.0, 0.0, 46658.0, 28940.0, 20333.0, 4032.0, 7504.0, 58094.0], [37018.0, 20303.0, 2880.0, 3119.0, 3452.0, 0.0, 418677.0, 36616.0, 0.0, 116143.0, 25161.0, 0.0, 1782.0, 3912.0, 36046.0, 39940.0, 7111.0, 25786.0, 111628.0], [43765.0, 53209.0, 8670.0, 0.0, 5457.0, 0.0, 360772.0, 117511.0, 10852.0, 142799.0, 94272.0, 16296.0, 0.0, 96874.0, 0.0, 21091.0, 25302.0, 30827.0, 152603.0], [81350.0, 38965.0, 3202.0, 0.0, 0.0, 18903.0, 760469.0, 53300.0, 23916.0, 61072.0, 7519.0, 3388.0, 63355.0, 4745.0, 14696.0, 21196.0, 74761.0, 43623.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

