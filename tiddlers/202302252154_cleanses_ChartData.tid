created: 20230225215428000
creator: Drevarr
modified: 20230705163520211
modifier: drevarr
tags: ChartData
title: 202302252154_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Newtype Khan", "Tootsie Pop Tart", "Cat Wigglebooty", "Primal Clone", "Vopiscus Zergherdus", "Tegan Parker", "Mac Aaroni", "Drevarr Moonwillow", "Tribal S", "Zadie Miststep"];
const professions = ["Firebrand", "Spellbreaker", "Scrapper", "Scrapper", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Scrapper", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.141, 0.0286, 0.1905, 0.1159, 0.05, 0.0566, 0.1125, 0.2857, 0.0058, 0.2113], [0.1154, 0.0, 0.1111, 0.1951, 0.08, 0.3585, 0.15, 0.3036, 0.4, 0.0, 0.7042], [0.0, 0.9206, 0.3293, 0.24, 0.3962, 0.0, 0.375, 0.0, 0.0, 0.0141], [0.5128, 0.3429, 0.0159, 0.3963, 0.26, 0.2075, 0.0, 0.0, 0.0286, 0.0, 0.3521], [0.5641, 0.0794, 0.378, 0.03, 0.4528, 0.175, 0.5714, 0.0, 0.0, 0.2676], [0.4207, 0.24, 0.3208, 0.1125, 1.1964, 0.0286, 0.0289, 1.338], [0.2821, 0.0, 0.8095, 0.561, 0.59, 0.8302, 0.875, 1.5536, 0.1143, 0.0231, 0.2958], [0.5513, 0.2286, 0.8571, 0.689, 0.49, 1.3585, 0.725, 1.1786, 0.0857, 0.052, 1.2817], [0.6154, 1.2286, 1.1111, 1.0122, 0.52, 1.4906, 0.475, 1.0357, 0.3714, 0.0173, 1.3521], [0.4359, 0.1714, 0.6349, 0.7012, 0.76, 1.2642, 1.2625, 1.25, 0.5143, 0.0058, 2.1972], [0.6667, 1.3429, 1.3651, 0.8354, 0.57, 1.5094, 1.0875, 0.9643, 0.0, 0.1098, 2.0563]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

