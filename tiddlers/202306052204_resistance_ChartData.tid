created: 20230605220452000
creator: Drevarr
modified: 20230705163533864
modifier: drevarr
tags: ChartData
title: 202306052204_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Al\u00ee\u00e7ization", "Miphest\u00f6", "Primal Clone", "Eibh\u00ebar", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Cedryn X", "Crusader Siolith", "Jeckyll Mbs", "Zaylen Harker", "Gabe Malhorn", "Koralia Danai", "Blanco Padre Guard", "Bella Sassy", "Xanvias Einzbern", "Zayde Sunsabre", "Solus Sanctus", "Newtype Khan"];
const professions = ["Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.8898, 32.6448, 29.8186, 5.903, 29.6976, 151.944, 72.959, 29.9484, 5.8725], [0.0, 7.0325, 231.7279, 0.0, 0.0, 7.238, 4.5692, 36.8616, 16.7546, 7.0761, 6.2707, 113.412, 76.8281, 16.0834, 7.2292], [6.7536, 245.5606, 6.8141, 154.0157, 5.031, 0.0, 0.0, 6.7247, 25.4904, 10.6145, 0.0, 6.8006, 86.58, 77.3808, 6.8216, 5.022], [6.7536, 261.5924, 11.1384, 159.6504, 9.6105, 4.0959, 5.225, 6.8462, 20.6577, 14.8603, 9.6681, 14.0429, 82.212, 59.3253, 13.6432, 0.0], [7.4736, 265.5026, 17.4502, 175.1459, 7.4046, 8.5081, 3.795, 7.3927, 22.5055, 23.8418, 6.3004, 14.9702, 92.976, 67.4318, 13.8373, 11.0768], [0.0, 316.3352, 7.8187, 192.5196, 8.5398, 0.0, 0.0, 7.256, 30.4653, 14.9909, 14.417, 15.5222, 121.836, 54.9035, 12.7835, 9.1732], [341.3605, 0.0, 98.138, 0.0, 0.0, 0.0, 4.2352, 24.8271, 0.0, 29.6855, 14.9261, 141.96, 166.3687, 8.5963, 19.0553], [0.0, 319.4633, 8.0153, 282.4403, 7.3659, 4.9784, 0.0, 7.4989, 35.7245, 37.4937, 5.922, 15.9638, 135.252, 92.12, 13.0608, 7.938], [0.0, 376.9433, 0.0, 293.0054, 0.0, 0.0, 0.0, 7.9543, 67.2322, 51.9947, 11.9894, 181.584, 39.4274, 18.08, 0.0], [0.0, 302.2585, 0.0, 433.4039, 0.0, 4.2124, 6.7399, 79.2194, 40.8903, 6.7355, 13.6013, 280.8, 106.8592, 41.9832, 6.723], [0.0, 471.9611, 13.7374, 470.0296, 7.1595, 7.2094, 0.0, 7.5445, 71.9702, 50.0351, 7.4734, 15.5002, 307.944, 94.1466, 31.1962, 11.6032], [0.0, 488.384, 15.0041, 531.0724, 7.2627, 7.2594, 5.346, 7.6811, 70.2645, 36.122, 19.7146, 15.8534, 355.056, 98.5684, 39.9035, 9.0518], [0.0, 683.1119, 7.4474, 357.1004, 0.0, 0.0, 0.0, 6.7247, 53.3025, 74.2362, 5.9976, 13.6013, 410.124, 125.6517, 14.8633, 4.536], [7.6176, 588.8761, 27.6494, 552.6721, 2.5026, 11.2554, 4.004, 19.8403, 65.4318, 42.7846, 7.9275, 27.887, 357.396, 92.3042, 9.65, 5.9333], [0.0, 838.7379, 0.0, 527.7854, 0.0, 0.0, 0.0, 0.0, 96.5604, 28.3815, 0.0, 46.103, 287.04, 142.9702, 22.0454, 37.8675], [0.0, 712.0474, 73.0985, 604.3237, 0.0, 0.0, 0.0, 0.0, 20.7998, 62.4459, 0.0, 0.0, 394.056, 210.7706, 0.0, 0.0], [5.4288, 1033.4659, 40.8408, 779.9392, 10.6812, 7.0929, 11.176, 41.9272, 137.9706, 128.8437, 7.7194, 50.2982, 459.264, 71.1166, 39.2102, 36.5513], [120.1824, 1494.0874, 0.0, 636.9581, 20.2917, 0.0, 24.948, 20.7207, 170.7101, 173.2286, 20.9066, 20.8214, 442.104, 176.3177, 36.77, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

