created: 20230603000934000
creator: Drevarr
modified: 20230705163533047
modifier: drevarr
tags: ChartData
title: 202306030009_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "A Girl Named Jeff", "Vdddzz", "Latedoctor", "Newtype Khan", "Dargon Spiritwalker", "Wild Doggy", "Morv\u00e4rth", "Morv\u00e4rth", "Melli Dragonswrath", "Smol Gluvs", "Sureting", "Lord Erin The Wise", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Xyntharos", "The Fancy Cheese", "Duke Silvver", "Kary\u00edna", "Mistwalker Cael", "Xanvias Tsoli", "Be\u00eb", "Cyclotechnist Farra"];
const professions = ["Dragonhunter", "Spellbreaker", "Soulbeast", "Reaper", "Spellbreaker", "Scourge", "Dragonhunter", "Reaper", "Scourge", "Berserker", "Scourge", "Reaper", "Weaver", "Herald", "Vindicator", "Scrapper", "Vindicator", "Vindicator", "Vindicator", "Holosmith", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.9149, 70.7037, 64.2353, 131.7275, 17.7167, 38.0238, 443.8571, 65.5593, 61.3321, 22.1538, 23.9433, 0.0, 25.4783, 0.0], [0.0, 72.7371, 142.2063, 120.745, 233.237, 18.5926, 86.6765, 0.0, 52.3111, 65.6103], [0.0, 136.8255, 326.1926, 0.0, 89.6397, 34.1463, 180.3333, 91.2574], [81.7829, 229.7249, 25.7517, 92.3481, 25.4815, 158.7353, 0.0, 173.2593, 58.5956], [0.0, 100.0247, 0.0, 77.6351, 0.0, 0.0, 191.5238, 153.4915, 36.3032, 37.7231, 90.2553, 0.0, 3.8261, 33.6429, 62.8857, 65.0899, 46.4698, 93.6667, 0.0, 76.7721, 0.0, 36.0444, 33.2757], [72.0851, 400.0, 0.0, 144.3372, 30.7, 0.0, 313.5238, 127.7458, 140.5523, 67.7795, 87.1206], [80.1667, 0.0, 0.0, 158.1864, 33.7906, 70.1641, 65.227, 22.4878, 0.0, 47.7886, 198.1164, 1.1544, 182.2074, 83.9383, 91.8971, 0.0, 176.9852, 72.1581], [40.2553, 366.8519, 4.6765, 186.8129, 0.0, 117.1864, 131.4765, 0.0, 80.1037, 74.6103], [122.8205, 121.4184, 0.0, 157.1087, 28.3571, 54.8629, 196.5767, 156.302, 286.1852, 33.0247, 248.0735], [35.0638, 357.5679, 0.0, 61.7598, 0.0, 29.119, 0.0, 1050.5085, 122.657, 17.5795, 130.0, 0.0, 19.6522, 168.9643, 103.9257, 201.7249, 126.0872, 0.5704, 0.0, 286.8676, 0.0, 102.4889, 55.6029], [1.9574, 309.1728, 13.1765, 78.8222, 6.6333, 0.0, 332.9524, 294.8305, 112.148, 179.4769, 88.0142, 6.8415, 213.1739, 60.3214, 172.6743, 186.2381, 152.7114, 261.4889, 21.7037, 104.7647, 0.0, 125.4296, 60.6397], [137.5106, 201.0741, 0.0, 176.5196, 0.0, 18.381, 203.4477, 63.7436, 270.3121, 48.8913, 72.6786, 102.76, 233.1429, 115.6443, 362.037, 0.0, 259.4853, 0.0, 191.9111, 87.8088], [0.0, 159.6667, 48.1765, 179.0693, 0.0, 0.0, 505.2381, 277.2373, 212.7762, 86.6462, 337.7021, 19.561, 26.3261, 254.5714, 185.6743, 198.5608, 82.5839, 674.1185], [203.5319, 724.963, 306.9118, 380.2725, 35.35, 133.0952, 118.7942, 362.8718, 544.5816, 103.0976, 82.9348], [0.0, 339.1975, 35.2647, 51.4411, 0.0, 0.0, 110.5238, 442.2034, 408.3718, 80.4513, 447.4397, 0.0, 135.7826, 142.3929, 37.0914, 663.8042, 394.7248, 375.9333], [0.0, 841.7407, 0.0, 9.2725, 161.0833, 0.0, 419.0952, 683.7966, 223.1805, 108.6615, 190.9645, 0.0, 195.8743, 366.381, 255.8725, 440.5259, 0.0, 290.8456, 0.0, 268.2889, 113.7684], [0.0, 604.1975, 455.7353, 67.254, 27.0333, 154.6429, 0.0, 311.5085, 103.8448, 213.5231, 479.7801, 0.0, 47.7609, 359.6429, 176.6686, 369.5026, 355.0134, 584.3778, 69.9753, 209.8015, 0.0, 79.9852, 74.6324], [0.0, 601.9259, 0.0, 243.5566, 0.0, 43.5952, 150.0952, 246.5763, 87.4224, 292.5333, 651.773, 0.0, 0.0, 419.3929, 29.2343, 509.381, 104.4966, 425.1259, 0.0, 288.2206, 0.0, 183.5704, 230.7647], [76.1489, 504.1358, 244.2941, 135.9746, 0.0, 0.0, 0.0, 451.6102, 196.4946, 292.2769, 343.695, 0.0, 52.8043, 443.7143, 74.1886, 322.6614, 442.094, 770.4889, 65.0988, 380.7426, 2.1585, 238.5037, 174.9375], [68.617, 800.7531, 110.7353, 127.2633, 0.0, 82.4524, 692.7143, 670.9661, 128.0036, 538.041, 415.539, 0.0, 68.6957, 0.0, 251.76, 644.8148, 432.1007, 290.7926, 96.2469, 374.5956, 0.0, 431.1259, 227.8456], [131.6809, 527.6296, 411.4118, 428.0485, 12.9333, 21.881, 462.3333, 839.6271, 282.6282, 408.7846, 243.1773, 0.0, 215.7609, 0.0, 383.254, 431.1946, 287.9778, 87.679, 506.8676, 0.0, 185.2667, 248.1949], [0.0, 903.642, 0.0, 160.7413, 0.0, 0.0, 653.8095, 334.0678, 149.7004, 563.6051, 496.2128, 0.0, 316.4783, 75.0, 306.1029, 602.7937, 689.7718, 520.2, 116.1852, 555.7059, 163.122, 494.8296, 401.8309]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

