created: 20230224230708000
creator: Drevarr
modified: 20230705163520110
modifier: drevarr
tags: ChartData
title: 202302242307_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Arka\u00f1", "Ravioli Fetabringer", "Zadie Miststep", "Mike The Archmagus", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Firebrand", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55.229, 171.6018, 114.3103, 131.8108, 157.5, 742.3835, 263.8189, 209.2632, 709.3137, 90.303, 49.1837, 15.125, 719.1759, 86.12, 87.0, 644.3871, 556.3679, 761.7288, 817.2969, 204.7419, 397.4545, 0.0, 279.3438, 957.6562, 329.5854, 535.2289, 275.5102], [235.514, 338.4751, 75.7931, 313.973, 182.0714, 1347.812, 240.0945, 351.5029, 859.7451, 219.697, 84.6122, 130.375, 104.36, 446.2915, 168.92, 168.963, 963.2581, 565.0094, 618.0678, 1586.1406, 449.2097, 143.5455, 208.7358, 378.6375, 973.8854, 399.5366, 613.012, 275.5714], [583.6262, 320.0995, 1445.4324, 547.4, 1894.6466, 1046.7244, 1458.117, 3559.5294, 0.0, 253.3878, 126.0312, 1173.3518, 21.6757, 202.0533, 234.5926, 2012.6989, 2438.7736, 1129.4068, 4431.0781, 998.3548, 1045.2045, 476.1887, 1279.8812, 2029.5, 1744.1057, 1393.3494, 1327.2653], [691.4673, 1223.7195, 1327.8103, 1551.6486, 583.1571, 2008.5263, 1700.1811, 2445.5205, 2694.4314, 189.4848, 1448.1224, 928.8125, 182.52, 1875.4121, 18.7838, 497.6533, 786.7778, 2113.4409, 2164.2736, 1500.7966, 3551.2422, 846.871, 2186.9545, 983.3208, 1639.0062, 3437.25, 1940.2358, 1925.9639, 1143.6939], [656.8318, 1316.3077, 1510.2328, 1606.5541, 911.0429, 2458.8797, 1626.1417, 2311.7251, 3957.2941, 148.9697, 806.9592, 575.5938, 120.8, 1997.0553, 31.7568, 551.4267, 947.1481, 2723.9032, 2818.8962, 1851.3559, 4946.1641, 1402.0, 2839.2045, 659.8302, 1747.5812, 3648.9271, 2158.1301, 2010.4096, 1324.0204]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

