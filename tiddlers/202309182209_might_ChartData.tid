created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar", "Malfax Jinn", "Legends Light", "Acinonyx Fauxhawk", "Hawaiian Supreme", "Anita Strips", "Xanvias Einzbern", "Oo Dads Mad", "Jimbo The Pleb", "Cat Wigglebooty", "Glorious Gluvs", "Mike The Archmagus", "Aira Draugr", "Lucky Luprac\u00e1n", "Leafzel", "Etch\u00e9ry", "Ill Fix Your Honda", "Tegan Parker", "Zaedy Zae", "Darks Na", "Tootsie Pop Rocks", "Belvyn Brightblade", "Tribal S", "Rafaellagabriela", "Koralia Danai", "Katiana Lafay", "High Sorcer Baradun", "Sub Train", "Solus Luxes", "Crusader Siolith", "Bella Sassy", "Drevarr Moonwillow", "Arcanophage Farra", "Grasszanine"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Druid", "Berserker", "Spellbreaker", "Chronomancer", "Berserker", "Berserker", "Berserker", "Scrapper", "Berserker", "Tempest", "Herald", "Scrapper", "Firebrand", "Berserker", "Scrapper", "Tempest", "Druid", "Firebrand", "Scrapper", "Firebrand", "Druid", "Firebrand", "Firebrand", "Herald", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2165, 0.966, 0.0, 0.0, 0.0, 4.0934, 0.0, 0.0, 0.0, 4.6609, 3.263, 0.0, 5.2391, 8.2656, 0.0, 3.6309, 0.0, 0.0, 0.0, 1.8547, 0.0, 0.0, 0.0, 1.3904, 0.0, 0.0, 0.0], [1.932, 0.0, 0.0, 4.864, 1.8499, 0.0, 1.3152, 0.0, 3.0939, 5.8925, 0.0, 3.1752, 5.904, 0.5174, 2.2344, 2.1206, 0.0, 0.0, 0.0, 0.0, 0.456, 0.0, 0.9038, 0.0333, 0.3772, 0.0], [0.0, 0.1105, 0.0, 0.0, 5.1168, 0.0, 2.4794, 0.6517, 2.7724, 3.865, 0.0, 6.2446, 8.3443, 0.0, 2.5416, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.4976, 0.2433, 1.0989, 1.1127, 0.0], [2.1658, 1.3661, 4.9367, 0.3494, 1.1466, 7.6608, 0.4118, 5.214, 9.3573, 3.5834, 0.5957], [0.7203, 17.4192, 2.2838, 2.1204, 13.2867, 2.3198, 0.2737], [1.794, 0.5523, 0.0, 4.0636, 6.1402, 3.1942, 4.118, 0.0, 5.143, 6.8112, 0.0, 1.7464, 1.6531, 1.9051, 0.0, 1.0378, 0.8036, 0.0, 0.0, 0.0, 0.0, 1.6848, 0.0, 0.0, 0.9619, 0.0], [5.6453, 10.9564, 10.5101, 4.3806, 13.6344, 0.6365], [3.4046, 9.522, 0.0, 3.4848, 1.2314, 3.2275, 3.3488, 0.0, 3.3888, 1.8885, 6.8112, 0.0, 0.0, 6.6125, 0.7997, 1.8713, 0.0, 0.5424, 1.0192, 1.9354, 0.0, 0.0, 0.0, 0.0, 1.5651, 0.0, 0.0], [0.0, 0.0, 2.0985, 1.9941, 0.0, 9.0922, 2.473, 4.1826, 0.0, 5.5448, 6.9696, 0.0, 5.8212, 1.5744, 0.9878, 0.0, 0.0, 2.0693, 1.4651, 2.688, 0.1764, 0.0, 2.0966, 0.0, 2.1645], [0.0, 6.762, 5.0807, 4.8206, 0.0, 6.4157, 5.8218, 4.4845, 0.0, 5.1029, 6.3994, 0.0, 8.3084], [10.074, 0.0, 0.0, 2.8322, 4.0147, 1.829, 5.4116, 3.2213, 0.0, 3.3581, 0.0, 6.8796, 4.0934, 2.0933, 2.9885, 4.4218, 0.3013, 0.0, 0.215, 0.735, 0.0, 0.6178, 0.0, 2.4642, 0.0, 0.0], [8.28, 7.2897, 0.0, 2.3397, 3.1488, 2.473, 2.1991, 0.0, 5.0225, 6.1459, 6.6679, 2.7552, 2.7283, 2.5975, 1.6469, 1.6474, 0.7963, 2.4461, 0.0, 2.4168, 1.1794, 0.0, 0.0, 0.0, 0.0], [3.036, 0.0, 0.1936, 0.0, 0.7085, 1.2622, 0.0, 1.713, 16.8354, 5.1322, 0.0, 8.8376, 13.4611, 0.0, 3.7985, 1.2634, 0.5625, 0.0, 2.6342, 0.1323, 0.0, 1.5912, 0.3128, 0.333, 0.8298, 0.483], [29.256, 10.6032, 2.5942, 0.0, 4.7626, 0.0, 0.0, 0.0, 3.7769, 2.2493, 0.0, 4.9745, 1.2595, 0.0, 2.6813, 0.0, 0.663, 0.0, 0.0, 0.0, 0.0, 0.5214, 0.0, 0.0, 0.0], [1.4366, 17.94, 15.463, 2.1877, 5.1719, 4.2902, 0.1546, 0.1725, 1.0427, 3.6162, 4.9104, 0.1235, 7.8851], [0.0, 18.216, 0.0, 0.0, 0.0, 8.7379, 3.0654, 1.3152, 0.0, 4.3796, 4.1184, 0.0, 6.0858, 14.4845, 3.1987, 4.5805, 0.2933, 0.0, 0.0, 0.0, 2.1609, 0.0, 0.0, 2.3637, 2.1978, 1.4711, 0.9177], [18.63, 9.7196, 6.2186, 3.0701, 1.829, 1.617, 1.2848, 1.6072, 4.3085, 1.57, 1.5347, 7.0061, 1.4818, 3.4913, 0.9475, 2.9331, 1.6881, 0.8602, 1.0143, 1.7328, 1.4789, 0.6257, 1.3986, 2.3009, 0.7084], [2.4206, 9.936, 4.8598, 0.0, 0.0, 11.8474, 5.5126, 4.7648, 0.0, 7.2726, 4.847, 12.4362, 15.3504, 0.8232, 0.8379, 2.3914, 0.2411, 0.0, 1.5859, 0.0, 0.0, 0.5242, 0.2433, 0.6993, 0.679, 0.6762], [20.838, 20.6542, 2.9234, 3.2016, 5.0381, 1.0562, 1.6601, 2.3461, 6.3083, 4.2451, 1.3583, 7.303, 0.1574, 2.9635, 1.7317, 1.1054, 1.4666, 0.3822, 0.5376, 0.0441, 0.3192, 2.5085, 1.9466, 1.9647, 0.0, 0.2254], [27.876, 10.6032, 0.0, 0.0, 0.0, 0.3864, 0.0, 2.0296, 0.0, 3.0413, 0.0, 6.7208, 13.6186, 0.0, 0.0, 0.0, 0.2411, 0.223, 0.8333, 0.0, 0.0, 0.0, 6.8477, 20.2464, 0.0, 0.0], [0.0, 28.428, 10.051, 5.3627, 1.8471, 12.241, 0.0, 3.4496, 1.713, 1.4465, 4.5619, 0.0, 4.9216, 11.0995, 0.9173, 0.5865, 0.9926, 0.5424, 0.0, 1.7203, 0.0, 1.9608, 1.9094, 0.5909, 0.9324, 0.6224, 0.0], [4.9703, 4.1624, 3.2016, 13.8154, 3.0654, 2.8028, 4.4688, 11.0093, 1.8374, 8.379, 5.4508, 5.9827, 6.0446, 6.2563, 3.3389, 1.9487, 6.9752, 5.4566, 0.0], [3.3259, 30.498, 4.7493, 1.7811, 8.1888, 6.1795, 2.8594, 1.5954, 2.4578, 3.2144, 5.6074, 1.4288, 11.5366, 14.2483, 0.0, 1.5362, 0.0, 0.7835, 1.1784, 1.6934, 0.0, 2.3712, 0.0, 2.3637, 1.8981, 0.1886, 0.0], [1.535, 35.052, 41.5292, 6.8147, 0.0, 12.9494, 0.8243, 1.0564, 4.9157, 10.7281, 10.391, 13.1771], [7.0454, 40.158, 16.4571, 10.2221, 3.6326, 9.4858, 3.5549, 3.6868, 3.3144, 12.5763, 9.2506, 6.7738, 15.1142, 2.2344, 0.1676, 1.7146, 1.8885, 3.0895, 4.2739, 0.5733, 0.912, 1.1045, 1.0428, 0.8658, 0.9807, 1.5295], [6.157, 16.3344, 5.6414, 16.2347, 9.3286, 3.4957, 9.7574, 7.691, 4.4453, 24.4819, 9.7608, 7.0104, 4.2413, 4.2993, 7.8988, 2.7418, 0.7203, 5.8824, 0.6552, 7.6472, 12.8538, 5.6203, 0.4347], [0.0, 56.028, 32.9141, 8.5765, 0.0, 2.7946, 1.9835, 3.9886, 0.0, 6.1877, 4.2134, 3.1752, 8.423, 6.6797, 5.9491, 2.256, 1.4867, 6.6566, 6.9619, 0.8232, 9.576, 2.5272, 14.1126, 4.5954, 4.2058, 1.0304], [0.0, 77.556, 49.5921, 7.5891, 19.2714, 15.0355, 7.3674, 0.9702, 2.3647, 9.7236, 12.4502, 6.6856, 5.1332, 9.9974], [82.386, 56.5504, 0.0, 19.764, 36.2112, 4.4307, 7.5891, 5.735, 0.0, 27.023, 0.0, 0.0, 4.4083], [4.8413, 45.954, 42.6337, 14.0554, 8.7429, 9.0134, 1.4426, 6.5542, 4.6364, 14.1835, 8.8387, 3.4574, 5.8741, 9.4464, 8.6789, 9.7476, 4.1285, 5.3239, 7.0389, 8.0371, 2.0286, 9.4848, 1.5538, 23.5325, 6.327, 10.0147, 2.0125], [11.2963, 58.236, 46.2786, 2.3813, 8.1272, 15.7834, 4.3277, 1.0996, 1.1731, 8.478, 10.8029, 8.1144, 10.2665, 6.1402, 9.949, 6.0608, 2.5944, 2.1898, 9.6824, 11.5315, 2.3079, 11.1264, 1.9656, 15.1206, 10.3563, 8.7888, 0.0], [0.0, 75.624, 48.1562, 4.3754, 13.9148, 9.8794, 6.337, 5.0019, 8.9004, 11.5718, 4.7837, 9.4374, 7.1971, 16.7674, 7.9262, 5.4464, 0.6994, 2.4912, 6.7203, 4.3277, 2.205, 16.4616, 0.2059, 9.9066, 11.9214, 5.3751, 0.7245], [0.0, 56.718, 42.5233, 18.605, 8.4967, 11.8474, 3.0139, 5.6487, 0.0, 18.523, 13.0838, 10.5487, 24.1315, 10.2336, 9.455, 4.9995, 4.5571, 3.2948, 6.5929, 5.9405, 1.3524, 10.944, 2.4523, 13.6954, 7.8921, 5.0168, 1.6905], [15.7637, 58.512, 53.7891, 6.0016, 30.0462, 18.1843, 10.6131, 5.3038, 9.5707, 15.3488, 11.1197, 6.7738, 15.241, 31.4093, 4.163, 4.0499, 8.4826, 2.8528, 6.7522, 3.8976, 2.6607, 11.3088, 3.2386, 9.2462, 12.987, 5.1676, 2.1896], [7.9901, 117.3, 72.4552, 10.2802, 19.2098, 23.4586, 13.7816, 11.9874, 16.609, 24.7509, 27.2448, 4.4453, 12.595, 44.713, 11.6894, 10.9486, 8.4826, 5.4042, 8.3765, 10.5907, 5.145, 14.136, 5.0544, 7.0215, 19.7136, 5.394, 3.22], [28.7525, 102.672, 72.4552, 12.7002, 32.4474, 24.5606, 15.4045, 9.9607, 9.5148, 28.1662, 30.793, 4.5688, 25.0312, 46.7597, 13.3358, 10.5575, 2.0304, 6.9712, 3.0257, 16.6925, 4.557, 11.5368, 4.1371, 17.0672, 15.5844, 3.904, 1.5295]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

