created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Crusader Siolith", "Rosreipp", "Black Raspberry Pie", "Nidircc", "Newtype Khan", "Cat Wigglebooty", "Primal Clone", "Eibh\u00ebar", "Etcheryy", "Tootsie Pop Rocks", "Fribble Bibble", "Venomina The Siren", "Tegan Parker", "Zaedy Zae", "Drevarr Moonwillow", "Arriasa", "Artakama Nahid", "Tribal Z"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Chronomancer", "Tempest", "Spellbreaker", "Scrapper", "Chronomancer", "Chronomancer", "Virtuoso", "Scrapper", "Scrapper", "Tempest", "Tempest", "Druid", "Scrapper", "Druid", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.032, 0.0, 0.0, 0.0, 0.0813, 0.0, 0.0, 0.2278, 0.0, 0.3636, 0.2857, 0.2326, 0.0, 0.1709, 0.4154, 0.2459, 0.1909, 0.1282, 0.4, 0.325, 0.2623, 0.1461, 0.0, 0.4054], [0.119, 0.0, 0.0, 0.0, 0.2062, 0.0, 0.3585, 0.2889, 0.0909, 0.0606, 0.25, 0.1628, 0.0889, 0.1201, 0.7385, 0.3607, 0.1636, 0.0769, 0.55, 0.3, 0.0328, 0.3258, 0.3514], [0.0, 0.0, 0.0629, 0.9875, 0.1373, 0.9057, 1.1222], [0.1602, 0.0, 0.0, 0.0063, 0.5125, 0.0, 0.5472, 0.2611, 0.0, 0.2273, 0.4107, 0.0, 0.0, 0.1501, 0.0308, 0.7213, 0.2727, 0.2372, 0.0, 0.85, 0.0, 0.5056, 0.0, 0.4324], [0.0455, 0.5606, 0.2857, 0.0233, 0.1778, 0.4157, 0.5692, 0.6721, 0.2455, 0.3269, 0.85, 0.275, 0.3443, 0.5393, 0.0, 0.8243], [0.2128, 0.0, 0.0938, 0.0, 0.1875, 0.0392, 0.3396, 0.4167, 0.0455, 0.2273, 0.1429, 0.093, 0.1778, 0.2564, 0.3077, 0.5738, 0.3727, 0.1474, 0.75, 0.1, 0.2951, 0.4607, 0.2162], [0.6818, 0.5536, 0.0, 0.3111, 0.5635, 0.6769, 1.082, 0.4364, 0.4423, 2.3, 0.125, 0.5246, 0.382, 0.0], [0.0435, 0.0, 0.0, 0.0, 0.4188, 0.0, 0.566, 0.4611, 0.0, 0.2576, 0.4821, 0.0, 0.0222, 0.2333, 0.2923, 0.9016, 0.5273, 0.1538, 1.8, 0.375, 1.0492, 0.8315, 0.8649], [0.1098, 0.4545, 0.0, 0.0, 0.5125, 0.0, 0.6981, 0.4556, 0.0, 0.9848, 0.2857, 0.0, 0.0, 0.2656, 0.0769, 0.6557, 0.4455, 0.1026, 1.45, 0.625, 0.4754, 0.8989, 0.0, 0.8919], [0.27, 0.6061, 0.0, 0.0, 0.425, 0.0, 0.6415, 0.4667, 0.0, 0.2727, 0.5, 0.0, 0.0, 0.2702, 0.3692, 0.9344, 0.3, 0.2949, 0.9, 1.1, 0.4098, 0.3933, 0.5541], [0.4096, 0.0, 0.0, 0.0, 0.4625, 0.7736, 0.5944, 0.0, 0.6818, 0.7321, 0.2326, 0.4889, 0.6166, 0.0, 1.082, 0.5455, 0.3205, 1.55, 0.75, 0.459, 0.6517, 1.0], [0.6224, 0.0, 0.0312, 0.1069, 0.8625, 0.0, 0.283, 0.9333, 1.2273, 0.5758, 0.875, 0.2093, 0.9556, 0.0231, 1.0154, 0.8197, 0.3182, 0.2756, 0.2, 0.775, 0.7541, 0.618, 1.1892], [0.4691, 0.0, 0.0, 0.9688, 0.0, 0.8491, 1.0611, 0.803, 0.1964, 0.1395, 0.0667, 0.3418, 0.9846, 0.9016, 1.1091, 0.7692, 1.5, 0.175, 0.8525, 1.2022, 1.2027], [0.7277, 0.0, 0.0692, 0.8438, 0.098, 0.717, 1.1722, 0.2273, 1.0455, 1.25, 0.1395, 0.4444, 0.6767, 0.6154, 1.8361, 1.0909, 0.5192, 3.3, 0.35, 0.7049, 1.1461, 0.7568], [1.7849, 0.0303, 0.0312, 0.0629, 1.2563, 0.0392, 1.717, 1.7444, 0.2727, 0.7424, 0.4821, 0.0, 0.8, 0.843, 1.6308, 1.0656, 1.1909, 0.4423, 3.45, 0.6, 0.459, 1.6067, 0.0, 3.4324], [1.4279, 1.1818, 0.2188, 0.6352, 1.7188, 0.5882, 1.3396, 1.5722, 1.1364, 0.4848, 1.2143, 0.4884, 0.7333, 1.1339, 1.5385, 2.0, 0.8636, 1.0321, 2.45, 1.775, 0.8525, 1.2921, 0.15, 2.1216], [1.5309, 0.0303, 0.0, 0.3711, 1.4688, 0.0588, 1.0755, 1.8556, 0.8182, 1.0152, 0.5893, 0.0698, 0.7333, 0.7691, 2.6154, 3.8361, 1.4273, 1.0833, 2.15, 0.7, 1.2295, 2.2247, 0.1, 2.2027], [1.0137, 0.0, 0.0938, 0.0629, 1.0813, 0.6471, 1.9057, 1.8944, 0.4091, 1.6515, 1.8214, 0.5581, 1.1111, 1.3903, 0.0, 2.6066, 1.2636, 1.141, 2.55, 1.25, 1.3607, 2.1348, 3.1757], [1.5469, 0.0, 0.1824, 1.2812, 0.098, 1.2642, 1.7167, 0.2727, 1.7121, 1.0714, 0.1395, 0.6222, 1.2818, 1.7077, 2.1475, 1.2818, 1.0897, 4.95, 1.65, 1.2131, 2.2022, 0.05, 2.5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

