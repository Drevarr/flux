created: 20230419215809000
creator: Drevarr
modified: 20230705163525937
modifier: drevarr
tags: ChartData
title: 202304192158_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Cedryn X", "Smol Gluvs", "Nazhul Naxxremis", "Elonith Requiem", "Panther B Me", "Rina Of Theros", "Kmpek", "Lord Erin The Wise", "Smol Daddy Tika", "My Birthday Girl", "Daddys Lil Orchid", "Sp\u00edcy Cheese", "Be\u00eb", "Kos\u00e4ir", "Mike The Archmagus", "Xyntharos", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Berserker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Vindicator", "Weaver", "Berserker", "Scrapper", "Vindicator", "Berserker", "Scourge", "Vindicator", "Weaver", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 25478.0, 4460.0, 21431.0, 14965.0, 21898.0, 21720.0, 0.0, 17862.0, 1745.0, 7438.0, 14365.0, 2807.0, 25174.0, 1642.0, 778.0, 717.0, 2219.0, 2003.0, 707.0], [11983.0, 3130.0, 6613.0, 3224.0, 15851.0, 29550.0, 3840.0, 26639.0, 0.0, 0.0, 14679.0, 1901.0, 24824.0, 30636.0, 2096.0, 18170.0, 516.0, 2834.0, 2254.0, 2517.0, 3280.0, 0.0], [0.0, 753.0, 15002.0, 7559.0, 15265.0, 12369.0, 10728.0, 45223.0, 0.0, 490.0, 13218.0, 0.0, 28843.0, 22116.0, 2174.0, 13250.0, 14625.0, 1167.0, 2567.0, 192.0, 6097.0, 3639.0], [24618.0, 22610.0, 39842.0, 29381.0, 60426.0, 1204.0, 16332.0, 0.0, 24767.0, 20670.0, 0.0, 24212.0, 9620.0, 1514.0, 512.0], [26144.0, 21947.0, 47960.0, 0.0, 6503.0, 26112.0, 0.0, 2383.0, 10579.0, 13586.0, 76625.0, 17108.0, 14026.0, 10412.0, 3437.0, 5216.0, 10316.0], [1116.0, 10513.0, 56862.0, 17655.0, 18378.0, 50743.0, 20499.0, 4838.0, 0.0, 11943.0, 32842.0, 8134.0, 36409.0, 67059.0, 12212.0, 4628.0, 26969.0, 4535.0, 1209.0, 0.0, 2402.0, 24693.0], [5372.0, 3307.0, 42704.0, 31999.0, 21313.0, 52224.0, 38805.0, 22512.0, 0.0, 1040.0, 12184.0, 5109.0, 45601.0, 28625.0, 4960.0, 55578.0, 22883.0, 12356.0, 8298.0, 1267.0, 2549.0, 30194.0], [0.0, 0.0, 46076.0, 22707.0, 50771.0, 47116.0, 35133.0, 60740.0, 0.0, 3091.0, 27828.0, 0.0, 69915.0, 0.0, 8487.0, 61558.0, 21854.0, 14149.0, 6372.0, 6861.0, 0.0, 8578.0], [2691.0, 34515.0, 49478.0, 57565.0, 48553.0, 51852.0, 36908.0, 0.0, 5426.0, 13138.0, 0.0, 28420.0, 29640.0, 10473.0, 56658.0, 19134.0, 17714.0, 28240.0, 3801.0, 11784.0], [8791.0, 63290.0, 26559.0, 22584.0, 75922.0, 37314.0, 40603.0, 0.0, 553.0, 28503.0, 0.0, 65788.0, 64481.0, 0.0, 83072.0, 18811.0, 1103.0, 9916.0, 2874.0, 536.0, 1670.0], [14116.0, 5955.0, 43019.0, 12596.0, 76300.0, 58627.0, 59100.0, 65240.0, 0.0, 20814.0, 24296.0, 4009.0, 1922.0, 78236.0, 0.0, 20887.0, 24086.0, 11246.0, 17974.0, 12796.0, 4823.0, 6327.0], [0.0, 2196.0, 48912.0, 24847.0, 33780.0, 71099.0, 71718.0, 57202.0, 0.0, 1696.0, 24987.0, 0.0, 94561.0, 15488.0, 68580.0, 12774.0, 18270.0, 7640.0, 6200.0, 941.0, 2026.0], [0.0, 8767.0, 84001.0, 69559.0, 45037.0, 50240.0, 0.0, 3970.0, 0.0, 4220.0, 49754.0, 1656.0, 45683.0, 74792.0, 16248.0, 71623.0, 39905.0, 15307.0, 18458.0, 12339.0, 15337.0, 20248.0], [13345.0, 67346.0, 28807.0, 85730.0, 64433.0, 26479.0, 81981.0, 0.0, 1056.0, 31403.0, 0.0, 56338.0, 50137.0, 6921.0, 86771.0, 13771.0, 14911.0, 12724.0, 4646.0, 1981.0, 12394.0], [0.0, 2138.0, 30718.0, 36098.0, 51142.0, 90571.0, 66572.0, 131494.0, 0.0, 731.0, 7256.0, 4239.0, 80996.0, 136714.0, 20914.0, 4681.0, 364.0, 10210.0], [1929.0, 955.0, 99834.0, 47564.0, 44967.0, 8848.0, 53503.0, 144067.0, 0.0, 4476.0, 34303.0, 9263.0, 95473.0, 52913.0, 20209.0, 29593.0, 0.0, 9233.0, 30989.0, 0.0, 6776.0, 1792.0], [0.0, 0.0, 53776.0, 54442.0, 38766.0, 33577.0, 106946.0, 84422.0, 0.0, 0.0, 40879.0, 0.0, 134226.0, 195385.0, 0.0, 64681.0, 37495.0, 2079.0, 3545.0, 12238.0, 7879.0, 18676.0], [7764.0, 27364.0, 112873.0, 69950.0, 69896.0, 129633.0, 145013.0, 94768.0, 0.0, 8420.0, 93231.0, 5929.0, 76936.0, 211437.0, 52101.0, 112685.0, 50724.0, 3558.0, 12217.0, 2370.0, 5226.0, 2075.0], [0.0, 0.0, 210475.0, 82279.0, 123720.0, 142808.0, 155763.0, 108858.0, 0.0, 69683.0, 4442.0, 160143.0, 208830.0, 36857.0, 176891.0, 92814.0, 52281.0, 56862.0, 5822.0, 9506.0, 41429.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

