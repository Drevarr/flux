created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Mort\u00e4rion", "Squishy Jellyfish", "Necrotic Windrunner", "Ateriuz", "Dark Sidiuz", "Mellody Moon", "Latedoctor", "Mar\u00eda Callas", "Dugup", "Aira Draugr", "Oo Dads Mad", "Alhana Lafay", "N\u00edcki M\u00edraj", "Daphne Agla\u00e9", "Etchery Howls", "Cedryn X", "Lord Erin The Wise", "Arriasa", "Raelyn Sunray", "Meme Soulmessor", "Belvyn Brightblade", "Kurn The Drunk", "Tegan Parker", "Grasszanine", "Rafaellagabriela", "Cat Wigglebooty", "Xanvias Einzbern", "Glorious Gluvs", "Rina Of Theros", "Jmbrage Rev", "Mike The Archmagus", "Tootsie Pop Rocks", "Venomina", "Klengah", "Bella Sassy", "Sister Elon\u00edth", "Leafzel", "Arcanophage Farra", "Black Raspberry Pie", "Sub Train", "Mistwalker Cael", "Be\u00eb", "Eibh\u00ebar", "Koralia Danai", "Solus Luxes", "Morton Saltbringer", "Zaedy Zae", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Primal Clone"];
const professions = ["Scrapper", "Firebrand", "Reaper", "Berserker", "Reaper", "Dragonhunter", "Reaper", "Dragonhunter", "Berserker", "Herald", "Berserker", "Reaper", "Chronomancer", "Reaper", "Druid", "Berserker", "Tempest", "Druid", "Firebrand", "Reaper", "Firebrand", "Reaper", "Tempest", "Spellbreaker", "Firebrand", "Scrapper", "Berserker", "Berserker", "Reaper", "Vindicator", "Weaver", "Scrapper", "Reaper", "Druid", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Firebrand", "Herald", "Reaper", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Druid", "Scrapper", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9, 18], [9, 6, 7, 9], [3, 1, 6, 4, 5, 2, 1, 0, 4, 2, 4], [8, 7, 7, 6, 10], [15, 1, 1, 4, 3, 3, 2, 11, 0, 3], [23, 0, 1, 5, 5, 0, 11], [7, 3, 0, 10, 11, 2, 10, 0, 4], [16, 3, 0, 2, 7, 10, 12, 0, 5], [8, 6, 0, 8, 23, 8, 2, 0, 5], [19, 0, 1, 6, 12, 10, 18, 2], [31, 0, 7, 5, 0, 5, 17, 3, 3, 0, 3], [22, 8, 3, 0, 6, 10, 4, 10, 0, 11], [27, 0, 4, 6, 6, 4, 4, 7, 3, 0, 4, 10], [30, 0, 8, 4, 3, 7, 10, 7, 0, 3, 2, 0, 2, 5], [5, 2, 8, 29, 10, 10, 3, 4, 2, 1, 7], [18, 0, 7, 6, 4, 18, 1, 8, 0, 2, 5, 3, 6, 4], [6, 3, 3, 21, 3, 10, 0, 11, 5, 5, 5, 10], [2, 7, 4, 19, 12, 12, 5, 2, 6, 8, 6], [35, 9, 13, 10, 6, 3, 5, 9], [9, 1, 1, 6, 8, 12, 31, 6, 17], [35, 2, 4, 8, 8, 0, 7, 25, 5], [26, 3, 4, 0, 9, 19, 6, 8, 0, 8, 6, 2, 2, 5], [9, 5, 0, 22, 11, 14, 0, 6, 6, 8, 7, 12], [9, 9, 0, 8, 22, 6, 11, 10, 6, 5, 3, 11], [3, 3, 0, 10, 29, 5, 12, 0, 12, 5, 4, 10, 8], [30, 2, 2, 3, 3, 7, 23, 3, 10, 5, 10, 7], [22, 2, 1, 2, 6, 0, 8, 3, 10, 16, 0, 11, 5, 7, 6, 8], [22, 1, 2, 7, 3, 0, 4, 11, 8, 12, 0, 10, 4, 9, 10, 7], [20, 0, 8, 5, 0, 4, 27, 4, 15, 0, 7, 3, 5, 7, 10], [16, 0, 1, 20, 7, 5, 34, 13, 20], [34, 3, 1, 4, 4, 0, 5, 23, 7, 8, 0, 6, 5, 5, 7, 11], [43, 0, 3, 5, 7, 7, 17, 8, 6, 0, 6, 10, 4, 6, 7], [53, 2, 2, 5, 5, 8, 17, 5, 15, 0, 5, 2, 5, 5, 1], [39, 2, 4, 7, 4, 0, 6, 24, 9, 8, 0, 5, 7, 5, 4, 6], [4, 7, 0, 9, 35, 12, 16, 16, 4, 5, 10, 12], [11, 4, 0, 8, 32, 7, 20, 0, 9, 5, 7, 11, 19], [33, 2, 2, 14, 7, 0, 7, 12, 16, 9, 6, 1, 5, 9, 17], [20, 1, 2, 4, 9, 0, 8, 27, 9, 18, 12, 4, 7, 12, 14], [55, 2, 4, 6, 3, 0, 5, 32, 4, 10, 0, 2, 2, 12, 6, 13], [38, 2, 1, 10, 7, 0, 4, 30, 11, 17, 0, 7, 10, 7, 9, 11], [23, 2, 2, 3, 12, 0, 8, 26, 12, 28, 0, 13, 2, 12, 9, 12], [55, 2, 1, 8, 8, 6, 18, 8, 20, 0, 5, 7, 11, 6, 12], [15, 6, 0, 14, 79, 7, 17, 0, 9, 3, 4, 8, 7], [57, 1, 7, 6, 7, 0, 10, 34, 12, 13, 8, 4, 6, 8, 9], [59, 0, 2, 11, 9, 0, 8, 22, 9, 20, 0, 6, 8, 7, 8, 13], [51, 1, 0, 8, 19, 0, 6, 26, 12, 30, 0, 4, 10, 4, 3, 8], [52, 1, 3, 6, 6, 7, 33, 10, 16, 8, 6, 12, 9, 17], [73, 2, 4, 7, 4, 0, 12, 42, 12, 17, 0, 16, 9, 11, 12, 11], [58, 1, 6, 28, 18, 0, 13, 39, 12, 18, 0, 14, 30, 22, 12, 10], [42, 0, 19, 9, 1, 7, 39, 44, 23, 0, 6, 7, 58, 7, 24]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

