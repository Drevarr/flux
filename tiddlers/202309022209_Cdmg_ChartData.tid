created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Cael", "Aethli", "Belvyn Brightblade", "Puppy Sky", "Revenant Brandorf", "Leriel Nova", "Melmyr", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Koralia Danai", "Sofya De Nova", "Crusader Siolith", "Bella Sassy", "Sly The Ele", "Drevarr Moonwillow", "Daphne Agla\u00e9", "Lady Sherena", "Jamaass", "Gabe Malhorn", "Mort\u00e4rion", "Sight Beyond Sights", "Rina Of Theros", "Greg The Knight", "Willowshaven", "Unbreakable Nemesis", "Val Haden", "Sub Train", "Glorious Gluvs", "Lord Erin The Wise", "Eat More Rice", "Sight Beyond Sights", "Jamaass", "Fqa Necr", "Melmyr", "Elfina Lightborn", "Be\u00eb", "Scarlet Redwitch", "Legacy Of Mathus", "Xanvias Einzbern"];
const professions = ["Vindicator", "Renegade", "Firebrand", "Reaper", "Herald", "Tempest", "Willbender", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Reaper", "Willbender", "Scourge", "Firebrand", "Scrapper", "Renegade", "Reaper", "Firebrand", "Catalyst", "Firebrand", "Reaper", "Dragonhunter", "Berserker", "Weaver", "Specter", "Vindicator", "Reaper", "Scourge", "Firebrand", "Berserker", "Reaper", "Harbinger", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.8531, 0.0, 21.2133, 9.863, 0.0, 16.3684, 0.0, 9.9234, 13.0483, 14.1216], [20.6897, 24.0836, 17.9783, 33.6688, 49.1151], [2.1808, 0.0, 9.4898, 75.9315, 0.0, 66.1053, 3.3478, 0.1351, 8.485, 40.5495], [9.9661, 0.0, 18.5836, 6.5068, 0.0, 68.1053, 0.0, 0.0, 0.0, 17.1167, 21.8333], [0.0, 0.0, 35.3913, 0.0, 34.7512, 0.0, 47.5747, 29.624, 16.8043, 6.3, 17.631], [0.0, 10.0563, 35.863, 0.0, 29.1579, 0.0, 1.9391, 0.0, 17.1833, 12.8378, 13.0465, 19.6168, 47.8435, 3.1, 6.5072, 0.1441, 12.8621], [2.6928, 67.9452, 0.0, 0.0, 0.0, 0.0, 18.7917, 152.9767, 4.243, 65.3391, 0.0, 6.5797, 15.4125, 7.7421], [2.0904, 14.1843, 20.3014, 0.0, 87.2895, 0.8065, 0.0, 0.4595, 9.3267, 10.518, 28.1628, 21.8224, 13.4522, 3.9818, 6.5167, 6.036, 8.6552, 6.0167, 4.6014, 17.4688, 9.7024], [15.3178, 61.887, 15.3727, 16.2871, 45.3874, 23.5402, 17.7827, 2.1594, 27.9187, 54.8095], [2.4011, 0.0, 18.5546, 4.5205, 37.4868, 0.0, 0.0, 8.23, 6.982, 33.1395, 3.4953, 73.8, 0.0, 12.0431, 10.973, 15.5747, 17.4318, 8.529, 9.1625, 3.1905], [4.075, 20.3423, 133.3721, 139.9907, 51.9652, 2.3273, 13.8038, 19.5676, 51.3563, 13.4875, 6.9275, 3.5875, 6.1587], [0.0, 16.0529, 32.2466, 0.0, 10.3421, 7.3548, 0.687, 0.0, 6.1, 9.7793, 56.814, 31.1121, 117.1043, 8.0364, 11.0191, 14.955, 18.6897, 8.8384, 4.4565, 4.325, 14.8968], [0.0, 15.5154, 2.3699, 0.0, 10.0132, 0.0, 0.0, 8.1617, 11.3243, 41.4884, 18.6729, 11.287, 35.1, 3.0048, 27.3694, 57.3563, 23.0195, 20.7681, 12.3562, 26.9365], [0.7945, 0.0, 42.8421, 0.0, 4.027, 7.2967, 0.1396, 9.7674, 3.4393, 85.9043, 0.9545, 52.1818, 3.8468, 63.3793, 39.0669, 17.6087, 29.0562, 14.4881], [1.1469, 0.0, 13.8106, 16.0548, 0.0, 29.6316, 0.0, 1.8696, 0.0, 9.0267, 25.8018, 73.0465, 26.8411, 45.6783, 0.0, 2.9234, 32.2793, 19.0575, 17.6992, 42.6522, 29.2563, 18.5278], [0.0, 0.0, 19.8208, 37.863, 0.0, 28.8421, 0.0, 0.0, 17.085, 17.7658, 208.0233, 52.5047, 50.913, 0.0, 10.244, 0.0, 13.5862, 1.4067, 5.7029, 31.3438, 9.3294], [0.0, 108.8325, 371.5856, 0.0, 1.8579], [575.9217], [4.2599, 0.0, 25.9164, 11.0822, 0.0, 68.3947, 0.0, 0.0, 0.0, 8.485, 11.7973, 21.8372, 23.3084, 42.2174, 2.7273, 24.622, 22.5766, 63.3448, 19.3649, 9.8913, 14.4437, 35.4603], [0.8192, 0.0, 21.0461, 102.5068, 0.0, 49.1184, 28.9478, 0.0, 23.43, 6.8378, 78.9767, 62.4579, 10.5565, 1.1909, 10.1818, 0.0, 15.2874, 27.571, 22.6884, 17.9875, 14.7778], [0.0, 572.9452, 0.0, 202.2895, 125.3571], [0.0, 0.0, 21.6177, 49.2466, 0.0, 24.2237, 0.0, 1.2348, 0.0, 27.7267, 14.6622, 49.0, 12.8411, 40.5652, 4.4273, 26.7847, 22.6486, 63.4713, 51.7131, 29.2754, 13.5062, 28.246], [34.9863, 1.3553, 4.129, 0.0, 0.0, 30.8717, 42.2928, 6.5701, 114.1739, 4.1727, 24.0574, 12.009, 29.9885, 42.3816, 87.1739, 22.0688, 40.9603], [44.1767, 29.3829, 0.0, 118.7757, 21.487, 0.0, 0.0, 93.3604, 0.0, 0.0, 103.2464, 53.2687, 79.127], [203.2192, 0.0, 44.6774, 3.7478, 0.0, 50.035, 21.2207, 0.0, 18.6411, 29.5676, 24.5057, 49.312, 25.087, 35.125, 57.7183], [26.1053, 0.0, 0.8522, 0.0, 36.8333, 54.0586, 53.9767, 61.9907, 73.0261, 31.0818, 27.9809, 7.2252, 31.8046, 46.6323, 31.3333, 32.075, 47.9802], [7.9435, 0.0, 32.2696, 128.3288, 0.0, 90.5263, 0.0, 1.3565, 0.7838, 16.645, 0.0, 226.4651, 180.8505, 110.0087, 10.5455, 55.9187, 16.9189, 74.7011], [0.0, 0.0, 37.2867, 39.6438, 0.0, 0.0, 0.0, 0.0, 0.0, 16.7867, 36.9595, 7.7442, 59.5234, 280.313, 6.6091, 39.4689, 25.045, 35.4138, 27.5989, 61.5797, 45.3, 11.9246], [98.3158, 0.0, 0.0, 0.0, 29.2933, 77.7162, 10.3721, 11.028, 113.5478, 82.8455, 39.5885, 7.8018, 23.8506, 40.4708, 99.9348, 23.4312, 69.4802], [14.5, 0.0, 0.0, 0.0, 186.6184, 432.8188, 30.3438], [0.0, 206.7679, 0.0, 0.0, 0.0, 10.5067, 40.3874, 0.0, 6.215, 13.1391, 0.0, 0.027, 0.0, 0.4429, 2.7029, 2.1375], [15.4079, 7.129, 0.0, 1.9324, 27.9867, 97.8604, 62.9302, 23.2991, 531.4, 144.7081, 20.1261, 23.9195, 9.3287, 28.6594, 56.5375, 16.0516], [75.0818, 106.4115, 66.7477, 116.8736, 222.4206, 151.2391, 66.9688, 95.5913], [392.509, 163.0455, 124.5455, 766.027, 0.0], [0.0, 0.0, 4.4685, 97.205, 37.6622, 324.4186, 34.3832, 64.3739, 2.0, 144.4019, 65.4595, 101.4253, 134.1699, 137.3986, 52.2563, 57.2421], [12.452, 0.0, 101.5461, 134.274, 0.0, 93.1579, 0.0, 2.113, 4.6486, 76.955, 49.1892, 97.4884, 103.7944, 115.7217, 18.2727, 57.7081, 34.6847, 86.3908, 55.766, 71.5362, 20.0437, 108.7619], [0.0, 18.9099, 237.3017, 395.1036, 0.0, 309.1121], [31.4124, 0.0, 73.0717, 112.0411, 0.0, 61.1974, 0.0, 0.0, 2.2072, 42.3767, 44.6577, 201.186, 102.5794, 384.4696, 19.9182, 108.6316, 18.3694, 4.931, 123.9415, 51.1812, 179.1625, 53.4722], [45.9209, 0.0, 149.4147, 227.9726, 0.0, 92.4737, 3.9565, 13.2072, 147.19, 149.5631, 260.1628, 378.8318, 481.2696, 7.3273, 200.1053, 165.1081, 130.6552, 66.6602, 111.2826, 410.3687, 164.6865]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

