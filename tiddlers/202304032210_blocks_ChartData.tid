created: 20230403221011000
creator: Drevarr
modified: 20230705163524242
modifier: drevarr
tags: ChartData
title: 202304032210_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Slingsshot", "Zenek Tryst", "Raemonnd Redington", "Riazera", "Lagertha Scorned", "Venomina The Siren", "Ateriuz", "Thedrunkenbrick", "Seren Nightroad", "Fribble Bibble", "High Sorcer Baradun", "Your Arch Nemesis", "Sumatra Satyricon", "Lord Erin The Wise", "Rozaalyna", "Cat Wigglebooty", "Zeharah", "Tootsie Pop Rocks", "Xyntharos", "My Birthday Girl", "Tika Sumiko", "Smol Gluvs", "Viral Marketing", "Sister Elon\u00edth", "Legacy Of Mathus", "Be\u00eb", "Zaylen Harker", "Etch\u00e9ry", "Ak\u00e1nt\u00f3r", "Mac Chiato", "Newtype Khan", "Jeckyll Mbs", "Tegan Parker", "Sygaldry Verdandi", "Xanvias Tlesel", "Black Raspberry Pie", "Blancooo Padreee", "Koralia Danai", "Primal Clone", "Il Dim Snail Il", "Tribal S", "Mistwalker Caelon", "Johosh The Great", "Solus Sanctus", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Bella Sassy", "Eibh\u00ebar"];
const professions = ["Untamed", "Tempest", "Soulbeast", "Soulbeast", "Scrapper", "Tempest", "Berserker", "Firebrand", "Scourge", "Scrapper", "Tempest", "Scrapper", "Soulbeast", "Weaver", "Scourge", "Scrapper", "Dragonhunter", "Scrapper", "Vindicator", "Scrapper", "Tempest", "Scourge", "Firebrand", "Dragonhunter", "Spellbreaker", "Scourge", "Firebrand", "Berserker", "Druid", "Tempest", "Spellbreaker", "Berserker", "Tempest", "Firebrand", "Berserker", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Dragonhunter", "Druid", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3, 10, 2, 7, 0, 2, 5], [1, 0, 6, 11, 2, 0, 0, 9, 0, 1, 3, 0, 0], [0, 4, 3, 3, 1, 0, 6, 4, 1, 1, 0, 0, 11], [0, 0, 0, 4, 1, 1, 3, 12, 2, 0, 0, 0, 8, 0, 3, 1, 0, 0], [5, 2, 0, 1, 1, 4, 8, 1, 2, 0, 0, 7, 0, 6], [9, 3, 4, 5, 0, 0, 1, 9, 3, 1, 0, 5, 1, 1, 0, 0], [7, 3, 0, 1, 11, 2, 1, 0, 0, 12, 0, 3, 3, 0, 0], [4, 7, 8, 5, 2, 1, 1, 19, 10], [10, 26, 7, 13, 0, 0, 4], [4, 0, 0, 7, 6, 3, 5, 15, 4, 0, 0, 0, 8, 0, 6, 4, 0, 0], [8, 19, 0, 12, 2, 1, 4, 10, 4, 1, 0, 0, 10, 3, 0, 0], [27, 12, 2, 1, 2, 2, 8, 12, 1, 0, 0, 7, 6, 0, 0], [12, 24, 5, 9, 1, 4, 12, 5, 6, 2, 0, 1, 4, 0, 3, 1, 0, 0], [10, 34, 6, 9, 1, 1, 7, 11, 2, 0, 0, 7, 0, 0, 2], [20, 36, 6, 27, 3], [11, 24, 5, 14, 1, 1, 10, 14, 6, 3, 0, 10, 4, 0, 0, 0], [49, 6, 2, 0, 1, 29, 1, 10, 5, 1, 1], [12, 24, 6, 12, 2, 1, 7, 14, 6, 0, 0, 12, 0, 9, 1, 0, 0], [15, 31, 6, 12, 2, 0, 7, 16, 4, 2, 0, 0, 18, 0, 5, 1, 0, 1], [14, 30, 7, 14, 2, 2, 16, 6, 6, 6, 0, 0, 21, 0, 4, 0, 0, 0], [12, 25, 10, 14, 4, 2, 5, 22, 5, 0, 0, 0, 22, 0, 8, 0, 0, 2], [13, 47, 7, 14, 2, 4, 14, 27, 1, 3, 0, 0, 0], [16, 41, 8, 21, 5, 4, 9, 24, 6], [5, 3, 25, 45, 3, 5, 0, 1, 38, 2, 6, 1, 2, 0], [12, 28, 6, 18, 3, 1, 10, 22, 8, 6, 0, 0, 21, 0, 5], [20, 22, 7, 15, 3, 2, 12, 25, 5, 5, 0, 0, 27, 0, 2, 1, 0], [18, 39, 7, 13, 3, 5, 23, 4, 3, 0, 24, 6, 2, 1, 1], [9, 43, 8, 19, 2, 2, 13, 30, 4, 3, 0, 24, 0], [16, 33, 10, 17, 4, 3, 9, 29, 7, 10, 0, 0, 15, 0, 6, 0, 1, 0], [14, 30, 6, 13, 3, 1, 17, 26, 9, 9, 0, 1, 26, 0, 5, 0, 0, 0], [15, 46, 3, 21, 3, 0, 12, 18, 11, 3, 0, 1, 15, 0, 9, 4, 0, 1], [14, 42, 4, 19, 3, 0, 20, 21, 3, 3, 0, 1, 27, 0, 5, 3, 0, 0], [12, 50, 8, 17, 5, 2, 19, 27, 5, 2, 20, 4, 0, 1, 0], [16, 39, 5, 21, 5, 3, 17, 23, 3, 8, 1, 20, 12, 1, 1, 0], [12, 40, 6, 19, 2, 2, 19, 28, 7, 3, 0, 0, 28, 0, 4, 5, 0, 1], [17, 44, 9, 16, 3, 3, 13, 25, 8, 6, 0, 0, 29, 0, 3, 2, 0, 0], [13, 48, 7, 21, 3, 1, 16, 30, 6, 6, 0, 0, 19, 0, 16, 1, 1, 0], [17, 39, 7, 23, 5, 3, 25, 28, 6, 4, 23, 0, 5, 3, 1, 1], [21, 44, 6, 28, 3, 4, 15, 26, 6, 8, 0, 25, 0, 7, 0, 0, 0], [18, 33, 9, 12, 6, 2, 12, 36, 1, 6, 0, 1, 33, 1, 24, 2, 1, 2], [9, 50, 10, 20, 4, 5, 20, 34, 14, 6, 0, 0, 20, 8], [18, 43, 9, 18, 4, 2, 20, 21, 5, 5, 0, 0, 38, 0, 14, 2, 1, 2], [17, 44, 8, 32, 6, 3, 21, 43, 5, 6, 0, 35, 0, 6, 4, 1, 0], [23, 46, 13, 22, 8, 6, 25, 31, 4, 6, 0, 1, 25, 2, 11, 5, 5, 0], [19, 54, 8, 32, 8, 5, 23, 38, 10, 8, 0, 28, 0, 9, 4, 0, 0], [22, 46, 11, 33, 2, 4, 24, 27, 12, 9, 1, 49, 0, 8, 6, 0, 0], [23, 54, 7, 31, 7, 5, 28, 41, 14, 9, 0, 28, 1, 15, 5, 2, 0], [38, 59, 14, 36, 3, 4, 19, 32, 7, 9, 0, 0, 44, 0, 8, 2, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

