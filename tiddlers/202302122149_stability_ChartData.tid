created: 20230212214943000
creator: Drevarr
modified: 20230705163519157
modifier: drevarr
tags: ChartData
title: 202302122149_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Sumatra Satyricon", "Whose Guardian", "Daring Deathblade", "Venomina The Fierce", "Xanvias Tseli", "Ark Darkness", "Reverve Mk V", "Primal Shield", "Ace Hammers", "Blanco Padre Guard", "Zaylen Harker", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy"];
const professions = ["Soulbeast", "Willbender", "Scourge", "Spellbreaker", "Berserker", "Firebrand", "Herald", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.8039, 2.2526, 0.5022, 0.0, 2.294, 0.0, 0.0, 3.8966], [0.4158, 1.3042, 5.1224, 0.0, 0.777, 0.0, 0.0, 2.3616], [0.2772, 3.7939, 1.9084, 0.9158, 0.259, 1.5543, 0.6106, 2.2042], [0.0, 5.0981, 5.4238, 1.0745, 1.443, 0.9009, 1.1363, 3.7392], [1.0534, 6.6394, 7.2317, 0.4762, 0.962, 1.0098, 0.0, 4.2509], [2.2453, 3.4382, 14.6642, 0.0, 2.183], [1.386, 6.6394, 9.7427, 1.0012, 0.185, 0.0, 3.6634, 2.2829], [0.7762, 1.1856, 16.8739, 0.0, 4.958, 0.1683, 0.0, 4.4477], [1.9127, 24.3048, 14.2625, 0.0, 2.664, 1.5642, 1.8317, 2.519], [5.8489, 12.923, 10.3453, 1.0989, 1.295, 3.663, 4.8506, 9.407], [5.9321, 17.6654, 21.9964, 1.8803, 4.44, 2.2176, 2.3574, 8.6592], [3.2155, 15.887, 25.7126, 2.381, 5.328, 1.98, 2.5949, 10.391], [6.8191, 23.3563, 27.2192, 1.8559, 8.917, 2.8314, 5.2406, 15.2323], [7.2904, 24.3048, 26.9179, 1.6239, 10.286, 1.881, 3.7142, 16.0195]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

