created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Kosa\u00efr", "Elvezio Figone", "Aronorf Xideliesi", "Gestern Yesteryear", "Astraea Lumena", "Whobear", "Abserns Sorcerer", "Vee Nemesis", "Kosa\u00edr", "Salty Pam", "Gwyn Ghosthouse", "Scarlet Merc\u00fcry", "Kurtis Ruhr", "Loganlek", "N\u00eec\u00f4le", "Kosa\u00efr", "Avatar Shazbott", "Whip \u00d1 Sl\u00e0pper", "Elonith Primal", "F\u00f9gly", "Tegan Parker", "Drevarr Moonwillow"];
const professions = ["Weaver", "Virtuoso", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Weaver", "Chronomancer", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Vindicator", "Spellbreaker", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0866, 0.4082, 0.0917, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1667, 0.0, 0.0, 0.0359, 0.0938, 0.0, 0.0337, 0.1538, 0.0, 0.0814, 0.0], [0.2403, 0.0, 0.0811, 0.0878, 0.219, 0.0, 0.0423, 0.0, 0.1469], [0.3077, 0.0181, 0.0, 0.1835, 0.0, 0.0, 0.0, 0.0, 0.0235, 0.0, 0.0, 0.0303, 0.0408, 0.0182, 0.0419, 0.0312, 0.0, 0.0, 0.0, 0.0, 0.0094, 0.0, 0.0252, 0.0, 0.0506, 0.0, 0.0075, 0.0, 0.1404, 0.0, 0.0769, 0.1085, 0.027, 0.0049, 0.0, 0.0, 0.0211, 0.1268, 0.0, 0.0339], [0.0256, 0.0505, 0.0, 0.1101, 0.0, 0.0, 0.0, 0.1042, 0.0471, 0.0, 0.0, 0.0303, 0.0, 0.003, 0.0359, 0.2188, 0.0, 0.0, 0.1538, 0.0182, 0.0349, 0.0, 0.0376, 0.0, 0.0252, 0.0, 0.0253, 0.0, 0.0149, 0.0, 0.0, 0.0571, 0.1538, 0.0465, 0.0, 0.0676, 0.0098, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0169], [0.25, 0.0, 0.0, 0.0, 0.2909, 0.0116, 0.0357, 0.0031, 0.0, 0.0692, 0.0, 0.0, 0.0, 0.0833, 0.0075, 0.0, 0.0, 0.1714, 0.1923, 0.1395, 0.0, 0.0135, 0.0732, 0.0219, 0.0, 0.007, 0.0563, 0.3171, 0.0], [0.0419, 0.3281, 0.1127, 0.0, 0.022, 0.5818, 0.1163, 0.5357, 0.1191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0448, 0.0], [0.1754, 0.0, 0.0455, 0.0, 0.0061, 0.0, 0.0, 0.0, 0.0562, 0.033, 0.0182, 0.0581, 0.6071, 0.0345, 0.0, 0.044, 0.0769, 0.0506, 0.0769, 0.0, 0.0746, 0.0, 0.0351, 0.1905, 0.0897, 0.0853, 0.0, 0.027, 0.0244, 0.0511, 0.0, 0.0211, 0.0986, 0.0244, 0.0339], [0.0, 0.1288, 0.3061, 0.0364, 0.0299, 0.1719, 0.0, 0.0449, 0.1758, 0.0909, 0.0, 0.5, 0.0031, 0.0, 0.0, 0.0, 0.0, 0.0075, 0.0, 0.2982, 0.0095, 0.3333, 0.1085, 0.0, 0.0135, 0.0195, 0.0073, 0.0, 0.0, 0.0141, 0.0, 0.0], [0.232, 0.0, 0.1321, 0.0, 0.038, 0.0, 0.0224, 0.0, 0.386, 0.5714], [0.0697, 0.0838, 0.375, 0.0986, 0.0674, 0.1319, 0.0909, 0.0, 0.4643, 0.2226, 0.16, 0.0252, 0.0, 0.0253, 0.0, 0.0, 0.1493, 0.114], [0.0898, 0.2188, 0.0423, 0.0337, 0.0989, 0.2545, 0.0233, 0.1429, 0.0313, 0.0, 0.0, 0.0, 0.0127, 0.0, 0.0, 0.0, 0.0, 0.2632, 0.2667, 0.2692, 0.3023, 0.0, 0.0135, 0.0293, 0.1168, 0.0, 0.0282, 0.1549, 0.122, 0.0621], [0.1138, 0.2188, 0.0, 0.2022, 0.2198, 0.2545, 0.1047, 0.7143, 0.0313, 0.32, 0.044, 0.0, 0.0886, 0.0, 0.0448, 0.0526, 0.3684, 0.1714, 0.2179, 0.186, 0.0, 0.0135, 0.0341, 0.1606], [0.0, 0.3827, 0.9592, 1.1101, 0.0, 0.7708], [0.0426, 0.9744, 0.361, 1.1633, 1.0, 0.1607, 0.2344, 0.6458], [1.359, 0.4477, 1.0612, 1.3486], [2.1282, 2.3411, 0.0, 1.1216, 0.5951, 0.6861], [0.2671, 1.0612, 1.3394, 0.0, 0.125, 0.2083, 0.0, 0.6471, 0.5088, 0.5, 0.5379, 0.7959, 0.2121, 0.3187, 0.6909, 0.4186, 0.0714, 0.1442], [1.2632, 0.4773, 0.1848, 0.0659, 0.1011, 0.0989, 0.9818, 0.3721, 0.1071, 0.4263, 0.28, 0.3774, 0.0256, 0.1646, 0.0, 0.097, 0.2018, 0.4737, 0.781, 0.8205, 0.5736, 0.4054, 0.5171, 0.2117, 0.5563, 1.338, 1.0244, 0.6836], [2.124, 0.1429, 1.2703, 1.0585, 0.9416, 0.1935, 1.0704, 2.5634, 1.6829, 1.4746], [1.7984, 0.2857, 1.6892, 0.8049, 1.0146, 0.0645, 1.1761, 2.6761, 2.5854, 1.7062], [1.5128, 0.6823, 1.6939, 2.0642, 0.125, 0.2656, 0.875, 0.0, 0.8, 0.4035, 0.5652, 0.9924, 0.8776, 0.3788, 0.7725, 1.7656, 0.4789, 0.8764, 0.3956, 0.7818, 0.6163, 0.25], [0.8087, 1.7959, 1.3211, 0.037, 0.2321, 0.3125, 1.6458, 0.0, 1.0941, 1.3158, 0.2391, 1.3712, 1.5306, 0.3727, 1.0539, 2.1719, 0.8732, 1.0337, 0.5604, 0.8545, 0.7442, 2.5714, 0.4107, 0.2, 0.3648, 0.0769, 0.4177, 0.375, 0.6343, 0.4035]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

