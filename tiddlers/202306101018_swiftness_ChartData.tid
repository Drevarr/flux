created: 20230610101822000
creator: Drevarr
modified: 20230705163534757
modifier: drevarr
tags: ChartData
title: 202306101018_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Hit The Gas", "Drevarr Moonwillow", "Tomitigas", "Cat Noises", "Gestern Yesteryear", "Slang\u00efn", "Aronorf Xideliesi"];
const professions = ["Firebrand", "Spellbreaker", "Scrapper", "Tempest", "Virtuoso", "Firebrand", "Herald", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.7036, 0.0, 0.0, 1.1662, 16.2653, 14.8613, 77.2793, 30.0678, 50.724, 0.0, 63.3786, 4.5084, 12.9438, 38.5189, 109.9963, 12.6542], [199.0602, 30.5235, 216.0077, 28.4886], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 145.8542, 93.5136, 8.7593, 302.7732, 144.6921, 45.5885], [11.5619, 1.0593, 0.0, 22.8571, 68.3117, 0.0702, 77.5564, 123.3242, 31.104, 0.0, 31.3827, 59.5264, 60.5114, 30.8168, 42.1504, 38.8573, 51.3264, 17.8981, 141.8175, 0.0], [72.336, 9.4248, 112.1061, 12.8622, 43.5635, 71.0398, 63.6804, 99.4323, 25.2756, 1.6133, 270.2268, 76.2552, 69.9149, 49.4703], [0.0, 0.0, 49.2118, 79.0363, 69.5092, 88.6696, 5.655, 44.603, 15.2173, 53.892, 4.428, 24.8784, 145.4511, 40.4113, 4.9927, 258.9989, 9.4122, 77.6322, 42.7145, 169.035, 42.8578, 73.0598, 88.8687, 39.8042], [13.207, 48.2493, 8.1268, 24.3883, 28.5661, 120.0911, 127.0716, 81.1164, 43.7859, 62.244, 64.44, 15.9322, 114.9642, 49.555, 48.121, 197.3294, 137.4762, 25.9284, 86.0743, 165.9981, 216.3777, 96.6784, 9.6786, 28.0045], [211.5968, 203.0673, 264.4286, 55.1506, 171.6, 222.6312, 192.063, 193.6844, 192.971, 397.7903, 190.9135, 197.8189, 224.349, 163.266, 362.3079, 239.904, 100.6566, 208.9962, 61.6056]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

