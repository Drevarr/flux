created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Igh Homura", "Drac Tepes", "Squishy Jellyfish", "Whip \u00d1 Sl\u00e0pper", "Scarlet Merc\u00fcry", "Sakis Ranger", "Mother Ship", "Sister Elon\u00edth", "Fyshaye", "Lady Fluffs"];
const professions = ["Tempest", "Scourge", "Firebrand", "Tempest", "Firebrand", "Druid", "Tempest", "Firebrand", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[118.6714, 213.0922, 52.5232], [16.8296, 53.9136, 13.5874, 0.0, 0.0, 36.5803, 48.762, 24.2629, 0.0, 0.0, 0.0, 9.912, 8.5636, 36.2088, 162.2813, 0.0, 32.0796, 0.0, 0.0, 0.0, 5.2734, 0.0, 30.552, 0.0], [41.9328, 22.9112, 2.2282, 21.31, 20.6629, 5.0778, 5.3797, 3.72, 2.548, 0.0, 14.994, 110.9789, 83.472, 83.4389, 16.8192, 126.3767], [56.7424, 19.2199, 0.0, 16.3624, 6.0435, 24.444, 88.1654, 57.474, 4.8776, 0.0, 7.686, 67.1177, 0.0, 5.6179, 0.0, 128.4591, 89.146, 34.496, 79.7934, 0.0, 53.9645, 0.0], [35.5433, 0.904, 27.2295, 12.636, 67.2256, 99.5738, 189.056, 65.246, 54.5376, 45.0259, 5.639, 32.6542, 67.2448, 50.6142, 81.8057, 29.5368, 44.0608, 0.0, 17.304, 72.0733, 137.475, 146.7682, 24.5376, 6.8237, 113.1791, 0.0, 103.7952, 40.104, 45.3739, 21.6781, 55.4438, 28.4512], [106.8522, 259.3945, 6.9744, 287.2013, 851.6685, 863.776, 68.9113], [238.1808, 99.4877, 113.4944, 74.1395, 19.5174, 159.7127, 127.8936, 17.6512, 0.0, 103.7736, 241.954, 243.8172, 392.4883, 48.8448, 341.3945, 0.0, 26.0972, 70.296, 129.2551], [32.3692, 30.0134, 79.872, 66.56, 37.9962, 114.4832, 104.5704, 73.26, 188.3092, 93.1426, 36.1872, 120.3781, 106.9128, 26.684, 64.1004, 237.1288, 260.004, 401.2982, 57.456, 11.1283, 221.8558, 235.2352, 68.272, 93.0202, 35.031, 264.3123, 54.7699], [473.4318, 445.3626, 926.5738, 792.7601, 0.0, 179.458, 181.632, 198.8473, 62.3974, 534.049, 36.3229], [116.06, 909.293, 29.8623, 352.8049, 0.0, 104.9314, 342.6714, 698.9798, 669.792, 340.6417, 427.9869, 131.6674, 494.5833, 789.2539, 306.747, 606.6601, 486.6132, 40.8744, 240.198]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

