created: 20230210230955000
creator: Drevarr
modified: 20230705163519028
modifier: drevarr
tags: ChartData
title: 202302102309_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Tenebris", "Dark Sidiuz", "Rozaalyna", "Panther B Me", "Oo Dads Mad", "Seren Nightroad", "Arcanophage Farra", "Arka\u00f1", "Grasszanine", "Newtype Khan", "Kyllarian", "Smol Gluvs", "Fungus", "Black Raspberry Pie", "Be\u00eb", "Bambiae"];
const professions = ["Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0455, 0.1446, 0.169, 0.8028], [0.2162, 0.0736, 0.0929, 0.4855, 0.0312, 0.0], [0.0811, 0.2035, 0.0357, 0.529, 0.0781, 0.0], [0.2162, 0.1169, 0.0429, 0.413, 0.0156, 0.0051, 0.0682, 0.0241, 0.0352, 0.169], [0.3243, 0.1515, 0.0357, 0.5435, 0.0, 0.0, 0.125, 0.0, 0.0], [0.1982, 0.1948, 0.0714, 0.3478, 0.0312, 0.0, 0.0114, 0.0843, 0.1408, 0.5915], [0.3423, 0.1558, 0.05, 0.3623, 0.0, 0.0, 0.0455, 0.0361, 0.1197, 0.7042], [0.1892, 0.3723, 0.2643, 0.3913, 0.0312, 0.0455], [0.2613, 0.2294, 0.2071, 0.6739, 0.0938, 0.0], [0.4054, 0.1688, 0.1071, 0.5942, 0.0, 0.0, 0.0341, 0.1446, 0.1056, 0.6479], [0.3694, 0.29, 0.2286, 0.6449, 0.0625, 0.0354, 0.1023, 0.1325, 0.0986, 0.0563], [0.4595, 0.3506, 0.05, 0.7319, 0.0156, 0.0101, 0.0455, 0.0843, 0.0634, 0.3521], [0.3243, 0.2035, 0.1571, 0.6232, 0.0, 0.0051, 0.0568, 0.0361, 0.2746, 0.9155], [0.5405, 0.3939, 0.3286, 0.4565, 0.0, 0.0101, 0.0114, 0.0723, 0.1972, 0.9155], [0.5045, 0.3506, 0.2429, 0.8261, 0.1875, 0.0505, 0.0455, 0.1205, 0.2042, 0.7887], [0.7117, 0.5022, 0.45, 1.1232, 0.0156, 0.096, 0.0795, 0.1566, 0.2746, 0.8732]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

