created: 20230325172304000
creator: Drevarr
modified: 20230705163522931
modifier: drevarr
tags: ChartData
title: 202303251723_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Primal", "Primal Clone", "Johosh The Great", "Black Raspberry Pie", "High Sorcer Baradun", "Zefirokai", "Eibh\u00ebar", "\u00c1rkantor", "Abigail Ryn", "Venomina The Siren", "Arriasa", "Tika Sumiko", "Tribal S", "Mac Chiato", "Zadie Miststep"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Vindicator", "Tempest", "Tempest", "Druid", "Tempest", "Druid", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6815, 0.6848, 0.1944, 0.1626, 0.1222, 0.186, 0.4554, 0.3529], [0.121, 0.0485, 0.0, 0.0, 0.0, 0.0, 0.2346, 0.0, 0.0, 0.3382, 0.2278, 0.1346, 0.0, 0.0, 0.0, 0.0739, 0.0276, 0.2087, 0.3379], [0.0764, 0.0909, 0.0, 0.0, 0.05, 0.0108, 0.2688, 0.0804, 0.0, 0.1159, 0.0, 0.0, 0.0882, 0.0274, 0.1571, 0.1783, 0.1934, 0.199, 0.215], [0.2166, 0.1394, 0.0, 0.0163, 0.0278, 0.1496, 0.0268, 0.0, 0.1981, 0.1266, 0.0, 0.0, 0.0616, 0.0429, 0.0783, 0.3591, 0.3786, 0.5017], [0.1656, 0.2364, 0.1111, 0.0163, 0.0278, 0.0538, 0.6424, 0.3304, 0.0196, 0.2126], [0.1019, 0.1636, 0.0278, 0.0325, 0.0222, 0.514, 0.1518, 0.1176, 0.1256, 0.0253, 0.0192, 0.0, 0.0342, 0.2, 0.0957, 0.3812, 0.3204, 0.3515], [0.0764, 0.0364, 0.0, 0.0407, 0.0389, 0.0, 0.5915, 0.2321, 0.1373, 0.0966, 0.2025, 0.0962, 0.0, 0.137, 0.2571, 0.2435, 0.1768, 0.3495, 0.43], [0.1783, 0.2, 0.0, 0.0222, 0.0, 0.7988, 0.2054, 0.1765, 0.3865, 0.1646, 0.1731, 0.0588, 0.2055, 0.3714, 0.3043, 0.4751, 0.3883, 0.5461], [0.1847, 0.1636, 0.0556, 0.0163, 0.1, 0.0108, 0.9127, 0.0982, 0.1373, 0.3043, 0.2532, 0.0, 0.2059, 0.411, 0.0286, 0.2478, 0.2099, 0.3398, 0.6894], [0.1146, 0.1455, 0.1111, 0.0081, 0.0111, 0.1613, 1.1093, 0.0268, 0.2353, 0.1932, 0.2152, 0.1923, 0.2055, 0.0714, 0.1043, 0.2376, 0.4612, 0.7577], [0.2866, 0.2485, 0.0732, 0.0222, 1.2642, 0.0357, 0.0588, 0.3623, 0.2785, 0.0, 0.0294, 0.274, 0.3857, 0.1565, 0.8729, 1.0049, 1.0034], [0.4459, 0.4364, 0.1667, 0.0407, 0.0167, 0.043, 1.1435, 0.3036, 0.1569, 0.3671, 0.4304, 0.0385, 0.0294, 0.3562, 0.5714, 0.5522, 0.7845, 0.7961, 1.2867], [0.465, 0.4424, 0.0278, 0.1545, 0.0056, 0.0, 1.6492, 0.5536, 0.3529, 0.6087, 0.7595, 0.0577, 0.0, 0.1233, 1.0571, 0.8043, 0.9061, 0.8155, 1.5256], [0.8917, 0.6424, 0.0833, 0.122, 0.0944, 0.0323, 2.0782, 0.4643, 0.6039, 0.4051, 0.3654, 0.0882, 0.226, 0.4143, 0.913, 1.0442, 1.568, 1.3652], [0.4841, 0.903, 0.5556, 0.0407, 0.2667, 0.0, 2.1033, 0.4732, 0.1176, 1.0435, 0.4177, 0.4038, 0.5548, 0.4571, 0.987, 1.2431, 1.7039, 1.5836]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

