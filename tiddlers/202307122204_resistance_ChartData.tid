created: 20230712220412000
creator: Drevarr
tags: ChartData
title: 202307122204_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Klengah", "Gestern Yesteryear", "Cedryn X", "Oo Dads Mad", "Johosh The Mighty", "Ryvalia Fazebringer", "Scarlet Merc\u00fcry", "Arriasa", "Glorious Gluvs", "Tribal S", "Sygaldry Verdandi", "Sister Elon\u00edth", "Sub Train", "Crusader Siolith", "Zaedy Zae", "Tika Fiery", "Xanvias Einzbern", "Koralia Danai", "Solus Sanctus", "Arcanophage Farra", "Newtype Khan"];
const professions = ["Druid", "Firebrand", "Berserker", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Druid", "Berserker", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55.0833, 0.0, 0.0, 33.9788, 0.0, 0.0, 0.0, 27.2315, 47.7224, 34.1226, 23.2974, 20.445, 0.0, 22.3114, 0.0, 0.0, 0.0, 20.9152, 32.0436, 20.5164, 0.0, 0.0, 34.454], [10.8171, 26.792, 19.4867, 25.3669, 37.4134, 50.5422, 31.0905, 0.0, 19.423, 19.5169, 14.7972, 0.0, 0.0, 37.2101, 31.4001, 0.0, 38.8187, 17.871], [8.118, 0.0, 30.2337, 17.9521, 0.0, 0.0, 7.1208, 37.2945, 0.0, 59.7342, 86.5287, 19.1946, 42.7343, 0.0, 0.0, 42.7842, 0.0, 17.5028, 50.876], [0.0, 0.0, 0.0, 184.1125, 58.4045, 0.0, 65.8081, 0.0, 51.1421, 0.0, 118.8864], [82.6232, 77.9474, 44.9797, 77.1975, 64.7698, 0.0, 155.1096, 17.061, 0.0, 0.0], [39.9163, 5.7809, 7.5582, 81.4445, 20.0695, 7.4542, 23.4096, 21.2712, 18.7317, 12.109, 53.406, 22.4543, 15.444, 11.7627, 26.5914, 15.3657, 7.5816, 23.0893, 35.7588, 32.0256, 6.8468, 31.005, 45.402], [133.1391, 19.7935, 44.4372, 375.9618, 150.7693], [89.9863, 35.1382, 0.0, 119.6052, 29.7209, 22.7909, 0.0, 25.0901, 53.3878, 22.8762, 90.7128, 25.803, 0.0, 51.6971, 28.5822, 0.0, 0.0, 24.6304, 30.4182, 30.2742, 0.0, 41.3816, 60.7775], [0.0, 0.0, 0.0, 103.0863, 82.8487, 19.0852, 0.0, 41.5789, 49.1515, 47.7333, 0.0, 81.2865, 0.0, 0.0, 89.9771, 32.069, 0.0, 51.5174, 48.5878, 22.1427, 0.0, 18.628, 110.446], [86.4325, 0.0, 27.2004, 159.857, 43.2509, 24.3974, 34.2689, 53.8562, 40.3726, 21.726, 115.0938, 77.4795, 28.743, 28.716, 7.4299, 0.0, 0.0, 22.0435, 78.3094, 71.6197, 0.0, 50.9457, 95.5535], [89.2248, 8.7912, 9.69, 218.1959, 64.8538, 19.8563, 49.2819, 41.2933, 89.9325, 22.5567, 73.9944, 58.8675, 16.445, 28.0881, 36.2965, 47.2674, 4.6859, 42.3464, 7.7748, 67.5733, 120.589], [28.6171, 59.0433, 107.3912, 71.405, 85.5302, 125.6976, 120.7665, 0.0, 39.6414, 49.059, 33.1223, 35.4335, 39.6288, 118.7122, 124.412, 7.5742, 131.4585, 137.816], [44.8662, 0.0, 23.3244, 200.736, 112.4794, 38.963, 49.0148, 108.2478, 54.5618, 65.0182, 98.0658, 101.8372, 8.58, 7.6604, 78.0678, 42.2682, 7.564, 60.4614, 84.2886, 89.2588, 3.8122, 67.3858], [39.3452, 0.0, 9.747, 195.2994, 89.0274, 13.259, 22.1932, 40.2226, 48.3349, 64.1556, 110.0628, 84.8115, 0.0, 39.8926, 73.6241, 26.0498, 41.9094, 35.5834, 84.3467, 65.5524, 0.0, 108.9549, 160.034], [110.1031, 55.4378, 34.2684, 155.1522, 63.9969, 9.7247, 35.3073, 57.4609, 69.0061, 27.7007, 142.6482, 66.411, 0.0, 34.4089, 50.1966, 0.0, 27.22, 55.3152, 79.5285, 82.4409, 28.0645, 75.6371, 118.496], [81.0384, 12.0679, 43.6848, 221.0187, 105.3085, 20.7131, 61.862, 42.6139, 65.8926, 55.4652, 219.5838, 49.7378, 15.9874, 15.4463, 38.394, 28.1398, 18.1116, 34.2899, 48.0654, 91.7609, 6.2449, 96.828, 157.6995], [77.0404, 12.2544, 4.845, 199.5859, 89.2529, 35.1931, 47.0863, 96.6485, 68.3426, 16.1667, 159.9858, 89.0415, 0.0, 86.3153, 63.5278, 17.8402, 25.2544, 93.5955, 87.7716, 62.2373, 0.0, 87.4515, 136.367], [37.4414, 7.9654, 21.1242, 193.522, 87.0881, 25.3399, 53.317, 104.2148, 88.3502, 55.9764, 142.416, 104.6573, 4.004, 43.66, 35.6922, 29.1597, 18.4977, 44.6925, 127.3037, 108.5868, 8.0758, 133.6464, 146.1075], [76.0885, 35.1382, 13.7826, 262.4205, 126.0545, 33.8436, 47.0863, 59.5666, 88.8096, 58.3727, 199.305, 90.6278, 22.5082, 4.7302, 49.059, 30.6812, 7.6693, 49.1782, 110.0048, 150.12, 0.0, 155.0873, 167.0375], [0.0, 0.0, 0.0, 122.219, 187.5709, 71.2429, 139.5974, 115.4215, 183.3357, 115.8187, 325.6218, 213.0158, 81.7388, 79.1991, 170.0712, 45.445, 25.9916, 63.7363, 172.8148, 67.6166, 0.0, 165.714, 436.31], [69.1714, 23.2567, 8.9718, 377.8437, 186.8042, 94.6764, 159.6543, 254.0057, 108.3069, 104.6043, 268.1136, 186.5783, 52.2236, 56.8459, 142.6621, 81.0418, 29.6771, 138.1504, 271.3257, 241.0677, 0.0, 248.2897, 228.2175]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

