created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Sirplay", "Venomina The Siren", "Umbrigatina", "Jerryatric Reflexes", "Lord Erin The Wise", "Solus Sanctus", "Kary\u00edna", "Be\u00eb", "Aronorf Xideliesi", "Morton Saltbringer", "Legacy Of Mathus", "Mike The Archmagus", "Cedryn X", "Tika Fiery", "Elonith Requiem", "Tybalt Returns", "Xanvias Einzbern", "Ateriuz", "Shaca Booey", "Melli Dragonswrath", "Johosh The Mighty"];
const professions = ["Berserker", "Tempest", "Scourge", "Berserker", "Weaver", "Firebrand", "Vindicator", "Reaper", "Firebrand", "Chronomancer", "Berserker", "Weaver", "Berserker", "Firebrand", "Reaper", "Mechanist", "Berserker", "Berserker", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 4.0476, 0.0, 30.6268], [10.4632, 0.0, 4.6618, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2087, 1.8889, 3.0746, 0.804, 29.6667, 0.0, 0.2195, 0.0, 0.0, 3.6639, 66.2207, 23.8615, 0.0, 0.0, 44.5618, 0.0, 0.0, 17.3651, 0.8929, 22.2159, 0.1429, 0.0, 9.9796, 2.3714, 16.2828, 40.1628], [11.7324, 0.0, 36.6508, 22.25, 12.5568, 14.782, 6.28, 6.1769, 0.0, 18.6866, 29.6628, 0.0, 48.4123, 1.486], [0.6163, 0.0, 91.6019, 73.0866], [4.8737, 0.0, 46.3676, 4.2941, 1.0154, 5.7385, 34.3187, 0.0, 42.8783, 51.9815, 20.0149, 17.696, 48.8413, 23.5368, 0.0, 41.5634, 0.0, 7.0492, 38.1793, 33.1282, 0.0, 46.8846, 9.5169, 0.0, 0.0, 27.8095, 12.1429, 91.7159, 22.7368, 9.4133, 29.4694, 0.0], [31.7368, 0.0, 0.0, 2.6961, 2.9846, 43.8308, 2.3187, 0.0, 17.5304, 0.8333, 0.0597, 5.164, 0.0, 24.5263, 0.0, 8.3099, 0.0, 15.1557, 13.5241, 15.759, 0.0, 2.8205, 5.6067, 0.0, 0.0, 17.9683, 0.4881, 7.1136, 0.4887, 10.0667, 70.4694, 0.3143, 11.2245, 0.0, 40.6611, 6.9218], [3.0421, 0.0, 0.2353, 2.4216, 0.0, 13.4615, 19.6264, 4.1047, 7.3652, 9.1296, 0.1343, 2.924, 0.0, 16.8526, 0.0976, 3.9718, 11.6875, 0.0, 0.0138, 56.9436, 2.7075, 13.6923, 5.5056, 71.9296, 0.0, 1.0952, 0.0, 0.0, 0.0, 2.16, 4.2381, 0.0, 29.8284], [21.1053, 0.0, 18.75, 24.4706, 0.7385, 8.6615, 4.1319, 11.6163, 4.5043, 6.8148, 7.0896, 7.664, 7.619, 11.2421, 32.9512, 0.0, 0.0, 2.2623, 25.7586, 23.8513, 0.0, 12.5513, 9.3596, 8.2958, 0.0, 12.0317, 1.3095, 17.3295, 5.3459, 0.0, 6.0952, 0.4571, 5.3051, 0.0, 0.0, 41.5379, 44.067], [5.4316, 0.625, 0.0, 27.6471, 15.0923, 36.2, 6.1319, 4.186, 2.1826, 2.4259, 33.5373, 3.98, 1.5873, 5.4632, 0.6341, 0.9718, 6.082, 17.2414, 7.6359, 4.2925, 12.4359, 3.1461, 0.0, 0.0, 0.3016, 3.3333, 7.0341, 9.7368, 6.4667, 9.8776, 6.8857, 20.0341, 0.0, 0.0, 9.1706, 41.1592], [12.5579, 0.5667, 8.3088, 0.0, 40.0, 36.2, 10.7912, 0.0233, 12.087, 34.5556, 4.228, 1.6032, 14.2526, 5.3659, 7.8732, 1.6562, 0.0, 61.3172, 89.1692, 0.0, 4.7564, 27.2247, 2.4225, 0.0, 13.3968, 25.5568, 3.9624, 3.84, 20.102, 38.4571, 27.7644], [46.2316, 1.1917, 2.6176, 36.6863, 3.2769, 45.4154, 24.3297, 8.8721, 29.5217, 4.0556, 0.0, 0.0, 59.6197, 37.0625, 22.9754, 45.6552, 96.5128, 3.2358, 6.8205, 0.0, 35.1127, 0.0, 81.2063, 45.3571, 50.375, 14.5414, 0.0, 0.0, 31.6303, 47.838], [15.0421, 3.1083, 31.8382, 50.3824, 1.2462, 16.1846, 18.2527, 0.0, 12.4435, 28.0741, 2.0448, 28.628, 26.1429, 11.8211, 32.1951, 12.8732, 0.0625, 24.5574, 13.9862, 67.4974, 19.1321, 43.4487, 43.1236, 20.0423, 0.0, 72.8254, 46.4048, 7.7841, 18.2707, 50.4667, 72.7959, 71.2, 30.3641, 7.6395, 0.9502], [58.0211, 0.8, 8.1176, 1.0098, 4.6308, 0.6813, 0.2326, 66.6174, 6.7222, 0.0, 30.368, 155.7619, 72.7368, 0.1951, 102.7606, 2.0625, 6.7213, 104.1655, 103.6103, 0.5283, 272.859, 0.0, 0.0, 0.0, 86.1111, 13.869, 202.7955, 21.6165, 85.9467, 18.6531, 0.0, 1.3009], [0.0, 0.0, 0.1029, 0.0, 0.0, 8.5692, 9.9231, 0.0, 0.2609, 17.6667, 13.5821, 22.256, 3.2222, 24.8842, 55.9512, 8.3099, 24.9508, 48.8069, 38.3282, 3.8774, 7.7821, 12.3933, 0.7746, 0.0, 47.746, 10.9048, 0.5455, 33.1353, 22.9467, 36.1905, 0.0, 53.5768, 9.0349, 0.0, 30.8578, 34.4246], [0.0, 6.5652, 21.1296, 10.2239, 1.912, 13.6349, 21.8737, 0.3659, 8.831, 21.0938, 12.9426, 35.4552, 42.0256, 2.3868, 13.3077, 28.1124, 9.1127, 0.0, 6.6825, 7.4524, 22.875, 9.4511, 43.08, 2.7619, 41.7714, 53.7457, 24.4186, 0.0, 49.3626, 63.9916], [44.3322, 464.2692, 220.2512, 106.9246], [74.0421, 0.0, 7.8824, 22.902, 40.5538, 39.0308, 49.7253, 0.0, 96.4, 4.3519, 2.0149, 7.54, 44.9206, 127.7263, 4.4878, 122.1972, 32.9688, 167.6639, 56.6138, 244.3231, 0.0, 64.8205, 173.9663, 0.0, 0.0, 146.127, 40.5238, 162.0114, 9.391, 8.7067, 43.7891, 83.8, 51.8992], [32.8526, 0.325, 4.0882, 0.0, 22.6769, 1.8462, 48.1868, 0.0, 119.4957, 0.0, 126.6567, 13.124, 0.1429, 53.0526, 0.0, 66.9014, 0.0, 207.0656, 170.6138, 368.7436, 1.0849, 19.4615, 133.8427, 0.0, 0.0, 25.127, 125.3333, 118.2727, 13.3233, 0.3733, 44.9048, 13.9429, 42.6227, 0.0, 49.1161, 76.0391], [9.468, 0.3016, 22.3158, 141.3659, 41.3803, 4.25, 224.4098, 350.269, 72.3949, 0.0, 38.4103, 234.3708, 0.0, 3.1562, 1.2063, 174.5595, 113.9318, 146.391, 66.16, 100.2177, 80.5143, 50.057, 1.3256, 12.8462, 42.5592, 148.2654], [35.7895, 2.4083, 1.7647, 3.5784, 33.0308, 33.5385, 14.7802, 4.2209, 131.4609, 173.8148, 190.3881, 42.1, 39.8095, 14.8316, 0.0, 33.6479, 0.375, 165.6967, 199.5517, 104.9179, 0.0, 70.141, 51.3258, 0.0, 0.0, 35.6984, 82.25, 69.8523, 8.0902, 84.3067, 4.2517, 0.0, 108.0445, 0.0, 6.4615, 53.1209, 54.0642], [3.3053, 0.0, 0.0882, 20.2451, 31.2769, 79.7692, 230.3297, 0.0, 155.0348, 57.3333, 53.5224, 72.624, 31.4762, 160.5684, 7.9268, 65.0704, 0.0, 103.2541, 147.4621, 325.9487, 0.0, 160.0385, 110.7753, 6.3662, 0.0, 188.8413, 48.3929, 217.4773, 0.0, 59.5467, 16.1497, 124.2286, 108.0181, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

