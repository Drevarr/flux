created: 20230206215940000
creator: Drevarr
modified: 20230705163518754
modifier: drevarr
tags: ChartData
title: 202302062159_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Koralia Danai", "Be\u00eb", "Mac Aaroni", "Newtype Khan", "Ace Rages", "Fungus", "Zadie Miststep", "Drevarr Moonwillow", "Xanvias Tsollice", "Etchery Howls", "Johosh The Great", "\u00c9\u00efbhear", "Bella Sassy"];
const professions = ["Scourge", "Firebrand", "Scourge", "Tempest", "Spellbreaker", "Berserker", "Scourge", "Tempest", "Scrapper", "Vindicator", "Druid", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[217, 1059, 742, 1208, 707, 3088, 2410, 2063, 958, 3497, 1144, 219, 169, 396, 1166, 380, 327], [257, 3517, 709, 4117, 319, 3653, 686, 2728, 502, 430, 1958, 263, 209, 352, 616, 316, 541], [351, 1124, 730, 2947, 284, 1333, 2982, 2719, 608, 423, 1011, 250, 205, 278, 1703, 272], [244, 786, 958, 289, 231, 1373, 2736, 2528, 1635, 523, 875, 361, 207, 632, 1487, 302, 217], [199, 1692, 588, 548, 376, 7382, 1583, 3676, 274, 558, 1060, 308, 268, 307, 678, 438, 961], [210, 2024, 4067, 359, 576, 2835, 1311, 286, 312, 866, 326, 236, 403, 704, 301, 780], [269, 562, 770, 310, 369, 2214, 4140, 706, 289, 619, 1078, 228, 241, 248, 919, 292, 634], [217, 4033, 734, 2649, 352, 3512, 549, 1576, 281, 357, 486, 402, 253, 280, 842, 306, 622], [229, 5235, 680, 303, 1213, 1363, 2757, 3440, 279, 292, 748, 220, 183, 268, 693, 382, 607], [221, 1304, 442, 4061, 292, 2923, 3924, 872, 4208, 383, 1240, 200, 175, 283, 2946], [200, 2198, 414, 4484, 376, 8759, 11885, 3385, 1095, 547, 245, 187, 229, 334, 498], [260, 4711, 812, 297, 366, 1538, 1684, 904, 545, 263, 296, 159, 255, 255, 551, 258, 529], [294, 1447, 420, 344, 1821, 959, 11812, 1776, 5145, 461, 363, 187, 183, 256, 2361, 281], [153, 776, 621, 239, 272, 1820, 792, 828, 186, 345, 437, 172, 197, 205, 316, 223, 161]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

