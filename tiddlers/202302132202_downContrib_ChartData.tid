created: 20230213220222000
creator: Drevarr
modified: 20230705163519204
modifier: drevarr
tags: ChartData
title: 202302132202_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Daring Deathblade", "Darm Dawnbreaker", "Arcanophage Farra", "Jupi Jupi Jupi", "Kira Dragonblaze", "Newtype Khan", "Grasszanine", "Ace Hammers", "Smol Gluvs", "Nelliel T", "Dark Sidiuz", "Smol Daddy Tika", "Whose Guardian", "Rina Of Theros", "Elonith Tenebris", "Lord Erin The Wise", "Legacy Of Mathus", "Skye Nightroad", "Xyntharos", "Jeckyll Mbs", "Sassy Daddy Demon", "Be\u00eb", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scourge", "Herald", "Spellbreaker", "Dragonhunter", "Dragonhunter", "Spellbreaker", "Spellbreaker", "Vindicator", "Scourge", "Scourge", "Scourge", "Berserker", "Dragonhunter", "Scourge", "Scourge", "Weaver", "Berserker", "Scrapper", "Vindicator", "Berserker", "Vindicator", "Scourge", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2896.0, 28619.0, 11841.0, 10994.0, 21654.0, 11409.0, 0.0, 12469.0, 475.0], [346.0, 797.0, 21977.0, 61354.0, 24301.0, 7328.0], [62552.0, 66984.0], [3072.0, 24677.0, 10827.0, 2363.0, 12793.0, 4657.0, 0.0, 20610.0, 35710.0, 6646.0, 20926.0], [43957.0, 100992.0], [24619.0, 42417.0, 38624.0, 0.0, 35783.0, 4130.0], [12303.0, 47145.0, 3227.0, 0.0, 8425.0, 13352.0, 9330.0, 1045.0, 17739.0, 36838.0, 5091.0, 10822.0], [16420.0, 36742.0, 2511.0, 14527.0, 9695.0, 7972.0, 2473.0, 14485.0, 49800.0, 20363.0, 14647.0], [11689.0, 32283.0, 50427.0, 26170.0, 19716.0, 11558.0, 1094.0, 42190.0, 3240.0, 23750.0, 16397.0], [4023.0, 27657.0, 38313.0, 10.0, 30478.0, 20056.0, 13465.0, 2289.0, 34219.0, 57377.0, 12994.0, 19532.0], [9267.0, 56730.0, 42682.0, 38070.0, 8791.0, 3999.0, 192.0, 40450.0, 27520.0, 17849.0, 17976.0], [13806.0, 59702.0, 37900.0, 39091.0, 21478.0, 6322.0, 2051.0, 22739.0, 69200.0, 14463.0, 10440.0], [18707.0, 54323.0, 6586.0, 0.0, 23785.0, 281.0, 31430.0, 0.0, 57604.0, 113236.0, 16217.0, 47088.0], [14939.0, 89238.0, 40567.0, 27721.0, 19054.0, 20400.0, 1275.0, 42241.0, 100313.0, 22085.0, 44009.0], [25069.0, 69360.0, 49975.0, 2575.0, 43283.0, 15645.0, 34608.0, 2002.0, 37741.0, 86268.0, 33181.0, 35920.0], [0.0, 50887.0, 0.0, 49358.0, 11307.0, 43382.0, 1125.0, 53175.0, 134135.0, 53272.0, 72985.0], [21673.0, 59797.0, 79028.0, 497.0, 56407.0, 524.0, 34928.0, 9787.0, 49287.0, 119134.0, 4235.0, 51935.0], [47486.0, 77255.0, 58998.0, 0.0, 29189.0, 0.0, 50579.0, 3921.0, 52894.0, 121138.0, 32496.0, 47043.0], [31397.0, 113080.0, 45337.0, 0.0, 67636.0, 50589.0, 33331.0, 13537.0, 75086.0, 103777.0], [15755.0, 75682.0, 62455.0, 3489.0, 20818.0, 35802.0, 14718.0, 2263.0, 45116.0, 186220.0, 23157.0, 53972.0], [19903.0, 114747.0, 30772.0, 519.0, 71364.0, 43082.0, 0.0, 2777.0, 29607.0, 158571.0, 30388.0, 48088.0], [34709.0, 73434.0, 62679.0, 0.0, 47154.0, 14489.0, 19888.0, 11169.0, 95194.0, 141146.0, 26389.0, 45472.0], [16354.0, 129984.0, 58329.0, 1141.0, 67395.0, 29934.0, 52420.0, 852.0, 59028.0, 209041.0, 62732.0, 71068.0], [23915.0, 106157.0, 39401.0, 6733.0, 32821.0, 92855.0, 51519.0, 0.0, 98278.0, 190714.0, 59562.0, 70334.0], [25976.0, 160599.0, 61715.0, 0.0, 136600.0, 95890.0, 75039.0, 9270.0, 75020.0, 214701.0, 86763.0, 57338.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

