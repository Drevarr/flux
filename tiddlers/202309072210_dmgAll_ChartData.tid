created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Vanhelsing Wizard", "Malfax Jinn", "Glorious Gluvs", "Drevarr Moonwillow", "Traidoruns Maximus", "Tootsie Pop Rocks", "Kittendo", "Empressy", "Christie Raskae", "Unbound Serenity", "Melody Phoenixstorm", "Snowe Shadowcharm", "Darks Na", "Pl\u00eeo", "Morv\u00e4rth", "Poppy Pittstop", "Aira Draugr", "Toka Lockhart", "Ean Thane", "Smol Gluvs", "Cormac Shadowcharm", "Kittendo", "Xuerreux", "Daphne Agla\u00e9", "Forever Dreaming", "Latedoctor", "Steamy Steam", "Kary\u00edna", "Black Raspberry Pie", "Blaize Harlot", "Regis Hawkesburne", "Lord Erin The Wise", "Xanvias", "Cyclotechnist Farra", "Mistwalker Cael"];
const professions = ["Chronomancer", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Scrapper", "Untamed", "Spellbreaker", "Willbender", "Reaper", "Scrapper", "Reaper", "Dragonhunter", "Mechanist", "Reaper", "Mechanist", "Herald", "Tempest", "Chronomancer", "Reaper", "Mechanist", "Soulbeast", "Berserker", "Reaper", "Scourge", "Reaper", "Berserker", "Vindicator", "Chronomancer", "Scourge", "Berserker", "Weaver", "Reaper", "Scrapper", "Herald"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.766, 28.3851, 54.0457, 84.7062, 692.3636, 24.0357, 122.6711, 12.5304, 126.941, 35.9008, 412.7214], [8.734, 119.7931, 60.1726, 107.4011, 307.1288, 131.506, 55.1657, 40.75, 29.1069, 271.95, 104.6923, 20.1957, 18.4211, 27.3064, 154.4615, 33.8024], [19.8351, 108.5517, 217.269, 260.7401, 1111.947, 207.881], [40.8936, 44.1322, 45.2792, 82.0847, 72.9394, 22.3274, 76.5526, 38.6657, 55.8066, 36.8473, 204.0, 113.6154, 43.558, 7.4316, 93.8208, 97.9346, 207.609], [31.6702, 53.3276, 161.0051, 204.6667, 632.8106, 120.6964, 222.8421, 49.0497, 81.0731, 64.5878, 147.9714, 358.1385, 36.9614, 32.9789, 0.0], [76.8936, 113.1149, 112.8426, 64.6384, 377.6515, 54.9226, 53.616, 56.7948, 79.7786, 294.7214, 120.0462, 5.2367, 25.7474, 80.1214, 44.7885, 194.613], [139.2074, 281.8621, 103.8477, 376.7119, 1555.6742], [0.0, 26.1906, 138.0448, 58.8397, 877.9214, 27.7319, 7.3684, 130.6185, 77.0692, 468.9796], [37.2293, 31.967, 430.2977, 3025.5786], [135.1489, 201.0057, 428.8528, 590.0282, 2071.8636], [79.5745, 303.4253, 471.0051, 681.3164, 1393.6515, 101.8155, 254.8122, 125.2759, 214.1908], [4.2394, 160.066, 388.4407, 1153.7348, 16.8452, 216.6053, 86.9751, 0.0, 162.458, 2390.9214], [520.6519, 200.0094, 173.2519, 1512.9286, 95.2462, 549.8816, 21.3263, 330.5723], [58.5749, 158.9192, 1583.8697], [31.8769, 398.3937, 245.4632, 492.4451, 223.3269, 1052.5519], [248.0102, 290.9322, 1359.2955, 396.4167, 177.5304, 29.184, 336.1985, 1786.2857, 290.2615, 180.6522, 190.6737, 248.9538, 79.2115], [99.25, 229.1667, 353.3299, 642.7853, 1053.3258, 257.8036, 288.0414, 294.1108, 406.0, 1424.9143], [142.7181, 217.1494, 65.8223, 78.6271, 1611.0227, 131.8452, 140.5921, 210.3536, 120.8726, 85.7634, 962.1929, 304.6923, 44.2874, 52.9579, 142.815, 92.3231, 492.1161], [136.2174, 0.0, 209.1538, 1710.945], [278.1602, 346.6627, 248.2595, 1949.2643, 743.4, 25.5217, 123.1684, 57.3121, 463.3577, 587.5356], [711.5076, 0.0, 1.2197, 125.2321, 0.0, 597.1215, 101.2028, 707.7481, 4152.7786], [580.1964, 427.8453, 574.2901, 369.6412, 4098.7286], [534.3026, 351.2983, 801.0283, 345.2824, 4621.2214], [99.9947, 313.3161, 287.2538, 714.9492, 1013.6742, 161.7083, 232.0856, 423.1156, 493.7252, 1038.7357, 341.7846, 112.0362, 34.9422, 482.2769, 315.6986], [575.174, 131.0094, 263.5649, 902.6143, 218.7077, 300.2367, 326.4105, 584.7283, 631.7385, 855.2892], [317.5691, 456.5287, 261.4721, 634.5198, 1791.1439, 408.8036, 1951.0395, 374.442, 607.9906, 426.4122, 878.5714], [228.4362, 716.7989, 832.4619, 744.0452, 2997.5833, 556.4286, 484.7597, 501.5684], [381.7553, 336.4195, 678.3959, 658.6441, 2144.303, 341.381, 170.5395, 309.4227, 271.2689, 474.4656, 2322.6643], [0.0, 0.5, 471.1523, 1162.7627, 849.3712, 727.4048, 325.9613, 333.7005, 378.5802, 1532.8429, 28.1981, 13.7368, 44.0116, 318.9423, 823.7169], [88.9149, 271.6897, 191.4416, 720.7853, 1364.7879, 208.9524, 1119.9605, 217.2182, 259.4198, 358.4198, 2023.5071, 521.3538, 172.7802, 86.5579, 280.8035, 453.9885, 934.9919], [335.8191, 428.9023, 739.7157, 730.1356, 2508.7576, 579.2024, 594.3421, 475.0525, 984.6061, 2111.542, 3119.8786], [198.9947, 721.1149, 385.4772, 1613.0395, 2641.5606, 508.7976, 1939.4079, 975.768, 514.5943, 428.9313, 3381.6429, 673.3231, 24.0145, 0.0, 5.1676, 0.0, 14.7821], [545.7234, 411.7069, 676.2386, 712.5537, 3020.1591, 1079.7024, 2492.8421, 552.8536, 841.6274, 726.0916, 3232.6429, 1084.0769, 679.0483, 726.3895, 919.0578, 827.9577, 1991.7637], [803.4468, 1743.3103, 1189.7107, 959.5537, 3783.7348, 832.8452, 2429.5132, 655.7624, 983.4788, 827.374, 4183.7786, 155.6923, 1298.5097, 1307.2947, 581.896, 1176.1346, 1635.611], [494.5638, 862.7184, 1092.8782, 958.3729, 3367.2045, 853.4881, 1011.1713, 1112.0377, 504.7176, 5979.4357, 776.0154, 649.0797, 812.0316, 1216.3988, 1151.0346, 2411.1426]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

