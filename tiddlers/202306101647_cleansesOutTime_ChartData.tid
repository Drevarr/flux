created: 20230610164704000
creator: Drevarr
modified: 20230705163534809
modifier: drevarr
tags: ChartData
title: 202306101647_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Solus Sanctus", "Pamtastic", "Aronorf Xideliesi", "Lucky Leipreach\u00e1n", "Morton Saltbringer", "Eibh\u00ebar", "Primal Clone", "Tootsie Pop Rocks", "High Sorcer Baradun", "Cat Wigglebooty", "Trolit\u00e1", "Venomina The Siren", "Zhavashian", "Tomitigas", "Tegan Parker", "Sakis Ranger", "Scintilla The Storm", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.0, 0.0, 8.0625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.9808, 0.0, 43.2766, 0.0, 0.0, 23.9936, 0.9882, 0.0, 4.0, 9.9703], [0.0, 0.0, 0.0, 6.0417, 0.9836, 0.0, 0.0, 0.0, 7.9756, 0.0, 0.0, 6.0141, 0.0, 0.0, 0.0, 33.0532, 0.0, 0.0, 30.1917, 3.9765, 0.0, 0.0, 7.9802], [10.9529, 11.1875, 73.7311, 125.2178], [0.0, 0.0, 0.0, 4.0208, 0.0, 1.9885, 2.0, 1.9767, 0.0, 4.1481, 0.0, 0.0, 0.0, 0.0, 49.1064, 0.0, 0.0, 44.3035, 0.0, 1.9844, 14.2101, 14.9604], [3.9878, 0.0, 0.0, 0.9808, 0.0, 0.0, 11.9787, 10.0488, 0.0, 60.0607, 0.9882, 0.0, 25.042, 33.9604], [1.0, 6.0476, 0.0, 14.3542, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 4.0141, 0.0, 0.0, 0.0, 39.2234, 0.0, 0.0, 39.984, 0.0, 17.8594, 22.0252, 50.6337], [9.0, 9.0714, 1.99, 10.0625, 46.0984, 0.0, 5.0056, 0.0, 10.5488, 0.0, 0.0, 0.0, 0.0, 0.0, 59.2979, 0.0, 0.0, 83.3099, 0.9882, 4.9531, 20.0252, 51.3069], [0.0, 3.0238, 0.0, 18.1667, 12.6721, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 80.5426, 0.0, 0.0, 99.1182, 6.0, 0.0, 27.0084, 41.8812], [0.0, 0.0, 10.95, 21.0625, 46.8033, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.2447, 10.0488, 0.0, 112.4473, 0.0, 0.0, 12.0084, 29.9901], [10.4878, 0.0, 158.7061, 3.9765, 9.9219, 31.7731, 45.9703], [0.0, 0.0, 2.98, 18.1458, 4.9508, 0.0, 0.0, 0.0, 4.0141, 0.0, 66.2926, 16.0732, 0.0, 120.8594, 21.9529, 0.0, 20.1933, 28.9703], [180.6223, 15.0732, 0.0, 79.8435, 22.0, 5.9688, 41.5798, 53.1386], [0.0, 1.99, 49.625, 66.7541, 10.2414, 34.096, 0.0, 1.0, 0.0, 11.9038, 0.0, 183.3511, 4.0, 0.0, 82.5176, 9.9647, 5.9531, 37.4706, 62.1683], [0.0, 4.0238, 4.97, 37.4792, 24.623, 0.0, 10.0169, 0.0, 0.9878, 0.0, 0.0, 0.0, 4.9423, 0.0, 0.0, 184.4947, 11.0488, 0.0, 137.1821, 13.9529, 8.9219, 53.2353, 58.6139], [1.0, 0.0, 7.96, 53.3542, 68.6721, 11.1839, 7.0169, 10.2558, 0.9878, 0.0, 12.1034, 5.0141, 10.9038, 0.0, 0.0, 165.8936, 17.2439, 0.0, 158.2524, 2.9882, 6.9375, 62.2941, 61.1683], [0.0, 0.0, 4.97, 46.2083, 36.9672, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 6.0141, 15.0385, 0.0, 0.0, 190.5106, 25.9756, 0.0, 191.901, 21.0, 28.3438, 84.2773, 91.2376], [4.0, 0.0, 11.94, 46.0833, 33.7377, 0.0, 11.0565, 0.9767, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 204.0904, 42.8293, 218.476, 2.9882, 6.9375, 59.4538, 64.7624], [1.0, 20.2619, 9.95, 59.8125, 47.9508, 0.9885, 7.0113, 6.0233, 0.0, 1.0, 1.0, 6.1127, 0.0, 229.4415, 27.1463, 0.0, 220.9744, 3.9765, 18.8594, 72.8571, 102.4455], [5.0, 11.94, 48.5208, 36.7049, 2.977, 18.0395, 0.0, 0.0, 0.0, 20.8269, 0.0, 0.0, 263.3404, 14.0976, 0.0, 241.5751, 23.9176, 33.1562, 64.4622, 117.0099], [21.4884, 6.0476, 38.87, 97.125, 87.7049, 14.931, 16.1977, 30.1628, 17.2195, 4.037, 2.0, 32.9423, 0.0, 4.0, 237.8511, 18.1707, 2.2174, 242.0415, 33.8824, 20.5, 83.9412, 126.2079]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

