created: 20230308221219000
creator: Drevarr
modified: 20230705163521510
modifier: drevarr
tags: ChartData
title: 202303082212_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Demon Sekhmet", "K\u00f4sair", "Momomeko", "Domina Flagbringer"];
const professions = ["Scrapper", "Spellbreaker", "Spellbreaker", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.3886, 0.0, 0.0, 2.8105, 2.7656, 10.8486, 67.2278, 0.0, 10.88, 2.7141, 2.7322, 0.0, 3.6868, 34.3612, 0.0, 0.0, 0.0, 0.0, 0.0, 16.3363, 23.9639, 7.5898, 10.8256, 7.3526, 0.0, 2.6784, 20.1696, 14.2629, 5.832], [12.0724, 23.6072, 0.0, 12.974, 26.5227, 50.0094, 68.4331, 65.267, 27.1999, 81.0489, 72.8062, 125.2121, 12.4614, 0.0, 72.3877, 41.9569, 0.0, 38.5503, 34.0092, 24.3331, 39.7297, 77.8915, 13.5959, 27.1728, 13.4352, 67.9008, 26.3287, 16.3555], [0.0, 0.0, 0.0, 0.0, 0.0, 64.5183, 170.7067, 0.0, 49.5314, 36.2953, 127.2295, 38.07, 101.6736, 52.1968, 93.1997, 84.9285, 90.6293, 72.4896, 140.3424, 70.4953, 39.3725], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.4695, 576.329, 461.8152, 100.4642, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 134.447], [0.0, 40.9445, 0.0, 11.4053, 37.7182, 142.7076, 172.355, 72.0839, 39.0163, 86.5708, 77.3867, 134.9602, 52.725, 0.0, 14.4624, 76.6458, 129.8397, 15.4704, 15.5575, 0.0, 55.9864, 25.4477, 21.9912, 19.9861, 102.0758, 70.2391, 62.4442, 66.8736, 124.5024, 0.0, 20.4509]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

