created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Tootsy Pop Star", "Lord Of Bones", "Drevarr Moonwillow", "Vampdru", "High Sorcer Baradun", "Gestalia Yesteryear", "Artakama Nahid", "Tribal S", "Arriasa"];
const professions = ["Scourge", "Scourge", "Scourge", "Scrapper", "Druid", "Tempest", "Druid", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.3839, 97.3907, 67.2382, 11.2845, 18.6071, 1.2087, 9.557, 0.0, 24.6211, 10.4966, 12.9281, 43.4042, 0.0, 35.9919, 19.0323, 0.0, 0.0, 0.0, 0.0, 11.2888, 0.0, 38.1202, 65.147, 10.6075, 23.9888], [20.1454, 30.5605, 117.829, 29.6997, 35.7588, 27.1602, 23.6477, 0.0, 34.7803, 18.6833, 15.2654, 17.3174, 0.0, 27.405, 4.5792, 0.0, 0.0, 0.0, 6.8779, 0.0, 26.8796, 49.9229, 24.9087, 30.5688], [44.7097, 80.5992, 128.2066, 39.3919, 27.4081, 0.0, 12.88, 0.0, 37.2902, 4.1026, 40.6468, 44.2014, 47.8674, 23.3014, 0.0, 3.4992, 0.0, 0.0, 25.3436, 0.0, 37.0205, 76.8163, 0.0, 31.6968], [38.3411, 182.6915, 95.5604, 59.1224, 10.3257, 0.0, 7.9598, 0.0, 37.7683, 15.6895, 25.8927, 25.511, 67.1422, 10.3747, 15.378, 0.0, 4.7099, 0.0, 13.9896, 113.3698, 0.0, 42.4128], [320.9126, 96.0917, 0.0, 0.0, 106.8694, 0.0, 99.1491, 437.6366, 0.0, 295.0848], [225.6279, 549.082, 532.0682, 111.2526, 119.0921, 86.031, 58.063, 0.0, 165.8938, 85.7842, 73.8434, 51.1107, 50.0249, 101.7639, 43.1446, 0.0, 0.0, 0.0, 40.9311, 0.0, 35.9209, 151.0824, 0.0, 51.0232], [316.217, 902.711, 647.0866, 159.5059, 86.4171, 41.5935, 106.9813, 0.0, 339.4368, 62.7766, 97.764, 76.0902, 241.0726, 37.8977, 26.356, 0.0, 0.0, 0.0, 98.0104, 0.0, 119.1255, 245.1322, 32.7697, 131.3368], [718.0842, 1529.7057, 854.4224, 280.7969, 154.2964, 173.5551, 89.5418, 135.6939, 451.188, 30.2518, 138.5204, 63.2461, 99.7081, 334.4324, 71.8839, 92.532, 63.0432, 72.2929, 130.6071, 122.6076, 177.9758, 358.5721, 189.6544], [683.5122, 1819.8628, 1081.2162, 284.6045, 279.0711, 36.6876, 191.5256, 85.6341, 801.1426, 74.6407, 166.4216, 170.5165, 0.0, 469.4477, 117.6997, 49.236, 0.0, 0.0, 0.0, 110.6074, 148.609, 166.287, 437.7139, 0.0, 240.0384], [823.6199, 2178.1934, 1343.8992, 601.6087, 255.8902, 276.2946, 208.2696, 0.0, 929.1485, 119.658, 339.7821, 189.5612, 0.0, 590.3951, 119.7985, 170.434, 0.0, 0.0, 80.7782, 0.0, 441.8029, 642.7378, 0.0, 256.4696]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

