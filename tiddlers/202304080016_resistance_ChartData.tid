created: 20230408001602000
creator: Drevarr
modified: 20230705163524809
modifier: drevarr
tags: ChartData
title: 202304080016_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Blancooo Padreee", "Xanvias Einzbern", "Black Raspberry Pie", "Sp\u00edcy Cheese", "Anita Strips", "Ryvalia Fazebringer", "Reyga Bannerclaw", "Smol Daddy Tika", "Gavann", "Air One Com", "Ark Darkness", "Jeckyll Mbs", "Newtype Khan", "Mmathuss", "Viral Marketing", "Koralia Danai", "Sister Elon\u00edth", "Bella Sassy", "Solus Sanctus", "Aronorf Xideliesi", "Arcanophage Farra"];
const professions = ["Firebrand", "Berserker", "Berserker", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[27.3983, 13.5005, 43.8423, 29.841, 37.7344, 28.0229, 40.4189, 25.8352, 9.7505, 42.8525, 7.128, 33.9264], [0.0, 0.0, 29.8067, 8.526, 38.0201, 0.0, 35.3069, 9.4448, 0.0, 4.2924, 8.4096, 12.5856, 4.1366, 0.0, 0.0, 0.0, 55.9375, 0.0, 0.0, 10.8576, 37.9642, 32.5671, 30.2496, 0.0, 21.0748, 55.6277], [14.3874, 40.18, 60.2925, 21.3718, 28.2554, 16.0402, 82.1328, 40.2412, 0.0, 21.927, 24.2064, 25.488, 17.102, 32.1086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [13.6083, 9.0003, 17.6576, 11.7659, 6.96, 17.9362, 15.336, 24.108, 6.9693, 18.3142, 0.0, 15.7248, 6.9766, 27.9773, 14.5848, 0.0, 23.7895, 29.5254, 26.9075, 45.4272, 26.0582, 17.6649, 16.3392, 14.0078, 5.3204, 50.8297], [14.725, 0.0, 0.0, 34.5587, 0.0, 44.2147, 37.897, 22.0132, 0.0, 2.4324, 9.8496, 13.5936, 5.9579, 7.9728, 0.0, 1.998, 63.153, 0.0, 53.4038, 40.3104, 29.8771, 42.6972, 31.2984, 45.239, 0.0, 0.0], [10.9334, 6.7302, 19.6196, 15.0626, 6.5704, 22.752, 27.4685, 13.23, 4.9318, 20.4604, 6.5088, 9.1008, 21.362, 25.368, 9.9686, 7.0448, 33.0767, 29.8638, 34.6037, 44.304, 43.8048, 14.8184, 26.5512, 19.6997, 5.9784, 23.2407], [12.2578, 7.4534, 15.9221, 16.3699, 15.7119, 5.9155, 24.3331, 1.9478, 9.3786, 20.8539, 4.8384, 20.016, 10.9897, 36.9648, 14.953, 2.1016, 27.5044, 33.5862, 20.0338, 53.2896, 29.2032, 28.4229, 30.0288, 22.3238, 9.494, 66.4234], [14.1587, 87.984, 96.5952, 47.8041, 50.2872, 38.9189, 26.3388, 188.1747], [19.036, 0.0, 44.0686, 31.7736, 27.5022, 36.4411, 0.0, 14.6265, 0.0, 10.1587, 8.4096, 16.6752, 10.7428, 95.6736, 0.0, 0.0, 0.0, 0.0, 86.48, 28.3296, 51.5549, 53.4552, 74.7408, 0.0, 0.0, 150.8396], [0.0, 10.0156, 8.3664, 8.9856, 67.9449, 11.8867, 30.6706, 93.515, 88.7454, 100.6975, 151.1328, 58.2941, 58.018, 85.1736, 98.7202, 0.0], [43.1881, 22.8423, 51.2373, 33.8766, 10.4919, 5.0434, 29.1043, 41.1233, 12.3539, 34.0173, 5.5152, 21.9168, 29.0178, 8.7701, 9.2606, 80.7986, 55.9206, 58.28, 43.68, 40.2106, 37.4228, 40.02, 53.9616, 42.3188, 62.2251], [55.7576, 33.932, 25.3923, 42.7437, 9.557, 43.3805, 119.1437, 22.0132, 0.0, 42.8882, 0.0, 20.4192, 37.291, 0.0, 13.9051, 0.0, 68.0823, 85.2345, 132.8925, 78.8736, 96.2582], [12.3357, 9.9044, 38.9374, 21.2582, 0.0, 12.0206, 41.9184, 0.0, 0.0, 7.8694, 0.0, 27.7632, 63.3761, 31.6738, 30.4723, 34.0548, 91.5146, 114.1254, 99.3462, 146.7648, 50.6563, 67.2888, 17.7778, 40.42, 47.9808], [55.7576, 41.9077, 36.1831, 28.4768, 19.6853, 65.0707, 47.7802, 26.754, 0.0, 35.4838, 28.7712, 34.416, 39.5136, 24.5707, 20.9851, 0.0, 59.6524, 60.489, 80.135, 95.5968, 20.1053, 46.7576, 60.444, 39.9538, 20.304, 98.5106], [39.6822, 18.4828, 48.3321, 54.2822, 43.6036, 13.6512, 42.3274, 17.8238, 0.0, 13.8788, 6.2208, 69.1488, 73.9028, 18.6998, 51.684, 0.0, 158.7397, 168.9039, 68.9138, 93.8496, 133.4362, 30.5578, 104.3832, 91.8456, 71.2332, 118.1527], [69.7035, 10.929, 58.9343, 69.9132, 46.7979, 39.5885, 97.6733, 40.6823, 18.5793, 70.7173, 18.2736, 39.7152, 78.9655, 43.4155, 31.3502, 0.0, 131.6639, 122.8815, 108.0413, 202.9248, 140.9616, 86.399, 123.8688, 115.1674, 34.8552, 104.0584], [12.128, 0.0, 66.0652, 60.8756, 69.6256, 7.6978, 89.0851, 62.475, 5.9506, 69.0361, 0.0, 52.9056, 22.5351, 7.3205, 14.7264, 0.0, 158.2396, 149.1921, 196.46, 262.704, 108.7258, 69.5713, 158.8104, 60.2818, 47.6392, 171.2315], [64.8731, 15.5296, 96.5511, 75.7109, 65.6522, 42.1291, 102.1718, 47.8117, 0.0, 87.1715, 9.2448, 75.312, 48.2498, 38.5594, 22.3728, 6.5712, 133.307, 90.5643, 124.7263, 225.888, 123.889, 76.9387, 162.6744, 97.1678, 36.3404, 88.9144], [101.9582, 63.1429, 75.1204, 116.7494, 15.5301, 18.6566, 85.4045, 73.4633, 14.6985, 93.0378, 0.0, 79.8048, 19.942, 15.9456, 18.408, 7.7996, 164.7406, 28.764, 117.8525, 263.7024, 72.3341, 71.2457, 159.4176, 95.3938, 60.2916, 130.7477], [53.3684, 40.4813, 76.8937, 97.8216, 81.9873, 30.4118, 56.9818, 106.7955, 14.8602, 52.725, 7.2, 67.5936, 16.0215, 26.0203, 23.449, 5.3872, 86.2281, 227.997, 223.8375, 225.888, 93.4502, 58.6459, 155.4432, 112.8019, 38.4272, 312.0251], [47.7848, 55.8904, 49.4263, 48.9392, 74.7936, 7.129, 47.0304, 68.7225, 29.8498, 73.1854, 0.0, 92.1888, 111.842, 19.6421, 35.1734, 231.2513, 123.3045, 186.8837, 211.6608, 207.3427, 89.3292, 192.2616, 140.0414, 38.2392, 233.1567], [31.6055, 77.1657, 121.5661, 101.971, 0.0, 106.7069, 144.3629, 40.9395, 0.0, 26.1836, 30.8736, 76.9824, 75.755, 81.54, 0.0, 0.0, 242.5388, 269.4087, 255.5625, 248.352, 87.4973, 28.3811, 182.8776, 212.2243, 86.7808, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

