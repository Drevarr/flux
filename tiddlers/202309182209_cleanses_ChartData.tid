created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Rafaellagabriela", "Anita Strips", "Solus Luxes", "Legends Light", "Arcanophage Farra", "Raziel Umbra", "Primal Clone", "N\u00f6sh\u00e0k", "Eibh\u00ebar", "High Sorcer Baradun", "Grasszanine", "Cat Wigglebooty", "Tootsie Pop Rocks", "Tegan Parker", "Ill Fix Your Honda", "Mike The Archmagus", "Zaedy Zae", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Druid", "Spellbreaker", "Chronomancer", "Chronomancer", "Mesmer", "Chronomancer", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Tempest", "Scrapper", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0116, 0.0681, 0.0, 0.0, 0.3171, 0.0, 0.3409, 0.0, 0.2317, 0.5152, 0.0, 0.0, 0.0671, 0.0816, 0.0526, 0.1702, 0.0, 0.0308, 0.3214, 0.0, 0.3053, 0.0, 0.0, 0.0, 0.6585, 0.0], [0.0, 0.1463, 0.2321, 0.2273, 0.0, 0.0854, 0.1364, 0.0476, 0.1111, 0.2134, 0.2449, 0.3333, 0.3404, 0.1707, 0.0, 0.1964, 0.3, 0.1789, 0.2308, 0.1899, 0.1486, 0.0488, 0.4857], [0.0, 0.0261, 0.0, 0.0, 0.0, 0.4634, 0.1071, 0.1818, 0.0, 0.2439, 0.4697, 0.0, 0.0, 0.1585, 0.3061, 0.0877, 0.1702, 0.3902, 0.2308, 0.0893, 0.0, 0.0211, 0.0, 0.1646, 0.1892, 0.878, 0.0], [0.0, 0.0174, 0.1021, 0.0, 0.0076, 0.1829, 0.1607, 0.2273, 0.0, 0.1098, 0.1061, 0.0238, 0.1852, 0.1585, 0.2245, 0.2807, 0.1702, 0.3415, 0.1846, 0.3036, 0.6, 0.0, 0.2308, 0.1899, 0.1757, 0.3415, 0.2571], [0.8667, 0.5579, 1.5897, 0.6835, 0.6486, 1.439, 0.0286], [0.0, 0.0667, 0.034, 0.0, 0.0, 0.1341, 0.375, 0.3636, 0.0, 0.0976, 0.0, 0.0, 0.1019, 0.2866, 0.2245, 0.7719, 0.2128, 0.0976, 0.0308, 0.2143, 0.3, 0.0105, 0.2308, 0.481, 0.0811, 0.0976, 0.3714], [0.0, 0.0, 0.3537, 0.3929, 1.3182, 0.0, 0.8537, 0.0909, 0.4259, 0.0366, 0.0816, 0.0, 0.4468, 0.6341, 0.4308, 0.0, 0.0, 0.0211, 0.0, 0.0886, 0.1486, 0.7317, 0.0571], [0.0488, 0.0203, 0.0, 0.0, 0.0, 0.1829, 0.1071, 0.3864, 0.0, 0.2805, 0.3636, 0.0, 0.5185, 0.189, 0.3673, 0.1579, 0.3191, 0.6829, 0.0, 0.4821, 0.5333, 0.2737, 0.6667, 0.1392, 0.1757, 0.4878, 0.0], [0.0, 0.0, 0.0, 0.0488, 0.7273, 0.0, 0.2439, 0.4242, 0.0, 0.1759, 0.4817, 0.3469, 0.5614, 0.1277, 0.2927, 0.4308, 0.5357, 0.9, 0.0, 0.3846, 0.1013, 0.2703, 0.9268, 0.3714], [0.0348, 0.0, 0.0909, 0.0, 0.6585, 0.7857, 0.9318, 0.0, 0.122, 0.1818, 0.0, 0.3796, 0.1768, 0.0, 0.1404, 0.1277, 0.1463, 0.6615, 0.7679, 0.0, 0.0, 0.6667, 0.0886, 0.4865, 0.561, 0.4286], [0.0696, 0.2298, 0.3409, 0.0, 1.061, 0.625, 2.4773, 0.0, 0.0244, 0.7424, 0.2143, 0.0833, 0.4329], [0.0, 0.0029, 0.0681, 0.0, 0.0, 0.3902, 0.6964, 1.1136, 0.0, 0.2683, 0.1212, 0.0, 0.3426, 0.311, 0.5714, 0.8421, 0.0, 0.4634, 0.3692, 0.2143, 0.3667, 0.0, 0.4359, 0.2025, 0.2432, 0.1951, 0.7143], [0.1362, 0.7064, 0.0, 0.0, 0.622, 0.9286, 1.7727, 0.1842, 0.3171, 0.697, 0.6759, 0.2988, 1.2245, 1.4386, 0.7447, 1.3415, 0.3846, 1.3929, 0.0, 0.3474, 2.0513, 0.0127, 0.0, 0.0, 0.0], [0.0244, 0.1623, 0.1234, 0.0, 0.0, 0.7195, 1.375, 1.3182, 0.0263, 0.5732, 1.6364, 0.0238, 1.2593, 1.0183, 0.8163, 1.2281, 0.9574, 1.4634, 1.2154, 0.2857, 0.2667, 0.0, 0.0, 0.0759, 0.0405, 1.5366, 0.0], [0.2348, 0.3234, 0.1591, 0.0458, 0.0, 2.4286, 0.5909, 0.2632, 1.1341, 1.7273, 0.2857, 1.0648, 1.0244, 0.0, 1.6842, 1.4681, 1.7561, 1.3538, 0.75, 0.1667, 0.1895, 1.9231, 0.2278, 0.6081, 0.878, 0.0], [0.2145, 1.1234, 0.5455, 0.1679, 1.4024, 0.7321, 2.8864, 0.0, 0.7805, 1.6364, 0.0952, 1.3981, 0.1402, 1.0816, 0.3684, 1.5532, 1.3902, 0.7385, 0.9821, 3.0333, 0.0842, 1.7436, 0.4937, 0.7297, 1.2195, 1.9429], [0.4261, 1.5404, 0.3636, 0.1908, 2.0732, 1.9464, 3.2273, 0.3421, 0.9634, 2.5, 0.0714, 1.4074, 1.4024, 1.1837, 1.9825, 0.6383, 2.2195, 0.7385, 0.3, 0.3474, 1.359, 0.4557, 0.8514, 1.3659, 1.8857], [0.0, 0.6348, 1.366, 0.1364, 0.0916, 1.7439, 1.2679, 4.2273, 0.1579, 1.7683, 2.3939, 0.0, 1.5093, 2.2134, 2.6735, 2.1754, 1.8936, 2.4878, 0.9385, 2.2857, 4.2, 0.2421, 2.7179, 0.0, 1.2297, 2.561, 0.3714], [0.5976, 0.5304, 1.3106, 0.8182, 0.1679, 2.0854, 2.0714, 2.9773, 0.3421, 1.5366, 1.8788, 0.2619, 2.1204, 1.6341, 1.1837, 3.0702, 2.6383, 1.2683, 1.3077, 2.1964, 2.0, 0.6947, 2.359, 0.3544, 1.527, 2.4146, 2.2], [0.3415, 0.7275, 1.3191, 0.5682, 0.145, 2.4024, 2.4286, 6.0, 0.1053, 1.5976, 2.1061, 2.4815, 2.1159, 2.6122, 2.6491, 4.8085, 4.0, 0.5231, 3.1429, 5.1333, 0.6632, 3.5641, 1.481, 2.7297, 4.2683, 1.3714]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

