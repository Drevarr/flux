created: 20230529221000000
creator: Drevarr
modified: 20230705163532186
modifier: drevarr
tags: ChartData
title: 202305292210_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Rose D Avatar", "Big T Rock", "Pu Ella", "Zihbb", "Alex Asesino", "Crusader Siolith", "Belvyn Brightblade", "Nibbib", "Blanco Padre Guard", "Tegan Parker", "Nova Keenway", "Artakama Nahid", "Ryvalia Fazebringer", "Fribble Bibble", "Venomina The Siren", "Koralia Danai", "Bella Sassy", "Gabe Malhorn", "Zadey Starbolt", "Cat Wigglebooty", "Tribal S", "Scarlet Nighttshade", "Fluffy Mccutestuff", "Sygaldry Verdandi", "Riann Swordbreak", "Roynec", "Sword Of Damocl\u00e9s", "Grilo Gringo", "Lucas Ryn", "Pamtastic", "Solus Sanctus", "Primal Clone", "Johosh Of The North", "Alnerian", "Drevarr Moonwillow", "Black Raspberry Pie", "Legionstorm", "\u00c4big\u00e4il", "Miphest\u00f6", "Tika Fiery", "Tuandha Lan", "Crusader Siolith", "Aira Draugr", "Oo Dads Mad", "Sumatra Satyricon", "Rx Medic", "Mawsmer", "Legacy Of Mathus", "Sire Nighthawk", "Riann Swordbreak", "Rosie Sunray", "Smol Gluvs", "Tootsie Pop Rocks", "Inedible Plant", "Smol Bee", "Kary\u00edna", "Rozaalyna", "No Reserv\u00e9", "Jeckyll Mbs", "Sister Elonith", "Lord Erin The Wise", "Cyclotechnist Farra", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Tempest", "Druid", "Firebrand", "Chronomancer", "Virtuoso", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Soulbeast", "Tempest", "Chronomancer", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Druid", "Willbender", "Harbinger", "Firebrand", "Spellbreaker", "Reaper", "Vindicator", "Dragonhunter", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Tempest", "Dragonhunter", "Scrapper", "Chronomancer", "Soulbeast", "Reaper", "Tempest", "Firebrand", "Renegade", "Dragonhunter", "Herald", "Spellbreaker", "Soulbeast", "Firebrand", "Virtuoso", "Berserker", "Vindicator", "Berserker", "Vindicator", "Scourge", "Scrapper", "Vindicator", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Berserker", "Berserker", "Weaver", "Scrapper", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [2.3115], [34.188], [52.41], [52.878], [13.2644, 9.2251, 23.5, 11.0488, 29.6492, 25.3286, 37.464], [0.0, 6.8431, 13.6739, 6.4722, 37.5556, 0.0, 142.211, 104.4692], [0.0, 15.4146, 0.0, 20.6944, 18.2963, 34.4483, 129.7706, 146.4846], [2.36, 23.5714, 33.2174, 4.7222, 38.963, 64.3103, 71.6789, 21.9538, 21.0402, 14.4957, 73.4545, 13.3171, 5.5236, 47.1143, 46.644], [13.1867, 27.9944, 0.1087, 1.2222, 62.3889, 0.0, 41.2385, 47.7846, 9.6379, 12.8462, 8.0909, 5.3252, 37.8822, 130.9857, 27.068], [63.24, 20.1303, 1185.2609, 137.75, 17.2284, 355.6034], [0.0, 31.8627, 0.0, 0.0, 27.358, 2.1034, 67.4771, 102.5385, 13.2126, 27.9744, 68.5909, 7.3415, 44.0183, 59.3, 48.032], [3.28, 32.0336, 0.4783, 15.6389, 27.6914, 27.3103, 155.6055, 43.3923, 29.7529, 34.3447, 49.9091, 37.3659, 84.9215, 59.7857, 57.69], [32.4, 33.2689, 6.0652, 9.2222, 65.0062, 11.1897, 133.6697, 92.5154, 28.5517, 53.151, 55.4318, 31.8211, 37.1126, 120.4429, 51.7], [338.0367, 129.9692, 2.0345, 59.7151, 44.0, 58.3415, 58.7801, 167.0, 72.612], [2.0533, 28.7983, 4.2826, 25.3704, 0.0, 57.6697, 48.5923, 15.0632, 100.7721, 29.7727, 0.0, 176.3927, 31.1571, 29.204], [8.0933, 34.0686, 6.0, 31.0556, 39.3889, 21.6379, 57.0459, 26.4923, 25.4425, 113.037, 41.2955, 35.5366, 141.2487, 22.2429, 29.69], [65.8754, 0.0, 18.1667, 56.3519, 3.431, 81.4771, 147.4462, 27.4425, 100.4103, 11.9091, 18.9756, 76.3141, 134.0429, 0.0], [28.5333, 54.7675, 0.0, 0.8611, 83.0556, 83.1207, 123.0367, 146.4231, 29.1724, 23.4587, 57.5455, 23.4309, 72.2565, 64.5857, 49.854], [0.0, 28.8711, 20.7609, 4.9722, 47.9877, 5.5517, 116.7064, 182.9462, 34.5115, 35.8006, 58.7955, 27.9756, 75.9031, 101.8571, 86.628], [6.76, 80.9062, 55.2391, 110.25, 55.5926, 54.2931, 61.5505, 63.0231, 25.5115, 39.2564, 89.5455, 82.7805, 76.2539, 37.3857, 41.582], [0.0, 169.2451, 0.0, 0.0, 88.2531, 104.2931, 333.055], [165.5714, 334.58], [0.0, 69.1639, 38.8261, 16.5833, 62.716, 11.9655, 99.3853, 65.0462, 41.2644, 106.0855, 50.1136, 1.9431, 59.3298, 50.1, 61.172], [8.0667, 115.0546, 7.7826, 4.9722, 96.4506, 0.2241, 155.7523, 215.0154, 54.3506, 121.7863], [24.6667, 157.5266, 0.5, 22.9444, 131.5864, 261.1468, 248.9154], [252.1286, 360.39], [279.7989, 321.4701, 212.9318, 192.0894, 74.178, 0.0, 0.0], [5.4667, 87.7689, 55.2609, 15.4444, 65.9012, 136.3966, 95.1193, 121.8231, 48.8046, 102.4986, 40.8182, 36.935, 66.0471, 108.0714, 66.688], [2.087, 0.0, 84.8889, 72.3966, 404.9266, 537.1846, 85.4368, 78.7721, 36.7727, 33.0732, 126.7042], [43.2267, 78.9034, 0.0, 9.6667, 82.6049, 33.5345, 228.2385, 113.0615, 43.2989, 53.1823, 110.8864, 11.1057, 137.0785, 173.2429, 49.37], [0.0, 80.4664, 31.913, 40.4167, 56.0617, 11.5517, 216.3945, 120.3231, 39.0575, 85.5527, 17.4545, 46.3659, 84.2356, 153.5714, 97.298], [2.5867, 105.5602, 2.8478, 0.0, 99.6235, 13.8448, 112.8899, 194.6692, 34.4713, 114.8974, 14.8409, 37.0732, 93.0157, 128.1571, 84.498], [346.9714, 510.564], [1.2667, 108.923, 27.3261, 6.3056, 115.3704, 97.6207, 225.2752, 160.5308, 39.0805, 120.1595, 36.8864, 38.5854, 101.3403, 90.6714, 116.75], [27.2933, 96.9412, 0.0, 37.9167, 82.1111, 106.569, 342.2661, 204.8692, 33.5977, 12.4217, 171.7727, 15.7967, 166.7644, 124.8429, 128.424], [392.7701, 257.7151, 206.9091, 178.9512, 422.4921], [0.0, 73.1667, 110.1957, 91.9722, 245.3704, 196.9828, 409.8991, 1038.4538, 266.7644, 81.4615, 0.0], [0.0, 105.1737, 37.1522, 100.8056, 90.4136, 44.7241, 216.8624, 338.4308, 125.5575, 128.5869, 50.8182, 87.8455, 182.3429, 237.2429, 100.49], [6.96, 107.7479, 83.9348, 30.25, 107.8272, 7.1034, 173.0275, 231.7077, 43.9023, 225.3134, 7.0682, 7.9756, 309.4136, 114.5857, 114.66], [329.3696, 148.8611, 400.5988, 109.1207, 566.8899, 886.9154, 208.3333, 305.0342, 342.8409, 122.3821, 0.0], [0.0, 243.5224, 43.8261, 0.0, 445.1481, 113.4828, 758.1284, 924.3], [112.3867, 252.0182, 126.8043, 297.8611, 451.1728, 245.3276, 830.2294, 659.2231], [0.0, 275.6639, 21.0435, 0.0, 446.8642, 60.2414, 923.9174, 1044.9538], [47.5467, 170.0784, 258.2174, 133.3889, 142.6543, 36.1034, 326.1009, 273.6615, 170.8218, 50.2507, 146.8864, 26.1301, 251.8613, 232.5286, 214.776], [43.92, 212.8319, 232.9783, 159.9722, 461.3519, 533.8621, 1003.6514, 69.7462, 588.71], [277.5217, 313.7778, 557.1914, 667.7069, 399.4587, 1369.5769, 286.6552, 819.2621, 256.6364, 250.6911, 118.8717], [0.0, 665.6471, 178.8913, 196.3056, 870.7654, 345.3103, 1658.0092, 1848.4769, 434.2874], [57.5172, 1312.0459, 895.9538, 447.6839, 457.3134, 194.5682, 340.6667, 503.9503, 935.2429, 790.024], [91.7727, 433.0732, 1335.1335, 929.6286, 1331.32], [706.7759, 935.3761, 666.7846, 467.5747, 960.4672, 141.5682, 255.0325, 158.6571, 1155.8857, 1067.564], [0.0, 523.9776, 375.4348, 19.8889, 300.7222, 59.6897, 880.2018, 873.4692, 331.546, 502.1909, 125.4545, 292.5122, 593.0602, 531.4429, 504.866], [42.96, 382.8319, 316.6739, 43.8889, 717.7654, 159.2759, 1175.2936, 129.1923, 564.5575, 535.0883, 450.1591, 391.3577, 608.7644, 1028.8286, 737.9], [0.5733, 286.402, 547.1957, 765.3889, 632.9383, 102.431, 1323.5321, 1091.0308, 122.431, 391.9117, 163.75, 279.5366, 994.9817, 931.3857, 814.87], [24.56, 248.0504, 444.8261, 244.0833, 522.7716, 68.1207, 1303.2752, 1075.2077, 576.3736, 1051.6011, 232.3864, 411.7805, 145.9188, 1645.5571, 1002.32], [33.0933, 664.2367, 179.6304, 224.9444, 644.2284, 524.5345, 1757.5688, 1421.9538, 436.3736, 198.6923, 195.6818, 377.7642, 637.322, 1283.2714, 921.88], [0.0, 776.6905, 227.3261, 109.6667, 459.8519, 241.1207, 282.1376, 1406.3231, 281.6552, 921.2678, 197.3409, 160.7154, 904.1675, 427.9857, 775.352], [529.6289, 177.9565, 166.3889, 576.1111, 279.9138, 1782.1101, 1653.1231, 204.6379, 775.9858, 109.8409, 425.252, 716.3979, 1280.8, 794.868], [77.68, 763.6289, 143.8478, 124.9444, 507.7346, 279.0517, 976.5229, 1776.4923, 0.2011, 980.1681, 106.2045, 77.439, 1307.5524, 880.3143, 649.342], [694.3793, 1805.7208, 784.4091, 128.2764, 1836.3848, 1508.0143, 1813.676], [0.0, 1269.0238, 1116.9348, 106.3889, 748.5741, 309.7931, 888.1101, 2256.0692, 204.7701, 1085.0427, 735.5909, 169.5366, 1700.3325, 1014.4429, 794.79], [3.56, 899.8782, 253.413, 332.2778, 395.8086, 208.1897, 1844.4404, 983.0, 783.1609, 845.755, 73.4545, 851.9756, 1789.7513, 989.1714, 1489.248], [21.3333, 1190.7325, 633.8478, 349.4722, 1174.8704, 276.4483, 2283.9908, 2788.1154, 824.8103, 1760.6097, 4.1136, 377.9593, 233.6047, 1668.3143, 1499.08], [45.4533, 2192.1863, 690.2391, 352.6389, 1409.7901, 0.0, 3720.9633, 4789.3154, 1044.1782, 3259.0798, 0.0, 1054.8862, 3515.2199, 2226.7429, 2616.53]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

