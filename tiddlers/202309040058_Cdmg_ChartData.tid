created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Brazilian Hookah", "Necrotic Windrunner", "Serosh Loux", "Serene Azura", "Chocolate Teapot", "Gestern Yesteryear", "Nose Llama", "Kosair", "Gamora Titus", "Glizzy Gobbl\u00e9r", "Sister Elonith", "Drevarr Moonwillow", "Nose Llama", "Gamora Titus", "Drac Tepes", "Xanvias", "Charr Surethang"];
const professions = ["Tempest", "Reaper", "Willbender", "Dragonhunter", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Reaper", "Berserker", "Scrapper", "Tempest", "Dragonhunter", "Scourge", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 3.0364, 8.3333, 229.6842, 15.0385], [35.9036, 40.4167, 3.6091, 8.9048, 0.0, 5.3438, 35.8667, 6.3939, 2.8049, 0.0, 17.2727, 0.0, 30.1754, 34.6154, 10.8372, 33.6747, 0.0], [34.8125, 12.9111, 71.9394, 31.7073, 13.7195, 39.0182, 2.2696, 67.2982, 6.5962, 34.9535, 55.2289, 14.3571], [30.6204, 13.1818, 8.7381, 0.0, 58.0, 130.0222, 22.7879, 24.2195, 36.0182, 2.4314, 30.0351, 0.0769, 25.5814, 84.8554, 21.7143], [1.7683, 11.8958, 10.6119, 11.1774, 5.78, 0.7449, 9.5242, 3.8429, 22.9167, 142.6596, 0.0, 5.0909, 23.3261, 1.5567, 24.3743, 5.7525, 27.1687, 5.25, 0.3318, 2.5476, 0.0, 3.7188, 17.6222, 0.0, 1.8537, 0.0, 2.0, 0.0, 39.4211, 0.0, 7.8837, 15.5542, 0.0], [0.0, 0.0, 6.1739, 9.5854, 49.1667, 79.3284, 58.1613, 72.6, 1.6122, 5.1855, 1.4286, 6.0, 17.3617, 17.0423, 0.0, 14.9348, 36.4742, 8.8182, 87.0891, 17.241, 8.037, 3.3591, 4.5714, 0.0, 95.9375, 44.3111, 55.8485, 0.0, 0.0, 8.2182, 0.0, 21.8596, 0.0, 31.2558, 3.8675, 18.75], [43.9697, 7.0333, 115.0435, 8.4878, 201.3958, 34.7164, 48.4355, 14.18, 10.7347, 68.4758, 48.6429, 46.7333, 80.4255, 98.7324, 87.5455], [6.7805, 185.7708, 89.4925, 10.1774, 148.94, 1.0816, 6.3629, 7.5429, 0.0, 9.0426, 10.9155, 101.9091, 52.5217, 4.9691, 15.2219, 20.4653, 60.0843, 19.1481, 23.5955, 7.2381, 0.0, 73.3636], [120.253, 92.2593, 5.2364, 42.0833, 0.0, 28.5, 129.9333, 0.0, 141.5854, 33.2195, 86.8545, 1.6127, 69.6491, 0.0, 8.0465, 95.506, 77.0714], [72.3043, 8.8144, 42.4412, 58.1683, 57.1084, 55.3889, 31.0455, 32.2143, 2.1071, 37.6875, 56.7778, 7.8485, 5.4146, 23.4146, 45.0364, 9.1176, 55.8246, 3.3462, 36.6512, 59.8072, 2.3214], [28.4636, 70.9405, 0.8929, 58.2812, 366.3333, 190.3939, 159.2195, 0.0, 36.9818, 21.1324, 5.9298, 15.8654, 254.6744, 118.1687, 33.3214], [0.0, 0.0, 14.9783, 6.439, 158.2292, 75.8657, 33.6935, 48.66, 14.3265, 17.5484, 21.2429, 31.3667, 26.3404, 55.0141, 0.0, 114.4783, 16.7629, 17.4439, 48.7525, 82.9157, 46.8426, 13.1909, 79.8452, 8.4643, 5.8125, 70.9333, 15.0, 9.8049, 5.5, 33.8182, 0.652, 60.8947, 0.0, 6.7442, 36.6506, 39.5357], [87.2174, 16.0412, 39.7193, 69.1089, 68.0361, 51.3056, 14.65, 56.3452, 147.75, 70.6, 159.3636, 21.9024, 0.0, 47.9091, 2.6029, 152.2105, 49.8269, 75.6744, 102.1325, 59.1429], [38.6855, 56.7714, 73.15, 92.4894, 173.662, 60.0455, 397.3261, 153.5258, 83.3824, 46.6634], [196.0093, 58.0591, 120.4524, 0.0, 43.4062, 426.6444, 657.0909, 11.5366, 29.4146, 171.1091, 18.6716, 280.8246, 188.3654, 104.1163, 453.5783, 126.8571], [11.0303, 29.7, 21.8696, 111.0, 223.1458, 57.3284, 63.4677, 105.68, 6.8163, 115.129, 34.3571, 117.6667, 162.0851, 155.0845, 66.2273, 268.0217, 61.2784, 126.0053, 141.703, 101.7108, 51.5926, 16.5455, 43.4286, 12.6786, 50.125, 98.3778, 109.0, 124.122, 0.0, 72.8, 20.8382, 39.8947, 180.7442, 255.0241, 67.5], [267.1829, 266.0625, 64.0896, 101.9839, 41.7, 59.0612, 57.3871, 88.2, 120.5167, 284.7234, 46.0282, 208.4091, 370.7174, 204.7938, 68.0053, 296.3168, 119.3494, 155.2315, 27.9636, 88.7381, 0.0, 612.7333, 226.3939]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

