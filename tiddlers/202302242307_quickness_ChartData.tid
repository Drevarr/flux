created: 20230224230708000
creator: Drevarr
modified: 20230705163520140
modifier: drevarr
tags: ChartData
title: 202302242307_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["R\u00fana Bierdna", "Xanvias Tseli", "Kosair", "Arcanophage Farra", "Blanco Padre Guard", "Aronorf Xideliesi"];
const professions = ["Spellbreaker", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[23.9081, 0.0, 19.8582, 0.0, 0.0, 8.0819, 37.8259, 0.0, 5.904, 0.0, 15.8918, 23.9634, 15.8309, 19.5059, 2.2481, 8.0203, 8.0136, 15.9936, 22.5936, 22.1191, 15.902, 0.0], [146.5943, 74.8925, 68.8762, 44.5066, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [168.7168, 47.332, 30.1624, 37.931, 151.1552, 120.528, 113.9706, 73.206, 8.9356], [80.2179, 34.9003, 28.1741, 35.449, 0.0, 67.5161, 45.5524, 95.1017, 22.6517, 7.3507, 14.8882, 36.9853, 11.096, 100.8691, 13.969, 3.168, 0.0, 44.2829, 84.3453, 34.1539, 95.3344, 13.9748, 21.4522, 4.1467, 92.5904, 42.0082, 60.3543], [33.7649, 55.1616, 65.9808, 16.5878, 33.2976, 72.9252, 80.9612, 115.3788, 41.746, 18.8446, 7.2442, 0.0, 21.2054, 0.0, 29.268, 41.4328, 81.6019, 41.7492, 41.1206, 71.0618, 35.5446, 14.1865, 28.3147, 121.2064, 63.6768, 91.1885, 80.6079, 44.3788], [75.2895, 84.0154, 77.0054, 53.0314, 31.3152, 80.0939, 58.2473, 129.1204, 60.4962, 10.4247, 6.8678, 20.6771, 13.592, 111.2808, 17.424, 5.6597, 93.2083, 107.0632, 45.4253, 86.1773, 25.8838, 25.1605, 13.8394, 80.2032, 58.32, 89.3201, 76.8663, 26.4154]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

