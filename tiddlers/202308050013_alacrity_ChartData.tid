created: 20230805001335000
creator: Drevarr
tags: ChartData
title: 202308050013_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Drevarr Moonwillow", "\u00c1rk\u00e1ntor", "Venomina The Sly", "Kosa\u00efr", "J\u00e2sm\u00eene", "Klengah", "Sakis Ranger", "Kahlyanne", "Arriasa", "Zaedy Zae"];
const professions = ["Tempest", "Scrapper", "Scourge", "Druid", "Tempest", "Tempest", "Druid", "Druid", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[115.6238, 10.8017, 0.0, 40.089, 47.7802, 82.5766, 0.0, 168.1585, 12.0515, 39.9608, 88.9672, 0.0, 90.72, 0.0, 0.0, 0.0, 0.0, 127.8626, 0.0, 38.6512, 37.7829, 0.0, 45.747, 45.736, 35.0244], [2.0202, 123.4094, 398.334, 0.0, 7.6263, 62.037, 24.8262, 38.1522, 42.7456, 7.1392, 65.3209, 7.676, 4.5726, 2.5737, 32.4324, 15.792, 23.0496, 9.7412, 50.3405, 69.9191, 2.0767, 26.781, 2.0668, 24.5456, 17.4037, 0.0, 13.9021, 21.6729], [0.0, 73.6646, 333.324, 6.0536, 19.7036, 51.7817, 18.1769, 9.2684, 58.2894, 4.6, 52.0853, 24.5557, 13.7842, 28.937, 17.523, 47.1072, 45.1584, 31.4063, 3.381, 63.3264, 70.0112, 0.0, 41.3168, 34.5558, 0.0, 22.7273, 7.4147, 47.65, 36.3906], [0.0, 285.768, 909.549, 0.0, 47.9835, 61.1703, 0.0, 52.0352, 0.0, 168.8151, 0.0, 117.1206, 69.1785, 0.0, 0.0, 24.0372, 178.1472, 48.7872, 97.1293, 49.619, 126.3886, 70.3885, 107.6922, 0.0, 56.9205, 0.0, 63.7684, 11.5506], [30.9116, 272.6438, 1095.123, 81.8966, 4.6409, 84.8585, 0.0, 30.7832, 86.5716, 161.0431, 91.08, 200.5333, 42.5293, 91.4526, 42.4316, 39.897, 87.8976, 135.9456, 71.7455, 34.4085, 141.2419, 273.9649, 0.0, 69.1116], [479.6669, 1564.377, 86.5665, 49.4219, 121.0407, 51.037, 120.8088, 217.539, 48.3184, 181.4893, 49.2057, 42.8104, 216.6098, 82.3086, 107.3856, 132.7872, 247.5341, 123.2566, 0.0, 39.5258, 0.0, 82.0585, 78.156, 87.308, 91.287], [21.4063, 464.8493, 1919.568, 173.2194, 0.0, 67.0924, 78.8256, 71.4306, 215.7455, 0.0, 265.759, 96.3746, 206.4973, 186.7686, 0.0, 215.9136, 101.0016, 0.0, 241.7626, 256.6463, 0.0, 0.0, 110.8106, 0.0, 103.2525, 0.0, 88.6512, 95.634], [0.0, 743.8435, 2290.716, 0.0, 57.9168, 82.7641, 0.0, 119.14, 0.0, 161.7157, 0.0, 209.0278, 0.0, 206.5728, 82.4544, 156.102, 217.4741, 488.6045, 18.1508, 81.3008, 102.5795, 0.0, 113.256, 0.0, 88.6512, 90.4797], [0.0, 668.2738, 2108.688, 274.574, 87.5265, 108.5467, 33.1031, 92.0115, 202.8661, 162.3136, 84.7136, 343.3633, 86.888, 304.2456, 291.526, 33.4422, 330.4896, 331.2288, 223.1588, 22.008, 351.9024, 340.3834, 30.2796, 0.0, 151.4633, 106.7917, 83.5107, 84.6216, 120.5361], [998.0712, 3188.445, 141.8272, 135.7014, 79.4857, 97.7976, 238.0151, 0.0, 231.3486, 181.8298, 32.571, 317.856, 274.1088, 111.5996, 304.0469, 334.5798, 0.0, 122.0149, 0.0, 136.539, 0.0, 147.7184, 159.6591], [682.668, 2820.252, 335.0235, 57.6725, 253.4922, 0.0, 84.1386, 211.3755, 251.317, 114.3376, 201.7712, 144.5619, 137.0464, 534.986, 0.0, 271.488, 281.3664, 85.2054, 428.2147, 437.0173, 0.0, 143.0677, 100.6578, 137.1168, 126.945, 103.4998, 137.4765, 101.4093]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

