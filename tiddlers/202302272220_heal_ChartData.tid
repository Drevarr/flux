created: 20230227222028000
creator: Drevarr
modified: 20230705163520396
modifier: drevarr
tags: ChartData
title: 202302272220_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Eibh\u00ebar", "Ravioli Fetabringer", "Etchery Howls", "Mac Aaroni", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Firebrand", "Druid", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.9272, 314.494, 368.4146, 415.6707, 438.0548, 151.0, 60.7308, 65.4474, 899.1, 0.0, 430.5938, 33.4189, 289.5911, 58.0323, 143.0637, 0.0, 0.0, 204.4692, 0.0], [172.6623, 560.5418, 1048.0894, 643.0854, 841.0822, 1018.0625, 981.9231, 869.2368, 1104.0, 91.9256, 457.9375, 148.1351, 482.8446, 25.7312, 0.0, 141.7834, 20.2222, 150.3936, 359.1738, 13.6094], [275.5033, 1236.1195, 3537.6016, 2949.8415, 1662.274, 4108.6875, 1399.4231, 2259.7895, 2546.0667, 122.7686, 2055.2188, 248.9595, 1253.5187, 199.7097, 58.6852, 530.6561, 131.2667], [171.0861, 1609.1315, 2918.6423, 1450.1463, 1857.2329, 1878.2083, 672.9231, 2709.9737, 2918.9667, 153.438, 2530.125, 39.3243, 910.535, 50.957, 27.8519, 646.3694, 55.9111, 632.6915, 1393.4203, 106.5469], [365.5099, 1441.2908, 2136.6748, 1559.1951, 1679.0959, 3548.0417, 1828.1923, 1221.9737, 4883.6, 119.281, 2913.8125, 283.9054, 2278.7442, 297.0968, 117.2963, 738.5287, 163.1556, 497.0319, 1439.8979, 106.0625], [577.6954, 2324.2032, 3879.1626, 1706.4634, 2173.1918, 1412.7917, 1125.5385, 1544.5, 2737.5667, 277.281, 1492.5312, 212.3311, 2627.5175, 370.6774, 106.6852, 1160.707, 245.8444, 970.4681, 1826.6751, 178.1562]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

