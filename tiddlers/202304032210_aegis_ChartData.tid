created: 20230403221011000
creator: Drevarr
modified: 20230705163524231
modifier: drevarr
tags: ChartData
title: 202304032210_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Viral Marketing", "Zaylen Harker", "Solus Sanctus", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.6199, 228.285, 43.1231, 31.5417, 11.9933, 18.7895, 43.9018, 47.7073, 24.806, 5.1032, 0.0, 54.9524, 0.0, 35.1155, 4.8892, 16.3325, 0.0], [169.6275, 245.4705, 26.2262, 225.0858, 126.3163, 103.9084, 150.9715, 82.1889, 47.4679], [169.1694, 361.152, 28.5485, 170.4245, 90.5299, 24.1095, 165.0076, 73.3323, 14.4394, 6.8537, 295.9778, 21.1491, 21.1622, 0.0, 49.8907], [427.6567, 553.7835, 62.6226, 310.9586, 514.7438, 83.421, 291.0466, 251.4476, 76.8062, 41.6962, 19.3329, 11.1013, 177.378, 0.0, 31.5242, 11.8818, 26.5423, 24.5969], [429.0308, 625.6035, 32.2722, 473.9518, 352.0608, 143.2985, 510.0816, 61.248, 94.61, 21.5206, 65.7769, 404.8392, 55.0925, 0.0, 0.0, 50.4134], [209.0189, 745.1325, 31.4314, 210.0581, 576.2578, 114.7747, 361.163, 340.4069, 64.2404, 50.7159, 0.0, 355.1038, 0.0, 106.1696, 146.2347, 86.8375, 40.1333], [390.2501, 729.999, 121.3212, 322.1881, 424.6008, 180.4249, 369.5328, 306.8701, 42.447, 102.7373, 383.2756, 0.0, 26.8853, 127.5448, 43.0147, 36.7937], [655.7606, 784.377, 5.2853, 542.9803, 866.6112, 343.1921, 467.4432, 425.4299, 69.5055, 175.5277, 11.8165, 612.128, 30.9379, 117.0684, 98.4308, 7.6457, 138.695]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

