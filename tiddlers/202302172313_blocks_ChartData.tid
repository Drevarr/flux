created: 20230217231312000
creator: Drevarr
modified: 20230705163519417
modifier: drevarr
tags: ChartData
title: 202302172313_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Meme", "Seren Nightroad", "Lord Erin The Wise", "Sumatra Satyricon", "Mac Aaroni", "Legacy Of Mathus", "Sp\u00edcy Cheese", "Tribal S", "Mike The Archmagus", "Ace Hammers", "Newtype Khan", "Abigail Ryn", "Mako Engi", "Nelliel T", "Smol Gluvs", "Minka Bringer", "Jeckyll Mbs", "Fruji", "Ark Darkness", "Sister Elonith", "Tyrisai", "Cat Wigglebooty", "Veron Blackburn", "K\u00f4sair", "Panther B Me", "Zaylen Harker", "Blanco Padre Guard", "Air One Com", "Tegan Parker", "Zadie Miststep", "Xanvias Tseli", "Arcanophage Farra", "Mistwalker Caelon", "Rina Of Theros", "Husky Guard", "Venomina The Siren", "Aronorf Xideliesi", "Koralia Danai", "Demon Sekhmet", "Be\u00eb", "Arka\u00f1", "Johosh The Great", "Bella Sassy", "Drevarr Moonwillow", "Ravioli Fetabringer", "Bambiae", "Ryvalia Fazebringer", "\u00c9\u00efbhear", "Whose Guardian", "Primal Clone"];
const professions = ["Weaver", "Scourge", "Weaver", "Soulbeast", "Tempest", "Berserker", "Berserker", "Druid", "Weaver", "Vindicator", "Spellbreaker", "Tempest", "Scrapper", "Scourge", "Scourge", "Scrapper", "Berserker", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Herald", "Berserker", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Berserker", "Spellbreaker", "Vindicator", "Scourge", "Dragonhunter", "Tempest", "Firebrand", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Dragonhunter", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 2, 1, 4, 0, 0, 0, 0, 0, 3, 2, 0, 2, 1, 8, 4, 0, 5, 1, 1, 3, 0, 4, 0, 0, 2, 1], [8, 2, 1, 7, 10, 2, 2, 4, 0, 7, 5, 2], [6, 2, 0, 5, 3, 1, 1, 0, 1, 1, 6, 0, 0, 2, 1, 6, 5, 0, 2, 1, 2, 5, 0, 4, 1, 2], [6, 1, 0, 7, 2, 1, 4, 3, 3, 16, 0, 0, 4, 1, 5, 0, 0, 4, 0, 0, 0, 2, 2, 0, 2, 3], [7, 1, 1, 12, 8, 1, 0, 4, 6, 16, 5, 0, 6, 0, 4, 6], [8, 2, 1, 3, 8, 1, 0, 0, 5, 1, 15, 4, 0, 6, 4, 9, 4, 1, 5], [2, 1, 9, 7, 1, 4, 4, 0, 10, 2, 3, 4, 4, 0, 0, 8, 2, 3, 7, 0, 3, 1, 0, 2], [4, 2, 2, 3, 9, 2, 6, 0, 4, 1, 9, 3, 0, 8, 2, 13, 7, 0, 2, 3, 2], [5, 2, 3, 4, 4, 1, 5, 0, 3, 1, 5, 1, 0, 7, 1, 11, 9, 10, 1, 2, 5, 1, 2, 0, 0, 1], [5, 2, 2, 7, 8, 1, 2, 1, 0, 11, 5, 6, 2, 5, 7, 2, 0, 5, 7, 0, 2, 1, 0, 7, 0], [3, 10, 15, 0, 23, 1, 4, 11, 5, 0, 9, 12], [12, 2, 0, 6, 1, 4, 2, 7, 3, 14, 1, 4, 5, 13, 11, 0, 12], [8, 3, 2, 17, 11, 8, 4, 1, 3, 3, 8, 8, 0, 12, 6, 4], [8, 1, 0, 15, 5, 4, 1, 3, 2, 9, 5, 0, 1, 5, 8, 9, 1, 2, 0, 0, 5, 0, 1, 3, 1, 7, 3], [3, 2, 1, 4, 13, 2, 5, 0, 4, 1, 6, 3, 0, 7, 4, 12, 8, 1, 3, 2, 2, 5, 0, 1, 2, 0, 10, 3], [5, 1, 1, 20, 4, 2, 2, 2, 1, 9, 5, 0, 11, 3, 18, 19, 0, 5, 2, 2], [9, 4, 1, 15, 7, 3, 2, 1, 5, 0, 9, 2, 7, 10, 9, 0, 2, 0, 6, 2, 0, 3, 3, 1, 9, 6], [11, 1, 0, 5, 0, 3, 4, 0, 2, 0, 16, 3, 0, 2, 4, 4, 6, 0, 24, 0, 4, 8, 1, 2, 0, 0, 7, 9], [11, 0, 10, 7, 8, 5, 6, 1, 17, 2, 0, 9, 9, 14, 11, 6], [9, 3, 0, 10, 5, 4, 2, 1, 4, 1, 7, 4, 6, 0, 18, 9, 0, 15, 1, 1, 3, 0, 1, 2, 0, 8, 4], [10, 3, 2, 21, 4, 2, 6, 7, 3, 17, 2, 1, 15, 4, 8, 11, 6], [5, 1, 1, 18, 7, 4, 11, 12, 1, 8, 5, 0, 13, 1, 10, 10, 0, 4, 0, 2, 5, 1, 2, 5, 0, 5, 5], [8, 2, 3, 19, 7, 5, 3, 1, 2, 0, 15, 11, 19, 16, 1, 16, 4, 5], [19, 2, 1, 12, 10, 4, 2, 0, 3, 4, 5, 2, 0, 6, 6, 13, 6, 0, 15, 0, 3, 7, 0, 4, 6, 0, 5, 2], [3, 2, 1, 7, 12, 8, 3, 0, 7, 1, 7, 2, 1, 10, 7, 11, 4, 0, 12, 2, 5, 7, 0, 3, 4, 0, 13, 11], [9, 2, 1, 14, 15, 4, 4, 0, 3, 1, 5, 5, 0, 8, 7, 10, 5, 1, 18, 2, 6, 9, 1, 3, 5, 1, 6], [7, 4, 3, 9, 9, 2, 5, 1, 4, 1, 12, 2, 6, 2, 15, 10, 18, 3, 4, 8, 1, 2, 5, 0, 5, 7], [9, 1, 3, 9, 7, 4, 1, 0, 6, 1, 17, 3, 1, 6, 6, 12, 1, 0, 14, 2, 5, 9, 2, 3, 5, 0, 15, 7], [6, 2, 2, 6, 9, 4, 1, 1, 10, 4, 0, 10, 8, 10, 18, 0, 12, 2, 5, 4, 2, 5, 5, 2, 6, 19], [10, 3, 0, 16, 16, 3, 2, 1, 5, 1, 11, 4, 0, 11, 6, 9, 11, 15, 1, 8, 6, 3, 3, 5, 1, 5, 9], [4, 1, 3, 13, 11, 7, 3, 4, 0, 10, 6, 16, 6, 14, 10, 0, 4, 5, 5, 9, 2, 2, 4, 2, 8, 18], [4, 2, 4, 10, 6, 7, 0, 3, 3, 15, 7, 12, 8, 21, 9, 0, 8, 2, 3, 10, 3, 6, 6, 1, 15, 13], [3, 1, 1, 12, 21, 5, 18, 0, 5, 1, 12, 9, 0, 7, 4, 14, 17, 0, 9, 2, 3, 7, 2, 3, 5, 5, 9, 5], [13, 3, 5, 20, 14, 9, 2, 1, 4, 3, 17, 4, 0, 9, 9, 13, 12, 0, 11, 2, 3, 5, 2, 5, 2, 1, 9, 6], [7, 1, 2, 22, 10, 6, 4, 4, 0, 36, 4, 1, 7, 8, 24, 8, 0, 5, 2, 3, 4, 1, 2, 10, 2, 8, 4], [7, 4, 6, 18, 15, 14, 2, 3, 1, 18, 1, 0, 11, 10, 14, 15, 18, 1, 4, 2, 1, 6, 4, 1, 10, 11], [8, 3, 1, 18, 12, 7, 5, 0, 4, 2, 4, 7, 1, 16, 10, 17, 17, 21, 2, 10, 11, 1, 6, 7, 1, 7, 9], [4, 1, 2, 19, 21, 4, 5, 4, 4, 16, 10, 10, 6, 17, 14, 27, 2, 6, 11, 1, 3, 5, 1, 8, 11], [9, 3, 6, 26, 17, 8, 3, 0, 3, 2, 24, 3, 21, 8, 21, 13, 17, 2, 3, 11, 1, 4, 4, 1, 8, 11], [13, 3, 2, 18, 21, 11, 6, 0, 7, 4, 22, 19, 1, 12, 10, 16, 16, 1, 8, 1, 5, 7, 1, 3, 7, 2, 13, 3], [9, 5, 5, 44, 15, 2, 2, 0, 5, 5, 40, 7, 1, 12, 6, 20, 19, 0, 33, 4, 4, 12, 1, 4], [7, 2, 2, 20, 23, 12, 1, 1, 3, 4, 23, 8, 0, 15, 9, 16, 18, 29, 4, 11, 9, 1, 6, 19, 1, 11, 11], [14, 3, 4, 28, 19, 19, 4, 0, 8, 5, 16, 15, 1, 3, 8, 21, 16, 0, 27, 4, 5, 12, 3, 4, 8, 3, 12, 14], [15, 4, 4, 23, 18, 15, 11, 4, 4, 20, 8, 12, 10, 25, 21, 0, 19, 3, 12, 12, 1, 5, 6, 3, 15, 14], [17, 3, 5, 23, 21, 13, 5, 0, 3, 1, 23, 12, 1, 12, 10, 19, 16, 0, 37, 3, 8, 11, 1, 6, 8, 0, 13, 20], [16, 4, 4, 36, 30, 14, 22, 6, 2, 13, 7, 1, 26, 11, 29, 13, 21, 1, 17, 5, 1, 9, 3, 2, 18, 36], [45, 4, 2, 33, 25, 17, 4, 1, 5, 3, 31, 22, 2, 16, 17, 24, 14, 30, 1, 7, 13, 1, 4, 7, 3, 9, 22], [11, 6, 2, 35, 29, 13, 17, 8, 3, 33, 15, 0, 16, 15, 24, 19, 0, 41, 2, 9, 16, 2, 6, 22, 1, 13, 10], [18, 4, 3, 41, 42, 27, 4, 3, 0, 27, 22, 36, 6, 16, 10, 21, 2, 8, 21, 2, 2, 39, 1, 17, 21], [29, 4, 8, 27, 51, 19, 0, 24, 2, 78, 16, 0, 9, 11, 16, 17, 55, 0, 8, 30, 3, 5, 5, 0, 12, 35]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

