created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Daphne Agla\u00e9", "Blancooo Padreee", "Aira Draugr", "Newtype Khan", "Dark Sidiuz", "Gokai Ramasheta", "Tootsy Pop Star", "Daring Deathblade", "Brygdyla", "Glorious Gluvs", "Vee Usagii", "Primal Clone", "Necrotic Windrunner", "Permanent Dawn", "Rina Of Theros", "Ax Axun", "Jmbrage Rev", "Lord Of Bones", "Duke Silvver", "Be\u00eb", "Shaca Booey", "Lord Erin The Wise", "Lucky Luprac\u00e1n", "Legacy Of Mathus", "Ateriuz", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Firebrand", "Scourge", "Spellbreaker", "Herald", "Spellbreaker", "Scourge", "Vindicator", "Scourge", "Reaper", "Tempest", "Berserker", "Dragonhunter", "Chronomancer", "Reaper", "Weaver", "Scourge", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Scourge", "Berserker", "Weaver", "Scrapper", "Berserker", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.5237, 50.4264, 81.9652, 57.5652, 127.2857, 4.481, 56.3393, 0.0, 25.747, 135.2955, 64.5783, 110.9903, 0.0, 31.0394, 24.0566, 13.48, 0.0, 0.0, 0.0, 9.2472, 12.0602, 9.698, 69.587, 0.0, 94.2447], [53.4448, 20.1498, 67.8435, 119.2795, 188.8571, 0.0, 275.75, 0.0, 28.4137, 212.3636, 206.012, 0.0, 0.0, 65.9606, 114.5094, 0.0, 0.0, 123.375, 0.0, 0.0, 10.747, 7.7987, 159.25, 0.0, 33.7447], [31.4227, 55.735, 95.4196, 53.8323, 194.3117, 0.0, 112.6607, 0.0, 24.5582, 85.4773, 120.8675, 124.6699, 0.0, 46.1281, 50.9811, 0.0, 0.0, 0.0, 17.3483, 0.0, 30.9463, 70.7935, 0.0, 190.0745], [9.511, 97.402, 159.7457, 158.0807, 190.5974, 0.0, 386.9107, 0.0, 28.0241], [43.7287, 50.3777, 99.2196, 45.7702, 261.6234, 0.0, 115.8929, 8.0172, 35.4618, 94.9545, 181.8554, 78.5631, 0.0, 10.4039, 212.4717, 15.64, 125.1, 0.0, 0.0, 30.9213, 68.2169, 16.6711, 95.2446, 0.0, 157.8511], [68.795, 80.1933, 0.0, 130.2298, 566.1169, 0.0, 445.7857, 0.0, 81.506, 445.1136, 186.9759, 64.5049, 0.0, 65.1281, 167.9245, 26.52, 0.0, 31.3333, 0.0, 76.3207, 0.0], [1152.7013, 0.0, 961.4643, 0.0, 159.9197, 405.2727, 424.5181, 28.0097, 0.0, 165.0591, 195.566, 142.08, 0.0], [33.0789, 40.1908, 131.55, 84.2733, 294.1688, 0.0, 205.2857, 0.0, 60.4016, 454.7045, 242.241, 94.6602, 0.0, 46.5123, 55.0943, 0.0, 0.0, 0.0, 6.8989, 53.6988, 38.0268, 131.6087, 0.0, 292.0426], [10.787, 354.4037, 516.8701, 7.5127, 409.4107, 0.0, 74.9598, 180.4318, 206.7349, 30.3883, 0.0, 164.0345, 219.8302, 29.56, 108.15, 0.0, 14.382, 13.1687, 118.6779, 267.5924, 5.6667, 249.1064], [4.1703, 125.7721, 88.563, 236.6646, 354.6234, 0.0, 486.4286, 0.0, 92.1486, 390.3182, 335.4096, 49.5146, 0.0, 11.1576, 0.0, 51.76, 52.95, 0.0, 0.0, 0.0, 3.5663, 0.0, 69.5217], [49.0631, 128.5211, 81.6348, 109.4348, 208.7143, 0.0, 206.9643, 0.0, 81.4699, 558.7045, 129.988, 59.9515, 138.8424, 143.6038, 21.18, 0.0, 0.0, 42.0674, 0.0, 11.8591, 79.6685, 0.0, 192.3723], [271.75, 370.7792, 6.7975, 411.2857, 0.0, 128.8353, 290.25, 7.5301, 78.2136, 0.0, 89.9704, 83.7925, 239.94, 181.55, 35.375, 0.0, 18.2472, 0.0, 3.5436, 94.913, 5.697, 545.6489], [64.4826, 122.1165, 157.7087, 170.4224, 121.3506, 0.0, 186.8929, 0.0, 74.008, 127.4545, 89.4337, 20.8738, 128.1872, 66.566, 124.7, 24.35, 43.5417, 10.2921, 128.3614, 57.9866, 142.6522, 0.0, 33.1277], [80.0694, 150.7273, 133.5739, 92.1925, 150.8182, 0.0, 263.4107, 57.7759, 80.755, 8.5227, 0.0, 18.1068, 0.0, 73.8374, 5.9623, 0.0, 0.0, 0.0, 75.6404, 93.8313, 0.0, 104.6902, 0.0, 633.2128], [0.0, 1225.2273, 153.9518, 370.6214, 623.9704, 91.717, 49.9, 130.95, 0.0, 0.0, 70.4831, 0.0, 108.5235, 597.288, 0.0, 760.6489], [94.3659, 137.5147, 166.9022, 180.0186, 241.7143, 67.1582, 442.5536, 34.4655, 70.739, 411.9318, 319.3976, 0.0, 0.0, 151.9704, 151.8868, 0.0, 49.125, 0.0, 0.0, 160.2472, 29.988, 95.7987, 191.125, 0.0, 72.7128], [63.8612, 152.4802, 268.7935, 236.9627, 244.6104, 0.0, 571.6607, 0.0, 80.8675, 426.7727, 0.0, 11.1262, 0.0, 160.4483, 46.3208, 90.0, 0.0, 129.125, 0.0, 88.7528, 0.0, 47.604, 126.5815, 0.0, 446.4362], [616.6786, 0.0, 125.6506, 938.0227, 682.506, 227.6019, 0.0, 457.5764, 67.4151, 97.82, 70.925, 0.0, 156.8989, 136.6747, 227.255, 512.3261, 0.0, 1280.3936], [42.8486, 187.3918, 236.8761, 309.2919, 484.6753, 5.5, 569.3214, 0.0, 195.3173, 660.4773, 415.1084, 215.7573, 207.4877, 132.4528, 163.3, 51.225, 146.875, 0.0, 137.4719, 50.2169, 103.2349, 217.2554, 0.0, 291.4894], [0.0, 270.0413, 662.1366, 929.7792, 69.2975, 679.3929, 0.0, 155.1285, 983.3409, 603.8313, 231.6699, 0.0, 195.2069, 89.3208, 327.14, 0.0, 0.0, 131.4494, 0.0, 126.4966, 161.0652, 0.0, 884.383], [139.1798, 254.7772, 311.9326, 386.7516, 441.1039, 6.5823, 283.3571, 175.3103, 105.2651, 570.0227, 272.253, 192.9029, 0.0, 144.9606, 322.8491, 3.64, 0.0, 0.0, 0.0, 12.0787, 58.494, 117.3624, 232.8424, 10.9048, 262.734], [2.0473, 420.0589, 508.2804, 443.354, 978.9091, 0.0, 631.6607, 0.0, 0.0], [21.1483, 270.3073, 674.7674, 442.5652, 351.8961, 80.3671, 576.8036, 0.0, 289.7711, 1064.1136, 421.1446, 383.7864, 0.0, 56.734, 0.0, 0.0, 52.95, 0.0, 3.6404, 58.9277, 86.7584, 265.2228], [191.5363, 312.7286, 447.7174, 366.9752, 1322.7922, 60.8987, 488.6071, 0.0, 143.1968, 800.1591, 741.3012, 292.9223, 85.9254, 375.6502, 18.9434, 60.02, 0.0, 0.0, 28.191, 0.0, 194.0537, 62.7554, 11.29, 681.3298], [303.3754, 322.4545, 595.2978, 279.1739, 1134.9091, 45.4177, 819.0, 43.7931, 248.3173, 868.3409, 767.0, 362.4563, 0.0, 439.0542, 399.2264, 78.36, 143.425, 0.0, 0.0, 99.1011, 27.0602, 112.5168, 735.3152, 18.4416, 979.5638], [169.0536, 399.041, 298.1217, 689.5776, 836.6364, 0.0, 560.9464, 0.0, 362.1004, 681.0227, 1052.2169, 519.3301, 0.0, 448.2512, 506.5849, 51.34, 125.45, 0.0, 142.3371, 30.1928, 30.9195, 591.6739, 24.9827, 1723.8723], [326.8391, 677.4417, 869.537, 969.7826, 1697.961, 77.0949, 1167.3214, 105.1897, 374.1406, 1428.4091, 929.3614, 809.5728, 0.0, 340.2365, 804.7547, 70.94, 0.0, 0.0, 0.0, 209.0562, 0.0, 170.349, 682.4348, 22.8874, 1251.883], [635.6719, 872.1216, 1188.1848, 1012.9814, 1109.9481, 0.0, 983.8393, 0.0, 353.9438, 1901.0, 743.5181, 1137.9709, 0.0, 553.1133, 661.9811, 195.78, 0.0, 79.625, 0.0, 265.9438, 10.8675, 553.2953, 1111.9565, 13.8831, 1973.4255]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

