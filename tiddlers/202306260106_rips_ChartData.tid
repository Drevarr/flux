created: 20230626010646000
creator: Drevarr
modified: 20230705163537323
modifier: drevarr
tags: ChartData
title: 202306260106_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Aribel Darkbringer", "Necrotic Windrunner", "Yngvar The Burdened", "Xanvias", "Elonith Requiem"];
const professions = ["Reaper", "Scourge", "Scourge", "Reaper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1905, 0.6744, 0.3176, 0.3608, 0.0, 0.6034, 0.2826, 0.3451, 0.3125, 0.4125], [0.5567, 0.1071, 0.2241, 0.0652, 0.6338, 0.6875, 0.2938, 0.0385, 0.1556, 0.3111, 0.0, 0.1406, 0.1273, 0.5281, 0.0256, 0.1129, 0.34, 0.3721, 0.5556, 0.0345, 0.0263, 0.0, 0.0789, 0.0536, 0.037, 0.049, 0.45, 0.4941, 0.0, 0.3265, 0.7101, 0.4762, 0.15, 0.5, 1.2963, 0.4062, 0.2386], [0.1346, 0.5333, 0.9333, 0.0, 0.3594, 0.1455, 0.6407, 0.3077, 0.5323, 1.14, 0.4186, 0.5263, 0.9811, 0.0263, 0.75, 0.7407, 0.7451, 0.7, 0.6588, 0.0241, 0.7041, 0.9855, 1.369, 0.95, 0.0667, 0.8243, 0.037, 0.5469, 0.8864], [0.3093, 0.0714, 1.0517, 0.1848, 0.8099, 0.5208, 0.5531, 0.5, 0.0, 0.5111, 0.0, 0.25, 0.1455, 0.5195, 0.1026, 0.3226, 0.54, 0.0233, 0.6444, 0.0, 0.7895, 0.5283, 0.0, 0.6786, 0.6049, 0.5882, 0.425, 0.8941, 0.0, 0.6531, 0.6232, 0.7381, 0.375, 0.0, 0.4595, 0.8519, 0.4219, 0.2955], [0.0526, 1.0794, 0.5349, 0.7176, 0.7732, 0.1071, 0.8793, 0.0, 1.3239, 1.0, 0.8406, 0.0, 0.5111, 0.9333, 0.0385, 0.3438, 0.3091, 0.645, 0.2564, 0.2903, 1.06, 0.3488, 0.6667, 0.3793, 0.8947, 1.1509, 0.0526, 0.7321, 0.3827, 0.8725, 0.55, 0.1647, 0.0, 0.7041, 0.8551, 1.1905, 0.5, 0.0667, 0.7568, 1.3704, 0.7656, 0.8295]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

