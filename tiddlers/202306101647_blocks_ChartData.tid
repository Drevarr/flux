created: 20230610164704000
creator: Drevarr
modified: 20230705163534783
modifier: drevarr
tags: ChartData
title: 202306101647_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Sub Train", "Axunar", "Venomina The Siren", "Cedryn X", "Morv\u00e4rth", "Zarandor Kel", "Duke Silvver", "Zhavashian", "Yngvar The Burdened", "Lucky Leipreach\u00e1n", "Sakis Ranger", "Arcanophage Farra", "Rosie Sunray", "Seikers Sorrow", "Tegan Parker", "Cat Wigglebooty", "Blanco Padre Guard", "Little Heks", "Melli Dragonswrath", "Xyntharos", "Johosh The Mighty", "Zayde Sunsabre", "Air One Com", "Scintilla The Storm", "Mistwalker Cael", "Elonith Requiem", "Kary\u00edna", "Tomitigas", "Smol Gluvs", "Xanvias Einzbern", "Tootsie Pop Rocks", "Morton Saltbringer", "Be\u00eb", "Arriasa", "Newtype Khan", "Tika Fiery", "Aronorf Xideliesi", "Primal Clone", "Solus Sanctus", "Koralia Danai", "Drevarr Moonwillow", "Bella Sassy", "Gestern Yesteryear", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Tempest", "Firebrand", "Dragonhunter", "Tempest", "Berserker", "Reaper", "Dragonhunter", "Vindicator", "Tempest", "Scourge", "Scrapper", "Druid", "Spellbreaker", "Vindicator", "Chronomancer", "Tempest", "Scrapper", "Firebrand", "Reaper", "Berserker", "Vindicator", "Berserker", "Spellbreaker", "Firebrand", "Tempest", "Vindicator", "Reaper", "Vindicator", "Tempest", "Reaper", "Berserker", "Scrapper", "Chronomancer", "Reaper", "Druid", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 14, 0, 1, 3, 0], [1, 1, 1, 5, 3, 1, 4, 0, 2, 1], [1, 7, 2, 2, 2, 6], [1, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 6, 1, 1, 2, 3], [0, 0, 0, 2, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 6, 1, 0, 1, 1], [0, 0, 0, 0, 7, 0, 0, 11, 0, 1, 2, 3], [0, 1, 8, 1, 1, 10, 1, 1, 3, 2], [0, 0, 2, 3, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 12, 0, 2, 3, 3], [0, 1, 1, 2, 5, 0, 2, 0, 2, 0, 0, 1, 1, 0, 0, 4, 1, 0, 12, 1, 0, 0, 2], [0, 0, 1, 0, 5, 0, 0, 20, 2, 2, 2, 5], [2, 0, 0, 0, 0, 0, 3, 2, 0, 28, 0, 1, 1, 4], [0, 0, 0, 3, 3, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 9, 0, 18, 1, 0, 3, 6], [0, 1, 3, 2, 3, 1, 2, 0, 2, 0, 0, 0, 0, 4, 2, 0, 15, 1, 1, 6, 5], [0, 0, 0, 2, 0, 2, 0, 0, 1, 0, 1, 0, 0, 17, 0, 0, 20, 1, 1, 1, 5], [1, 0, 1, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 25, 0, 0, 2, 6], [0, 0, 1, 2, 3, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0, 12, 1, 0, 18, 1, 2, 3, 5], [1, 1, 0, 3, 6, 1, 2, 0, 1, 0, 9, 0, 0, 21, 0, 0, 3, 7], [1, 1, 3, 1, 3, 1, 3, 1, 1, 0, 1, 2, 2, 1, 0, 8, 1, 0, 16, 3, 2, 3, 8], [0, 0, 0, 4, 0, 4, 0, 3, 0, 0, 0, 2, 0, 0, 17, 2, 0, 27, 1, 2, 1, 1], [1, 1, 2, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 13, 2, 0, 22, 2, 0, 9, 7], [0, 1, 2, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 0, 18, 2, 0, 23, 1, 0, 7, 6], [1, 0, 2, 5, 3, 0, 1, 1, 1, 0, 0, 1, 0, 0, 23, 1, 0, 18, 2, 2, 6, 6], [2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 10, 3, 1, 33, 3, 2, 6, 8], [1, 1, 2, 4, 4, 1, 1, 2, 1, 0, 1, 5, 1, 0, 12, 1, 0, 28, 1, 2, 5, 5], [1, 1, 1, 2, 5, 0, 1, 3, 2, 0, 0, 0, 0, 18, 1, 0, 31, 2, 2, 3, 6], [1, 0, 1, 2, 3, 1, 1, 0, 2, 0, 0, 1, 0, 0, 23, 2, 0, 24, 2, 1, 6, 10], [0, 1, 2, 2, 2, 0, 1, 0, 1, 0, 1, 1, 1, 0, 22, 2, 0, 27, 2, 0, 6, 10], [1, 0, 1, 4, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 16, 2, 0, 30, 1, 0, 6, 14], [2, 0, 1, 3, 2, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 20, 2, 0, 33, 2, 2, 5, 7], [1, 2, 1, 3, 5, 0, 2, 1, 5, 0, 0, 1, 1, 0, 0, 10, 3, 0, 34, 3, 2, 6, 5], [2, 1, 2, 4, 4, 0, 2, 1, 1, 0, 0, 1, 1, 0, 21, 1, 0, 28, 2, 1, 8, 6], [1, 1, 1, 2, 3, 4, 1, 1, 6, 0, 0, 1, 0, 0, 0, 17, 1, 0, 30, 1, 2, 3, 11], [1, 1, 1, 1, 6, 0, 0, 0, 0, 0, 1, 0, 0, 0, 23, 3, 0, 37, 1, 2, 6, 6], [0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 1, 1, 0, 0, 26, 2, 0, 35, 2, 3, 5, 8], [2, 1, 4, 6, 0, 1, 3, 0, 0, 0, 0, 0, 19, 3, 0, 38, 1, 2, 4, 7], [0, 0, 1, 1, 2, 0, 2, 2, 1, 0, 0, 0, 0, 0, 0, 28, 2, 0, 34, 3, 2, 8, 12], [0, 1, 3, 3, 5, 1, 4, 1, 2, 1, 1, 2, 0, 0, 25, 3, 0, 26, 3, 1, 9, 9], [0, 1, 1, 4, 5, 4, 5, 1, 5, 1, 0, 3, 1, 0, 22, 1, 0, 29, 2, 3, 6, 8], [0, 0, 3, 5, 5, 0, 1, 0, 0, 0, 0, 0, 0, 24, 2, 0, 45, 0, 1, 6, 12], [1, 0, 1, 4, 5, 3, 2, 2, 4, 0, 0, 3, 2, 0, 0, 26, 2, 1, 37, 1, 1, 6, 9], [1, 1, 1, 4, 5, 1, 1, 2, 2, 0, 0, 2, 3, 1, 24, 3, 0, 39, 4, 2, 6, 11], [0, 2, 2, 5, 3, 1, 1, 2, 2, 0, 1, 2, 0, 0, 24, 4, 1, 47, 1, 3, 11, 5], [2, 0, 3, 4, 6, 1, 4, 3, 6, 0, 3, 3, 1, 0, 23, 5, 1, 38, 3, 1, 11, 8], [2, 2, 2, 5, 5, 1, 2, 1, 6, 0, 1, 3, 3, 1, 0, 22, 4, 0, 39, 5, 3, 7, 12], [1, 1, 4, 5, 6, 0, 1, 2, 4, 0, 0, 2, 3, 1, 25, 3, 1, 49, 3, 5, 8, 10], [1, 1, 2, 5, 4, 0, 4, 1, 2, 0, 0, 2, 0, 0, 71, 3, 1, 39, 2, 2, 12, 12]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

