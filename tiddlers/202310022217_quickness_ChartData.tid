created: 20231002221736000
creator: Drevarr
tags: ChartData
title: 202310022217_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Belvyn Brightblade", "Gollum Mah Precious", "Grasszanine", "Klenga", "Gabe Malhorn", "Kosair", "Newtype Khan", "Sub Train", "Crusader Siolith", "Bella Bitty", "Solus Luxes"];
const professions = ["Scrapper", "Firebrand", "Harbinger", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0162, 0.0, 0.0, 0.0, 0.0, 0.0, 50.1635, 7.5095, 0.0, 0.0, 20.033, 12.5488, 10.051, 7.522, 11.9011, 3.1217, 13.1965, 7.9129, 2.5038, 8.91, 0.0, 0.0, 0.0, 5.3733], [41.9242, 8.584, 7.2588, 37.8761, 12.0646, 3.432, 359.2545, 0.0, 15.5423, 12.0934], [56.9885, 38.6584, 176.4445, 119.8981, 84.778, 80.7593, 22.9398], [120.9685, 99.3637, 15.2076, 79.7681, 13.4966, 66.6606, 38.7647, 42.9318, 23.4702, 24.408, 35.0635, 24.9295, 15.0228, 29.9693], [77.4979, 35.3188, 168.2772, 150.0152, 32.4254, 83.4999, 58.7726, 38.9075, 48.887, 44.2787, 38.5866, 36.288, 36.7052, 10.9028, 36.8023], [5.8558, 226.9051, 106.3221, 130.9643, 102.4531, 84.6296, 132.2647, 109.2095, 58.3362, 72.954, 52.0438, 51.3586, 41.8392, 69.9283], [27.1857, 5.4142, 149.0147, 165.1878, 60.2623, 133.8214, 97.4512, 105.3778, 129.2655, 98.4906, 39.1482, 68.256, 72.8973, 14.0892, 39.1014, 58.425], [50.5606, 41.3571, 0.0, 56.0135, 0.0, 219.8782, 41.5569, 41.6598, 14.3198, 155.641, 174.5424, 32.8624, 103.3836, 67.2241, 42.6765, 14.921, 32.2129, 19.7028, 46.629, 38.1416, 21.7118, 35.6791, 92.2539], [47.2165, 17.9494, 9.9124, 59.9678, 0.0, 451.4711, 54.4122, 22.0583, 41.1378, 87.837, 158.6853, 107.5457, 136.6786, 100.2971, 51.6991, 91.7755, 85.3024, 35.1, 67.986, 35.7304, 10.0593, 60.5299, 42.0024], [53.1838, 25.9651, 13.9694, 65.9482, 27.8923, 594.7524, 51.9302, 53.9975, 30.2082, 211.5793, 200.0963, 71.5369, 99.5352, 85.6794, 76.0258, 47.5373, 78.9047, 75.933, 61.047, 39.1932, 19.6187, 48.9645, 64.101], [75.2274, 19.9149, 43.8161, 88.0399, 0.0, 672.8512, 65.1674, 56.7748, 34.0032, 244.0944, 249.7211, 94.9601, 148.9821, 80.5913, 75.9116, 109.0959, 92.2052, 57.0258, 50.868, 61.3548, 62.1364, 57.6166, 96.719], [60.1481, 62.3021, 27.2809, 82.9745, 7.9611, 661.4368, 89.3506, 45.6121, 45.6412, 189.0807, 276.0736, 110.0803, 162.51, 142.2529, 111.7735, 99.0486, 120.3213, 77.3604, 81.351, 64.7662, 68.728, 30.0281, 89.6051]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

