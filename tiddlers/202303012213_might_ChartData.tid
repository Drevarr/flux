created: 20230301221309000
creator: Drevarr
modified: 20230705163520951
modifier: drevarr
tags: ChartData
title: 202303012213_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Kahless The Drunk", "Fribble Bibble", "Blanco Padre Guard", "Gavann", "Koralia Danai", "Mac Aaroni", "Sygaldry Verdandi", "Drevarr Moonwillow", "Bella Sassy", "Ravioli Fetabringer", "Grasszanine", "Newtype Khan", "Abigail Ryn", "Jeckyll Mbs", "Demon Sekhmet", "Arcanophage Farra"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0504, 7.7761, 2.0033, 6.0776, 19.8453, 8.3174, 12.0048, 6.3558, 12.2245, 2.7972, 3.348, 5.3222, 1.5397, 1.6509, 4.0117, 6.4082, 10.0267, 6.4032, 9.0605, 0.0, 5.8771, 41.3384, 4.9729, 1.1731, 0.8779, 1.2695, 3.036, 2.8512, 6.0545], [0.2016, 8.9543, 3.9169, 5.2659, 4.3842, 1.4, 0.5038, 7.2709, 6.311, 5.904, 8.28, 5.9613, 0.0, 2.7864, 1.2427, 0.1382, 3.0794, 17.1341, 2.4164, 0.6776, 10.692, 6.4474, 6.6269, 0.5702, 1.6302, 27.6115, 5.0209, 2.4365, 2.0674, 5.867, 1.5312, 0.9234, 2.17, 3.0798, 7.3188, 3.337, 11.2455, 1.381, 5.2142, 4.8655, 3.8405, 2.42, 1.0318, 12.3895], [4.3092, 5.5375, 4.5448, 2.9234, 0.8892, 1.4, 2.7711, 20.1019, 8.8282, 11.2963, 13.5279, 15.9975, 0.0, 1.4256, 1.9883, 5.2531, 3.1344, 1.7402, 6.2169, 2.9427, 6.5578, 3.4445, 9.5472, 0.5069, 0.2842, 28.716, 1.1992, 3.9104, 2.1523, 5.5239, 5.0688, 0.0, 3.4827, 7.2558, 5.1521, 3.8227, 2.3919, 2.9403, 8.5424, 7.2983, 5.0198], [0.126, 5.6554, 7.5049, 5.4982, 5.687, 0.2754, 1.2596, 11.3768, 12.3667, 2.7158, 11.0789, 8.8288, 0.0, 6.7046, 2.3829, 12.0028, 0.0, 5.4402, 15.4915, 13.6896, 9.4723, 5.2835, 13.0957, 2.5568, 1.3594, 5.6955, 1.5576, 1.8468, 6.4028, 10.0746, 17.9599, 1.8163, 13.0662, 1.5147, 4.1048, 4.4387, 0.0, 4.2592, 0.1769, 4.8154], [4.7717, 5.9202, 2.0909, 4.9425, 0.1836, 1.732, 12.5744, 6.7123, 1.1808, 6.0642, 9.7343, 0.0, 1.5552, 4.5907, 5.8061, 4.6742, 5.756, 0.0, 6.2339, 12.4978, 0.4195, 1.0858, 5.4067, 0.0, 41.4961, 2.4465, 3.008, 2.3506, 2.7105, 0.0, 4.0986, 2.3039, 7.4646, 20.223, 7.7722, 10.0674, 1.5147, 8.9861, 0.0854, 5.8061, 0.0, 6.692, 14.3959], [2.3688, 9.1311, 8.3122, 0.1355, 8.1272, 0.5967, 3.7788, 12.7455, 12.0384, 12.241, 12.4783, 12.3754, 0.0, 3.1644, 1.9354, 0.0, 14.8138, 2.2052, 0.9099, 13.0205, 7.3747, 4.081, 1.401, 0.0, 15.9358, 4.9889, 4.3616, 1.5576, 7.0679, 0.0, 1.539, 6.6171, 5.1156, 12.4227, 3.2736, 6.2832, 3.074, 8.1356, 6.7861, 1.8749, 0.271, 7.7238, 8.5272], [4.7717, 1.495, 0.0, 0.0, 0.0, 0.0, 21.9838, 0.0, 7.2422, 12.595, 3.773, 0.0, 17.6472, 10.9065, 10.1261, 5.4074, 4.6851, 0.4457, 8.3635, 2.9366, 7.0762, 0.0, 3.3022, 54.4341, 0.0, 17.9878, 1.1894, 0.8234, 0.0, 0.0, 0.0, 3.8106, 8.4744, 0.0, 6.1761, 0.0, 28.2897, 12.5052, 0.0, 0.1549, 1.415, 8.3767], [3.3012, 7.3638, 7.176, 0.8518, 7.1346, 0.8721, 0.9762, 24.1223, 10.0685, 8.1082, 14.869, 20.0724, 0.0, 1.6082, 4.3546, 2.6578, 0.8924, 1.173, 2.7878, 8.3635, 7.728, 6.7766, 28.5582, 2.7663, 1.9552, 2.0957, 4.4946, 3.4848, 2.8026, 0.6698, 3.3408, 9.1966, 9.7786, 9.2463, 5.0341, 8.8382, 6.6154, 4.7174, 1.5294, 5.4538, 17.3554], [6.174, 13.3726, 7.3853, 5.9242, 3.5776, 5.0949, 7.0538, 34.3015, 2.2982, 9.4464, 19.3589, 21.1288, 4.5646, 2.6136, 2.6755, 9.1238, 4.5092, 6.2468, 3.4486, 0.7938, 12.2126, 7.1981, 12.7296, 0.359, 3.9376, 51.9096, 0.2878, 3.76, 8.5243, 12.1114, 6.7584, 4.4226, 3.697, 11.0142, 3.9483, 7.0541, 8.4966, 7.3062, 5.473, 9.6457, 11.4307, 2.7104, 6.9278, 15.9007], [1.26, 12.9602, 9.5082, 4.5883, 3.681, 3.7868, 3.4639, 18.9899, 15.6864, 10.7059, 21.633, 17.2049, 0.0, 5.4648, 2.1199, 1.0714, 1.9246, 15.3047, 1.1261, 15.3331, 13.9709, 12.0557, 6.1776, 2.8301, 0.4514, 54.1185, 10.5214, 5.0534, 1.0478, 6.9992, 1.3464, 1.6038, 6.5903, 26.0478, 26.0492, 2.0064, 11.8881, 2.3611, 5.9168, 13.6576, 5.3827, 4.9949, 4.9821, 7.4738], [3.15, 13.5493, 2.392, 0.8906, 6.4935, 1.4917, 4.692, 33.4461, 11.3453, 13.3037, 28.5136, 21.657, 2.7254, 7.9596, 3.4796, 3.7325, 5.8839, 29.1369, 1.8768, 4.9755, 18.0101, 12.983, 7.3008, 3.3792, 2.2405, 38.3405, 5.1968, 2.4064, 4.2197, 8.9892, 0.528, 6.8364, 1.9557, 10.8054, 15.4561, 8.7014, 18.7425, 6.3706, 10.8351, 15.4502, 4.8384, 9.0605, 5.4538, 19.6126], [122.5951, 4.0615, 28.1549, 10.7333, 18.0128, 15.708, 11.178, 11.1179, 9.1872, 28.264, 26.6323, 22.134, 22.9433, 33.9476, 38.4547, 38.1931, 16.243, 33.2534, 40.2283], [11.2392, 25.5669, 6.279, 9.4864, 3.5776, 6.2883, 0.0, 28.6559, 4.1587, 26.135, 28.1637, 35.3907, 9.313, 4.6656, 0.0, 18.3168, 12.3728, 0.0, 4.8093, 4.627, 25.0906, 9.7373, 15.2381, 3.6186, 11.5034, 103.5037, 0.0, 12.8742, 9.3456, 9.3323, 11.4048, 5.5566, 7.7423, 34.3998, 6.5966, 14.1082, 0.0, 6.1925, 1.1094, 3.1583, 0.0, 1.7811, 0.3832, 0.0], [13.3056, 28.2179, 22.3353, 12.7195, 15.6754, 3.3277, 14.202, 82.2039, 56.1792, 7.872, 46.8229, 71.6115, 8.4436, 13.8132, 8.2457, 30.6547, 30.0612, 78.442, 10.4397, 21.8768, 67.9061, 18.6576, 47.6237], [72.7945, 28.0531, 41.6035, 37.6099, 40.5975, 13.1609, 6.9502, 48.8506, 18.9667, 22.3891, 9.7143, 120.8595, 22.2893, 13.6786, 17.3609, 28.512, 13.8834, 12.7788, 21.3786, 36.5376, 28.56, 15.9934, 36.2034, 22.8338], [118.7295, 67.1597, 56.4816, 70.1469, 63.2355, 12.0384, 18.4032, 15.5411, 34.8019, 32.9024, 36.633, 24.2811, 17.3078, 19.5782, 15.8534, 16.7731, 8.983, 212.6874, 20.0333, 28.405, 42.9561, 28.6176, 19.764, 21.6195, 37.4607, 24.0768, 35.7357, 18.9783, 42.2681, 52.7098, 41.0054, 6.021, 27.3574, 64.5058], [13.23, 76.583, 42.5776, 20.2118, 18.033, 16.5469, 12.9424, 130.1919, 55.632, 54.7891, 80.1179, 100.4373, 29.0594, 23.76, 16.3744, 50.0774, 29.163, 0.0, 7.4837, 14.5394, 78.6931, 24.4646, 33.6211, 0.0, 16.3856, 238.2478, 28.766, 39.495, 24.0437, 7.3128, 0.0, 23.093, 76.4208, 66.6396, 39.9168, 44.2323, 31.586, 54.4346, 61.9714, 29.1211, 13.4939, 38.7662, 74.3873]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

