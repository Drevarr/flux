created: 20230417215912000
creator: Drevarr
modified: 20230705163525858
modifier: drevarr
tags: ChartData
title: 202304172159_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Jeckyll Mbs", "Arriasa", "Chioguard", "Grasszanine", "Xanvias Einzbern", "Arcanophage Farra", "Mistwalker Caelon", "Ark Darkness", "Mettrik Milliohm", "Gavann", "Ryvalia Fazebringer", "Xyntharos", "Sub Train", "Sygaldry Verdandi", "Solus Sanctus", "Bella Sassy", "Johosh The Great", "Koralia Danai"];
const professions = ["Berserker", "Druid", "Guardian", "Spellbreaker", "Berserker", "Spellbreaker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.8888, 6.9678, 0.0, 2.7558, 0.2331, 1.6199, 0.9996, 0.9829, 2.2168, 0.0, 1.0181, 0.0, 1.4494, 0.9555, 1.1535, 2.1506, 0.0, 0.0, 0.8084, 0.624, 0.0, 0.9874, 0.9923, 0.6145, 0.0, 1.0109, 1.0702, 1.1515], [0.7749, 0.3089, 0.8184, 0.9056, 6.0388, 0.1672, 0.9682, 1.6318, 1.5641, 0.7081, 0.4626, 0.7262, 0.7682, 0.5922, 0.7757, 0.383, 0.5116, 2.3887, 1.6253, 1.3686, 1.472, 0.0, 0.8892, 0.4742, 0.8991, 1.7054, 0.7938, 0.8085, 0.0367, 0.8165, 0.8026, 0.245], [5.3978, 9.1199, 2.9695, 7.2317, 7.4911, 3.332], [1.9591, 1.8414, 0.0, 7.2001, 1.2662, 3.5551, 1.8434, 0.0, 1.7346, 0.0, 0.0, 3.6124, 1.309, 0.0, 0.8526, 1.6243, 2.3069, 3.063, 0.0, 0.0, 1.8997, 1.0234, 0.0, 1.6157, 2.0639, 1.2613, 0.0, 0.4277, 1.5161, 0.49], [0.5263, 0.0, 0.0, 1.5093, 9.2904, 0.0, 2.3089, 1.5153, 1.6758, 1.0829, 3.2379, 0.6497, 0.0, 2.4872, 2.1331, 0.0, 1.7478, 1.911, 2.9361, 3.454, 0.0, 0.0, 1.6976, 0.8237, 0.0, 1.0771, 1.0716, 2.3285, 0.9165, 2.2939, 2.497, 1.1515], [0.0, 1.9453, 6.7355, 0.0, 1.862, 0.0, 4.7481, 2.9571, 5.782, 3.3251, 0.0, 6.2181, 3.1512, 0.0, 3.2825, 1.7199, 3.8798, 3.3237, 0.0, 0.0, 1.7785, 0.2496, 0.0, 1.0771, 2.1829, 2.3608, 0.0, 1.5163, 1.0702, 0.0], [0.0, 0.0, 3.4373, 2.5323, 16.2582, 0.0, 3.9474, 0.0, 2.5696, 0.5414, 2.0237, 0.0, 0.0, 4.5007, 5.3813, 0.0, 5.8403, 0.9555, 2.4118, 3.5192, 0.0, 1.2254, 0.8488, 0.1498, 0.0, 2.603, 0.0, 1.0349, 0.0, 1.3997, 1.8282, 2.254], [8.1291, 0.0, 10.4272, 0.2331, 7.9321, 1.4994, 9.7138, 3.6691, 6.8103, 8.1931, 0.2189, 6.7782, 2.8665, 7.0781, 3.454, 0.0, 0.0, 2.0614, 3.3946, 0.0, 7.091, 2.6195, 5.1744, 0.4033, 5.9098, 4.5036, 3.8465], [0.0, 2.8006, 19.5098, 0.0, 9.9803, 2.0981, 6.1446, 2.3324, 12.4891, 3.7456, 3.4769, 7.7578, 5.963, 6.3519, 6.4974, 8.2315, 7.5597, 0.0, 0.0, 8.6499, 1.5475, 2.8674, 8.617], [36.4648, 2.0733, 11.321, 0.0, 3.184, 0.0, 2.1972, 0.0, 2.5027, 6.9287, 5.2843, 0.0, 3.7514, 3.9175, 5.0333, 4.1709, 0.0, 0.0, 4.5675, 4.2182, 0.4374, 9.5146, 3.6515, 3.331, 3.666, 5.521, 8.0262, 3.381], [0.0, 1.8823, 2.2639, 10.4517, 9.8314, 1.7484, 6.4798, 2.4573, 10.4076, 3.5162, 0.0, 7.7578, 8.0477, 5.7977, 7.1662, 6.8159, 7.6249, 1.7766, 2.4331, 4.9312, 3.2448, 2.3328, 9.8736, 7.1045, 3.8485, 0.0, 3.0326, 3.6564, 3.1605], [3.3187, 7.652, 2.6161, 24.155, 0.0, 10.7251, 5.5949, 11.0603, 2.4157, 1.7346, 0.0, 1.2989, 4.9153, 4.1208, 0.5472, 1.2363, 11.9437, 4.2993, 4.4316, 0.0, 0.0, 3.2336, 2.2963, 4.4469, 5.7446, 6.5092, 7.1148, 1.4847, 2.0995, 4.5036, 0.392], [2.4961, 4.5279, 20.2066, 0.0, 9.5334, 0.0, 5.8094, 3.207, 12.0844, 4.7775, 6.6919, 4.4117, 0.0, 8.0997, 1.911, 7.3402, 8.9935, 0.0, 0.0, 9.8625, 2.1466, 0.0, 7.4501, 3.7309, 5.3361, 0.8982, 4.6267, 8.4275, 5.782], [0.9795, 3.3145, 1.1068, 13.4711, 0.0, 11.2465, 0.0, 1.9551, 3.6652, 4.9725, 4.0895, 1.1484, 11.6663, 9.9384, 1.1035, 7.0766, 6.1152, 6.344, 10.1014, 0.9137, 1.5096, 3.0315, 3.769, 0.9234, 8.1682, 4.9216, 8.8288, 3.3177, 3.1104, 8.4721, 4.165], [0.2339, 0.0, 20.2066, 1.4463, 16.5346, 1.5153, 12.1775, 4.9147, 14.5706, 3.7838, 0.6653, 15.4564, 10.6171, 0.6384, 7.3324, 4.873, 8.0742, 10.2317, 0.0, 0.2486, 9.0541, 4.0685, 0.0, 8.1682, 3.7706, 4.754, 0.3849, 7.776, 5.4846, 4.214], [0.3947, 0.0458, 8.5114, 5.1148, 38.3229, 15.1194, 7.7512, 15.5849, 6.5391, 15.3801, 7.7587, 1.2672, 11.311, 9.7445, 9.1654, 14.428, 12.0589, 7.1035, 0.0, 0.515, 8.1244, 1.223, 0.0, 5.7446, 10.7957, 10.0577, 1.7047, 5.9486, 8.5167, 1.568], [2.2222, 5.5651, 5.2155, 51.0972, 0.301, 19.8117, 4.2544, 10.2782, 4.0817, 16.1318, 6.9943, 3.8016, 14.9234, 10.3747, 10.3591, 10.2239, 11.0627, 12.1868, 0.3553, 2.6818, 11.3176, 5.017, 0.2916, 13.2845, 7.5411, 9.8314, 4.5825, 8.2037, 12.9757, 6.4435], [0.4805, 9.4116, 4.5111, 53.1875, 1.1537, 17.9497, 8.8003, 14.9705, 7.7469, 11.6218, 7.7204, 4.7362, 17.1738, 11.9746, 2.1614, 8.6539, 13.2815, 13.5269, 14.5329, 0.7614, 0.2486, 11.9239, 4.2182, 0.4617, 17.1442, 7.5014, 10.2841, 2.7495, 6.4152, 9.9882, 7.0315]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

