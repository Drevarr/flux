created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Water M Elon", "Ingrid Stendottir", "Wix Myschief", "Legoh Brave", "Wix Myschief", "Elonith Primal", "Erin Celes", "Zevikah", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Druid", "Mechanist", "Tempest", "Scrapper", "Tempest", "Herald", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.9541, 0.4158, 11.518, 44.8916, 14.916, 6.4602, 10.9408, 21.9, 21.8788, 32.5875, 47.72, 0.0, 33.337, 32.7364, 3.1365, 23.2546, 18.1059, 23.1552, 21.1104, 20.3306, 61.723, 39.5901, 32.0112, 23.6938], [72.7258, 36.2445, 56.0625, 42.0562, 104.2, 0.0, 70.8154, 82.7366, 10.6453, 12.596, 0.0432, 42.5095, 1.4216, 48.3619, 98.7854, 0.0], [70.1864, 177.9295, 374.1379, 116.9298], [5.9976, 41.056, 102.2918, 38.9236, 43.564, 42.902, 177.4752, 75.2069, 32.5926, 20.0674, 27.4176, 164.684, 121.1646, 60.804, 33.9694, 48.5016, 297.5845, 71.185, 143.1, 192.4, 106.669, 127.5437], [45.8842, 50.571, 70.945, 110.5952, 13.3416, 0.0, 134.3312, 0.0, 33.3488, 28.2395, 0.0, 32.8616, 103.8744, 132.886, 118.9396, 123.696, 35.5408, 178.2209, 136.3275, 156.9175, 126.45, 0.0, 2.8782, 25.3985, 11.4257, 39.7188, 334.9987, 28.7953, 335.6968, 0.0, 139.3519], [412.4691, 70.3494, 40.8442, 15.246, 89.4336, 176.5987, 0.0, 52.0899, 13.2261, 32.7294, 32.0393, 302.1456, 75.3757, 30.324, 72.192, 95.4828, 50.466, 122.8912, 49.716, 98.5714, 63.675, 52.5965, 53.5325, 44.1375, 21.14, 0.0, 75.1944, 239.3796, 17.901, 302.4, 26.0954, 113.7124, 27.7488, 204.3936, 65.3596], [608.3496, 126.8467, 213.6422, 39.6286, 125.496, 123.8824, 68.4706, 224.0384, 85.1488, 59.7026, 958.3319, 76.8495, 151.392, 114.582, 56.715, 64.7645, 43.8858, 427.596, 222.678, 63.36, 206.6488, 92.8506, 167.6445, 79.5512, 232.1062, 93.24, 204.508, 221.2531, 394.4571, 232.0013, 219.1437, 260.2548, 197.28, 250.6811, 216.6918, 179.9215, 177.9898, 165.2612], [447.3822, 265.3008, 331.2612, 221.8482, 312.572, 286.4376, 252.516, 413.3558, 296.4403, 418.6185, 677.0338, 395.5688, 274.62, 0.0, 230.472, 401.2805, 43.8345, 755.6069, 82.3965, 842.324, 144.0288, 689.0402, 301.9205, 259.8215, 426.0859, 89.8434], [366.4416, 198.5905, 164.381, 479.4816, 614.399, 98.6432, 621.8694, 163.707, 366.5693, 751.2448, 570.0838, 358.6554, 331.8563, 431.9154, 787.254, 490.034, 338.244, 482.284, 762.9292, 690.5435, 879.6062]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

