created: 20230318225613000
creator: Drevarr
modified: 20230705163522557
modifier: drevarr
tags: ChartData
title: 202303182256_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Sp\u00edcy Cheese", "Mylania Svenson", "Primal Clone", "Ark Darkness", "Xanvias Tseli", "Hyde En Sikh", "Gavann", "Newtype Khan", "Blanco Padre Guard", "Koralia Danai", "Demon Sekhmet", "Zaylen Harker", "Bella Sassy", "Aronorf Xideliesi", "Johosh The Great", "Venomina The Fierce"];
const professions = ["Berserker", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 114.1094, 0.0, 0.0, 0.0, 14.9856, 27.6168, 0.0, 15.9152, 0.0, 0.0, 0.0, 39.9078, 0.0], [13.5648, 27.9806, 30.3335, 34.8025, 49.2278, 66.0634, 35.6259, 66.9265], [15.582, 18.265, 0.0, 22.8388, 44.6515, 34.4189, 6.5844, 0.0, 18.2784, 23.1768, 13.3722, 22.3204, 22.5142, 8.6962, 21.8416, 0.0, 8.1518, 11.8271, 13.033, 23.4779, 24.5018, 15.7458, 21.5946], [15.6191, 149.7485, 51.2179, 195.6787, 35.8142], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 65.0742, 38.903, 70.5514, 8.2512, 20.857, 14.9253, 23.8973, 49.5841, 32.0307, 49.5088, 77.004], [6.8635, 29.5747, 7.188, 21.4844, 63.0374, 50.0779, 0.0, 10.5929, 29.736, 32.19, 35.633, 23.0721, 26.5574, 15.4598, 24.8336, 0.0, 6.0466, 6.8442, 17.4319, 21.4285, 28.6362, 20.8243, 24.9091], [28.196, 35.5622, 4.9566, 30.6877, 194.6573, 82.4813, 15.0379, 8.0106, 54.7008, 63.6252], [25.8216, 53.2224, 37.5494, 57.7741, 131.7658, 68.2951, 0.0, 0.0, 51.5088, 57.4092, 81.8851, 61.275, 66.4362, 25.5974, 0.0, 15.3684, 51.5549], [16.4724, 46.4486, 0.0, 81.4747, 173.207, 62.6362, 0.0, 7.2332, 32.76, 58.2972, 67.097, 37.4186, 29.8771, 25.2648, 107.4427, 6.588, 17.0339, 31.3447, 55.2866, 66.6291, 33.0484, 32.71], [0.0, 70.3987, 58.205, 238.7251, 66.8222, 0.0, 33.936, 57.0096, 92.7401, 38.0395, 25.0678, 47.9952, 7.7194, 7.236, 3.623, 24.8558, 29.135, 113.8253, 66.0198, 50.4786, 12.555], [0.0, 56.6093, 37.2933, 179.509, 384.937, 155.04, 0.0, 0.0, 152.5584, 125.2267, 0.0, 0.0, 0.0, 0.0, 0.0], [5.6763, 87.5146, 0.0, 38.0749, 182.8378, 24.2638, 0.0, 14.8512, 63.0924, 53.2528, 85.2621, 50.3059, 23.1898, 85.4515, 6.6528, 6.3158, 24.7498, 71.3849, 151.1136, 48.3072, 63.4427, 39.1716], [48.601, 114.1862, 0.0, 18.191, 229.6781, 97.9078, 0.0, 20.6112, 69.9552, 109.0464, 152.0498, 87.9092, 78.9488, 80.9266, 97.3597, 7.0956, 9.792, 45.5061, 46.5874, 92.9313, 75.6378, 101.8503, 101.4779], [38.3243, 79.7731, 21.4176, 108.4995, 276.9562, 107.6753, 0.0, 0.0, 67.6032, 135.2868, 219.5401, 67.7783, 43.0707, 59.7643, 117.4061, 7.9596, 11.677, 24.4906, 76.3363, 115.6072, 41.9968, 102.9987, 57.753], [18.921, 130.032, 8.322, 71.8713, 271.4112, 160.6214, 20.3904, 4.421, 77.1792, 177.156, 130.8116, 110.7852, 70.3517, 49.0565, 131.6181, 4.9248, 28.5682, 26.6817, 82.6789, 109.6376, 127.6442, 111.2927, 81.4568], [52.2368, 176.4806, 63.8321, 28.7177, 205.1635, 168.2959, 66.5874, 107.5872, 286.1136, 159.5225, 40.5232, 105.336, 48.8664, 20.0165, 21.2328, 76.1818, 74.7323, 75.5588, 136.1002, 51.8758, 28.8631, 76.3344]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

