created: 20230701101710000
creator: Drevarr
modified: 20230705163540353
modifier: drevarr
tags: ChartData
title: 202307011017_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Latedoctor", "Charr Surethang", "Bella Sassy", "Drumina", "Gestern Yesteryear", "Drevarr Moonwillow", "Legacy Of Mathus", "Sister Elonith", "Sakis Ranger", "Ryvalia Fazebringer", "Govinda Ektar", "Violet Stab", "Wall Knot", "F\u00f9gly", "Trodek", "Atros Shroudkeeper", "Grim Breacher", "Valkren Sothur", "Elonith Requiem", "No Reserv\u00e9", "Dizzy Bunnyhopper", "Ryvalia Routbringer", "Gamora Titus", "F\u00f9gly", "Fluffy No Care Bear", "Anti Jimbo", "Atros Beta Ranger"];
const professions = ["Reaper", "Berserker", "Firebrand", "Druid", "Firebrand", "Scrapper", "Berserker", "Berserker", "Druid", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Vindicator", "Reaper", "Dragonhunter", "Scourge", "Vindicator", "Holosmith", "Berserker", "Dragonhunter", "Catalyst", "Berserker", "Catalyst", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.64, 284.4545, 3199.3571, 2125.7887, 13.4583, 1838.7941, 1321.1836, 836.8599, 4451.0455, 343.4565, 653.051, 8.7222, 1195.1471, 1087.8302, 5979.0, 49.4375, 344.9365, 475.9904], [170.234, 4.0476, 2074.8056, 1926.6761, 83.0455, 1682.6058, 1393.5732, 777.0257, 3247.2188, 1018.9318, 516.3949, 6.8788, 881.303, 913.963, 308.371, 488.629, 475.1961], [15.4272, 0.0, 2184.9318, 2266.193, 0.6, 1823.1, 1280.734, 722.5549, 2730.2188, 5454.0833, 304.2283, 63.2105, 168.1, 818.4717, 100.0, 299.7097], [2547.7458, 20.0, 1542.7846, 1253.3922, 792.5281, 3621.8621, 289.7111, 234.4598, 14.9355, 807.7843, 8.3571, 103.7115, 221.7097, 443.3981], [30.39, 0.0, 1969.3864, 1726.9077, 2.7391, 1204.9805, 1028.8058, 736.7597, 3309.6129, 197.1522, 341.2484, 117.25, 83.7647, 731.9245, 32.5231, 298.5079, 226.9712], [27.4583, 1280.9034, 1178.9417, 694.941, 2130.0968, 399.913, 535.9268, 24.0, 80.0714, 941.7308, 0.0, 88.7538, 231.7903, 496.3846], [45.3929, 1015.5, 1630.3475, 677.7759, 2041.2632, 5015.8, 580.1736, 10.0, 4423.2778, 525.0377, 95.4516, 417.2698, 589.7404], [52.7647, 0.0, 1571.1395, 2183.4154, 5.9474, 1422.594, 1289.7009, 650.7727, 3387.1935], [33.0714, 0.0, 3167.0323, 1522.525, 556.7297, 1766.1714, 913.6878, 853.9944], [787.6763, 821.1176, 2811.5938, 230.8667, 420.6752, 7.8421, 259.6, 530.6857, 20.8906, 292.5238, 214.2596], [1600.9844, 0.0, 1626.1212, 399.8049, 117.8162, 3180.9655, 133.8409, 262.6908, 8.8889, 0.0312, 5434.0, 0.0, 174.3729], [767.1893, 747.6222, 2466.6452], [515.7337, 1765.0, 110.8261, 386.4615, 396.2353, 246.1846, 0.0, 58.5469, 437.7097, 439.0909], [1067.9953, 675.0521], [523.75, 5847.7222, 189.7143, 622.7859, 9.0286, 124.0294, 111.8919, 0.0, 0.0, 483.5938, 266.2541], [1930.1935, 486.0548, 55.6667, 3566.9565, 310.6341, 253.6744, 157.9841, 676.1562, 518.717], [2068.1186, 0.0, 1709.8936], [841.8284, 494.6703], [353.4091, 367.0256, 40.0556, 160.6061, 1214.6792, 0.0, 21.5556, 547.2222, 952.4615], [670.9492, 117.0, 622.6792, 313.4444, 73.1077, 351.9839, 301.9135], [141.9762, 455.254, 23.3488, 580.7215, 19.9667, 58.0, 577.2581, 406.6465], [1760.8042], [170.9519, 316.4909, 1806.9756, 1712.5714, 0.0], [4656.1176, 539.8089], [2150.8955, 263.9583], [316.3265, 74.92, 2701.0], [1671.5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

