created: 20230531221142000
creator: Drevarr
modified: 20230705163532567
modifier: drevarr
tags: ChartData
title: 202305312211_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Etchery Of Ascalon", "Johosh Of The North", "Cat Wigglebooty", "Artakama Nahid", "Tribal S", "Drevarr Moonwillow", "Arriasa"];
const professions = ["Tempest", "Tempest", "Tempest", "Scrapper", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[570.843, 370.4357, 54.3024, 1881.4942, 382.9762, 16.1417, 158.4562, 168.1872, 315.7225, 165.6426, 277.5444, 381.0816, 369.9711, 0.0], [1032.291, 455.064, 141.3936, 1913.3971, 911.6352, 83.8048, 422.9856, 783.9264, 771.74], [1527.2205, 778.499, 188.8704, 3834.5754, 71.0539, 77.2313, 127.7567, 439.9152, 603.01, 565.0815, 429.2792, 760.099, 616.6185, 138.519, 109.1425], [1776.84, 769.6694, 25.3584, 3183.2889, 1608.5446, 48.5266, 3.3359, 319.1472, 715.4575, 305.1649, 173.383, 211.814, 1131.0738, 13.0662, 0.0], [1721.811, 887.3069, 362.7072, 4472.6338, 1344.8854, 196.0351, 354.7345, 604.3728, 892.06, 595.3006, 451.7828, 898.2884, 809.3539, 254.2848, 546.8911], [3145.935, 2463.4584, 73.7424, 9794.1964, 3152.0681, 115.5805, 409.0108, 1144.0992, 636.9675, 516.4576, 436.4514, 938.4264, 1067.3228, 0.0, 0.0], [5088.8565, 1856.3894, 488.592, 10472.7171, 3273.8429, 242.8612, 622.7351, 1315.7496, 1665.3275, 942.499, 765.912, 1694.6264, 2427.6574, 253.1866, 312.2107], [6603.8115, 2417.5445, 767.1456, 16253.3706, 4654.2552, 523.8686, 902.186, 1520.6112, 1493.5425, 1654.3361, 1772.9152, 1876.5088, 3074.7361, 322.7418, 1066.5635]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

