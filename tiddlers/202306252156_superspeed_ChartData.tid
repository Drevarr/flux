created: 20230625215649000
creator: Drevarr
modified: 20230705163537058
modifier: drevarr
tags: ChartData
title: 202306252156_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Pale Pam", "Akahi Stratos", "Artakama Nahid", "Grasszanine", "Zayde Sunsabre", "Miphest\u00f6", "Arcanophage Farra", "High Sorcer Baradun", "Blancooo Padreee", "Cerys Fireblade", "Newtype Khan", "Tegan Parker", "Xanvias Einzbern", "Johosh The Mighty", "Drevarr Moonwillow"];
const professions = ["Druid", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.472, 0.218, 0.31, 0.561, 0.695, 0.345, 0, 0.26, 1.003, 0.952, 0.011, 0.374, 0.072], [1.257], [0, 0.04, 0.25, 0, 0.407, 0.531, 0.05, 0.214, 0, 0.545, 0.232, 0.421, 0, 0.528, 0, 0, 0, 0.571, 0.098, 0, 0.188], [0.076, 0.358, 0, 0.472, 0.772, 0.382, 0, 0.911, 0.938, 0, 0, 0.853, 0.967, 0.55, 0.962, 0.404], [1.025, 0, 0.209, 1.32, 0.53, 0.589, 0.164, 0.091, 0, 0.471, 0.773, 0.783, 0, 0.734, 0, 0, 0, 0.172, 0, 0.233], [0.401, 0, 0.125, 0, 0.516, 0.354, 0.21, 0.6, 0, 0.283, 0.406, 0.46, 0, 0.603, 0.588, 0, 0, 0.542, 0.888, 0.425, 0.575, 0.31], [0, 0, 0, 0, 0.439, 0, 0.377, 0.75, 0, 0.959, 1.159, 1.125, 0, 0.894, 0.98, 0, 0.675, 0.424, 1.218, 0, 0.963, 0.392], [0.8, 0.32, 0.5, 0.353, 0.506, 0.531, 0.262, 0.655, 0.311, 0.849, 0.232, 0.569, 0.578, 0.589, 0.417, 0, 0, 0.392, 0.561, 0.433], [1.03, 0.512, 0.166, 0, 0.645, 0.617, 0.087, 0.492, 0.52, 0.733, 0.689, 0.386, 0, 0.023, 0.947, 1.896, 0.009, 0.358, 0.06, 0.02, 0.566], [0.897, 0.288, 0.625, 1.111, 0.568, 0.442, 0.087, 0.486, 0.519, 0.472, 0.773, 0.472, 0, 0.046, 0.829, 0.827, 0, 0.256, 0, 0.538, 0.321, 0.538], [0.892, 0, 0, 0, 0.48, 0.59, 0.287, 0.729, 0.366, 0.889, 0.771, 0.827, 1.626, 0.876, 0.633, 0, 1.591, 0, 0.905, 0.766, 1.186, 0.426], [0, 0.2, 0.125, 0.784, 0.675, 0.707, 0.26, 0.686, 0.313, 0.567, 0.695, 0.93, 0, 0.603, 0.587, 0, 0.014, 0.547, 0.913, 0.416, 0.634, 0.598], [0, 0, 0, 0.517, 0.901, 0.59, 0.401, 0.675, 0.542, 0.927, 0.957, 1.162, 0, 0, 1.369, 1.017, 0.903, 0.732, 0.832, 0.74, 0.573], [0, 0, 0.618, 1.095, 1.138, 0.885, 0.608, 0.546, 0, 0.906, 1.161, 1.222, 0, 0.588, 0.982, 0, 0.648, 0.921, 1.076, 0.479, 0.569, 0.699], [1.333, 0.42, 0.748, 0.888, 1.335, 0.946, 0.76, 0.983, 0.78, 1.511, 1.623, 1.599, 1.416, 0.565, 0.956, 1.253, 0.952, 1.146, 1.007, 1.109, 1.706, 0.885]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

