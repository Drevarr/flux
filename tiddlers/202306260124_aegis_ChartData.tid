created: 20230626012458000
creator: Drevarr
modified: 20230705163538094
modifier: drevarr
tags: ChartData
title: 202306260124_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Belvyn Brightblade", "Proteccdebussy", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Crusader Siolith", "Sygaldry Verdandi", "Bender Ale Devourer", "Raelyn Sunray", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 6.1949, 1.2789, 21.509, 3.3501, 109.5395, 4.0723, 5.208, 7.8883, 0.0, 1.512, 11.5958, 0.1823, 10.3699, 0.4635, 7.043], [0.0, 16.3814, 31.2669, 103.292, 22.2823, 25.3874], [12.4137, 165.4691, 8.1648, 16.4136, 3.3581, 9.086, 6.673], [0.0, 18.0922, 25.7103, 34.2686, 3.506, 17.2686, 0.0, 0.0, 86.5814, 0.0, 0.0, 0.0, 39.1598, 1.6685, 0.0, 0.0], [20.0666, 5.0026, 31.7079, 54.1979, 3.1164, 56.9605, 6.1891, 28.2576, 4.657, 0.0, 1.6934, 16.4462, 9.2963, 6.9274, 2.8655, 15.9835], [0.0, 12.623, 12.2157, 41.6814, 15.7378, 116.8851, 7.7616, 11.0544, 35.7034, 163.152, 5.4432, 11.5282, 3.7975, 11.0669, 10.4507, 8.3294], [10.8758, 20.9952, 46.8342, 176.204, 27.5801, 136.7311, 9.7373, 7.8624, 63.9936, 6.6125, 17.281, 56.1119, 23.76, 29.8773, 3.9878], [12.6629, 105.6758, 5.2038, 87.9805, 12.1799, 251.4254, 17.9827, 4.2504, 45.1123, 12.76, 16.8134, 9.4075, 20.7495, 18.4589, 11.9678, 22.4155], [39.5204, 49.0925, 48.7746, 113.4997, 11.8163, 124.7462, 14.0314, 32.4408, 59.0515, 43.824, 27.4781, 5.5272, 38.856, 30.793, 19.553, 48.0792], [114.2723, 20.399, 41.013, 285.9366, 21.9706, 284.6738, 10.705, 14.5152, 12.767, 3.024, 2.5042, 37.5497, 43.3805, 90.6853, 17.1091], [196.7852, 22.7578, 67.1202, 237.6931, 37.6046, 256.1936, 19.4342, 34.2048, 92.7274, 65.164, 18.7891, 20.665, 41.2864, 39.7901, 43.0671, 11.7706], [104.0603, 45.4118, 93.9771, 331.0205, 18.5166, 419.0852, 27.4982, 34.7256, 116.4874, 19.0512, 21.5899, 82.269, 43.5917, 79.2653, 67.536]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

