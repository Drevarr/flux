created: 20230424220408000
creator: Drevarr
modified: 20230705163526626
modifier: drevarr
tags: ChartData
title: 202304242204_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Cat Wigglebooty", "Zefirokai", "Ryvalia Fazebringer", "Eibh\u00ebar", "Primal Clone", "Newtype Khan", "Mac Aaroni", "Black Raspberry Pie", "Sassy Daddy Demon", "Rudjulin", "Zadie Miststep", "Sub Train", "Tribal S", "Arriasa", "Gavann", "Fribble Bibble", "Bella Sassy", "Zaylen Harker", "Drevarr Moonwillow", "Sygaldry Verdandi", "Kiloak", "Koralia Danai", "Johosh The Great"];
const professions = ["Scrapper", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Chronomancer", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Druid", "Druid", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[253.7102, 0.0, 31.5473, 47.1187, 9.3274, 0.0, 0.0, 10.0147, 30.3994, 16.17, 14.1561, 32.873, 0.0], [43.8144, 53.416, 27.311, 0.0, 52.5854, 35.3902, 76.7781, 86.5159, 127.14], [163.3023, 31.066, 11.2913, 47.3864, 30.3206, 14.3524, 0.0, 35.2666, 22.6973, 50.7517, 41.7186, 34.8965, 24.24], [187.4426, 17.1745, 18.7671, 14.323, 23.1168, 10.1271, 22.5504, 35.3894, 24.8784, 33.4058, 44.7615, 47.305, 57.66], [234.3033, 0.0, 5.0563, 49.439, 39.2986, 0.0, 31.3757, 40.2125, 40.3848, 35.2065, 27.9594, 41.3489, 31.44], [213.2397, 20.727, 43.0868, 20.1682, 37.4438, 15.6472, 0.0, 41.8714, 24.4354, 42.1155, 41.7186, 54.8647, 36.42], [246.1368, 14.21, 23.8854, 16.6433, 19.488, 18.9184, 91.4822, 22.7021, 16.4266, 16.8315, 9.5256, 37.4928, 75.66], [277.6139, 0.0, 26.4601, 29.4938, 43.0618, 0.0, 20.1005, 23.2243, 36.7382, 48.4365, 38.8962, 51.4285, 19.32], [287.3174, 29.3755, 58.1005, 102.7599, 70.8288, 4.6206, 2.1437, 61.8394, 27.8774, 63.4672, 24.8283], [69.4579, 25.011, 0.0, 149.6986, 56.8114, 95.8808, 86.9652, 89.2267, 201.84], [356.425, 67.032, 39.1472, 37.4808, 48.5722, 18.714, 18.8755, 27.7094, 18.8803, 85.1498, 74.0439, 37.4546, 32.88], [361.3951, 0.0, 115.7666, 146.4875, 107.5469, 28.623, 81.599, 116.6131, 64.2749, 124.8398], [413.9358, 0.0, 49.663, 86.8305, 71.8502, 0.0, 37.2499, 93.5117, 72.2837, 108.8167, 86.7006, 91.9756, 112.92], [582.6815, 20.0165, 38.5268, 43.5491, 24.8371, 43.8613, 55.1789, 65.3107, 63.0139, 63.0998, 90.6696, 61.6989, 106.98], [627.8855, 0.0, 41.5048, 76.1242, 0.0, 24.2486, 152.4941, 51.5971, 72.324, 166.3893, 84.4542, 0.0], [748.5872, 28.959, 93.4322, 53.9456, 58.1952, 22.803, 22.6339, 60.5491, 68.2963, 57.2932, 153.3798, 104.9568, 117.72], [704.5666, 58.947, 41.5048, 140.6422, 70.4256, 73.1522, 32.016, 55.3574, 18.0624, 100.842, 82.4229, 130.6901, 207.72], [702.9099, 20.2615, 98.4885, 118.1538, 100.2624, 20.1724, 0.0, 135.721, 53.5738, 108.4125, 114.0867, 172.9554, 96.0], [711.9034, 17.983, 99.3881, 129.755, 90.6394, 49.9812, 81.5712, 61.5936, 105.8866, 78.9022, 147.294, 79.5671, 120.36], [713.0867, 13.0095, 149.6405, 133.2353, 110.4499, 0.0, 19.321, 65.7408, 103.4669, 128.1105, 146.1033, 249.659, 155.1], [720.4235, 39.8125, 170.8271, 159.8288, 111.2832, 65.2291, 176.9779, 121.2226, 141.6345, 106.1928, 153.1782, 189.12], [1054.3648, 0.0, 154.5106, 208.8216, 133.5667, 32.0578, 43.4861, 129.2083, 61.6166, 173.9377, 142.3548, 224.5748, 220.8], [1011.5276, 23.814, 140.6757, 214.3991, 149.5603, 24.902, 99.7507, 149.2685, 177.7272, 179.6708, 179.928, 275.4305, 255.24]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

