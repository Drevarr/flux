created: 20230410221909000
creator: Drevarr
modified: 20230705163525106
modifier: drevarr
tags: ChartData
title: 202304102219_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Fribble Bibble", "Belvyn Brightblade", "Drevarr Moonwillow", "Ark Darkness", "Zaylen Harker", "Gavann", "Sygaldry Verdandi", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "Koralia Danai"];
const professions = ["Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.206, 1.9642, 32.7443, 58.0547, 241.7318, 14.1329, 0.3629, 15.2909, 21.8268, 0.0, 30.6779, 22.4616, 11.1485, 46.9371, 3.2115, 10.5179, 19.5441, 5.168, 10.0533, 29.8136, 15.4368, 27.3067], [0.0, 0.0, 17.9217, 36.8475, 605.831], [29.2804, 4.5533, 75.999, 101.5295, 402.3859, 12.5302, 20.8656, 47.5622, 8.0539, 6.2533, 38.6277, 24.99, 13.6886, 33.4484, 0.0, 19.4261, 22.3362, 3.8955, 45.0213, 25.6064, 9.455, 38.3835], [34.5514, 81.7933, 143.6788, 587.8138, 25.9346, 13.9709, 25.0483, 56.5128, 0.0, 31.1366, 6.5856, 32.2459, 55.7473, 99.1677, 29.1721, 18.9027, 109.8791, 41.4808, 47.1096, 22.2226], [56.9845, 222.4858, 281.897, 411.4197, 632.857, 52.7434, 97.1914, 52.0819, 40.0666, 13.6268, 46.1698, 74.7936, 26.7422, 65.6816, 75.8015, 46.5696, 12.1491, 53.654, 33.3944, 69.0283, 19.4246, 68.4354], [2.3213, 256.2945, 259.5231, 850.5658, 69.7903, 242.7062, 126.4243, 60.3029, 0.0, 65.4326, 45.276, 63.9979, 124.4669, 162.7324, 4.5202, 68.9327, 44.5645, 72.5149, 42.2792, 33.0926, 110.479], [83.5661, 401.2855, 364.7638, 1376.0698, 75.4726, 21.8333, 35.1859, 41.991, 17.0324, 63.5393, 57.2663, 178.0699, 75.8961, 46.672, 122.916, 48.2558, 69.5996, 29.6515, 87.8438], [226.4141, 320.8397, 789.1729, 1454.8954, 98.3475, 88.3613, 94.3642, 142.6018, 82.0966, 47.9808, 54.8604, 48.5169, 70.5414, 67.6714, 35.0889, 55.0045, 70.3731, 63.3668, 21.6758, 78.8861], [43.8032, 28.0339, 349.5415, 679.1606, 1682.3635, 71.4658, 110.7994, 138.4205, 75.1586, 47.9864, 88.7723, 28.6552, 102.4178, 49.9143, 104.7047, 29.8336, 35.6549, 47.5511, 66.0895, 55.9913, 50.8128, 162.5882], [59.2652, 303.4627, 556.1132, 738.2757, 1422.6144, 326.5865, 253.2298, 146.5306, 141.7219, 43.7228, 135.044, 65.4248, 37.7849, 55.2308, 114.5052, 71.6184, 25.015, 53.0567, 41.0437, 51.3687, 60.0106, 115.6322], [66.7111, 297.481, 465.9655, 745.9633, 1748.4269, 163.4025, 231.5174, 131.9578, 71.4362, 9.3465, 162.7662, 84.2604, 53.3786, 76.0108, 145.2355, 104.2304, 38.7487, 162.8319, 27.9307, 89.9081, 14.5363, 168.7526]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

