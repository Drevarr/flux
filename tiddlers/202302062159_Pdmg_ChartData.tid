created: 20230206215940000
creator: Drevarr
modified: 20230705163518796
modifier: drevarr
tags: ChartData
title: 202302062159_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Johosh The Great", "Arcanophage Farra", "Newtype Khan", "Sumatra Satyricon", "Skye Nightroad", "Kira Dragonblaze", "Tootsie Pop Bringer", "Veron Blackburn", "Smol Gluvs", "Ace Rages", "I Il Il I", "Fungus", "Rina Of Theros", "Sp\u00edcy Cheese", "Sigmund Mistwalker", "Legacy Of Mathus", "Be\u00eb", "Lord Erin The Wise", "Demon Sekhmet", "Xanvias Tsollice"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Ranger", "Scrapper", "Dragonhunter", "Scrapper", "Herald", "Scourge", "Berserker", "Elementalist", "Scourge", "Scourge", "Berserker", "Vindicator", "Berserker", "Scourge", "Weaver", "Berserker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[46.9491, 19.5064, 105.4873, 257.9946, 12.8824, 186.0813, 399.5618, 355.4098, 78.4773, 469.3763, 176.2754, 247.4615, 0.0, 123.1011, 15.1859, 9.3505, 145.931], [96.5164, 21.4231, 143.0823, 367.5351, 71.6078, 263.6438, 275.1685, 17.2787, 98.4261, 51.0645, 219.7665, 177.4231, 0.0, 350.8652, 37.4038, 0.0, 26.5517], [170.0582, 55.9103, 143.8101, 455.9568, 41.8824, 155.525, 453.1685, 113.1803, 69.0398, 161.0968, 204.7066, 202.5385, 0.0, 366.3034, 24.2628, 82.6701, 435.2069], [28.7636, 307.5962, 355.3418, 133.8054, 332.7843, 83.5125, 901.8202, 101.0164, 256.2557, 389.6237, 321.9581, 650.7308, 108.6632, 480.2472, 44.1474], [564.2145, 92.7692, 450.2848, 349.6108, 219.6275, 771.4375, 447.7416, 303.4426], [529.3018, 137.8526, 497.557, 829.5892, 195.0588, 15.0813, 1078.191, 574.377], [844.5745, 256.3846, 800.6392, 1531.3514], [337.4618, 164.6538, 657.3038, 913.0054, 117.6078, 804.9562, 1225.7191, 909.082], [248.5891, 93.8013, 353.6835, 909.2378, 0.0, 407.6375, 620.3034, 387.623, 344.6364, 104.4194, 535.485, 470.0769, 38.0211, 639.382, 64.9167, 53.8763, 558.0345], [136.5745, 34.6899, 1090.5838, 174.549, 537.9375, 646.4382, 6.6885, 530.2557, 1024.3118, 267.8263, 450.0769, 28.2, 773.2809, 0.0, 23.1546, 0.0], [1474.451, 993.5312, 3599.0112, 3457.2951], [189.8182, 58.7692, 295.6519, 1490.5405, 25.7647, 615.675, 1025.8652, 738.4754, 561.2443, 477.8065, 680.4371, 111.7308, 29.7474, 1077.0337, 12.0962, 54.6186, 1193.0], [276.9164, 95.6218, 298.3354, 376.973, 147.6275, 889.8687, 1876.6067, 1120.3443, 558.6761, 570.5806, 887.7006, 800.1154, 26.2316, 1564.3258, 113.0, 75.1134, 759.069], [253.9673, 158.0449, 901.5759, 572.0162, 141.2353, 1279.5812, 2570.236, 1342.0984, 0.0, 497.0753, 1735.1677, 180.5, 131.9684, 2736.618, 15.9744], [474.7855, 153.2179, 901.9114, 1492.3189, 157.3922, 264.1812, 1564.6854, 246.3607, 800.3409, 914.6667, 1467.0419, 1383.8077, 57.7789, 1226.9663, 223.5192, 371.1546, 1161.6897], [669.6036, 175.25, 329.9557, 1412.2757, 384.3725, 418.1812, 1289.809, 326.6066, 1679.5398, 824.1935, 1453.0719, 1142.8462, 0.0, 2532.5618, 0.0, 188.6701, 88.0], [628.0945, 379.7179, 817.1013, 1440.5784, 226.1961, 1289.7438, 1619.3933, 752.2459, 731.7045, 1375.8817, 1187.8683, 2807.4615, 56.0105, 1675.2921, 232.109, 599.8969], [723.7236, 299.3718, 962.7658, 1525.9027, 739.2157, 992.2687, 593.6854, 2315.9508, 1136.4034, 1976.4194, 1547.1257, 1729.8462, 176.0632, 2587.6629, 798.3141, 419.1031], [861.8364, 379.75, 1598.6899, 2908.4324, 294.1961, 1116.9313, 490.809, 837.0492, 1404.4716, 1135.2688, 1432.6826, 1225.6923, 28.3474, 2461.1685, 3.0769], [893.1782, 274.9231, 1333.5443, 2927.5189, 386.1765, 2016.5062, 3024.5843, 2663.459, 311.5739, 1711.043, 1853.497, 1897.1538, 308.8105, 2363.7528, 76.9487]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

