created: 20230607221050000
creator: Drevarr
modified: 20230705163534005
modifier: drevarr
tags: ChartData
title: 202306072210_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Proteccdebussy", "Manuel Radiador", "Slash Tar", "Xkaet", "Zefirokai", "Arriasa", "Joxrox", "Marco D Roronoa", "Belvyn Brightblade", "Kaehln Lao", "Tuandha Lan", "Uneeta Healah", "Inedible Plant", "Blanco Padre Guard", "Tegan Parker", "Sygaldry Verdandi", "Gabe Malhorn", "Crusader Siolith", "Artakama Nahid", "Etcherii", "Koralia Danai", "Tootsie Pop Rocks", "Nilann Thunderfury", "Tuandha Lan", "Rafaellagabriela", "Ryvalia Fazebringer", "Wh\u00f4o", "Primal Clone", "Venomina The Siren", "Proteccdebussy", "Slingsshot", "Sub Train", "Johosh The Great", "Drevarr Moonwillow", "Manuel Radiador", "Melody Phoenixstorm", "Ria Zerria", "Sumatra Satyricon", "Blanco Padre Guard", "Rosie Sunray", "Ria Zerria", "Husky Guard", "Oo Dads Mad", "Mister Jekyll", "Solus Sanctus", "Zayde Sunsabre", "Kira Dragonblaze", "Eibh\u00ebar", "Newtype Khan", "Grasszanine", "Demon Sekhmet", "Smol Gluvs", "Rozaalyna", "Skye Nightroad", "Kary\u00edna", "Lord Erin The Wise", "No Reserv\u00e9", "Chrozz", "Duke Silvver", "Shaca Booey", "Sister Elonith", "Cyclotechnist Farra", "Be\u00eb", "Mistwalker Cael", "Permanent Dawn", "Xanvias Einzbern"];
const professions = ["Firebrand", "Holosmith", "Berserker", "Tempest", "Tempest", "Druid", "Daredevil", "Renegade", "Firebrand", "Firebrand", "Renegade", "Scrapper", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Dragonhunter", "Herald", "Firebrand", "Chronomancer", "Scourge", "Chronomancer", "Tempest", "Dragonhunter", "Untamed", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Scrapper", "Scourge", "Soulbeast", "Dragonhunter", "Vindicator", "Reaper", "Dragonhunter", "Spellbreaker", "Reaper", "Firebrand", "Spellbreaker", "Dragonhunter", "Chronomancer", "Spellbreaker", "Spellbreaker", "Berserker", "Reaper", "Reaper", "Scrapper", "Vindicator", "Weaver", "Vindicator", "Willbender", "Vindicator", "Berserker", "Berserker", "Scrapper", "Reaper", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[37.8079], [21.7511, 67.4239], [17.4585, 76.81], [83.76, 75.4364, 104.6121], [257.9273, 61.7759], [0.0, 0.0, 5.9517, 3.0541, 18.4279, 96.1522, 82.85, 47.4444, 0.0, 3.3736, 3.02, 0.0, 43.5948], [84.4236, 15.5109, 47.5926, 0.0, 62.5934, 16.54, 0.0, 141.7845], [15.0743, 41.0306, 138.4565, 28.45, 19.4259, 108.2963, 218.1538, 0.0], [7.4537, 22.68, 19.7872], [0.0, 136.607, 69.0326, 58.75, 72.0185, 11.4815, 155.9231, 66.62, 5.0364, 96.4138], [33.8986, 323.7424], [9.2195, 18.68, 23.244, 18.6486, 3.4279, 4.6522, 79.9, 189.9444, 0.0, 4.6484, 52.4, 65.9091, 31.9224], [13.078, 22.03, 25.9824, 10.0608, 20.9432, 12.1957, 154.1, 50.1852, 0.0, 21.4286, 14.66, 1.6909, 59.7069], [0.878, 12.1, 38.419, 0.5811, 11.8996], [0.0341, 68.48, 27.4445, 4.1081, 83.9127, 40.8913, 82.55, 44.2037, 4.5556, 10.044, 65.44, 22.9455, 34.8621], [0.0, 4.32, 31.4765, 2.8851, 98.3013, 13.6304, 42.9, 23.9444, 0.0, 30.8901, 12.86, 28.5273, 44.6379], [29.6722, 10.1959, 15.7555, 80.1739, 91.95, 83.9074, 0.0, 37.5165, 22.16, 145.6, 139.4138], [10.761, 4.9, 24.968, 9.0811, 65.0611, 35.2391, 24.8, 61.0556, 27.6667, 192.1319, 165.2, 13.4909, 54.1466], [2.5707, 30.16, 48.118, 2.7905, 86.4192, 11.9239, 93.15, 40.1111, 4.8519, 19.0, 26.44, 36.7273, 25.181], [0.0732, 33.09, 45.7433, 3.1689, 34.6638, 113.0435, 281.6, 178.8333, 0.0, 97.2747, 16.34, 5.2545], [0.0, 13.14, 58.6613, 6.8919, 69.9127, 16.6957, 6.2, 9.6852, 0.0, 2.1648, 50.54, 37.3273, 62.7069], [100.2341, 149.66, 50.652, 1.027, 22.0786, 45.4239, 88.45, 18.8889, 5.5185, 28.0879, 7.86, 0.0, 3.4224], [20.2585, 7.79, 68.5151, 61.1149], [496.75, 916.7, 564.0741, 32.1852, 752.1429, 171.12, 195.8182], [62.3958, 25.9324, 105.7424, 115.1196, 113.35, 79.963, 0.0, 91.5824, 130.16, 5.8364, 42.6034], [10.3415, 40.21, 69.8679, 23.6757, 79.2576, 18.5, 75.95, 107.963, 5.8889, 83.3407, 45.72, 8.3455, 93.2759], [980.7037, 230.4615, 433.58, 707.0, 1011.9224], [15.0634, 5.02, 55.81, 24.9122, 136.31, 98.7935, 159.15, 124.2593, 0.2222, 250.6703, 130.06, 94.9091, 94.2241], [79.52, 84.294, 31.0608, 86.4847, 44.7283, 217.65, 215.9259, 10.6667, 76.0, 33.68, 33.5818, 40.3448], [572.087, 520.8, 839.9074, 61.7778, 851.6484, 720.98, 475.0182, 121.5172], [13.839, 216.77, 105.0162], [78.6858, 12.9527, 166.1528, 71.1196, 239.7, 104.463, 31.3333, 70.5934, 341.0, 72.5091, 226.0086], [4.4927, 23.51, 91.0439, 16.2973, 92.1354, 148.0109, 15.0, 63.5926, 29.5556, 168.5165, 194.04, 21.0909, 106.8621], [10.8244, 61.15, 86.5094, 10.4527, 151.69, 101.5978, 152.55, 112.9815, 74.5556, 207.7473, 102.18, 2.7273, 101.1207], [0.0, 1016.8148, 469.963, 1156.956, 1203.84, 244.3273, 491.9397], [17.6829, 171.14, 124.9087], [25.478, 66.82, 46.5735, 96.4257, 756.6157], [33.4244, 133.96, 123.301, 0.0, 27.8821, 10.8261], [424.25, 837.7, 813.7778, 0.0, 1140.1319, 478.54, 480.7818, 500.4224], [35.7367, 143.1757, 78.5633, 77.4783, 437.45, 2277.7593, 280.1481, 859.7912], [826.413, 745.95, 677.8889, 425.4444, 1368.1978, 1545.78, 534.0727], [49.5454, 46.8784, 374.2358, 471.2391, 332.65, 678.0, 20.1111, 202.8242, 506.1, 20.2727, 523.0948], [55.2927, 124.87, 166.7003], [69.5561, 95.1, 182.9452], [8.439, 17.47, 166.3348, 4.8311, 89.0568, 57.0761, 37.45, 96.7778, 20.8148, 71.0879, 439.1, 148.5818, 50.3621], [3.4341, 0.0, 164.7573, 17.0, 31.5939, 80.3478, 339.55, 251.6481, 25.1111, 622.1978, 199.0, 85.2545, 9.3621], [52.161, 122.68, 243.3712], [44.878, 48.64, 171.1005, 31.2905, 254.869, 222.5435, 113.3, 313.8704, 15.2963, 390.1209, 421.32, 131.1091, 221.8103], [48.922, 51.29, 218.6415, 39.4662, 402.9432, 260.3261, 507.45, 448.4074, 6.963, 245.9121, 192.52, 55.9636, 169.7931], [91.6, 170.82, 305.1803, 44.2973, 508.8865, 370.163, 338.5, 767.3704, 330.8889, 787.5165, 580.12, 53.8, 60.9483], [366.6927, 530.73, 517.4651], [120.1951, 400.73, 351.8776, 16.1486, 665.0699, 603.4783, 377.9, 876.4259, 429.1111, 294.5495, 938.24, 326.0727, 1241.7241], [59.5366, 211.32, 333.7565, 148.8784, 1073.5284, 917.2935, 514.55, 1736.1111, 478.6296, 1117.1538, 1055.68, 345.5818], [313.0537, 435.97, 439.5551, 1619.3231], [203.4244, 385.61, 384.1088, 32.3378, 803.6681, 1314.6304, 401.75, 2807.8333, 937.2593, 640.5604, 1261.94, 325.3091, 1502.2845], [235.1317, 225.4, 439.4133, 1456.4192, 928.9239, 1190.1, 1903.7778, 709.0741, 1408.8242], [377.1073, 208.75, 386.5924, 489.5608, 695.4716, 159.8913, 1182.25, 2118.3704, 262.963, 2049.7912, 1497.94, 614.4909, 959.2672], [204.9854, 157.93, 499.4537, 132.4257, 518.6725, 957.8696, 772.65, 2047.0741, 175.8148, 932.8352, 1631.9, 996.1455, 1153.7328], [87.8293, 439.08, 724.4853, 0.7703, 127.3886, 522.3261, 945.85, 1779.8704, 58.1481, 1614.3846, 359.62, 131.7455, 1543.1724], [87.5463, 205.24, 873.1233, 180.6284, 1688.3144, 733.8261, 1310.15, 2390.6111, 75.6296, 2640.2308, 1301.14, 338.4545, 2190.1983], [77.1902, 232.95, 979.2176, 276.7162, 767.2358, 2150.7065, 2180.537, 0.0, 2836.956, 1807.62, 2445.3636, 1889.6207], [455.0195, 299.88, 997.3142, 278.7635, 487.5066, 2445.2174, 2698.0556, 633.8148, 2734.3077, 1605.48, 116.0, 2184.2845], [159.3268, 301.68, 1078.2089, 234.0608, 1812.6725, 922.4022, 347.8, 2526.7037, 925.4815, 2721.7253, 2471.12, 19.5455, 1082.2414], [55.7512, 1249.04, 818.9452, 247.2635, 3572.3537, 2334.6413, 3940.0185, 1373.7037, 2105.4176, 1016.38, 1324.2909, 1904.0948], [53.361, 366.21, 1282.7841, 108.3243, 1789.7205, 2407.9674, 1227.15, 2622.1296, 242.2222, 925.011, 964.16, 703.1455, 2539.5086], [46.3415, 368.53, 2506.8578, 463.3784, 5520.0655, 4736.1739, 0.0, 3298.1667, 211.6296, 4386.9231, 5108.44, 1061.1273, 1004.069]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

