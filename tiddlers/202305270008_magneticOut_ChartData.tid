created: 20230527000807000
creator: Drevarr
modified: 20230705163531780
modifier: drevarr
tags: ChartData
title: 202305270008_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Artakama Nahid", "Miphest\u00f6", "Zefirokai", "Johosh Of The North", "Elonith Primal"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[98.9798, 127.6186, 20.0483, 19.8132, 53.2397, 0.0, 59.6813, 36.3446, 0.0, 0.0, 0.0, 0.0, 59.0822, 39.06, 16.0811, 0.0, 20.0389, 0.0, 37.9098, 53.5738, 0.0, 20.0657, 38.2924, 34.0848], [131.9731, 92.2301, 16.3184, 0.0, 0.0, 72.1238, 19.8453, 37.8662, 19.8701, 0.0, 38.1465, 19.944, 0.0, 64.9779, 16.8739, 39.0457, 0.0, 80.1557, 0.0, 16.2082, 95.015, 20.256, 20.0657], [155.7504, 205.3632, 0.0, 227.975, 33.5975, 39.3984, 36.8477, 0.0, 0.0, 59.7859, 3.9706, 39.8899, 0.0, 0.0, 39.9952, 96.0689, 0.0, 0.0, 19.798, 0.0], [326.2464, 309.145, 36.7747, 0.0, 0.0, 125.591, 19.3347, 150.6624, 35.2128, 0.0, 50.3534], [632.5862, 604.1712, 117.9004, 0.0, 32.1104, 836.136, 126.3224, 222.3091, 168.6442, 171.2354, 180.5091, 119.4326, 369.6717, 114.2338, 145.739, 0.0, 295.6723, 37.8434, 19.8058, 174.4287, 412.5043, 37.408, 116.3208, 154.8619, 115.1172], [575.2627, 562.3651, 89.7512, 19.6293, 870.4915, 121.1143, 302.784, 175.6238, 55.539, 238.458, 105.5695, 146.2339, 346.2144, 23.356, 149.544, 172.8574, 38.8336, 335.259, 12.5694, 19.888, 127.9253, 481.0733, 60.656, 124.4175, 332.0787, 167.832]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

