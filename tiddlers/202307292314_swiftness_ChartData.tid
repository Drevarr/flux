created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Sr Conrad", "Zaedy Zae", "Irish Necroman", "Oo Dads Mad", "Evangeline Granger", "Hyde En Sikh", "Permanent Dawn", "Vini Boy", "Johosh The Great", "Vera Khin", "Be\u00eb", "Irish Necroman", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Rahani Sunray", "Kosa\u00efr", "Tegan Parker", "Mistwalker Cael", "Grasszanine", "Cesare Pirane", "Xanvias Einzbern", "Keypek The Drunk", "Jimbo The Pleb", "Blancoo Padre", "Aronorf Xideliesi", "N\u00eec\u00f4le", "Koralia Danai", "Newtype Khan", "Sub Train", "Johosh The Great", "Drevarr Moonwillow", "Sygaldry Verdandi", "Loganlek", "Gabe Malhorn", "Gestern Yesteryear", "Mmathuss", "Bella Sassy"];
const professions = ["Bladesworn", "Druid", "Scourge", "Berserker", "Scrapper", "Chronomancer", "Weaver", "Tempest", "Dragonhunter", "Dragonhunter", "Reaper", "Reaper", "Scrapper", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Berserker", "Scrapper", "Berserker", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[49.9944, 0.0, 63.4061, 31.4899, 77.9551, 0.0, 117.124], [0.0, 9.99, 7.6847, 0.0, 44.3722, 0.0, 48.5214, 0.0, 48.1068, 0.0, 0.0, 18.8935, 116.3225, 40.8223, 0.0, 7.8716], [63.2922, 0.0, 127.4255, 27.8774, 134.78], [47.9964, 3.0062, 164.4571, 0.0, 175.0111, 0.0], [19.6582, 284.6757, 86.8018], [0.0, 0.0, 0.0, 0.0, 19.596, 0.0, 0.0, 24.346, 0.0, 0.0, 0.0, 0.0, 359.835, 0.0, 0.0, 0.0], [0.0, 0.0, 22.8901, 6.517, 0.0, 0.0, 27.5546, 183.4175, 0.0, 0.0, 0.0, 16.5426, 177.5025], [48.5321, 39.8395, 166.7739, 13.9779, 19.5755, 0.0, 10.1752, 58.8374, 0.0, 176.295, 69.0975, 2.7456, 0.0], [77.7, 76.2126, 50.5202, 357.3589, 45.9739], [73.2025, 0.0, 0.0, 48.3254, 0.0, 405.3175, 0.0, 72.9062, 9.5434], [52.9914, 0.0, 53.627, 43.2124, 25.5024, 77.8687, 25.373, 412.5625, 51.3372], [71.4613, 132.4225, 60.3428, 32.0712, 80.5589, 31.9671, 436.7125, 66.6676, 36.4954, 33.8199], [0.0, 0.0, 0.0, 31.2514, 110.5459, 0.0, 364.6965, 56.0924, 10.948, 35.6711, 23.7388, 338.905, 54.739, 0.0, 0.0], [63.6615, 86.3604, 9.2478, 41.6993, 60.0063, 550.62, 67.2861, 66.6547, 84.8459], [0.0, 159.8498, 60.9277, 38.3285, 64.7864, 38.0733, 61.9761, 32.5118, 520.03, 73.5155, 27.7094, 46.6722], [230.4645, 71.6128, 89.2069, 91.619, 13.4462, 438.725, 42.5012, 168.5798, 14.9769], [0.0, 73.715, 251.5337, 388.3845, 147.798, 18.032, 87.6334, 24.5129, 293.02, 2.3415, 74.2579], [70.6575, 49.1286, 61.519, 162.3104, 61.8893, 156.6266, 59.9245, 124.362, 70.6468, 32.0197, 13.3019, 48.1083, 419.8075, 65.3864, 47.7312, 67.4657], [226.4639, 134.0944, 0.0, 131.376, 0.0, 27.5006, 0.0, 920.92, 54.9599, 0.0, 77.3923], [30.3653, 54.9148, 40.9974, 284.4205, 0.0, 14.7347, 93.562, 0.0, 1116.1325, 3.0042, 5.7869, 27.7943], [25.29, 35.1426, 0.0, 142.3762, 30.5016, 173.6979, 68.1507, 292.3165, 96.922, 40.031, 174.7187, 9.2031, 332.465, 123.5715, 104.1216, 99.37], [62.745, 73.8594, 45.4415, 149.3532, 19.9709, 187.0685, 92.0269, 341.502, 114.632, 20.711, 82.3026, 73.4812, 545.79, 71.7925, 6.8006, 71.2274], [0.0, 10.0651, 201.0287, 33.8414, 139.6746, 11.2358, 197.729, 108.836, 30.9893, 119.4185, 75.0867, 743.015, 173.4949, 73.92, 55.1707], [38.49, 45.9318, 125.0899, 180.7112, 13.9046, 212.1383, 23.2408, 162.0325, 139.2328, 65.5592, 165.8508, 56.8239, 618.24, 78.4195, 38.9875, 72.8295], [13.0125, 9.9678, 87.3229, 79.5835, 80.3947, 145.6436, 42.7363, 358.4455, 0.0, 0.0, 44.8878, 0.0, 1318.9925, 88.7576, 17.783, 0.0], [190.9758, 292.6455, 260.0472, 24.9357, 183.0387, 60.6371, 1207.5, 128.4754, 38.2272, 58.5841], [0.0, 90.7092, 11.8708, 388.4869, 48.2232, 242.3414, 138.4416, 275.5375, 258.8236, 70.0157, 51.7132, 133.6595, 794.535, 17.4953, 170.9875, 13.514], [17.7525, 57.9864, 17.5754, 205.8589, 6.6797, 417.3525, 19.3283, 332.619, 170.5312, 65.2501, 326.5701, 46.1587, 911.26, 96.7984, 54.5741], [54.855, 23.643, 42.0557, 587.2155, 153.2918, 149.7025, 14.9477, 33.229, 7.9856, 179.3669, 184.6827, 54.6164, 1148.735, 103.2045, 192.1075, 2.3684], [396.5804, 0.0, 443.3275, 134.5316, 31.4014, 64.5667, 221.4184, 1311.7475, 230.7963, 105.5578, 24.4855], [15.345, 33.3, 21.4537, 207.009, 59.0947, 234.4623, 0.0, 654.8745, 209.6864, 84.2867, 204.4613, 84.1751, 1188.5825, 142.2596, 83.9309, 61.266], [6.9225, 201.243, 6.946, 504.6419, 92.5613, 72.2249, 49.0565, 485.1105, 237.3784, 142.6074, 86.7864, 263.592, 1077.09, 202.5653, 125.5795], [120.6091, 582.0969, 181.0776, 773.15, 182.3808, 90.907, 149.8087, 29.6448, 1110.9, 129.8008, 198.4435, 238.8293], [329.7518, 623.9485, 85.1368, 285.9102, 146.7697, 239.3945, 1748.46, 235.9654, 225.4349, 304.1704], [113.6862, 3.5705, 245.114, 120.6432, 336.4128, 118.2438, 664.909, 47.7204, 53.7354, 128.0872, 317.2049, 1820.91, 169.5628, 372.3456, 277.1075], [0.0, 132.645, 10.219, 743.3923, 63.7978, 671.1544, 66.4787, 997.3635, 339.3236, 137.9963, 194.1984, 72.9365, 1329.4575, 157.2366, 101.376, 80.8056], [0.0, 213.1422, 0.1539, 377.0631, 146.135, 441.8254, 272.1013, 983.2165, 327.2164, 122.5403, 220.4535, 145.7009, 1797.1625, 199.5169, 235.8682, 428.1652]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

