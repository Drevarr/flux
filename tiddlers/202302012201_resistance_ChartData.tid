created: 20230201220146000
creator: Drevarr
modified: 20230705163518547
modifier: drevarr
tags: ChartData
title: 202302012201_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Whose Guardian", "Koa Mako", "Arkitrix", "Mad X King", "Ember Nightroad", "X Zenix X", "Gravlyn Isshtail", "Raziel Umbra", "Hyde En Sikh", "Raelyn Sunray", "Riann Swordbreak", "Black Raspberry Pie", "Smol Daddy Tika", "Bodger Bloddger", "Zaylen Harker", "Riann Swordbreak", "Smol Daddy Tika", "Xanvias Einzbern", "Koralia Danai", "Sygaldry Verdandi", "\u00c2 R K", "Demon Sekhmet", "Sister Elonith", "Bella Lunabringer", "Ravioli Fetabringer", "Johosh The Great", "Newtype Khan"];
const professions = ["Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Vindicator", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[35.5419, 17.8634, 20.0655, 13.7122, 14.7907, 3.7456, 21.241, 11.3858, 13.6399], [5.9868, 149.9562, 1.1136], [40.3814, 0.0, 37.4765, 0.0, 0.0, 20.6151, 16.8913, 37.926, 20.5682, 5.5949, 12.6636, 12.765, 10.5017, 16.1515, 0.0], [44.4139, 0.0, 0.0, 17.892, 11.7618, 50.2485, 28.5768, 13.7984, 28.0042, 15.3252, 43.4521, 13.2878, 13.9104], [0.0, 0.0, 0.0, 21.12, 0.0, 23.5301, 0.0, 0.0, 27.2168, 29.5968, 0.0, 0.0, 0.0, 0.0, 31.2404, 50.0388, 1.9825, 40.7266, 0.0, 33.4191, 29.8701], [73.451, 0.0, 17.25, 22.6418, 48.159, 1.7013, 51.597, 0.0, 0.0, 13.9395, 75.9773, 0.7501, 20.0348], [0.0, 200.3977, 62.9184, 53.4758, 63.4962, 11.5943, 3.8386], [12.7772, 76.6399, 33.9648, 20.1062, 14.9822, 6.1276, 38.7638, 0.0, 0.0, 10.607, 19.9736, 11.6052, 18.3015, 5.7996, 20.0582, 5.1862, 18.9433, 11.7608, 12.7319, 11.6714, 10.4894, 35.7864], [11.17, 66.4734, 20.532, 19.5149, 25.6838, 2.2858, 5.6246, 39.9797, 6.8746, 0.0, 14.162, 14.1569, 23.6964, 19.5363, 14.1218, 10.9814, 12.3754, 17.4115, 9.698, 11.9784, 12.8856, 10.2976, 38.2395], [39.1933, 35.5419, 42.289, 35.0154, 24.3628, 12.4099, 8.8357, 27.9809, 27.2186, 7.728, 12.9599, 31.6282, 103.3188], [13.621, 138.6166, 1.7123, 55.4995, 0.0, 9.0454, 36.5416, 34.1305, 66.4107, 36.8235, 18.9512], [4.2591, 83.6783, 20.88, 17.2339, 20.0782, 5.6076, 39.6221, 6.9638, 13.7082, 16.4932, 18.1345, 25.4584, 20.3301, 16.1484, 15.4157, 6.421, 13.5309, 10.3409, 13.4274, 6.8145, 9.7219, 30.303], [0.0, 175.177, 70.992, 49.9277, 19.161, 36.2013, 0.0, 8.5109, 0.0, 41.1247, 11.8891, 0.0, 28.861], [0.0, 189.8402, 109.5504, 60.7834, 0.0, 0.0, 16.8072, 0.0, 0.0, 6.8432, 45.9953, 0.0, 35.7896, 0.0, 0.0, 27.6745, 0.0, 0.0, 0.0, 7.8671, 38.1674], [8.3976, 134.1199, 47.3976, 24.5837, 34.5509, 25.3506, 5.1314, 71.5915, 0.0, 0.0, 13.5501, 50.3831, 29.0433, 32.3253, 30.0331, 41.1581, 8.822, 37.7844, 8.1977, 27.2992, 6.2198], [203.9976, 153.7114, 93.4606, 81.5424, 41.5579, 75.7621], [16.0524, 18.4338, 98.4758, 29.7998, 162.8814, 48.4899, 34.3316, 40.7383, 50.7203, 188.0951], [29.1707, 226.9871, 77.8824, 76.5811, 84.3388, 19.5396, 0.0, 47.4893, 0.0, 0.0, 26.226, 27.5439, 19.0786, 17.5077, 43.659, 32.9443, 31.1581], [30.0546, 78.0085, 71.4792, 60.4877, 49.5331, 101.9875, 7.812, 7.695, 57.7555, 39.4339, 63.4942, 33.7806, 11.0172, 21.6355, 5.3782, 10.5184, 6.885, 7.2064, 22.748, 18.1646, 86.9407], [7.1922, 117.306, 49.6248, 56.0102, 67.9297, 15.3122, 78.0998, 0.0, 4.9176, 36.8912, 35.9268, 44.5978, 28.4445, 14.2512, 12.6182, 27.6321, 42.584, 30.5406, 21.1747, 7.0871, 32.6516, 62.6983], [23.5053, 120.6297, 54.4272, 95.1245, 41.8382, 30.3766, 11.4874, 102.7027, 7.4995, 14.7529, 36.4541, 59.0226, 44.8409, 54.7281, 31.7363, 31.7242, 26.2738, 42.533, 35.5771], [33.8717, 189.6447, 131.4744, 19.5149, 68.0316, 0.0, 90.1152, 0.0, 0.0, 38.8145, 42.0001, 0.0, 9.8784, 0.0, 15.9811, 0.0, 58.7701, 23.6556, 17.5619, 11.4731, 17.8129, 115.5843], [9.8441, 157.7766, 34.7304, 49.0406, 36.6402, 113.7168, 0.0, 0.0, 48.2267, 47.7313, 65.9246, 20.3301, 39.5626, 17.5882, 45.523, 25.7853, 43.6677, 19.8223, 0.0, 27.5348, 89.3217], [34.7155, 117.697, 55.8888, 44.3098, 43.0102, 4.6956, 5.9535, 96.7666, 0.0, 15.6957, 40.2132, 39.0918, 51.4637, 48.0249, 29.6234, 38.688, 6.8326, 47.2305, 37.3185, 14.7605, 16.9743, 19.188, 106.0605], [27.8447, 111.8317, 38.3496, 59.4317, 71.395, 29.2199, 5.9592, 81.8904, 7.7227, 7.644, 52.7725, 21.2995, 62.7651, 45.3789, 10.6075, 37.9142, 18.9473, 33.6996, 20.0121, 27.0673, 28.7448, 10.5854, 116.3058], [14.9068, 178.8916, 75.516, 67.9642, 81.3322, 14.8441, 21.9826, 120.5827, 0.0, 7.2618, 41.4954, 54.2751, 53.2865, 72.765, 38.2474, 36.7238, 33.367, 64.8462, 29.5762, 25.4058, 31.4458, 32.5556, 114.7185], [45.1221, 382.6131, 238.1712, 80.7206, 86.8868, 19.3055, 88.6848, 0.0, 40.0546, 36.7455, 40.4604, 41.6206, 35.9415, 18.3907, 26.3078, 0.0, 36.3037, 0.0, 17.8324, 11.3988, 35.5298, 106.1327]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

