created: 20230412220340000
creator: Drevarr
modified: 20230705163525477
modifier: drevarr
tags: ChartData
title: 202304122203_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Black Raspberry Pie", "Nazhul Naxxremis", "Grasszanine", "Arriasa", "Primal Clone", "Konztantin\u00eb", "Tegan Parker", "Venomina The Siren", "Ryvalia Fazebringer", "Demon Staph", "Newtype Khan", "Fribble Bibble", "Sister Elon\u00edth", "Sub Train", "Zadie Miststep", "Johoshua", "Arcanophage Farra", "Drevarr Moonwillow", "Koralia Danai", "Ark Darkness", "Sygaldry Verdandi", "Solus Sanctus", "Gavann", "Lucas Ryn", "Bella Sassy"];
const professions = ["Tempest", "Chronomancer", "Scourge", "Spellbreaker", "Druid", "Chronomancer", "Herald", "Tempest", "Tempest", "Chronomancer", "Druid", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[93.8228, 21.9427, 0.0, 18.4191, 94.5901, 2.0168, 207.4199, 0.0, 106.72, 30.0941, 43.883, 5.1322, 43.9488, 0.0, 47.1145, 0.0, 33.2813, 14.5152, 455.9544], [129.3233, 0.0, 0.0, 210.7392, 51.133, 46.0032, 291.0071, 0.0, 124.7, 8.745, 129.3197, 0.0, 45.2045, 24.2242, 0.0, 8.8092, 16.8538, 49.9219, 8.6486, 131.328], [301.2471, 90.0669, 0.0, 171.3285, 25.7436, 40.3368, 334.3486, 0.0, 344.81, 37.653], [143.0163, 0.0, 0.0, 41.7774, 40.623, 56.2794, 44.294, 0.0, 120.64, 20.394, 90.4128, 0.0, 42.3533, 65.6093, 0.0, 267.8399, 0.0, 18.8698, 0.0, 511.7688], [66.9438, 0.0, 0.0, 138.6063, 273.1422, 50.1329, 75.9667, 0.0, 22.62, 0.0, 0.0, 5.4699, 18.0403, 62.2608, 0.0, 262.9899, 0.0, 0.0, 70.0661, 439.9488], [629.7113, 24.2388, 0.0, 91.581, 215.8685, 49.6527, 357.9244, 0.0, 87.87, 13.596, 107.255, 9.4301, 0.0, 0.0, 0.0, 97.4953, 0.0, 38.4394, 0.0, 4.5144], [194.5264, 407.0058, 48.7267, 112.2077, 33.9595, 987.012], [120.5326, 0.0, 0.0, 51.45, 229.4489, 60.8894, 354.8286, 329.15, 2.772, 117.7651, 6.0282, 44.8416, 70.3181, 0.0, 75.5217, 0.0, 39.528, 25.6435, 337.3488], [165.838, 62.6102, 34.9566, 248.6064, 154.9341, 6.5307, 237.4256, 0.0, 461.68, 32.736, 152.8205, 15.448, 58.631, 82.0378, 0.0, 72.2554, 15.241, 35.5104, 34.897, 369.7704], [927.2392, 0.0, 0.0, 174.3126, 0.0, 111.6945, 139.3119, 12.596, 84.1, 0.0, 291.671, 5.5319, 47.3299, 30.5549, 0.0, 0.0, 0.0, 173.7418, 0.0, 298.3608], [385.7721, 14.6015, 44.6194, 156.3051, 213.1525, 103.5311, 300.5327, 29.2152, 543.75, 0.0, 125.9904, 0.0, 15.1373, 53.0525, 72.8039, 72.8493, 0.0, 11.975, 49.6843, 541.728], [509.1786, 0.0, 0.0, 186.9693, 466.9279, 24.6823, 257.4293, 0.0, 83.52, 0.0, 43.0195, 0.0, 0.0, 98.3093, 0.0, 288.5267, 77.999, 25.8422, 97.2821, 909.036], [328.6332, 0.0, 0.0, 168.8589, 177.4893, 88.0687, 325.0611, 372.07, 38.445, 94.7866, 0.0, 29.7043, 64.5629, 0.0, 159.4568, 11.2493, 63.841, 0.0, 1173.3336], [1.584, 334.56, 44.2449, 162.2592, 78.5323, 116.7593, 442.8365, 19.5149, 120.9946, 46.0555, 1736.8128], [79.1154, 7.0825, 152.8143, 421.6842, 451.8123, 255.0822, 770.3829, 0.0, 385.41, 50.061, 86.2349, 14.8689, 23.2243, 87.3221, 83.5679, 434.0273, 17.9626, 67.703, 178.5067, 107.9352], [383.7435, 90.649, 62.4103, 100.7391, 308.333, 15.1743, 586.777, 24.0452, 996.73, 19.338, 178.9978, 21.2544, 76.3872, 33.8738, 32.0695, 60.5002, 4.5878, 10.0094, 1210.68], [400.8175, 30.8524, 91.5977, 152.0862, 25.8617, 60.9854, 398.1701, 0.0, 466.9, 34.947, 136.1741, 12.3977, 86.9357, 23.1778, 0.0, 120.7556, 4.3142, 75.7642, 92.3227, 2505.9024], [376.1363, 102.1944, 47.2056, 431.0481, 249.0518, 185.0691, 689.6534, 89.0744, 1124.62, 110.814, 192.8371, 44.1415, 145.6704, 192.1714, 0.0, 165.3956, 32.4173, 84.577, 90.72, 1388.7936], [746.0177, 29.4132, 5.0588, 114.8364, 109.3513, 232.5128, 588.4439, 0.0, 941.92, 35.574, 204.1958, 20.4008, 106.9459, 125.2541, 82.7924, 282.291, 21.8736, 77.2416, 107.8056, 1997.8272], [747.201, 17.9972, 155.7984, 217.2219, 836.1953, 207.6385, 811.1048, 871.16, 7.326, 88.3891, 37.7307, 93.8822, 107.8838, 136.0537, 547.9533, 7.5398, 51.6845, 165.8664, 758.4192], [618.2159, 38.4523, 208.7449, 508.5318, 426.8954, 178.9225, 1201.6544, 800.98, 58.608, 145.9661, 0.0, 105.961, 91.0368, 150.7262, 282.5879, 6.7133, 90.8237, 20.2608, 943.0992], [371.7409, 80.6398, 26.6295, 463.5645, 510.0307, 184.3968, 693.94, 147.5988, 1317.18, 136.653, 55.4227, 82.4305, 43.1309, 30.9734, 47.2124, 492.0296, 41.9904, 84.1882, 1502.8848], [375.46, 49.7389, 153.8375, 430.6365, 977.4309, 266.3189, 700.3697, 48.316, 1711.58, 20.988, 145.705, 7.1346, 51.6326, 438.5462, 87.1972, 292.3869, 98.7034, 45.9302, 267.4426, 1322.3088], [49.9653, 276.8108, 432.4887, 572.5003, 488.0753, 688.7009, 0.0, 2108.59, 152.196, 304.4006, 36.8207, 141.7306, 164.8603, 326.8267, 369.4923, 78.4829, 85.5619, 140.1926, 1157.328], [1123.8444, 74.8348, 320.265, 657.7368, 824.3863, 464.0653, 1502.6634, 1870.79, 171.633, 193.033, 56.1979, 113.8406, 275.831, 242.8866, 680.3885, 78.8256, 142.1712, 96.2539, 1438.8624], [918.6177, 157.2209, 280.1644, 756.7266, 749.6353, 298.7804, 1449.7963, 236.4476, 2323.48, 188.199, 282.6624, 54.7917, 280.5062, 206.1408, 313.7673, 660.7905, 113.2589, 211.0406, 139.0435, 2193.588]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

