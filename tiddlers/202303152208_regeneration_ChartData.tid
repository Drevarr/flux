created: 20230315220824000
creator: Drevarr
modified: 20230705163522247
modifier: drevarr
tags: ChartData
title: 202303152208_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Whose Guardian", "Zaylen Harker", "Koralia Danai", "Mac Chiato", "Sygaldry Verdandi", "Cat Wigglebooty", "Zadie Miststep", "Tribal S", "\u00c1rkantor", "Mike The Archmagus", "Fribble Bibble", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Tempest", "Druid", "Vindicator", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[42.6271, 101.673, 119.9579, 10.0926, 78.408, 23.6579, 23.6654, 143.8336, 17.3623, 94.7376, 109.5689, 22.3006, 64.8476, 21.1914, 15.7937, 42.0566, 0.0, 50.4192, 28.2917, 0.0, 89.7982, 136.5466], [90.5726, 143.4446, 202.9952, 22.2264, 95.3726, 49.4816, 46.1014, 260.2704, 21.469, 75.3624, 77.6234, 20.0164, 26.9863, 0.015, 24.9234, 17.7008, 1.9829, 0.0, 36.36, 24.1358, 0.0, 31.834, 46.1894], [58.9793, 87.6767, 90.746, 95.8478, 9.3549, 20.8003, 253.7754, 6.9741, 142.7544, 158.5714, 20.6593, 48.1993, 0.0, 16.4387, 53.5452, 0.0, 18.8006, 32.8694, 70.9157, 17.7811, 169.0364, 40.7462], [62.1545, 63.1649, 87.7031, 8.2152, 46.5696, 25.7786, 21.1387, 188.4716, 0.0, 98.496, 231.7136, 22.1483, 81.6301, 4.8857, 20.8154, 52.7456, 19.2658, 81.204, 92.281, 25.7914, 127.182, 65.3184], [34.7288, 78.4666, 94.1947, 22.2516, 162.8986, 44.6688, 15.1378, 246.2176, 61.9164, 104.8464, 263.9483, 0.0, 53.9054, 33.6518, 27.2374, 101.1595, 6.7988, 64.6517, 10.6474, 187.8115, 80.5061, 68.7187, 146.2208, 291.3667], [113.8309, 147.5057, 183.7235, 40.7988, 63.059, 32.5315, 21.5335, 328.5264, 63.1193, 88.3224, 214.6567, 16.3786, 102.3061, 53.9034, 105.891, 37.6096, 69.2294, 151.1606, 88.4981, 29.2589, 168.4969, 179.2368], [0.0, 106.825, 40.6682, 0.0, 0.0, 0.0, 323.7408, 452.5861, 302.2864, 0.0, 62.7168, 86.4321, 0.1196, 52.3627, 0.0, 251.1264, 236.5099, 407.8303, 321.3821], [127.0874, 350.6342, 242.891, 202.2451, 41.6307, 0.0, 416.8577, 24.543, 109.4472, 241.3985, 0.0, 171.2486, 0.0, 8.7984, 136.612, 36.754, 193.6368, 0.0, 194.7926, 123.3432, 0.0, 257.7744], [56.5583, 118.5702, 285.6269, 29.8116, 267.0149, 214.0192, 95.3047, 271.2527, 0.0, 60.1344, 228.9672, 25.2277, 103.0445, 0.5478, 28.4406, 7.5636, 0.0, 178.3123, 16.9712, 317.6894, 190.476, 109.415, 327.9754, 347.3539], [363.7985, 388.5622, 527.5712, 0.0, 352.7885, 0.0, 1095.8752, 0.0, 668.4768, 904.4493, 0.0, 381.0299, 0.0, 61.0323, 159.7361, 0.0, 80.8819, 0.0, 322.6829, 399.7066, 0.0, 39.6191, 383.6678], [243.7363, 690.0278, 576.731, 155.4588, 498.96, 139.857, 91.6951, 948.4989, 133.4677, 368.064, 715.8116, 113.0933, 383.3794, 43.915, 175.577, 228.3086, 246.4646, 412.7102, 429.9696, 618.4899, 649.2182], [502.396, 739.4139, 762.4155, 102.4884, 408.767, 156.1152, 97.7976, 1060.5663, 28.9899, 490.4712, 998.985, 132.179, 664.4527, 95.343, 165.6806, 372.1178, 342.671, 428.5632, 571.6944, 663.2734, 890.4298], [603.7246, 1080.3304, 764.7822, 56.8764, 517.5403, 119.2221, 60.3029, 1470.1024, 139.8708, 793.9944, 1653.5075, 79.8624, 556.642, 115.0869, 244.1142, 417.0998, 80.1136, 331.7774, 68.2527, 622.6286, 703.8821, 169.7472, 685.4724, 997.8941]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

