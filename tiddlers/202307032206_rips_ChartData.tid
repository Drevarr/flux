created: 20230703220627000
creator: Drevarr
modified: 20230705163541529
modifier: drevarr
tags: ChartData
title: 202307032206_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Zayde Sunsabre", "Smol Daddy Tika", "Necrotic Windrunner", "Be\u00eb", "Morv\u00e4rth", "Be\u00eb", "Newtype Khan", "Arcanophage Farra", "Grasszanine", "Rahani Sunray", "Morton Saltbringer", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Spellbreaker", "Spellbreaker", "Reaper", "Scourge", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0417, 0.0159, 0.0, 0.0748, 0.0, 0.0382, 0.0645, 0.2297, 0.8727, 0.9767, 0.2593], [0.0, 0.0278, 0.0079, 0.0339, 0.0, 0.0444, 0.0, 0.0, 0.0645, 0.0233, 0.3649, 1.0, 0.0, 0.5185, 0.8125, 0.4643], [0.0, 0.0, 0.0076, 0.0, 0.0233, 0.2838, 0.0, 0.2791, 0.0, 0.0, 0.5179, 0.2468, 0.2574, 0.2456, 0.1389, 0.119, 0.2048, 0.3605, 0.0781, 0.1696], [0.0052, 0.0, 0.0278, 0.0238, 0.0, 0.0909, 0.1305, 0.1048, 0.0229, 0.0645, 0.0233, 0.6081, 1.3488, 1.1667], [0.2597, 0.1881, 0.4737, 0.5185, 0.3333, 0.4699, 0.2558, 0.3594, 0.5439], [0.8545, 0.0, 0.6429, 0.3766, 0.2277, 0.8421, 0.2593, 0.4048, 0.3494, 0.4302, 0.2031, 0.4211], [0.0104, 0.0, 0.0, 0.0079, 0.0, 0.0, 0.057, 0.0286, 0.0076, 0.043, 0.0, 0.527, 0.6182, 0.7674, 0.9259, 0.3542, 0.8929, 0.4156, 0.396, 0.6491, 0.6204, 0.7738, 0.7711, 0.2558, 0.0938, 0.6257], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0634, 0.019, 0.0611, 0.1183, 0.0, 0.473, 1.1818, 0.7209, 0.7037, 0.0, 0.1964, 0.6623, 0.1782, 0.6842, 0.6574, 0.881, 0.8313, 0.4651, 0.4688, 0.6374], [0.0, 0.0, 0.0278, 0.0159, 0.0508, 0.0, 0.0862, 0.0, 0.0458, 0.043, 0.7703, 1.0, 1.0465, 1.2963, 0.125, 0.7321, 0.5325, 0.2475, 0.6316, 0.713, 0.7976, 0.8795, 0.4186, 0.3438, 0.6842], [0.2688, 0.7838, 0.7037, 0.7083, 0.5536, 0.7273, 0.4653, 0.9825, 0.75, 0.7143, 1.2289, 1.1047, 0.5469, 0.8655], [0.0259, 0.0, 0.0, 0.0, 0.0, 0.0798, 0.019, 0.0, 1.2, 0.7907, 0.8333, 0.4107, 0.7532, 0.2178, 0.5263, 0.8148, 0.7857, 0.9398, 1.314, 0.6094, 1.0058], [0.0052, 0.0, 0.0159, 0.0, 0.0, 0.1812, 0.0381, 0.0534, 0.172, 0.8919, 0.8727, 1.1628, 0.8889, 0.7292, 0.7143, 0.1948, 0.0693, 0.614, 0.7037, 0.8095, 0.747, 1.1047, 0.5938, 0.924], [0.0052, 0.0, 0.0317, 0.0, 0.1496, 0.0095, 0.0305, 0.0, 0.0, 0.9595, 1.2182, 1.3256, 0.463, 0.8333, 1.1071, 0.6234, 0.396, 1.6316, 1.1759, 1.0357, 1.0843, 1.1047, 0.8906, 1.5439], [0.0415, 0.0, 0.0417, 0.0397, 0.0169, 0.0, 0.237, 0.019, 0.0153, 0.043, 0.0233, 1.3378, 1.2909, 2.2326, 1.0556, 0.5, 0.9643, 1.1039, 0.5743, 1.5965, 1.7407, 1.7976, 1.241, 1.4186, 1.4844, 1.4854]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

