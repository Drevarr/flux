created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Blancoo Padre", "N\u00eec\u00f4le", "Smol Gluvs", "Irish Necroman", "Ex Warcraft", "Civil Rules", "Venomina The Sly", "Keypek The Drunk", "Vera Khin", "Bella Sassy", "Kosa\u00efr", "Daphne Agla\u00e9", "Govinda Ektar", "Tootsie Pop Rocks", "Lord Erin The Wise", "Bruno Dionizi", "Ryvalia Fazebringer", "M\u00f9st\u00e1ng", "Alarics Bane", "Phad\u00e8", "K H I T H", "Daphne Agla\u00e9", "Drevarr Moonwillow", "Koralia Danai", "Smol Gluvs", "Zaedy Zae", "Master Marcovius", "Be\u00eb", "Jimbo The Pleb", "Sub Train", "Rahani Sunray", "Sygaldry Verdandi", "Johosh The Great", "K\u00e2 \u00d4tik R\u00e6j", "Permanent Dawn", "Hyde En Sikh", "Newtype Khan", "N\u00eec\u00f4le", "Revitiel", "Mmathuss", "Tegan Parker", "Gestern Yesteryear", "Grasszanine", "Aronorf Xideliesi", "Xanvias Einzbern", "Vini Boy", "Mistwalker Cael", "Cesare Pirane", "Loganlek"];
const professions = ["Reaper", "Scrapper", "Spellbreaker", "Scourge", "Reaper", "Tempest", "Berserker", "Druid", "Scrapper", "Dragonhunter", "Firebrand", "Weaver", "Scourge", "Vindicator", "Scrapper", "Weaver", "Holosmith", "Chronomancer", "Berserker", "Reaper", "Vindicator", "Dragonhunter", "Reaper", "Scrapper", "Firebrand", "Reaper", "Druid", "Harbinger", "Scourge", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Weaver", "Chronomancer", "Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 3, 0, 0, 1, 0, 9, 10], [0, 0, 0, 0, 15, 0, 1, 0, 2, 0, 0, 0, 6, 0, 0, 0], [0, 8, 1, 0, 5, 0, 7, 3, 0, 0], [0, 0, 0, 0, 23, 2], [0, 5, 2, 0, 0, 0, 18, 0, 0, 0], [20, 8], [2, 0, 0, 0, 1, 4, 3, 8, 10], [16, 1, 12, 0], [0, 0, 0, 0, 3, 6, 0, 5, 0, 0, 0, 0, 9, 4, 3, 0], [7, 10, 0, 0, 0, 6, 8, 0, 0], [0, 0, 0, 0, 7, 7, 0, 16, 0, 0, 0, 0, 3, 0, 0, 0], [10, 23, 0], [0, 0, 8, 0, 18, 8, 2], [0, 0, 1, 18, 0, 1, 0, 0, 0, 12, 6, 0], [0, 0, 0, 5, 12, 0, 0, 0, 1, 0, 0, 21, 0, 0, 0], [1, 1, 1, 15, 1, 1, 19], [2, 0, 0, 4, 15, 0, 11, 7, 0, 0], [13, 2, 1, 3, 0, 21, 0, 0, 1], [5, 0, 21, 15, 0, 0], [0, 0, 0, 0, 2, 3, 0, 1, 5, 1, 1, 0, 19, 10, 1, 0], [21, 26], [0, 10, 2, 0, 4, 0, 24, 11, 0, 0], [0, 17, 0, 0, 1, 0, 10, 25, 0], [0, 0, 0, 0, 13, 26, 0, 0, 0, 0, 0, 0, 13, 2, 0, 0], [0, 0, 0, 1, 10, 16, 0, 12, 0, 0, 1, 0, 14, 5, 0, 0], [0, 24, 0, 1, 3, 0, 22, 8, 0, 1], [0, 0, 0, 0, 25, 16, 1, 13, 0, 0, 0, 0, 5, 0, 0, 0], [1, 0, 1, 24, 0, 6, 0, 0, 2, 0, 26, 2, 0, 0], [0, 0, 0, 35, 28, 0, 0], [0, 0, 0, 10, 18, 0, 2, 0, 0, 0, 0, 19, 15, 1, 0], [0, 0, 0, 0, 25, 15, 0, 9, 1, 0, 3, 0, 8, 8, 0, 0], [14, 15, 1, 2, 1, 0, 3, 0, 21, 11, 0, 1], [0, 0, 0, 0, 35, 14, 0, 3, 0, 0, 0, 0, 19, 0, 0], [37, 0, 21, 0, 0, 2, 0, 10, 1, 0, 0], [0, 0, 0, 1, 46, 0, 0, 1, 3, 0, 7, 0, 11, 4, 0, 0], [0, 0, 0, 0, 10, 0, 0, 12, 2, 0, 10, 0, 39], [0, 0, 0, 0, 18, 18, 0, 16, 3, 0, 13, 0, 6, 0, 0, 0], [0, 0, 0, 1, 17, 27, 0, 3, 3, 2, 2, 0, 19, 3, 0], [0, 1, 0, 1, 46, 32], [1, 0, 0, 0, 11, 5, 0, 5, 4, 1, 14, 0, 36, 6, 0, 0], [0, 0, 0, 0, 23, 26, 0, 4, 3, 1, 3, 0, 19, 7, 0, 0], [23, 31, 13, 3, 1, 0, 2, 0, 16, 0, 0], [0, 0, 0, 26, 31, 0, 7, 2, 1, 0, 0, 23, 3, 0, 0], [56, 0, 0, 0, 0, 1, 0, 29, 17, 0, 0], [0, 0, 0, 1, 17, 8, 0, 9, 2, 0, 3, 0, 54, 3, 0, 9], [0, 0, 0, 2, 36, 29, 1, 11, 3, 0, 1, 0, 20, 4, 0, 0], [2, 22, 7, 0, 13, 7, 0, 9, 0, 42, 4, 0, 1], [0, 1, 0, 3, 10, 41, 0, 13, 1, 0, 14, 0, 56, 9, 0, 0], [26, 49, 0, 39, 2, 0, 6, 0, 15, 10, 0, 1], [36, 83, 0, 10, 3, 0, 5, 0, 22, 2, 0, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

