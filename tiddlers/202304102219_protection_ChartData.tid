created: 20230410221909000
creator: Drevarr
modified: 20230705163525242
modifier: drevarr
tags: ChartData
title: 202304102219_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Venomina The Siren", "High Sorcer Baradun", "Sub Train", "Eibh\u00ebar", "Belvyn Brightblade", "Mac Chiato", "Asorlia", "Ryvalia Fazebringer", "Black Raspberry Pie", "Zadie Miststep", "Ak\u00e1nt\u00f3r", "Ark Darkness", "Arriasa", "Fribble Bibble", "Tribal S", "Drevarr Moonwillow", "Zaylen Harker", "Solus Sanctus", "Gavann", "Bella Sassy", "Sygaldry Verdandi", "Koralia Danai", "Johosh The Great"];
const professions = ["Spellbreaker", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Firebrand", "Druid", "Scrapper", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[38.4797, 76.9423, 249.4497, 692.1638], [279.2678, 56.2402, 19.5955, 77.0458, 54.8546, 22.9733, 63.0375, 12.5832, 30.3761, 45.3573, 59.855, 33.9791, 52.1806, 52.1478, 54.6812, 91.9338, 42.0331, 74.4072], [13.7491, 125.7218, 193.2506, 603.5789, 13.9143, 29.7562, 35.4394, 9.2383, 30.2193, 16.8364, 9.455, 0.0, 0.0, 18.2794, 0.0, 13.816, 22.3342, 0.0, 102.0029], [76.7839, 50.0774, 133.6896, 115.1575, 0.0, 114.2014, 69.2468, 81.8849, 107.7579, 111.5706, 21.6752, 47.2002, 16.5429, 108.4445, 96.8681, 104.4557, 106.9634], [28.7482, 130.3032, 257.9326, 928.6406, 9.9805, 34.4736, 10.3488, 8.8322, 25.7154, 49.9408, 5.1548, 19.7215, 15.6153, 17.7184, 2.6019, 15.6202, 22.4121, 28.4552, 53.1866, 14.0861, 52.5426], [3.79, 32.6765, 46.7582, 163.5605, 1502.9414], [42.408, 158.466, 14.58, 997.7069, 20.8351, 17.7206, 77.2992, 20.5409, 51.4809, 108.9525, 11.5052, 52.285, 11.4229, 17.054, 17.221, 26.5619, 45.7591, 27.4062, 29.7616, 16.1122, 36.8424], [52.3181, 141.8918, 264.0296, 856.5715, 42.3987, 14.8176, 37.7626, 48.5942, 40.0546, 19.2668, 59.0234, 37.8839, 42.5242, 0.0, 18.9782, 0.0, 35.0554, 25.8142, 32.9962, 37.1795], [15.2669, 140.4095, 303.7931, 731.952, 34.0938, 64.2902, 21.12, 60.7766, 26.8858, 30.8308, 22.0304, 34.8214, 33.4788, 41.6936, 18.6322, 25.9205, 22.3342, 37.1098, 59.4194, 22.4798, 60.0555], [0.0, 57.3178, 181.5082, 318.9033, 856.5715, 36.7164, 16.2086, 26.2733, 15.8371, 24.3276, 34.6018, 5.2332, 24.3432, 25.8838, 64.0077, 15.9642, 19.2046, 24.4637, 27.0128, 16.465, 39.1709, 54.1318], [31.9301, 48.5683, 276.2375, 267.7409, 664.3872, 19.6695, 33.5059, 37.129, 35.1598, 36.6912, 18.6592, 31.0464, 53.7422, 109.1343, 23.7699, 11.7718, 35.1893, 19.2324, 78.3775, 19.7784, 39.8283], [33.4729, 52.943, 80.7152, 271.1871, 740.9606, 36.0607, 122.5325, 48.7872, 47.8836, 97.8432, 44.1, 27.7301, 41.256, 43.7977, 60.9683, 26.7506, 0.0, 65.1279, 97.803, 39.2674, 104.1701], [80.0842, 182.5862, 332.953, 1084.7904, 117.2156, 11.3098, 68.8512, 92.857, 0.0, 126.126, 15.4644, 105.3814, 115.687, 142.6331, 55.7865, 70.4419, 38.7732, 117.711, 133.6416, 56.2157], [71.0713, 53.0323, 210.6142, 533.6262, 1873.0464, 95.5792, 143.1562, 59.136, 86.495, 34.9114, 126.5337, 59.388, 40.6073, 75.4639, 92.1357, 20.264, 45.0874, 53.9916, 53.807, 58.6403, 28.7189, 124.9752], [174.7434, 103.8326, 421.3632, 670.6777, 2171.833, 48.8095, 131.7859, 117.5539, 90.3866, 0.0, 72.7709, 25.4212, 90.6696, 68.8411, 39.4788, 64.2758, 36.3717, 76.6894, 91.3102, 109.074, 61.9402, 103.833], [139.2768, 239.0465, 847.4927, 2695.0848, 146.8454, 87.5213, 81.2498, 25.6652, 164.9575, 48.7452, 67.5259, 95.1502, 80.7848, 67.0982, 78.4029, 33.3714, 105.7782, 122.2668, 0.2573, 61.5966], [53.9994, 201.5942, 429.7178, 721.3099, 2263.4208, 70.2274, 193.1731, 111.5558, 119.929, 78.1493, 142.1784, 45.864, 103.5468, 87.0387, 133.8293, 46.5035, 60.3303, 85.5192, 88.0319, 88.4538, 49.0118, 91.6966], [121.5825, 124.8134, 396.704, 938.4186, 2080.9958, 79.9164, 118.9642, 135.2102, 105.4116, 0.0, 96.6711, 97.8432, 82.8022, 82.664, 114.0622, 70.3175, 20.676, 83.5974, 121.5138, 114.2161, 92.5565, 211.1816], [106.6896, 303.0528, 1073.3494, 2679.3197, 109.6392, 61.3267, 77.8061, 173.633, 142.688, 80.4384, 127.2197, 128.4163, 58.9137, 49.0172, 80.8554, 36.332, 191.6684, 140.9132, 70.8163, 226.063], [41.4259, 503.426, 760.5432, 2632.0243, 146.0642, 245.6698, 129.0854, 175.7311, 15.4493, 169.2382, 72.2848, 126.9374, 99.2818, 238.4786, 48.8187, 114.9633, 6.6743, 171.0809, 117.748, 65.0597, 206.7509], [85.963, 271.9469, 441.98, 1037.2972, 2552.448, 292.4199, 183.3149, 120.8486, 131.4684, 53.6545, 163.8874, 54.4684, 129.0542, 76.4361, 153.4856, 92.147, 67.9517, 71.1838, 125.0543, 141.6923, 64.2235, 165.8149], [111.2429, 667.4168, 918.0067, 3560.665, 178.9924, 111.6461, 84.5645, 164.4989, 107.8196, 169.344, 134.0062, 226.574, 129.6319, 147.4866, 140.1081, 184.0191, 219.9659, 107.736, 277.0163], [139.4929, 265.2509, 696.388, 1463.2968, 4376.6976, 205.2184, 233.2109, 204.2726, 101.9599, 15.3991, 202.9737, 123.7152, 102.947, 177.8749, 220.428, 90.3168, 113.0391, 113.0734, 173.179, 245.884, 41.808, 278.0758], [226.5627, 149.4547, 586.7015, 1584.4429, 4583.8963, 167.9921, 138.4992, 182.5613, 157.0853, 64.1881, 248.1242, 164.5812, 206.8114, 183.4648, 123.4751, 135.9823, 130.9231, 83.9091, 222.7899, 236.6906, 169.451, 313.7142]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

