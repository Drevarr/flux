created: 20230501220820000
creator: Drevarr
modified: 20230705163527774
modifier: drevarr
tags: ChartData
title: 202305012208_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Sub Train", "Drevarr Moonwillow", "Whose Guardian", "Gabe Malhorn", "Sygaldry Verdandi", "Kiloak", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33.0975, 0.0, 0.0, 11.7968, 60.0084, 382.6612, 11.1824, 149.8511, 0.0, 10.6233, 14.994, 0.0, 33.1352], [401.9778, 0.0, 29.1566, 0.0, 9.8343, 20.9107, 272.0381, 3.2248, 239.0542, 3.465, 3.1738, 0.0, 0.0, 17.3145], [271.4998, 190.7229, 0.0, 0.0, 20.9255, 31.4539, 266.8728, 50.4832, 386.3783, 2.0394, 26.5362, 7.9159, 0.0, 64.2334], [460.4074, 108.416, 23.2232, 0.0, 68.0463, 32.2446, 396.0048, 19.5112, 277.7173, 4.2174, 36.0134, 0.0, 24.127, 206.2802], [874.6861, 277.3004, 110.374, 71.082, 8.6877, 33.4747, 764.031, 25.2648, 600.6679, 23.2452, 64.1364, 40.0207, 35.5122, 113.8683], [1080.2879, 37.0769, 38.4076, 37.6398, 66.8997, 87.245, 542.3544, 57.0024, 924.6293, 71.1612, 41.4793, 4.0793, 7.2294, 168.0525], [1023.1763, 0.0, 0.0, 0.0, 57.8372, 50.9588, 777.3746, 59.392, 934.2319, 43.0056, 184.2103, 31.8843, 0.0, 275.1987], [1209.448, 226.8292, 125.1118, 15.5628, 38.3229, 93.483, 644.7991, 20.0448, 960.26, 60.6672, 84.6336, 51.9624, 195.4841], [1609.2292, 331.4599, 204.5428, 15.7806, 52.2144, 228.7874, 686.9822, 50.9472, 907.6984, 85.1994, 111.9632, 34.6405, 57.316, 209.811]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

