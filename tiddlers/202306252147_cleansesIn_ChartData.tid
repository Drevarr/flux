created: 20230625214748000
creator: Drevarr
modified: 20230705163536232
modifier: drevarr
tags: ChartData
title: 202306252147_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Tacitus Kilgore I", "Jacob Pine", "Imalou", "Gavann", "Oo Dads Mad", "Primal Clone", "Mort\u00e4rion", "Traidoruns Maximus", "Sp\u00edcy Cheese", "Shaca Booey", "Seiker Novus Terra", "Gestern Yesteryear", "Bella Sassy", "Ateriuz", "Riann Swordbreak", "Air One Com", "Xanvias Tsolice", "Koralia Danai", "Bellatrix Astra", "Duke Silvver", "Blancooo Padreee", "K\u00f4sair", "Tribal S", "Lord Erin The Wise", "Xyntharos", "Sakis Ranger", "Cedryn X", "Legacy Of Mathus", "Kary\u00edna", "Morton Saltbringer", "Arriasa", "Tika Fiery", "Drevarr Moonwillow", "Grasszanine", "Caelon Cai", "Smol Gluvs", "No Reserv\u00e9", "Tootsie Pop Khorne", "Be\u00eb", "Solus Sanctus", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Irish Necroman", "Tegan Parker", "Elonith Primal", "Mammary Mission", "Raziel Umbra", "Rozaalyna", "Newtype Khan", "Zayde Sunsabre"];
const professions = ["Spellbreaker", "Reaper", "Firebrand", "Dragonhunter", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Berserker", "Berserker", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Vindicator", "Spellbreaker", "Spellbreaker", "Druid", "Weaver", "Vindicator", "Druid", "Berserker", "Berserker", "Vindicator", "Chronomancer", "Druid", "Firebrand", "Scrapper", "Spellbreaker", "Reaper", "Reaper", "Vindicator", "Reaper", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Reaper", "Tempest", "Tempest", "Scourge", "Chronomancer", "Reaper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1717, 0.1475, 0.0448, 0.051, 0.0182, 0.2308, 0.0, 0.0508], [0.1676, 0.2673, 0.0542, 0.0667, 0.155, 0.0089, 0.0105, 0.2504, 0.2258], [0.1648, 0.0594, 0.0602, 0.1333, 0.1185, 0.1361, 0.2063, 0.1789, 0.129], [0.216, 0.2696, 0.2343, 0.2212, 0.0149], [0.2115, 0.1683, 0.2048, 0.0667, 0.0881, 0.1982, 0.3449], [0.0947, 0.1988, 0.254, 0.1659, 0.0, 0.0314, 0.0, 0.2279, 0.0294, 0.0169], [0.1978, 0.0495, 0.1928, 0.0, 0.2249, 0.2751, 0.2154, 0.1753], [0.1429, 0.1683, 0.1506, 0.2444, 0.1246, 0.1243, 0.2425, 0.2379, 0.2074], [0.1566, 0.1287, 0.1627, 0.0889, 0.1277, 0.1272, 0.1883, 0.1664, 0.1751, 0.0, 0.0314, 0.0182, 0.1495], [0.1923, 0.2277, 0.1325, 0.1111, 0.1672, 0.1272, 0.009, 0.2469, 0.2074, 0.0149, 0.0314, 0.0, 0.2206, 0.0588, 0.0169], [0.1374, 0.2178, 0.1687, 0.1778, 0.1854, 0.1479, 0.25, 0.2397, 0.2673], [0.1319, 0.1188, 0.1024, 0.0444, 0.1672, 0.1243, 0.1611, 0.1914, 0.1659, 0.0597, 0.0392, 0.0182, 0.1959, 0.0294, 0.0508], [0.0852, 0.1683, 0.0964, 0.0222, 0.155, 0.1272, 0.1566, 0.2236, 0.1429, 0.0, 0.0392, 0.0, 0.2192, 0.0, 0.0339], [0.1154, 0.2178, 0.0422, 0.0444, 0.1459, 0.1243, 0.1867, 0.2504, 0.1152, 0.0, 0.0353, 0.0, 0.1727, 0.0294, 0.0508], [0.2143, 0.2871, 0.1627, 0.0, 0.2188, 0.1331, 0.2485, 0.2451, 0.1521], [0.1319, 0.1782, 0.1205, 0.0, 0.1246, 0.0947, 0.1883, 0.1717, 0.1889, 0.0, 0.0392, 0.0, 0.2424, 0.0294], [0.1374, 0.0891, 0.1747, 0.0667, 0.1337, 0.1686, 0.2214, 0.1771, 0.1705, 0.0149, 0.0314, 0.0364, 0.18, 0.0, 0.1017], [0.0962, 0.1188, 0.1145, 0.0222, 0.0881, 0.0976, 0.1672, 0.2433, 0.2212, 0.0, 0.0392, 0.0, 0.2612, 0.0, 0.0508], [0.1291, 0.1584, 0.0843, 0.0, 0.1824, 0.0947, 0.1611, 0.2469, 0.1705, 0.0149, 0.0196, 0.0, 0.2525, 0.0, 0.0], [0.1401, 0.2178, 0.1506, 0.0, 0.1429, 0.0888, 0.2214, 0.1807, 0.1751, 0.0149, 0.0314, 0.0182, 0.2351, 0.0, 0.0339], [0.1291, 0.2277, 0.1867, 0.0667, 0.1277, 0.1213, 0.2319, 0.2165, 0.129, 0.0448, 0.0235, 0.0727, 0.2308, 0.0294, 0.0169], [0.1731, 0.3267, 0.2048, 0.0222, 0.1368, 0.1331, 0.2003, 0.2057, 0.1567, 0.0, 0.0431, 0.2163, 0.0, 0.1356], [0.1209, 0.1287, 0.1205, 0.0222, 0.1094, 0.1479, 0.2229, 0.2791, 0.2535, 0.0, 0.051, 0.0545, 0.1945, 0.0], [0.2033, 0.0792, 0.1325, 0.1333, 0.1702, 0.1243, 0.2846, 0.2326, 0.2396, 0.0149, 0.0196, 0.0, 0.1277], [0.2033, 0.1881, 0.1988, 0.0889, 0.155, 0.145, 0.1611, 0.1914, 0.2488, 0.0149, 0.0431, 0.0545, 0.2337, 0.0, 0.0678], [0.2445, 0.1089, 0.0964, 0.0889, 0.1155, 0.1302, 0.2154, 0.2254, 0.1567, 0.0, 0.0353, 0.0545, 0.2322, 0.0588, 0.0508], [0.1374, 0.2574, 0.1024, 0.0667, 0.1429, 0.1509, 0.2214, 0.2057, 0.1797, 0.0, 0.0392, 0.2598], [0.2775, 0.3069, 0.2108, 0.0667, 0.1277, 0.1893, 0.0813, 0.2129, 0.2028, 0.0149, 0.0353, 0.0545, 0.2598, 0.0, 0.0], [0.1896, 0.1683, 0.2048, 0.0889, 0.1672, 0.1213, 0.1958, 0.2075, 0.2212, 0.0, 0.0235, 0.0182, 0.238, 0.0, 0.0], [0.2115, 0.1683, 0.1024, 0.0444, 0.1246, 0.1775, 0.1973, 0.2272, 0.1429, 0.0627, 0.0545, 0.2453, 0.1176, 0.0169], [0.1401, 0.1188, 0.1265, 0.1778, 0.079, 0.0828, 0.238, 0.2487, 0.235, 0.0, 0.0235, 0.0182, 0.2859, 0.0294, 0.0508], [0.1484, 0.1584, 0.1386, 0.1778, 0.1246, 0.1746, 0.1837, 0.2343, 0.2074, 0.0, 0.0431, 0.0182, 0.2729, 0.0882, 0.1017], [0.1593, 0.0891, 0.1747, 0.0222, 0.1945, 0.1953, 0.1883, 0.2844, 0.2627, 0.0149, 0.0392, 0.0, 0.1872, 0.0294, 0.0847], [0.1703, 0.396, 0.2048, 0.1333, 0.1581, 0.1568, 0.2048, 0.2272, 0.1889, 0.0, 0.0353, 0.0, 0.2308, 0.0, 0.0508], [0.1896, 0.1386, 0.2349, 0.1111, 0.1702, 0.1509, 0.2199, 0.2075, 0.1889, 0.0, 0.0549, 0.0545, 0.2511, 0.0588, 0.1186], [0.217, 0.2475, 0.259, 0.2667, 0.155, 0.2249, 0.2259, 0.2057, 0.106, 0.0588, 0.1273, 0.1988, 0.0, 0.0847], [0.1538, 0.1782, 0.259, 0.0889, 0.155, 0.1834, 0.2319, 0.2433, 0.1705, 0.0, 0.0353, 0.0, 0.2525, 0.0, 0.0847], [0.1676, 0.1386, 0.1205, 0.0889, 0.1064, 0.1982, 0.2289, 0.2165, 0.212, 0.0, 0.0471, 0.0, 0.3237, 0.0, 0.0169], [0.1456, 0.1485, 0.241, 0.3111, 0.1672, 0.1627, 0.2319, 0.2719, 0.1521, 0.0149, 0.0471, 0.0909, 0.2467, 0.0, 0.1356], [0.1429, 0.0792, 0.1265, 0.0667, 0.1459, 0.1568, 0.2334, 0.2576, 0.2627, 0.0, 0.0627, 0.0364, 0.3106, 0.0, 0.1017], [0.1978, 0.0495, 0.1988, 0.1111, 0.1337, 0.1923, 0.2274, 0.2361, 0.2304, 0.0746, 0.1137, 0.1818, 0.2525, 0.1017], [0.2335, 0.3168, 0.247, 0.0444, 0.2067, 0.2041, 0.2048, 0.2004, 0.1567, 0.0, 0.0275, 0.0182, 0.2743, 0.0588, 0.1017], [0.2473, 0.2475, 0.1566, 0.0, 0.2097, 0.1657, 0.2425, 0.2093, 0.2074, 0.0, 0.0549, 0.0182, 0.254, 0.0, 0.0847], [0.1044, 0.2376, 0.1024, 0.0889, 0.1854, 0.2899, 0.2395, 0.2308, 0.2258, 0.0, 0.0196, 0.0, 0.3295, 0.0294, 0.0], [0.1621, 0.2079, 0.2289, 0.0667, 0.1489, 0.1479, 0.2485, 0.2576, 0.2488, 0.0448, 0.0235, 0.1636, 0.3135, 0.0], [0.2033, 0.1881, 0.3313, 0.1333, 0.2188, 0.1479, 0.2364, 0.2004, 0.2581, 0.0, 0.0353, 0.312, 0.0, 0.0169], [0.1868, 0.0891, 0.1145, 0.0222, 0.1884, 0.2485, 0.2364, 0.2862, 0.2949, 0.0149, 0.0275, 0.0364, 0.2801, 0.0, 0.0169], [0.2308, 0.3366, 0.1807, 0.0222, 0.2158, 0.1746, 0.2304, 0.2683, 0.2442, 0.1045, 0.0588, 0.0, 0.2569, 0.0, 0.0678], [0.3159, 0.2079, 0.1325, 0.0222, 0.2036, 0.2189, 0.2108, 0.2433, 0.1613, 0.0, 0.0392, 0.0727, 0.3179, 0.0, 0.1356], [0.3489, 0.3465, 0.247, 0.1333, 0.3587, 0.3373, 0.2485, 0.3166, 0.1521, 0.0299, 0.0314, 0.0, 0.3251, 0.0, 0.0678]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

