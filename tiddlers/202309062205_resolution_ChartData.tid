created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Tribal S", "Stoic Rapidfire", "Belvyn Brightblade", "Darks Na", "Rafaellagabriela", "Jmbrage Gaurdian", "Bella Sassy", "Sygaldry Verdandi", "Crusader Siolith", "Koralia Danai", "Solus Luxes"];
const professions = ["Spellbreaker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[42.1022, 101.2848, 55.9603, 21.8232, 91.5933, 0.0, 0.0, 117.9605, 136.2874, 2.9447, 31.0996, 160.776, 0.0, 43.2032, 80.3046, 73.6358, 21.3504, 1.1923, 74.7718, 28.7928, 16.2307, 30.1661, 26.2416, 0.0, 32.4093, 26.8051, 40.0706, 39.008, 15.588], [43.3643, 115.5354, 64.985, 40.5484, 124.1734, 0.0, 0.0, 181.9066, 105.0548, 5.0866, 418.2255, 17.6369, 38.2752, 64.9888, 110.5814, 10.8365, 49.3568, 10.2902, 47.5015, 25.4076, 7.5307, 0.0, 7.098, 1.8225, 76.659, 0.0, 28.8622, 28.5802, 4.86], [17.1989, 112.878, 23.4902, 408.5928, 222.3274, 512.6467, 18.0166, 42.4926, 61.6768, 65.8774, 107.4509, 50.7136, 19.224, 0.0, 7.2398, 42.2034, 9.2429, 48.6528, 5.1324, 4.9157, 25.7428, 31.2653, 17.6967, 40.6245, 21.024], [117.8467, 231.8098, 209.1526, 159.7561, 470.0303, 0.0, 0.0, 250.3829, 192.0413, 0.0, 0.0, 745.3215], [70.5779, 501.2517, 76.7661, 39.0905, 467.5714, 19.9899, 11.8699, 782.3376, 406.453, 18.0844, 880.2833, 0.0], [276.0256, 98.0451, 570.3833, 0.0, 626.2186, 298.2146, 0.0, 19.4474, 619.542, 73.6463, 45.6354, 342.6448, 252.3744, 314.3014, 211.7632, 44.7898], [168.2759, 680.8024, 0.0, 73.9536, 744.876, 707.5069, 0.0, 1132.8818, 23.6844, 261.9424, 318.9834, 432.4582, 207.232, 84.9226], [662.4605, 569.929, 47.9602, 1242.3757, 63.4273, 5.5998, 333.9232, 343.0829, 302.7251, 176.6656, 46.5523, 109.65, 127.49, 97.4082, 20.2258, 51.7776, 67.5696, 31.8558, 168.713, 95.5475, 27.3792, 88.0992, 375.84], [130.3492, 428.2569, 279.1219, 193.6756, 440.2932, 0.0, 546.0682, 623.1877, 690.7477, 16.7562, 291.4192, 175.6867, 234.9645, 112.1024, 32.6592, 35.6909, 26.2954, 40.7652, 59.6737, 133.4449, 242.3501, 135.9834, 146.3727, 113.688], [122.6387, 359.4318, 221.1603, 104.2413, 426.3852, 54.7884, 192.8587, 1054.6747, 450.5915, 0.0, 49.068, 1156.7903, 56.9533, 272.0256, 335.849, 254.8531, 127.4368, 21.3322, 99.756, 119.8155, 179.397, 41.9966, 58.6253, 86.9904, 84.8042, 132.2615, 293.616], [120.4695, 422.8206, 278.631, 157.8882, 466.7262, 0.0, 89.6644, 1005.0163, 506.9477, 41.7604, 39.9156, 1112.958, 13.5022, 146.7952, 252.3338, 288.1024, 199.7056, 21.7987, 136.255, 118.4612, 83.4024, 42.8875, 62.0323, 48.426, 183.5388, 208.3322, 86.7721, 81.4213, 142.092], [128.6138, 465.2557, 275.6858, 137.1584, 562.3151, 16.9119, 1008.3269, 879.759, 0.0, 1249.9987, 43.6358, 0.0, 286.2304, 319.1866, 328.0538, 152.8064, 27.6048, 182.495, 186.428, 200.9172, 56.4178, 44.6678, 38.0016, 47.2131, 186.8658, 72.599, 177.0379, 23.9958, 316.728]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

