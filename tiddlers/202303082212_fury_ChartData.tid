created: 20230308221219000
creator: Drevarr
modified: 20230705163521472
modifier: drevarr
tags: ChartData
title: 202303082212_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Cerys Fireblade", "Mike The Archmagus", "Javier Aguirre", "Veron Blackburn", "Zadie Miststep", "Smol Daddy Tika", "Xanvias Tseli", "My Birthday Girl", "Mistwalker Caelon", "Momomeko", "Xyntharos", "Lord Erin The Wise", "K\u00f4sair", "Arriasa", "Tribal S", "Fribble Bibble", "Drevarr Moonwillow", "Demon Sekhmet", "Domina Flagbringer"];
const professions = ["Berserker", "Tempest", "Chronomancer", "Herald", "Tempest", "Berserker", "Berserker", "Scrapper", "Vindicator", "Chronomancer", "Vindicator", "Weaver", "Spellbreaker", "Druid", "Druid", "Scrapper", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 44.8056, 0.0, 0.0, 0.0, 0.0, 85.262, 120.6743, 0.0, 0.0, 0.0, 0.0, 125.8996, 0.0, 0.0, 0.0, 11.9192, 0.0, 79.0541, 89.9375, 0.0, 0.0, 27.8122, 0.0, 0.0, 84.1632, 98.1646, 0.0], [0.0, 0.0, 0.0, 16.8465, 32.2204, 51.2442, 111.2875, 31.4129, 38.3474, 71.222, 21.9383, 86.388, 22.1416, 0.0, 0.0, 0.4851, 40.9586, 0.0, 16.1887, 0.0, 56.7356, 13.0792, 2.3419, 37.6923, 25.4064, 23.4374, 29.1442, 13.6944, 66.528, 6.5542, 9.7459], [21.7807, 48.3968, 16.5517, 18.2022, 44.2411, 40.9586, 0.0, 35.4963, 32.8605, 14.9161, 128.4629, 16.4449, 51.649, 95.9573, 73.7856, 223.4496, 89.3015], [32.6036, 300.0781, 77.456, 66.8796, 196.1548, 317.4318], [32.4597, 31.2672, 0.0, 31.912, 31.4541, 81.8496, 147.8477, 31.5511, 18.1481, 62.8925, 48.2964, 71.2617, 24.8959, 0.0, 23.7636, 24.9826, 88.1481, 0.0, 0.0, 31.2945, 57.4167, 18.5105, 60.947, 10.8177, 22.1261, 16.0744, 26.3736, 23.5008, 96.9408, 24.9508, 29.7562], [0.0, 0.0, 0.0, 0.0, 0.0, 80.6148, 80.2181, 0.0, 0.0, 84.231, 126.7277, 9.0758, 29.7606, 0.0, 0.0, 103.6335, 0.0, 19.1962, 0.0, 0.0, 0.0, 107.557, 76.5488, 0.0, 61.6005, 106.8264, 0.0, 94.0464, 36.96, 96.824, 69.7248], [0.0, 0.0, 0.0, 0.0, 32.4204, 123.3036, 122.269, 0.0, 33.4871, 87.4131, 0.0, 21.513, 34.7327, 0.0, 0.0, 63.4996, 95.1119, 0.0, 0.0, 0.0, 0.0, 0.0, 26.2752, 76.2092, 0.0, 147.2215, 80.3462, 0.0, 79.488, 130.2048, 0.0, 44.1936], [50.9601, 35.7924, 10.5092, 27.8107, 45.8816, 118.188, 247.0824, 0.0, 75.9814, 124.2875, 46.6088, 61.5136, 40.6347, 0.0, 0.0, 52.4878, 74.6784, 0.0, 31.3006, 0.0, 63.751, 11.6579, 80.6534, 62.2868, 18.7171, 53.5815, 61.5917, 0.0, 70.416, 102.5376, 63.8666, 38.3357], [41.7979, 8.6414, 14.476, 30.3924, 25.6564, 93.051, 247.6181, 53.0611, 76.4719, 184.0915, 80.9225, 161.6833, 54.2631, 0.0, 4.4574, 96.6319, 137.7199, 74.6064, 33.12, 13.2653, 97.1249, 19.0688, 105.3293, 53.0214, 76.2835, 55.4769, 79.1741, 6.0329, 55.3824, 181.2096, 66.101, 23.3798], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 242.2673, 15.025, 808.248, 749.334, 146.9069, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 324.7517], [24.017, 38.5729, 25.4364, 37.631, 72.571, 160.7004, 311.4979, 90.3697, 78.523, 128.967, 134.5226, 265.2145, 54.6923, 3.0222, 0.0, 68.108, 123.9754, 87.2256, 44.8902, 2.9873, 121.0315, 23.5526, 69.8006, 36.7706, 85.224, 36.5229, 101.9246, 3.0111, 66.2256, 125.664, 41.4109, 25.8163], [20.4512, 36.5829, 14.0436, 35.5068, 50.08, 162.8172, 306.275, 107.458, 107.774, 176.5107, 137.2549, 257.1471, 55.9443, 12.0805, 7.5762, 53.9916, 138.0864, 39.864, 53.1702, 11.8966, 99.6449, 30.5237, 74.9986, 44.9203, 80.593, 0.0, 92.1211, 0.0, 0.0, 202.6464, 68.745, 43.5456], [0.0, 0.0, 0.0, 0.0, 77.4456, 142.4254, 350.668, 105.7584, 169.7955, 89.3432, 273.8703, 67.2739, 232.0786, 217.0337, 378.4589, 224.7143, 233.0467, 282.6144, 444.8928, 188.8068, 165.9139], [49.7289, 5.5883, 15.8484, 74.1037, 99.0486, 509.8334, 107.8265, 148.3509, 398.1319, 309.8682, 380.1743, 82.6287, 18.7045, 101.6508, 156.5903, 252.0741, 20.0112, 176.0643, 15.9386, 135.2602, 66.2647, 101.6899, 108.5116, 279.4536, 134.3088, 312.7872, 95.6323, 56.9722], [73.3301, 62.5072, 13.2164, 34.4447, 113.288, 187.9542, 435.7757, 162.1773, 117.7622, 226.8622, 168.2738, 372.4431, 91.8574, 13.0658, 27.8484, 106.5765, 274.7067, 19.272, 89.4462, 36.3479, 200.5158, 53.5518, 138.9158, 91.3928, 178.3594, 105.705, 144.0691, 52.2105, 116.7696, 335.9136, 116.7474, 55.7021], [39.5753, 34.4294, 31.6592, 56.6835, 78.3353, 117.9234, 543.0456, 166.4608, 105.0986, 331.9637, 276.2777, 471.9406, 84.131, 0.0, 7.0242, 55.3014, 318.964, 44.5632, 130.6976, 44.7572, 33.5782, 59.643, 234.1349, 75.6271, 186.528, 109.022, 138.0485, 0.0, 128.4336, 222.9216, 126.8767, 70.8912], [123.6027, 126.8135, 7.238, 70.8176, 150.873, 344.6856, 803.1182, 203.8155, 219.249, 432.2922, 247.6695, 35.4798, 154.6984, 561.0505, 96.8352, 161.9982, 97.0024, 40.1168, 77.2398, 310.5043, 162.0719, 366.3667, 219.429, 268.3181, 0.0, 235.8288, 643.3152, 197.5582, 161.8445], [75.2649, 190.711, 12.314, 139.0371, 203.0188, 312.8454, 479.1658, 222.9765, 193.5206, 342.8202, 351.8161, 872.7875, 106.6326, 49.2862, 464.0143, 171.2436, 55.9826, 290.0124, 99.8957, 201.6907, 233.3816, 376.6579, 149.2627, 250.8955, 175.1328, 455.7696, 151.3806, 187.5312], [82.2526, 142.4608, 17.9164, 41.6507, 245.4018, 304.9956, 456.6672, 228.9182, 254.6535, 362.5677, 446.3998, 527.5717, 146.0131, 67.9954, 113.367, 267.5326, 376.8742, 202.0128, 206.3685, 50.7186, 358.0543, 86.1736, 93.1056, 216.4031, 327.9677, 147.3309, 230.436, 212.2848, 528.7392, 0.0, 107.0237]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

