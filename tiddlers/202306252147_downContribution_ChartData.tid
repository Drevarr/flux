created: 20230625214748000
creator: Drevarr
modified: 20230705163536281
modifier: drevarr
tags: ChartData
title: 202306252147_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Zayde Sunsabre", "Palm Sauce", "Grasszanine", "Newtype Khan", "Smol Gluvs", "K\u00f4sair", "Jacob Pine", "Irish Necroman", "Tootsie Pop Khorne", "Rozaalyna", "Mort\u00e4rion", "Cedryn X", "Riann Swordbreak", "Shaca Booey", "Sp\u00edcy Cheese", "Ateriuz", "Lord Erin The Wise", "Legacy Of Mathus", "Be\u00eb", "No Reserv\u00e9", "Duke Silvver", "Kary\u00edna", "Xyntharos", "Caelon Cai", "Xanvias Tsolice"];
const professions = ["Spellbreaker", "Vindicator", "Spellbreaker", "Spellbreaker", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Berserker", "Berserker", "Berserker", "Weaver", "Berserker", "Reaper", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Reaper", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[49.1484, 213.099, 91.9578, 0.0, 49.8906, 0.2515, 41.6898, 15.3095, 40.0553, 0.0, 9.2, 0.0, 42.1379, 0.0, 2.5593], [22.6236, 165.4059, 268.8072, 0.0, 92.6717, 22.4408, 75.238], [95.2115, 216.8614, 114.9036, 0.0, 24.8176, 13.7515, 45.6551, 26.5868, 25.3364, 32.403, 0.0, 0.0, 41.7954, 35.6176, 0.0], [56.6731, 158.4851, 116.8193, 0.0, 36.231, 28.5444, 60.1988, 15.2898, 4.0645, 86.9851, 2.8, 95.6182, 46.5588, 24.0, 50.8305], [59.4038, 89.505, 155.9759, 0.0, 129.8784, 29.2722, 42.8057, 38.7728, 25.2719, 36.7137, 85.9818, 50.6807, 0.0, 52.5254], [108.0137, 149.3069, 188.6325, 0.0, 52.2857, 17.6568, 53.5557, 36.4669, 30.9217, 0.0, 0.0, 60.5472, 0.0, 87.3729], [156.6538, 723.3663, 49.753, 0.0, 118.2857, 0.0, 0.0, 71.8515, 34.1244], [42.9121, 232.7921, 137.5904, 0.0, 55.3921, 60.9675, 84.744, 34.6118, 27.0922, 287.1493, 0.0, 56.8, 35.9216, 45.2059, 42.2373], [100.8022, 113.7723, 284.9759, 0.0, 43.9514, 69.1065, 80.2244, 35.5081, 23.1198, 163.8358, 0.0, 5.3636, 37.537, 61.2647, 73.1695], [168.6209, 192.9703, 171.747, 0.0, 45.9818, 5.2249, 81.6973, 43.161, 17.4885, 144.5373, 43.3804, 2.2545, 58.328, 0.0, 0.0], [208.8626, 26.2376, 272.7048, 0.0, 101.9483, 73.0266, 148.7711, 49.0787], [148.1209, 318.0396, 270.8253, 0.0, 97.0, 108.8728, 116.756, 70.0322, 64.8157, 0.0, 16.4706, 53.4964], [219.7253, 189.3465, 215.1205, 0.0, 66.2523, 61.4497, 191.2756, 133.8068, 137.4562], [325.6621, 472.6634, 173.6386, 0.0, 124.3647, 52.3964, 37.6642, 93.0626, 41.212, 0.0, 14.5569, 68.2545, 104.0247, 51.1176, 94.0], [144.717, 319.0792, 163.241, 0.0, 104.31, 59.8166, 188.9819, 105.7478, 57.1659, 96.3881, 8.4196, 17.0364, 77.4746], [186.9698, 744.7822, 21.3313, 0.0, 125.307, 84.1627, 114.881, 85.4973, 62.1982, 0.0, 50.298, 45.3273, 125.6981, 198.8824, 28.0847], [342.9835, 200.8119, 258.0, 0.0, 166.2979, 70.3876, 154.6792, 85.1413, 120.1659, 0.0, 23.4902, 0.0, 61.0552], [214.1016, 618.9307, 394.4217, 0.0, 216.4073, 44.0207, 29.8283, 84.288, 22.235, 121.8806, 31.1686, 0.0, 160.2438, 54.5294, 39.4576], [142.8736, 194.6931, 253.012, 0.0, 157.2766, 87.7988, 115.1687, 95.059, 83.6406, 194.0597, 95.651, 153.7091, 193.9521, 123.6176, 32.2203], [255.2912, 263.5446, 416.6566, 0.0, 133.766, 28.2692, 201.3193, 103.2648, 69.5899, 0.0, 1.9216, 131.2364, 145.5849, 110.5882, 368.3729], [197.6181, 602.6238, 255.6928, 0.0, 185.6383, 115.2219, 141.1536, 113.8193, 167.7604, 149.7463, 85.8196, 0.0, 130.103, 48.7647, 0.0], [232.8022, 415.6139, 254.506, 0.0, 139.0638, 71.3136, 255.9367, 106.8533, 114.1613, 0.0, 22.1961, 381.7455, 171.6081, 205.6471, 62.7966], [205.8159, 325.6832, 468.1687, 0.0, 252.4103, 97.1154, 250.2274, 85.6261, 119.6636, 433.806, 19.8549, 259.5818, 120.4993, 0.0, 163.4068], [307.1841, 329.2376, 395.8976, 0.0, 260.769, 93.4527, 223.4428, 125.3059, 131.5438, 0.0, 68.7608, 0.0, 152.5385, 109.0294, 145.2034], [436.717, 460.1584, 579.2229, 0.0, 252.2675, 284.6568, 708.884, 197.2147, 296.2765, 104.0896, 110.4784, 615.2182, 297.09, 109.0882, 152.8814]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

