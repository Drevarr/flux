created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Herm E Licious", "Gamora Titus", "Govinda Ektar", "Charr Surethang", "Chocolate Teapot", "Gestern Yesteryear", "Ateriuz", "Shaca Booey", "Water M Elon", "Zevikah"];
const professions = ["Firebrand", "Firebrand", "Vindicator", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Firebrand", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.7857, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.8734, 0.0, 0.0, 0.0, 13.2392, 0.0, 0.0, 0.0, 28.6042, 11.0466], [16.8806, 7.4513, 7.455, 32.6672, 22.4482, 6.3616, 37.9488], [3.4675, 1.127, 4.5968, 4.6022, 4.768, 3.5363, 4.8021, 13.984, 0.0, 1.144, 5.7138, 2.532, 10.3596, 18.2347, 3.577, 17.365, 13.9688, 4.58, 0.0, 4.656, 4.6423, 9.193], [19.5283, 0.0, 0.0, 14.0045, 11.4222, 13.573, 22.9296, 7.344, 0.0, 21.2589, 6.3455, 28.8922, 30.1228, 60.6784, 8.5204, 0.0, 0.0, 22.204, 0.0, 0.0, 0.0, 0.0, 26.1705, 49.4213, 6.6187, 8.48, 20.7425, 14.2671, 0.0, 35.2901, 0.0, 0.0, 0.0, 67.6782, 8.6948, 55.4429, 55.2989, 42.8936], [8.2387, 16.6212, 9.3073, 22.2701, 7.8351, 8.449, 22.8208, 18.3355, 0.0, 20.8246, 0.0, 15.2737, 5.9132, 33.2576, 30.6438, 7.5468, 15.0974, 15.6492, 24.128, 21.983, 15.324, 17.46, 30.0806, 31.098, 38.7837, 15.825, 1.62, 0.0, 13.2463, 7.8839, 39.6446, 17.3896, 32.5084, 13.5504, 40.2808, 23.7867, 22.0131, 35.2872, 16.3339], [0.0, 0.0, 0.0, 34.393, 7.931, 20.062, 19.4072, 7.5398, 0.0, 16.9542, 14.4085, 13.65, 37.3008, 14.5521, 21.0558, 0.0, 40.698, 19.89, 21.6626, 16.128, 31.2728, 36.6557, 15.3665, 37.2888, 31.1437, 26.1, 0.0, 0.0, 19.4897, 0.0, 41.3986, 0.0, 33.8752, 15.2784, 50.7722, 20.8774, 27.6712, 32.5541, 0.0], [49.607, 133.4655, 53.5352, 22.6598, 23.0416, 36.925, 39.3176, 28.9109, 0.0, 97.8739, 12.8556, 44.5797, 106.4608, 103.7628, 43.7076], [13.1645, 0.0, 19.1954, 54.6202, 61.7304, 42.0322, 77.1248, 0.0, 0.0, 0.0, 41.7696, 0.0, 0.0, 0.0, 51.1812, 12.428, 42.097, 5.808, 80.5876, 104.4835, 24.236, 130.4963, 10.1438, 36.62, 0.0, 19.7182, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [50.3063, 54.684, 73.008, 69.42, 29.724, 41.9622, 91.6527, 38.1425, 129.0012, 71.7, 48.4, 0.0, 37.085, 31.8559, 5.3473, 136.08, 56.6097, 128.5864, 12.0528, 51.1256, 59.0121, 73.0366, 114.4728, 46.683], [59.1153, 54.3894, 56.0257, 58.842, 59.046, 85.3154, 36.012, 57.2494, 88.4849, 72.5255, 124.7463, 50.4937, 53.58, 0.0, 43.5336, 28.7744, 0.0, 75.1464, 0.0, 108.8348, 29.1888, 111.9272, 69.8392, 48.7971, 72.8021, 26.8949]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

