created: 20230513000456000
creator: Drevarr
modified: 20230705163529805
modifier: drevarr
tags: ChartData
title: 202305130004_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Spreadflamesoflight", "Artakama Nahid", "Mac Aaroni", "Arriasa", "Black Raspberry Pie", "Newtype Khan", "Eibh\u00ebar", "Leetle Dim", "Sub Train", "Ryvalia Fazebringer", "Jupiter Four", "Air One Com", "Zaidy Sagemist", "Venomina The Techie", "Ark Darkness", "Aronorf Xideliesi", "Lucas Ryn", "Drevarr Moonwillow", "Solus Sanctus", "Miphest\u00f6", "Bella Sassy", "Tika Fiery", "Koralia Danai", "Johosh The Great"];
const professions = ["Tempest", "Willbender", "Tempest", "Tempest", "Druid", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Firebrand", "Vindicator", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 20.6438, 94.3863, 248.6574, 9.5189, 8.9332, 0.0, 0.0, 59.1552, 26.8466, 79.7722, 0.0, 0.0, 33.4075, 35.7235, 0.0, 32.021, 0.0, 12.983, 36.9264, 0.0, 25.2898, 14.3811, 0.0, 0.0], [50.0429, 58.3834, 65.4959, 442.5562, 0.0, 53.1655, 30.5321, 28.0786, 55.5264, 0.0], [36.2534, 47.0131, 103.7428, 175.4964, 3.274, 37.2072, 15.1772, 23.8973, 11.2896, 0.0, 36.0177, 0.3767, 79.7722, 13.0628, 13.9656, 52.2675, 34.5139, 18.7056, 11.2778, 18.5914, 0.0, 42.9475, 0.0, 18.5387, 0.0, 0.0, 13.8328], [39.0182, 79.8336, 37.7545, 175.9453, 4.2441, 10.7545, 4.6953, 19.1952, 57.312, 9.3803, 44.4822, 0.0, 41.5706, 0.0, 0.0, 30.6475, 94.4294, 0.0, 37.3243, 0.0, 20.4019, 35.4145, 50.4269, 9.5924, 23.5752, 0.0, 22.9629], [29.5368, 73.2672, 40.1766, 7.3793, 158.7021, 0.0, 11.3629, 108.56, 133.5398, 62.5752, 150.1027, 69.8611, 39.4938, 125.879, 22.7324, 116.6972, 21.9311, 6.3085], [26.3002, 56.9318, 152.8237, 413.8305, 50.7473, 40.5896, 20.8624, 29.9237, 33.6384, 27.5398, 24.5718, 64.9126, 11.8885, 38.4689, 41.975, 65.5603, 9.8928, 42.4262, 39.3024, 0.0, 51.744, 11.3615, 53.4193, 20.4885, 16.1727], [29.0304, 78.9466, 207.978, 293.9902, 25.0402, 75.7153, 22.5121, 21.9778, 40.4928, 21.1947, 74.3578, 0.0, 50.0825, 78.4627, 0.0, 48.1993, 24.5074, 22.1683, 38.0119, 93.5155, 62.4743, 21.8457, 26.1555, 0.0], [44.5824, 93.1392, 166.2839, 393.1838, 18.9772, 52.1247, 10.6342, 12.3355, 65.1456, 10.0792, 30.819, 15.2131, 59.5584, 0.0, 20.6945, 36.9725, 73.2211, 23.9544, 30.2756, 13.6598, 70.3027, 51.697, 9.5451, 50.6867, 17.3043, 5.2903, 19.8202], [34.3526, 98.3808, 194.1894, 415.177, 31.7701, 39.3754, 0.0, 27.6322, 53.9712, 0.0, 5.6332, 64.7923, 0.0, 0.0, 42.8375, 101.8483, 0.0, 20.2733, 0.0, 25.9219, 20.1132, 88.9997, 34.1695, 76.5658, 0.0, 1.066, 20.4625], [41.9904, 144.5069, 324.3604, 757.1931, 60.8725, 76.1489, 17.3853, 0.0, 92.736], [26.2656, 106.848, 179.416, 434.4771, 22.4937, 71.9859, 41.674, 25.4299, 36.8064, 21.3704, 22.3677, 56.5504, 22.4153, 22.5354, 61.065, 88.5427, 22.6368, 38.197, 0.0, 56.2157, 0.0, 36.503, 27.0272, 57.0091, 0.0, 0.0, 45.88], [39.4675, 68.2214, 181.5499, 503.5985, 26.0709, 35.8195, 0.0, 23.9122, 49.1904, 0.0, 76.704, 17.9331, 79.7525, 107.5738, 15.12, 60.8869, 62.9722, 0.0, 119.1994, 18.0308, 72.6009, 0.0, 24.9908, 0.0], [54.743, 57.4157, 334.866, 696.1508, 20.1898, 71.8992, 14.7585, 0.0, 49.4208, 6.3687, 144.1434, 63.6974, 14.9495, 96.37, 172.5696, 0.0, 120.7669, 19.872, 14.9351, 92.0102, 20.3106, 88.5677, 0.0, 0.0], [0.0, 93.3587, 59.7205, 258.6289, 0.0, 34.6406, 180.576, 20.344, 51.4271, 26.2103, 223.3741, 49.0942, 85.4441, 209.2425, 236.1946, 77.112, 139.0262, 39.8909, 70.6118, 116.377, 46.4013, 155.2748, 0.0, 50.4752, 71.8481], [68.9472, 71.8502, 343.7301, 658.8971, 14.7937, 55.4205, 77.5867, 65.8142, 79.8912, 72.5819, 109.431, 18.6114, 0.0, 118.2775, 178.0531, 46.0944, 98.4126, 10.5494, 25.4803, 10.4062, 88.0118, 0.0, 82.5132, 10.7271, 0.0], [25.6781, 123.0566, 543.5007, 1134.2187, 27.7079, 68.6034, 16.662, 28.5398, 218.3616, 7.8624, 4.3456, 197.7459, 0.0, 0.0, 179.63, 266.2733, 0.0, 152.2508], [34.6637, 142.0877, 442.7126, 1188.5283, 8.9732, 129.9215, 15.393, 21.5016, 141.12, 0.0, 166.5229, 0.0, 167.67, 172.3277, 17.388, 131.7762, 0.0, 21.4176, 15.5678, 113.8368, 0.0, 207.944, 31.8681, 11.2518], [159.0106, 177.2467, 227.8402, 1367.1666, 46.8064, 51.4309, 0.0, 22.6771, 104.6016, 37.3907, 0.0, 242.8659, 24.4715, 155.25, 301.271, 0.0, 208.64, 0.0, 81.5194, 0.0, 327.4454, 22.5621, 229.5367, 19.1052, 23.8854], [103.4726, 188.617, 496.2255, 1187.6306, 16.1882, 166.4349, 32.1565, 66.9749, 114.8544, 53.8574, 38.5504, 15.1294, 166.7034, 44.4222, 63.1943, 121.785, 278.7725, 26.568, 127.4127, 0.0, 90.9696, 51.8814, 142.9546, 0.0, 188.9767, 39.9591, 18.2398, 48.4493], [74.0621, 235.1462, 273.4739, 1702.4501, 47.4733, 170.8581, 29.7961, 0.0, 196.8768, 57.2099, 41.9495, 0.0, 135.6608, 28.9765, 37.358, 229.8275, 240.6298, 0.0, 182.1908, 0.0, 58.1587, 94.2211, 22.0513, 234.0374, 0.0, 0.0, 79.0742], [146.9491, 145.7165, 552.8572, 1418.7832, 117.986, 273.4597, 21.1035, 21.8141, 81.5616, 16.3254, 21.448, 197.8061, 17.9966, 195.3275, 274.0147, 21.0168, 164.6028, 15.2928, 83.8598, 20.5295, 200.5315, 17.5861, 188.4409, 5.742, 22.7997, 0.0], [115.0502, 194.1005, 473.901, 1244.6333, 82.8812, 214.4833, 23.7176, 19.3291, 139.7376, 37.6085, 24.3672, 23.5492, 203.1002, 0.0, 104.1389, 204.5275, 213.696, 71.6472, 119.5585, 18.8309, 215.2358, 39.9434, 134.3933, 24.1419, 161.4901, 44.8137, 54.818, 86.0021], [192.0499, 298.2067, 849.148, 1706.0408, 41.7134, 280.2246, 5.5836, 22.8259, 207.3024, 11.3459, 0.0, 0.0, 169.2301, 29.9382, 23.9954, 153.295, 295.3843, 24.084, 204.8808, 0.0, 102.5837, 22.2111, 201.3782, 26.6677, 153.9889, 11.8755, 23.9249, 29.7073], [146.7418, 348.3648, 725.7071, 2057.4826, 90.2174, 127.1462, 12.9184, 19.5226, 233.1072, 58.1855, 313.4336, 27.2575, 0.0, 220.34, 170.473, 51.6024, 190.4478, 0.0, 145.7722, 17.1661, 132.3235, 222.5177, 0.0, 0.0], [237.1162, 335.6237, 905.4514, 2285.4933, 53.4757, 136.4263, 71.7619, 43.896, 218.5344, 0.0, 60.1316, 274.3898, 50.1069, 34.6601, 312.57, 417.312, 65.448, 141.2415, 0.0, 140.6938, 0.0, 306.2774, 15.0887, 303.745, 0.0, 56.6143, 49.4357]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

