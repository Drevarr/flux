created: 20230501220820000
creator: Drevarr
modified: 20230705163527994
modifier: drevarr
tags: ChartData
title: 202305012208_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Tyzzki", "Xyntharos", "Blancooo Padreee", "Elonith Primal", "Tika Sumiko", "Flanneryflame", "Zadie Miststep", "Mac Aaroni", "Needragee", "Lord Erin The Wise", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Tempest", "Vindicator", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[253.927, 0.0, 0.0, 0.0, 0.0, 32.5961, 336.6041, 26.8424, 97.7949, 0.0, 30.1066, 0.0, 0.0, 32.5241], [300.0556, 54.2565, 18.183, 12.6126, 20.3522, 54.0339, 173.0369, 16.2632, 185.4818, 20.3544, 35.0877, 9.5917, 7.7489, 64.3692], [303.1308, 0.0, 30.624, 0.0, 0.0, 112.8122, 201.0155, 0.0, 500.0933, 0.9306, 145.0232, 0.0, 0.0, 128.2631], [744.6474, 32.6122, 62.9068, 27.5121, 23.7258, 73.8903, 582.3853, 30.2064], [427.019, 157.8196, 32.7294, 24.1659, 22.1161, 119.841, 402.8918, 8.1432, 429.59, 31.2246, 38.3496, 33.7806, 0.0, 83.8565], [56.6723, 0.0, 22.011, 22.8096, 110.6028, 273.9475, 1455.7481], [743.3294, 62.7978, 31.4534, 0.0, 59.2484, 31.4539, 653.8384, 27.3992, 470.5274, 26.631, 89.5265, 0.0, 0.0, 121.2694], [814.06, 33.1945, 33.3036, 0.0, 15.8098, 165.5282, 705.9216, 37.352, 556.6981, 66.0924, 112.6244, 0.0, 0.0, 87.7947], [148.8512, 1456.5628, 115.6716, 451.7318, 94.2858, 120.4905, 598.8101], [287.7829, 176.8536, 31.8087, 71.2656, 153.14, 988.2902, 54.5432, 1279.4201], [897.5308, 137.3399, 0.0, 44.847, 77.1971, 143.3875, 974.5162, 44.2192, 792.2145, 0.0, 106.894, 17.0888], [2315.2164, 378.0487, 237.655, 21.8493, 79.9753, 497.9905, 1855.6268, 70.992, 1535.4052, 200.1186, 319.5359, 72.3901, 93.5208, 407.4679]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

