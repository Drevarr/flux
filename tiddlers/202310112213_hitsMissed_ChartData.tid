created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Senhora Lagertha", "Isarii Ashenfist", "Ch\u00e2rl\u00eese", "Foxgale", "Luke The Ghastly", "Bozuko", "K\u00e9ld\u00e1", "Symra Asher", "Grayson Kin", "Black Raspberry Pie", "Rina Of Theros", "\u00c1rk\u00e1ntor", "Mellody Moon", "Sanskuy", "Rozaalyna", "Belvyn Brightblade", "Mike The Archmagus", "Solus Luxes", "Cat Wigglebooty", "Arriasa", "Aira Draugr", "Kat Bon Z", "Jimbo The Pleb", "Sygaldry Verdandi", "Venomina The Sly", "Legendary Sakis", "Sub Train", "Morv\u00e4rth", "Bella Bitty", "Zaylen Harker", "Crusader Siolith", "Daphne Agla\u00e9", "Drevarr Moonwillow", "Kalisha Lafay", "Xanvias Einzbern", "Morton Saltbringer", "Be\u00eb", "No Reserv\u00e9", "Tegan Parker", "Atria Ruinheart", "Zaedy Zae", "Mistwalker Cael", "Jmbrage Gaurdian", "Glorious Gluvs", "Necrotic Windrunner", "Tootsie Pop Rocks", "Efreet White", "Ryvalia Fazebringer", "Newtype Khan", "Adjudicatrix Farra"];
const professions = ["Soulbeast", "Willbender", "Soulbeast", "Tempest", "Reaper", "Berserker", "Chronomancer", "Reaper", "Berserker", "Chronomancer", "Reaper", "Scourge", "Dragonhunter", "Herald", "Reaper", "Firebrand", "Weaver", "Firebrand", "Scrapper", "Druid", "Herald", "Scrapper", "Berserker", "Firebrand", "Druid", "Druid", "Dragonhunter", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Chronomancer", "Berserker", "Chronomancer", "Reaper", "Vindicator", "Tempest", "Firebrand", "Druid", "Herald", "Firebrand", "Berserker", "Reaper", "Scrapper", "Reaper", "Chronomancer", "Spellbreaker", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 0, 0, 1, 2, 0], [5], [1, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 2, 1], [0, 2, 1, 0, 3, 2, 0, 0], [0, 2, 0, 2, 2, 2, 0], [3, 1, 0, 0, 1, 0, 1, 2, 0, 0, 0, 1, 0, 0], [11], [7, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0], [5, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 4, 0, 0], [7, 0, 0, 0, 2, 0, 0, 1, 0, 1, 2, 1, 0, 0], [8, 0, 0, 1, 1, 0, 0, 1, 0, 0, 2, 1, 0, 0], [15, 0, 0], [15, 0], [15, 0, 0, 0, 0, 1, 0], [15, 0, 0, 1, 0, 0], [15, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [12, 0, 0, 0, 1, 0, 1, 0, 1, 2, 2, 0, 0], [17, 0, 0, 0, 0, 0, 1, 0, 0, 1], [18, 0, 0, 0, 0, 0, 1, 0, 1], [20, 0, 0, 0, 0, 0], [16, 0, 0, 0, 0, 2, 0, 0, 2, 2], [19, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0], [14, 0, 0, 2, 0, 0, 3, 0, 1, 0, 3], [16, 0, 0, 1, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1], [21, 0, 0, 0, 0, 0, 3, 0], [24], [20, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0], [19, 0, 0, 1, 2, 0, 1, 2, 0, 0, 1, 0, 0, 0], [22, 0, 0, 0, 0, 1, 3, 0, 0, 0], [22, 0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 0], [27, 0, 0, 0, 0, 0], [18, 0, 0, 1, 1, 0, 0, 3, 0, 0, 3, 1, 0, 1], [23, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0], [15, 0, 0, 0, 3, 0, 1, 1, 2, 0, 1, 5, 0, 0], [17, 0, 1, 3, 0, 2, 0, 0, 5, 1, 0], [23, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 2, 0], [25, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], [24, 0, 0, 0, 0, 1, 0, 3, 0, 0, 1, 2, 0], [31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [26, 1, 0, 0, 0, 0, 2, 0, 1, 2, 0, 1], [23, 0, 0, 2, 0, 1, 2, 0, 0, 5, 0, 0, 1], [27, 0, 0, 0, 1, 0, 2, 0, 0, 3, 1, 0, 0], [25, 0, 0, 0, 1, 1, 0, 3, 0, 0, 2, 3, 0, 0], [32, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], [31, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [40], [26, 0, 0, 2, 3, 0, 0, 4, 0, 0, 2, 4, 0, 0], [38, 0, 0, 0, 1, 0, 1, 1, 0, 2, 3, 4, 0, 1], [42, 0, 0, 0, 2, 1, 2, 1, 2, 2, 0, 1]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

