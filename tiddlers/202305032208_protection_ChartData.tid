created: 20230503220838000
creator: Drevarr
modified: 20230705163528151
modifier: drevarr
tags: ChartData
title: 202305032208_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Xkaet", "Mannse Lee", "Eibh\u00ebar", "Ryvalia Fazebringer", "Primal Clone", "Zadie Miststep", "Black Raspberry Pie", "Newtype Khan", "Soxx", "Mac Adaymia", "Johosh The Great", "Skye Nightroad", "\u00c1rkantor", "Tribal S", "Sub Train", "Gavann", "Demon Dalham", "Miphest\u00f6", "Arriasa", "Drevarr Moonwillow", "Zaylen Harker", "Bella Sassy", "Lucas Ryn", "Sygaldry Verdandi", "Koralia Danai"];
const professions = ["Firebrand", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Vindicator", "Willbender", "Scrapper", "Vindicator", "Druid", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[701.975, 497.5739, 0.0, 0.8593, 34.447, 251.2818, 0.0, 0.0, 379.8138], [21.2026, 137.3845, 688.7347, 1128.3651], [850.2562, 404.7924, 35.3153, 14.5981, 79.233, 24.2257, 30.433, 641.2959], [694.2, 191.395, 20.4874, 10.7458, 34.6332, 94.8738, 15.4367, 52.4257, 472.8837, 0.0, 20.637, 249.8554, 341.9401], [563.135, 285.2368, 33.0515, 29.2516, 36.4207, 59.1675, 0.0, 22.1643, 505.6798, 0.0, 22.4788, 320.6534, 380.7207], [598.1227, 306.444, 30.0115, 0.0, 35.229, 98.9898, 20.0389, 0.0, 548.6692, 0.0, 0.0, 363.9571, 401.6025], [688.091, 299.0215, 18.6602, 4.6525, 52.7318, 122.451, 18.6966, 28.1342, 487.509, 37.5903, 381.8285, 517.5713], [786.3898, 413.2753, 0.0, 0.0, 21.1151, 132.1236, 0.0, 21.032, 509.6685, 0.0, 402.793, 486.9943], [651.4373, 395.5143, 32.5987, 13.2978, 20.5565, 113.6016, 0.0, 20.3458, 557.533, 0.0, 21.3486, 445.0656, 559.335], [22.6044, 1796.759, 1203.316], [738.6288, 520.3717, 50.2887, 0.0, 30.8347, 57.0066, 0.0, 43.0934, 739.6841, 0.0, 0.0, 663.9898, 289.7355], [905.7922, 391.0077, 35.9944, 4.5917, 16.609, 128.8308, 0.0, 15.6454, 691.3764, 0.0, 443.6909, 521.6731], [791.9434, 489.6212, 30.3026, 0.0, 48.8216, 100.9449, 39.3428, 39.3879, 545.5669, 59.9854, 641.9942, 603.7089], [1052.9626, 611.5626, 2.9753, 2.0485, 6.7404, 77.7924, 2.0774, 0.0, 674.5352, 0.0, 0.0, 834.1114, 441.8747], [1683.8515, 826.2855, 40.3765, 4.5917, 60.8129, 376.9227, 0.0, 0.0, 1088.4746], [1085.1734, 743.0473, 17.027, 0.0, 0.0, 107.016, 45.6389, 31.4623, 676.7511, 0.0, 28.5485, 772.5926, 675.3038], [1866.0096, 1026.6936, 2.4093, 0.0, 34.7822, 241.815, 0.0, 33.8983, 1391.1734], [1353.9677, 755.5065, 7.7293, 56.9027, 114.6306, 76.6081, 47.0733, 996.7343, 0.0, 1049.5987, 798.7304], [1992.6317, 1196.0861, 23.8669, 13.7838, 20.9661, 338.3352, 0.0, 200.7821, 1534.3238, 64.8, 0.0, 13.7472], [1430.052, 688.7038, 20.5521, 20.7799, 133.1702, 353.2557, 121.9274, 59.1161, 1357.9342, 70.8271, 957.8362, 1037.38], [1774.9306, 656.6279, 37.9025, 17.2472, 96.3771, 332.9844, 13.7748, 67.5221, 1258.6596, 0.0, 65.7621, 961.9603, 1080.2623], [2246.9866, 977.1217, 16.364, 27.4459, 282.1518, 0.0, 50.916, 830.0949, 0.0, 1599.143, 1449.4234], [2054.2766, 1086.3388, 17.2049, 114.4013, 323.9292, 28.6489, 1379.2073, 114.9057, 1169.1994, 1226.0623], [1883.2258, 998.8591, 21.1504, 17.117, 50.4974, 230.9076, 20.4544, 24.9091, 1289.6829, 0.0, 141.2775, 1551.7152, 1365.1503], [2341.9531, 970.4945, 127.8885, 3.5501, 108.6291, 81.4968, 63.6963, 145.3715, 1470.9476, 0.0, 1509.4426, 1535.9339], [2925.6365, 1459.5855, 0.0, 114.2151, 464.6964, 0.0, 1854.7501, 0.0, 0.0, 1789.1981, 1865.9416]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

