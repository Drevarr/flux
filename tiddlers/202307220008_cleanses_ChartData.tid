created: 20230722000818000
creator: Drevarr
tags: ChartData
title: 202307220008_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Black Raspberry Pie", "Kahlianne", "Newtype Khan", "Primal Clone", "Arcanophage Farra", "Grasszanine", "Eibh\u00ebar", "Cat Wigglebooty", "Seiker Novus Terra", "Tegan Parker", "Venomina The Sly", "Klengah", "Arriasa", "Drevarr Moonwillow", "Zaedy Zae", "Tribal S"];
const professions = ["Firebrand", "Chronomancer", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Druid", "Druid", "Druid", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0658, 0.0, 0.15, 0.0472, 0.018, 0.0, 0.0341, 0.0242, 0.035, 0.167, 0.0383, 0.1582, 0.0867, 0.0299, 0.0377, 0.0, 0.0864], [0.1908, 0.0988, 0.45, 0.4252, 0.0495, 0.0263, 0.0076, 0.0121, 0.0699, 0.1055, 0.0204, 0.0405, 0.0058, 0.0778, 0.0, 0.0, 0.2222], [0.1513, 0.0864, 0.18, 0.0709, 0.0405, 0.0263, 0.072, 0.0788, 0.035, 0.0989, 0.0689, 0.1886, 0.0347, 0.0719, 0.0, 0.0102, 0.0988], [0.2204, 0.0988, 0.2, 0.063, 0.0315, 0.0526, 0.0379, 0.2061, 0.1119, 0.1165, 0.0587, 0.2278, 0.1792, 0.1617, 0.0, 0.0, 0.1852], [0.1546, 0.1605, 0.14, 0.2283, 0.0766, 0.1974, 0.0833, 0.2545, 0.0559, 0.0791, 0.0485, 0.2165, 0.237, 0.1916, 0.0, 0.0, 0.3704], [0.1086, 0.0617, 0.12, 0.1102, 0.1126, 0.0395, 0.1212, 0.1576, 0.1748, 0.2088, 0.1403, 0.238, 0.0636, 0.0599, 0.0, 0.0, 0.0494], [0.2566, 0.1235, 0.41, 0.1024, 0.1126, 0.0263, 0.0682, 0.1697, 0.0769, 0.1033, 0.0689, 0.2658, 0.0636, 0.1257, 0.0, 0.0, 0.1728], [0.2632, 0.2963, 0.31, 0.1969, 0.0676, 0.1579, 0.072, 0.2242, 0.1818, 0.1341, 0.051, 0.1127, 0.2717, 0.2096, 0.0, 0.0, 0.7037], [0.1316, 0.2099, 0.76, 0.5354, 0.1441, 0.4211, 0.3409, 0.2, 0.3566, 0.5253, 0.375, 0.9101, 0.5145, 0.2395, 0.0189, 0.0306, 0.284], [0.7829, 0.4691, 1.01, 0.5827, 0.3153, 0.3158, 0.375, 0.5333, 0.4755, 0.833, 0.5306, 1.0127], [1.0921, 0.3333, 1.33, 0.5276, 0.3604, 0.2368, 0.5492, 0.6545, 0.7273, 0.833, 0.6352, 0.7316, 0.4104, 0.3473, 0.0, 0.4815], [0.6414, 0.1852, 1.01, 0.7559, 0.2387, 0.3553, 0.303, 0.8727, 0.2028, 0.778, 0.3597, 1.6506, 0.4855, 0.5868, 0.0755, 0.0, 1.6049], [0.625, 0.0864, 1.11, 0.315, 0.2793, 0.2895, 0.6705, 0.7455, 0.4895, 0.9385, 0.7194, 1.638, 0.5202, 0.2335, 0.0189, 0.0, 0.3827], [1.0066, 0.4444, 1.21, 0.5591, 0.5, 0.1316, 0.6818, 0.9091, 1.021, 1.1846, 0.8776, 1.3165, 0.5665, 0.5509, 0.0102, 1.1605], [1.3257, 0.4568, 1.88, 0.622, 0.5856, 1.2368, 1.0379, 0.9455, 1.1259, 1.6308, 0.8929, 1.9772, 0.8324, 0.6347, 0.0755, 0.0408, 1.5309], [1.1908, 0.4938, 2.65, 0.9921, 0.5495, 0.8026, 0.9508, 1.2182, 1.5105, 1.8264, 1.1454, 2.1671, 0.7514, 0.6108, 0.0943, 0.0612, 1.2593], [1.4507, 0.6667, 2.74, 1.0472, 0.9144, 0.9605, 1.178, 1.4606, 1.4336, 1.8396, 1.3954, 2.7481, 1.0867, 0.9701, 0.2642, 0.0, 0.7531]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

