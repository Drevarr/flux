created: 20230802221330000
creator: Drevarr
tags: ChartData
title: 202308022213_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Sygaldry Verdandi", "Koralia Danai", "Aira Draugr", "Oo Dads Mad", "Daphne Agla\u00e9", "Tootsie Pop Rocks", "Kurtis Ruhr", "Kisumaiasu", "Drevarr Moonwillow", "Jimbo One Eye", "Tirluka", "High Sorcer Baradun", "Belvyn Brightblade", "Cat Wigglebooty", "Sub Train", "Mort\u00e4rion", "Aelia Liore", "Glorious Gluvs", "Elementsofmathus", "Zaedy Zae", "Black Raspberry Pie", "Ryvalia Fazebringer", "Be\u00eb", "Necrotic Windrunner", "Gabe Malhorn", "Huma Shadowfist", "Keypek The Drunk", "Lord Erin The Wise", "Xanvias Einzbern", "Venomina The Sly", "Kary\u00edna", "Morton Saltbringer", "Imalou", "Crusader Siolith", "Eibh\u00ebar", "Squishy Jellyfish", "Zaylen Harker", "\u00c1rk\u00e1ntor", "Revitiel", "Rahani Sunray", "Arcanophage Farra", "Tegan Parker", "Newtype Khan", "K\u00e2 \u00d4tik R\u00e6j", "Sister Elonith", "Primal Clone", "Solus Sanctus", "Mike The Archmagus", "Inedible Plant", "Mistwalker Cael"];
const professions = ["Firebrand", "Firebrand", "Herald", "Berserker", "Scourge", "Scrapper", "Vindicator", "Scourge", "Scrapper", "Scrapper", "Tempest", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Herald", "Berserker", "Tempest", "Druid", "Chronomancer", "Chronomancer", "Scourge", "Scourge", "Firebrand", "Harbinger", "Scrapper", "Weaver", "Berserker", "Druid", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Dragonhunter", "Scourge", "Vindicator", "Chronomancer", "Spellbreaker", "Tempest", "Spellbreaker", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Weaver", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 4, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 5], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 0, 0, 6], [0, 0, 4, 0, 0, 16, 0, 0, 0, 0], [1, 1, 9, 2, 1, 4, 0, 0, 0, 2, 3], [0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 11, 0, 0, 0], [0, 5, 0, 5, 0, 3, 0, 0, 0, 1, 5, 0, 0, 1, 2, 5], [27], [0, 0, 1, 0, 3, 10, 0, 0, 0, 0, 8, 4, 0, 2, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 26], [0, 0, 1, 4, 1, 1, 0, 0, 0, 0, 6, 3, 0, 0, 0, 13], [0, 0, 8, 3, 24], [1, 0, 5, 10, 22], [0, 1, 8, 8, 12, 10, 0, 0, 0, 0], [0, 0, 3, 3, 0, 1, 0, 0, 0, 0, 10, 0, 0, 0, 0, 24], [0, 1, 3, 0, 4, 0, 0, 0, 0, 12, 0, 1, 0, 4, 18], [0, 7, 2, 3, 2, 1, 0, 0, 0, 0, 8, 0, 0, 4, 3, 14], [1, 44], [0, 0, 10, 7, 0, 0, 0, 0, 0, 0, 12, 7, 3, 9], [0, 0, 5, 2, 0, 1, 1, 0, 0, 9, 0, 0, 5, 7, 19], [0, 0, 1, 2, 0, 1, 0, 0, 0, 0, 4, 0, 0, 0, 2, 40], [0, 2, 5, 2, 1, 13, 0, 0, 0, 0, 15, 6, 0, 0, 1, 11], [0, 4, 3, 4, 1, 3, 1, 0, 0, 0, 13, 0, 0, 3, 2, 24], [0, 0, 0, 1, 0, 1, 0, 0, 0, 7, 3, 0, 0, 0, 4, 42], [0, 0, 0, 2, 0, 0, 2, 0, 0, 7, 3, 1, 0, 11, 32], [0, 16, 1, 3, 0, 1, 0, 0, 0, 0, 5, 0, 0, 0, 1, 32], [5, 0, 11, 23, 21], [1, 4, 0, 3, 0, 6, 1, 0, 0, 0, 7, 1, 0, 4, 6, 30], [5, 0, 1, 0, 0, 0, 0, 24, 4, 0, 1, 3, 25], [0, 0, 0, 0, 0, 8, 0, 0, 1, 3, 11, 0, 1, 5, 8, 28], [0, 11, 2, 3, 2, 0, 0, 0, 0, 0, 8, 1, 1, 4, 8, 25], [4, 3, 2, 5, 0, 0, 2, 0, 0, 0, 9, 2, 1, 2, 9, 28], [0, 0, 3, 8, 0, 1, 0, 0, 0, 0, 11, 12, 1, 2, 0, 30], [0, 2, 0, 0, 0, 14, 1, 1, 2, 2, 52], [0, 0, 2, 6, 0, 3, 0, 1, 0, 0, 7, 3, 0, 1, 6, 47], [0, 6, 2, 7, 0, 6, 0, 0, 0, 4, 18, 3, 1, 4, 2, 30], [0, 0, 0, 0, 1, 5, 0, 0, 0, 0, 11, 2, 0, 0, 0, 65], [0, 3, 6, 5, 1, 6, 2, 1, 0, 22, 0, 2, 12, 2, 23], [0, 5, 2, 4, 2, 3, 1, 0, 0, 0, 17, 0, 1, 4, 13, 52], [2, 4, 3, 0, 0, 18, 0, 1, 2, 23, 13, 0, 9, 4, 29], [0, 5, 8, 4, 0, 8, 0, 1, 0, 0, 20, 4, 0, 1, 9, 48], [0, 6, 1, 0, 0, 10, 0, 1, 0, 0, 22, 2, 1, 3, 7, 70], [0, 0, 4, 2, 0, 10, 0, 0, 3, 1, 17, 0, 1, 3, 9, 80], [6, 3, 4, 8, 0, 8, 0, 1, 0, 14, 0, 0, 7, 13, 66], [0, 2, 1, 0, 0, 2, 0, 0, 0, 0, 30, 3, 0, 5, 14, 73], [5, 6, 3, 7, 0, 3, 0, 0, 0, 1, 30, 0, 0, 1, 10, 71], [0, 7, 6, 1, 0, 4, 0, 3, 2, 30, 11, 0, 6, 1, 67], [1, 2, 12, 7, 2, 6, 0, 0, 0, 6, 9, 1, 0, 3, 9, 82], [0, 5, 24, 7, 0, 6, 2, 2, 0, 0, 16, 1, 0, 1, 8, 78], [0, 7, 11, 4, 0, 5, 0, 2, 8, 26, 10, 2, 5, 20, 110], [1, 4, 23, 7, 0, 16, 2, 0, 1, 0, 35, 10, 0, 3, 22, 146]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

