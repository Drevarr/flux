created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Sygaldry Verdandi", "Ax Axun", "Venomina The Sly", "Gadget Windrunner", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Vindicator", "Druid", "Scrapper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[66.4518, 56.3012, 506.0679, 113.2711, 110.6304, 2.584], [4.1235, 82.7026, 0.0, 0.0, 36.8518, 29.6912, 75.2123, 0.0, 77.1156, 86.9376, 26.0772, 3.1471, 82.1258, 56.9857, 29.9534, 29.3142, 0.0, 53.0334, 17.4174, 87.4364, 62.9197, 2.2677, 0.5039, 0.0, 0.0, 22.6524, 6.4923], [27.2109, 173.2045, 26.691, 0.0, 62.5363, 51.8672, 37.3745, 0.0, 52.08, 106.7904, 72.54, 0.0, 45.1968, 14.601, 186.3906, 47.1226, 44.5768, 46.9602, 0.0, 41.367, 43.1376, 0.0, 24.9288], [0.0, 210.5789, 28.1925, 0.0, 483.2916, 140.0291, 64.9034, 159.8128, 26.7468, 32.832, 98.1708, 107.818, 579.6839, 250.9372, 29.5852, 153.0675, 25.4541, 26.523, 0.0, 387.9779, 258.7191, 53.1768, 164.2945, 365.313, 0.0, 0.0, 35.4331], [1.5014, 312.046, 136.479, 104.4278, 239.1022, 49.5018, 117.1814, 0.0, 149.544, 345.6384, 21.576, 264.766, 452.0463, 127.689, 125.7472, 277.8227, 89.2819, 54.8226, 10.7184, 204.45, 169.9315, 92.8491, 67.1642, 234.702, 0.0, 77.9676, 5.659], [135.815, 1681.3883, 53.2455, 99.3888, 798.703, 384.3594, 206.4091, 321.4557, 604.6488, 725.7216, 274.5546, 720.2242, 694.723, 335.637, 496.1959, 378.7258, 794.8524, 249.291, 44.5388, 1052.9857, 0.0, 426.9174, 317.889, 83.0739, 34.0061, 530.4738, 11.9122], [0.0, 1659.2261, 97.7445, 260.9814, 1258.6055, 384.113, 423.1656, 217.8646, 454.5468, 833.9712, 470.1708, 946.7586, 1053.1475, 374.8365, 642.0348, 608.2624, 519.007, 258.0354, 219.4975, 1148.8727, 889.7267, 621.126, 320.9864, 1313.9997, 724.8851, 325.7766, 152.3139]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

