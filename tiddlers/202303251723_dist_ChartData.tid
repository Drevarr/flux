created: 20230325172304000
creator: Drevarr
modified: 20230705163522948
modifier: drevarr
tags: ChartData
title: 202303251723_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Sumiko", "\u00c1rkantor", "Zadie Miststep", "What Charr U Saying", "Johosh The Great", "Panther B Me", "Newtype Khan", "Eibh\u00ebar", "Be\u00eb", "Mac Chiato", "Abigail Ryn", "Xanvias Einzbern", "Bella Sassy"];
const professions = ["Tempest", "Vindicator", "Tempest", "Berserker", "Firebrand", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Tempest", "Tempest", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[254, 241, 487, 296, 281, 1354, 311, 3362, 449, 496, 332, 333, 482, 696, 618, 428, 271, 269, 308], [471, 396, 878, 423, 864, 281, 547, 561, 436, 451, 304, 587, 1151, 600, 407, 353, 330, 284], [433, 256, 1960, 496, 281, 1701, 262, 958, 633, 478, 332, 585, 623, 621, 445, 386, 358, 370], [339, 247, 437, 413, 2279, 3940, 629, 224, 534, 370, 843, 348, 2759, 713], [343, 330, 673, 602, 384, 727, 324, 532, 685, 464, 200, 535, 369, 780, 282, 454, 408, 323, 325], [293, 390, 505, 285, 630, 1353, 301, 691, 344, 435, 157, 273, 438, 13843, 256, 408, 343, 304, 382], [236, 287, 316, 283, 318, 1344, 271, 642, 1889, 473, 208, 629, 308, 3960, 461, 304, 276, 214, 15512], [217, 260, 607, 664, 254, 480, 231, 896, 707, 462, 264, 319, 951, 738, 485, 383, 310, 273, 295], [282, 218, 427, 565, 3345, 1803, 3023, 2051, 334, 513, 224, 498, 385, 669, 2629, 344, 371, 217, 278], [202, 237, 534, 858, 678, 1256, 218, 1690, 545, 195, 319, 427, 3025, 629, 492, 546, 262, 292], [212, 297, 655, 188, 363, 790, 258, 1115, 433, 478, 251, 427, 502, 877, 2570, 281, 281, 289, 259], [297, 312, 454, 219, 1759, 1639, 14324, 668, 889, 370, 371, 311, 447, 784, 3237, 519, 255, 214, 322], [181, 187, 369, 298, 284, 744, 194, 331, 329, 220, 228, 363, 162, 429, 260, 206, 252, 221, 228]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

