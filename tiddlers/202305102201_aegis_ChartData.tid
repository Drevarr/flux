created: 20230510220110000
creator: Drevarr
modified: 20230705163529399
modifier: drevarr
tags: ChartData
title: 202305102201_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Johoshua", "Raelyn Sunray", "Drevarr Moonwillow", "Gavann", "Lucas Ryn", "Tika Fiery", "Sygaldry Verdandi", "Solus Sanctus", "Koralia Danai", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.8685, 21.361, 20.552, 20.2434, 0.0, 203.7734, 0.0, 20.2176, 0.0, 0.0, 6.8943, 17.7341, 40.721, 24.6528, 2.3814, 10.3738], [117.1472, 28.7482, 8.6861, 0.0, 28.6297, 10.8902, 6.8796, 166.6235, 21.5712, 0.0, 57.5581], [12.8232, 13.7621, 19.6345, 9.3643, 0.0, 304.7624, 0.0, 6.5146, 0.0, 23.3906, 19.4653, 20.8299, 36.1502, 20.3899, 7.9733, 5.8562], [0.0, 28.9037, 0.0, 87.2122, 14.4917, 48.3865, 476.3937, 0.0, 0.0, 19.2418], [26.6184, 182.9495, 150.2416, 48.552, 112.4344, 44.7782, 13.6094, 0.0, 96.579, 8.1463, 23.6582, 103.049, 42.8342, 0.0, 127.4978], [16.0711, 41.3746, 91.5665, 156.9894, 181.4376, 202.6513, 62.3318, 40.3603, 0.0, 61.2284, 15.1263, 51.0619, 78.5333, 52.9522, 17.2343, 171.001], [46.9854, 293.0495, 124.4898, 118.0752, 227.5619, 0.0, 29.4653, 130.6066, 29.5666, 7.9115, 305.615, 62.5565, 4.4982, 204.2977], [0.5242, 6.3619, 156.5255, 111.6828, 41.1264, 322.716, 122.3453, 75.8722, 16.2774, 89.8582, 79.576, 65.5855, 309.3546, 125.7806, 62.181, 155.9422], [32.9659, 8.1954, 284.2415, 445.7673, 97.92, 568.6803, 63.5242, 27.2938, 0.0, 54.1372, 21.0774, 14.7911, 420.9218, 118.5902, 3.6515, 202.4572], [33.5743, 66.0933, 566.648, 411.0643, 144.3504, 592.2444, 247.4726, 92.0275, 154.3147, 86.8476, 67.6876, 465.5902, 170.8747, 60.0818, 581.1024]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

