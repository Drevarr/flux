created: 20230717082227000
creator: Drevarr
tags: ChartData
title: 202307170822_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Tirluka", "Flick Embermage", "Lei Hemlock", "Necrotic Windrunner", "Mechcem", "Elonith Primal", "The C\u00fcre", "Tridoren", "Violet Stab", "Warrior W Warrior", "Big Boy Belkins", "Mmathuss", "Tridogen", "Surethang Smarts", "Sakis Ranger", "Wreakit Herm", "Xanvias Tsolice", "Drac Tepes", "Magix Shot", "Fluffernaut", "Dizzy Bunnyhopper", "Alfir Strom", "Gamora Titus", "Wren Duskbloom", "Luke The Ghastly", "Flick Embermage", "Charr Surethang", "Vesnan", "Levente Tangnu", "Unbound Serenity", "Elonith Requiem", "Legoh Brave", "Reina Armitage", "Tegan Parker", "Thought Bound", "Mierin Farshaw", "Latedoctor", "Drevarr Moonwillow", "Gestern Yesteryear"];
const professions = ["Tempest", "Tempest", "Necromancer", "Reaper", "Scrapper", "Tempest", "Firebrand", "Reaper", "Firebrand", "Spellbreaker", "Holosmith", "Firebrand", "Scrapper", "Holosmith", "Druid", "Scrapper", "Weaver", "Scourge", "Druid", "Firebrand", "Holosmith", "Druid", "Firebrand", "Reaper", "Scourge", "Weaver", "Berserker", "Reaper", "Spellbreaker", "Reaper", "Reaper", "Tempest", "Druid", "Tempest", "Firebrand", "Chronomancer", "Reaper", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.2059, 0.0, 0.0606, 0.0, 0.0088, 0.0261], [0.1525, 0.0, 0.0952], [0.3333, 0.0057, 0.1475, 0.1143], [0.0606, 0.0219, 0.0065, 0.0309, 0.0, 0.0, 0.0, 0.0455, 0.0139, 0.0166, 0.0247], [0.0598, 0.0395], [0.0, 0.0909, 0.0625, 0.0399, 0.0247], [0.0, 0.1136, 0.0694, 0.0465, 0.0222], [0.0088, 0.0261, 0.0103, 0.0, 0.0, 0.0, 0.0682, 0.0486, 0.0532, 0.0148], [0.0, 0.0208, 0.0263, 0.0458, 0.0309, 0.0179, 0.0, 0.0, 0.1818, 0.0069, 0.0299, 0.0222], [0.0825, 0.0, 0.0, 0.0, 0.2045, 0.0417, 0.0133, 0.0519], [0.0169, 0.0135, 0.0, 0.2222, 0.0402, 0.2, 0.0984, 0.0795, 0.0, 0.0417, 0.0, 0.0159, 0.0439, 0.0, 0.0, 0.0526, 0.0, 0.0, 0.0139], [0.3704, 0.0172, 0.2049, 0.4571], [0.0135, 0.0476, 0.5926, 0.0, 0.0656, 0.0857, 0.0656, 0.1023, 0.0294, 0.0294, 0.0, 0.0769, 0.0758, 0.0, 0.0, 0.0044], [0.2174, 0.1667, 0.1039, 0.0, 0.0, 0.0519, 0.0406, 0.0847, 0.0135, 0.1667], [0.413, 0.131, 0.0, 0.0444, 0.0, 0.0519, 0.0863, 0.0763], [0.0825, 0.0536, 0.0, 0.0, 0.0455, 0.0069, 0.0399, 0.0938], [0.0217, 0.0476, 0.0, 0.0444, 0.0, 0.0649, 0.0254, 0.0339, 0.0135, 0.0238, 0.1481, 0.0057, 0.0, 0.0857, 0.0984, 0.0568, 0.0, 0.0, 0.0, 0.0, 0.0152, 0.0, 0.0, 0.0044, 0.0196, 0.0206, 0.0357, 0.0, 0.0, 0.0227, 0.0, 0.0199, 0.0198], [0.0476, 0.0, 0.0614, 0.0523, 0.0619, 0.0, 0.0789, 0.0, 0.0909, 0.0208, 0.0565, 0.0247], [0.3704, 0.0575, 0.1066, 0.3714, 0.1803, 0.0455, 0.0, 0.1111, 0.0, 0.0455], [0.0345, 0.2623, 0.5143, 0.1932], [0.1393, 0.2286, 0.0328, 0.125, 0.0, 0.1176, 0.0, 0.0, 0.1364, 0.0, 0.0, 0.0261, 0.0, 0.0, 0.0, 0.0227, 0.1042, 0.0299, 0.0099], [0.0, 0.3095, 0.4815, 0.0057, 0.1148, 0.0286, 0.0, 0.0114, 0.0, 0.0294, 0.1111, 0.0, 0.0455, 0.0794, 0.0, 0.0088, 0.0, 0.0722, 0.0, 0.0, 0.1364, 0.0764], [0.4, 0.0656, 0.0455, 0.0588, 0.0, 0.25, 0.0, 0.1818, 0.1111, 0.0395, 0.0392, 0.1031, 0.0, 0.0526], [0.2593, 0.1149, 0.1066, 0.4, 0.0328, 0.0682, 0.0, 0.0278, 0.0, 0.0303, 0.0, 0.0088, 0.0523, 0.0412, 0.0, 0.0, 0.0, 0.0694], [0.0217, 0.0, 0.0779, 0.1111, 0.0, 0.026, 0.1371, 0.1017, 0.0, 0.2619, 0.0, 0.046, 0.1475, 0.6286], [0.2593, 0.1092, 0.2377, 0.2, 0.082, 0.1136, 0.0588, 0.0294, 0.0278, 0.0, 0.1061, 0.0952, 0.0395, 0.0523], [0.4444, 0.1264, 0.2295, 0.3714, 0.1148, 0.1136, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0746, 0.0915, 0.0103, 0.0179, 0.0, 0.1136, 0.0347], [0.0, 0.1724, 0.0984, 0.4857, 0.0795, 0.0588, 0.0, 0.0556, 0.0192, 0.2576, 0.0, 0.0065, 0.0722, 0.0, 0.0263, 0.1136, 0.0139, 0.0299, 0.0494], [0.7407, 0.1782, 0.2787, 0.5429, 0.0682, 0.0, 0.1389, 0.0192, 0.0758, 0.0159, 0.0833, 0.0307], [0.0805, 0.3852, 0.1714, 0.1967, 0.1818, 0.0, 0.0294, 0.0556, 0.0, 0.1061, 0.0159, 0.0, 0.0526, 0.0327, 0.0206, 0.0, 0.1842, 0.0455, 0.0417], [0.0135, 0.0952, 0.3704, 0.069, 0.2623, 0.4571, 0.0, 0.1477, 0.0, 0.5882, 0.1389, 0.0, 0.1818, 0.0, 0.0, 0.0307, 0.0392, 0.0722, 0.0, 0.0263], [0.161, 0.0, 0.1667, 0.7407, 0.023, 0.1475, 0.8286, 0.1148, 0.0568, 0.0, 0.1765, 0.2083, 0.0, 0.0455, 0.0, 0.0208, 0.0088, 0.0523, 0.0722, 0.0714], [0.161, 0.0135, 0.2857, 0.5185, 0.0805, 0.2869, 0.3714, 0.2131, 0.125, 0.0588, 0.0, 0.0278, 0.0, 0.0455, 0.0159, 0.0614, 0.0261], [0.0, 0.4286, 0.8519, 0.0977, 0.3197, 0.4571, 0.0, 0.0682, 0.0, 0.0294, 0.2917, 0.0, 0.0758, 0.0794, 0.0208, 0.057, 0.085, 0.1237, 0.0], [0.4815, 0.1092, 0.1066, 0.1714, 0.1311, 0.1364, 0.0294, 0.0294, 0.3194, 0.0192, 0.2727, 0.0952, 0.1667, 0.0439, 0.0915, 0.0722, 0.0, 0.0, 0.0, 0.0682, 0.0347, 0.0399, 0.0346], [0.1186, 0.0, 0.0952, 0.5556, 0.0632, 0.1639, 0.5429, 0.0492, 0.0909, 0.1765, 0.1471, 0.0, 0.0, 0.2121, 0.0794, 0.0208, 0.0439, 0.0654, 0.0825, 0.0, 0.0789, 0.0, 0.0909, 0.0278, 0.0598, 0.0395], [0.0217, 0.1667, 0.0519, 0.0222, 0.0, 0.1169, 0.0964, 0.161, 0.0405, 0.2857, 0.3333, 0.0805, 0.1803, 0.2857, 0.082, 0.0909, 0.1471, 0.1471, 0.2222, 0.0, 0.197, 0.0, 0.0526, 0.0588, 0.0309, 0.0179, 0.0526, 0.0, 0.0682, 0.0625], [0.3043, 0.2381, 0.0, 0.0, 0.0, 0.039, 0.0914, 0.1102, 0.0, 0.0952, 0.5556, 0.1264, 0.2213, 0.0857, 0.1311, 0.125, 0.1176, 0.0, 0.0556, 0.0192, 0.1364, 0.1111, 0.0833, 0.0658, 0.1242, 0.0619, 0.0, 0.0526, 0.0, 0.1364, 0.0486], [0.1739, 0.25, 0.1169, 0.0, 0.0, 0.039, 0.0863, 0.1271, 0.0, 0.1905, 0.2593, 0.0805, 0.2131, 0.4571, 0.0164, 0.1477, 0.0, 0.0294, 0.2222, 0.0, 0.197, 0.0952, 0.0, 0.0482, 0.0523, 0.0825, 0.0, 0.0263, 0.0, 0.2045, 0.0347, 0.0764, 0.0346]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

