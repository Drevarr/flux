created: 20230625215204000
creator: Drevarr
modified: 20230705163536488
modifier: drevarr
tags: ChartData
title: 202306252152_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Rednuii", "Eibh\u00ebar", "High Sorcer Baradun", "Primal Clone", "Miphest\u00f6", "Black Raspberry Pie"];
const professions = ["Tempest", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[86.1384, 74.478, 21.9114, 81.2141, 136.0289, 186.5741, 0.0], [50.0688, 160.1046, 72.5191, 90.5466, 301.1422, 259.2374, 97.6709], [0.0, 81.0336, 47.1457, 173.1762, 156.6802, 33.3594, 73.6584, 0.0, 155.9861, 23.136, 78.0766, 101.1864, 65.1489, 34.0938, 0.0, 115.7811, 69.337, 0.0], [21.5206, 184.2024, 167.7242, 210.9247, 177.4718, 95.6544, 32.9434, 125.8879, 201.12, 18.2888, 127.2696, 85.6265, 76.0892, 43.045, 176.594, 0.0], [34.2985, 259.9368, 155.8802, 234.5338, 236.964, 0.0, 81.4604, 33.2414, 158.2087, 306.912, 105.6616, 32.604, 49.9359, 44.5504, 59.2459, 140.9691, 103.1184, 37.7237], [66.1048, 117.7968, 137.2917, 275.0713, 233.5133, 70.312, 86.0568, 100.3584, 211.968, 50.7346, 151.9848, 118.2591, 88.7623, 196.0358, 323.9645], [102.9351, 237.9672, 157.3936, 362.5025, 324.324, 39.1092, 135.0028, 30.4373, 156.6344, 377.856, 57.8131, 322.7568, 293.6153, 98.8805, 166.2555, 85.5138, 131.7254, 115.2907]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

