created: 20230515221048000
creator: Drevarr
modified: 20230705163530264
modifier: drevarr
tags: ChartData
title: 202305152210_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "River No Hug", "Cat Wigglebooty", "Bella Sassy", "Smol Gluvs", "Farra The Bloodless", "Smol Gluvs", "Sygaldry Verdandi", "Hauzzy", "Grasszanine", "Solus Sanctus", "Koralia Danai", "Tribal S", "Drevarr Moonwillow", "Tika Mi", "Rozaalyna", "River No Hug", "Cyclotechnist Farra", "Sheep Poh", "Venom The Ferocious", "Panther B Me", "Elonith Requiem", "Klenga", "Lord Erin The Wise", "Kyllarian", "Demon Sekhmet", "Jeckyll Mbs", "Ryvalia Fazebringer", "Domitia Gravestorm", "Blancooo Padreee", "Tootsie Pop Rocks", "Sub Train", "Arriasa", "Im Alt Tabbed", "Kary\u00edna", "Sumatra Satyricon", "No Reserv\u00e9", "Mike The Archmagus", "Mistwalker Caelon", "Primal Clone", "Newtype Khan", "Gavann", "Husky Guard", "Eibh\u00ebar", "Miphest\u00f6", "Black Raspberry Pie", "Rosetendril", "Lagmeloves", "Artakama Nahid", "High Sorcer Baradun"];
const professions = ["Spellbreaker", "Scourge", "Scrapper", "Firebrand", "Reaper", "Vindicator", "Scourge", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Druid", "Scrapper", "Tempest", "Reaper", "Reaper", "Scrapper", "Tempest", "Firebrand", "Reaper", "Reaper", "Firebrand", "Weaver", "Reaper", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Berserker", "Scrapper", "Firebrand", "Druid", "Berserker", "Vindicator", "Soulbeast", "Vindicator", "Weaver", "Vindicator", "Chronomancer", "Spellbreaker", "Firebrand", "Dragonhunter", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Dragonhunter", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 19, 0, 0, 0, 4, 0, 1, 0, 0, 0, 17], [0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 7, 0, 0, 0, 16, 0, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 21, 0, 0, 0, 0, 0, 14], [15, 0, 6, 0, 21, 0, 22], [0, 0, 0, 0, 0, 9, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 9], [0, 13, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 35, 14], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 15, 0, 55], [0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 9, 0, 27, 0, 0, 0, 22, 0, 6], [0, 0, 0, 0, 0, 0, 26, 10, 0, 18, 0, 0, 0, 0, 0, 41], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 28, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 20, 0, 0, 0, 12, 43], [12, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 23, 0, 0, 0, 29], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 53, 0, 22], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 26, 0, 47], [0, 25, 0, 0, 0, 43, 0, 37], [0, 34, 0, 0, 0, 32, 0, 42], [0, 26, 0, 19, 0, 18, 0, 49], [0, 58, 0, 0, 0, 0, 0, 54], [12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 29, 0, 0, 0, 29, 43], [5, 26, 0, 0, 0, 56, 0, 32], [3, 52, 0, 24, 0, 24, 0, 20], [0, 5, 0, 0, 0, 74, 0, 46], [0, 0, 0, 0, 29, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 83, 0, 0, 0, 0], [16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 14, 0, 72, 0, 0, 0, 0, 0, 7], [28, 33, 0, 48, 0, 0, 0, 32], [0, 0, 0, 0, 0, 6, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 21, 15, 0, 0, 0, 21, 0, 74], [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 6, 9, 0, 0, 0, 58, 0, 78], [0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 1, 0, 0, 1, 0, 0, 4, 43, 12, 46, 0, 3, 0, 23, 0, 9], [0, 10, 53, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 21, 0, 0, 0, 35, 0, 23], [0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 5, 13, 0, 21, 0, 60, 0, 38, 0, 14], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 77, 0, 0, 0, 0, 4, 39], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 55, 0, 35, 0, 0, 0, 23, 0, 43], [11, 0, 20, 0, 85, 0, 62], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 28, 0, 34, 0, 1, 0, 66, 0, 41], [0, 0, 0, 0, 3, 0, 32, 0, 0, 0, 13, 0, 0, 27, 0, 0, 8, 0, 26, 76], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 68, 0, 26, 0, 20, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 4, 31, 65, 0, 0, 0, 30, 0, 49], [0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 23, 0, 68, 0, 0, 0, 75, 0, 3], [0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 12, 23, 13, 47, 0, 8, 0, 0, 0, 82], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 83, 0, 0, 0, 32, 0, 40], [0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 44, 28, 0, 73, 0, 14, 0, 0, 0, 42], [0, 0, 0, 0, 11, 64, 0, 0, 4, 0, 0, 0, 0, 0, 8, 24, 14, 32, 0, 15, 0, 33, 0, 25], [0, 0, 0, 0, 1, 5, 18, 0, 0, 3, 0, 0, 0, 4, 0, 0, 1, 40, 35, 42, 0, 33, 0, 21, 0, 39], [64, 0, 53, 0, 110, 0, 21, 0, 29], [3, 0, 0, 0, 18, 3, 0, 0, 0, 0, 0, 9, 0, 32, 15, 26, 0, 75, 6, 9, 0, 52, 0, 38], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 41, 0, 109, 15, 0, 0, 0, 0, 92], [94, 0, 0, 13, 0, 0, 27, 11, 0, 32, 1, 47, 0, 1, 0, 18, 0, 45], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 27, 0, 58, 0, 64, 0, 0, 0, 141], [0, 0, 0, 0, 0, 51, 26, 93, 0, 81, 0, 25, 0, 44, 0, 42]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

