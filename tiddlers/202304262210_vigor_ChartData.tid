created: 20230426221022000
creator: Drevarr
modified: 20230705163526899
modifier: drevarr
tags: ChartData
title: 202304262210_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Miphest\u00f6", "Tegan Parker", "Zadie Miststep", "Mac Adaymia", "Grasszanine", "Blancooo Padreee", "Rey Peltrow", "Newtype Khan", "Zefirokai", "\u00c1rkantor", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Tempest", "Tempest", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Vindicator", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.0009, 241.2228, 70.4342, 18.9302, 19.9584, 24.8832, 31.8437, 206.2469, 47.4533, 79.7628, 4.945, 49.6405, 57.8006, 0.0, 16.8953, 205.8995], [0.0, 486.1116, 14.9742, 34.8534, 0.0, 6.7584, 69.9466, 483.5653, 156.0014, 317.3337, 34.8326, 151.3748, 24.44, 0.0, 81.4255, 435.3417], [0.0, 504.8082, 158.6156, 0.0, 31.8067, 31.7952, 95.2963, 597.8372, 31.7654, 356.0701, 23.7162, 129.7849, 79.5522, 0.0, 63.164, 582.9828], [88.6002, 432.9546, 204.7583, 0.0, 0.0, 21.8112, 158.436, 576.9338, 99.0965, 269.8195, 0.0, 119.3988, 25.2954, 44.7084, 62.4353, 586.1751], [38.4319, 508.4742, 160.6122, 38.2704, 46.6963, 66.624, 84.9686, 477.9911, 123.2616, 311.6091, 13.2328, 141.5612, 163.5036, 0.0, 56.1964, 751.7725], [629.8188, 250.901, 0.0, 73.6243, 73.3824, 106.1717, 796.6518, 189.4234, 162.0062, 0.0, 281.8957, 206.518, 0.0, 74.6401, 626.0781], [0.0, 718.1694, 31.7231, 75.1057, 161.3146, 169.5744, 54.3768, 1271.8558, 36.2477, 464.2651, 0.0, 73.3567, 169.3692, 0.0, 0.0, 1365.8797], [3250.6422, 1178.9687, 253.9514], [1095.4008, 236.3705, 107.4988, 65.5142, 73.4592, 145.7611, 890.0203, 69.3773, 481.8205, 70.5157, 42.6892, 256.9866, 0.0, 0.0, 1177.9366], [204.9407, 119.3723, 699.955, 227.7808, 330.3927, 3186.6536], [91.3419, 1209.78, 600.7427, 114.6745, 18.311, 52.9152, 128.9395, 980.6017, 154.2475, 563.3006, 11.5713, 249.1019, 196.0088, 18.1764, 144.1796, 1848.706], [117.4121, 1883.5908, 463.9784, 196.4775, 233.1648, 188.9664, 292.8523, 2211.5797, 625.7597, 977.38, 44.7621, 534.5959, 438.4536, 80.3286, 189.6286, 2339.1139]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

