created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Kahlianne", "Klee Flamepumpkin", "Aronorf Xideliesi", "Solus Sanctus", "Air One Com", "Tegan Parker", "Black Raspberry Pie", "Newtype Khan", "Eibh\u00ebar", "Grasszanine", "Primal Clone", "Mesmerizing Dark", "Skyew\u00edng", "Vampdru", "Drumina", "Drevarr Moonwillow", "Zaedy Zae", "Artakama Nahid", "Arriasa", "Tribal S"];
const professions = ["Scourge", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Chronomancer", "Spellbreaker", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer", "Druid", "Druid", "Druid", "Scrapper", "Druid", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.028, 0.0, 0.1008, 0.061, 0.2137, 0.0, 0.1392, 0.0619, 0.2267, 0.0784, 0.0714, 0.1389, 0.0, 0.0593, 0.037, 0.1119, 0.0, 0.0097, 0.0904, 0.1481, 0.0926, 0.0, 0.2299, 0.2203, 0.0504, 0.1081, 0.0769], [1.3649, 1.0256], [0.1049, 0.0, 0.0775, 0.2317, 0.0684, 0.0, 0.3354, 0.0928, 0.0, 0.3529, 0.0625, 0.1667, 0.0, 0.037, 0.0, 0.209, 0.0, 0.0, 0.0734, 0.1667, 0.1019, 0.0, 0.2069, 0.1525, 0.0, 0.1597, 0.1149, 0.1538], [0.2098, 0.0, 0.0853, 0.0854, 0.1624, 0.1739, 0.2785, 0.1031, 0.0933, 0.1961, 0.0982, 0.0, 0.0, 0.0074, 0.0, 0.1493, 0.0, 0.0097, 0.1582, 0.3241, 0.1019, 0.0, 0.069, 0.1525, 0.0, 0.2521, 0.1554, 0.2308], [0.035, 0.0385, 0.062, 0.2195, 0.1453, 0.4783, 0.3867, 0.0392, 0.0759, 0.0972, 0.1333, 0.0, 0.1194, 0.0114, 0.0, 0.1356, 0.1204, 0.1574, 0.0154, 0.2184, 0.3729, 0.0, 0.1849, 0.3514, 0.3846], [2.2278], [0.2028, 0.0, 0.3411, 0.3171, 0.3162, 0.0, 0.2658, 0.2165, 0.36, 0.6667, 0.1562, 0.4306, 0.0, 0.2, 0.0, 0.2985, 0.0, 0.0, 0.1525, 0.213, 0.4074, 0.0154, 0.1609, 0.8475, 0.0, 0.1008, 0.3851, 0.5769], [0.0699, 0.0, 0.1163, 0.5732, 0.1624, 0.0, 0.6962, 0.2165, 0.6, 0.7451, 0.1607, 0.2222, 0.0, 0.0963, 0.0, 0.4328, 0.0114, 0.068, 0.1356, 0.287, 0.2222, 0.0308, 0.4023, 0.5424, 0.0, 0.3697, 0.2432, 0.2436], [0.2098, 0.0, 0.4031, 0.3171, 0.4188, 0.0, 0.6456, 0.0, 0.1067, 0.8431, 0.2857, 0.0694, 0.0, 0.1185, 0.0, 0.2313, 0.0, 0.1068, 0.2768, 0.3519, 0.5278, 0.0, 0.908, 0.1695, 0.0, 0.1345, 0.5878, 0.0], [0.0909, 0.0, 0.186, 0.5488, 0.4188, 0.3671, 0.3299, 0.48, 0.902, 0.1741, 0.0694, 0.0, 0.1259, 0.2222, 0.6642, 0.0227, 0.0777, 0.2147, 0.5463, 0.1481, 0.0, 0.3563, 0.6102, 0.0, 0.4538, 0.3784, 0.3077], [0.1399, 0.0, 0.1628, 0.7195, 0.7265, 0.0, 0.6392, 0.3608, 0.12, 0.7255, 0.3616, 0.25, 0.0, 0.3926, 0.0, 0.0, 0.0114, 0.1553, 0.3898, 0.2778, 0.3519, 0.0308, 0.5862, 0.8644, 0.0, 0.3613, 0.4392, 0.2821], [0.2168, 0.0, 0.6047, 0.5122, 0.5726, 0.0, 0.5361, 0.76, 0.4314, 0.5714, 0.4861, 0.0, 0.4889, 0.0, 0.8134, 0.0, 0.1942, 0.452, 0.6852, 0.5926, 0.0, 0.8391, 0.3898, 0.0, 0.7563, 0.6351, 0.1282], [0.5804, 0.1705, 0.939, 1.2222, 0.0, 1.0949, 0.3918, 0.24, 0.3137, 0.6205, 0.2222, 0.0, 0.1704, 0.0, 0.4776, 0.0, 0.1262, 0.6836, 0.6759, 0.7778, 0.0, 0.023, 0.2034, 0.0, 1.1513], [0.7063, 0.0769, 1.1163, 3.6585, 3.3675, 0.6957, 2.5743, 1.9103], [0.5385, 0.0, 0.6047, 0.6463, 1.2479, 0.0, 1.0759, 0.7423, 0.36, 1.0588, 0.8125, 0.3333, 0.0, 0.2074, 0.0, 1.2761, 0.1136, 0.0971, 0.6554, 0.6574, 0.3519, 0.2154, 0.908, 0.7458, 0.04, 1.2941, 1.223], [0.1678, 2.2722, 1.3505, 1.4667, 2.1569, 1.2991, 1.375, 0.0, 0.7778, 0.5185, 2.3806, 0.5795, 0.5146, 1.4294, 1.8426, 1.463, 0.8154, 2.092, 2.1695, 0.0, 1.8824, 1.4324, 1.0], [0.8741, 0.0, 0.9612, 2.5732, 3.0769, 1.087, 1.7342, 1.9897, 2.0267, 2.4706, 1.3527, 0.125, 0.0, 0.6593, 0.0, 2.0149, 0.1932, 0.3301, 1.4011, 2.1944, 1.3796, 0.6769, 2.5977, 1.7966, 0.28, 0.521, 1.6149, 0.9359], [0.7552, 0.1538, 0.938, 2.7805, 2.8376, 0.4783, 2.557, 1.701, 2.0133, 1.1176, 1.2098, 1.2917, 0.1304, 0.8815, 1.037, 2.291, 0.5682, 0.6117, 1.1864, 1.9722, 1.6111, 0.8923, 2.2414, 2.7797, 1.12, 1.916, 1.9189, 1.6154], [0.5874, 0.3643, 2.9878, 2.6581, 2.0, 1.8797, 1.5567, 2.5067, 2.0392, 1.817, 0.9722, 0.3478, 0.9778, 0.9259, 2.4552, 0.4432, 0.3107, 1.113, 1.7593, 1.9167, 0.9385, 3.046, 2.8305, 0.64, 1.6471, 2.3986, 1.3846], [0.5734, 0.0, 1.155, 3.8415, 0.5556, 1.1304, 4.2911, 2.1134, 1.5733, 2.2157, 1.6295, 1.25, 0.3913, 0.8963, 0.4444, 3.1716, 0.3864, 0.3689, 1.7684, 3.3611, 1.75, 0.5692, 3.1494, 2.1864, 0.08, 1.4118, 1.8851, 2.5769]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

