created: 20230625212343000
creator: Drevarr
modified: 20230705163535687
modifier: drevarr
tags: ChartData
title: 202306252123_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["K\u00f4sair", "Shaca Booey", "Zayde Sunsabre", "Duke Silvver", "Smol Gluvs", "Morton Saltbringer", "Eibh\u00ebar", "Johosh The Mighty", "Newtype Khan", "Yummy Kiwi", "Grasszanine", "Artakama Nahid", "Xanvias Einzbern", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Berserker", "Berserker", "Spellbreaker", "Vindicator", "Reaper", "Chronomancer", "Chronomancer", "Berserker", "Spellbreaker", "Firebrand", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7804, 2241, 398, 320, 242, 213, 208, 260, 264, 281, 394, 361, 342, 441, 429, 579, 11996, 4912, 315], [13630, 580, 503, 2910, 806, 10911, 325, 740, 342, 511, 397, 514, 1593, 460, 548, 1545, 997, 400], [437, 452, 2160, 412, 5389, 18912, 339, 459, 936, 436, 177, 422, 225, 550, 300, 333, 415, 428, 412, 8666, 504, 507, 440, 5713, 11684, 480], [3204, 633, 536, 678, 419, 207, 690, 250, 818, 209, 976, 229, 484, 401, 5697, 435, 395, 361, 4926, 6909, 511], [454, 394, 828, 276, 3015, 10744, 2583, 9060, 270, 1099, 250, 343, 5841, 519, 267, 249, 353, 378, 255, 3483, 458, 384, 296, 16863, 848, 399], [413, 493, 2028, 323, 12961, 3509, 1416, 468, 610, 161, 404, 2244, 11159, 324, 241, 233, 242, 289, 378, 254, 393, 802, 2555, 923, 526], [345, 209, 174, 171, 1026, 210, 231, 227, 342, 353, 301, 681, 457, 461, 4624, 1933, 384], [355, 441, 503, 430, 10570, 604, 3726, 421, 310, 257, 229, 188, 2736, 680, 953, 313, 349, 226, 328, 3773, 489, 330, 1126, 4462, 2009, 340], [412, 433, 2070, 450, 9245, 3695, 14470, 617, 233, 222, 228, 912, 541, 397, 313, 304, 219, 245, 288, 6802, 345, 335, 859, 4739, 2716, 456], [314, 346, 1200, 539, 9786, 4458, 2098, 370, 293, 192, 384, 961, 516, 198, 199, 249, 536, 434, 1323, 556, 518, 301, 2177, 1974, 242], [218, 683, 736, 295, 13614, 3570, 1567, 365, 236, 358, 195, 134, 487, 720, 212, 274, 274, 273, 236, 314, 373, 391, 328, 2119, 2722, 469], [401, 233, 706, 240, 10856, 1745, 813, 304, 226, 547, 166, 102, 1337, 718, 181, 165, 235, 320, 248, 351, 399, 355, 294, 2639, 2082, 294], [343, 231, 461, 297, 1957, 1248, 3102, 305, 580, 203, 156, 487, 663, 235, 184, 267, 231, 343, 8285, 329, 321, 380, 17340, 2306, 211], [257, 227, 579, 440, 13605, 3358, 1946, 307, 280, 147, 168, 235, 304, 1058, 176, 194, 164, 207, 261, 265, 228, 383, 195, 1990, 1938, 188], [233, 241, 372, 377, 1913, 1587, 321, 275, 225, 288, 161, 552, 190, 374, 176, 147, 192, 131, 250, 316, 288, 245, 223, 558, 1002, 221]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

