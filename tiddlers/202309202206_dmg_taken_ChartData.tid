created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Sub Train", "Arcanophage Farra", "Leafzel", "Klengah", "N\u00edcki M\u00edraj", "Etchery Howls", "Mistwalker Cael", "Koralia Danai", "Oo Dads Mad", "Tegan Parker", "Eibh\u00ebar", "Bella Sassy", "Cat Wigglebooty", "Solus Luxes", "Raelyn Sunray", "Dark Sidiuz", "Jimbo The Pleb", "Necrotic Windrunner", "Lord Erin The Wise", "Sister Elon\u00edth", "Aira Draugr", "Meme Soulmessor", "Latedoctor", "Dugup", "Belvyn Brightblade", "Jmbrage Warrior", "Jmbrage Rev", "Rafaellagabriela", "Narnia Honeyspark", "Mellody Moon", "Ateriuz", "Lord Erin The Wise", "Mar\u00eda Callas", "Lowella Slytherin", "Vangar Deathclaw", "Vinetacle", "Squishy Jellyfish", "Darks Na", "Sana Minatozak", "Mort\u00e4rion", "Milly Dew", "Orrk", "Senhora Lagertha", "Pyre Doomstrike", "Wreddguard", "Verris The Wanderer", "Whaaaaaggghhhh", "Gun Powder Latte", "Lowella Slytherin"];
const professions = ["Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Druid", "Chronomancer", "Druid", "Herald", "Firebrand", "Berserker", "Tempest", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Reaper", "Berserker", "Reaper", "Tempest", "Firebrand", "Herald", "Reaper", "Reaper", "Berserker", "Firebrand", "Berserker", "Vindicator", "Firebrand", "Druid", "Dragonhunter", "Berserker", "Weaver", "Dragonhunter", "Scourge", "Harbinger", "Scrapper", "Firebrand", "Dragonhunter", "Scrapper", "Scrapper", "Tempest", "Willbender", "Soulbeast", "Reaper", "Firebrand", "Untamed", "Berserker", "Reaper", "Harbinger"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[536.7996, 267.5769, 58.6176, 431.5385, 395.4314, 1194.1972, 2900.0625, 3094.0, 1668.831, 0.0, 2424.1915, 5232.1818, 2191.7174, 5751.3125, 3262.9032], [723.2424, 83.8462, 186.9697, 601.4769, 383.2542, 0.0, 130.2791, 2162.21, 1248.8571, 3382.2264, 0.0, 2309.9804, 4494.7619, 4323.6818, 780.0143, 2094.5128], [622.7817, 471.1154, 238.9394, 950.4462, 189.3509, 523.2941, 244.2206, 1912.1333, 1881.6383, 2114.8358, 1616.9683, 6518.0667, 1899.34, 769.16, 2448.6905], [569.8152, 246.0, 205.2759, 997.8939, 106.2131, 0.0, 336.1884, 2798.8125, 3426.9487, 1842.9057, 2027.5893, 5614.4, 3071.0, 3362.1923, 2583.8605], [573.6, 254.0, 122.5833, 811.0606, 217.4615, 0.0, 836.3623, 2164.087, 1424.5714, 3649.4848, 259.2857, 2123.1034, 2095.8462, 2536.0263, 288.3973, 1092.7593], [993.8509, 599.0741, 748.1587, 1152.3818, 1160.2656, 3263.3611, 2198.2558, 2869.5, 1891.0, 7188.8462, 1315.4561, 1060.8136], [907.3182, 652.8036, 125.7059, 2154.9322, 3992.2647, 3906.8864, 2221.6897, 3602.0606, 4843.6, 1147.2192, 2521.2564], [466.5925, 451.8125, 472.7812, 1111.9545, 872.25, 0.0, 646.2647, 1847.8158, 2671.3333, 1660.32, 0.0, 1533.8852, 3056.4828, 1314.1961, 1603.3077, 2404.5122], [376.0522, 104.5385, 192.4091, 5176.6818, 120.5455, 0.0, 442.1014, 1607.7155, 3453.2703, 1340.7843, 2240.3947, 5618.4, 3810.8077, 1242.75, 3068.6], [1208.9535, 566.6667, 687.1562, 306.45, 0.0, 599.6522, 3657.8696, 9721.5385, 2679.6053, 388.1429, 999.9851], [612.3231, 306.6415, 0.0, 1733.4545, 2980.129, 2788.0845, 0.0, 2395.6667, 4457.5789, 3840.2222, 1426.3585, 2813.7778], [946.5385, 649.6066, 223.4643, 646.6269, 1779.9697, 2127.4651, 1830.7049, 0.0, 1473.0, 2577.7143, 3226.5667, 1032.5806, 3463.2632], [247.5581, 487.3276, 0.0, 650.3768, 2099.375, 2116.6818, 2684.7536, 2100.2759, 3583.5, 4004.2941, 3756.1, 1042.25], [545.5282, 124.0, 90.72, 522.5625, 262.1887, 301.3913, 2095.2435, 2148.2941, 3510.7742, 2478.8857, 2773.3929, 3408.7586], [416.6486, 81.4091, 64.2258, 284.8333, 427.8, 0.0, 250.5072, 2958.6154, 2899.6842, 1921.1525, 0.0, 1376.8824, 2960.8571, 1948.0179, 3351.0, 699.0656], [1407.4921, 3443.5135, 3557.5319, 1956.2264, 3611.5, 10045.0, 1275.8276, 3057.4634], [690.1285, 274.28, 93.5556, 610.4844, 1118.9508, 3399.8846, 4030.125, 2248.6176, 0.0, 2443.5692], [1373.1494, 7487.8, 2702.2667, 0.0, 2505.4545, 4583.56, 2430.1613, 2014.0, 11992.1538], [417.0546, 418.5397, 423.8302, 300.7826, 1045.8203, 1095.9792, 1851.6364, 1648.2344, 3140.2759, 1807.2545, 1245.3438], [389.3939, 296.0893, 465.5429, 1650.8034, 5574.3125, 1370.6438, 0.0, 1363.0714, 2798.4615, 2024.2222, 2142.2121, 3466.7353], [276.4462, 493.463, 0.0, 275.7015, 1464.0769, 3064.9, 655.0571, 0.0, 750.875, 4733.7419, 4110.9231, 1269.5507, 768.3966], [670.4935, 235.875, 335.4, 688.3385, 485.32, 1861.7857, 2117.9646, 4647.4286], [843.6197, 673.0, 290.8947, 600.6087, 211.082, 207.5147, 1760.2, 2752.4419, 1209.7333], [871.9394, 260.8033, 0.0, 896.6232, 2960.7619, 6659.5385, 2151.9701, 0.0, 1411.5849], [878.5781, 599.0612, 0.0, 605.3768, 2473.188, 3613.9737, 5521.0667, 0.0, 2126.9623], [589.9956, 112.3704, 84.931, 1173.8462, 268.8689, 0.0, 738.6618, 2423.7564, 2415.0333], [346.5714, 2174.0656, 5100.6, 4263.8065, 1664.2656, 3864.1795], [321.0397, 65.6538, 214.4583, 702.697, 286.1569, 303.9333, 1367.7934, 2856.6333, 1980.4638], [565.9385, 139.9556, 0.0, 189.5507, 1258.1374, 1511.9362, 677.5077, 0.0, 509.7231, 1424.6562, 3605.6, 640.2, 584.6], [2992.3158, 0.0, 2729.4889, 3818.5185, 4441.7083, 1683.5882, 675.871], [870.9372, 295.1739, 145.2903, 942.1746, 728.8596, 0.0, 1227.7246], [2111.7451, 3689.1034, 1195.2245, 1318.1639, 737.2131], [1048.394], [594.1406, 602.7647, 0.0, 544.2879, 1379.4615, 2576.55, 1630.9344, 0.0, 948.3077], [222.7865, 3619.05, 2983.4615, 463.5455, 1679.9531, 13875.2], [3356.1579, 2762.1489, 2258.5, 1333.75], [4555.7391, 1804.371, 2594.3333], [4134.84, 1582.5614, 1892.25, 533.3051], [4683.5714, 1099.5085, 1308.4091, 1133.0167], [3447.6, 10211.6667, 395.8551, 5139.4286], [3548.4333, 1050.9831], [1602.3548, 1003.3529, 288.3913, 1474.7317], [1404.5161, 988.0192, 1561.5135], [230.2319, 459.8, 247.3468, 634.3023, 209.25, 30.5088, 179.0328], [387.8571, 14767.0, 0.0], [988.4308, 238.2791, 436.7955], [446.5625], [182.7213], [297.4722], [118.4545]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

