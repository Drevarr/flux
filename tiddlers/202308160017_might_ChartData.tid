created: 20230816001725000
creator: Drevarr
tags: ChartData
title: 202308160017_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Mmathuss", "Jimbo The Pleb", "Eloraaaaaaaaa", "Vera Khin", "Sakis Unleashed", "Explorer Theodora", "Absern", "Sister Seraphena", "Absern", "Tribal S", "Pafema", "Alarics Clone", "N\u00e8yp\u00e4", "Gamora Titus", "Xanvias", "Bella Sassy", "P\u00edogre", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Berserker", "Firebrand", "Dragonhunter", "Druid", "Firebrand", "Dragonhunter", "Firebrand", "Firebrand", "Druid", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Reaper", "Firebrand", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.7326, 7.7055, 8.84, 0.0, 10.5829, 8.6944, 1.4535, 6.8544], [5.236, 2.3728, 4.0832, 5.233, 1.5717, 3.3856, 2.0698, 0.9901, 2.8133, 10.8553, 3.0192, 4.8797], [2.2275, 5.8512, 3.6602, 11.6883, 3.5204, 2.6649, 0.0, 1.8786, 23.832], [1.1794, 0.8303, 0.319, 1.2542, 2.124, 0.0302, 0.0, 0.0, 0.0, 0.0, 1.0296, 0.5226, 0.0, 0.0, 0.7676, 0.7426, 0.6188, 0.7293, 2.0737, 0.0, 0.0, 0.0, 6.6125, 0.9996, 0.4547, 3.575, 0.0, 3.0429, 0.0, 0.396, 0.4662, 2.1515, 0.6502, 1.5034, 2.2484, 0.4914, 0.752, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0128, 0.0, 1.7438, 0.8378, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.4565, 0.3591, 0.0, 0.0, 0.0994, 0.4845, 0.0, 0.0, 0.0, 0.304, 0.1376, 0.2109, 0.052, 0.0, 0.606, 10.0293], [0.0, 1.3781, 4.3837, 14.7147, 0.0, 4.2696, 2.5267, 5.7822, 1.7213, 3.4522, 10.9427, 4.497, 1.6539, 0.0, 0.0, 1.9462, 0.0, 0.0, 0.0], [0.4153, 0.0, 0.184, 0.3689, 1.6376, 4.4704, 2.8998, 0.0, 0.0, 0.4441, 0.2604, 1.8202, 0.0, 2.3249, 0.66, 2.471, 0.0, 0.8559, 0.0, 1.367, 8.7379, 4.6452, 0.0, 4.6603, 0.0, 2.646, 0.0, 0.2808, 0.0902, 7.7224, 0.3187, 2.8536, 3.8438, 1.6069, 0.4662, 1.9869], [3.0576, 15.141, 5.4354, 4.3198, 2.3328, 0.0, 6.0172, 6.0775, 13.4964, 12.328, 0.5187, 0.0, 0.0, 0.0, 1.2495, 8.5958, 0.457, 0.0, 0.8635], [1.4045, 2.1684, 1.3514, 2.0428, 1.5525, 21.944, 0.5992, 7.0307, 9.3509, 8.9528, 0.8032, 3.9984, 0.0, 5.9347, 5.3871, 3.192, 0.0, 4.5883, 0.539, 4.6189, 0.0, 13.3571, 0.9633, 0.0, 3.6837, 4.6182, 0.0, 2.9937], [6.0606, 6.6224, 3.6562, 18.6355, 18.8126, 11.5216, 2.9606, 4.964, 9.6466, 3.8991, 5.4563, 15.1473, 7.0314, 0.0], [4.6656, 5.1404, 2.827, 5.2314, 4.044, 0.7947, 0.0, 6.2832, 0.9177, 3.432, 1.7738, 1.1482, 3.2256, 1.143, 1.8368, 1.7105, 4.0637, 2.042, 2.2287, 1.3937, 2.0272, 1.3942, 0.0, 5.8253, 0.0, 5.5587, 5.852, 1.3844, 6.6003, 3.1593, 6.4872, 2.8877, 6.6659, 2.703, 4.4683, 1.4846, 3.4262, 6.1062, 0.0], [3.9462, 0.0, 8.1991, 4.5985, 12.9448, 8.096, 4.4304, 5.4022, 3.8394, 2.7336, 7.3889, 21.5133, 9.6125, 6.4355, 5.4555, 2.5223, 3.0184, 7.326, 4.9145], [1.6183, 1.4274, 0.0136, 2.1506, 0.0, 22.4166, 4.6536, 9.3835, 0.0, 1.2464, 1.2775, 5.3992, 4.9526, 5.0747, 5.969, 1.2096, 7.0364, 0.572, 0.0, 0.0, 4.9533, 0.579, 4.003, 0.0, 2.0145, 2.8416, 0.0, 1.845, 5.2433, 0.4954, 3.5575, 0.0, 0.853, 0.0, 3.7875, 19.1649], [0.0, 4.202, 3.4648, 8.034, 5.6677, 4.62, 0.0, 4.5101, 2.7125, 2.6048, 4.3645, 0.0, 0.0074, 8.3238, 0.0, 2.7109, 6.2062, 5.0184, 3.2531, 3.1299, 1.0602, 4.2527, 0.0, 3.6847, 12.3066, 0.0, 3.4839, 5.7072, 11.5125, 4.3774, 8.3496, 0.0, 4.7016, 7.881, 14.2346, 9.8685, 0.8491, 4.6878, 5.0198, 4.3616, 1.1322], [0.0, 40.9846, 4.9728, 6.0619, 3.9301, 5.32, 2.924, 0.0, 6.0298, 3.2232, 5.6924, 0.0, 4.753, 4.8834, 4.4574, 4.3416, 7.296, 0.0, 0.0, 3.5635, 0.0, 0.0, 1.8768, 15.2973, 3.1457, 0.0, 0.0, 0.1238, 5.2669, 0.0, 1.2196, 0.5605, 43.9899], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1958, 8.0106, 4.284, 3.7306, 4.3613, 5.7104, 7.159, 4.0626, 2.4329, 2.1423, 1.9173, 3.895, 1.944, 1.9457, 2.769, 2.3478, 1.6634, 1.8375, 26.4678, 2.4416, 8.0272, 7.0347, 6.5664, 1.9355, 3.7944, 0.861, 4.1554, 3.1105, 5.586, 5.5728, 0.968, 4.263, 2.7742, 5.1198, 4.0093, 3.4314, 3.5482, 4.2187, 1.921, 1.7799, 6.0858, 2.0202, 4.0838, 7.7256, 6.6048, 3.5131, 1.9344, 2.4816, 3.2432, 5.8631, 35.8473], [0.0, 26.5353, 8.6578, 2.8818, 9.1806, 4.0892, 2.8899, 7.2981, 0.0, 6.6409, 28.7853, 7.4697, 13.4652, 3.3454, 21.5566, 4.5657, 9.7314, 4.606, 6.1992, 5.5949, 22.322, 13.0433, 17.0242, 6.8438, 10.4381, 1.5792, 6.9597, 2.364], [3.5816, 4.8208, 0.0, 3.2016, 3.6915, 1.507, 3.4224, 8.2676, 3.9658, 5.8344, 1.4751, 6.6473, 0.8465, 4.7843, 1.6995, 2.8002, 23.7734, 9.5109, 1.4338, 17.7262, 3.1544, 14.1708, 3.1515, 3.9024, 13.9872, 12.4289, 8.823, 9.5491, 4.2812, 7.6758, 9.6406, 7.2594, 2.912, 0.0, 0.8695, 1.6335, 5.56, 1.8518, 0.433, 1.7706, 0.7326, 6.532, 5.8425, 34.7053, 2.4304, 14.1998, 0.0, 7.0984, 1.7977, 7.8336, 0.5208, 0.0, 0.0, 7.4693, 4.32, 0.0, 5.1254, 5.1122, 2.6151, 6.8394, 4.2693, 0.0, 3.2217, 3.3478, 0.0, 0.0, 2.2083, 12.3136, 0.7407, 5.7825, 11.0945, 8.8064, 0.8381, 1.2948, 1.6567, 4.7722, 52.3311], [0.0, 0.0, 0.0, 0.0, 3.342, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0571, 8.3232, 6.135, 4.9038, 10.7656, 4.2835, 2.5498, 5.8575, 2.9373, 23.3011, 0.0, 14.1708, 5.981, 11.9806, 1.5727, 17.5224, 7.82, 11.9592, 13.9421, 22.0915, 12.1252, 11.4701, 6.7452, 15.7368, 14.9498, 16.0506, 2.876, 1.9363, 1.5577, 2.3133, 1.65, 2.831, 3.2498, 3.7128, 5.2279, 1.7087, 5.1937, 52.193, 4.0544, 26.8219, 8.0326, 17.1608, 4.0698, 8.2552, 3.591, 7.4606, 4.0153, 8.8844, 17.4744, 0.0, 9.2904, 6.9355, 4.2918, 9.1656, 9.5133, 4.1457, 5.5291, 4.8654, 11.0349, 3.8721, 12.1387, 18.035, 8.8064, 8.9411, 6.5936, 6.8879, 2.677, 13.7259, 140.5095]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

