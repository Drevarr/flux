created: 20230212214943000
creator: Drevarr
modified: 20230705163519133
modifier: drevarr
tags: ChartData
title: 202302122149_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Venomina The Fierce", "Arka\u00f1", "Zadie Miststep", "Ark Darkness", "Bambiae", "Hyde En Sikh", "Veggie Mac", "Joh Oshi", "Blanco Padre Guard", "Primal Shield", "Zaylen Harker", "Bella Sassy", "Koralia Danai", "Sygaldry Verdandi"];
const professions = ["Tempest", "Spellbreaker", "Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[32.0166, 85.7189, 94.6145, 0.0, 29.452, 0.0, 12.296, 25.9382], [0.0, 102.0802, 110.9862, 9.1331, 11.988, 13.6917, 10.2099, 63.1334], [33.264, 132.4315, 98.0294, 18.6569, 17.168, 35.2539, 18.8934, 51.2467], [18.4338, 167.2882, 101.8462, 18.083, 31.931, 18.4338, 36.6336, 43.2566], [29.8267, 168.4738, 199.7752, 0.0, 57.313], [32.7928, 142.9834, 135.594, 4.884, 63.122, 19.9386, 34.6662, 52.7818], [27.9972, 177.84, 157.0882, 23.8583, 43.031, 21.285, 42.2982, 47.3894], [74.2619, 178.1957, 143.9305, 13.4432, 53.095, 0.0, 72.097, 137.1696], [40.0554, 142.5091, 276.9131, 0.0, 113.849, 20.0277, 14.9757, 117.8832], [106.5834, 298.7712, 266.8691, 16.5201, 33.781, 88.1496, 22.6077, 220.2979], [61.2612, 356.1542, 442.9404, 15.4945, 190.143, 55.6974, 20.776, 200.5392], [88.0664, 556.7578, 538.5593, 24.5177, 125.356, 20.1465, 39.7203, 243.0874], [115.7864, 636.4301, 394.7292, 50.7936, 133.533, 27.4032, 66.2966, 289.9651], [146.8051, 618.5275, 414.315, 20.3174, 172.901, 87.1497, 93.2461, 214.8269], [50.395, 586.9906, 743.6578, 73.6629, 176.749, 88.0704, 20.7082, 284.2973]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

