created: 20230626012920000
creator: Drevarr
modified: 20230705163538476
modifier: drevarr
tags: ChartData
title: 202306260129_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grim Grooblin", "Imalou", "Ygyn", "Ylsgavor", "Free H\u00e4nd", "Stark Wall", "Palm Sauce", "Alarics Clone", "Tribal S", "N\u00e8yp\u00e4", "Kosair", "Free H\u00e4nd", "Mammary Mission", "Kosair", "High Sorcer Baradun", "Drevarr Moonwillow", "Necrotic Windrunner", "Traidoruns Maximus", "Kosair", "Vesnan", "Astraea Lumena", "Synomi\u00f1 Spyce", "Nbezerkzz", "Vipares", "Kosair", "Reaper Madnesss", "Tootsie Pop Rocks", "Toushay", "Sl\u00e4ngin", "Alarics Bane", "Charr Surethang", "Sofya De Nova", "Xanvias", "Fablegodx", "Johosh The Mighty"];
const professions = ["Chronomancer", "Firebrand", "Firebrand", "Druid", "Vindicator", "Firebrand", "Vindicator", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Renegade", "Scourge", "Willbender", "Weaver", "Scrapper", "Scourge", "Firebrand", "Guardian", "Scourge", "Firebrand", "Scourge", "Scourge", "Renegade", "Dragonhunter", "Reaper", "Scrapper", "Reaper", "Berserker", "Reaper", "Berserker", "Weaver", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[44.3645, 0.0, 0.0], [22.9444, 0.0, 9.8103, 17.5714, 38.125, 0.0, 12.4433, 45.8209, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 12.1961, 3.7059, 23.3228, 72.4118, 68.6719, 18.642], [5.3333, 0.0, 170.866], [299.7551, 135.3472, 10.2836], [7.0787, 359.5294], [57.9444, 0.0, 0.0, 177.9796, 9.7639, 161.5, 135.1134, 0.0, 0.0, 0.0, 41.3016, 39.8235, 71.8583, 11.4353], [75.5556, 52.3617, 78.7273, 24.3793, 99.2449, 84.2778, 121.0882, 125.0619, 39.6341, 105.4478, 0.0, 0.0, 60.5714, 23.4118, 0.0], [54.6389, 0.0, 248.2727, 125.4138, 21.6735, 80.8333, 0.0, 98.7732, 5.7561, 13.6269, 0.0, 0.0, 1.8889, 0.0, 7.2941, 13.8268, 39.5647, 60.7188, 41.2222, 20.0187, 0.0, 25.0333], [11.6111, 60.2766, 952.303, 49.8448, 149.0612, 215.4444], [615.1633, 63.5833, 0.0, 108.5567, 91.3415, 92.6269, 6.8, 24.5781, 14.9753, 197.4486, 0.0, 30.5333], [421.5, 573.5258, 154.5122, 612.05], [316.5984, 116.7412, 298.7656, 469.7284], [4086.0606, 0.0], [1160.3333, 958.8966, 382.3608, 242.7317, 30.6418], [99.1111, 263.5319, 140.9394, 180.4828, 130.5918, 284.0972, 225.4706, 242.6598, 117.6341, 55.4328, 0.0, 0.2258, 13.5238, 80.6471, 41.0294, 174.7244, 238.1647, 121.4219, 103.2099, 184.5327, 0.0, 0.0], [283.7559, 578.7412, 375.1562, 159.1728, 930.6729, 0.0, 85.1667], [193.0278, 12.9574, 197.4848, 219.1034, 232.1429, 251.4861, 59.3824, 289.6701, 7.3659, 485.9104, 839.3, 0.0, 33.5714, 80.7255, 0.0, 30.7638, 86.2118, 353.9688, 246.6914, 389.9626, 43.9615, 10.9], [2930.0706], [313.9444, 934.4894, 169.0, 1003.6944, 11.6392, 817.7612, 64.2, 79.5714, 271.7795, 429.0353], [140.2222, 249.766, 305.9394, 526.0862, 441.5714, 518.7083, 746.0294, 583.8763, 311.7805, 195.6269, 143.7, 116.7742, 249.4921, 25.3725, 18.9412, 294.2205, 752.0], [251.898, 332.3472, 6673.2647, 903.2268, 444.3902, 158.209, 95.05, 0.0, 297.1587], [985.8611, 1333.2553, 925.4242, 278.1552, 444.6939, 504.9861, 2409.4118, 415.7216, 174.0732, 1034.5224], [573.8333, 0.0, 52.2424, 143.2069, 1094.898, 1070.6528, 0.0, 872.1031, 780.6098, 420.4179, 508.35, 133.3226, 211.3175, 282.1569, 289.0, 472.2118, 402.7969, 73.716], [3655.129, 880.8413, 1653.0588, 802.2647, 1400.8661], [340.3611, 57.2979, 284.697, 499.1897, 407.7551, 353.2917, 1579.1176, 1492.7732, 425.0488, 345.3134, 566.45, 250.9032, 259.5873, 22.2157, 197.9412, 492.0945, 719.6706, 710.8438, 472.8395], [142.7778, 1089.0426, 127.3333, 691.1724, 736.8333, 1418.7059, 1091.4536, 0.0, 631.194, 0.0, 0.0, 453.9804, 0.0, 548.5669, 736.8, 1092.3281, 621.9877], [3.5556, 146.9787, 155.1515, 46.5306, 243.4861, 195.3415, 202.5373, 17461.4839, 781.4603, 215.5882, 209.8504, 112.6353, 279.4393, 36.7308, 63.8333], [806.3333, 2868.2766, 586.2424, 821.7069, 385.0612, 921.625, 1148.1765, 197.7732, 863.878, 203.6269, 1359.7, 0.0, 130.873, 927.4902, 0.0, 434.063, 268.6235, 454.9219, 547.2346, 636.9813, 35.9231, 559.5333], [1383.9843, 2137.2471, 3212.3594, 958.4321, 1604.8224, 186.5, 0.0], [1516.2778, 2706.8511, 2362.9394, 444.9483, 201.7347, 817.0, 4875.5882, 3732.268], [1490.1647, 1409.25, 3919.4074, 3428.514, 266.8077, 1303.2], [2948.1064, 1045.8788, 1459.3448, 2201.6531, 1228.9167, 3331.0294, 2923.7732, 597.3902, 2538.4627, 1074.5, 1247.0323, 384.1587, 1944.1373, 618.1176, 838.5118], [935.2778, 3624.1277, 10247.3636, 3143.1897, 761.4082, 2745.4028, 5203.7941, 3520.7629, 417.4146, 5371.9403, 62.5, 766.7742, 1572.4444, 694.1176], [1232.0833, 5291.617, 6137.3333, 4427.8276, 292.3469, 1789.7083, 6480.9118, 3283.0206, 821.2683, 356.6269, 4549.55, 973.5806, 790.3492, 243.8039, 2338.4118, 1423.3937, 1853.9176, 3980.9062, 3072.4691, 2387.7477, 127.4231, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

