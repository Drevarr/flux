created: 20230529221000000
creator: Drevarr
modified: 20230705163532139
modifier: drevarr
tags: ChartData
title: 202305292210_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Oo Dads Mad", "Scarlet Nighttshade", "Mawsmer", "Legacy Of Mathus", "Crusader Siolith", "Sire Nighthawk", "Grilo Gringo", "Rx Medic", "Pamtastic", "Tootsie Pop Rocks", "Inedible Plant", "Tribal S", "Legionstorm", "Venomina The Siren", "Crusader Siolith", "Riann Swordbreak", "Sister Elonith", "Blanco Padre Guard", "Rosie Sunray", "Cyclotechnist Farra", "Smol Bee", "Sumatra Satyricon", "Cat Wigglebooty", "Kary\u00edna", "No Reserv\u00e9", "Riann Swordbreak", "Miphest\u00f6", "Zadey Starbolt", "Gabe Malhorn", "Jeckyll Mbs", "Artakama Nahid", "Lord Erin The Wise", "Mistwalker Cael", "Black Raspberry Pie", "Fribble Bibble", "Tika Fiery", "Rozaalyna", "Tegan Parker", "Lucas Ryn", "Smol Gluvs", "Sygaldry Verdandi", "Xanvias Einzbern", "Johosh Of The North", "Koralia Danai", "Solus Sanctus", "Bella Sassy", "Primal Clone", "Drevarr Moonwillow", "Ryvalia Fazebringer"];
const professions = ["Firebrand", "Spellbreaker", "Willbender", "Virtuoso", "Berserker", "Dragonhunter", "Vindicator", "Dragonhunter", "Firebrand", "Tempest", "Scrapper", "Vindicator", "Druid", "Soulbeast", "Tempest", "Firebrand", "Berserker", "Berserker", "Firebrand", "Vindicator", "Scrapper", "Vindicator", "Soulbeast", "Scrapper", "Vindicator", "Vindicator", "Spellbreaker", "Tempest", "Scrapper", "Firebrand", "Berserker", "Tempest", "Weaver", "Vindicator", "Chronomancer", "Scrapper", "Firebrand", "Scourge", "Tempest", "Firebrand", "Scourge", "Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 23, 0, 1, 4, 0, 6, 9], [0, 36, 1, 0, 3, 0, 3, 7], [0, 40, 1, 0, 3, 1, 5], [0, 0, 3, 0, 2, 8, 2, 23, 0, 4, 11], [0, 31, 1, 0, 4, 0, 6, 13, 4], [0, 38, 4, 0, 4, 3, 5, 9], [0, 3, 6, 1, 22, 0, 3, 4, 1, 24], [5, 27, 1, 7, 16, 1, 7], [1, 10, 1, 0, 3, 1, 4, 2, 47], [1, 0, 4, 2, 2, 8, 1, 28, 0, 1, 23], [0, 19, 1, 0, 1, 0, 1, 0, 2, 18, 0, 1, 11, 0, 19], [0, 6, 0, 0, 4, 1, 0, 5, 2, 5, 0, 0, 18, 4, 30], [0, 21, 1, 0, 2, 0, 1, 4, 3, 16, 0, 1, 7, 1, 22], [3, 38, 0, 6, 33], [1, 4, 2, 23, 0, 3, 30, 2, 17], [5, 16, 0, 2, 26, 2, 32], [0, 2, 38, 4, 46], [3, 17, 0, 3, 30, 1, 40], [1, 29, 1, 0, 3, 1, 3, 1, 2, 9, 0, 2, 6, 4, 35], [0, 4, 10, 3, 37, 0, 2, 5, 1, 37], [0, 26, 0, 0, 2, 0, 6, 3, 3, 10, 0, 2, 21, 5, 30], [0, 11, 1, 0, 5, 0, 6, 10, 2, 33, 0, 2, 8, 4, 36], [0, 41, 0, 0, 4, 0, 3, 7, 1, 13, 0, 1, 19, 0, 30], [0, 15, 0, 1, 4, 0, 2, 8, 1, 19, 0, 0, 26, 3, 40], [0, 36, 1, 0, 3, 0, 5, 11, 5, 8, 0, 3, 16, 1, 35], [22, 1, 0, 3, 0, 2, 8, 2, 33, 0, 2, 18, 2, 41], [1, 71, 2, 0, 8, 0, 6, 11, 3, 46], [0, 34, 0, 0, 3, 1, 4, 7, 9, 16, 0, 1, 36, 3, 43], [0, 41, 1, 0, 6, 1, 7, 5, 2, 11, 0, 6, 38, 3, 41], [64, 1, 1, 3, 1, 4, 9, 2, 33, 0, 5, 40, 3, 1], [0, 46, 1, 0, 7, 0, 7, 9, 1, 39, 0, 2, 27, 2, 28], [0, 49, 1, 0, 5, 0, 5, 7, 6, 41, 0, 1, 21, 2, 36], [1, 63, 2, 0, 5, 0, 0, 4, 3, 35, 0, 3, 26, 0, 34], [0, 69, 0, 0, 9, 0, 5, 11, 2, 33, 0, 1, 9, 2, 38], [0, 61, 0, 0, 4, 0, 5, 7, 3, 15, 0, 4, 46, 3, 38], [1, 52, 2, 0, 3, 0, 2, 9, 4, 46, 0, 1, 28, 2, 48], [1, 52, 1, 2, 4, 1, 7, 7, 8, 29, 1, 4, 39, 3, 41], [0, 56, 1, 0, 4, 1, 4, 8, 2, 38, 0, 3, 47, 1, 45], [0, 60, 0, 0, 4, 0, 1, 9, 3, 45, 1, 6, 34, 4, 45], [2, 67, 2, 0, 5, 3, 5, 16, 5, 48, 1, 3, 25, 5, 34], [1, 62, 1, 0, 7, 0, 6, 13, 5, 46, 0, 5, 34, 4, 44], [0, 64, 2, 1, 10, 0, 5, 16, 7, 48, 0, 4, 28, 3, 43], [0, 60, 0, 0, 6, 0, 5, 11, 3, 48, 0, 3, 36, 5, 59], [0, 74, 2, 0, 4, 3, 7, 10, 4, 46, 0, 3, 38, 6, 54], [1, 69, 1, 7, 0, 6, 12, 5, 49, 1, 3, 38, 6, 58], [1, 68, 1, 1, 8, 3, 7, 9, 4, 52, 1, 6, 39, 4, 56], [0, 64, 2, 1, 9, 1, 5, 18, 7, 51, 1, 6, 44, 4, 51], [0, 74, 1, 0, 8, 0, 7, 10, 6, 49, 0, 6, 64, 1, 48], [0, 86, 2, 0, 10, 3, 6, 10, 6, 49, 0, 6, 54, 2, 62], [0, 82, 6, 1, 8, 0, 6, 14, 10, 49, 0, 3, 47, 4, 68]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

