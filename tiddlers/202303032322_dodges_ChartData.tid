created: 20230303232222000
creator: Drevarr
modified: 20230705163521036
modifier: drevarr
tags: ChartData
title: 202303032322_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Zadie Miststep", "Tribal S", "Azar Fletcher", "Marius Mule", "Lil Cutt Throat", "Insanityburn", "Cat Wigglebooty", "Hud Da Bu Dah", "Blanco Padre Guard", "Drevarr Moonwillow", "Miri Mackenzie", "Fruji", "High Sorcer Baradun", "Blackchars", "Viral Marketing", "Air One Com", "Seren\u00e1 Joy", "Nimplet", "Morton Saltbringer", "Bloodline T", "Koralia Danai", "Delynai", "Panther B Me", "Kahless The Drunk", "Xanvias Tseli", "Cerys Fireblade", "Sumatra Satyricon", "Kosa\u00edr", "Venomina The Siren", "Ryvalia Fazebringer", "Grasszanine", "Sp\u00edcy Cheese", "Oo Dads Mad", "Theevildead", "Ace Hammers", "Lord Erin The Wise", "Erica Nakiri", "Rozaalyna", "Stoic Rapidfire", "Legacy Of Mathus", "Lucky Leipreach\u00e1n", "Arcanophage Farra", "Seren Nightroad", "Aronorf Xideliesi", "Heks Appeal", "Demon Sekhmet", "Newtype Khan", "Eibh\u00ebar", "Smol Gluvs", "Ravioli Fetabringer"];
const professions = ["Tempest", "Druid", "Soulbeast", "Spellbreaker", "Catalyst", "Spellbreaker", "Scrapper", "Chronomancer", "Firebrand", "Scrapper", "Virtuoso", "Scrapper", "Tempest", "Renegade", "Firebrand", "Firebrand", "Chronomancer", "Scrapper", "Chronomancer", "Dragonhunter", "Firebrand", "Scrapper", "Scourge", "Firebrand", "Berserker", "Berserker", "Soulbeast", "Scrapper", "Tempest", "Chronomancer", "Spellbreaker", "Berserker", "Spellbreaker", "Reaper", "Vindicator", "Weaver", "Deadeye", "Scourge", "Druid", "Berserker", "Scrapper", "Spellbreaker", "Scourge", "Firebrand", "Scourge", "Berserker", "Spellbreaker", "Chronomancer", "Scourge", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 0, 0, 0, 1, 1, 1, 1, 0, 0, 8, 0, 0, 0, 7, 2, 0, 0, 0, 7, 0, 2, 2], [0, 7, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 11, 2, 0, 0, 5, 0, 3, 0, 0, 0, 8, 0, 0, 0], [2, 6, 0, 2, 3, 1, 3, 3, 2, 18], [27, 1, 8, 5], [4, 3, 19, 0, 3, 1, 0, 2, 12], [1, 24, 0, 0, 1, 12, 2, 12], [1, 11, 0, 0, 0, 0, 0, 0, 1, 11, 2, 1, 14, 0, 1, 0, 12], [0, 8, 0, 18, 0, 0, 16, 1, 6, 5], [0, 1, 0, 0, 0, 1, 1, 0, 0, 11, 0, 0, 7, 3, 1, 0, 8, 0, 11, 0, 1, 0, 8, 0, 1, 2], [1, 3, 1, 0, 2, 0, 0, 1, 0, 2, 0, 1, 8, 3, 0, 1, 9, 0, 8, 0, 0, 0, 13, 0, 2, 2], [10, 4, 0, 1, 1, 4, 3, 0, 16, 7, 9, 11], [0, 5, 0, 0, 0, 0, 2, 0, 11, 0, 3, 7, 4, 0, 0, 12, 1, 6, 1, 0, 0, 12, 2, 0, 1], [0, 3, 0, 0, 0, 2, 2, 2, 2, 6, 1, 2, 8, 2, 2, 2, 4, 6, 2, 1, 0, 21], [14, 2, 0, 0, 43, 0, 3, 6], [1, 0, 1, 3, 17, 1, 2, 8, 0, 0, 0, 5, 0, 10, 2, 0, 0, 16, 1, 3, 2], [0, 6, 0, 22, 0, 16, 4, 1, 0, 17, 1, 3, 5], [0, 5, 0, 0, 0, 0, 2, 0, 2, 6, 0, 1, 14, 1, 0, 0, 10, 0, 18, 0, 0, 0, 13, 0, 2, 2], [1, 51, 7, 11, 7], [0, 3, 1, 0, 2, 0, 0, 0, 0, 9, 10, 0, 0, 2, 18, 0, 8, 3, 0, 0, 12, 2, 5, 3], [4, 1, 0, 0, 45, 2, 14, 12], [2, 8, 0, 0, 1, 0, 0, 2, 1, 11, 0, 2, 21, 1, 0, 0, 25, 0, 0, 0, 4, 2], [26, 6, 0, 26, 6, 13, 6], [1, 2, 0, 0, 3, 0, 2, 5, 6, 0, 1, 16, 2, 0, 0, 10, 0, 19, 3, 0, 0, 13, 0, 5, 2], [0, 1, 1, 0, 1, 2, 1, 0, 3, 11, 1, 2, 7, 1, 0, 0, 6, 16, 2, 1, 0, 23, 4, 5, 5], [0, 2, 0, 0, 0, 0, 0, 1, 1, 11, 0, 3, 16, 2, 1, 1, 12, 0, 15, 4, 1, 0, 12, 2, 5, 4], [1, 3, 0, 0, 0, 0, 0, 1, 1, 9, 1, 1, 12, 1, 0, 0, 8, 0, 15, 0, 1, 0, 34, 2, 4, 0], [1, 5, 0, 1, 3, 10, 0, 0, 16, 3, 0, 0, 6, 0, 20, 6, 0, 0, 23], [0, 3, 0, 2, 1, 6, 2, 1, 22, 2, 0, 0, 16, 17, 2, 0, 0, 14, 1, 5, 3], [0, 3, 0, 0, 0, 2, 1, 2, 0, 10, 3, 3, 18, 3, 0, 0, 8, 0, 14, 3, 0, 21, 0, 6, 5], [0, 9, 1, 2, 4, 2, 2, 5, 2, 17, 4, 3, 14, 3, 2, 1, 12, 0, 5, 5, 3, 0, 13, 1, 5, 3], [0, 8, 0, 0, 0, 1, 1, 2, 0, 7, 0, 1, 30, 4, 0, 0, 15, 20, 3, 0, 0, 21, 2, 3, 2], [0, 4, 0, 0, 1, 1, 10, 1, 2, 28, 3, 0, 0, 16, 25, 3, 0, 0, 23, 3, 1], [3, 26, 0, 0, 1, 30, 0, 30, 3, 0, 33, 0, 1], [2, 1, 0, 6, 25, 6, 8, 8, 1, 2, 1, 48, 4, 11, 5], [0, 4, 0, 0, 2, 0, 1, 3, 4, 11, 4, 6, 20, 7, 0, 0, 16, 16, 1, 0, 0, 26, 3, 6, 3], [10, 0, 0, 0, 1, 4, 2, 2, 13, 1, 2, 26, 6, 0, 0, 19, 1, 6, 5, 1, 0, 38, 0], [8, 3, 6, 9, 0, 48, 8, 4, 3, 13, 6, 15, 14], [3, 20, 0, 3, 3, 3, 4, 3, 12, 0, 5, 34, 5, 0, 0, 10, 1, 19, 4, 1, 10], [2, 18, 4, 3, 3, 6, 1, 9, 13, 5, 5, 3, 5, 42, 10, 10, 12], [1, 6, 0, 1, 0, 1, 1, 1, 5, 21, 1, 6, 24, 2, 2, 1, 14, 0, 10, 5, 0, 4, 34, 5, 10, 4], [2, 13, 0, 0, 0, 4, 1, 14, 1, 5, 27, 1, 0, 0, 11, 1, 27, 3, 1, 0, 40, 5, 13, 6], [1, 15, 0, 3, 1, 3, 2, 5, 13, 0, 4, 29, 3, 2, 1, 17, 0, 22, 7, 1, 1, 39, 4, 8, 6], [0, 9, 0, 0, 1, 0, 0, 4, 4, 11, 4, 2, 26, 1, 1, 3, 21, 2, 29, 4, 1, 0, 49, 4, 12, 6], [1, 13, 2, 0, 4, 3, 4, 2, 6, 22, 2, 7, 26, 5, 2, 1, 23, 0, 25, 5, 3, 1, 25, 1, 6, 7], [2, 12, 1, 0, 1, 2, 1, 3, 5, 19, 0, 3, 28, 4, 2, 1, 10, 0, 32, 6, 0, 3, 37, 7, 10, 7], [2, 21, 1, 2, 0, 1, 2, 3, 4, 25, 0, 4, 28, 6, 1, 0, 27, 0, 24, 4, 0, 0, 47, 3, 8, 5], [1, 14, 0, 0, 2, 1, 3, 2, 4, 24, 3, 4, 29, 3, 3, 2, 22, 0, 38, 7, 1, 1, 49, 3, 9, 8], [3, 19, 1, 2, 1, 3, 2, 3, 4, 22, 4, 1, 24, 2, 1, 3, 26, 2, 38, 7, 3, 1, 49, 9, 12, 8], [2, 16, 1, 0, 5, 3, 3, 5, 5, 25, 4, 4, 48, 6, 3, 4, 28, 0, 32, 4, 1, 0, 64, 8, 16, 10], [4, 18, 0, 1, 2, 3, 5, 2, 4, 27, 3, 9, 48, 5, 0, 4, 29, 1, 41, 9, 2, 2, 66, 7, 14, 12]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

