created: 20230625212343000
creator: Drevarr
modified: 20230705163535621
modifier: drevarr
tags: ChartData
title: 202306252123_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Zihbb", "Fribble Bibble", "Ryvalia Fazebringer", "Drevarr Moonwillow", "Tegan Parker", "Eibh\u00ebar", "Seiker Novus Terra", "Rahani Sunray", "Morton Saltbringer", "Venomina The Siren", "Miphest\u00f6", "Primal Clone", "Artakama Nahid", "Black Raspberry Pie"];
const professions = ["Chronomancer", "Scrapper", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[139.2992, 102.2801, 114.868, 26.2416], [10.5397, 44.4244, 27.613, 26.508, 26.7792, 39.5685, 19.2692, 0.2117, 20.9784, 0.0, 10.1587, 5.2029, 12.3377, 18.1094, 31.7741, 85.068, 28.4886, 11.6959, 29.3328, 25.872, 35.9033, 15.7951, 32.4298, 25.0416, 21.217, 27.2215], [0.0, 35.035, 76.7502, 59.784, 13.3056, 74.1909, 0.0, 57.6475, 28.8576, 0.0, 68.7499, 0.0, 35.0889, 0.0, 47.7158, 27.8222, 17.6425, 0.0, 0.0, 42.2419, 36.6618, 74.8597, 11.5934, 84.4496, 20.0976, 10.3635], [28.6864, 62.6426, 25.2629, 23.312, 20.5632, 61.6239, 30.6691, 66.8909, 66.5792, 0.0, 35.4838, 5.2875, 22.1852, 28.0627, 46.3296, 51.9082, 41.5226, 0.0, 35.2925, 36.5501, 36.409, 17.7503, 12.1114, 112.048, 11.8296, 48.7775], [270.2758, 284.6243, 42.3541, 38.305, 44.856, 22.9639, 32.4478, 50.9443, 36.7039, 15.6315, 46.0224, 6.15, 38.1542, 109.6954, 135.7752, 112.3717, 0.0, 58.7122, 83.496, 82.4258, 41.9832, 24.1829, 64.8976, 0.0, 137.7655], [95.2727, 133.1359, 42.3846, 74.479, 228.5107, 141.7978, 123.9658, 147.1445, 0.0, 148.9454, 112.5197, 92.3498, 136.5997, 169.6387, 289.6704, 86.8776, 186.8885], [250.8461, 557.0565, 209.6343, 69.513, 91.0896, 36.944, 56.7567, 100.548, 140.3154, 89.7827, 32.0211, 4.4144, 83.4509, 56.544, 126.0341, 104.691, 0.0, 163.9378, 112.8019], [31.7109, 182.7426, 158.2538, 161.445, 56.5824, 134.7549, 47.4859, 226.1448, 58.7329, 92.2151, 9.8136, 0.0, 105.6154, 85.8374, 99.8131, 95.5671, 31.3537, 149.2714, 52.6848, 119.5301, 106.9131, 55.3776, 152.9568, 14.6789, 188.4084], [184.9497, 239.6394, 78.2457, 138.932, 79.7664, 148.9874, 86.8868, 226.6387, 65.4302, 0.0, 119.0783, 10.9794, 11.9347, 100.7578, 68.388, 127.7798, 23.03, 116.1672, 112.0493, 60.808, 71.6698, 76.9709, 207.0256, 45.1051, 200.7064], [72.2202, 344.4641, 123.9646, 95.504, 68.6112, 35.8337, 43.9285, 172.0958, 112.7382, 58.6628, 78.1281, 13.9978, 153.1699, 69.385, 209.4341, 128.7573, 38.1805, 144.755, 75.4051, 109.6694, 86.7447, 96.0941, 163.7856, 76.0147, 195.3865], [528.2706, 613.8132, 157.239, 0.0, 42.5271, 168.9206, 133.8807, 122.4049, 0.0, 9.2816, 174.4589, 79.3805, 232.0522, 213.0128, 49.35, 163.4256, 172.0723, 209.3515, 97.4978], [165.9782, 251.1309, 170.8586, 166.098, 101.0688, 122.6421, 168.1411, 243.7142, 85.2595, 0.0, 120.9026, 30.0753, 56.1422, 101.5603, 101.8157, 173.7389, 103.2944, 0.0, 145.0344, 143.8013, 163.145, 119.6213, 73.7837, 178.0736, 60.5472, 258.1202], [402.1602, 637.3567, 138.6524, 126.195, 57.456, 87.8683, 11.2651, 164.4754, 128.8578, 42.0906, 81.9133, 11.1672, 58.1797, 182.2003, 89.7043, 192.6206, 133.552, 38.4107, 106.1102, 86.5066, 147.8482, 150.3369, 46.0152, 99.0384, 47.2421, 212.1063], [273.7998, 14.4991, 492.791, 178.2012, 26.7177, 172.161, 232.3539, 105.9081, 211.0464, 142.1626, 242.3938, 131.5968, 43.3293, 191.3616, 94.5974, 194.4972, 271.8618, 111.1934, 302.2288, 78.635, 265.2365]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

