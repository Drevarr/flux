created: 20231007222911000
creator: Drevarr
tags: ChartData
title: 202310072229_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Latedoctor", "Glorious Gluvs", "Rina Of Theros", "Zaedy Zae", "Kalisha Lafay", "Xanvias Einzbern", "K\u00e9ld\u00e1", "Ryvalia Fazebringer", "Gadget Windrunner", "Demon Zen", "Mistwalker Cael", "Etchery Howls", "Atria Ruinheart", "Gabe Malhorn", "Tootsie Pop Rocks", "Amiti\u00e9l", "Regis Hawkesburne", "Morv\u00e4rth", "Crusader Siolith", "Sygaldry Verdandi", "Un Bearahble", "Darks Na", "Mc Thornbody", "Kasaka", "Aira Draugr", "Leafzely", "Mitsuri Ai", "Kosa\u00efr", "Skylar Shadowmoon", "Morton Saltbringer", "Belvyn Brightblade", "Lord Erin The Wise", "Nickhia", "Mort\u00e4rion", "One And Onlyy", "Smurf Komdol Fri", "Ax Axun", "Kratoxic", "Tweenkz", "Efreet White", "K\u00e2fkaa", "Senhora Lagertha", "Zaylen Harker", "Raj Gon", "Ajani Nayas Heart", "J\u00eenn Huntsman", "Hyde En Sikh", "Efreet White", "Raj Gon", "Darkandshadow"];
const professions = ["Reaper", "Berserker", "Reaper", "Druid", "Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Scrapper", "Reaper", "Herald", "Druid", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Reaper", "Firebrand", "Firebrand", "Reaper", "Firebrand", "Berserker", "Reaper", "Herald", "Scrapper", "Druid", "Tempest", "Scrapper", "Chronomancer", "Firebrand", "Weaver", "Scourge", "Scrapper", "Berserker", "Chronomancer", "Vindicator", "Berserker", "Soulbeast", "Scourge", "Weaver", "Soulbeast", "Firebrand", "Daredevil", "Dragonhunter", "Druid", "Chronomancer", "Reaper", "Deadeye", "Mirage"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.8313, 0.0, 905.5104, 1151.0877, 234.2222, 3440.7222, 1220.9505, 3398.9444, 859.5663, 2181.4658, 206.5581, 0.0, 0.0, 1796.5169, 385.844, 319.3245, 65.9196, 831.9069, 0.0, 5393.3571], [4689.2632, 67.2143, 0.0, 636.2828, 904.1639, 436.7093, 3034.9138, 1362.52, 2819.7059, 715.1011, 972.0452, 2421.6739, 270.4348, 123.375, 1037.83, 606.5035, 240.1701, 67.3434, 586.1588, 30.3404], [3446.1875, 0.0, 0.0, 1195.0458, 1263.9194, 640.3371, 3175.0943, 1034.932, 5.0909, 2100.0784, 535.4096, 819.4027, 2994.7949, 0.0, 0.0, 1367.955, 311.4539, 270.3221, 54.1212, 463.3175, 0.0, 47.3727], [2898.4118, 0.0, 10.1875, 742.2465, 749.1905, 324.4494, 2535.1364, 1050.3267, 3243.9744, 478.6747, 1591.8358, 4497.625, 399.7778, 1866.5231, 276.4577, 229.3509, 30.2424, 452.2038, 53.2162, 12.7063], [3256.1364, 0.0, 26.9375, 868.177, 556.7903, 549.5, 2109.4423, 2967.0968, 2766.383, 819.6386, 1035.825, 1948.7174, 1378.0435, 0.0, 2317.4348, 299.7, 372.698, 67.6364, 747.9012, 419.2326, 70.717], [3478.2963, 0.0, 0.0, 1080.0337, 1004.7333, 205.382, 2544.1167, 783.3431, 2383.4643, 499.9643, 1859.453, 1682.3636, 13.9167, 0.0, 3350.3333, 185.6071, 223.375, 51.2161, 505.4204, 36.825, 18.596], [10213.3333, 163.4242, 0.0, 1054.8265, 551.4921, 431.6222, 2283.5, 714.1748, 0.0, 2355.7174, 698.716, 1479.36, 2394.2083, 232.3929, 0.0, 2295.6364, 653.0284, 338.3022, 37.09, 698.753, 2.0426, 11.9919], [2716.5714, 45.6207, 30.2692, 1507.2426, 448.8226, 416.622, 2322.9839, 979.9604, 0.0, 2488.3778, 536.3373, 993.4725, 2494.5, 84.6552, 0.0, 731.3505, 384.2979, 255.2483, 21.8132, 341.0515, 61.9211, 21.5827], [1401.6842, 33.2333, 0.0, 740.2105, 603.7302, 300.4217, 2647.6393, 2478.9808, 0.0, 2171.2115, 676.5181, 1261.3868, 3249.2857, 206.3846, 2741.1607, 402.9343, 244.8699, 19.712, 388.4654], [3075.4412, 7.4688, 1169.3947, 498.9839, 493.2809, 3178.675, 3939.9545, 0.0, 1912.7959, 515.4512, 799.4554, 2788.5556, 0.0, 0.0, 2837.8696, 298.7, 235.1544, 0.0, 636.5306, 10.0952, 38.7265], [1622.9091, 0.0, 0.0, 613.9528, 414.0, 391.0562, 2557.5893, 997.598, 2128.88, 645.6265, 711.9955, 3080.0, 67.1364, 0.0, 2576.8571, 449.5143, 260.8013, 58.8718, 496.6938, 28.5208, 24.5574], [1398.4167, 381.8276, 284.9101, 2256.1639, 770.3465, 2341.6909, 489.5904, 699.4886, 1583.5745, 116.9333, 2119.4925, 207.4043, 251.1689, 35.7861, 472.6986, 32.3333], [2018.4286, 0.0, 0.0, 1198.7927, 359.3559, 233.0581, 2805.1667, 2174.2727, 1709.3182, 920.0122, 920.0876, 2126.8205, 0.0, 0.0, 4511.2857, 373.482, 217.292, 55.3838, 504.1286, 37.7184], [3004.4839, 0.0, 0.0, 586.8023, 283.6667, 349.2472, 2058.4035, 488.31, 2311.3409, 295.0602, 1007.4698, 2153.3488, 0.0, 53.65, 902.449, 281.4071, 218.0933, 9.0825, 528.654, 0.0, 29.3968], [0.0, 0.0, 1164.7953, 766.0, 420.2561, 2932.28, 1135.33, 2524.6852, 492.0247, 1260.7143, 2960.4815, 61.8095, 1253.3077, 323.85, 171.7123, 42.8021, 431.9928, 30.2212], [1974.3611, 0.0, 1593.3469, 709.6552, 353.0899, 4066.7037, 999.3465, 0.0, 1359.8039, 725.4938, 1125.7071, 1488.95, 153.8333, 0.0, 2429.95, 437.3475, 489.255, 32.899, 421.7415, 0.0], [4095.5909, 0.0, 0.0, 991.9533, 490.4426, 471.6889, 6039.3684, 1250.1961, 0.0, 2271.5625, 686.825, 1398.2411, 1807.5455, 0.08, 0.0, 6292.2, 304.6715, 557.7385], [2967.3148, 614.3049, 1520.287, 1542.7234, 147.069, 3659.9032, 553.5105, 291.4901, 19.1523, 672.3504, 14.4167, 58.5433], [2660.5652, 0.0, 925.0283, 443.2414, 189.2697, 2054.6897, 600.59, 2181.1143, 372.5542, 1361.7712, 1747.7111, 0.0, 0.0, 2169.7059, 354.6357, 169.02, 42.6448, 315.7536, 60.1376], [4063.0, 0.0, 1262.35, 229.0159, 165.4578, 2879.1346, 459.4, 1642.725, 631.7952, 995.5329, 3751.2857, 22.4545, 0.0, 5124.65, 346.0072, 222.6622, 26.1189, 342.045, 0.0, 3.5556], [6944.25, 0.0, 1905.8824, 551.5806, 135.1429, 3356.1463, 3461.4783, 0.0, 1683.8833, 908.4881, 1745.1364, 3177.8846], [204.5875, 2504.1765, 1049.1386, 1970.4815, 902.6026, 1602.5793, 1300.9773, 183.5714, 141.122, 2578.3836, 732.75, 258.7533], [0.0, 1363.1518, 490.7627, 563.0111, 3040.1304, 1266.9604, 0.0, 8553.0, 623.8539, 4413.087, 86.5464, 650.7335], [1275.7738, 323.6379, 386.8539, 1168.3973, 866.0388, 2.3824, 410.3103, 1277.7439, 1858.15, 369.963, 3547.4528, 312.6028, 170.1854, 70.3299, 439.6746], [3810.2778, 5.0595, 31.8065, 1057.2296, 813.8033, 551.8539, 2879.5536, 1021.9216, 0.0, 2343.6047, 390.679, 1063.5163, 2317.75], [3841.6452, 0.0, 0.0, 2388.2895, 865.871, 699.5977, 4655.4211, 756.3939, 1751.72, 869.253, 1675.7831, 2314.5349, 100.0714, 0.0, 1075.5479, 233.9065, 153.9597], [316.2414, 2339.6271, 622.6778, 0.0, 2020.463, 474.8493, 762.4977, 1022.8696, 421.381, 1379.6667, 322.1007, 159.6099, 46.6723, 408.7007, 0.0, 92.3646], [127.7273, 0.0, 881.4179, 508.0167, 140.3846, 1623.7544, 430.3039, 1701.8824, 501.0, 580.9227, 690.5, 276.5, 0.0, 1860.6176, 123.2482, 234.9652, 102.5989, 457.294], [4241.45, 24.9643, 1837.7403, 782.3621, 818.5632, 3444.8302, 1360.9412, 3044.96, 563.525, 467.75], [25.2424, 3538.9804, 291.679, 777.863, 3397.2632, 256.8714, 274.2667, 53.7806, 637.8164, 0.0, 89.8305], [4338.1579, 0.0, 0.0, 721.7872, 449.4921, 354.6517, 2172.8305, 493.6392, 0.0, 1393.069, 823.5181, 694.5227, 1452.3721], [2779.7143, 416.2045, 966.3571, 23.5385, 4.2308, 1875.197, 3050.75, 232.5528, 92.4555, 679.8005, 0.0, 217.1966], [785.0857, 2423.9844, 1101.4, 145.2781, 38.0659, 567.5873, 911.7143, 2239.1818], [0.0, 1321.3895, 856.2241, 386.618, 4229.0417, 915.8725, 0.0, 281.7143, 901.5655, 1377.6364], [0.0, 1130.5962, 807.6271, 782.6795, 3455.8974, 1180.6061, 2367.7119], [15.9615, 45.0312, 924.7007, 744.6557, 192.9231, 2828.0345, 617.9515, 25.5, 1798.9677, 153.0964], [1981.2987, 204.4286, 147.1971, 64.0223, 436.7017, 11.2609, 645.1858], [51.945, 835.3009, 334.4314, 360.0], [121.041, 868.7667], [121.2667, 56.0, 633.9327, 402.4214, 86.5051, 563.3826, 87.6042], [0.0, 0.0, 598.8816, 310.5035, 200.6937, 72.8273, 575.6392, 26.36, 69.6154], [106.8442, 827.3365, 501.6449], [301.2534, 20.3737, 372.3073, 0.0, 47.8941], [881.92, 0.0, 2025.8182, 0.0], [0.0, 0.0, 741.0098], [0.0, 0.0, 5.104, 1399.7556], [1214.0278], [216.8467], [155.2773], [0.0, 122.7111]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

