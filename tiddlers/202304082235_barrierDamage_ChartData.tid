created: 20230408223537000
creator: Drevarr
modified: 20230705163524882
modifier: drevarr
tags: ChartData
title: 202304082235_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Leaf You Dead", "Kos\u00e4ir", "Sister Elon\u00edth", "Sarah Dresser", "Irish Mini Rev", "Yuuka Chou", "Venom The Ferocious", "Anima Frog", "Koralia Danai", "Oo Dads Mad", "Shh Im Sleepy", "Mmathuss", "Xyntharos", "Kosair", "Sofya De Nova", "High Sorcer Baradun", "Zadie Miststep", "Inedible Plant", "Cat Wigglebooty", "Xanvias Einzbern", "Tribal S", "Kat Bon Z", "Smol Daddy Tika", "Kmpek", "Sumatra Satyricon", "Anita Strips", "Sp\u00edcy Cheese", "Aronorf Xideliesi", "Fribble Bibble", "Bella Sassy", "Tac Mancer", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Tootsie Pop Rocks", "Grasszanine", "Cthullun", "Seren Nightroad", "Rozaalyna", "Arcanophage Farra", "Drevarr Moonwillow", "Newtype Khan", "Panther B Me", "Be\u00eb", "Skye Nightroad", "Smol Gluvs", "The Gun Guardian"];
const professions = ["Harbinger", "Vindicator", "Firebrand", "Tempest", "Vindicator", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Weaver", "Tempest", "Tempest", "Vindicator", "Scrapper", "Berserker", "Druid", "Berserker", "Berserker", "Vindicator", "Soulbeast", "Chronomancer", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Chronomancer", "Firebrand", "Scrapper", "Spellbreaker", "Chronomancer", "Scourge", "Scourge", "Spellbreaker", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scrapper", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2488, 8784, 0, 0, 0, 0, 1719, 736, 0, 3718, 269], [2578, 0, 0, 4, 1458, 218, 3596, 0, 0, 294, 130, 741, 0, 1689, 7145], [0, 3461, 3177, 2249, 3765, 62, 546, 0, 0, 0, 3528, 2085], [3706, 6739, 0, 0, 100, 1242, 2964, 0, 0, 0, 4211, 0], [696, 0, 0, 0, 0, 8577, 0, 0, 266, 0, 0, 1199, 0, 8307, 269, 0], [0, 1573, 445, 1179, 7161, 3609, 0, 0, 0, 0, 0, 0, 3007, 2403], [0, 269, 0, 8155, 586, 5535, 2719, 0, 0, 0, 0, 0, 0, 2530], [10948, 9520], [0, 0, 0, 0, 0, 665, 1210, 0, 0, 0, 0, 272, 0, 151, 2501, 5043, 0, 297, 3402, 0, 741, 1769, 1343, 275, 0, 275, 0, 495, 4167], [1288, 0, 1248, 0, 0, 453, 6699, 0, 0, 0, 0, 217, 0, 1248, 1248, 0, 3867, 9988], [269, 10139, 0, 0, 0, 0, 0, 261, 1848, 4954, 0, 2533, 685, 2576, 225, 0, 0, 165, 0, 3155], [2953, 3378, 790, 0, 0, 0, 2460, 0, 0, 0, 0, 588, 0, 0, 1007, 3831, 0, 2502, 0, 2520, 538, 2521, 4963, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 86, 0, 0, 0, 7023, 0, 0, 1617, 0, 0, 0, 0, 5563, 269, 3437, 1304, 269, 3452, 3765, 0, 2495], [0, 4905, 1248, 2495, 9302, 3770, 1333, 3345, 0, 0, 0, 0, 3171, 263], [3310, 0, 282, 0, 562, 0, 5428, 0, 0, 269, 0, 0, 1781, 3113, 5277, 0, 1202, 269, 430, 2986, 2022, 585, 550, 180, 281, 0, 37, 0, 957, 697], [0, 0, 3567, 0, 0, 0, 0, 4272, 4258, 3551, 0, 0, 1592, 0, 3139, 1288, 0, 0, 2727, 0, 0, 3461, 0, 3611], [2443, 0, 131, 0, 0, 1771, 913, 0, 0, 0, 0, 2463, 0, 0, 0, 3618, 2218, 1012, 2058, 2361, 5392, 0, 230, 0, 0, 0, 0, 2431, 5702], [2298, 275, 486, 0, 907, 3841, 8174, 0, 0, 0, 0, 0, 695, 0, 2295, 0, 4578, 0, 2456, 0, 1703, 1839, 0, 0, 0, 0, 0, 0, 0, 3111, 1329], [1969, 255, 255, 0, 1038, 509, 9041, 0, 0, 669, 0, 2760, 10462, 2601, 5330], [1288, 1332, 937, 0, 0, 782, 2731, 322, 0, 0, 0, 1249, 1389, 0, 7082, 0, 6120, 3425, 81, 0, 2378, 4877, 2349], [2595, 0, 3919, 0, 0, 0, 5972, 0, 0, 0, 0, 0, 0, 0, 3090, 6340, 3695, 0, 3461, 304, 2995, 3662, 898, 788, 314, 0, 0, 0, 0, 0, 132], [4936, 0, 1249, 8185, 18256, 0, 1403, 0, 3263, 2026, 0, 0], [1563, 0, 1605, 593, 0, 3737, 3003, 5039, 0, 2496, 0, 8726, 1508, 1288, 6170, 2470, 278, 0, 0, 0, 0, 0, 1515], [7379, 124, 2757, 418, 0, 6572, 0, 0, 0, 0, 1284, 217, 0, 3437, 263, 1207, 1248, 0, 0, 0, 3992, 6372, 0, 5217, 1288, 0, 0, 0, 0, 0, 0], [3340, 0, 267, 0, 0, 3085, 9678, 0, 0, 0, 1230, 2204, 0, 1246, 0, 1963, 0, 0, 0, 3617, 4140, 3020, 0, 1274, 0, 0, 0, 0, 2507, 5627], [5001, 0, 0, 0, 0, 451, 6220, 880, 311, 0, 3203, 0, 0, 1248, 4378, 0, 3515, 0, 0, 8754, 0, 3877, 2475, 0, 0, 0, 0, 0, 1015, 1408, 1248], [0, 2534, 478, 0, 0, 877, 8511, 20, 0, 1511, 0, 0, 1246, 6675, 3493, 3461, 2610, 4613, 2444, 0, 0, 0, 0, 0, 0, 0, 1164, 6150], [1289, 0, 609, 0, 337, 0, 4819, 0, 0, 0, 0, 0, 0, 4860, 6331, 4699, 5316, 0, 0, 3828, 2647, 942, 2304, 0, 0, 0, 0, 0, 0, 5056, 3821], [1224, 169, 3400, 0, 466, 1438, 10177, 108, 0, 686, 179, 4680, 853, 0, 2084, 7827, 1513, 712, 2360, 5311, 5430], [5459, 0, 1465, 0, 1557, 4287, 0, 0, 0, 0, 0, 0, 0, 0, 2776, 3067, 7588, 0, 3461, 9638, 0, 0, 1718, 0, 0, 0, 0, 0, 0, 4301, 3758], [14279, 4184, 1843, 0, 1984, 0, 9706, 0, 0, 318, 0, 5927, 0, 0, 15559, 0, 2503], [3078, 3456, 0, 0, 217, 2492, 6373, 0, 282, 215, 0, 0, 0, 0, 3798, 6104, 2507, 3753, 3618, 2211, 3818, 5478, 2473, 2715, 0, 0, 0, 0, 0, 0, 1288, 5728], [0, 1128, 167, 0, 0, 6910, 0, 0, 0, 0, 5454, 358, 295, 5010, 9716, 6161, 4677, 0, 1523, 8630, 2150, 4973, 0, 10, 0, 0, 0, 0, 0, 1424, 4132], [6152, 4107, 329, 0, 1902, 9988, 16689, 0, 14, 255, 0, 4803, 41, 402, 5715, 49, 14043], [6171, 0, 1248, 0, 692, 4061, 5791, 0, 3430, 337, 0, 3790, 0, 0, 3713, 9271, 1500, 3367, 3456, 4893, 5060, 2495, 0, 3453, 0, 0, 24, 0, 3889, 2047], [6105, 0, 2781, 0, 0, 10443, 7156, 0, 0, 2, 0, 3145, 52, 0, 5427, 5262, 3708, 1248, 3437, 4754, 6120, 288, 0, 1911, 1043, 1818, 0, 0, 0, 0, 6293], [16580, 0, 1971, 3543, 5730, 29142, 2226, 0, 548, 0, 2096, 32, 0, 11299, 3925], [7753, 2644, 1803, 0, 0, 733, 9219, 0, 0, 0, 8460, 14381, 5221, 7747, 0, 3629, 12043, 10639, 8704], [5779, 0, 0, 0, 0, 605, 8014, 0, 0, 924, 0, 3354, 0, 0, 4908, 11155, 6865, 3530, 0, 8389, 16121, 6434, 3457, 1066, 2528, 336, 0, 166, 1054, 4380, 5339], [5674, 864, 492, 82, 463, 1407, 5927, 445, 0, 126, 72, 1296, 2059, 38, 10656, 12840, 4719, 4069, 4218, 3684, 8688, 6157, 5135, 5459, 24, 442, 0, 0, 0, 0, 4910, 6737], [7308, 1760, 2963, 0, 1029, 1775, 18514, 1248, 0, 349, 1248, 2963, 487, 0, 4822, 5836, 2732, 5230, 4602, 5719, 7010, 214, 0, 2719, 0, 0, 0, 1343, 0, 8442, 9913], [6756, 0, 3474, 0, 1528, 5026, 18591, 606, 0, 2, 0, 3537, 0, 0, 2465, 3745, 3961, 5799, 8959, 4904, 12513, 12398, 4173, 635, 415, 0, 0, 0, 0, 0, 3655, 6573], [8685, 3934, 217, 0, 1164, 6302, 16441, 633, 0, 235, 0, 8787, 505, 0, 9702, 15570, 12857, 0, 6014, 15909, 3489, 9374, 8895, 3485, 0, 0, 0, 0, 1191, 10764, 4191], [20846, 275, 11285, 35631, 18636, 16255, 3909, 2969, 0, 0, 0, 26538, 24521], [12726, 275, 3744, 0, 1215, 6740, 18550, 889, 0, 0, 1250, 3953, 260, 0, 10984, 10957, 13392, 2550, 3474, 7331, 12502, 5354, 11320, 2086, 2721, 577, 0, 0, 2, 0, 16413, 12799], [27099, 78833, 268, 854, 10180, 4225, 528, 323, 14493, 27141, 11284]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

