created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Zevikah", "Ingrid Stendottir", "Elonith Primal", "Wix Myschief", "Erin Celes", "Drevarr Moonwillow", "Legoh Brave"];
const professions = ["Druid", "Druid", "Tempest", "Scrapper", "Herald", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[61.9624, 0.0, 84.6556, 0.0, 0.0, 0.0, 16.884, 80.413, 65.3255, 0.0, 37.0875, 48.7687, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.3736, 23.472, 69.1187, 0.0, 32.0069, 52.6781, 39.46], [124.4751, 87.7095, 117.5012, 76.95, 55.08, 0.0, 47.6438, 54.2506, 13.8742, 83.2944, 0.0, 47.5378, 0.0, 55.7275, 95.7528, 0.0], [89.7579, 0.0, 29.1782, 0.0, 58.7656, 30.6, 0.0, 0.0, 0.0, 0.0, 0.0, 70.9536, 49.7091, 30.5862, 25.346, 23.5494, 69.914, 45.0874, 0.0, 38.6836, 32.4764, 0.0, 61.4387, 0.0, 0.0, 0.0, 19.1594, 63.1115, 0.0, 65.9534, 0.0, 55.1544, 8.5536, 92.7382, 25.886], [0.0, 26.1756, 0.0, 5.8072, 0.0, 0.0, 0.0, 0.0, 2.8576, 130.526, 0.0, 45.0277, 58.9176, 69.81, 70.5592, 56.292, 64.6602, 32.3965, 21.462, 122.935, 59.6437, 0.0, 0.0, 0.7682, 0.0, 0.0, 100.9109, 5.2014, 102.912, 0.0, 26.12], [174.9843, 8.6104, 39.0432, 22.8284, 0.0, 0.0, 15.2266, 0.0, 107.3517, 0.0, 11.3989, 39.3748, 89.6192, 29.6525, 127.167, 39.5287, 0.0, 57.564, 17.9246, 43.536, 80.3354, 84.7048, 46.72, 81.5638, 22.8, 161.56, 0.0, 30.9158, 49.5448, 119.3573, 0.0, 114.3556, 10.9008, 134.541, 43.7714, 19.0669, 54.3442, 23.386], [118.2182, 55.3201, 31.689, 99.9736, 170.4542, 95.0016, 164.5014, 20.7309, 165.7161, 282.416, 184.2633, 68.4228, 96.2377, 169.8732, 305.006, 187.6654, 82.62, 48.0538, 123.7298, 240.389, 168.9925], [19.1678, 44.4736, 142.3363, 74.6985, 123.2055, 93.3578, 416.9664, 337.4611, 203.9802, 201.666, 285.7176, 438.256, 461.5184, 321.96, 329.6254, 421.9004, 534.214, 525.2337, 333.5438, 288.82, 250.0039, 265.9129]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

