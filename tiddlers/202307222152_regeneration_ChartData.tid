created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Yummy Kiwi", "Sygaldry Verdandi", "Sub Train", "Vee U", "Tegan Parker", "Tribal S", "Crusader Siolith", "Tootsie Pop Rocks", "Venomina The Sly", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Tempest", "Druid", "Firebrand", "Scrapper", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.5447, 234.8424, 43.3898, 53.0744, 6.534, 20.1991, 6.9131, 51.775, 5.9052, 22.575, 108.0009, 35.7602, 52.7195, 56.0634, 17.0607, 29.376, 12.3576, 30.8784], [13.2762, 240.5534, 17.0085, 62.6158, 128.8949, 33.2878, 0.0, 31.3087, 70.1241, 15.9817, 17.9949, 51.6086, 24.4902, 9.9789, 43.4592, 5.3922, 63.2016], [0.0, 121.3151, 13.6275, 93.4684, 72.7146, 19.4357, 24.3046, 60.2597, 49.3726, 2.9412, 15.9705, 83.2265, 65.0629, 33.0614, 17.0128, 22.185, 86.0976, 29.7768, 60.6144], [0.0, 422.7856, 23.3289, 53.6506, 76.8558, 45.3578, 23.0846, 22.0379, 41.5028, 14.82, 19.404, 24.5532, 39.6347, 23.1115, 34.0085, 8.3607, 38.448, 6.384, 57.2544], [1.9326, 297.4901, 15.6285, 109.2624, 179.0155, 33.1214, 38.6613, 71.3252, 17.3508, 39.7845, 195.9279, 64.2306, 52.4538, 45.739, 28.4577, 84.672], [303.7203, 0.0, 40.273, 64.5236, 27.8705, 9.5951, 68.1718, 156.1948, 87.4608, 11.067, 126.4158, 48.9622, 57.6219, 48.1743, 6.4728, 63.9792, 43.3314, 172.6368], [359.2987, 0.0, 138.1417, 388.6439, 22.5492, 7.077, 164.1304, 224.6636, 85.7325, 6.0025, 13.2762], [0.0, 681.8564, 30.6705, 109.0173, 150.3317, 33.5491, 21.7474, 71.4485, 75.2601, 100.7988, 10.2375, 140.9597, 49.7371, 36.2974, 28.1603, 13.746, 32.0544, 0.0, 44.856], [15.6472, 494.6055, 0.8073, 223.0074, 64.7062, 122.5066, 0.0, 275.2773, 27.36, 17.2305, 214.3428, 126.1365, 0.0, 83.2976, 36.5139, 140.7456, 42.2712, 123.2448], [18.4405, 1689.4117, 44.8362, 505.7238, 451.9998, 117.7546, 0.0, 30.5095, 169.6977, 334.8415, 108.9452, 105.3665, 34.1799, 35.0175, 80.0496, 71.7174, 145.0512], [144.5035, 4262.1217, 17.9676, 482.4005, 481.9321, 486.8899, 362.2459, 287.0527, 605.6018, 357.5268, 241.479, 553.4424, 176.792, 253.7682, 147.7987, 130.0302, 356.0976, 168.3894, 238.8624], [352.5136, 3666.7953, 73.5057, 727.6456, 398.6818, 315.3665, 175.5981, 482.0575, 771.0333, 102.0072, 246.8445, 780.7254, 349.279, 332.7387, 228.3522, 180.6468, 780.7104, 93.6966, 414.96]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

