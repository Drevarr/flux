created: 20230703220627000
creator: Drevarr
modified: 20230705163541252
modifier: drevarr
tags: ChartData
title: 202307032206_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Be\u00eb", "Sub Train", "Kary\u00edna", "Mistwalker Cael", "Inedible Plant", "Demon Sekhmet", "Gamora Titus", "Gavann", "Lord Erin The Wise", "Big Baby Norn", "Mike The Archmagus", "Smol Daddy Tika", "Smol Dome Dim", "Morton Saltbringer", "Oo Dads Mad", "Xanvias Einzbern", "Ateriuz", "Johosh The Mighty"];
const professions = ["Reaper", "Scourge", "Firebrand", "Vindicator", "Vindicator", "Vindicator", "Berserker", "Dragonhunter", "Firebrand", "Weaver", "Mechanist", "Weaver", "Berserker", "Berserker", "Chronomancer", "Berserker", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16.2727, 0.0, 32.625, 2.1948, 8.3663, 31.4035, 26.5833, 70.8333, 18.012, 26.2674, 3.7969, 38.7661], [0.9637, 0.0, 1.1389, 0.0, 0.5593, 0.0, 18.3245, 2.5333, 3.8244, 4.5484, 16.4419, 59.0676, 58.1395, 53.4815], [3.1244, 2.7083, 1.4921, 0.0, 0.0, 14.6008, 1.219, 5.7786, 9.7204, 6.0465, 10.0405, 29.3273, 1.0465, 3.1852, 11.8542, 13.0179, 0.0, 7.5149, 6.0175, 5.8148, 8.1786, 2.7229, 5.8488, 0.0, 29.2456], [20.5648, 0.0, 2.5, 2.1508, 1.9661, 0.0, 8.9176, 7.4952, 30.313, 1.7204, 4.6512, 9.8243, 3.6545, 30.5349, 0.0, 2.9583, 2.9286, 0.0, 0.3267, 0.7719, 6.287, 51.0, 2.1807, 15.8488, 0.0, 15.5789], [0.0, 3.5429, 30.0694, 8.754, 0.0, 10.1212, 16.1521, 0.0, 2.0229, 16.8817, 0.0, 1.8919, 12.0, 0.5581, 9.8148, 0.0, 0.0, 17.4805, 0.4752, 0.0, 0.0, 27.131, 34.747, 0.0, 1.1719, 17.2515], [24.8031, 0.0278, 0.0, 0.0, 9.1212, 18.8112, 18.7143, 21.4275, 15.6667, 5.2558, 0.0, 0.0, 0.4419, 0.4815, 2.7292, 11.4286, 0.0, 0.4059, 5.8596, 12.7685, 1.9048, 6.8193, 2.1977, 0.0, 18.0351], [0.0, 0.0, 6.8175, 0.0, 0.0, 38.7199, 0.381, 0.0153, 6.957, 17.9535, 16.1818, 32.4419, 0.0], [31.6852, 49.8214, 61.494, 19.5698, 19.6875, 132.5029], [31.0697, 0.0, 5.8321, 117.043, 53.3649], [5.3782, 25.9861, 3.5714, 3.2881, 26.0532, 3.0286, 3.4809, 58.1398, 0.0, 44.7432, 32.3818, 3.0698, 79.7778, 0.6458, 76.9821], [17.7636, 0.0, 7.7593, 3.3542, 0.0, 0.3377, 24.0, 4.3158, 38.213, 93.5952, 70.2651, 15.3023, 3.5938, 169.0643], [39.9637, 0.0, 2.5417, 1.9365, 0.0, 31.0963, 0.0, 3.6794, 45.3011, 19.3256, 9.4595, 47.6182, 36.9535, 45.1852, 4.5781, 97.4327], [32.3896, 8.0693, 44.1754, 2.9537, 38.3095, 214.253, 159.2326, 204.2812, 57.7135], [0.0, 11.901, 206.2632, 45.3889, 117.7143, 266.0723, 45.2442, 91.8906, 37.7661], [0.0, 12.4583, 7.0397, 0.0, 5.4545, 44.8124, 2.3905, 0.0, 128.9273, 77.7442, 42.463, 10.1964, 32.4156, 37.7129, 5.4386, 18.6481, 16.619, 26.4337, 62.6047, 13.4531, 55.4152], [0.3057, 12.4444, 2.8413, 2.7458, 0.0, 2.8314, 1.0952, 1.9091, 79.2326, 46.463, 209.3542, 0.0, 118.4935, 1.7228, 18.4737, 97.5648, 121.2381, 216.8434, 208.314, 255.3125, 236.731], [65.7202, 0.9028, 13.8016, 0.0, 42.4854, 2.5524, 10.8931, 2.9462, 0.0, 43.8649, 161.4727, 25.8837, 8.3889, 88.875, 135.5, 181.3117, 156.1089, 222.3158, 55.1204, 197.3929, 331.3976, 102.907], [2.8135, 14.0, 0.0, 13.8136, 0.0, 30.8137, 0.0, 0.0, 15.4194, 10.907, 81.9459, 5.3636, 2.8372, 53.3519, 55.9792, 73.5, 71.5325, 73.396, 207.0175, 132.7593, 236.7143, 64.8675, 273.9419, 61.125, 251.4327], [13.6166, 0.0, 0.0, 3.8254, 6.5593, 62.6882, 0.0, 0.0, 0.0, 0.0, 43.0811, 224.6909, 27.5116, 76.1296, 67.3958, 116.1964, 225.3766, 81.495, 75.1404, 95.2778, 210.0119, 247.1566, 194.2209, 189.9219, 238.0994]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

