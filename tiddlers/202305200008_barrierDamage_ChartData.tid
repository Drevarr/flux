created: 20230520000848000
creator: Drevarr
modified: 20230705163530629
modifier: drevarr
tags: ChartData
title: 202305200008_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Rhaeltob", "Cat Wigglebooty", "Black Raspberry Pie", "Bella Sassy", "Kosa\u00efr", "Air One Com", "Blanco Padre Guard", "Drevarr Moonwillow", "Nomi No Mi", "High Sorcer Baradun", "Rozaalyna", "Binkety Bonk", "Newtype Khan", "Grasszanine", "Smol Gluvs", "Be\u00eb", "Madame Charrlotte", "What Dooin", "\u00c1rk\u00e1ntor", "Lucky Leipreach\u00e1n", "Paul Bjart Mist Cop", "Cyclotechnist Farra"];
const professions = ["Soulbeast", "Scrapper", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Tempest", "Scourge", "Scrapper", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Reaper", "Scourge", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 912, 11738, 0, 0, 0, 0, 5042, 0, 20249, 10491, 7039, 2804], [1145, 38762, 987, 4304, 756, 1200, 0, 0, 833, 1670, 2440, 355, 355, 242, 655, 4132, 2112, 0, 0, 847, 0, 1896], [0, 49050, 0, 1585, 0, 2462, 1188, 0, 245, 0, 3161, 2792, 0, 0, 0, 674, 1138, 0, 0, 0, 1285, 0, 0, 0, 1449, 1546, 0], [141, 55279, 0, 2506, 0, 584, 0, 0, 3394, 0, 0, 2130, 1859, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1089, 1188, 185], [295, 55242, 159, 5829, 269, 553, 0, 0, 683, 0, 3031, 295, 0, 979, 0, 2872, 522, 0, 261, 261, 3465, 0, 817, 124], [0, 61611, 0, 3202, 0, 295, 0, 0, 793, 295, 4968, 3544, 2, 0, 0, 274, 708, 363, 0, 1000, 261, 0, 0, 1711, 76, 410], [0, 63783, 0, 1922, 0, 1188, 0, 2229, 3603, 0, 0, 652, 1840, 0, 0, 2038, 261, 0, 0, 0, 0, 0, 0, 0, 0, 261, 1959], [316, 51394, 1125, 6186, 149, 514, 0, 248, 3071, 438, 2068, 652, 1429, 735, 0, 811, 416, 383, 0, 0, 184, 739, 2526, 33, 3679, 2733, 1029], [1188, 63781, 1248, 5097, 0, 2709, 0, 0, 0, 0, 305, 0, 4, 1188, 0, 783, 1154, 0, 0, 2895, 1184, 1483], [572, 78754, 0, 1829, 0, 1139, 0, 0, 2420, 0, 1248, 0], [0, 75718, 1248, 2779, 4924, 0, 0, 1702, 0, 962, 0, 0, 0, 0, 2126, 1244], [23218, 5201, 1509, 1914, 1429, 8633, 0, 0, 0, 6906, 459, 27303, 957, 12392, 12196, 6507], [28, 74273, 144, 7058, 0, 3044, 0, 1323, 0, 0, 3046, 2969, 2866, 0, 0, 1331, 3977, 1076, 0, 0, 1921, 2, 261, 640, 643, 6217, 1428], [0, 88231, 3426, 5996, 0, 1188, 0, 0, 4936, 0, 6877, 6751, 0, 0, 0, 2327, 1510, 0, 0, 0, 1872, 0, 3401, 915, 4630, 3622, 1867], [426, 78517, 0, 10900, 0, 2999, 0, 556, 4716, 1364, 8847, 3832, 0, 1008, 628, 2523, 4134, 0, 0, 0, 3391, 0, 1784, 3941, 7289, 5821, 2618], [0, 91584, 135, 4000, 0, 6045, 0, 266, 8296, 0, 7919, 2615, 0, 1384, 0, 10700, 6643, 626, 0, 0, 0, 0, 3530, 0, 3556, 5240, 6392], [0, 141325, 0, 5841, 0, 7187, 0, 0, 3633, 0, 2309, 9005], [9366, 0, 0, 5042, 33480, 0, 1166, 30063, 1372, 111148, 7761], [435, 125363, 735, 8220, 0, 7714, 0, 0, 5797, 0, 9056, 11731, 7015, 1439, 0, 6074, 3652, 0, 0, 0, 2532, 0, 1510, 0, 12172, 4564, 2551], [1676, 73147, 1092, 12416, 430, 11374, 0, 4522, 17915, 1851, 16040, 16750, 7912, 3207, 720, 7371, 20387, 0, 0, 0, 2000, 10345, 8775, 1003, 7348, 20226, 15224], [1066, 163813, 7151, 2591, 7724, 1243, 2071, 18415, 7292, 17459, 8434, 12253, 5517, 649, 15622, 12571, 0, 0, 0, 5754, 0, 39410, 2473, 8109, 17177, 7092], [11831, 290461, 4725, 17194, 0, 6789, 641, 4136, 17211, 0, 19069, 18037, 10575, 2549, 0, 14925, 11520, 6783, 0, 4715, 1935, 19993, 239, 9584, 17603, 17875]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

