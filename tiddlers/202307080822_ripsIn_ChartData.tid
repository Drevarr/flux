created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Heymerino", "Venport", "Free H\u00e4nd", "Elonith Requiem", "Herm E Licious", "Conky Jr", "Pet Pirate", "Luke The Knight", "Warrior W Warrior", "Rapiorel", "Lost Uber Driver", "My Heel Your Sack", "Govinda Ektar", "Free H\u00e4nd", "Kittendoo", "Legoh Brave", "Synomi\u00f1 Spyce", "Ain Sof Aur", "Elonith Requiem", "No Reserv\u00e9", "Heymerino", "Legacy Of Mathus", "Drevarr Moonwillow", "Ateriuz", "Emobilized", "Shaca Booey", "A\u00fcrora Windrunner", "F\u00f9gly", "Aronorf Xideliesi", "Charr Surethang", "Twinks R Us", "Geradenil", "Wall Knot", "Mother Ship", "Gestern Yesteryear", "Bae Ken"];
const professions = ["Virtuoso", "Specter", "Renegade", "Reaper", "Firebrand", "Herald", "Druid", "Berserker", "Spellbreaker", "Willbender", "Herald", "Dragonhunter", "Vindicator", "Vindicator", "Firebrand", "Tempest", "Scourge", "Guardian", "Scourge", "Vindicator", "Chronomancer", "Berserker", "Scrapper", "Berserker", "Vindicator", "Berserker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Firebrand", "Tempest", "Firebrand", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0504, 0.0435], [0.0, 0.069, 0.1681], [0.0576, 0.0248, 0.1111, 0.0323, 0.0206], [0.0, 0.0124, 0.0178, 0.0517, 0.2593, 0.129, 0.0825], [0.0, 0.062, 0.0, 0.0345, 0.0672], [0.0, 0.0439, 0.0, 0.0345, 0.1849], [0.0, 0.0698, 0.0, 0.1379], [0.0252, 0.0031, 0.0, 0.0345, 0.0, 0.0161, 0.0103, 0.0107, 0.0, 0.0327, 0.033, 0.0154, 0.0909, 0.0, 0.0362], [0.0, 0.0853, 0.0, 0.1034, 0.1176], [0.0288, 0.0248, 0.0356, 0.1207, 0.3704, 0.0968, 0.0427, 0.0323], [0.0436, 0.0989, 0.0, 0.0303, 0.0, 0.0749, 0.0, 0.0603, 0.1008], [0.0576, 0.0248, 0.0415, 0.0, 0.3704, 0.1774, 0.1237], [0.0108, 0.028, 0.003, 0.0, 0.037, 0.129, 0.0, 0.0, 0.0182, 0.1319, 0.0, 0.0853], [0.0178, 0.0345, 0.0285, 0.0, 0.04, 0.0989, 0.0, 0.0909, 0.0, 0.0362, 0.0204, 0.1207, 0.0504], [0.0968, 0.1237, 0.0178, 0.0, 0.0509, 0.1099, 0.0, 0.0606, 0.0, 0.0749], [0.0653, 0.2069, 0.1111, 0.129, 0.0825, 0.0285, 0.0753, 0.0545], [0.0214, 0.0215, 0.0291, 0.0549, 0.0, 0.0606, 0.0, 0.0672, 0.0, 0.181, 0.1092], [0.0108, 0.0124, 0.0267, 0.0, 0.2742, 0.0, 0.0214, 0.0, 0.0036, 0.022, 0.0, 0.0, 0.0, 0.062, 0.0, 0.0948, 0.0924], [0.0249, 0.0, 0.0582, 0.0989, 0.0909, 0.0, 0.1059, 0.0, 0.0517, 0.1008], [0.0396, 0.0186, 0.0267, 0.0, 0.4074, 0.0, 0.0825, 0.0285, 0.0, 0.0109, 0.1319, 0.0154, 0.0, 0.0, 0.0413, 0.0204, 0.0086, 0.0756], [0.1897, 0.4444, 0.0, 0.0412, 0.0214, 0.0, 0.0291, 0.1099, 0.0, 0.0606, 0.0, 0.0724, 0.0, 0.0345, 0.1008], [0.054, 0.028, 0.0208, 0.1034, 0.4815, 0.4516, 0.0928, 0.0249, 0.0538], [0.0863, 0.0621, 0.0119, 0.069, 0.8148, 0.2419, 0.0309, 0.0427], [0.0288, 0.0373, 0.0326, 0.0, 0.1852, 0.0161, 0.0928, 0.0249, 0.0108, 0.04, 0.0989, 0.0, 0.1212, 0.0, 0.0388, 0.0, 0.0862, 0.084], [0.0373, 0.0148, 0.2069, 0.5556, 0.1129, 0.1134, 0.0178, 0.0, 0.0291, 0.0769, 0.0, 0.0606, 0.0, 0.0284, 0.0, 0.069, 0.1092], [0.0396, 0.0528, 0.0267, 0.0, 0.3704, 0.0645, 0.1134, 0.0107, 0.0538, 0.0, 0.0549, 0.0, 0.0909, 0.0801, 0.0, 0.0431, 0.0672], [0.0396, 0.0373, 0.0297, 0.0345, 1.1852, 0.1774, 0.0619, 0.0142, 0.0, 0.0109, 0.0, 0.0, 0.0303, 0.0, 0.0594, 0.0, 0.0517, 0.084], [0.018, 0.0119, 0.3103, 0.4444, 0.2258, 0.1546, 0.0463, 0.0364, 0.1648, 0.0, 0.0909, 0.0, 0.0672], [0.0297, 0.0172, 0.5185, 0.3387, 0.0309, 0.0427, 0.0, 0.0509, 0.1209, 0.0, 0.1212, 0.0, 0.093, 0.0, 0.0517, 0.2101], [0.0252, 0.0652, 0.0653, 0.0517, 0.2593, 0.1452, 0.1443, 0.0569, 0.0473, 0.1758, 0.1515, 0.0968, 0.0362, 0.0, 0.0431, 0.0504], [0.054, 0.0714, 0.0119, 0.3793, 0.7037, 0.1613, 0.2371, 0.0427, 0.0436, 0.1648, 0.0, 0.1818], [0.0432, 0.059, 0.0534, 0.0862, 0.037, 0.2097, 0.1546, 0.0391, 0.0, 0.0073, 0.1538, 0.0, 0.0606, 0.0, 0.0749, 0.0, 0.1379, 0.0672], [0.036, 0.0404, 0.0831, 0.069, 1.2963, 0.1129, 0.1546, 0.0107, 0.0, 0.0364, 0.011, 0.0, 0.1515, 0.0, 0.0724, 0.0, 0.0603, 0.0336], [0.0719, 0.0373, 0.0208, 0.2586, 0.8148, 0.2903, 0.0206, 0.0178, 0.0, 0.0473, 0.1319, 0.0, 0.0606, 0.0, 0.0568, 0.0, 0.1034, 0.1681], [0.0396, 0.0776, 0.0119, 0.0172, 0.4815, 0.3871, 0.1443, 0.0249, 0.0, 0.0655, 0.1648, 0.0, 0.0909, 0.0, 0.1137, 0.0, 0.069, 0.1681], [0.0432, 0.1304, 0.0386, 0.0, 0.1111, 0.4194, 0.1443, 0.0285, 0.0, 0.0873, 0.1978, 0.0, 0.0606, 0.0, 0.0336, 0.0, 0.1638, 0.1345]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

