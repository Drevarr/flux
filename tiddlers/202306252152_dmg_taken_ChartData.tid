created: 20230625215204000
creator: Drevarr
modified: 20230705163536563
modifier: drevarr
tags: ChartData
title: 202306252152_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Swithblight", "Johosh The Mighty", "Arcanophage Farra", "Lord Erin The Wise", "Grasszanine", "Eibh\u00ebar", "Blancooo Padreee", "Rina Of Theros", "Irish Necroman", "Necrotic Windrunner", "Gavann", "Elon The Mender", "Ryvalia Fazebringer", "Arriasa", "Mistwalker Cael", "Tribal S", "Fribble Bibble", "No Reserv\u00e9", "Crusader Siolith", "Xanvias Tsolice", "Gabe Malhorn", "Sygaldry Verdandi", "Oo Dads Mad", "Primal Clone", "Hulk N Wall", "Imalou", "Tika Fiery", "Gestern Yesteryear", "Rafaellagabriela", "Xyntharos", "Drevarr Moonwillow", "Pale Pam", "Solus Sanctus", "Koralia Danai", "Rafaellagabriela", "Traidoruns Maximus", "Bella Sassy", "Sinsarra", "Lord Prism Guile", "Raziel Umbra", "Hraka Thera", "Decidus Borleaf", "Raelyn Sunray", "Legacy Of Mathus", "Rednuii", "Cersei Crownguard", "Tegan Parker", "Lyra Richbrand", "R\u00eby Skywalk\u00ebr", "Greta Is Meta"];
const professions = ["Reaper", "Berserker", "Spellbreaker", "Weaver", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Reaper", "Scourge", "Firebrand", "Druid", "Chronomancer", "Druid", "Vindicator", "Druid", "Scrapper", "Vindicator", "Firebrand", "Weaver", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Scrapper", "Druid", "Firebrand", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Reaper", "Necromancer", "Chronomancer", "Harbinger", "Herald", "Dragonhunter", "Berserker", "Tempest", "Spellbreaker", "Tempest", "Dragonhunter", "Mechanist", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[400.3049, 70.9623, 120.7197, 454.8158, 50.4, 265.9688, 0.0, 110.2063, 1072.6364, 3174.5161], [8.2073, 170.6923, 141.803, 386.9111, 400.191, 72.6842, 567.1538, 39.125, 426.7759, 530.4639, 811.8696, 2.1412, 53.4935, 33.7742, 23.6322, 99.8108, 32.8889, 75.2333], [7.4545, 147.699, 252.1765, 288.2231, 347.7237, 273.2, 224.5758, 640.0, 222.0566, 497.2284, 968.1304, 14.4824, 75.64, 160.0, 37.5185, 246.5469, 58.0581], [0.0, 56.6429, 148.3881, 198.9124, 500.7717, 456.7895, 18.1304, 300.8644, 460.5689, 5650.2667, 0.5474, 211.961, 0.0], [56.3529, 29.77, 176.6087, 585.3788, 469.6923, 22.3333, 515.8, 1548.0, 332.3175, 317.0679, 876.5435, 7.9059, 69.4868, 0.0, 26.0784, 177.9908, 32.2397, 87.5541], [16.8438, 178.1125, 100.0, 301.9091, 81.9032, 5.6667, 534.2286, 69.1667, 269.5397, 1402.0238, 414.75, 12.1529, 34.0267, 0.0, 28.1842, 197.2632, 48.4524, 3.7377], [2.3951, 91.0917, 130.5932, 304.5748, 152.1169, 0.0, 166.8871, 291.9152, 9840.125, 49.4706, 287.5455, 133.56, 38.6952, 305.1778, 38.2742, 3.2031], [30.8293, 260.5429, 300.2254, 408.8921, 168.4396, 21.8261, 999.9474, 4.0, 440.0179, 221.0354, 259.7556, 5.9479, 169.0779, 0.0, 0.0, 135.5035, 39.6831, 75.7353], [18.2963, 41.3019, 264.7692, 337.2, 169.5733, 42.0526, 334.4595, 163.2174, 322.25, 211.415, 11110.3333, 9.2857, 46.4865, 0.0, 8.7143, 229.2973, 80.6286, 88.5968], [15.2955, 218.3365, 101.8889, 306.0, 0.0, 392.0169, 282.8507, 2768.8485, 0.0, 44.3816, 0.0, 167.4135, 303.8545, 51.2518, 24.2419], [0.0, 99.7843, 81.0156, 285.072, 107.5618, 976.6389, 101.9, 326.9375, 1023.1429, 544.8103, 4.2604, 165.7308, 0.0, 14.1048, 149.8348, 35.1241, 16.8276], [0.0, 95.699, 14.0678, 325.6829, 172.2584, 0.0, 345.4118, 41.8636, 98.4062, 349.8071, 3866.1053, 46.8941, 70.9615, 0.0, 25.6322, 129.2807, 13.7258, 11.9531], [16.6875, 150.4563, 97.5507, 251.288, 98.086, 67.4545, 662.6216, 18.2609, 325.2903, 459.3736, 241.4894, 25.5698, 121.9067, 39.0, 53.9223, 294.1724, 6.1837, 6.4348], [0.0, 34.35, 84.1786, 185.8385, 102.4167, 33.5556, 174.7714, 0.0, 65.9808, 518.1786, 3599.4074, 6.141, 0.0, 9.5196, 220.0, 11.6929, 6.2647], [0.0, 159.1322, 48.6716, 278.5481, 397.6154, 77.8, 121.4857, 0.0, 197.6667, 233.1515, 859.0784, 21.4884, 118.0395, 0.0, 51.019, 226.2544, 5.4959, 2.8], [0.0, 95.1649, 15.5224, 165.2319, 43.2333, 289.4688, 0.0, 89.9219, 367.8723, 3532.8276, 44.4457, 86.5789, 36.7273, 30.8023, 54.5818, 17.7737, 147.6912], [0.0, 96.9592, 65.75, 180.6934, 90.1053, 0.0, 321.5278, 262.0, 158.0, 381.7455, 19239.0, 1.2024, 25.1447, 13.6552, 36.2273, 63.8165, 69.7459, 118.5], [24.5341, 19.925, 74.7538, 207.1704, 136.0989, 41.9474, 396.4706, 117.7778, 173.375, 181.7551, 3169.1667, 25.4699, 51.3026, 29.2857, 18.1485, 142.2566, 11.1407, 5.5915], [3.4375, 25.4608, 38.3485, 153.371, 80.9565, 0.0, 270.3333, 13.3158, 98.0794, 272.1692, 3557.5217, 10.0122, 5.08, 0.0, 82.1798, 157.2844, 3.0072, 2.403], [8.8354, 202.3398, 144.0986, 309.5147, 222.033, 102.4118, 294.8919, 0.0, 125.2857, 209.8265, 422.4643, 0.0, 97.8312, 0.0, 0.0, 109.8673, 0.3796, 86.9559], [0.0, 53.9906, 21.7797, 124.8145, 70.0667, 0.0, 153.2812, 5.5652, 190.1587, 355.9433, 3111.8621, 15.4286, 46.9241, 22.8, 79.5909, 13.7372, 2.2754], [11.25, 122.7159, 52.1186, 116.4766, 60.337, 160.8611, 41.3636, 192.0167, 283.9569, 3594.4091, 0.0361, 76.2297, 0.0, 19.3187, 35.3592, 28.5755, 0.0], [9.473, 105.931, 111.8507, 448.9068, 193.0267, 8.4706, 187.375, 647.0, 196.5738, 365.4286, 329.7333], [10.7841, 80.4476, 101.403, 383.9773, 81.4156, 263.3333, 290.9032, 0.0, 111.4727, 244.6358, 483.8913, 31.5476, 56.8133, 0.0, 5.2381, 123.2478, 4.3095, 0.0], [22.1081, 0.4272, 563.0769, 464.4638, 122.9783, 1.25, 666.2308, 59.8889, 529.3065], [0.0, 43.1, 20.8769, 239.568, 246.6711, 0.0, 89.3333, 24.9615, 275.0791, 3093.6667], [0.0, 85.1359, 2.8333, 210.72, 117.8736, 13.8333, 168.9429, 0.0, 69.4231, 188.8081, 884.7234, 34.631, 81.2468, 0.0, 13.4783, 124.6752, 53.0748, 2.3235], [78.6364, 78.8061, 53.6545, 157.8145, 147.907, 43.2222, 225.9231, 0.0, 38.4516, 246.5051, 629.2553, 12.5647, 17.3247, 47.5333, 0.0, 194.0833, 7.087, 85.9452], [2766.3333, 0.0, 218.3817, 34.9659], [0.0, 64.7788, 100.5797, 147.4436, 120.5111, 97.7222, 253.5429, 0.0, 72.4127, 243.2245, 227.75, 38.3256, 67.2208, 0.0, 79.5789, 109.4495, 25.4524, 0.0], [152.7647, 128.098, 38.697, 221.3689, 59.0333, 38.7368, 133.7714, 2.0455, 85.4921, 223.44, 292.8438, 1.3294, 84.1447, 0.0, 0.0, 91.6727, 21.8468, 6.2029], [1528.1304, 13647.6, 18.0361, 44.6234, 2.4074], [0.0, 46.6018, 67.1786, 71.2576, 153.3222, 0.0, 414.8857, 20.2105, 83.05, 338.4623, 360.8333, 5.0, 124.0, 0.0, 34.407, 88.3909, 2.9362, 42.0145], [0.0, 22.0196, 115.3137, 179.5667, 288.5676, 0.2308, 165.3714, 0.0, 39.3091, 174.9347, 323.1111, 12.4891, 29.1053, 0.0, 28.2955, 113.9029, 40.0438, 0.0], [108.6316, 231.1818, 220.75, 166.1094, 762.0726, 134.2609], [88.6279, 135.3068, 0.0, 367.3235, 140.1053, 98.127, 351.2946, 487.9787, 2.25, 28.6494, 0.0, 10.2414, 55.8797, 1.5036, 36.2698], [0.0, 48.7731, 63.8333, 189.1103, 48.9667, 10.0, 232.0, 29.3182, 71.5397, 206.3313, 154.0179, 3.1146, 61.0132, 48.5862, 0.0, 132.9217, 0.6496, 2.25], [0.0, 112.1017, 297.4789, 3045.625], [15.5, 78.7455, 1732.7436], [41.5745, 422.0465, 48.9921, 6.7536], [648.086], [46.0571, 276.8396, 171.4074], [15.2857, 114.8158, 131.5909, 76.6071, 216.25, 1.5691, 201.3], [29.5938, 63.3418, 0.0, 42.9907, 261.3252, 58.25, 13.0694], [11.011, 46.8701, 0.0, 40.0833, 208.0261, 105.5493, 12.1333], [13.9263, 347.0, 0.0, 16.802, 120.5273, 1.752, 23.8219], [23.6438, 41.9067, 0.0, 0.0, 107.5588, 26.9111, 8.0926], [37.9101, 60.0531, 6.2846, 19.0441], [120.7206], [28.25, 146.6857, 31.3158, 24.5424, 6.7778]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

