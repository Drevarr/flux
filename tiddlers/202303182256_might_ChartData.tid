created: 20230318225613000
creator: Drevarr
modified: 20230705163522543
modifier: drevarr
tags: ChartData
title: 202303182256_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Zadie Miststep", "Koralia Danai", "Blanco Padre Guard", "Tegan Parker", "Aronorf Xideliesi", "Drevarr Moonwillow", "Zaylen Harker", "Johosh The Great", "Bella Sassy", "High Sorcer Baradun", "Newtype Khan", "Demon Sekhmet", "Venomina The Fierce"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.7556, 16.0272, 7.7184, 8.5261, 56.617, 12.5582, 11.5121, 0.7301, 5.4768, 5.994], [0.0, 1.2701, 0.0, 6.0329, 97.0368, 31.3956, 0.0, 3.6288, 5.2392, 9.5179, 2.549, 0.0, 2.3602, 0.9275, 0.0, 0.0, 0.0, 2.7826, 1.0692, 7.3984, 0.0, 2.1092], [15.5449, 13.608, 4.6478, 57.0547, 9.3799, 5.3312, 1.1424, 0.6216, 11.4057, 0.8824, 9.6186, 2.5819, 1.2267, 0.0, 9.4982, 0.8482, 7.4065, 15.4588, 8.4864, 2.603, 8.8052], [6.0844, 10.705, 7.8098, 16.5596, 46.4026, 20.3102, 5.5861, 0.8585, 1.2768, 2.4864, 18.7211, 0.0, 7.1501, 0.9662, 4.0093, 4.7844, 2.0262, 6.3017, 12.5186, 13.5782, 1.7098, 1.3392], [0.0, 0.0, 29.1487, 59.2435, 37.2096, 0.0, 0.0, 1.4784, 0.0, 22.5754, 10.8824, 3.6176, 0.0, 3.2912, 3.672, 1.6963, 0.0, 17.2408, 6.1798, 19.191, 14.162], [6.7522, 28.728, 5.4504, 15.6055, 47.5699, 3.876, 0.0, 1.832, 9.0384, 11.6772, 18.1705, 4.3138, 5.9584, 8.3002, 8.3178, 1.6524, 5.7528, 1.2369, 8.716, 15.3697, 15.4496, 15.4396, 6.3612], [7.7168, 14.5757, 6.0357, 9.3879, 34.583, 20.1552, 6.1384, 1.6156, 8.6688, 20.2908, 20.2156, 8.17, 24.2592, 8.8546, 10.4421, 0.0, 9.9634, 5.195, 5.4424, 10.5583, 14.5792, 13.6532, 11.5841], [19.8485, 22.9219, 8.4317, 16.9598, 36.0422, 8.9148, 4.1418, 10.248, 12.9648, 32.4866, 4.4445, 12.087, 4.8787, 12.357, 0.0, 10.5019, 2.7919, 16.5726, 18.4883, 15.8413, 14.9802, 17.0413], [16.1385, 18.4464, 10.6265, 6.8024, 60.119, 25.6591, 2.1665, 0.5205, 3.7968, 13.6308, 30.8347, 5.2615, 17.7475, 1.6315, 12.6562, 4.7304, 21.3955, 3.6636, 8.5523, 16.7508, 17.495, 10.0038, 16.5391], [19.8485, 15.0595, 7.444, 2.6779, 70.3334, 26.5118, 0.0, 2.6499, 2.352, 9.0576, 33.4305, 10.0981, 17.6198, 8.6645, 5.8045, 4.7412, 17.9194, 3.7814, 6.9564, 26.2399, 24.2406, 6.2779, 14.4634], [17.1402, 1.5725, 12.2812, 124.032, 27.3646, 4.9914, 0.0, 46.5756, 67.4903, 9.8367, 42.6451, 6.9379, 0.0, 0.0, 0.0, 6.9502, 9.207, 9.4446, 17.408, 2.7562, 0.0], [22.6681, 7.1971, 16.3696, 19.8839, 103.4573, 48.8376, 11.0236, 9.6668, 12.8016, 34.9428, 57.1072, 23.8237, 36.2611, 6.1934, 3.2613, 6.9768, 12.191], [14.469, 73.6646, 12.3823, 47.6782, 195.6787, 144.1872, 31.8812, 0.0473, 81.3852, 114.3716, 26.6015, 79.2467, 33.5016, 66.3626, 34.7861], [25.6361, 96.768, 43.9326, 11.4502, 58.0762, 114.6521, 11.2147, 39.4128, 77.7, 58.995, 15.9478, 88.0141, 31.0306, 20.196, 17.7876, 31.3099, 24.7027, 34.5569, 88.699, 75.8989, 29.4501, 66.9935]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

