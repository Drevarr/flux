created: 20230904005836000
creator: Drevarr
tags: ChartData
title: 202309040058_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Chocolate Teapot", "Danu Leon", "Zatcha Wildbloom", "Serene Azura", "Serosh Loux", "Gamora Titus", "Kosair", "Gestern Yesteryear"];
const professions = ["Chronomancer", "Druid", "Firebrand", "Dragonhunter", "Willbender", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.5514, 8.0707, 0.0, 0.0, 0.0, 0.0, 40.0396, 0.0, 17.244, 6.0583, 0.0, 0.0, 12.7461, 0.0, 68.4981, 40.496, 72.3901, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.9372, 17.699, 0.0, 0.0, 0.0, 0.0, 0.0], [24.0451, 0.0, 17.5032, 99.401, 55.5408, 0.0, 30.4784, 68.7373, 3.5213], [20.9449, 0.0, 61.9624, 0.0, 45.527, 6.6643, 75.9483, 96.8112, 19.1117], [0.0, 27.3768, 0.0, 21.2436, 0.0, 48.6153, 30.8477, 19.7321, 15.1189, 39.8779, 29.567, 16.0659, 48.2357, 49.9461, 0.0], [41.3082, 35.5851, 32.4449, 31.3511, 37.4248, 29.8359, 69.9883, 47.4514, 13.6365, 28.0979, 68.9365, 17.7856], [136.1266, 92.3443, 169.1228, 106.4717, 36.1494, 29.9213, 98.7611, 93.4435, 89.676, 0.0, 143.8872, 186.6845, 36.7262, 0.0, 61.9544, 80.0253, 49.5667], [182.974, 90.048, 192.7242, 103.2691, 181.6785, 51.0943, 275.3048, 51.884, 63.564, 73.9122, 173.0554, 35.4332, 99.1811, 58.6637, 520.9558, 193.1918, 92.9451, 216.5702, 91.5178, 21.7997, 39.5052, 82.8148], [15.5984, 0.0, 41.4943, 140.3545, 122.0755, 89.7639, 188.9555, 134.2935, 255.0568, 223.5968, 105.273, 123.408, 144.2195, 116.0495, 14.7598, 122.0877, 176.0443, 285.5939, 194.8694, 201.2227, 196.249, 284.427, 127.6934, 30.2694, 126.3104, 152.5662, 70.2187, 62.4373, 15.4062, 183.5779, 0.0, 199.9286, 0.0, 181.1848, 173.9282, 105.401]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

