created: 20230401222944000
creator: Drevarr
modified: 20230705163523958
modifier: drevarr
tags: ChartData
title: 202304012229_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Aluin Ellesmera", "Tegan Parker", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.0323, 93.6192, 56.1561, 263.406, 29.1475, 0.0, 56.2989, 3.9577, 39.9773, 33.858, 35.2299, 75.7188, 19.9228, 33.6774, 19.923, 56.9856, 4.0176, 52.877, 20.026, 298.2726, 51.6079, 16.7076, 0.0, 25.552, 0.0, 31.8403, 46.188, 41.5871], [138.8218, 285.1994, 77.4497, 370.288, 42.4422, 153.21, 49.5394, 28.8876, 0.0, 74.029, 25.6667, 54.6037, 26.5038, 68.9472, 33.7381, 18.8922, 18.9248, 141.3216, 0.0, 77.2004, 40.0262, 343.3254, 18.5949, 13.6305, 47.8475, 0.0, 35.6895, 0.0, 86.2294, 57.511], [31.0468, 171.8276, 50.2554, 93.9246, 134.2454, 19.6185, 93.7559, 94.8798, 85.2401, 16.3847, 0.0, 32.9426, 188.0928, 0.0, 133.25, 56.5379, 852.5376, 35.8904, 20.1123, 92.82, 37.9168, 11.8998, 38.5805, 131.3485, 128.605], [201.8016, 738.7776, 156.5256, 658.1098, 59.9876, 205.4629, 98.5483, 153.4554, 69.2266, 247.9179, 88.6373, 13.1738, 162.7023, 318.5114, 59.684, 91.9968, 93.8364, 355.3536, 20.1636, 233.6704, 40.0262, 1147.3446, 172.8618, 145.6179, 83.0963, 14.4144, 104.9866, 100.0368, 107.3635]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

