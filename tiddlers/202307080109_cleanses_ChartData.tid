created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Solus Sanctus", "Aronorf Xideliesi", "Drumina", "Eibh\u00ebar", "Morton Saltbringer", "Newtype Khan", "Rahani Sunray", "Mike The Archmagus", "Pet Pirate", "Pale Pam", "Etchery Howls", "Venomina The Siren", "Tribal S", "Mother Ship", "Tegan Parker", "Zaedy Zae", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Druid", "Chronomancer", "Chronomancer", "Spellbreaker", "Chronomancer", "Weaver", "Druid", "Druid", "Druid", "Tempest", "Druid", "Tempest", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0147, 0.0294, 0.0, 0.0, 0.3297, 0.0, 0.1565, 0.2037, 0.2388, 0.0, 0.0159, 0.0526, 0.2439, 0.0423, 0.2213, 0.1241, 0.2308, 0.0, 0.1154, 0.236, 0.0, 0.0, 0.2381, 0.119, 0.1023, 0.1579, 0.0, 0.0408, 0.3429, 0.2217, 0.0349, 0.0261, 0.0642], [0.0, 0.0083, 0.0588, 0.049, 0.0, 0.0, 0.2308, 0.0, 0.1826, 0.0926, 0.1194, 0.064, 0.1587, 0.1053, 0.2927, 0.1408, 0.0, 0.3689, 0.0621, 0.1641, 0.0, 0.2564, 0.2135, 0.0, 0.0, 0.3333, 0.131, 0.2727, 0.1053, 0.12, 0.102, 0.4857, 0.1855, 0.0, 0.064, 0.0782], [0.0211, 0.0, 0.0147, 0.0, 0.0, 0.0, 0.3077, 0.0, 0.2783, 0.4259, 0.0299, 0.084, 0.254, 0.0, 0.3415, 0.0845, 0.2459, 0.0138, 0.2872, 0.0094, 0.1538, 0.3146, 0.0, 0.0, 0.3492, 0.2857, 0.3068, 0.1353, 0.0, 0.1905, 0.1714, 0.2022, 0.0116, 0.0385, 0.0332, 0.0419], [0.0842, 0.0, 0.0441, 0.0784, 0.2154, 0.0, 0.4396, 0.0, 0.0957, 0.8519, 0.9254, 0.18, 0.1587, 0.2421, 0.5122, 0.2254, 0.0, 0.0082, 0.3241, 1.1128, 0.0377, 0.0256, 0.6292, 0.0, 1.0635, 0.9643], [0.0105, 0.0, 0.0294, 0.0, 0.0, 0.0, 0.2967, 0.0696, 0.0185, 0.2687, 0.112, 0.3175, 0.1474, 0.7317, 0.0845, 0.2213, 0.2069, 0.3641, 0.0, 0.7308, 0.5618, 0.0, 0.0, 0.3651, 0.5119, 0.6932, 0.1654, 0.2533, 0.1973, 0.1714, 0.1202, 0.0, 0.0782, 0.0503], [0.3474, 0.0, 0.0, 0.049, 0.0, 0.0, 0.4725, 0.0, 0.2957, 0.463, 0.044, 0.1111, 0.3684, 1.0244, 0.4225, 0.0, 0.4098, 0.1103, 0.4513, 0.0, 0.1667, 0.7978, 0.0, 0.0, 0.6667, 0.4545, 0.3835, 0.2133, 0.4354, 0.7143, 0.1793], [0.0105, 0.025, 0.1324, 0.0, 0.0, 0.0, 0.3626, 0.0, 0.2696, 0.7037, 0.2985, 0.188, 0.2698, 0.2632, 0.5366, 0.4648, 0.0625, 0.082, 0.2207, 0.4103, 0.0283, 0.2179, 0.1573, 0.0563, 0.0, 0.4762, 0.3571, 0.3523, 0.3083, 0.0933, 0.2313, 0.3714, 0.2766, 0.0233, 0.0, 0.1043, 0.1844], [0.1895, 0.0, 0.0, 0.0882, 0.0, 0.0, 0.3516, 0.0, 0.4696, 0.0185, 0.2239, 0.16, 0.0, 0.0526, 1.0244, 0.3944, 0.3525, 0.2759, 0.5692, 0.0, 0.3718, 0.7191, 0.0282, 0.0, 0.6825, 0.0119, 0.0682, 0.203, 0.1333, 0.3469, 0.9714, 0.2571, 0.0, 0.1825, 0.0978], [0.0105, 0.0, 0.0147, 0.0, 0.0, 0.0154, 0.0, 0.0, 0.0957, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0564, 0.0, 0.1667, 0.1348, 0.0704, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0136, 0.2857, 0.6567, 0.0, 1.1043], [0.6456, 0.093, 0.0385, 0.8626, 0.8547], [0.4421, 0.0833, 0.1029, 0.6078, 0.0615, 0.0, 2.7033, 0.0, 1.6696, 3.2963, 1.1045, 1.22, 1.1368, 1.561, 2.3803, 0.7131, 1.069, 2.6718], [0.7053, 0.0333, 0.0, 0.6569, 0.3231, 0.0462, 2.956, 0.0233, 0.2174, 2.6852, 1.5373, 0.58, 1.3016, 0.8, 1.9024, 1.0141, 0.0, 1.1803, 0.9241, 1.2154, 0.1792, 1.859, 1.4719, 0.0, 0.0, 2.4444, 2.4167, 1.1705, 0.406], [0.2947, 0.0083, 0.0735, 0.098, 0.1077, 0.0462, 0.978, 0.0116, 0.7739, 0.8889, 1.1343, 0.384, 0.6032, 0.0526, 0.2439, 1.1549, 0.0, 0.418, 0.6207, 1.2359, 0.0, 0.6154, 1.2584, 0.0141, 0.0, 1.6508, 0.0, 1.5, 0.3383, 0.1067, 0.6395, 1.8, 0.8819, 0.0814], [0.6526, 0.0917, 0.1029, 0.5686, 0.1692, 0.1846, 2.7692, 0.0, 1.0261, 2.9444, 2.4925, 1.044, 1.3175, 0.6632, 3.1951, 2.2254, 0.0, 1.1885, 0.9862, 3.0256, 0.0, 1.2949, 2.3483, 0.0704, 2.8571, 2.2619, 1.6705, 1.0451, 0.8267, 1.0952, 1.8857], [0.2632, 0.0, 0.0294, 0.0686, 0.0154, 0.0615, 0.6813, 0.0, 1.0087, 0.963, 1.4478, 0.596, 1.5238, 0.5263, 0.0976, 1.0563, 0.1562, 1.0656, 0.531, 1.8308, 0.0094, 1.5897, 1.3146, 0.0, 0.0, 1.7619, 1.1429, 1.9886, 0.4812, 0.16, 0.6327, 1.6, 1.1536, 0.0581, 0.2773, 0.5196], [0.2526, 0.05, 0.0294, 0.3039, 0.0615, 0.0308, 1.5604, 0.0116, 0.2435, 1.2037, 0.5672, 0.848, 0.4603, 0.2105, 0.7073, 0.3099, 0.4836, 0.6759, 2.0103, 0.0755, 1.7436, 1.7416, 0.0, 0.0312, 1.3492, 1.2976, 1.3409, 0.6767, 0.4, 0.9252, 2.1429, 1.3475, 0.0116, 0.0385, 0.3886, 0.3966], [0.4632, 0.0417, 0.0147, 0.3529, 0.0923, 0.0308, 1.0659, 0.0, 0.6087, 0.963, 0.8955, 0.688, 1.381, 1.1368, 2.0, 0.507, 0.0, 1.3033, 0.7862, 1.4513, 0.1415, 1.3205, 1.3146, 0.0, 0.0, 0.4762, 1.9286, 1.9659, 0.6391, 0.2933, 0.7755, 2.0571, 1.7047, 0.0349, 0.0, 0.5427, 0.5754], [0.4632, 0.0667, 0.1471, 0.8824, 0.2615, 0.0, 2.3516, 0.0, 0.6174, 1.8704, 0.8955, 0.184, 0.5556, 0.4947, 1.2439, 1.5775, 0.0938, 0.5328, 0.0276, 1.6359, 0.0377, 1.0256, 1.5056, 0.0, 0.0, 0.254, 2.0238, 2.2614, 0.6316, 0.36, 0.932, 2.0857, 2.13, 0.0116, 0.0, 0.8649, 0.6536], [0.5579, 0.1583, 0.1618, 0.7451, 0.8154, 0.3077, 1.3297, 0.0349, 0.9217, 2.0926, 1.209, 1.036, 1.4921, 1.0947, 1.2683, 0.9718, 1.2623, 0.9103, 1.8051, 0.2453, 1.7692, 2.0787, 0.0986, 1.9524, 1.1905, 1.2159, 0.594, 0.7867, 0.8027, 0.6857, 1.9819, 0.0814, 0.0385, 0.872, 0.8659]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

