created: 20230918220934000
creator: Drevarr
tags: ChartData
title: 202309182209_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Erin The Wise", "Necrotic Windrunner", "Hawaiian Supreme", "High Sorcer Baradun", "Katiana Lafay", "Elonith Requiem", "Darks Na", "Alo Penn", "N\u00f6sh\u00e0k", "No Reserv\u00e9", "Rafaellagabriela", "Kittendoodlez", "Solus Luxes", "Ill Fix Your Honda", "Xanvias Einzbern", "Ryzen Grimsaw", "Etch\u00e9ry", "Lucky Luprac\u00e1n", "Mister Jekyll", "Grasszanine", "Tribal S", "Leafzel", "Glorious Gluvs", "Meowstress Of Death", "Sub Train", "Jimbo The Pleb", "Mistwalker Cael", "Drevarr Moonwillow", "Bella Sassy", "Malfax Jinn", "Cat Wigglebooty", "Ggclaudx", "Eibh\u00ebar", "Raziel Umbra", "Koralia Danai", "Acinonyx Fauxhawk", "Rina Of Theros", "Kurn The Drunk", "Mike The Archmagus", "Be\u00eb", "Anita Strips", "Zaedy Zae", "Ryvalia Fazebringer", "Crusader Siolith", "Dark Sidiuz", "Primal Clone", "Tootsie Pop Rocks", "Arcanophage Farra", "Tegan Parker", "Black Raspberry Pie"];
const professions = ["Weaver", "Reaper", "Spellbreaker", "Tempest", "Herald", "Reaper", "Firebrand", "Guardian", "Mesmer", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Berserker", "Vindicator", "Berserker", "Scrapper", "Reaper", "Spellbreaker", "Druid", "Firebrand", "Berserker", "Reaper", "Firebrand", "Berserker", "Vindicator", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Holosmith", "Chronomancer", "Chronomancer", "Firebrand", "Berserker", "Reaper", "Reaper", "Tempest", "Reaper", "Chronomancer", "Druid", "Chronomancer", "Firebrand", "Reaper", "Chronomancer", "Scrapper", "Spellbreaker", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 10, 0, 0, 10, 0, 0, 0, 0, 1, 0, 11, 0, 7, 9, 2, 0, 5, 23, 15, 3], [0, 0, 0, 0, 3, 5, 0, 0, 0, 0, 4, 0, 42, 1, 39, 0, 0, 34, 0, 6, 0, 2, 4, 27], [4, 33, 22, 34, 61, 21], [0, 1, 0, 0, 0, 52, 43, 0, 20, 0, 0, 45, 22], [0, 0, 0, 0, 0, 4, 60, 16, 0, 29, 27, 0, 26, 24], [0, 0, 0, 0, 0, 19, 38, 0, 0, 0, 0, 0, 15, 6, 4, 0, 1, 11, 93, 0, 0, 0, 0, 0, 1, 2], [0, 0, 0, 0, 34, 34, 0, 10, 25, 0, 0, 4, 4, 24, 0, 12, 25, 0, 20], [31, 2, 5, 19, 54, 75, 14], [0, 0, 10, 12, 6, 0, 0, 16, 0, 10, 48, 6, 4, 10, 3, 0, 29, 5, 0, 0, 24, 2, 25, 4], [0, 0, 0, 0, 9, 11, 11, 0, 0, 9, 0, 10, 1, 4, 0, 55, 8, 2, 45, 14, 42], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 16, 32, 0, 0, 94, 34], [52, 11, 51, 2, 38, 23, 55, 2, 0], [0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 10, 0, 17, 0, 0, 30, 27, 16, 2, 24, 0, 19, 34, 119], [0, 0, 0, 0, 9, 21, 0, 0, 0, 0, 0, 6, 11, 6, 25, 4, 5, 12, 27, 32, 4, 36, 24, 23, 57, 9], [0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 2, 32, 47, 13, 24, 21, 28, 37, 9, 0, 89], [17, 0, 0, 25, 0, 8, 25, 24, 7, 3, 5, 21, 9, 27, 32, 24, 20, 53, 5, 14], [0, 0, 0, 0, 0, 0, 4, 21, 0, 0, 0, 0, 0, 29, 53, 22, 6, 40, 39, 9, 10, 17, 0, 21, 13, 37], [0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 17, 20, 53, 26, 26, 42, 22, 8, 25, 0, 15, 65], [0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 9, 13, 0, 17, 10, 15, 30, 48, 13, 40, 61, 63], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 10, 16, 14, 26, 17, 21, 26, 29, 2, 2, 81, 37, 62], [0, 0, 0, 0, 0, 0, 33, 3, 0, 0, 0, 0, 0, 4, 9, 44, 22, 28, 45, 24, 13, 53, 0, 3, 48, 41], [0, 0, 0, 0, 12, 19, 0, 0, 0, 0, 55, 12, 52, 32, 0, 6, 40, 16, 70, 11, 5, 0, 11, 0, 30], [0, 0, 0, 0, 0, 26, 27, 0, 0, 0, 0, 0, 35, 27, 25, 40, 19, 14, 11, 47, 6, 18, 0, 9, 64, 13], [16, 0, 16, 7, 28, 94, 66, 41, 30, 10, 0, 13, 20, 32, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 60, 14, 11, 0, 32, 80, 0, 11, 50, 0, 26, 36, 48], [0, 0, 0, 0, 16, 19, 0, 0, 0, 0, 0, 0, 20, 0, 59, 28, 19, 0, 22, 35, 9, 74, 8, 0, 60, 18], [0, 0, 0, 0, 4, 0, 61, 16, 0, 0, 0, 0, 0, 35, 17, 15, 95, 14, 0, 7, 35, 31, 4, 0, 20, 55], [0, 16, 0, 0, 0, 0, 15, 46, 0, 0, 0, 0, 0, 33, 38, 19, 78, 3, 26, 4, 43, 39, 20, 1, 17, 15, 20], [0, 0, 0, 0, 0, 0, 18, 2, 0, 0, 0, 0, 0, 0, 18, 82, 26, 27, 20, 55, 56, 52, 26, 0, 0, 32, 23], [8, 29, 49, 45, 37, 28, 115, 23, 10, 86, 16], [0, 0, 0, 0, 0, 18, 18, 0, 0, 0, 0, 12, 0, 18, 16, 21, 5, 37, 30, 17, 46, 21, 141, 13, 43], [6, 31, 10, 0, 32, 90, 0, 1, 50, 3, 26, 55, 44, 16, 19, 13, 65, 0], [0, 0, 0, 0, 8, 34, 12, 0, 2, 3, 0, 4, 16, 26, 21, 2, 26, 27, 48, 14, 10, 93, 27, 28, 18, 56], [7, 9, 3, 22, 22, 0, 0, 0, 0, 8, 0, 17, 43, 26, 31, 35, 27, 27, 34, 35, 119, 26, 3], [0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 28, 31, 0, 38, 20, 31, 33, 44, 32, 0, 113, 2, 109], [9, 0, 0, 0, 0, 11, 0, 0, 10, 0, 0, 83, 1, 44, 37, 17, 34, 33, 53, 6, 6, 72, 51, 26, 28, 5], [0, 0, 0, 0, 0, 4, 0, 11, 0, 0, 0, 0, 0, 19, 12, 5, 32, 76, 34, 22, 12, 35, 15, 98, 98, 56], [0, 0, 0, 0, 0, 0, 43, 30, 0, 0, 0, 0, 0, 13, 12, 61, 19, 7, 0, 29, 91, 59, 7, 39, 59, 36, 27], [0, 0, 0, 0, 6, 14, 46, 0, 0, 0, 0, 0, 47, 41, 27, 80, 27, 34, 53, 51, 25, 6, 56, 8, 17], [0, 0, 0, 0, 0, 39, 0, 0, 18, 0, 0, 0, 30, 34, 0, 9, 16, 76, 8, 50, 7, 76, 41, 79, 63], [0, 0, 0, 0, 0, 18, 40, 13, 0, 10, 4, 0, 45, 8, 11, 44, 80, 16, 37, 2, 10, 22, 31, 1, 29, 121, 8], [0, 0, 0, 0, 0, 0, 10, 20, 0, 0, 0, 0, 81, 19, 25, 34, 35, 4, 0, 67, 46, 13, 58, 45, 75, 15, 26], [0, 0, 0, 0, 0, 0, 11, 14, 0, 0, 0, 0, 0, 15, 35, 27, 41, 20, 38, 27, 83, 19, 16, 0, 40, 66, 151], [14, 0, 0, 0, 0, 0, 19, 10, 0, 0, 77, 0, 65, 22, 0, 31, 1, 49, 62, 16, 48, 14, 51, 0, 33, 34, 85], [4, 0, 0, 0, 0, 28, 1, 0, 0, 46, 0, 0, 13, 1, 15, 14, 86, 131, 1, 96, 50, 37, 0, 115, 65], [0, 0, 0, 0, 0, 5, 14, 14, 0, 0, 0, 0, 2, 44, 68, 55, 62, 151, 70, 32, 44, 9, 33, 1, 78, 12, 34], [0, 0, 0, 0, 0, 0, 15, 38, 0, 16, 0, 0, 0, 86, 41, 2, 51, 4, 80, 101, 11, 37, 34, 28, 58, 114, 25], [0, 0, 0, 0, 0, 0, 12, 20, 0, 1, 1, 0, 40, 48, 26, 46, 46, 84, 41, 36, 105, 93, 51, 0, 16, 46, 36], [0, 0, 0, 0, 0, 2, 2, 0, 39, 0, 0, 32, 25, 42, 76, 68, 23, 41, 40, 35, 25, 118, 0, 123, 94, 28], [0, 0, 0, 0, 1, 51, 48, 0, 1, 37, 27, 19, 50, 33, 16, 71, 106, 27, 45, 38, 53, 24, 15, 27, 69, 77]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

