created: 20230515002743000
creator: Drevarr
modified: 20230705163529945
modifier: drevarr
tags: ChartData
title: 202305150027_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Needragee", "Nazhul Naxxremis", "Feoras Bedwyen", "Skaven Seer", "Necrotic Windrunner", "Oz Is Me", "Bee Rii", "Tinny Runt", "Yuuka Chou", "Hyde En Sikh", "Artherwise", "Tegan Parker", "Cuscuszera", "Belvyn Brightblade", "Drogo Discourteous", "Ark Darkness", "Ever Moore", "Mybeau", "Sumatra Satyricon", "Black Raspberry Pie", "Red Omega Red", "Tribal S", "Artakama Nahid", "Sub Train", "Koralia Danai", "Vitis Mortis", "Lucas Ryn", "Tika Mi", "Gabe Malhorn", "Osh Kosh Johosh", "Aronorf Xideliesi", "Miphest\u00f6", "Artherwise", "Redoxone", "Thiga Altaforja", "Oo Dads Mad", "Theodelyinda", "Necrotic Windrunner", "Morv\u00e4rth", "Smol Gluvs", "Grilo Gringo", "Blancooo Padreee", "Roxy Willowmoon", "Toni Toni Ch\u00f6pper", "Venomina The Fierce", "Aira Draugr", "Zanos Engine", "Mybeau", "Smol Gluvs", "W V N D E R F O X", "Sureting", "Binkety Bonk", "X Devastation X", "Evan Nightroad", "Ikong Winnie Ilocos", "Tootsie Pop Rocks", "Rina Of Theros", "Cerys Fireblade", "Slautorn", "Crusader Siolith", "John John", "Kmpek", "Morv\u00e4rth", "Outer Ocean", "Lord Erin The Wise", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Tempest", "Scourge", "Chronomancer", "Catalyst", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Tempest", "Chronomancer", "Druid", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Soulbeast", "Chronomancer", "Renegade", "Druid", "Tempest", "Firebrand", "Firebrand", "Scourge", "Firebrand", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Tempest", "Soulbeast", "Soulbeast", "Berserker", "Spellbreaker", "Vindicator", "Reaper", "Scourge", "Scourge", "Dragonhunter", "Spellbreaker", "Scrapper", "Mechanist", "Spellbreaker", "Herald", "Mechanist", "Reaper", "Reaper", "Berserker", "Reaper", "Scrapper", "Reaper", "Vindicator", "Scrapper", "Scrapper", "Scourge", "Berserker", "Weaver", "Dragonhunter", "Holosmith", "Vindicator", "Reaper", "Berserker", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.6822, 20.0], [335.6061], [0.0638, 176.68, 0.8182], [181.2706], [552.3636], [68.4673, 251.7], [10.0645, 45.4656, 11.6626], [258.8214, 17.7196, 129.38], [159.4167, 46.5647, 72.7987, 19.9263, 61.1429, 42.0654, 45.96], [26.3077, 32.6501, 35.3372, 2.2716, 7.0495, 1.9574, 8.92, 6.2121, 32.7167, 5.9647, 83.0314, 0.0415, 19.4167, 5.1963, 7.56], [86.0894, 28.0947, 44.6129], [7.5484, 19.5688, 32.5021, 33.5743, 0.5702, 90.6533, 42.6, 94.3176, 86.2264, 32.1751, 1.7738, 9.1028, 251.8], [168.5, 67.8235, 177.3774, 119.1244, 97.4286, 15.7196, 45.82], [217.5128, 50.2457, 73.9106, 30.3868, 8.6337, 20.0511, 26.68], [141.0199, 38.211, 10.6914, 62.8911, 29.2255, 41.8533], [44.3672, 92.9587, 67.6584, 45.1287, 37.4894, 76.0933, 42.7576, 100.2167], [22.166, 44.04, 7.0118, 432.7736, 92.1521, 84.131, 32.2523, 87.4], [457.396, 104.0851, 118.12, 109.5758], [63.1572, 213.4424, 431.381, 0.0, 1194.26], [8.1818, 257.2327, 239.4885, 398.6667, 90.785, 342.24], [347.6129, 609.3333, 112.1682, 381.96], [90.196, 30.4794, 20.6502, 27.4851, 0.434, 77.12, 0.0, 180.6, 50.3176, 177.8616, 100.2488, 190.7857, 81.9065, 83.84], [210.0769, 54.1588, 27.1124, 16.0, 46.6139, 18.4851, 109.7733, 3.0909, 162.0833, 141.3882, 124.5283, 126.8848, 263.4881, 20.9346, 15.0], [76.1835, 59.7078, 61.5941, 17.4596, 76.9467, 8.697, 129.4824, 279.5975, 100.7926, 318.1071, 130.0187, 0.0], [131.094, 126.4417, 51.5298, 1.3868, 56.0891, 0.0, 113.88, 0.0, 35.7833, 25.7529, 115.1824, 92.7327, 425.3452, 25.8692, 31.2], [209.1787, 254.4977, 23.9671, 0.0], [258.9231, 74.3573, 91.9381, 34.7202, 86.0545, 15.0638, 13.3333, 0.0, 17.1833, 153.4118, 194.2453, 82.2903, 96.2857, 65.8972, 181.4], [265.8632, 65.7692, 49.8326, 8.2263, 128.0495, 11.1106, 21.2267, 20.9697, 205.2941, 315.8616, 61.4839, 51.1548, 35.0935, 396.9], [128.0868, 74.7317, 48.4774, 101.0891, 33.6383, 57.3333, 3.7576, 212.9667, 83.9647, 227.1258, 92.8203, 199.3452, 29.6916, 111.0], [293.9145, 79.3275, 79.9862, 37.5597, 77.0297, 20.1872, 138.7333, 0.5152, 229.2167, 220.8824, 374.4465, 233.8387, 300.0357, 126.2243, 41.1], [360.9915, 191.861, 111.8073, 122.8477, 57.5149, 5.3064, 87.88, 49.1212, 97.6667, 284.0588, 146.1572, 190.6406, 219.0714, 37.1308, 210.04], [588.9829, 173.5459, 83.9725, 71.1481, 83.0099, 45.3149, 137.04, 68.1412, 12.8931, 214.4332, 491.5714, 176.3271, 152.34], [79.7717, 25.3861, 81.9106, 133.2133, 244.9091, 1016.8239, 1175.1786, 192.5047, 18.38], [134.0909, 1050.2327, 589.9816, 711.1905, 0.0, 34.56], [1712.3648, 474.8203], [990.8291, 372.9404, 330.9106, 43.0412], [261.6061, 963.0353, 281.1384, 496.7051, 1000.4048, 849.8505, 624.34], [916.0833, 567.3647, 809.7736, 583.7097, 1009.5119, 2.9533, 608.98], [583.2408, 253.8519, 357.0545, 191.6766, 555.3067, 0.0], [474.8578, 86.5844, 610.7723, 222.3319, 512.0133, 1090.4848], [567.5412, 1078.2013, 693.5161, 1194.619, 398.8598, 263.7], [400.6923, 260.0496, 108.1376, 67.0247, 100.5644, 8.0638, 252.1733, 32.9697, 343.6588, 637.6352, 194.0092, 769.6548, 186.5888, 320.88], [1679.6154, 145.2829, 357.6789, 242.0165, 148.0347, 77.383, 219.2667], [285.8089, 338.7569, 349.4938, 169.1535, 88.4979, 253.1467, 140.5758, 800.2897, 631.58], [282.5385, 182.3499, 179.156, 53.8025, 262.0396, 39.8128, 184.5867, 21.8485, 54.1833, 719.7765, 643.1384, 408.9309, 348.5952, 192.2056, 68.7], [1318.0085, 325.1563, 525.0917, 182.4691, 331.4109, 139.9319, 540.6667], [169.4774, 64.2178, 182.5277, 944.64, 34.303, 744.2333, 641.7059, 1516.8805, 318.6129, 1593.3095, 299.0187, 1101.86], [1134.3294, 2350.3774, 482.7788, 1533.0833, 651.4019, 1520.86], [1213.9833, 838.0941, 552.956, 1178.553, 2281.131, 1059.4112, 1166.1], [484.2457, 905.4427, 177.5226, 312.9802, 149.7106, 2045.72], [1255.8235, 1945.9748, 1343.4378, 1180.3571, 821.6168, 315.42], [3799.4333, 1100.6, 1415.0503, 1548.1382, 72.6667, 845.4673, 2070.84], [3761.5157, 554.8065, 2953.5714, 1339.6729, 1660.16], [1802.9231, 117.7866, 562.4083, 106.1975, 256.7376, 178.4383, 1333.7733, 0.0, 43.7, 786.1059, 869.2516, 818.235, 1890.0238, 685.6075, 512.12], [651.4764, 410.9839, 164.1235, 656.2772, 206.4383, 260.5867, 106.3333, 233.5667, 702.4824, 1613.7233, 852.7604, 1588.8571, 469.9813, 189.22], [1016.8547, 296.7072, 914.8532, 308.9136, 631.1287, 261.1021, 420.1867, 0.0, 1082.3882, 297.7862, 652.023, 674.7024, 931.2804, 753.88], [1497.6838, 377.8164, 650.3119, 146.9918, 213.5743, 345.2128, 754.7467, 421.2424, 1069.25, 888.9647, 1241.7862, 636.9862, 1582.1786, 504.4393, 1422.62], [2283.4359, 464.8586, 993.7936, 250.0947, 44.9653, 303.8809, 1244.2933, 0.0, 502.1529, 4.6792, 372.6682, 2285.7024, 1626.2523, 726.42], [2918.5983, 713.9082, 920.5688, 529.6132, 1296.5594, 427.9702, 254.8485, 1982.6, 1347.8], [1519.5299, 668.0298, 682.6766, 281.0576, 1129.3416, 152.9277, 1470.9467, 911.3939, 57.5059, 1793.9371, 399.4654, 2043.8095], [1684.1709, 378.6824, 773.4908, 456.1811, 1231.4059, 233.2553, 194.16, 1292.0706, 3095.5346, 330.2442, 312.3929, 393.1121, 914.92], [359.6278, 1044.8739, 398.2922, 270.2574, 292.6766, 731.5733, 448.697, 2259.6833, 1509.4588, 1214.1635, 1695.1751, 1943.5952, 930.7009, 2235.04], [2379.3419, 1425.6849, 4322.9667, 2037.9647, 1527.434, 1487.3779, 1586.7143, 1208.9252, 221.1], [10677.2667, 2895.0941, 3701.0063, 1924.6774, 5316.8452, 3019.7664], [592.0855, 1023.1017, 347.8991, 545.2263, 1236.4158, 260.2085, 2419.2, 1750.4848, 1725.7, 1077.2235, 2283.4403, 1961.2903, 3732.75, 1096.7664], [3544.0171, 2012.8536, 1285.5, 345.3868, 1582.896, 709.5617, 1264.4267, 572.0, 3362.6667, 1812.4118, 4874.239, 2071.447, 3886.8571, 1738.271, 764.02], [6006.1538, 2221.4988, 2023.656, 669.6502, 2785.1485, 996.5489, 4011.96, 6075.303, 7300.7, 2095.3059, 6463.1384, 3928.8756, 6820.6667, 2589.2804, 4202.76]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

