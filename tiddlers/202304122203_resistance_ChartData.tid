created: 20230412220340000
creator: Drevarr
modified: 20230705163525437
modifier: drevarr
tags: ChartData
title: 202304122203_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Primal Clone", "Eibh\u00ebar", "Black Raspberry Pie", "Jeckyll Mbs", "Ryvalia Fazebringer", "Lucas Ryn", "K\u00f4sair", "Sister Elon\u00edth", "Gavann", "Smol Daddy Tika", "Ark Darkness", "Newtype Khan", "Grasszanine", "K\u00f4sair", "Sygaldry Verdandi", "Xanvias Einzbern", "Sub Train", "Koralia Danai", "Arcanophage Farra", "Bella Sassy", "Solus Sanctus"];
const professions = ["Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Spellbreaker", "Berserker", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[104.4729, 0.0, 0.0, 0.0, 0.0, 76.4478, 139.55, 0.0, 24.07, 10.626, 4.1126, 0.0, 0.0, 17.9458, 0.0, 56.5176, 0.0, 0.0, 0.0, 93.9816], [83.8488, 3.3795, 6.6787, 46.8195, 26.9245, 25.2585, 109.0681, 0.0, 105.56, 12.87, 31.8566, 0.0, 16.7443, 20.3525, 0.0, 24.547, 6.9552, 13.1414, 11.4912, 176.472], [70.3248, 1.7464, 0.0, 41.4687, 32.9471, 38.8962, 111.2114, 3.4404, 96.57, 15.51, 38.711, 5.2837, 28.4602, 33.0662, 0.0, 26.3287, 3.7699, 10.3162, 13.9104, 206.4312], [75.3963, 5.5625, 6.9913, 42.6006, 35.6632, 38.512, 111.9258, 5.2076, 141.52, 10.89, 38.5152, 7.0932, 18.6624, 25.8984, 0.0, 29.0011, 8.5882, 6.6874, 10.1606, 220.3848], [55.7865, 0.0, 0.0, 167.0067, 59.7535, 57.8161, 93.3509, 112.52, 11.352, 0.0, 21.9802, 36.0485, 0.0, 0.0, 0.0, 43.5974, 34.3526, 194.94], [85.0322, 9.4594, 7.4745, 44.6586, 43.2209, 49.6527, 126.9286, 0.0, 129.63, 16.17, 43.6723, 0.0, 23.017, 29.927, 7.4758, 43.9471, 16.8134, 15.4483, 14.9688, 251.5752], [84.8631, 10.3811, 0.0, 123.3771, 39.6782, 55.127, 198.1325, 124.12, 71.94, 79.2499, 0.0, 50.855, 26.8402, 0.0, 99.6729, 29.7965, 21.2544, 30.9355, 41.4504], [0.0, 465.45, 71.214, 218.2963, 5.3561, 141.2122, 234.3413], [81.411, 148.1856, 28.3006, 100.4659, 94.7515, 0.0, 92.6453, 53.6861, 57.8534, 55.3392, 521.208], [5.0774, 0.0, 81.4968, 50.7787, 119.0896, 275.2898, 0.0, 147.9, 18.183, 28.8538, 0.0, 70.3469, 46.1986, 16.8439, 46.9165, 16.7731, 12.7526, 22.1962, 315.5976], [82.8345, 35.3315, 0.0, 115.0422, 70.4997, 77.6003, 128.1193, 0.0, 176.32, 0.0, 0.0, 19.8547, 76.7534, 42.6215, 151.5384, 0.0, 6.3763, 0.0, 357.4584], [111.2349, 15.6849, 0.0, 128.8308, 47.8265, 138.9699, 200.0376, 179.51, 61.677, 109.801, 21.0936, 74.183, 99.251, 0.0, 37.7114, 0.0, 52.8768, 38.7677, 61.9704], [81.3131, 18.8542, 18.6435, 88.0824, 76.5223, 72.03, 96.2086, 0.0, 190.53, 21.351, 81.2083, 20.4939, 44.7898, 40.391, 19.3255, 42.3634, 20.9261, 46.3968, 22.8614, 401.7816], [60.858, 0.0, 0.0, 192.1143, 0.0, 98.2489, 225.7567, 0.0, 91.35, 39.897, 53.399, 0.0, 0.0, 119.3942, 0.0, 0.0, 0.0, 39.4243, 79.4707, 416.556], [127.6328, 52.5525, 0.0, 97.0347, 53.0224, 89.2212, 692.0348, 0.0, 38.0083, 54.1094, 40.6944, 53.8272, 315.5976], [161.9499, 7.1957, 7.1618, 99.0927, 38.9697, 122.451, 216.4693, 5.3392, 273.18, 60.258, 139.0464, 0.0, 89.9942, 88.4208, 7.1346, 77.2044, 62.856, 57.0931, 341.8632], [99.4014, 45.1466, 0.0, 107.4276, 42.7486, 127.7332, 241.2358, 0.0, 245.63, 12.21, 107.712, 0.0, 64.6963, 58.9123, 0.0, 48.7971, 0.0, 0.0, 21.4704, 640.6344], [249.5178, 5.7242, 7.2755, 151.8804, 92.2283, 123.5074, 292.1978, 0.0, 242.73, 48.642, 164.3098, 0.0, 132.7622, 91.2984, 7.2897, 74.5319, 16.4909, 30.6115, 48.1421, 103.0104], [164.6547, 20.9887, 7.3039, 131.8149, 22.7914, 144.2521, 266.2405, 239.54, 27.159, 164.6362, 30.8546, 153.3427, 149.0074, 7.2897, 47.8073, 73.3622, 67.2624, 86.7283, 218.3328], [252.0536, 38.4846, 0.0, 246.1368, 0.0, 201.2998, 514.3824, 0.0, 424.27, 36.201, 221.1686, 0.0, 93.8822, 0.0, 0.0, 0.0, 0.0, 122.1869, 0.0, 22.572], [229.5699, 12.6611, 15.5173, 183.8823, 93.173, 184.3968, 332.4434, 0.0, 253.46, 82.665, 144.5299, 6.0075, 85.5878, 102.3902, 22.4275, 99.4749, 15.6643, 80.689, 32.1149, 471.5496], [296.0066, 43.8045, 18.5014, 246.0339, 107.3438, 179.6908, 310.5346, 0.0, 341.33, 104.544, 180.0422, 7.8584, 180.0922, 146.0774, 17.8675, 219.6366, 76.1645, 69.8544, 107.9266, 663.2064]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

