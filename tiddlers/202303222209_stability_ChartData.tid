created: 20230322220917000
creator: Drevarr
modified: 20230705163522895
modifier: drevarr
tags: ChartData
title: 202303222209_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Smol Daddy Tika", "Grasszanine", "Nazhul Naxxremis", "Xanvias Einzbern", "Elonith Primal", "Ark Darkness", "Amiti\u00e9l", "Mistwalker Caelon", "Gabe Malhorn", "Ryvalia Fazebringer", "Xyntharos", "Blanco Padre Guard", "Viral Marketing", "Zaylen Harker", "Kiloak", "Solus Sanctus", "Johosh The Great", "Bella Sassy", "Koralia Danai"];
const professions = ["Dragonhunter", "Berserker", "Spellbreaker", "Scourge", "Berserker", "Tempest", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.4768, 3.4739, 1.84, 0.0, 2.8512, 1.6589, 1.1808, 1.0349, 1.2831, 0.0, 1.1827, 1.1466, 4.466, 0.3496, 1.6646, 0.972, 0.0, 1.1592, 1.3621, 2.1021, 2.281, 0.0, 0.5081, 0.9302, 0.0], [7.1827, 1.3027, 1.311, 0.0, 0.264, 0.0, 1.6704, 0.0, 0.9776, 0.0, 1.0138, 0.0, 10.962, 1.5382, 0.0, 0.828, 1.008, 0.7825, 0.8108, 1.2613, 1.6474, 0.1607, 0.972, 0.0, 1.0504, 0.9179], [4.7059, 1.3027, 0.0, 0.0, 1.9536, 1.3824, 1.584, 1.4582, 0.8248, 0.8026, 0.882, 7.714, 1.6082, 2.0563, 0.684, 1.6337, 1.478, 1.5566, 1.2613, 3.168, 0.0, 1.1487, 0.0, 0.0, 0.0], [1.7338, 1.1127, 0.575, 0.0, 1.4256, 1.1981, 0.7488, 2.9635, 0.1222, 0.0, 1.6896, 0.294, 12.586, 0.4894, 1.175, 0.288, 1.8423, 1.5359, 1.6215, 3.5736, 3.3581, 0.1072, 0.0], [7.6781, 2.1441, 1.196, 0.0, 1.4256, 2.0736, 2.0736, 1.7875, 1.9552, 0.0, 1.943, 2.058, 20.706, 0.1398, 1.6646, 2.16, 0.0, 1.1302, 1.6539, 2.1722, 3.2947, 1.0537, 1.5905, 0.8482, 1.0762, 0.9762], [9.6595, 1.7912, 1.403, 0.0, 3.2208, 2.9491, 2.1024, 2.2579, 1.7108, 0.0, 2.4077, 2.205, 20.3, 1.8179, 1.5178, 1.62, 1.8423, 1.1882, 0.454, 2.4525, 2.3443, 0.9823, 0.729, 1.1765, 0.0, 1.049], [2.9722, 8.1312, 6.6816, 3.2544, 3.528, 6.7821, 8.2368, 3.1752, 2.436, 2.0277, 6.12, 3.24, 0.0, 5.3613, 3.8592, 7.6376, 0.0], [39.788, 4.2651, 3.1334, 6.228, 1.1818, 2.4343, 3.8267, 9.5295, 10.201, 3.4648, 0.8836, 5.1163, 0.0, 1.2822], [12.384, 3.9082, 1.081, 0.0, 3.8544, 5.161, 1.0656, 4.0454, 3.7576, 0.0, 4.6042, 3.7926, 31.668, 3.9155, 1.3219, 2.52, 6.8825, 2.0576, 1.7188, 3.3634, 1.2672, 0.0, 0.0, 0.0, 0.0, 0.4808], [43.848, 3.3562, 6.6586, 6.552, 2.5375, 8.0564, 6.3563, 8.6186, 9.2506, 5.7331, 5.4562, 6.8126, 0.0, 3.3948], [12.6317, 1.3841, 0.0, 0.0, 9.0288, 5.3914, 3.3696, 9.0787, 4.6436, 0.0, 5.8714, 6.2916, 21.518, 0.0, 7.7846, 1.764, 1.3556, 4.5499, 2.3025, 6.6566, 10.201, 0.0, 2.3636, 0.8755, 0.0], [30.96, 3.7453, 1.334, 0.0, 4.5408, 5.7139, 6.8544, 3.8573, 3.0856, 0.0, 5.0266, 2.352, 47.908, 4.6846, 1.273, 1.44, 6.9868, 0.9563, 2.8214, 5.8859, 8.0467, 1.2502, 0.7511, 0.5472, 0.8888], [16.3469, 5.8894, 6.003, 0.0, 3.4848, 5.8061, 6.7104, 6.5386, 6.5988, 2.7206, 6.9274, 6.0858, 47.908, 3.0765, 6.4138, 3.204, 4.6578, 4.9556, 4.5726, 3.7137, 7.8566, 2.0896, 0.7732, 3.2285, 1.0849, 2.7392], [20.8051, 7.2464, 5.52, 0.0, 8.8176, 4.9306, 7.3152, 7.9498, 5.8045, 9.0816, 6.6444, 43.442, 2.7269, 7.5398, 4.968, 3.6498, 4.1441, 8.2372, 10.6506, 9.3139, 3.2148, 5.8538, 3.3379, 0.1636, 1.6027], [27.9878, 4.8038, 3.91, 0.0, 7.7616, 5.8522, 5.5296, 6.3034, 5.9878, 6.8429, 6.321, 51.156, 4.8245, 5.7283, 4.716, 7.091, 4.1441, 4.4753, 10.9309, 8.8704, 2.6969, 4.3959, 3.7757, 0.0, 2.1709], [28.2355, 5.3737, 3.887, 0.0, 9.0816, 7.0502, 7.7472, 5.0803, 8.3707, 0.4243, 8.279, 8.2908, 40.6, 6.153, 10.8691, 6.588, 3.5108, 7.8826, 4.1186, 8.058, 3.0413, 2.679, 3.8878, 5.4173, 0.0, 2.2146], [19.0714, 6.4322, 3.887, 0.92, 13.8864, 8.064, 5.1264, 8.279, 7.5458, 0.0125, 7.7299, 7.1148, 40.194, 9.2994, 12.0442, 7.776, 4.7274, 6.8972, 6.2266, 8.7587, 3.3581, 2.036, 5.8318, 6.0192, 0.0603, 2.2875], [33.4368, 5.9437, 4.508, 0.23, 11.2992, 10.8749, 7.1712, 5.9741, 4.7964, 6.1248, 8.673, 71.05, 9.2994, 12.5827, 8.964, 3.8236, 8.636, 7.7183, 13.3834, 11.975, 2.929, 6.6712, 5.5814, 1.0418, 3.7882], [32.4461, 10.9917, 8.073, 1.817, 12.8304, 11.1053, 9.9072, 10.4899, 8.9206, 0.1498, 12.9677, 10.8192, 73.08, 12.0262, 10.5264, 3.096, 5.075, 7.7377, 6.7779, 11.0711, 16.6003, 2.7147, 4.8819, 2.5718, 0.0, 1.5153], [51.7651, 7.8163, 6.348, 0.0, 15.1008, 10.5984, 8.1504, 7.9027, 10.0815, 8.5747, 9.9666, 82.824, 11.9563, 10.967, 5.724, 9.559, 4.0862, 8.4967, 18.5686, 15.9667, 2.679, 7.864, 9.5486, 0.0, 1.253]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

