created: 20230625215204000
creator: Drevarr
modified: 20230705163536750
modifier: drevarr
tags: ChartData
title: 202306252152_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Rafaellagabriela", "Grasszanine", "Blancooo Padreee", "Gavann", "Arcanophage Farra", "Mistwalker Cael", "Johosh The Mighty", "No Reserv\u00e9", "Imalou", "Traidoruns Maximus", "Xyntharos", "Ryvalia Fazebringer", "Gestern Yesteryear", "Crusader Siolith", "Solus Sanctus", "Sygaldry Verdandi", "Gabe Malhorn", "Tika Fiery", "Koralia Danai", "Bella Sassy"];
const professions = ["Spellbreaker", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Vindicator", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.8198, 1.2696, 0.7567, 3.3727, 1.5288, 0.0, 1.3724, 0.0, 1.6361, 1.824, 1.7317, 0.0, 1.5484, 0.0, 0.0, 1.8091, 2.4394, 0.0], [0.0, 0.0, 17.0582, 8.736], [0.0, 1.7664, 1.8095, 2.7241, 1.5725, 1.9465, 1.6544, 0.0, 1.3274, 2.88, 0.0, 1.824, 0.0, 2.3857, 0.0, 0.6958, 1.848, 4.1731], [0.0, 1.2144, 1.9411, 3.3079, 3.3634, 0.0, 2.8092, 6.144, 1.7924, 1.824, 0.0, 0.0, 0.0, 2.7136, 1.7741, 0.0], [0.0, 0.0, 2.1714, 5.8374, 0.7862, 1.9364, 0.0, 2.0065, 3.264, 1.4279, 0.0912, 2.9807, 2.7072, 0.0, 4.6619, 0.0, 0.0], [0.0, 1.656, 3.8822, 3.243, 2.5334, 0.0, 1.8988, 0.0, 1.0496, 6.72, 1.2456, 0.0, 0.0, 2.1658, 2.6215, 1.7395, 2.2176], [0.0, 2.2632, 1.2502, 2.9187, 3.8438, 0.0, 0.0, 0.0, 5.0009, 5.664, 3.2203, 0.7752, 2.7871, 2.1488, 0.0, 3.3398, 0.0, 0.0], [1.2264, 2.6496, 2.3688, 6.2266, 2.5334, 0.0, 1.6168, 0.0, 1.1731, 4.608, 2.2785, 1.14, 1.6645, 1.5566, 1.3632, 3.4094, 1.4045, 0.4968], [0.0, 2.8152, 2.4346, 6.94, 3.0139, 0.0, 2.538, 0.7949, 0.8644, 10.464, 0.881, 0.0, 0.0, 0.0, 0.0, 4.3835, 2.5872, 0.0], [0.8703, 1.0488, 3.7835, 4.9942, 8.0808, 0.0, 1.5792, 5.8653, 11.136, 3.6152], [11.6748, 6.2462, 2.3591, 2.5192, 3.323, 5.5875, 14.496, 2.8253, 3.876, 4.8, 2.5211, 2.9885, 8.4888, 3.1046, 5.7298], [0.7516, 6.624, 3.4216, 9.0804, 7.0762, 1.9465, 3.8728, 0.0, 3.9205, 7.584, 3.2203, 3.2832, 4.4129, 3.5024, 12.4259, 5.9143, 2.8829, 1.2586], [2.9274, 5.52, 7.2709, 9.1453, 5.2416, 0.0, 4.1736, 1.2254, 9.014, 16.224, 4.3747, 2.3712, 0.0, 4.5684, 1.8875, 3.5486, 3.9917, 0.0], [0.633, 7.0656, 6.2839, 11.3505, 6.683, 2.5834, 2.0492, 0.4526, 5.5257, 11.424, 6.7444, 4.1952, 4.2968, 6.4634, 0.0, 7.0972, 2.2915, 4.0406], [4.312, 5.4648, 4.7705, 13.0369, 6.5083, 3.2382, 2.5568, 5.1557, 5.3714, 11.808, 4.314, 3.1008, 2.2065, 3.3332, 0.0, 7.8625, 8.353, 3.047], [2.1362, 7.0656, 8.554, 17.5122, 8.8234, 0.1166, 4.5872, 1.7112, 5.4022, 15.072, 5.2557, 1.824, 5.0323, 3.5532, 1.7302, 7.0972, 2.9568, 1.3248], [1.2659, 8.5008, 7.7644, 15.2421, 6.8578, 4.3804, 2.1086, 8.5201, 17.76, 3.038, 6.8856, 2.7871, 7.2925, 1.101, 6.6797, 5.3222, 1.1923], [3.8373, 10.3224, 6.8103, 13.2963, 7.644, 4.485, 4.23, 1.2254, 8.1188, 15.168, 7.0482, 4.9248, 5.1871, 1.8351, 13.6377, 6.1354, 6.7565], [3.2439, 10.0464, 9.5081, 11.9342, 9.3475, 0.0, 4.1924, 3.577, 7.841, 19.392, 8.0811, 6.6576, 6.6194, 0.0, 11.587, 11.9678, 15.0797, 5.2661], [3.8373, 15.7872, 10.4951, 20.6255, 11.2694, 0.5203, 7.0688, 4.405, 8.304, 25.824, 6.8659, 9.9864, 8.8259, 5.3636, 6.3965, 13.7073, 15.5971, 3.875], [8.0307, 11.6472, 4.8363, 18.3554, 12.7109, 3.9737, 6.1476, 4.4491, 9.2301, 20.736, 6.3494, 7.6608, 12.4646, 6.6326, 5.977, 16.4209, 13.7491, 9.6379]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

