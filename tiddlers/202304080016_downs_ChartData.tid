created: 20230408001602000
creator: Drevarr
modified: 20230705163524685
modifier: drevarr
tags: ChartData
title: 202304080016_downs_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Blancooo Padreee", "Aife Ildanach", "Be\u00eb", "N Er Gal", "Arcanophage Farra", "Kiloak", "Lord Erin The Wise", "Panther B Me", "Smol Gluvs", "Kos\u00e4ir", "Smol Daddy Tika", "Kmpek", "Kos\u00e4ir", "Jeckyll Mbs", "Xyntharos", "Vocare Veilrender", "Smol Dome Dim", "S E M C H O R \u00c1", "Sp\u00edcy Cheese", "Sofya De Nova", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Scourge", "Berserker", "Weaver", "Scourge", "Dragonhunter", "Spellbreaker", "Dragonhunter", "Weaver", "Scourge", "Scourge", "Herald", "Berserker", "Vindicator", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Berserker", "Scrapper", "Berserker", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Enemies Downed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 2], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 3], [2, 5, 0, 2], [0, 2, 0, 0, 5, 0, 1, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 4, 1, 2], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 2, 0, 0, 1], [0, 0, 0, 0, 2, 4, 0, 1, 0, 0, 1, 2, 3, 0], [0, 1, 0, 0, 3, 0, 1, 1, 1, 0, 0, 3, 1, 0, 0, 0, 4], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 3, 1, 1, 0, 2, 2, 0, 1], [0, 1, 1, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 4, 1, 0, 4, 3, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 4, 5, 4, 6, 2, 1], [0, 1, 0, 1, 2, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0, 0, 3, 4, 0, 0, 0, 0, 2, 2, 3, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 4, 3, 3, 0, 1, 1, 3, 0, 4, 0], [0, 0, 1, 1, 6, 0, 1, 1, 0, 0, 7, 4, 4, 2], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 3, 0, 0, 2, 0, 2, 1, 4, 11, 0, 2, 1, 0, 0], [0, 1, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 2, 1, 6, 1, 0, 3, 4, 3, 0], [1, 1, 2, 1, 2, 0, 2, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 7, 4, 0, 2, 0, 1, 0, 4, 1], [2, 1, 0, 0, 0, 0, 1, 1, 0, 0, 7, 2, 0, 0, 0, 3, 0, 5, 5, 2, 0, 1, 0, 4, 2], [1, 4, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 3, 4, 2, 3, 1, 0, 7, 4, 1, 4], [4, 2, 1, 1, 1, 0, 3, 0, 2, 0, 0, 2, 1, 0, 1, 0, 3, 0, 8, 1, 1, 4, 3, 6, 3, 0], [1, 0, 2, 2, 0, 1, 1, 0, 1, 2, 0, 4, 0, 0, 0, 0, 3, 5, 6, 7, 4, 1, 4, 2, 0, 1], [0, 0, 4, 1, 2, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 0, 7, 6, 4, 7, 0, 0, 5, 6, 2, 4], [1, 4, 3, 0, 2, 1, 6, 0, 0, 0, 0, 5, 0, 1, 0, 0, 9, 7, 6, 5, 3, 1, 6, 11, 3, 1]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

