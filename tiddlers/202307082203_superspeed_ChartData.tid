created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Legacy Of Mathus", "Cedryn X", "Glorious Gluvs", "Ateriuz", "Sakis Ranger", "Newtype Khan", "Tegan Parker", "Johosh The Mighty", "Artakama Nahid", "Venomina The Siren", "Xanvias Einzbern", "Mechanical Dark", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Berserker", "Berserker", "Berserker", "Druid", "Spellbreaker", "Tempest", "Berserker", "Tempest", "Tempest", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.497, 0, 1.847, 0.75, 0, 0, 1.328, 0, 0, 0], [0.72, 0, 0.368, 0, 0.442, 0, 0, 0, 0, 0, 0.765, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1.017, 0, 0, 0, 0.062, 0.961, 0.991, 0], [1.581, 0.496, 1.044, 0, 0, 0, 0, 0, 0, 1.085, 0, 0.71, 0, 0.96, 0, 0], [0, 0, 1.832, 0.743, 1.475, 1.016, 0.842], [0.628, 0.797, 0, 0, 0.742, 0.445, 0.789, 0.608, 0.649, 0.487, 0.317, 0.459, 0.577, 0, 0], [1.582, 0.33, 1.324, 0, 0, 0.86, 0.741, 0, 0, 0.266, 0.644, 0, 0.606, 0.721, 0.495, 0], [1.214, 0.844, 1.099, 0.445, 0.789, 1.213, 0.65, 0.419, 0, 0.803, 0.595, 1.007], [2.205, 1.145, 1.018, 2.435, 0, 0.868, 0.744, 0.089, 1.016, 1.689, 0, 0.711], [1.897, 0.298, 0.784, 0.164, 0, 0.954, 0.446, 0.782, 0, 0, 0, 0.382, 0.404, 0.576, 0.595, 0.571, 2.669], [0.797, 0, 0.633, 1.491, 0.792, 0.607, 1.141, 0.443, 0.853, 0.891, 1.711, 1.187, 1.509], [1.582, 1.251, 1.682, 2.132, 0, 1.175, 0.743, 1.6, 1.018, 1.223, 0.828, 0.699, 1.51, 1.034, 1.485, 0.959], [0.617, 2.842, 1.965, 1.925, 1.439, 8.083], [2.847, 1.191, 1.47, 1.003, 1.792, 0.913, 1.338, 1.449, 2.755, 1.632, 1.136, 0.491, 1.828, 2.235, 0.446, 1.643, 0.889]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

