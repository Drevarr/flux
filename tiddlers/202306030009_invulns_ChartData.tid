created: 20230603000934000
creator: Drevarr
modified: 20230705163533126
modifier: drevarr
tags: ChartData
title: 202306030009_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Sanellek Knut", "P\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6\u0153\u00e6", "Bella Sassy", "Newtype Khan", "Duke Silvver", "Arriasa", "Hyde En Sikh", "Smol Gluvs", "Air One Com", "Drevarr Moonwillow", "Sakis Ranger", "A Girl Named Jeff", "N\u00f3b\u00fa", "Latedoctor", "Koralia Danai", "Morv\u00e4rth", "Dusknant", "Zadey Starbolt", "Wild Doggy", "Ana Larive", "Tika Fiery", "Johosh Of The North", "Cat Wigglebooty", "Morv\u00e4rth", "Be\u00eb", "Pu Ella", "Aronorf Xideliesi", "Grasszanine", "Kary\u00edna", "Mistwalker Cael", "Pamtastic", "Tegan Parker", "Xyntharos", "Destiny Searider", "Grothez", "Husky Guard", "Black Raspberry Pie", "Primal Clone", "Grilo Gringo", "Cyclotechnist Farra", "High Sorcer Baradun", "Xanvias Tsoli", "The Fancy Cheese", "Sureting", "Lord Erin The Wise", "Melli Dragonswrath", "Venomina The Siren", "Miphest\u00f6"];
const professions = ["Druid", "Herald", "Firebrand", "Spellbreaker", "Vindicator", "Druid", "Chronomancer", "Scourge", "Firebrand", "Scrapper", "Druid", "Spellbreaker", "Druid", "Reaper", "Firebrand", "Reaper", "Vindicator", "Scrapper", "Dragonhunter", "Tempest", "Firebrand", "Tempest", "Scrapper", "Scourge", "Reaper", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator", "Vindicator", "Tempest", "Tempest", "Vindicator", "Ranger", "Tempest", "Dragonhunter", "Chronomancer", "Chronomancer", "Dragonhunter", "Scrapper", "Tempest", "Holosmith", "Scrapper", "Reaper", "Weaver", "Berserker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24, 8, 0, 0, 0, 14], [0, 1, 0, 12, 0, 0, 14, 4, 2, 0, 14], [0, 0, 0, 2, 0, 0, 0, 0, 14, 0, 0, 0, 14, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 7, 0, 0, 0, 0, 12, 0, 0, 0, 1, 0, 17, 2, 11, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 25, 0, 20, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 6, 32, 0, 0, 0, 0, 10, 0, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 21, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 28, 0, 0, 0, 10, 0, 14, 0, 0, 0, 0, 0, 0], [0, 4, 37, 16, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 21, 0, 10, 0, 0, 0, 4, 15, 8, 0, 0, 2, 0, 0, 0], [36, 16, 10, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 13, 12, 0, 0, 0, 28, 0, 10, 0, 0, 0, 0, 0, 0], [0, 0, 0, 34, 0, 0, 29, 0, 0, 0], [0, 0, 0, 0, 0, 0, 65], [0, 0, 0, 0, 0, 0, 0, 17, 19, 0, 0, 0, 0, 23, 0, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 12, 0, 0, 8, 0, 12, 0, 32, 0, 0, 0, 0, 0, 0], [0, 0, 31, 0, 0, 0, 16, 0, 22, 0], [0, 0, 0, 13, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 20, 0, 19, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 18, 18, 2, 0, 0, 0, 18, 0, 12, 0, 0, 0, 0, 0, 0], [35, 0, 0, 0, 0, 37, 0, 6, 0, 0, 0], [78], [0, 0, 16, 0, 0, 0, 0, 10, 0, 19, 0, 7, 0, 26, 0, 4], [0, 0, 0, 0, 0, 0, 0, 3, 38, 0, 0, 26, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0], [49, 24, 0, 0, 0, 4, 0, 18, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 4, 0, 43, 0, 6, 0, 18, 0, 0, 0, 0, 0, 0], [0, 0, 0, 35, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 25, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 52, 0, 0, 0, 28, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 10, 26, 0, 0, 0, 19, 0, 19, 36, 0, 0, 0, 0, 0], [0, 0, 0, 20, 0, 0, 0, 0, 8, 39, 0, 0, 0, 0, 10, 0, 35, 0], [0, 0, 9, 0, 0, 0, 11, 8, 86, 0], [1, 0, 20, 0, 0, 0, 10, 40, 42, 8], [0, 0, 0, 28, 0, 0, 0, 0, 18, 67, 10, 0, 22, 0], [0, 0, 0, 6, 0, 0, 15, 2, 0, 6, 0, 74, 20, 18, 6, 0, 0, 0, 0, 0], [0, 0, 0, 10, 0, 0, 0, 0, 43, 16, 0, 14, 0, 48, 0, 12, 0, 0, 6, 0, 0, 0], [34, 22, 15, 0, 20, 0, 62], [0, 0, 0, 30, 0, 0, 0, 9, 26, 21, 44, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 13, 0, 0, 0, 0, 31, 35, 78], [0, 0, 0, 9, 0, 0, 0, 0, 64, 14, 19, 0, 35, 0, 15, 0, 17, 0, 0, 4, 0, 0, 0], [0, 0, 0, 29, 0, 0, 0, 0, 11, 50, 82, 0, 11, 0, 15, 0, 0, 0, 0, 0, 0], [0, 0, 0, 42, 0, 0, 22, 34, 0, 13, 0, 54, 33, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 16, 0, 0, 0, 0, 108, 0, 0, 0, 43, 0, 28, 9, 29, 0], [0, 0, 0, 37, 0, 0, 0, 0, 22, 55, 26, 0, 16, 0, 16, 69, 19, 0, 0, 0, 0, 0, 0], [0, 0, 28, 0, 0, 0, 0, 55, 0, 87, 0, 0, 204, 0, 45, 0, 0, 0, 0, 0], [92, 74, 0, 27, 49, 0, 0, 97, 18, 101]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

