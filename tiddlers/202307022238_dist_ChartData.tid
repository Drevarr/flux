created: 20230702223827000
creator: Drevarr
modified: 20230705163540982
modifier: drevarr
tags: ChartData
title: 202307022238_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Morv\u00e4rth", "Thalia Mavren", "Trap User", "S\u00e2ucy K\u00e2t", "Aronorf Xideliesi", "Ima Lou", "Amiti\u00e9l", "Silvyrs", "Artakama Nahid", "Valaria Emberstorm", "Spirita Demon", "Smol Gluvs", "St\u00e1rless", "Tacitus Tacitus", "Zayde Sunsabre", "K\u00e2 Otik", "Grasszanine", "Tika Fiery", "Jmbrage Rev", "Bella Sassy"];
const professions = ["Reaper", "Firebrand", "Dragonhunter", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Firebrand", "Tempest", "Tempest", "Druid", "Reaper", "Spellbreaker", "Reaper", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[584, 233, 351, 650, 713, 2066, 238, 2122, 404, 286, 312, 472, 397, 1877, 1689, 2270, 572, 659, 683, 398, 6986, 524, 710, 615, 2266, 239, 289, 425], [1548, 198, 535, 221, 289, 6835, 445, 1118, 915, 539, 380, 258, 276, 439, 956, 1210, 221, 253, 216, 491, 302, 3334, 359, 340, 511, 2314, 398, 258, 371, 354], [600, 2197, 1791, 986, 310, 502, 1992, 946, 554, 360, 212, 457, 3616, 238, 11433, 612, 876, 260, 195, 1490, 829, 8136, 3806, 813, 290, 381, 426, 16133], [9954, 380, 379, 278, 224, 7090, 547, 422, 288, 1651, 353, 239, 344, 389, 2220, 891, 4848, 296, 186, 276, 387, 198, 2190, 395, 285, 455, 309, 1892, 461, 338, 411, 1498], [421, 390, 243, 298, 250, 429, 272, 187, 1513, 308, 244, 235, 317, 2096, 1106, 300, 251, 150, 219, 409, 673, 1672, 318, 590, 1297, 2000, 293, 330, 254, 2148, 345, 324, 306, 1397, 678, 1273, 186, 209, 858, 216, 229, 307, 258, 234, 292, 233, 538, 1588], [317, 259, 446, 1667, 308, 893, 314, 359, 293, 286, 1848, 1258, 176, 138, 208, 350, 311, 4377, 213, 176, 302, 1511, 361, 325, 263, 303, 6526], [349, 269, 209, 284, 256, 472, 1461, 252, 414, 308, 273, 375, 359, 303, 972, 1446, 1160, 286, 437, 317, 3928, 594, 335, 358, 1742, 2463, 603, 463, 1432, 5853, 1172, 289, 821, 317, 662, 270, 253, 471, 332, 193, 235, 651, 464, 165, 173, 199, 372], [3707, 162, 528, 235, 344, 236, 481, 519, 207, 830, 230, 195, 254, 329, 956, 1621, 379, 103, 260, 382, 202, 7013, 521, 271, 453, 1316, 726, 431, 389, 366, 325, 695, 328, 353, 1032, 224, 167, 1008, 752, 193, 183, 282, 203, 136, 175, 274, 385], [3053, 226, 456, 205, 306, 215, 790, 500, 242, 908, 266, 224, 193, 182, 262, 1848, 1452, 457, 399, 161, 172, 308, 183, 7293, 434, 194, 419, 245, 395, 235, 218, 2494, 470, 406, 482, 614, 647, 204, 170, 417, 423, 176, 230, 285, 219, 158, 260, 232, 296, 6440], [316, 1938, 712, 243, 282, 215, 343, 304, 1777, 1529, 253, 3777, 141, 161, 225, 266, 7000, 352, 235, 482, 1832, 1407, 327, 189, 229, 562, 307, 427, 226, 1347, 793, 156, 151, 293, 782, 231, 219, 257, 278, 200, 212, 258, 1918, 1697], [681, 273, 368, 603, 261, 266, 706, 976, 349, 553, 288, 431, 284, 1036, 173, 181, 412, 346, 217, 182, 256, 254, 218, 154, 267, 332], [406, 249, 261, 372, 237, 1548, 607, 2742, 256, 379, 201, 2837, 444, 461, 1281, 354, 393, 279, 322, 18521, 445, 413, 231, 406, 658, 637, 205, 180, 373, 412, 9456, 3207, 267, 213, 189, 236, 294, 385, 848], [740, 798, 240, 300, 201, 245, 328, 1077, 1147, 1114, 1029, 147, 372, 213, 3383, 773, 460, 324, 342, 504, 266, 278, 14936, 346, 222, 13493, 450, 480, 145, 189, 322, 336, 179, 138, 381, 260, 156, 300, 218, 338, 2182], [325, 403, 636, 761, 201, 304, 244, 16747, 2561, 306, 178, 449, 477, 482, 225, 4581, 15814, 1968, 171, 245, 317, 224, 159, 202, 186, 382], [479, 709, 277, 267, 204, 356, 282, 1299, 242, 194, 317, 525, 272, 1773, 617, 245, 3513, 84, 159, 323, 176, 6934, 549, 247, 429, 467, 3504, 296, 416, 618, 14726, 10712, 304, 14722, 1022, 670, 838, 168, 149, 515, 327, 176, 174, 9327, 903, 221, 240, 471, 471], [181, 321, 173, 389, 180, 396, 306, 963, 286, 184, 211, 331, 208, 1336, 712, 313, 798, 136, 207, 308, 219, 6505, 584, 381, 441, 4087, 321, 450, 198, 2512, 2015, 292, 214, 792, 452, 183, 173, 804, 298, 151, 149, 238, 217, 193, 168, 178, 316], [125, 449, 209, 3714, 655, 454, 333, 358, 8695, 255, 258, 295, 2478, 466, 456, 235, 360, 404, 705, 203, 109, 409, 615, 204, 163, 280, 180, 155, 158, 329, 5450], [2066, 155, 402, 171, 294, 174, 496, 590, 168, 881, 296, 197, 179, 369, 184, 826, 1567, 210, 160, 281, 199, 6991, 214, 270, 400, 386, 8703, 278, 302, 196, 1051, 423, 175, 271, 497, 459, 684, 206, 182, 455, 347, 210, 152, 263, 270, 165, 262, 255, 420, 2097], [154, 308, 194, 297, 158, 289, 1266, 190, 884, 273, 166, 204, 244, 309, 427, 1158, 207, 99, 147, 235, 175, 2812, 300, 473, 986, 352, 150, 232, 334, 1186, 776, 361, 248, 304, 372, 880, 182, 156, 633, 319, 333, 212, 293, 224, 161, 165, 251, 323, 2120], [173, 231, 228, 280, 233, 331, 239, 297, 1446, 194, 215, 225, 292, 212, 1812, 806, 206, 260, 191, 280, 253, 1880, 230, 195, 301, 232, 247, 207, 1103, 269, 190, 210, 354, 622, 686, 222, 176, 355, 242, 164, 191, 368, 230, 189, 154, 223, 275]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

