created: 20230614224052000
creator: Drevarr
modified: 20230705163535526
modifier: drevarr
tags: ChartData
title: 202306142240_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Morton Saltbringer", "Venomina The Siren", "Ryvalia Fazebringer", "Sakis Ranger", "Arriasa", "Black Raspberry Pie", "Koralia Danai", "Crusader Siolith", "Tika Fiery", "Solus Sanctus"];
const professions = ["Tempest", "Chronomancer", "Tempest", "Chronomancer", "Druid", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.7903, 12.4127, 9.7707, 46.8318, 14.5248, 7.6427, 13.4839, 10.1065, 19.7543], [42.6442, 27.8032, 31.8529, 44.5655], [27.8462, 17.7171, 10.1678, 47.4132, 8.8128, 17.7912, 0.0, 37.2895, 0.0], [18.7783, 11.5286, 11.3591, 59.4481, 21.3112, 9.9549, 68.2227, 48.1627, 61.9551], [29.2799, 34.1305, 25.8011, 104.4776, 21.6376, 30.5366, 37.2494, 38.6696], [60.906, 30.7192, 25.8847, 71.0761, 46.4712, 11.7887, 46.9741, 62.5906, 0.0], [16.0225, 31.7908, 36.9198, 88.6926, 23.7456, 49.7173, 15.7651, 27.6848, 66.2298], [162.4595, 92.8541, 83.9657, 198.2283, 97.1448, 90.6986, 93.2091, 182.5582, 43.8743], [38.8786, 128.4938, 95.0427, 323.5491, 73.304, 123.8662, 89.7177, 130.0881, 58.4627], [59.3513, 132.3069, 121.7529, 248.0834, 71.6176, 130.3472, 108.2246, 139.2606, 84.0742], [100.8738, 95.6403, 101.0933, 375.0902, 117.1368, 83.2267, 55.2315, 169.0783, 135.7156]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

