created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Zaedy Zae", "Lumerence", "Name Is What", "Xo Zen Xo", "Avatar Shazbott", "Morton Saltbringer", "Hawaiian Supreme", "X Mad X King X", "Cat Wigglebooty", "Belvyn Brightblade", "Luke The Ghastly", "Name Is What", "Tootsie Pop Rocks", "Tegan Parker", "Rahani Sunray", "Philip Poundhouse", "Raziel Umbra", "Eibh\u00ebar", "Mistwalker Cael", "Mike The Archmagus", "Aspros Gemeos", "Alizayd Delnbone", "Miphest\u00f6", "Glorious Gluvs", "Xanvias Einzbern", "K\u00e2 \u00d4tik R\u00e6j", "Blancooo Padreee", "Kisumaiassu", "Newtype Khan", "Drevarr Moonwillow", "Sygaldry Verdandi", "Solus Sanctus", "Gavann", "Bella Sassy", "Crusader Siolith"];
const professions = ["Firebrand", "Druid", "Virtuoso", "Scourge", "Tempest", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Reaper", "Scrapper", "Tempest", "Chronomancer", "Herald", "Chronomancer", "Chronomancer", "Vindicator", "Weaver", "Spellbreaker", "Firebrand", "Tempest", "Berserker", "Berserker", "Berserker", "Berserker", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6552, 195.7725, 13.6526, 6.8116, 0.0, 137.6739], [0.0, 0.0, 3.824, 0.0, 0.0, 0.0, 0.0, 58.063, 0.0, 60.1083, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 83.3976, 13.1742, 0.0, 41.4305, 63.1785, 0.0, 47.5872, 0.0, 0.0], [14.3252, 0.0, 0.0, 4.2336, 0.0, 0.0, 0.0, 0.0, 37.8782, 0.0, 0.0, 193.746, 124.2768, 0.0, 0.0, 0.0, 0.0], [87.2495, 3.8977, 12.352, 76.4694, 78.4176, 28.7434, 64.1056, 28.0035, 44.1431], [65.4304, 0.0, 21.7944, 0.0, 0.0, 89.2704, 67.7251, 31.4289, 32.3505, 0.0, 40.2033, 82.3284, 0.0, 6.5769], [13.1299, 35.1245, 155.3294, 31.752, 104.9376, 44.3664, 76.6687, 56.511], [43.2518, 57.9285, 91.7865, 54.7373, 192.6936, 49.6899, 30.9235], [120.6287, 44.9194, 189.6468, 0.0, 132.3432, 34.2732, 27.4019, 108.4545], [55.2294, 0.0, 37.2508, 3.5861, 0.0, 49.5312, 4.9296, 0.0, 17.892, 78.1813, 48.5659, 272.1708, 38.7972, 88.5628], [13.9544, 0.0, 49.6, 1.7388, 11.3098, 70.0632, 71.419, 45.7498, 39.7733, 43.7932, 64.4986, 0.0, 53.2848, 66.5117, 1.7132, 27.1845, 7.4343, 23.8805, 107.0388, 0.0, 0.0, 0.0, 32.34, 40.4633, 1.5695, 0.0, 16.1376], [91.6074, 11.2928, 13.392, 126.9702, 28.3694, 15.0849, 110.4198, 48.7379, 19.9656, 103.3699, 86.9373, 0.0, 166.2192], [246.3504, 2.8819, 38.8737, 21.3885, 5.685, 174.2291, 217.0476, 0.0, 14.3792, 102.5164, 28.7595, 48.5944], [42.3166, 41.2587, 104.4956, 108.6042, 42.4579, 40.6038, 56.0968, 102.3305, 39.935, 140.4216, 11.0682, 51.5527, 55.1507, 167.5905, 20.6574, 74.9593, 38.7649], [53.2445, 0.0, 45.136, 13.5702, 71.1374, 47.3526, 91.0017, 46.9862, 33.2083, 16.0289, 50.4616, 61.9344, 30.9427, 0.0, 26.6175, 45.3831, 10.375, 92.3076, 38.5624, 69.1408, 172.557, 51.3414, 73.484, 30.9628], [26.0311, 30.0105, 24.048, 0.0, 44.9777, 12.987, 44.1844, 57.3933, 0.0, 23.062, 111.2716, 99.4245, 64.6272, 35.9482, 90.2471, 29.6415, 15.9375, 50.0864, 190.674, 0.0, 0.0, 45.6314, 132.825, 31.7278, 10.6098, 33.5817, 63.1384], [47.5885, 0.0, 0.0, 40.2192, 28.417, 28.1385, 101.4512, 96.1878, 55.9714, 37.6597, 53.2792, 11.0775, 110.3232, 28.0608, 0.2961, 59.9445, 5.0534, 36.4021, 86.2488, 8.9154, 105.0254, 78.8914, 90.8985, 48.1274, 29.6635, 45.6394, 35.2001], [129.5986, 477.2196, 98.4204, 203.433, 23.9719, 0.0, 24.6681, 95.9278, 130.753, 123.8897], [57.8341, 34.3231, 41.2, 36.8928, 105.7795, 18.4149, 47.3933, 60.1238, 12.047, 65.8738, 46.2607, 0.0, 85.272, 93.5866, 35.4686, 53.739, 35.2277, 43.2442, 113.2164, 0.0, 36.1523, 62.9358, 148.533, 19.0367, 61.9639, 0.0, 4.9085], [31.1539, 23.0747, 2.848, 18.9756, 32.3374, 38.2617, 82.1977, 69.2944, 47.015, 41.0944, 29.8159, 36.309, 96.8592, 45.959, 29.5677, 11.5605, 70.5527, 46.0616, 110.484, 20.7792, 37.6229, 65.518, 246.708, 30.5192, 9.4798, 35.6004, 36.5786], [5.9573, 21.7113, 38.192, 59.6484, 67.0032, 34.4655, 63.6847, 62.8029, 41.736, 74.338, 27.4593, 121.992, 110.4989, 0.0, 0.567, 59.5713, 39.6219, 113.3352, 6.7743, 67.0349, 36.6901, 148.533, 46.0672, 0.0, 74.5017, 41.0836], [35.4791, 35.984, 64.0332, 58.3546, 53.4132, 45.5008, 81.5046, 35.6674, 28.2959, 78.4331, 38.913, 0.0, 70.2278, 0.0, 26.901, 131.2902, 75.3085, 249.3612, 2.9484, 63.3992, 55.7674, 0.0, 25.8767, 33.5559, 39.5833, 41.7224], [70.7958, 180.6869, 131.3245, 94.0526, 182.4512, 221.6722, 0.0, 268.9536, 54.8323, 56.1532, 131.4495], [140.0765, 0.0, 35.3115, 79.0559, 43.2442, 418.2948, 58.6755, 204.7811, 71.5688, 370.755, 76.7786, 4.0807, 52.3503, 104.5918], [38.0136, 75.7283, 108.8125, 8.967, 345.9024, 98.2886, 40.3542, 96.8625, 59.4256, 140.1078, 144.4608, 0.0, 1.7974, 181.8317, 218.6415, 25.7394, 77.2508], [31.803, 11.4262, 34.56, 36.3258, 24.354, 72.9936, 117.9895, 59.8147, 35.1936, 117.3952, 74.386, 29.7675, 79.6416, 160.0982, 9.8982, 0.0, 86.2958, 34.5238, 221.0868, 49.5027, 40.7683, 0.2312, 202.9335, 36.6999, 62.4033, 67.1088, 11.8679], [7.2553, 0.0, 51.072, 80.2494, 58.5922, 74.6919, 158.0599, 17.0531, 67.7026, 23.3073, 87.9619, 0.0, 22.1952, 169.3507, 19.0562, 0.0, 89.6, 98.6076, 155.3904, 0.3276, 23.8155, 25.8989, 322.014, 69.9661, 56.9415, 41.8475], [69.4936, 26.3055, 63.296, 51.1434, 45.1202, 71.8614, 62.1214, 96.497, 0.0, 45.3879, 38.9348, 56.2695, 224.4816, 55.0598, 29.1447, 60.858, 10.6412, 38.4145, 224.1756, 9.7695, 70.0986, 66.52, 206.1675, 68.0707, 40.1792], [0.0, 66.339, 29.0822, 27.1062, 92.1536, 54.4566, 22.763, 40.6447, 1.5881, 45.9375, 213.5472, 105.8726, 34.6437, 27.531, 113.2633, 32.422, 215.9784, 18.4626, 60.1721, 23.7021, 422.961, 50.6547, 35.4393, 9.2752], [127.8377, 28.3803, 0.0, 0.0, 0.0, 26.4735, 28.798, 36.7338, 158.9352, 139.6802, 173.7722, 0.0, 142.392, 82.4381, 31.2385, 134.757, 73.0794, 86.3543, 196.02, 0.0, 90.4419, 0.0, 230.1915, 0.0, 0.0, 69.1821, 86.9749], [48.7244, 0.0, 15.008, 89.5482, 42.269, 55.5444, 201.4214, 112.9318, 7.2192, 110.2803, 60.0928, 237.5376, 137.8013, 90.0779, 118.629, 130.0268, 164.0777, 490.8816, 51.9831, 64.2571, 196.7082, 334.026, 73.2625, 52.233, 47.3581, 109.4667], [124.0594, 10.9816, 47.6, 137.2518, 45.833, 67.0329, 156.8257, 149.1504, 74.4254, 123.1607, 168.0856, 30.2085, 310.7328, 139.5456, 15.9894, 61.7715, 112.0485, 137.2457, 358.5384, 32.5962, 110.1724, 141.7887, 349.3875, 108.6439, 119.5645, 40.1562, 83.4785], [75.845, 9.4996, 18.064, 16.8588, 9.2664, 13.653, 251.2831, 189.7482, 122.388, 165.5227, 342.9336, 0.0, 184.7424, 213.1104, 135.5926, 109.116, 165.0602, 199.8537, 347.9652, 5.0193, 165.8102, 1.8114, 680.757, 67.274, 134.1609, 28.835, 45.8577], [32.4984, 0.2519, 87.936, 108.8262, 20.885, 152.0478, 404.5708, 136.2189, 65.3789, 144.9142, 185.6575, 48.0165, 331.6224, 126.4253, 91.1988, 71.253, 244.6021, 209.066, 922.7196, 116.8362, 225.6145, 124.8311, 345.114, 10.5485, 156.2594, 87.8143, 171.7646], [126.1919, 37.6428, 162.272, 301.6062, 98.105, 91.9413, 0.9874, 75.7859, 0.5866, 57.9411, 72.2855, 0.0, 183.6, 435.2458, 42.9768, 60.543, 146.2073, 22.2706, 923.67, 250.6147, 295.2549, 1402.0545, 81.9979, 247.7613, 56.3332, 162.6872], [0.0, 67.6829, 50.608, 201.663, 65.4588, 173.8926, 408.2734, 263.7309, 66.913, 197.5396, 190.6781, 86.499, 431.3376, 431.833, 171.6746, 179.298, 240.4719, 153.7026, 774.2196, 40.6107, 220.0181, 113.6159, 543.4275, 152.5958, 114.2596, 103.855, 198.2908], [111.6117, 78.5756, 68.88, 217.6146, 137.2853, 216.6831, 483.0659, 215.5082, 154.3104, 219.334, 206.8667, 2.688, 397.8, 484.4659, 77.0918, 203.4585, 284.4945, 275.3858, 965.25, 81.3969, 225.6145, 136.5858, 489.1425, 210.2554, 216.0888, 178.0838, 266.7411]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

