created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Useless Light Field", "Sister Elon\u00edth", "Crusader Siolith", "Gavann", "Tegan Parker", "Jerryatric Reflexes", "Bella Sassy", "Latedoctor", "Luke The Ghastly", "Kisumaiasu", "Mistwalker Cael", "Mort\u00e4rion", "Drevarr Moonwillow", "Rafaellagabriela", "Fang Shiyu", "Glorious Gluvs", "Lord Erin The Wise", "Sub Train", "Marceluuk", "Urilstormwalker", "Legacy Of Mathus", "Sygaldry Verdandi", "Keypek The Drunk", "Daphne Agla\u00e9", "Necrotic Windrunner", "Jimbo The Pleb", "Solus Sanctus", "Rina Of Theros", "Oo Dads Mad", "Hey Yey Yeah Ah Ah", "Ateriuz", "Xanvias Einzbern", "Holten Mcgroins", "Mister Jekyll", "Name Is What", "Johosh The Mighty", "Be\u00eb"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Firebrand", "Reaper", "Scourge", "Reaper", "Vindicator", "Scrapper", "Scrapper", "Firebrand", "Dragonhunter", "Berserker", "Weaver", "Firebrand", "Reaper", "Firebrand", "Berserker", "Firebrand", "Scrapper", "Scourge", "Scourge", "Berserker", "Firebrand", "Scourge", "Berserker", "Firebrand", "Berserker", "Berserker", "Thief", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.834, 61.7849, 11.3431, 5.1027, 0.0, 44.2231], [14.4483, 38.1327, 3.3183, 23.8197, 13.493, 21.0, 9.4706, 0.5775, 0.0355, 3.4891, 1.1315, 6.8594, 6.4194, 6.9412, 0.0, 0.0, 2.4715, 6.5115], [12.7586, 0.0, 1.7155, 25.377, 0.0, 2.8375, 4.0588, 10.0986, 0.1064, 73.7445, 0.0, 2.6504, 27.2366, 9.6569, 2.3027, 9.6744, 4.3659, 6.0115], [36.837, 68.8061, 8.1521, 31.7705, 8.4648, 26.0125, 11.662, 0.0, 0.5839], [18.7743, 23.1327, 0.2, 1.7869, 9.1831, 131.4875, 0.0, 0.6197, 0.0, 3.4745, 4.1235, 4.5176, 1.2043, 54.3333, 0.0, 0.0, 0.0, 0.0], [0.1122, 10.9296, 30.4262, 19.1972, 16.225, 0.0, 6.5634, 0.5887, 7.2701, 10.239, 29.4629, 7.0323, 0.4804, 0.2324, 1.8372, 14.3415, 6.4654], [29.7022, 6.3776, 4.2535, 15.459, 17.2254, 13.3625, 14.6176, 16.6901, 0.0, 2.0438, 2.5259, 21.459, 12.0, 5.4608, 0.0, 12.6512, 4.5447, 7.8885], [1.7943, 0.8102, 5.757, 29.293, 53.0753, 19.7451, 1.3838, 7.3256, 17.561, 31.9192], [141.1615], [24.2194, 66.551, 7.6141, 25.459, 15.1831, 24.0875, 0.0, 40.5352, 2.2766, 0.8029, 0.0, 13.7637, 27.7527, 11.7157, 1.1892, 0.0, 16.1138, 16.2615], [10.4859, 19.0612, 8.9014, 15.1639, 37.6761, 37.2875, 22.3529, 15.2535, 0.1844, 23.9051, 11.3227, 22.9434, 22.1828, 0.0, 27.7676, 0.0, 4.2683, 21.3885], [32.0596, 27.7551, 11.8901, 27.2787, 0.9437, 54.1875, 0.0, 58.0, 5.6028, 26.7518, 3.8526, 12.5234, 61.3871, 11.0294, 0.2757, 3.907, 20.6179], [33.8495, 32.7959, 12.2479, 55.7541, 19.8451, 53.525, 73.3529, 12.1972, 3.2837, 12.4307, 11.7291, 6.8301, 5.7419, 15.8235, 2.0919, 6.2558, 27.3496, 26.5077], [36.7041, 10.8592, 43.9672, 6.8169, 139.375, 0.0, 26.0141, 36.773, 0.0657, 4.8566, 13.4355, 27.7204, 1.1961, 0.3189, 16.3721, 76.6423, 11.55], [0.0, 62.2623, 61.507, 60.325, 15.5, 42.0704, 57.9007, 11.8978, 1.6574, 27.0664, 70.3978, 7.8824, 8.027, 23.9535, 18.4065, 5.9577], [116.6332, 12.1327, 11.6197, 7.4918, 65.7465, 0.1176, 0.7042, 1.0638, 1.0365, 0.9721, 19.1074, 3.9892, 2.3824, 0.0, 2.6512, 8.2195, 3.45], [96.8878, 0.0, 52.9508, 73.1408, 57.1176, 110.9155, 16.8298, 7.9927, 5.7968, 16.9727, 149.4731, 10.3333, 1.8757, 14.1163, 59.5691, 15.2423], [44.116, 41.5102, 5.9352, 41.8525, 57.6056, 127.275, 0.0, 4.2958, 0.0, 16.6861, 2.0279, 12.5938, 14.4301, 42.8333, 2.2432, 22.0465, 91.2033, 23.2115], [37.6395, 63.8776, 27.8, 60.1311, 58.9296, 152.9, 0.0, 14.507, 4.2057, 7.4891, 6.4542, 31.7891, 11.7957, 0.6863, 16.827], [56.3099, 1.4468, 55.3577, 3.3347, 29.2539, 140.3333, 31.2745, 4.2486, 49.0, 35.3577, 99.1038], [9.6733, 83.8047, 55.9247, 43.5686, 0.2541, 141.8837, 17.5203, 70.0538], [32.4357, 49.8571, 27.6028, 121.5902, 43.6479, 87.2125, 0.0, 47.169, 0.0, 4.9489, 5.1394, 19.4082, 37.5054, 25.4314, 14.3784, 6.0698, 62.8699, 30.0577], [61.1787, 74.0816, 18.9465, 60.3115, 86.5493, 58.9875, 65.0882, 24.1972, 7.9716, 16.3285, 6.6574, 21.582, 26.0753, 30.9412, 18.7838, 31.6279, 43.3252, 34.45], [36.9906, 42.1224, 25.8254, 259.0984, 241.4085, 191.9875, 14.7353, 65.7606, 5.7234, 6.6861, 15.7928, 19.6465, 70.4731, 21.4118, 4.0649, 0.0, 39.6504, 75.9885], [109.6332, 33.3265, 30.493, 82.623, 59.0423, 168.65, 0.8235, 59.5775, 24.9433, 15.3139, 46.9283, 33.5137, 59.7742, 18.6863, 12.427, 17.7209, 49.7317, 34.4577], [84.837, 43.8061, 39.2113, 174.8525, 365.7042, 38.55, 10.7059, 172.4366, 15.9291, 97.8905, 32.498, 38.9082, 37.6129, 9.3333, 13.6973, 32.0, 10.9512, 107.6808], [61.6458, 139.1122, 28.1718, 298.3607, 71.7042, 168.9125, 71.1176, 259.9718, 0.0, 9.5912, 3.502, 36.3047, 2.0215, 49.6569, 9.6108, 42.4651, 128.0, 156.5962], [122.4138, 117.2041, 43.5155, 161.3115, 206.8732, 190.7, 9.2647, 122.831, 28.6667, 59.0657, 25.7331, 44.5352, 125.6344, 29.0588, 9.1892, 5.4651, 83.9431, 55.2846], [205.768, 182.6735, 44.0056, 441.0656, 433.8732, 7.525, 0.0, 416.1831, 9.7021, 67.219], [93.0408, 31.1183, 11.7869, 148.5125, 15.7059, 137.9859, 4.6312, 125.1168, 16.7888, 90.125, 278.8925, 38.2647, 21.6054, 73.2326, 118.5691, 185.5846], [190.7653, 70.7296, 530.8033, 622.4225, 315.5, 3.1765, 130.662, 62.2624, 13.9416, 6.3028, 56.8223, 129.5591, 76.2549, 60.3946, 76.186, 95.3902], [185.0345, 179.1633, 59.4479, 167.0492, 289.507, 268.8875, 5.9118, 101.1127, 75.922, 129.8686, 29.0956, 23.1562, 0.8387, 7.402, 39.5622, 104.1628, 106.7724, 68.8615], [52.3865, 230.4707, 166.0323, 195.402, 331.9351, 71.7209, 198.0325], [175.9467, 282.0612, 56.138, 648.7869, 204.3944, 0.0, 30.5957, 72.8832, 1.0637, 119.8418, 85.1828, 116.9118, 63.7514, 83.3953, 163.6748, 7.4038], [204.0094, 221.051, 69.8986, 348.1475, 319.1972, 288.525, 93.3235, 179.507, 66.1986, 50.9635, 16.7371, 68.834, 193.0108, 118.049, 21.6162, 33.8837, 92.0407, 122.4462], [227.7335, 251.449, 75.1972, 390.5246, 449.4507, 367.8375, 0.0, 176.7324, 27.3688, 71.4672, 78.996, 43.2344, 179.8925, 28.1569, 12.7027, 7.093, 136.6667, 62.0346], [222.489, 382.9184, 81.4254, 456.2623, 456.6197, 510.9375, 1.4412, 124.3239, 16.6738, 139.8978, 115.0717, 95.7051, 11.6129, 85.0686, 46.8, 123.6047, 101.6585, 141.7692]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

