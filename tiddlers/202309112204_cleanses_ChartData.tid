created: 20230911220439000
creator: Drevarr
tags: ChartData
title: 202309112204_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Solus Luxes", "Sygaldry Verdandi", "Rahani Sunray", "Arcanophage Farra", "Miphest\u00f6", "Primal Clone", "Eibh\u00ebar", "Cat Wigglebooty", "Tootsie Pop Rocks", "Drevarr Moonwillow", "Tegan Parker", "Etchery Howls", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Tempest", "Chronomancer", "Chronomancer", "Scrapper", "Scrapper", "Scrapper", "Tempest", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.1007, 0.0, 0.0234, 0.0, 0.0612, 0.3023, 0.0667, 0.3729, 0.0469, 0.2857, 0.1081, 0.323, 0.0552, 0.0307, 0.0, 0.0303, 0.2571, 0.12, 0.0631, 0.0, 0.1314, 0.2909, 0.0308, 0.0645, 0.1923, 0.0317], [0.037, 0.0336, 0.0, 0.0078, 0.0, 0.0755, 0.1938, 0.0167, 0.0, 0.1198, 0.4286, 0.0, 0.1351, 0.1429, 0.227, 0.1166, 0.0, 0.0, 0.3429, 0.1333, 0.1081, 0.0, 0.0803, 0.2545, 0.0, 0.4154, 0.129, 0.5769, 0.254], [0.0, 0.0134, 0.0154, 0.0, 0.0, 0.1007, 0.2713, 0.1667, 0.2542, 0.0781, 0.0, 0.0, 0.3514, 0.2112, 0.2331, 0.1227, 0.2, 0.0, 0.1714, 0.2, 0.1892, 0.0, 0.0, 0.2909, 0.0, 0.1385, 0.2581, 0.1538, 0.0317], [0.0, 0.062, 0.0167, 0.2373, 0.026, 1.0476, 0.2838, 0.205, 0.1902, 0.1718, 0.08, 0.0, 0.7429, 0.0133, 0.4144, 0.0, 0.1095, 0.0, 0.0, 0.0154, 0.1828, 1.1538, 0.2698], [0.3704, 0.1477, 0.0, 0.0312, 0.2826, 0.0683, 0.2248, 0.2, 0.1186, 0.0938, 0.5714, 0.0, 0.1216, 0.205, 0.0184, 0.0982, 0.0, 0.0, 0.5429, 0.0667, 0.2703, 0.0, 0.0073, 0.3091, 0.0, 0.5077, 0.129, 0.4231, 0.381], [0.6894, 0.6626, 0.6994, 0.0, 0.8788, 0.4], [0.0, 0.0, 0.0, 0.125, 0.0, 0.2194, 0.4419, 0.0, 0.4237, 0.1719, 0.5238, 0.0, 0.0, 0.4224, 0.0307, 0.2454, 0.04, 0.0, 0.0286, 0.1333, 0.018, 0.0, 0.0073, 0.1273, 0.0, 0.0769, 0.1828, 1.4231, 0.254], [0.0, 0.0, 0.0, 0.0, 0.0, 0.2266, 0.4031, 0.0, 0.2203, 0.0885, 0.4286, 0.0, 0.6351, 0.0932, 0.3558, 0.1534, 0.0, 0.0, 0.7429, 0.4933, 0.1622, 0.0, 0.2701, 0.0909, 0.0, 0.3538, 0.4624, 1.6154, 0.7937], [0.0, 0.5906, 0.0154, 0.0, 0.0, 0.3993, 1.1628, 0.4833, 0.5932, 0.1458, 0.6429, 0.0, 0.7568, 0.5963, 0.8282, 0.7791, 0.04, 0.0909, 0.1143, 0.4533, 0.5315, 0.0, 0.0, 0.5455, 0.0, 0.6769, 0.6452, 0.9231, 1.2063], [0.0, 0.6644, 0.0308, 0.0234, 0.0, 0.3561, 1.7519, 0.7333, 1.1017, 0.224, 0.7857, 0.0, 0.9054, 0.9938, 1.2638, 0.6074, 0.76, 1.7576, 1.0, 0.92, 1.1081, 0.0, 0.2847, 0.4, 0.0, 1.2462, 0.7419, 2.4615, 1.3651], [0.8148, 1.1007, 0.0462, 0.2188, 0.0, 0.8201, 1.8295, 1.2333, 1.8644, 0.5729, 1.8095, 0.0, 1.0541, 1.4907, 1.1779, 1.3988, 0.32, 1.7273, 1.1714, 0.8267, 1.4685, 0.1695, 0.4891, 1.0364, 1.3231, 1.043, 0.8462, 1.5397], [0.9195, 0.2769, 0.0312, 0.0435, 0.6583, 2.062, 1.0, 1.5932, 0.5677, 1.1667, 0.0, 1.5676, 1.8509, 1.3129, 1.4294, 0.0, 1.7576, 1.3429, 1.6933, 0.0085, 0.6569, 2.2727, 0.0244, 1.0462, 1.5161, 2.9615, 2.0317], [0.0365, 1.8095, 0.0779, 2.6216, 2.9752, 1.7975, 2.3681, 1.28, 0.9394, 2.2, 2.16, 2.1171, 0.0, 0.6569, 1.8727, 0.0, 2.2308, 3.1613, 3.5769, 2.9841], [0.963, 2.0, 0.1385, 0.1641, 1.1475, 3.2713, 0.5667, 2.9153, 1.0677, 2.8571, 0.0, 2.4459, 2.5528, 2.7362, 2.1902, 1.44, 1.6667, 3.8857, 2.4933, 1.8649, 0.9416, 3.2364, 0.0, 2.9385, 2.1613, 5.7308, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

