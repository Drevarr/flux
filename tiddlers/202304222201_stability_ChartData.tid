created: 20230422220129000
creator: Drevarr
modified: 20230705163526467
modifier: drevarr
tags: ChartData
title: 202304222201_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Kira Dragonblaze", "Madame Charrlotte", "Ark Darkness", "Blancooo Padreee", "Smol Bee", "Ever Moore", "Zaylen Harker", "Jupi Jupi Jupi", "Mistwalker Caelon", "Bluntnips", "Sygaldry Verdandi", "Xyntharos", "Yummy Kiwi", "Bella Sassy", "Koralia Danai"];
const professions = ["Druid", "Dragonhunter", "Scourge", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Herald", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.81, 4.3982, 0.8514, 0.7896, 14.2216, 3.2912, 0.0, 4.2779, 1.5696, 0.792, 1.715, 0.8432, 4.1454, 0.7839, 3.2085, 0.9528, 0.8404, 0.0, 0.8187, 1.6615, 1.8662, 2.3697], [1.0044, 10.6624, 0.0, 0.7567, 12.7504, 4.0656, 0.0, 5.8966, 2.4034, 2.97, 2.695, 1.2098, 7.1854, 2.623, 3.3368], [4.265, 1.98, 0.7567, 20.5968, 1.5488, 0.0, 5.3185, 1.4715, 0.5445, 1.225, 1.0998, 6.4945, 0.7839, 3.0802, 0.5445, 1.0143, 0.7862, 0.0, 2.789, 2.7726, 0.7899], [50.0208, 5.9048, 10.7527], [5.731, 1.7226, 0.9541, 24.52, 4.5496, 7.2841, 5.4446, 2.772, 3.0012, 0.0, 9.2581, 0.0, 0.2567, 0.8848, 1.42, 0.0, 0.0, 5.578, 3.839, 0.2154], [15.3272, 2.9997, 0.0, 26.972, 1.5488, 9.134, 0.0, 3.5145, 4.3487, 0.4399, 6.909, 0.0, 3.7219, 2.2119, 1.5649, 0.0, 0.0, 0.5341, 4.5322, 5.3139], [11.0862, 6.1589, 26.9451, 8.3714, 7.5928, 2.1185, 0.0, 16.6152, 9.8642, 7.7555], [6.5237, 5.9895, 0.49, 3.4827, 23.767, 6.8742, 19.5077, 4.0836, 4.4339, 1.8236, 6.309, 7.8329, 2.666, 7.3964], [26.9226, 2.6235, 7.3367, 55.4152, 9.68, 0.0, 18.8461], [1.62, 13.9944, 0.0, 2.0069, 41.684, 4.84, 4.856, 6.1803, 1.881, 8.1463, 1.613, 18.2398, 5.0351, 2.0534, 0.1361, 4.376, 0.7753, 3.612, 1.8395, 5.172, 1.2208], [17.1931, 0.0, 1.0857, 38.7416, 6.776, 0.0, 0.1156, 4.4635, 10.1475, 0.4288, 0.1833, 12.7126, 0.0, 22.4595, 1.2591, 2.1155, 0.4914, 1.5893, 7.4768, 2.1861, 0.0], [19.7254, 0.8019, 0.0, 94.1568, 11.5192, 0.0, 15.1462, 2.0601, 9.4545, 1.96, 2.3462, 22.1088, 4.9446, 7.9571, 3.7773, 7.216, 0.9391, 3.8046, 6.6461, 6.665, 4.8113], [3.3372, 24.257, 0.0, 0.9541, 73.0696, 12.0032, 0.0, 14.4525, 6.818, 9.801, 7.9625, 3.5927, 25.7015, 4.5828, 10.6522, 5.2746, 2.6951, 1.4524, 6.2608, 12.046, 9.5976, 6.9656], [4.9734, 28.1221, 2.5839, 2.3359, 110.34, 20.1344, 21.2741, 6.1803, 5.1975, 3.43, 2.3829, 21.6943, 5.2461, 14.6308, 4.1857, 5.5931, 1.9328, 7.4166, 9.7318, 7.7847, 6.9656], [5.3622, 36.9186, 4.7124, 0.3948, 122.6, 17.0368, 0.0, 16.8805, 8.3876, 12.771, 6.37, 2.5295, 34.545, 7.1455, 17.9676, 8.7797, 4.1441, 1.2449, 11.4139, 9.6724, 11.1972, 10.197], [6.0912, 41.1835, 3.8214, 5.6917, 158.3992, 14.036, 0.0, 22.199, 13.685, 11.4345, 8.2075, 0.2566, 30.8141, 8.2008, 27.7214, 10.9236, 6.4046, 3.5708, 8.9578, 11.9867, 8.2113, 7.6119]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

