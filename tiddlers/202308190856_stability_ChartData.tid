created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Empressy", "Xuerreux", "Kosa\u00efr", "Oats Guardian", "Aloe Pen", "Govinda Ektar", "Darks Na", "Crabbedmermaid", "Unbreakable Nemesis", "Grootsmaid", "Gestern Yesteryear"];
const professions = ["Spellbreaker", "Berserker", "Tempest", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.027, 0.0, 1.02, 0.259, 0.913, 3.9383, 0.0, 1.1265, 0.0, 1.0148, 1.0206, 0.0], [0.8959, 0.0, 0.812, 1.0032, 0.9439, 0.0, 1.58, 0.0, 0.0, 0.6845, 2.573, 2.124, 0.8096, 1.2356, 0.0, 0.8663, 1.9319, 0.0, 0.999], [1.2672, 1.4384, 1.7784, 1.2254, 1.327, 1.3825, 1.05, 0.0, 0.7955, 2.9465, 2.1683, 0.0, 2.5438], [3.135, 9.2565, 6.4274, 3.0464, 3.4763], [0.2052, 1.9872, 3.5618, 1.185, 0.0, 0.0, 0.629, 3.9425, 7.3455, 0.0, 7.486, 0.0, 0.0, 0.0, 0.0, 0.0], [0.2381, 0.0, 2.3184, 2.2349, 5.609, 0.0, 0.1665, 3.8595, 5.2657, 0.0, 3.3433, 1.4107, 1.8104, 0.0, 0.1417], [3.5267, 0.1496, 1.624, 8.0256, 3.1298, 0.0, 7.7025, 0.476, 7.719, 0.0], [4.9932, 5.0508, 2.6772, 9.243, 4.872, 0.0, 5.772, 17.4715, 2.3895, 1.9872, 10.6476, 2.8591], [2.8237, 1.9536, 3.248, 4.5144, 8.8762, 3.5386, 12.482, 4.9, 4.128, 5.7535, 1.992, 8.496, 1.7958, 4.0701, 4.1382], [8.7295, 6.328, 0.18, 2.516, 14.2345, 12.3015, 1.9872, 12.1376, 2.4077, 10.2713, 5.7591, 2.3229], [3.1298, 5.4824, 3.5264, 5.3124, 6.1769, 9.2654, 10.665, 6.594, 0.432, 5.069, 15.4795, 17.169, 3.6506, 11.3381, 3.436, 14.3797, 3.9123, 5.3475, 4.5023]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

