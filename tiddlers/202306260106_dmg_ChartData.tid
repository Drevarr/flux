created: 20230626010646000
creator: Drevarr
modified: 20230705163537152
modifier: drevarr
tags: ChartData
title: 202306260106_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Grimdox", "Grimdox", "Pale Pam", "Pixzil", "Liyo Morgaine", "Gestern Yesteryear", "Lady The Mirage", "Iskalla", "Rednuii", "Phageir", "Gamora Titus", "Aribel Darkbringer", "Microsakis", "Pixzil", "Drevarr Moonwillow", "Yngvar The Burdened", "Necrotic Windrunner", "Charr Surethang", "Xanvias", "Elonith Requiem"];
const professions = ["Dragonhunter", "Firebrand", "Druid", "Guardian", "Vindicator", "Firebrand", "Virtuoso", "Firebrand", "Tempest", "Catalyst", "Firebrand", "Reaper", "Berserker", "Dragonhunter", "Scrapper", "Scourge", "Scourge", "Berserker", "Reaper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [3.4865, 81.1481, 29.0938, 409.25], [25.3814, 239.7857, 32.1724, 27.7283, 171.8803, 196.4792, 80.6937, 0.0, 17.8667], [835.4881, 1056.925, 1034.8919, 308.037, 50.8125, 169.8409], [492.3929, 491.6724, 0.0, 654.6408, 585.4375, 273.6406, 150.9615], [5.5, 61.0159, 52.6512, 45.0118, 47.1031, 0.0, 237.9138, 37.3804, 207.5423, 53.3333, 75.8594, 301.4038, 0.0, 91.0889, 0.0, 50.25, 8.5818, 186.2251, 86.7179, 115.1613, 127.72, 188.6977, 162.4, 48.0, 126.6316, 9.9623, 54.5714, 121.8642, 152.7059, 109.575, 92.0588, 0.0, 151.7347, 95.9275, 221.5595, 347.05, 23.5333, 67.8919, 0.0, 9.7656, 80.9773], [98.0656, 134.2308, 213.0889, 176.3111, 0.0, 155.0938, 0.0, 86.3723, 300.6923, 185.1935, 216.3, 568.9302, 435.2444, 0.0, 296.6579, 114.4151, 44.1071, 125.7037, 63.2059, 591.975, 153.3882, 0.0, 146.8265, 165.3043, 271.9881, 541.0, 69.9, 210.4865, 0.0, 84.1562, 218.6932], [150.1031, 42.0714, 74.1724, 147.6304, 359.169, 293.7083, 168.6531, 7.4231, 1.0444, 127.0222, 0.0, 49.8906, 130.6182, 132.1645, 103.0256, 133.8548, 344.72, 164.4884, 137.9556, 189.8966, 41.6053, 66.7925, 384.5, 75.25, 126.0247, 209.1765, 316.9, 142.3647, 0.0, 86.9592, 136.4638, 342.0595, 259.35, 18.7333, 125.2838, 0.0, 34.75, 213.9659], [198.8557, 212.25, 233.1034, 38.5761, 345.9577, 226.7812, 9.6923, 50.4444, 98.3111, 0.0, 66.3125, 86.8182, 236.6753, 132.1538, 417.5968, 898.2, 301.9767, 615.8222, 279.9655, 87.5526, 403.1509, 246.3929, 91.0864, 259.098, 676.6, 282.5176, 0.0, 227.0408, 158.1449, 229.6548, 328.05, 24.5667, 124.473, 21.3704, 2.2969, 62.3864], [558.4222, 0.0, 318.1094, 12.1818, 476.3377, 277.9744, 0.0, 862.16, 1232.5116, 196.5556, 2.2895, 254.0943, 95.0, 306.5802, 329.0784, 594.05, 221.0941, 0.0, 47.1837, 20.2754, 1130.381, 773.1, 0.0, 681.8243, 30.1111, 124.1719, 169.7159], [105.732, 7.7857, 26.7414, 0.0, 683.3239, 33.7917, 229.9437, 148.4423, 33.3333, 1103.8, 0.0, 247.5625, 61.2182, 560.2338, 43.1282, 237.4032, 486.12, 507.7907, 395.0889, 37.2759, 161.8158, 0.0, 62.0714, 191.7778, 350.9118, 658.35, 135.8941, 9.5181, 183.1531, 73.7536, 799.6786], [13.9211, 804.2857, 1014.5581, 291.8471, 1447.1031, 615.2857, 1438.8793, 954.2826, 1996.7254, 1768.4167, 1387.8875], [0.0, 255.7907, 0.0, 1018.0825, 115.0357, 123.8448, 119.3261, 188.4789, 869.5833, 448.5469, 0.0, 0.0, 953.5111, 0.0, 1245.5469, 201.9455, 610.0563, 584.0, 272.0484, 114.3, 880.3721, 397.0889, 280.1379, 0.0, 0.0, 0.0, 449.9012, 303.5392, 640.8, 0.0, 1077.9388, 567.5652, 910.1429, 1996.175, 1071.2162, 0.0, 407.6875, 1092.1705], [318.1071, 417.6724, 176.5109, 404.3662, 1861.7917, 1093.2656, 463.5769, 809.1556, 571.7111, 0.0, 371.1562, 588.4364, 573.2771, 370.1538, 745.2742, 3488.52, 1923.3721, 607.2222, 400.5862, 0.0, 1588.1842, 476.25, 0.0, 294.8529, 91.925, 1303.9059, 0.0, 768.3878], [70.7895, 2135.9365, 2824.8605, 0.0, 181.8969, 114.9286, 154.0345, 140.0326, 299.2817, 102.3958, 96.4156, 78.6923, 54.7778, 220.2222, 0.0, 205.9219, 12.2909, 155.0087, 103.1538, 232.4355, 335.02, 403.2558, 187.4, 77.8966, 23.5526, 62.1887, 8651.5789, 5333.25, 4406.8889, 484.5686, 479.6, 146.4118, 0.0, 62.4592, 103.087, 354.5238, 454.85, 10.1333, 256.9189, 167.5556, 70.1406], [144.3269, 529.5556, 1887.7556, 0.0, 410.2969, 257.5818, 1291.7532, 628.9487, 963.1774, 2932.02, 1688.6977, 737.5526, 1302.3585, 63.6842, 934.6607, 1334.6296, 1708.8627, 2357.725, 833.1059, 0.0, 1114.2755, 1808.7101, 2351.5357, 2450.1, 25.0667, 1787.8514, 0.0, 734.6094, 1606.9205], [998.2887, 555.3929, 815.431, 282.4022, 1273.3944, 601.0208, 653.9688, 0.0, 340.4444, 1572.8444, 132.3462, 935.3125, 166.6364, 1016.9567, 502.8462, 863.2742, 1759.04, 1836.3953, 1432.8222, 345.5172, 417.6579, 5422.5283, 3810.0263, 1394.0, 339.9259, 364.402, 2438.625, 849.2235, 101.4096, 878.9082, 1561.2319, 1320.4405, 1530.175, 782.1081, 1106.2963, 401.8125, 725.0227], [0.0, 3510.2222, 850.7907, 821.4118, 2573.8041, 0.0, 1205.1897, 0.0, 5165.6479, 1959.2292, 2207.0344, 2602.2308, 1350.7111, 2570.9111, 0.0, 2071.6719], [1793.8557, 1246.1786, 1943.3103, 896.8261, 3889.1831, 1690.7083, 1701.1437, 1394.3846, 0.0, 2879.3111, 0.0, 1819.2812, 603.5636, 1847.4459, 373.9231, 1522.2419, 4378.06, 1537.4651, 2430.6444, 850.4483, 733.6579, 1376.1321, 0.0, 1013.6607, 1744.5185, 2190.9118, 3914.7, 1842.4, 31.4337, 1150.7653, 2339.6232, 3260.3095, 4224.0, 106.7667, 2883.2973, 1356.7778, 980.3281, 1035.6932], [172.8421, 2191.2381, 1326.5116, 1270.2824, 1823.1443, 795.9643, 1531.6724, 0.0, 2873.0493, 2978.1458, 1722.5031, 5.0385, 1469.8, 2414.0889, 102.2692, 1929.2969, 875.7455, 1700.5931, 860.359, 1129.9194, 4312.12, 2284.9535, 1456.1333, 854.4483, 1975.3947, 1706.6981, 642.6053, 1163.2321, 1604.7407, 2897.2941, 2738.65, 1108.4824, 0.0, 2176.9286, 2312.2174, 3768.3333, 2703.425, 681.9333, 2630.1351, 2134.9259, 1531.9531, 2294.5]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

