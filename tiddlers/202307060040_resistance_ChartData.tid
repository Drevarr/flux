created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Hyde En Sikh", "Rahani Sunray", "Glorious Gluvs", "Arriasa", "Body Ody Ody", "Gavann", "Ateriuz", "Xanvias Einzbern", "Koralia Danai", "Bella Sassy"];
const professions = ["Tempest", "Chronomancer", "Chronomancer", "Berserker", "Druid", "Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.3796, 11.2507, 8.2987, 11.5214, 11.2478, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [12.1788, 6.7111, 6.12, 10.5575, 16.7404, 17.82, 10.584, 14.269, 11.448, 24.3877, 0.3715, 6.421], [19.9971, 3.3696, 18.2498, 6.9854, 20.0516, 13.4798, 8.815, 15.6816, 14.715, 18.5297, 18.6379, 6.6339], [0.0, 0.0, 0.0, 0.0, 19.3684, 25.4232, 76.1897, 43.3771, 8.199, 8.258, 0.0, 0.0], [18.2376, 29.3819, 24.4667, 23.8392, 20.8354, 29.1859, 17.307, 23.7978, 0.0, 0.0], [16.7382, 0.0, 27.3074, 0.0, 0.0, 21.5582, 39.7807, 26.1274, 21.987, 23.5334, 10.7586, 23.9312], [10.1133, 11.9153, 9.4615, 7.0195, 10.5908, 30.0168, 46.5394, 60.4454, 31.131, 23.9402, 50.7899, 17.1007], [24.8013, 13.7966, 34.7126, 46.1878, 14.2438, 45.9518, 36.3485, 81.5314, 26.334, 98.8727, 34.9693, 0.0], [33.8283, 9.0137, 2.4358, 13.9142, 50.6547, 77.0141, 51.1358, 70.9301, 17.559, 97.0218, 70.9448, 0.0], [41.157, 46.5473, 25.3613, 28.4067, 76.6325, 65.0232, 23.6326, 62.0006, 60.192, 24.9368, 49.8766, 0.0], [47.8584, 36.2513, 52.4851, 22.3285, 52.744, 60.9048, 10.5689, 81.1685, 51.435, 90.0859, 65.8519, 18.3128]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

