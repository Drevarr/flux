created: 20230318225613000
creator: Drevarr
modified: 20230705163522508
modifier: drevarr
tags: ChartData
title: 202303182256_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["X Plays With Fire", "Phiicatasm", "Demon Staph", "Xanvias Tseli", "Tootsie Pop Rocks", "Legacy Of Mathus", "Lord Erin The Wise", "Aronorf Xideliesi", "Demon Sekhmet", "Venomina The Fierce", "Drevarr Moonwillow"];
const professions = ["Holosmith", "Mirage", "Druid", "Berserker", "Scrapper", "Berserker", "Weaver", "Firebrand", "Spellbreaker", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[177.1423, 5.4249, 126.7862, 52.8898, 83.6862, 21.6403, 33.361, 29.6875, 49.4059], [0.0, 12.4006, 12.312, 338.6803, 145.1174, 14.1034, 54.096, 59.3628], [16.5726, 267.3446, 249.1955, 95.1386, 18.1796], [0.0, 10.8259, 0.0, 69.2242, 150.7354, 56.6671, 0.0, 0.0, 0.0, 76.5012, 54.9047, 26.7649, 0.0, 0.0, 23.3675, 0.0, 0.0, 33.5141, 112.0185, 39.7832, 0.0, 37.3613, 11.5171], [28.4928, 13.9709, 0.0, 47.2165, 316.2086, 108.0629, 20.4329, 0.0, 0.0, 9.324, 96.6731, 12.0262, 63.6698, 38.1269, 0.0, 0.0, 0.0], [0.0, 23.8896, 0.0, 110.5925, 230.1158, 36.5119, 0.0, 0.0, 24.9984, 56.166, 112.6411, 53.6279, 0.0, 0.0, 17.204, 0.0, 0.0, 0.0, 100.1108, 0.0, 0.0, 0.0, 0.0], [36.0983, 118.4803, 27.3984, 79.751, 371.2205, 203.0249, 32.8795, 19.7189, 58.8336, 120.99, 246.9137, 49.5102, 105.6765, 0.0, 15.9773], [88.4835, 46.2672, 6.6027, 106.2526, 368.3021, 54.6516, 0.0, 0.0, 17.472, 147.3636, 185.5589, 38.9219, 99.2499, 75.335, 63.1013, 0.0, 0.0, 5.1361, 13.0944, 78.0516, 64.4531, 78.1678, 0.0], [64.3314, 382.4755, 48.6697, 221.8007, 874.4986, 604.2684, 158.3867, 6.7803, 317.682, 412.8077, 135.1972, 348.311, 121.1602, 178.8917, 153.7589], [168.9163, 430.92, 227.7837, 55.8349, 325.4016, 500.6242, 129.5215, 216.0816, 314.0412, 228.8219, 93.3668, 411.2998, 91.9195, 80.8738, 89.0028, 130.0867, 112.5108, 168.4881, 333.6795, 367.744, 180.0691, 244.7388], [164.6127, 285.5261, 99.0038, 200.4394, 679.5494, 412.4839, 96.0898, 43.4871, 228.3792, 406.2156, 441.7546, 200.8513, 301.112, 131.0285, 204.1142, 0.0, 164.065, 113.088, 119.1795, 174.1014, 338.0634, 247.3398, 213.6694]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

