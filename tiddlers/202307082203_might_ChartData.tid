created: 20230708220324000
creator: Drevarr
tags: ChartData
title: 202307082203_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Shandalar V Basing", "Tegan Parker", "Keenngg", "Chocolate Teapot", "Rahani Sunray", "Enter Effore", "Willgrantor", "Ateriuz", "Venomina The Siren", "Seiker Novus Terra", "Mistwalker Cael", "Johosh The Mighty", "Zaedy Zae", "Xanvias Einzbern", "Klenga", "Legacy Of Mathus", "Arriasa", "Primal Clone", "Black Raspberry Pie", "Aronorf Xideliesi", "Koralia Danai", "Tika Fiery", "Mechanical Dark", "Gabe Malhorn", "Sakis Ranger", "Sygaldry Verdandi", "Artakama Nahid", "Newtype Khan", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Willbender", "Firebrand", "Tempest", "Warrior", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Tempest", "Tempest", "Vindicator", "Berserker", "Druid", "Berserker", "Firebrand", "Berserker", "Druid", "Chronomancer", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Druid", "Firebrand", "Tempest", "Spellbreaker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7312, 0.6923, 0.0, 1.2795, 1.4024, 3.0352, 2.1693, 1.7745, 0.3137, 0.0, 0.63, 3.0276, 0.5639, 0.0, 2.268], [0.0, 3.2142, 3.5175, 8.9575, 3.6655, 0.0], [0.0, 2.1793, 11.129, 0.1343, 0.0, 0.0, 1.0701, 2.3701, 0.0, 2.6513, 0.0, 0.0], [6.2286, 20.8104], [5.1302, 5.3948, 0.7675, 0.0, 0.0, 9.7718, 5.4526, 0.0, 0.0, 3.8837, 0.0, 2.2759], [3.5831, 0.0, 0.0, 0.0, 6.4693, 0.0, 0.0, 2.652, 1.0885, 0.0, 0.0, 0.0, 4.8024, 2.7793, 0.0, 12.177], [3.7873, 0.0, 4.914, 0.1476, 0.0, 3.4388, 10.0433, 16.5954, 0.0418], [11.3081, 0.0152, 3.315, 0.0, 0.2155, 3.0745, 5.9587, 6.3058, 9.1033, 0.0], [2.0306, 1.9122, 17.1007, 7.2253, 2.1845, 6.942, 5.3505], [0.0, 0.0, 4.5414, 6.605, 0.0, 2.379, 7.8966, 0.0, 0.0, 1.8637, 0.0, 10.7548, 11.9642], [2.5682, 46.2012, 0.167], [3.8954, 6.9247, 1.6404, 2.2481, 3.051, 7.0574, 2.9277, 2.7761, 1.6965, 2.9889, 3.9262, 2.9068, 6.1163, 2.8814, 6.8476, 4.009], [5.9322, 11.8364, 1.806, 1.8337, 1.2373, 11.5362, 7.0105, 7.6912, 3.8415, 3.0074, 3.7586, 2.5434], [1.4894, 1.9727, 1.8211, 0.0, 0.3374, 8.0075, 8.3266, 3.2767, 4.6215, 0.6458, 3.3516, 0.028, 3.465, 2.3177, 0.0, 1.3154, 23.517], [2.9534, 6.965, 3.7174, 2.6418, 3.29, 7.917, 3.9216, 6.0983, 1.794, 3.5793, 4.381, 3.6615, 4.6462, 3.1738, 6.324, 3.299], [9.853, 9.9845, 3.3411, 0.5594, 6.6223, 5.2931, 17.0292, 0.3489, 11.1735, 5.3689, 0.0, 0.2795], [13.0442, 3.3863, 2.4139, 1.4763, 4.0264, 4.369, 6.24, 2.048, 3.7107, 3.1863, 6.8512, 10.085, 4.2697, 5.3244], [12.0377, 1.6404, 1.036, 4.9772, 16.2864, 5.1034, 4.0352, 2.535, 0.2952, 0.0, 3.4378, 7.1925, 3.7584, 2.6988, 5.8464], [7.9817, 8.2936, 4.7558, 2.7661, 1.9262, 7.1479, 3.3844, 1.9569, 4.719, 2.2509, 5.3386, 5.2266, 3.255, 4.2386, 5.1558, 3.9881], [8.6559, 0.0, 9.2742, 0.376, 4.9909, 3.276, 1.5867, 0.0, 0.0, 9.2137, 6.2222, 12.6882, 0.0, 20.79], [6.3395, 13.8897, 1.4749, 0.0, 0.9139, 9.5456, 3.7318, 4.758, 1.642, 1.9391, 0.0, 3.4388, 5.8255, 18.3274, 6.8278], [3.0425, 15.1378, 0.5117, 0.7045, 0.0, 7.4194, 11.3886, 0.0152, 2.418, 1.4022, 1.0773, 7.8819, 6.7988, 8.3311, 19.415, 1.2319], [5.4739, 12.1183, 6.4263, 0.632, 4.3586, 7.2384, 7.6014, 3.2312, 5.0895, 2.048, 0.6703, 2.3758, 10.0275, 3.654, 7.331, 1.1275, 7.695], [3.6894, 15.33, 9.3334, 17.4412, 4.6145, 38.637], [9.5819, 7.9765, 3.0769, 1.2795, 10.6314, 10.9857, 2.943, 0.975, 0.1661, 0.5985, 7.295, 9.345, 7.5794, 15.1856, 1.6495], [14.0105, 5.1772, 1.8026, 2.7558, 23.7962, 5.4526, 5.0819, 2.145, 0.5535, 4.7162, 4.2763, 8.295, 13.6138, 0.0, 1.2319], [5.283, 13.3261, 4.7257, 0.8288, 11.8529, 8.6772, 10.5495, 4.5756, 5.4344, 1.0341, 12.9675, 14.7622, 23.7652, 0.0], [6.4796, 24.1963, 4.3645, 0.0, 0.0, 0.0, 13.3763, 16.8842, 12.597, 0.0, 2.9925, 1.0062, 0.1838, 2.4221, 19.0524, 0.0, 32.994], [24.4925, 33.4561, 5.5685, 1.2743, 3.8243, 14.7482, 15.0953, 9.815, 5.0505, 8.4316, 4.381, 4.1366, 5.88, 5.575, 9.4255, 3.8837], [13.7357, 20.6534, 6.4263, 1.8648, 7.7892, 12.441, 14.7193, 1.517, 12.3045, 3.155, 2.8249, 4.6117, 7.98, 12.0686, 14.3397, 6.953, 15.768], [7.7908, 21.7001, 6.1856, 0.6423, 0.0, 19.8604, 15.9548, 9.9667, 11.8755, 1.6974, 0.1915, 6.708, 11.5237, 13.1962, 18.3677, 10.5235, 19.197]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

