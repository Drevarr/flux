created: 20230715081630000
creator: Drevarr
tags: ChartData
title: 202307150816_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Wix Myschief", "Gamora Titus", "Herm E Licious", "Wall Knot", "Drevarr Moonwillow", "Water M Elon", "Chocolate Teapot", "Gestern Yesteryear"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Chronomancer", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.1584, 3.0754, 0.0, 32.2864, 0.0, 0.0, 6.3626, 0.0, 5.0464, 0.4429, 0.0, 0.0, 1.9404, 0.286, 0.0, 5.184, 1.9594, 13.7093, 22.484, 30.3887, 11.7938, 0.0, 5.7482, 0.1164, 0.06, 0.0, 11.1283, 0.0, 3.8592, 0.0, 5.9524], [81.312, 37.811, 12.824, 41.4256, 16.3771, 26.0416, 78.1632], [30.0007, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2804, 87.6038, 0.0, 83.2205, 0.0, 72.8156, 2.6496, 32.531, 0.0, 36.4666, 4.6649], [12.5664, 7.6699, 2.541, 0.34, 0.1224, 0.0, 0.0, 23.8728, 0.0, 2.2632, 0.0, 2.1723, 0.0, 16.5741, 10.5714, 90.558, 2.8658, 22.92, 0.0, 25.3689, 144.7955, 7.4175, 21.7312, 11.86, 0.0, 1.4201, 0.2401], [44.4998, 1.4871, 7.091, 38.6104, 3.1824, 11.3088, 46.8413, 0.0, 1.6929, 19.5776, 13.2023, 62.8482, 15.1194, 15.9012, 2.782, 29.5124, 8.532, 3.977, 32.3433, 34.675, 31.3663], [39.9144, 0.945, 5.98, 5.607, 9.72, 17.7316, 21.0564, 49.713, 25.0987, 9.8063, 37.24, 0.0, 7.6358, 9.8849, 0.0, 20.3515, 60.2574, 52.7156, 2.2032, 2.6365, 17.2243, 15.4678, 23.9616, 5.4925], [21.0269, 35.3799, 21.054, 0.0, 0.0, 6.643, 0.0, 17.9438, 0.0, 0.0, 0.0, 17.3428, 0.0, 29.336, 26.5101, 0.0, 0.0, 2.3184, 17.654, 0.0, 6.276, 52.865, 38.0134, 13.8335, 11.2125, 0.0, 7.96, 0.0, 13.805, 37.7989, 46.7208, 0.0, 38.8332, 17.6688, 19.5696, 0.0, 11.0317, 38.1514, 15.7457], [6.2832, 103.968, 14.3603, 30.2803, 8.8958, 12.292, 63.1176, 10.404, 22.8672, 153.4755, 22.3839, 15.5228, 106.4912, 45.47, 30.8712, 65.3486, 18.207, 48.698, 41.5452, 49.284, 34.7648, 40.5689, 27.4845, 25.4725, 9.7688, 4.36, 9.6678, 37.9464, 27.6138, 10.1133, 15.6341, 9.6866, 74.102, 11.3328, 43.1347, 21.8196, 30.9857, 30.4013, 8.2901]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

