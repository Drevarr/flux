created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Vazd\u00e2h", "Cat Wigglebooty", "The Arch\u00eetect", "Koralia Danai", "Eibh\u00ebar", "Adrinz", "Gamora Titus", "Liu Mira", "Mort\u00e4rion", "Budget Chicken", "Arcanophage Farra", "Sttrykkerr", "High Sorcer Baradun", "Solla Capriccio", "Elleerie", "Calpoly", "Bella Sassy", "Rina Of Theros", "Mistwalker Cael", "Yummy Kiwi", "Gestern Yesteryear", "Drevarr Moonwillow", "Elonith Requiem", "Greg The Knight", "Lord Erin The Wise", "Rod Reaper", "Elizabeth Conbolt", "Scarlet Merc\u00fcry", "Mister Jekyll", "Sttrykkerr", "Sub Train", "Lucky Luprac\u00e1n", "Keypek The Drunk", "Luke The Ghastly", "Loganlek", "Regis Hawkesburne", "Goggles With Frames", "Be\u00eb", "Sofya De Nova", "Xanvias Einzbern", "Bee Nemesis", "Mike The Archmagus", "Mortuus Araden", "Jimbo The Pleb", "Phives", "Forever Dreaming"];
const professions = ["Reaper", "Scrapper", "Reaper", "Firebrand", "Chronomancer", "Guardian", "Firebrand", "Berserker", "Scrapper", "Firebrand", "Spellbreaker", "Catalyst", "Tempest", "Reaper", "Reaper", "Virtuoso", "Firebrand", "Reaper", "Herald", "Firebrand", "Firebrand", "Scrapper", "Reaper", "Firebrand", "Weaver", "Reaper", "Tempest", "Firebrand", "Reaper", "Tempest", "Firebrand", "Scrapper", "Scrapper", "Scourge", "Berserker", "Berserker", "Berserker", "Reaper", "Weaver", "Berserker", "Berserker", "Weaver", "Harbinger", "Berserker", "Specter", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.0317, 4.469, 7.2583, 7.4854, 6.8276, 0.0, 0.0, 6.3, 19.1053], [8.359, 0.0, 0.3592, 14.8036, 3.9583, 1.4706, 15.7857, 6.9531, 17.0303, 0.0, 0.0, 0.2881, 5.5243, 0.0, 0.2143, 1.0615, 1.5, 0.0], [0.0, 12.5929, 9.4669, 6.8447, 0.0, 0.0, 0.0, 13.6214, 6.0702], [6.547, 0.0, 0.2356, 7.1161, 0.0, 0.0, 5.5893, 0.0, 0.0, 109.8485, 0.0, 3.6508, 2.0442, 0.0, 1.4757, 7.1964, 0.0, 2.6643, 3.4912], [6.3846, 0.0, 4.2989, 1.6696, 0.0, 1.6607, 3.3333, 9.2656, 4.8182, 1.8947, 0.0, 11.3982, 0.6291, 17.3204, 0.0, 0.0, 0.0, 5.0214, 0.0], [1.7778, 12.469, 8.5298, 21.7184, 5.0714, 10.5077, 8.5357, 9.4211], [1.8596, 0.0, 11.4602, 4.8311, 40.9806, 0.0, 2.3692, 13.4071, 0.0], [12.9402, 0.0, 5.8132, 2.0625, 0.0, 0.0, 0.0, 64.2031, 0.0, 0.0, 0.0, 0.6821], [15.1496, 1.5273, 9.4713, 24.8661, 0.0, 0.6765], [2.0214, 0.0, 1.7672, 0.3036, 0.0, 0.0, 10.7679, 0.0741, 0.0, 0.0, 1.7544, 0.0, 2.2832, 4.4636, 24.301, 0.0, 0.0, 4.0308, 22.2, 11.4386], [1.2991, 0.0, 24.5115, 0.8839, 0.0, 0.0, 0.0, 0.0, 0.0, 23.2121, 0.0, 3.6283, 0.0629, 0.0, 0.0, 0.0, 0.9077, 0.0286, 0.0], [26.5256, 0.0, 11.592], [28.188, 31.3125, 0.0, 0.0, 3.4286, 0.0], [18.9615, 0.0, 17.5517, 0.0, 1.4375, 0.0], [13.1838, 0.0, 1.4971, 16.8929, 0.0, 0.0, 31.9643, 1.1094, 17.9697, 0.0, 4.1429, 21.646, 1.2285, 6.0485, 0.0, 0.7077, 4.8929, 0.0], [34.9017, 0.0, 12.3793], [12.9274, 0.0, 5.4109, 0.0, 61.2292, 0.0, 9.3393, 0.0, 12.7812, 8.0909, 1.5263, 4.1905, 4.2478, 3.3742, 3.2233, 0.0, 0.0, 0.0, 8.5071, 3.5965], [23.1026, 0.0, 10.6034, 6.6518, 0.0, 0.0, 22.2857, 0.0, 4.9091, 0.0, 6.1429, 5.5044, 2.9007, 2.1748, 0.0, 0.0, 0.1077, 5.7786, 7.6667], [17.7009, 0.0, 9.4914, 22.8571, 10.3824, 37.1964, 0.0, 0.0, 7.6667, 0.0, 3.254, 5.5752, 0.0, 5.9126, 0.0, 0.0, 0.0, 3.9143, 0.0], [10.5299, 0.0, 16.6897, 23.3125, 0.0, 0.0, 61.2143, 8.2222, 3.2656, 8.6061], [7.0299, 5.0182, 15.1408, 1.2411, 43.9583, 7.7059, 11.2679, 0.0, 0.0, 10.3939, 48.2632, 0.0, 3.8761, 7.0132, 5.1068, 0.0, 0.0, 2.0143], [7.0769, 0.0, 9.5862, 13.6696, 0.0, 0.0, 25.2143, 0.0, 2.2656, 7.9394, 3.3158, 5.7778, 18.3097, 6.2219, 28.3495, 0.0, 1.4821, 2.5846, 5.7929, 0.0], [5.5926, 40.625, 24.7879, 8.5789, 15.5079, 51.0265, 8.3113, 3.1942, 3.9643, 4.5385, 12.7429, 21.193], [32.9017, 0.0, 14.727, 30.9643, 25.8958, 0.0], [5.0598, 0.0, 31.4052, 37.5625, 0.0, 0.0, 57.8393, 12.3333, 13.2344, 60.3636], [28.8077, 0.0, 13.3937, 8.5179, 0.0, 0.0, 38.7143, 3.4444, 15.5781, 20.2121, 0.0, 0.0635, 10.5664, 3.447, 10.6602, 0.0, 0.5179, 0.1385, 17.2214, 37.3509], [21.1581, 4.7273, 15.2816, 8.0982, 0.0, 10.3529, 10.7679, 9.875, 69.0303, 1.2105, 0.0, 0.2124, 11.0927, 5.3592, 0.0, 30.2615, 15.6643, 35.3684], [19.6068, 0.0, 15.796, 65.6786, 115.2708, 34.6765, 113.6429], [43.8462, 0.0, 20.819, 25.875, 36.9375, 18.2353, 0.8519, 14.9062, 14.7576, 0.0, 6.9206, 37.4425, 5.8841, 3.8932, 0.0, 0.0, 1.9538, 10.3857, 0.0], [105.9821, 27.1875, 136.1964, 15.5556, 2.0469, 81.7273, 3.5614, 0.0, 0.0, 72.068, 0.0, 0.0, 0.9846, 6.1214, 6.4737], [32.265, 0.0, 17.2356, 9.5804, 114.8958, 0.0, 36.7143, 35.7037, 0.0, 94.0909, 0.0, 2.8889, 12.5929, 4.9901, 45.6602, 0.0, 2.25, 5.2769, 4.9929, 4.8246], [31.1111, 7.6, 29.1408, 8.4732, 62.1875, 3.4706, 38.3036, 7.75, 32.697, 0.0351, 48.7143, 17.6637, 10.0795, 9.2233, 0.0, 0.0, 0.0923, 15.3143, 0.0526], [35.8675, 5.4727, 15.0259, 42.1429, 44.3958, 1.9706, 21.8393, 17.0741, 16.0625, 65.4545, 13.0877, 2.7937, 24.2566, 8.9205, 28.3592, 1.4368, 19.0357, 13.3385, 6.5357, 0.0], [78.8803, 0.0, 40.3736, 35.5625, 80.7292, 0.6765, 28.9107], [27.9444, 0.0, 36.0287, 53.1607, 1.0, 0.0, 28.8036, 0.0, 33.4848, 0.0, 0.0, 43.9027, 5.9735, 1.6505, 1.75, 2.5077, 68.2, 0.9825], [0.0, 27.3017, 39.6607, 0.0, 54.6471, 105.8036, 0.9259, 0.0, 74.5152, 0.0, 50.3333, 93.3628, 23.1523, 18.5631, 0.0, 0.0, 5.9538, 22.2786, 17.9649], [2.9706, 328.3929, 14.0156, 87.7273, 26.4211, 6.6349, 0.0, 46.3311, 0.0, 0.9425, 56.9643, 42.3846, 56.9, 12.2105], [47.3932, 11.1091, 76.8333, 36.9821, 59.0, 0.0, 1.8929, 4.5556, 14.4531, 0.0, 0.0, 1.2857, 41.9115, 20.8146, 19.4951, 15.977, 19.0893, 0.0, 5.9929, 33.807], [67.6325, 2.3818, 38.296, 92.9821, 25.6667, 0.0, 108.3929, 18.7407, 8.6875, 76.3333, 27.619, 36.2743, 22.2682, 32.8932, 0.0, 0.0, 1.2, 29.95, 0.0], [46.1282, 0.0, 27.9655, 0.0, 41.7708, 6.2647, 133.2143, 0.0, 0.0, 112.6364, 3.5614, 125.3175, 87.9735, 52.3344, 9.1942, 0.0, 0.0, 0.0, 18.0, 17.8772], [64.0299, 0.0, 55.1092, 31.7768, 5.875, 0.0, 150.9464, 0.0, 0.0, 17.303, 0.0, 34.6825, 0.0, 55.4702, 19.466, 0.0, 0.0, 0.0, 51.9429, 0.0], [65.6068, 0.0, 88.3161, 18.3125, 66.1458, 46.875, 22.0, 28.3438, 77.4545, 0.0, 37.9841, 51.9735, 19.1954, 4.3398, 0.0, 0.0, 13.3929], [1.8148, 16.4844, 263.8182, 12.386, 59.2857, 94.7876, 50.6689, 239.9515, 0.0, 1.7321, 9.5077, 57.55, 77.6842], [64.8034, 0.0, 66.1379, 10.3839, 0.0, 24.5, 306.3393, 27.2222, 28.7969, 62.9697, 0.0, 6.7937, 24.7168, 38.5265, 39.466, 0.0, 3.8929, 1.8923, 3.6357, 25.6316], [227.6239, 4.6182, 62.6121, 49.2411, 5.1176, 47.0714, 3.1481, 34.2031, 3.0606], [146.7656, 586.8485, 67.4386, 213.8571, 169.7345, 79.1656, 196.4175, 0.0, 0.0, 41.2308, 42.6929, 6.2281]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

