created: 20230531221142000
creator: Drevarr
modified: 20230705163532519
modifier: drevarr
tags: ChartData
title: 202305312211_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Chronomancer_Support', 'Dragonhunter_Dps', 'Druid_Dps', 'Druid_Support', 'Firebrand_Cele', 'Firebrand_Support', 'Guardian_Dps', 'Scourge_Dps', 'Scrapper_Dps', 'Scrapper_Support', 'Soulbeast_Dps', 'Spellbreaker_Cele', 'Tempest_Cele', 'Tempest_Dps', 'Tempest_Support', 'Vindicator_Dps', 'Weaver_Dps', 'Willbender_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[2.9333, 15.2801, 12.5382, 22.6125, 0.0559, 7.6632, 8.4444, 3.4632, 23.8705, 8.6743, 17.7134, 1.2522, 17.5274, 31.2703, 45.3323, 19.385, 7.9693, 9.9831, 17.4665, 0.0102, 145.6241], [59.1535, 5.9827, 10.1204, 13.3733, 95.4034, 2.9232, 7.3292, 102.4323, 7.4787, 38.2832, 22.326, 158.0476, 11.2088, 25.4439, 14.5685, 6.9791, 90.4021, 103.3167, 8.1603, 36.3499, 2.2376, 21.2271, 4.163, 49.8203, 1.1589, 1.064, 16.7527, 16.8013, 49.6732, 2.1145, 4.5247, 77.6057, 20.1269, 18.1706, 31.5646, 395.2029, 52.7405], [24.9619, 31.9929, 0.2458, 18.4226, 20.0029, 0.4665, 55.0718, 21.1098, 16.6519, 33.2682, 48.3301, 74.6658, 44.3066, 0.9555, 93.8475], [35.397, 0.1912, 1.441], [2330.4487, 1392.112, 1741.3416, 1422.9585, 323.8307, 124.32, 2287.706, 1363.2122, 1192.6081, 892.2942, 156.5905, 128.8998, 299.9489, 55.7784, 444.1384, 348.4383, 290.3667, 326.3243, 1247.9485, 459.3161, 16.4643, 472.6251, 418.011, 4.9487, 1725.0238, 1205.1923, 51.141, 2097.7292, 1391.0977, 32.7047, 70.3433, 98.7832], [36.4511, 47.5093, 32.194, 69.1451, 51.6894, 28.9006, 39.4782, 14.7961, 14.3091, 10.0857], [77.3458, 561.8275, 54.0254, 32.9706, 55.3609, 61.0919, 105.0346, 27.2622, 85.6032, 69.0803, 393.6205, 34.8032, 43.8235, 59.248, 19.5163, 20.7202, 21.5711, 61.1862, 56.5467, 31.0325, 1.1729, 29.558, 8.0095, 7.0376, 27.4802, 82.6694, 404.4937, 41.4774, 50.5957, 53.8523, 55.2834, 49.3945, 23.8491, 107.7978, 68.0442, 261.808, 38.0431, 40.9248, 18.6103, 25.4746, 12.5948, 47.3395, 42.1266, 20.7867, 17.8571, 4.9821, 24.9478, 3.533, 60.7247, 92.0436, 3.6744, 62.4966, 29.5244, 122.7678, 8.0251, 6.5802, 7.327, 15.8553, 0.3409, 14.9246, 13.3661, 35.8896, 87.5303, 29.0047, 14.9587, 14.2622, 15.491, 0.9447, 45.2882, 14.7305, 56.4459, 123.2339, 19.6308, 19.584, 32.4839, 1.7266, 40.4556, 46.3949, 76.7369, 11.0399, 6.1555, 8.4263, 9.4618, 10.4401, 5.9984, 68.9955, 288.8377, 16.7931, 59.6177, 60.1596, 28.2773, 70.9828, 49.2265, 373.9855, 21.7999, 51.8725, 38.9223, 18.413, 66.8884, 3.117, 23.8191, 8.9771, 16.3587, 7.89], [39.1673, 47.6823, 32.3785, 17.72], [8.8889, 14.0477, 2.7589, 11.8798, 11.9149, 51.6584, 64.5729], [2.05, 71.0526, 13.8647, 6.1169, 14.9656, 8.8085, 56.703, 0.8951, 32.8553, 19.4046, 9.9171, 5.0813, 24.2136, 15.8208, 12.3493, 5.3302, 6.8889, 3.8187, 6.6839, 15.7872, 9.6078, 8.9221, 20.342, 6.3915, 11.7787], [1524.0168, 155.0218, 1350.3336, 112.1765, 215.4962, 1754.4863, 127.1557, 1176.3443, 73.108, 170.1747, 48.0109, 231.1689, 3.4026, 354.9644, 48.6645, 722.5304, 34.0082, 656.3733, 44.6931, 374.2511, 1826.7475, 47.4929, 66.8945, 1873.7892, 65.8368, 282.4854, 220.991], [2.8786], [0.3015, 12.2594, 4.5649, 4.3742, 5.8479, 18.1101, 2.2172, 3.8971, 7.9116, 7.4853, 132.01, 0.5871, 4.4658, 0.3653, 7.9996, 4.2343], [28.9995, 27.5716], [64.828, 48.9329], [806.851, 898.9464, 1197.7073, 86.7804, 127.235, 991.3613, 636.8367, 769.038, 1241.3133, 83.3292, 75.5128, 700.7237, 107.318, 76.3972, 77.8494, 5.7306, 5.5407, 852.3059, 987.0015, 1253.2098, 53.8932, 140.3376, 934.8487, 594.952, 676.7292, 677.6568, 70.0531, 56.8311, 72.6014, 327.8848, 71.3726, 110.0537, 104.9784, 20.5459, 220.4285, 286.5125, 211.6231, 8.4358, 7.5987, 178.808, 325.9648, 293.3397, 454.972, 15.2655, 14.8217, 465.3954, 417.6294, 475.1103, 447.8629, 39.4721, 7.1731, 417.8773, 516.599, 847.2087, 4.6648, 0.4682, 117.3404, 380.9422, 379.5283, 48.9085, 947.5923, 1209.2366, 1503.8267, 31.8782, 82.233, 927.8981, 905.3675, 977.7972, 54.6551, 75.8234, 51.0776, 98.3961, 129.9574, 244.9854, 44.4121], [1.4292, 90.4021, 100.2511, 1.2887], [0.2743, 1.9686, 10.1465, 3.8846, 16.6236, 4.3357, 6.6138, 8.9119, 7.822], [2.35, 0.022]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
