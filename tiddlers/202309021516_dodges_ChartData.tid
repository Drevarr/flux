created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Bella Sassy", "Lord Erin The Wise", "Luke The Ghastly", "Lord Fluffernaut", "Rina Of Theros", "Keypek The Drunk", "Solla Capriccio", "Bee Nemesis", "Lucky Luprac\u00e1n", "Calpoly", "Elonith Requiem", "Adrinz", "Mort\u00e4rion", "Forever Dreaming", "Jimbo The Pleb", "Sttrykkerr", "Regis Hawkesburne", "Sttrykkerr", "Vazd\u00e2h", "Sub Train", "Cat Wigglebooty", "J\u00e2sm\u00eene", "Be\u00eb", "Venomina The Sly", "Mortuus Araden", "Tekka Whitefang", "Drevarr Moonwillow", "Gamora Titus", "The Arch\u00eetect", "Sofya De Nova", "Koralia Danai", "Cupi Cupita", "Goggles With Frames", "Air One Com", "Elizabeth Conbolt", "Ryvalia Fazebringer", "Liu Mira", "Mister Jekyll", "Rahani Sunray", "Rod Reaper", "Primal Clone", "Mistwalker Cael", "Gestern Yesteryear", "Loganlek", "Arcanophage Farra", "Tegan Parker", "Mike The Archmagus", "Eibh\u00ebar", "Elleerie", "Glorious Gluvs", "Newtype Khan"];
const professions = ["Firebrand", "Weaver", "Scourge", "Berserker", "Reaper", "Scrapper", "Reaper", "Berserker", "Scrapper", "Virtuoso", "Reaper", "Guardian", "Scrapper", "Scourge", "Berserker", "Catalyst", "Berserker", "Tempest", "Reaper", "Firebrand", "Scrapper", "Tempest", "Reaper", "Druid", "Harbinger", "Spellbreaker", "Scrapper", "Firebrand", "Reaper", "Weaver", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Tempest", "Chronomancer", "Berserker", "Reaper", "Chronomancer", "Reaper", "Chronomancer", "Herald", "Firebrand", "Berserker", "Spellbreaker", "Tempest", "Weaver", "Chronomancer", "Reaper", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 2, 4, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 6, 0, 0, 1, 0, 0, 0], [3, 3, 8, 4, 0, 1, 1, 0, 0, 0], [10, 1, 5, 2, 0, 0, 3], [4, 2, 10, 1, 0, 2, 1, 0, 1, 0], [2, 2, 5, 0, 0, 0, 1, 3, 0, 0, 0, 1, 7, 0, 0, 1, 1, 0, 0], [3, 1, 6, 1, 0, 0, 0, 0, 3, 0, 0, 3, 1, 2, 1, 1, 1, 0, 0, 0], [2, 3, 18, 0, 1, 0], [9, 1, 9, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 1, 0], [4, 2, 10, 1, 0, 0, 0, 0, 0, 0, 1, 2, 6, 0, 1, 0, 1, 1, 0], [6, 4, 20], [0, 4, 1, 0, 6, 7, 4, 0, 3, 0, 5, 1], [2, 7, 17, 2, 1, 1, 2, 1], [9, 4, 15, 5, 0, 1], [2, 0, 2, 2, 5, 14, 4, 0, 1, 1, 1, 2], [4, 1, 10, 1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 11, 0, 1, 0, 0, 1, 0], [12, 2, 22], [2, 8, 1, 0, 1, 1, 0, 2, 1, 0, 1, 3, 13, 0, 0, 0, 0, 3, 0], [4, 0, 4, 0, 6, 1, 0, 0, 5, 2, 3, 2, 2, 3, 4], [6, 8, 21, 0, 1, 0, 0, 0, 0], [4, 2, 13, 0, 0, 1, 1, 0, 0, 0, 0, 1, 2, 12, 0, 0, 0, 1, 1, 0], [5, 0, 8, 0, 0, 0, 1, 1, 0, 4, 3, 14, 1, 0, 0, 0, 0, 1], [1, 0, 4, 2, 0, 3, 0, 4, 2, 0, 2, 2, 15, 2, 0, 0, 1, 0], [5, 2, 12, 2, 0, 0, 3, 0, 1, 0, 1, 0, 3, 6, 1, 0, 0, 0, 2, 1], [5, 6, 4, 2, 0, 4, 0, 2, 1, 2, 1, 8, 0, 1, 3, 0], [0, 1, 0, 0, 4, 6, 18, 3, 3, 1, 1, 4, 0], [4, 9, 19, 4, 0, 0, 1, 4, 4], [10, 3, 14, 2, 0, 0, 1, 0, 1, 2, 0, 0, 0, 12, 0, 1, 0, 2, 2, 0], [3, 4, 7, 26, 5, 2, 1, 3, 0], [2, 10, 23, 7, 1, 2, 0, 5, 1], [3, 1, 15, 5, 0, 2, 2, 0, 2, 1, 3, 4, 11, 2, 1, 0, 1, 0, 0], [10, 2, 9, 2, 0, 0, 2, 0, 2, 3, 0, 2, 5, 17, 1, 0, 0, 0, 0], [8, 4, 0, 4, 7, 9, 24], [1, 4, 4, 2, 2, 1, 1, 24, 0, 2, 4, 1, 11, 1], [3, 0, 7, 5, 0, 1, 4, 1, 1, 1, 3, 4, 13, 5, 2, 6, 0, 5, 3], [10, 3, 17, 2, 2, 0, 4, 2, 1, 1, 1, 3, 12, 2, 0, 2, 2, 0], [11, 2, 10, 3, 0, 0, 4, 0, 1, 1, 4, 4, 5, 10, 2, 1, 2, 1, 3, 2], [6, 2, 21, 7, 0, 1, 0, 5, 1, 2, 0, 23], [9, 0, 17, 3, 1, 2, 0, 4, 2, 0, 2, 8, 12, 1, 1, 1, 2, 5, 0], [20, 2, 27, 6, 0, 2, 4, 1, 0, 0, 0, 0, 0, 0, 2, 2, 3, 3], [9, 2, 18, 3, 0, 2, 1, 0, 5, 0, 3, 3, 4, 16, 2, 1, 0, 0, 4, 1], [12, 0, 21, 2, 1, 3, 0, 1, 2, 0, 5, 4, 17, 2, 0, 1, 1, 2, 1], [9, 1, 20, 2, 0, 1, 0, 3, 2, 1, 4, 7, 20, 5, 0, 1, 1, 1, 1], [7, 4, 18, 5, 1, 1, 3, 2, 4, 3, 1, 4, 6, 13, 3, 2, 1, 6], [9, 3, 15, 8, 1, 0, 3, 4, 2, 0, 3, 8, 21, 3, 1, 0, 4, 1], [8, 1, 22, 2, 0, 1, 4, 0, 5, 2, 4, 8, 21, 2, 1, 1, 0, 3, 2], [12, 2, 20, 3, 0, 1, 0, 0, 3, 0, 0, 3, 7, 25, 4, 2, 5, 0, 5, 2], [8, 6, 19, 4, 3, 2, 1, 5, 2, 1, 1, 5, 20, 3, 6, 4, 4], [4, 5, 24, 7, 1, 3, 0, 5, 2, 0, 5, 8, 27, 3, 0, 0, 2, 3, 2], [15, 1, 20, 6, 3, 0, 4, 4, 3, 0, 2, 6, 21, 9, 2, 3, 6, 2], [23, 2, 23, 8, 0, 2, 4, 0, 6, 4, 0, 4, 7, 28, 5, 1, 1, 3, 8, 4], [21, 3, 27, 7, 0, 3, 3, 9, 3, 2, 3, 5, 32, 6, 1, 2, 9, 2]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

