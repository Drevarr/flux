created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Arriasa", "Zaedy Zae", "Scarlet Merc\u00fcry", "Colera Piadosa", "Gabe Malhorn", "Belvyn Brightblade", "Sub Train", "Crusader Siolith", "Sygaldry Verdandi", "Tika Fiery", "Bella Sassy", "Solus Sanctus", "Koralia Danai"];
const professions = ["Spellbreaker", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[131.4758, 0.0, 0.0, 0.0, 118.5408, 0.0, 38.5395, 55.0368, 0.0, 33.961, 28.009, 0.0, 0.0, 64.4997, 0.0, 10.3358, 38.0534, 12.3833, 24.5184, 0.0, 22.165, 18.9926, 23.1635], [173.017, 0.0, 0.0, 85.1556, 118.6976, 0.0, 10.6996, 107.163, 0.0, 0.0, 0.0, 0.0, 0.0, 151.7015, 29.9695, 1.6982, 0.0, 4.2042, 0.0, 0.0, 0.0, 0.0, 0.0, 14.4685], [371.3014, 0.0, 0.0, 0.0, 35.4368, 0.0, 41.3442, 143.0604, 0.0, 0.0, 0.0, 0.0, 46.5048, 189.4678, 8.3402, 0.0, 27.8124, 5.1215, 0.0, 0.0, 14.113, 12.8836, 0.0, 48.8659], [872.1515, 0.0, 0.0, 153.4827, 447.8208], [28.9598, 146.0293, 29.7234, 14.0364, 171.2304, 123.3792, 49.2058, 141.0264, 950.9459, 113.646], [621.6581, 120.1531, 195.1512, 233.7643, 276.7128, 75.84, 111.072, 116.915, 19.5208, 145.2413], [517.5522, 23.7283, 0.0, 0.0, 251.7424, 0.0, 161.014, 289.1196, 0.0, 68.809, 75.3446, 0.0, 50.1336, 822.1587, 6.0183, 77.1821, 249.1258, 23.62], [603.6325, 0.0, 0.0, 214.9728, 0.0, 211.9671, 450.9666, 54.1724, 134.5766, 39.1104, 32.6525, 52.056, 609.5644, 130.8457, 159.9566, 145.3683, 192.6288, 16.6464, 47.6736, 123.4738, 87.9534, 159.675], [702.1323, 0.0, 0.0, 0.0, 363.3056, 39.9514, 64.042, 314.433, 20.24, 135.8438, 84.4301, 68.9995, 43.0704, 800.0931, 137.7194, 106.6963, 256.6718, 89.0526, 23.9136, 71.3088, 44.9448, 147.085, 123.0169], [621.1911, 0.0, 0.0, 18.6205, 492.2736, 5.3366, 84.3506, 390.9024, 0.0, 275.9328, 61.5552, 102.8698, 0.0, 765.9337, 167.3529, 144.5554, 202.8257, 158.1544, 71.5776, 90.2208, 27.9331, 120.1429, 0.0, 176.4389], [834.6787, 0.0, 0.0, 40.0457, 506.6208, 39.829, 144.7828, 387.3744, 36.1082, 1.9642, 94.6714, 78.9893, 67.8024, 1152.2953, 117.7702, 166.691, 197.7591, 305.3014, 32.9568, 19.6416, 69.6278, 230.0258, 0.3432, 178.6996], [1154.1607, 67.2349, 40.0646, 206.5394, 488.5888, 102.3019, 107.7236, 426.6234, 62.2076, 141.1344, 73.6243, 94.0978, 41.904, 795.4253, 122.2306, 170.2925, 258.5044, 233.2184, 46.2144, 100.3968, 84.0336, 181.3108, 15.0956, 185.5861], [1318.6125, 0.0, 0.0, 124.2664, 686.0784, 25.5082, 106.7107, 34.7508, 27.4454, 181.368, 223.776, 95.1504, 64.584, 992.5313, 196.9558, 233.0102, 229.075, 160.2182, 76.8192, 80.544, 93.1104, 202.1439, 3.9364, 177.2389], [1388.8472, 71.185, 437.9321, 496.8208, 63.5746, 197.2162, 468.8712, 54.6682, 166.0666, 248.7744, 65.0573, 104.9544, 938.6401, 151.6197, 195.0048, 195.657, 233.9828, 44.544, 63.3216, 50.4494, 248.1961, 203.0109]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

