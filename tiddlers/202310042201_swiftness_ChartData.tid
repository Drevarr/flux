created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaedy Zae", "K\u00e2 \u00d4tik R\u00e6j", "Guardblades", "Zanos Engine", "Xanvias Tseli", "Tegan Parker", "Rosa Bassano", "Glorious Gluvs", "Klengah", "Cat Wigglebooty", "Garphon", "Newtype Khan", "K\u00e2fkaa", "Grasszanine", "Ryvalia Fazebringer", "Etchery Howls", "Amiti\u00e9l", "Cutie Piebringer", "Mistwalker Cael", "Visterik", "Atria Ruinheart", "Drevarr Moonwillow", "Bella Bitty", "Sub Train", "Venom The Ferocious", "Rafaellagabriela", "Crusader Siolith", "Solus Luxes", "Jmbrage Gaurdian"];
const professions = ["Druid", "Berserker", "Firebrand", "Scrapper", "Berserker", "Tempest", "Tempest", "Berserker", "Druid", "Scrapper", "Herald", "Spellbreaker", "Weaver", "Spellbreaker", "Chronomancer", "Druid", "Firebrand", "Firebrand", "Herald", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 186.6464, 0.0, 0.0, 0.0, 25.4499, 0.0, 0.0, 9.7391, 22.4048, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 28.2543, 0.0, 0.0, 110.1217, 0.5306, 113.3217, 0.0, 0.0, 0.0], [249.147, 27.577], [56.871, 11.7612, 47.0047, 8.4645, 46.9058, 0.0, 11.7317, 28.0921, 0.0, 15.2345, 63.441, 11.9286, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.5852, 0.0, 0.0, 40.6404, 71.2765, 0.0, 14.1049, 73.8769, 109.8531, 0.0, 0.0, 0.0], [0.0, 14.4193, 45.722, 46.3907, 20.9131, 81.8365, 119.6667, 8.6764, 0.0, 1.5888], [124.0299, 44.1342, 185.7886], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 29.1424, 74.571, 0.0, 108.412, 0.0, 180.9171, 0.0, 0.0], [0.0, 102.7323, 137.9262, 11.1116, 51.04, 0.0, 0.0, 0.0, 0.0, 2.6561, 100.1141, 0.0, 0.0, 0.0, 0.0], [79.8111, 0.0, 189.9058, 9.234, 71.7112, 34.7045, 0.0, 0.0, 7.4879, 58.1202, 0.0, 20.4424], [14.9142, 78.6437, 80.6603, 109.6066, 62.1387, 45.4054, 134.3706, 20.7561], [30.9915, 0.0, 125.5746, 9.7419, 0.0, 0.0, 63.0756, 57.9205, 10.642, 15.0208, 206.0652, 138.7017, 0.0, 0.0, 0.0], [109.1412, 32.967, 125.06, 6.8178, 60.7886, 45.4918, 17.9949, 65.8451, 55.2245, 49.9471, 34.0789, 73.8558, 60.1335, 0.0], [66.5838, 0.0, 158.6838, 192.7781, 6.3855, 61.2995, 101.7282, 40.157, 41.9482, 56.1889, 86.0805, 0.0, 0.0], [271.7667, 197.2971, 75.8251, 92.1707, 0.0, 0.0, 0.0, 154.0392, 0.0, 0.0, 38.5598, 0.0, 120.9562, 0.0, 0.0], [107.5437, 22.9581, 269.8482, 0.0, 52.367, 38.9344, 132.4915, 72.0829, 77.4546, 74.3486, 75.9708, 51.8503, 13.5964, 0.0], [130.5477, 58.3902, 487.5451, 57.0353, 374.9909, 68.5571], [395.2854, 96.5547, 303.4719, 106.7296, 0.0, 0.0, 36.6442, 58.0096, 19.7341, 40.8186, 148.4613, 49.8717, 3.368, 21.4452, 0.1316], [267.3576, 109.3554, 257.4966, 64.2071, 199.107, 25.2324, 34.2604, 55.7836, 39.5716, 66.7081, 128.297, 31.2597, 6.4449, 65.0842, 7.6102], [85.6899, 0.0, 626.5006, 18.6835, 0.0, 96.8661, 46.7634, 80.5812, 13.8793, 39.689, 273.5154, 87.9417, 103.2016, 142.8231, 12.569], [178.8561, 155.0637, 644.5133, 0.0, 127.651, 18.576, 68.1235, 148.5187, 88.3042, 192.797, 141.3861, 120.8511, 0.0, 15.4634], [203.0103, 71.6661, 553.2487, 23.4851, 93.3011, 107.0249, 92.0778, 141.5291, 67.2269, 101.4207, 206.9496, 159.894, 65.9182, 134.3223, 7.5596], [343.5903, 93.4362, 990.8728, 141.6803, 401.889, 92.5123, 128.535], [290.745, 151.7967, 577.6088, 144.6814, 147.6587, 63.3132, 131.059, 175.4088, 19.8202, 63.3498, 186.3726, 204.6897, 16.0776, 154.0287, 16.3438], [295.9848, 31.6899, 978.5212, 75.1747, 65.8099, 204.2578, 62.4914, 126.2721, 328.4662, 140.2245, 94.2896, 6.6084], [338.67, 176.0319, 1081.1081, 28.7331, 57.9304, 7.3723, 110.2363, 169.5767, 99.1528, 208.4894, 208.1878, 176.7294, 46.1399, 0.0, 9.4723], [303.5889, 62.6373, 1177.0046, 60.2057, 97.027, 242.8038, 79.6683, 212.583, 19.8374, 150.574, 361.7196, 78.1704, 25.3084, 10.0464, 31.7869], [243.459, 146.7477, 1492.8281, 20.7919, 348.1438, 46.6722, 117.5277, 116.9986, 100.7542, 12.8837, 162.3169, 118.4823, 0.0, 137.9154], [498.7395, 202.9401, 1499.0039, 234.2226, 201.5689, 112.5266, 105.0672, 222.0347, 180.8292, 280.001, 368.2215, 35.3073, 148.8045]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

