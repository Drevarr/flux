created: 20230626011754000
creator: Drevarr
modified: 20230705163538089
modifier: drevarr
tags: ChartData
title: 202306260117_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Blancooo Padreee", "Arriasa", "Warrior Constantine", "Grasszanine", "Arcanophage Farra", "Daddy Demon", "Newtype Khan", "Tegan Parker", "Zhavashian", "Seiker Novus Terra", "Etchery Of Ascalon", "Elon The Archmagus", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Spellbreaker", "Druid", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[20.6307, 25.4519, 44.2219, 80.6324, 0.0, 19.467, 0.0, 38.4016, 22.3532, 52.9756, 64.0168, 106.3704, 55.4677, 0.0, 39.192, 36.0579, 16.4552, 28.6332, 24.057, 11.625, 16.2308, 7.4768, 162.6, 18.1872, 14.1823], [0.0, 0.0, 72.1728, 130.7653, 115.6032, 0.0, 40.6023, 0.0, 11.8127, 90.7812, 82.6169, 46.656, 0.0, 55.3472, 73.5016, 19.0571, 124.062, 24.9373, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 131.0, 0.0], [0.0, 0.0, 0.0, 177.8112, 0.0, 41.2843, 8.1356, 52.3623, 177.0274, 72.1135, 0.0, 0.0, 60.72, 109.1848, 23.5886, 0.0, 0.0, 51.8443, 69.8691, 0.0, 231.6, 0.0], [62.3781, 64.9094, 81.2498, 102.2976, 0.0, 37.3102, 50.6898, 0.0, 17.2845, 27.3889, 33.4706, 67.195, 247.8517, 205.4765, 0.0, 41.124, 40.4388, 38.5659], [17.3502, 0.0, 26.0177, 174.2303, 0.0, 48.1572, 0.0, 152.78, 75.739, 141.4503, 116.2291, 193.8882, 78.01, 105.7739, 29.792, 39.2831, 0.0, 0.0, 207.6, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 68.1173, 8.3626, 0.0, 0.0, 161.1968, 53.1401, 0.0, 38.516, 249.7542, 196.0497, 52.21, 46.617, 0.0, 75.5482, 74.1076, 0.0, 0.0, 0.0, 387.4, 0.0, 0.0], [29.8404, 35.4559, 95.1296, 144.7186, 111.1968, 19.8845, 0.0, 55.1502, 0.0, 67.4096, 58.9127, 74.4311, 111.3106, 243.0088, 183.0708, 14.406, 64.492, 42.0114, 28.8463, 29.1109, 29.0472, 28.8674, 28.6439, 0.0, 189.2, 23.4576, 0.0], [53.4114, 0.0, 0.0, 56.4304, 113.3568, 22.9152, 0.0, 60.8202, 97.8466, 173.0484, 224.2859, 461.8032, 166.4032, 40.1927, 47.012, 165.5744, 62.0409, 71.6625, 0.0, 142.8936, 40.0727, 0.0, 469.4, 83.2248, 0.0], [352.4868, 379.701, 301.0176, 25.4654, 85.0265, 159.7428, 125.0496, 68.247, 123.8958, 315.0899, 512.4805, 308.2147, 23.7699, 192.234, 77.62, 131.1583, 161.2565, 158.7541, 159.7459, 48.8363, 0.0, 616.2, 114.048, 0.0], [156.6378, 164.7627, 265.4123, 563.9332, 385.5168, 102.7118, 89.9835, 131.5062, 308.4908, 131.4583, 229.8469, 457.5765, 685.0946, 367.0979, 40.0693, 181.746, 454.2625, 74.9435, 122.8773, 199.3085], [206.6472, 229.7651, 292.0743, 490.9565, 302.4, 56.6966, 129.6777, 279.0018, 24.0392, 249.7986, 179.8085, 357.8777, 401.505, 864.2811, 327.2049, 0.0, 930.4, 156.5568, 24.4876], [145.4355, 203.3826, 445.1193, 659.8771, 341.9712, 134.6083, 108.1846, 279.4176, 29.2433, 215.6054, 133.8329, 257.388, 341.423, 737.6744, 649.6281, 77.0927, 241.04, 325.5323, 182.968, 156.8931], [158.5332, 49.0816, 332.3884, 270.1221, 295.2277, 456.0631, 876.9072, 573.1209, 90.0787, 231.472, 384.6179, 203.9988, 168.9642, 129.558, 182.4498, 191.96, 86.0954, 1324.4, 137.3544, 55.6609], [59.4621, 205.2904, 362.6361, 542.6946, 213.4944, 69.7805, 103.4167, 192.2886, 77.5599, 182.8399, 156.3908, 218.534, 275.6658, 936.2325, 639.3816, 96.4379, 217.626, 416.295, 141.1053, 85.3898, 152.4233, 158.4196, 140.3865, 55.3808, 886.6, 71.0208, 41.182]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

