created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Kisumaiassu", "Seiker Novus Terra", "Bella Sassy", "Squishy Jellyfish", "Sygaldry Verdandi", "Mort\u00e4rion", "Eibh\u00ebar", "Crusader Siolith", "Pr\u00e6tor Lightbringer", "Mike The Archmagus", "Sister Elon\u00edth", "Jerryatric Reflexes", "Newtype Khan", "Arcanophage Farra", "Blancooo Padreee", "Raziel Umbra", "Tropcaller", "My Birthday Girl", "Mike The Archmagus", "Tootsie Pop Rocks", "Cat Wigglebooty", "Mielikki Embla", "High Sorcer Baradun", "Klengah", "Tegan Parker", "Drevarr Moonwillow", "Zaedy Zae"];
const professions = ["Scourge", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Chronomancer", "Firebrand", "Scrapper", "Weaver", "Scrapper", "Scrapper", "Druid", "Tempest", "Druid", "Tempest", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 3.9956, 18.1492, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.9508, 1.9922, 4.0, 11.1034, 10.9455, 9.9588, 0.0, 13.0556, 0.0, 2.0, 0.0, 0.0], [0.0, 0.0, 25.2783, 10.0211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [26.3898, 89.5929], [3.0169, 17.9956, 24.0014, 5.007, 0.0, 0.0, 1.9895, 0.0, 0.0, 0.0, 0.9922, 0.0, 0.0, 0.0, 11.9588, 1.0, 3.0111, 4.0, 1.0, 0.0, 0.0], [18.4779, 35.4634, 1.0, 0.0, 0.0, 0.0, 0.0], [2.0, 7.9956, 37.1621, 11.331, 5.0241, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 0.0, 0.0, 3.9794, 0.0, 0.0, 0.0, 8.0122, 0.0, 0.0], [38.0258, 12.0211, 0.0, 4.0522, 0.0, 0.0, 13.9672, 0.0, 20.5625, 27.3793, 2.9818], [2.0, 0.0, 27.0373, 7.0141, 0.0, 0.0, 0.0, 0.0, 0.0, 3.9672, 0.0, 9.0, 43.4483, 0.0, 47.4124, 0.0, 31.0889, 2.0, 20.2805, 11.0377, 1.9706], [11.9956, 41.3113, 11.0775, 0.0, 2.0, 4.9895, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.0333, 3.0, 7.0122, 0.0, 0.0], [1.9956, 50.2554, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.9836, 0.0, 7.0, 5.0345], [129.6338, 56.4699, 57.6522, 64.2632, 14.1613], [18.3982, 45.6399, 15.0563, 5.0241, 0.0, 10.0421, 0.0, 0.0, 0.0, 0.9922, 1.0, 0.0, 10.9636, 2.9897, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0], [6.9956, 57.0631, 8.0141, 6.0241, 0.0, 5.9895, 0.0, 0.9836, 0.0, 3.0, 4.0345, 3.9636, 13.9485, 0.0, 9.0333, 0.0, 12.0488, 0.0, 4.9118], [5.0339, 13.9956, 53.1707, 20.0423, 0.0, 0.0, 0.0, 3.0, 0.0, 0.9836, 0.0, 0.0, 6.5517, 3.9636, 21.3608, 0.0, 13.0556, 0.0, 13.0244, 0.0, 0.0], [1.0, 18.9956, 73.2037, 18.1268, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0345, 7.9455, 2.9897, 0.0, 5.0, 0.0, 0.0, 0.0], [1.0, 16.9956, 76.3788, 16.0845, 5.0241, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 11.2759, 0.0], [9.1017, 0.0, 82.3286, 4.007, 0.0, 0.0, 11.0105, 0.0, 0.0, 0.0, 13.5417, 16.8276, 11.2182, 24.9175, 11.0444, 0.0, 6.0122, 0.0, 0.9706], [81.8407, 14.0915, 6.0241, 0.0, 9.9789, 0.0, 11.918, 6.9922, 10.0208, 17.2759, 17.9455, 14.0206, 0.0, 20.2556, 3.0, 31.0854, 5.0943, 6.8824], [16.2373, 0.0, 117.9182, 0.0, 25.0522, 0.9895, 0.0, 0.0, 27.9344, 0.0, 32.2917, 42.069, 33.8909, 75.1134, 0.0, 59.6222, 5.0, 41.6341, 5.0, 0.0], [3.0169, 2.9956, 178.6528, 0.0, 1.9922, 0.0, 3.0, 0.0, 0.9897, 9.0333, 0.0, 4.0, 0.0, 0.0], [13.2881, 0.0, 150.4017, 40.6972, 13.0602, 15.0783, 3.9895, 0.0, 12.0, 0.0, 20.0417, 7.069, 25.9091, 79.0722, 0.0, 56.7111, 0.0, 49.3902, 0.0, 0.0], [1.0, 60.5133, 167.0574, 29.2183, 23.7711, 10.0348, 0.0, 1.0, 0.0, 0.0, 10.0208, 9.069, 42.1091, 45.6907, 27.5222, 17.3265, 11.0244, 0.0], [28.0354, 224.9813, 50.6408, 12.0602, 16.2087, 21.0316, 5.0161, 0.0], [23.2881, 59.3982, 172.0689, 85.7394, 18.1446, 20.1391, 19.3053, 0.0, 0.0, 0.0, 31.9375, 16.2759, 30.3273, 90.2577, 52.6111, 31.1429, 71.1341, 1.0], [11.0678, 115.9823, 208.6011, 62.5915, 11.4699, 8.0261, 7.9895, 0.0, 0.0, 20.0328, 1.9922, 1.0, 12.1034, 36.5091, 68.5052, 0.0, 33.8222, 14.2653, 46.1951, 0.0, 0.0], [22.1356, 67.8805, 222.0459, 62.0704, 30.253, 9.0, 6.9895, 6.0161, 0.0, 10.0208, 7.069, 54.3818, 77.7629, 0.0, 70.1333, 10.102, 58.561, 4.0, 8.8529], [23.1864, 122.3097, 276.6714, 106.2183, 20.3373, 37.6957, 32.0737, 12.0484, 4.9259, 59.459, 37.7364, 14.0625, 46.7931, 65.2, 121.6701, 1.0, 108.7667, 23.9796, 67.8171, 19.0755, 10.8235], [52.5424, 140.0929, 298.2453, 131.1972, 27.3855, 37.1739, 50.4842, 0.0, 7.9508, 12.2403, 58.4167, 38.1379, 58.3455, 136.8557, 79.2667, 12.2857, 88.9024, 0.0, 14.1176]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

