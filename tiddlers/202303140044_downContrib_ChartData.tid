created: 20230314004438000
creator: Drevarr
modified: 20230705163522031
modifier: drevarr
tags: ChartData
title: 202303140044_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Elonith Tenebris", "Arcanophage Farra", "Seren Nightroad", "Oo Dads Mad", "Daring Deathblade", "Veron Blackburn", "Smol Gluvs", "Ace Hammers", "Lil Lun\u00e4", "Minka Bringer", "Rozaalyna", "Legendary Hacker", "Sigmund Mistwalker", "Hauzzy", "Cerys Fireblade", "Rina Of Theros", "Tootsie Pop Rock", "Smol Daddy Tika", "Lord Erin The Wise", "Pererek Ninja", "Xyntharos", "Sofya De Nova", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Reaper", "Herald", "Scourge", "Vindicator", "Weaver", "Scrapper", "Scourge", "Herald", "Vindicator", "Spellbreaker", "Berserker", "Scourge", "Scrapper", "Berserker", "Weaver", "Dragonhunter", "Vindicator", "Weaver", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4306.0, 0.0, 51787.0, 17487.0, 0.0, 9048.0, 5243.0, 12253.0, 0.0, 6390.0, 9363.0, 305.0, 673.0, 7228.0, 793.0, 8484.0, 3472.0, 258.0, 1498.0, 1678.0, 5231.0, 784.0, 1171.0, 6707.0, 2435.0, 2799.0, 18124.0], [5038.0, 26724.0, 32914.0, 12091.0, 4936.0, 17946.0, 6311.0, 0.0, 5406.0, 36837.0, 10121.0, 0.0, 57736.0], [12240.0, 4463.0, 82710.0, 12909.0, 0.0, 12663.0, 6337.0, 4629.0, 0.0, 14197.0, 5305.0, 0.0, 2258.0, 5939.0, 2276.0, 647.0, 3895.0, 5513.0, 445.0, 141.0, 6006.0, 3981.0, 2134.0, 16629.0, 2476.0, 17.0, 22256.0], [5729.0, 9000.0, 116232.0, 7615.0, 0.0, 17232.0, 12841.0, 8848.0, 13123.0, 9987.0, 6072.0, 11914.0, 0.0, 3427.0, 20293.0], [6625.0, 1723.0, 66511.0, 35223.0, 0.0, 14467.0, 16444.0, 2535.0, 16185.0, 3712.0, 3832.0, 0.0, 1409.0, 0.0, 13702.0, 15130.0, 10629.0, 7876.0, 7057.0, 2501.0, 1392.0, 259.0, 7586.0, 2353.0, 1869.0, 17881.0], [9855.0, 2595.0, 76386.0, 50805.0, 0.0, 21894.0, 5183.0, 4972.0, 0.0, 18631.0, 23470.0, 125.0, 3767.0, 5181.0, 1985.0, 17746.0, 19803.0, 3296.0, 0.0, 6174.0, 5426.0, 0.0, 4793.0, 16974.0, 3406.0, 672.0, 22014.0], [1686.0, 21374.0, 0.0, 50359.0, 10143.0, 1290.0, 0.0, 15532.0, 7725.0, 8189.0, 1436.0, 20752.0, 2565.0, 7875.0, 9142.0, 5548.0, 1697.0, 10524.0, 10723.0, 3295.0, 30.0, 27144.0, 40385.0, 8182.0, 65258.0], [18706.0, 2293.0, 115107.0, 34703.0, 0.0, 19235.0, 10507.0, 5250.0, 0.0, 21837.0, 6705.0, 1119.0, 1191.0, 18146.0, 1365.0, 18958.0, 17777.0, 809.0, 1470.0, 5509.0, 5488.0, 909.0, 2847.0, 22610.0, 10711.0, 1837.0], [12463.0, 215.0, 67750.0, 22330.0, 0.0, 30693.0, 15037.0, 12677.0, 0.0, 19846.0, 15881.0, 0.0, 15388.0, 18744.0, 4052.0, 49915.0, 21360.0, 2715.0, 4991.0, 0.0, 0.0, 1382.0, 4511.0, 6163.0, 41543.0], [77498.0, 0.0, 45506.0, 6046.0, 18511.0, 2296.0, 18679.0, 17473.0, 10599.0, 64405.0, 8467.0, 1660.0, 4756.0, 724.0, 0.0, 2678.0, 47385.0, 42865.0, 14189.0], [0.0, 154073.0, 22300.0, 0.0, 23841.0, 16797.0, 15680.0, 0.0, 3222.0, 961.0, 4649.0, 13808.0, 21.0, 655.0, 15903.0, 19210.0, 7849.0, 0.0, 6380.0, 13073.0, 814.0, 11185.0, 33216.0, 1461.0, 593.0, 20026.0], [11642.0, 2923.0, 150939.0, 29164.0, 0.0, 9018.0, 18100.0, 3442.0, 0.0, 46594.0, 20597.0, 1359.0, 756.0, 4178.0, 0.0, 0.0, 27727.0, 8731.0, 8677.0, 2160.0, 738.0, 4848.0, 9374.0, 26475.0, 18989.0, 11419.0], [8588.0, 205857.0, 48130.0, 0.0, 22466.0, 24285.0, 6278.0, 0.0, 22980.0, 11747.0, 24554.0, 28970.0, 0.0, 1864.0, 24125.0, 11024.0, 29041.0], [20700.0, 10331.0, 180324.0, 36570.0, 0.0, 31270.0, 16137.0, 45230.0, 0.0, 27967.0, 20039.0, 0.0, 0.0, 0.0, 2887.0, 28324.0, 24443.0, 8311.0, 0.0, 1705.0, 801.0, 0.0, 0.0, 284.0, 652.0, 5770.0, 62469.0], [32486.0, 6354.0, 159891.0, 62396.0, 0.0, 40257.0, 18518.0, 30450.0, 0.0, 20598.0, 30391.0, 0.0, 13936.0, 13757.0, 7740.0, 25606.0, 11411.0, 12178.0, 0.0, 13486.0, 8991.0, 0.0, 2471.0, 16974.0, 2348.0, 3735.0, 45718.0], [31013.0, 6999.0, 176307.0, 39626.0, 0.0, 2111.0, 38107.0, 2318.0, 0.0, 38123.0, 43568.0, 0.0, 2365.0, 28378.0, 3526.0, 21797.0, 18849.0, 6206.0, 4088.0, 3724.0, 28194.0, 8167.0, 2992.0, 7730.0, 0.0, 10277.0, 59695.0], [21895.0, 4613.0, 156148.0, 50002.0, 28774.0, 14860.0, 11016.0, 0.0, 12035.0, 15760.0, 1560.0, 10983.0, 39704.0, 1288.0, 37072.0, 46404.0, 2249.0, 10083.0, 15163.0, 1535.0, 1120.0, 3538.0, 23609.0, 31454.0, 4736.0, 46840.0], [12870.0, 7150.0, 203234.0, 13179.0, 0.0, 39653.0, 42296.0, 6806.0, 36573.0, 25351.0, 0.0, 6348.0, 14407.0, 14423.0, 0.0, 20700.0, 21759.0, 6798.0, 22643.0, 0.0, 6122.0, 5435.0, 71019.0, 30966.0, 436.0], [33466.0, 0.0, 164907.0, 80986.0, 0.0, 72143.0, 17702.0, 3560.0, 0.0, 3161.0, 30163.0, 1966.0, 4001.0, 37402.0, 0.0, 27352.0, 6995.0, 17312.0, 2002.0, 1293.0, 35711.0, 0.0, 7434.0, 20284.0, 10693.0, 139.0, 54058.0], [5170.0, 1434.0, 194260.0, 60199.0, 0.0, 64233.0, 15735.0, 16271.0, 0.0, 53140.0, 11759.0, 4517.0, 24337.0, 19582.0, 2065.0, 23910.0, 22581.0, 11819.0, 17277.0, 11720.0, 10791.0, 14063.0, 31827.0, 33907.0, 11391.0], [16602.0, 357098.0, 20150.0, 0.0, 36229.0, 27169.0, 13987.0, 0.0, 23591.0, 24607.0, 2259.0, 12064.0, 2921.0, 13516.0, 52489.0, 14443.0, 4308.0, 1701.0, 88.0, 1400.0, 16346.0, 5394.0, 62031.0, 62394.0, 27917.0], [22599.0, 4054.0, 236971.0, 103711.0, 0.0, 66210.0, 68459.0, 20629.0, 0.0, 26429.0, 25803.0, 6732.0, 5859.0, 38466.0, 0.0, 43261.0, 29947.0, 32732.0, 15001.0, 0.0, 14601.0, 921.0, 13352.0, 68704.0, 11437.0, 16605.0, 65412.0], [5195.0, 17750.0, 225366.0, 93163.0, 0.0, 77195.0, 28475.0, 30869.0, 0.0, 54527.0, 20901.0, 5318.0, 3665.0, 44576.0, 24058.0, 9011.0, 34168.0, 5896.0, 14705.0, 18267.0, 10372.0, 2191.0, 24940.0, 55984.0, 70782.0, 10303.0, 111561.0], [51879.0, 0.0, 383314.0, 37111.0, 25481.0, 32272.0, 8663.0, 0.0, 68261.0, 58843.0, 4395.0, 12839.0, 24786.0, 6557.0, 92775.0, 24725.0, 36884.0, 0.0, 5652.0, 5523.0, 3012.0, 16369.0, 60782.0, 15459.0, 7608.0, 132802.0], [60255.0, 14991.0, 454539.0, 90406.0, 0.0, 92882.0, 64845.0, 40851.0, 0.0, 42530.0, 33650.0, 2576.0, 9354.0, 58297.0, 10071.0, 107690.0, 30445.0, 38733.0, 9307.0, 14861.0, 34852.0, 3880.0, 7446.0, 50908.0, 39252.0, 30092.0, 117965.0], [49502.0, 7854.0, 466735.0, 192157.0, 0.0, 108885.0, 51917.0, 12420.0, 0.0, 56039.0, 34352.0, 0.0, 31396.0, 54160.0, 32917.0, 93528.0, 92319.0, 17499.0, 25396.0, 15337.0, 43343.0, 16639.0, 6793.0, 136686.0, 59579.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

