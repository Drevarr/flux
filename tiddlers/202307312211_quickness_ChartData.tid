created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Lord Sahan", "Belvyn Brightblade", "Grasszanine", "Klenga", "Newtype Khan", "Sub Train", "Audens Silvermarker", "Sygaldry Verdandi", "Arcanophage Farra", "Crusader Siolith", "Solus Sanctus", "Bella Sassy", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[466.3397], [31.5183, 98.1343, 356.8974, 1.7165, 0.0], [33.9261, 416.7886, 300.5131, 0.0, 0.0, 19.596, 18.851, 75.1295, 10.7226, 31.4003, 0.0, 0.0, 132.8222, 0.0], [20.5594, 723.5992, 171.5911, 0.0, 67.3992, 0.0, 133.5345, 9.499, 21.0941, 0.0, 0.0, 344.7948, 11.61, 0.0], [23.1216, 626.5929, 427.9111, 0.0, 0.0, 95.22, 6.1803, 156.5307, 23.023, 75.25, 0.0, 0.0, 237.6599, 0.0, 0.0], [48.9907, 683.5559, 348.3635, 3.8174, 108.744, 8.4747, 144.6406, 49.6524, 8.8133, 0.0, 7.9269, 267.524, 61.47, 0.0], [71.4332, 1125.1601, 225.842, 3.0744, 0.0, 66.24, 12.5674, 291.2411, 28.1428], [26.7334, 930.5835, 547.9944, 7.9678, 0.0, 34.3344, 8.3507, 161.1038, 0.0, 4.7438, 1.8315, 0.0, 351.8954, 13.158, 0.0], [21.4238, 966.1149, 392.2519, 0.0, 32.844, 22.6337, 200.6938, 45.08, 0.0, 37.6623, 11.3939, 385.101, 13.338, 0.0], [45.9346, 851.0609, 646.7432, 40.3512, 0.0, 164.2396, 23.828, 15.363, 0.0, 0.0, 364.217, 13.77, 0.0], [40.9645, 1468.066, 739.0915, 10.0943, 88.7616, 14.6137, 228.0017, 5.7638, 32.821, 0.0, 453.8093, 33.354, 1.9503], [55.9982, 1201.2987, 729.3385, 25.9787, 75.1824, 21.1867, 288.6279, 97.1152, 43.9701, 49.6836, 23.5115, 512.4934, 42.21], [53.5595, 1379.5195, 763.1691, 0.0, 56.856, 0.0, 224.8659, 65.1406, 58.3699, 9.5238, 523.353, 52.29]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

