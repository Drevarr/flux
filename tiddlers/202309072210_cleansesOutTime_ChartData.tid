created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Gluvs", "Lasting Beauty", "Hawaiian Supreme", "Traidoruns Maximus", "Blaize Harlot", "Kary\u00edna", "Forever Dreaming", "Reckkyy", "Malfax Jinn", "Sonja Wintersong", "Clean And Green", "Seiker Novus Terra", "Beware My Math", "High Sorcer Baradun", "Serum Vision", "Tootsie Pop Rocks", "Toka Lockhart", "Pafema", "Cat Wigglebooty", "Drevarr Moonwillow"];
const professions = ["Reaper", "Spellbreaker", "Spellbreaker", "Firebrand", "Scourge", "Vindicator", "Scourge", "Scrapper", "Firebrand", "Firebrand", "Druid", "Tempest", "Scrapper", "Tempest", "Tempest", "Scrapper", "Tempest", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.9972, 25.6038, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 17.0163], [5.9848, 4.9944, 1.0, 10.006, 28.1077, 22.0236, 0.0], [0.0, 25.3563, 9.9746, 15.9831, 2.0, 11.0417, 6.1053, 37.0746], [0.0, 19.1839, 0.0, 7.1017, 0.0, 17.0298, 16.0526, 15.9917, 14.0142, 0.0, 11.0143, 0.0, 8.9976, 0.0, 0.0], [4.984, 25.4138, 3.9898, 12.1808, 1.0, 5.0, 7.0132, 4.9972, 18.0495, 1.0, 7.0071, 0.0, 6.9976, 0.0, 7.0289, 7.0077, 8.9959], [11.9681, 6.0057, 9.0254, 35.4633, 1.0, 2.0, 0.0, 14.9972, 25.0684, 11.0076, 18.0214], [15.011, 12.0118, 13.0763, 20.0286, 0.0, 13.0097, 2.0, 8.0, 7.0615, 29.0265], [30.4474, 60.2348, 48.2099, 0.0], [6.9787, 20.5402, 8.9746, 18.7514, 1.0, 10.0119, 23.1381, 16.0283, 11.0076, 7.0071, 0.0, 11.0483, 0.0, 7.0, 19.0192, 9.9959], [7.006, 26.3947, 45.6906, 26.066, 0.0, 1.0, 5.9976, 0.0, 0.0, 16.0154, 32.1813], [86.8988, 15.7763, 153.8425], [0.9947, 35.5977, 2.9898, 41.4972, 1.0, 59.631, 45.3553, 48.0663, 75.1509, 5.0, 35.1714, 0.0], [70.8309, 0.0, 120.11], [36.4975, 64.548, 11.0303, 37.0595, 111.6823, 116.4528, 0.0, 44.3865], [81.9469, 30.4105, 79.4682, 109.0846, 142.4705], [17.234, 42.6437, 0.0, 49.9492, 11.0303, 51.1071, 65.4475, 73.4882, 11.0076, 50.3929, 0.0, 42.1739, 0.0, 17.0231, 38.1654, 57.2505], [3.9894, 40.454, 37.1777, 43.6384, 12.0303, 34.0298, 22.6316, 43.6105, 101.2642, 22.1832, 41.1071, 0.0, 41.5411, 3.0105, 8.0, 48.2423, 70.4501], [0.0, 124.1111, 37.4316, 69.8266, 136.2, 163.835], [24.0745, 71.1724, 46.2234, 84.7062, 21.0833, 77.2143, 49.8553, 99.4503, 120.9033, 30.4046, 1.0, 0.0, 61.7198, 5.0211, 29.3699, 0.0], [61.8457, 119.3851, 78.4873, 115.5537, 21.1061, 88.9405, 51.1316, 173.547, 192.9269, 51.1603, 84.7286, 2.0, 97.6546, 34.6947, 64.7803, 66.7538, 142.0631]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

