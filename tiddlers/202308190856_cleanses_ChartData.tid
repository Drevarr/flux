created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Grootsmaid", "Brutal Araden", "Xanvias Tsolice", "Crabbedmermaid", "Nadumi", "Aloe Pen", "Nose Llama", "Grae Leon", "Kosa\u00efr", "Vee U", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Renegade", "Weaver", "Firebrand", "Thief", "Vindicator", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.1265, 0.1412, 0.3594, 0.0253, 0.0, 0.0727, 0.037, 0.0], [0.0, 0.0, 0.0737, 0.087, 0.0309, 0.0, 0.0179, 0.0, 0.027, 0.1506, 0.1412, 0.0156, 0.1266], [0.0063, 0.0, 0.0, 0.0, 0.1867, 0.1412, 0.0, 0.1013, 0.0, 0.103, 0.1111, 0.0, 0.0], [0.0316, 0.1304, 0.0, 0.019, 0.0, 0.0, 0.2703, 0.247, 0.0, 0.0469, 0.2025, 0.0], [0.1111, 0.0227, 0.0172, 0.0, 0.0145, 0.1649, 0.038, 0.0, 0.0, 0.0, 0.1386, 0.1412, 0.1406, 0.2342], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0405, 0.0, 0.0, 0.0, 0.0253, 0.1228, 0.3818, 0.7284, 0.1176, 0.7333], [0.9074, 0.25, 0.4483, 1.1368, 1.3913, 1.0722, 0.7321, 0.7708, 1.1351], [0.7263, 0.4348, 0.6598, 0.9114, 0.3393, 0.0208, 0.8784, 1.4819, 0.8079, 0.8125, 1.0886, 0.1316, 0.7333, 1.2593, 0.1471, 1.5333], [0.4773, 0.4914, 0.8632, 0.913, 0.3918, 1.1329, 0.3214, 0.125, 1.4459, 1.5964, 1.4237, 0.25, 1.6203], [1.7778, 0.2955, 0.4569, 0.7684, 1.1159, 0.6495, 1.2658, 0.6429, 0.0417, 1.5946, 1.2952, 1.1921, 0.8281, 1.6266, 0.193], [1.2593, 0.3636, 0.6724, 1.2526, 1.2464, 0.8969, 1.1203, 0.7143, 0.4583, 0.8378, 1.5723, 1.4859, 0.875, 1.4177, 0.5088]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

