created: 20230730042159000
creator: Drevarr
tags: ChartData
title: 202307300421_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Elvezio Figone", "Newtype Khan", "N\u00eec\u00f4le", "Loganlek", "Ellhee", "Elvezio Figone", "Ijahmon", "Aloepenny", "Koralia Danai", "Sub Train", "Lord Sahan", "Jade Quufu", "Salty Pam", "Gamora Titus", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Virtuoso", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Chronomancer", "Firebrand", "Harbinger", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 26.4735, 20.4918, 33.8719, 0.0, 7.2832, 23.1723, 30.6546], [29.8822, 35.1301, 89.1066], [6.0099, 97.1827, 23.1613, 41.856], [2.9398, 28.1389, 88.6511, 23.862, 25.4014, 10.7856, 17.12, 18.528], [26.6137, 16.1281, 83.0668, 6.9433, 13.7078, 12.6517, 7.9531, 19.776, 49.824], [25.935, 27.0248, 119.9363, 78.3806], [83.62, 136.4972, 70.1988], [0.0, 118.3272, 106.1777, 0.0, 170.3714], [35.0996, 241.0565, 30.7926, 135.8489, 16.753, 29.52, 37.08], [17.1865, 133.9461, 51.304, 98.0738, 8.8711, 105.8508, 51.0281, 87.9681], [11.3152, 272.8561, 32.3214, 104.1953, 45.0475, 52.72, 25.236, 74.1591], [71.7413, 69.4512, 96.9048, 21.427, 28.712, 100.45, 58.8826, 21.4644, 61.1395, 71.5744, 5.7773, 81.9899], [21.6315, 21.4027, 59.4739, 30.0884, 71.0407, 12.5371, 44.0094, 9.4548, 0.0, 133.7631, 0.0, 187.3115, 0.0, 37.4539, 18.8614, 46.1246, 62.318, 95.2185], [77.0946, 34.0795, 82.7702, 25.056, 20.64, 0.0, 47.0322, 30.5178, 13.0576, 96.8774, 37.4042, 68.7654, 68.2162, 63.2614, 30.0287, 40.3143, 51.0064, 44.3003, 32.5183, 25.1328, 111.3055, 0.0, 35.6923, 0.0, 21.8293, 0.0, 6.3979, 26.0121, 16.2165], [16.7437, 44.1862, 206.232, 55.5974, 94.8823, 0.0, 36.9734, 65.92, 35.82, 9.3185, 86.2308, 36.3546, 31.9534, 113.3431, 31.4977, 130.7757, 171.5825], [29.4037, 109.6698, 92.5943, 146.993, 8.5075, 30.72, 25.968, 0.0, 45.7317, 29.1612, 44.5303, 128.531, 41.7568, 118.0245, 125.771, 81.5373, 61.1608, 30.36, 68.9333, 8.433, 148.5009, 8.189, 71.7138, 11.8856, 40.0783, 11.6554, 36.9224, 49.761, 41.9737, 100.4325, 94.2365, 135.9454, 63.196, 85.239, 75.6459, 5.0778, 63.3277, 44.4503, 35.9381, 129.1728]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

