created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Zaedy Zae", "Tribal S", "Arriasa", "Blancooo Padreee", "Ryvalia Fazebringer", "Grim Grooblin", "Rina Of Theros", "Arcanophage Farra", "Daphne Agla\u00e9", "Daring Deathblade", "Venomina", "Newtype Khan", "Grasszanine", "Mister Jekyll", "Mesmerizing Dark", "Kahlianne", "Be\u00eb", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Druid", "Druid", "Druid", "Spellbreaker", "Chronomancer", "Chronomancer", "Scourge", "Spellbreaker", "Scourge", "Reaper", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.035, 0.0, 0.0388, 0.1463, 0.0855, 0.0435, 0.0696, 0.0412, 0.1467, 0.098, 0.0982, 0.0694, 0.0435, 0.037, 0.0741, 0.0597, 0.0227, 0.0194, 0.0791, 0.0926, 0.1296, 0.0615, 0.0, 0.0678, 0.0, 0.0168, 0.0405, 0.0128], [0.035, 0.0, 0.0465, 0.0976, 0.0171, 0.0435, 0.1013, 0.0619, 0.08, 0.1569, 0.0759, 0.0278, 0.0, 0.0593, 0.0741, 0.0672, 0.0114, 0.0388, 0.0734, 0.1389, 0.0648, 0.0769, 0.1034, 0.1186, 0.04, 0.0504, 0.0608, 0.0641], [0.035, 0.0233, 0.0854, 0.0769, 0.087, 0.0506, 0.0309, 0.08, 0.098, 0.0893, 0.0417, 0.087, 0.0593, 0.037, 0.1716, 0.0227, 0.0388, 0.0621, 0.0833, 0.0926, 0.0462, 0.069, 0.1695, 0.0, 0.0588, 0.0541, 0.0385], [0.7658, 0.3299, 0.44, 0.2941], [0.028, 0.0769, 0.093, 0.061, 0.1795, 0.0435, 0.1329, 0.0722, 0.1333, 0.1176, 0.0893, 0.1111, 0.0, 0.0963, 0.037, 0.1642, 0.0114, 0.0485, 0.113, 0.0278, 0.0926, 0.0154, 0.092, 0.0847, 0.0, 0.0588, 0.0068, 0.1026], [0.1329, 0.1237, 0.2533, 0.0392, 0.2366, 0.2083, 0.4783, 0.2593, 0.0, 0.1791, 0.0341, 0.0388, 0.2938], [0.6709, 0.7423, 0.5067, 0.7843], [1.2278, 0.6186, 0.5333, 0.4118], [0.1469, 0.0, 0.1008, 0.3293, 0.5385, 0.0, 0.0063, 0.1237, 0.2267, 0.6863, 0.1518, 0.0972, 0.0741, 0.4776, 0.0, 0.0485, 0.0565, 0.5648, 0.1852, 0.0, 0.5632, 0.6949, 0.0, 0.521, 0.1892], [0.2448, 0.0769, 0.1318, 0.1098, 0.2991, 0.4783, 0.3393, 0.4722, 0.0, 0.237, 0.0, 0.6045, 0.1705, 0.1456, 0.1808, 0.2685, 0.537, 0.4462, 0.0345, 0.5085, 0.84, 0.3277, 0.2095, 0.4872], [0.2797, 0.0385, 0.3953, 0.4756, 0.9573, 0.0, 0.3861, 0.268, 0.6533, 0.7451, 0.1964, 0.1528, 0.0, 0.3704, 0.0, 0.3657, 0.0455, 0.2524, 0.1243, 0.6481, 0.2963, 0.0, 0.7816, 0.0, 0.5042, 0.3446, 0.3077], [0.1538, 0.1154, 0.2481, 0.439, 0.0684, 0.0, 1.1835, 0.4845, 0.3867, 0.8039, 0.4241, 0.25, 0.0, 0.1111, 0.0, 0.6716, 0.0568, 0.0874, 0.4294, 0.4074, 0.4444, 0.0, 0.3333, 0.7797, 0.0, 0.4202, 0.2973, 0.141], [0.2168, 0.0769, 0.2016, 0.4268, 0.8205, 0.9304, 0.5052, 0.3333, 0.902, 0.2902, 0.3611, 0.0, 0.1704, 0.0, 0.4776, 0.0227, 0.0583, 0.4689, 0.3426, 0.4352, 0.0, 0.6782, 1.1186, 0.0, 0.4958, 0.6892, 0.2308], [0.2517, 0.1154, 0.1628, 0.8415, 0.7949, 0.0, 0.962, 0.3196, 0.64, 0.9216, 0.4583, 0.0, 0.4074, 0.0, 0.403, 0.1705, 0.165, 0.565, 0.6944, 0.75, 0.0615, 0.8966, 0.5424, 0.0, 0.4958, 0.6757, 0.5], [0.2517, 0.1538, 0.5736, 0.9268, 1.2735, 0.087, 0.3918, 0.48, 0.902, 0.6786, 0.5972, 0.0, 0.3556, 0.0, 1.1194, 0.2727, 0.2718, 0.4972, 0.9722, 0.7963, 0.0923, 0.8851, 1.6271, 0.0, 1.1765, 0.5743, 0.2949], [0.4615, 0.0, 0.3411, 0.4268, 1.6325, 0.0435, 0.538, 0.6701, 0.5733, 1.3137, 0.6116, 0.4028, 0.1739, 0.437, 0.037, 1.2388, 0.0909, 0.0874, 0.5367, 0.9352, 0.6759, 0.1538, 0.9195, 1.0339, 0.4874, 0.7905, 0.6795], [0.4126, 0.1538, 0.4574, 0.8171, 0.2991, 0.1304, 1.3101, 1.134, 0.48, 0.7843, 0.7411, 0.4861, 0.0, 0.4074, 0.0, 1.5149, 0.2727, 0.2136, 0.5311, 1.0833, 0.1852, 0.1231, 1.1724, 1.1864, 0.0, 1.084, 0.4797, 0.6795], [0.3357, 0.0769, 0.5194, 0.8537, 0.9231, 0.2174, 0.8418, 0.8454, 1.36, 1.4902, 0.9107, 0.5972, 0.0, 0.2296, 0.0, 0.8134, 0.0455, 0.301, 1.0565, 0.9167, 0.9537, 0.0769, 1.5057, 1.1525, 0.0, 0.6387, 0.9527, 0.7051], [0.3846, 0.1923, 0.3798, 0.8902, 1.4786, 0.4348, 2.1266, 1.0928, 1.0267, 1.2353, 0.8036, 0.6667, 0.0435, 0.5333, 0.0741, 0.2239, 0.2727, 0.1553, 0.6441, 0.9444, 0.6204, 0.5385, 1.2069, 2.322, 0.04, 0.8319, 1.1351, 1.1154], [0.5524, 0.1923, 0.907, 0.8902, 2.1795, 0.0435, 2.7025, 0.3608, 1.5867, 2.3137, 0.9152, 1.1111, 0.087, 0.5778, 0.1111, 2.1791, 0.3977, 0.4757, 0.8249, 1.5278, 1.3426, 0.2308, 1.2414, 1.4746, 0.52, 1.2689, 1.5203, 0.5641]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

