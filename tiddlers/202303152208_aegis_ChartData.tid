created: 20230315220824000
creator: Drevarr
modified: 20230705163522135
modifier: drevarr
tags: ChartData
title: 202303152208_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Ryvalia Fazebringer", "Fribble Bibble", "Ark Darkness", "Drevarr Moonwillow", "Blanco Padre Guard", "Whose Guardian", "Zaylen Harker", "Bella Sassy", "Sygaldry Verdandi", "Ravioli Fetabringer", "Koralia Danai", "Johosh The Great"];
const professions = ["Dragonhunter", "Chronomancer", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.334, 148.521, 31.1728, 0.0, 27.5232, 0.0, 80.065, 6.48], [0.0, 0.8702, 8.0468, 0.0, 2.3285, 0.3459, 19.5482, 69.7912, 0.0, 14.1264, 55.0735, 0.0, 1.4097, 0.0, 0.8122, 22.0578, 0.0, 25.5017, 7.1266, 7.4059, 0.0, 40.3128, 28.0714], [23.1393, 35.5348, 38.9491, 0.0, 13.9709, 0.0, 0.0, 43.2209, 0.0, 28.3824, 46.9788, 0.0, 24.4353, 1.8223, 0.2707, 8.8631, 17.8214, 13.1381, 24.2424, 37.4609, 36.8582], [0.0, 55.9864, 0.0, 35.4342, 14.7608, 0.0, 61.0042, 0.0, 13.6714, 65.8008, 74.7676, 109.175], [30.3629, 28.5729, 60.858, 8.5932, 26.231, 7.2944, 0.0, 57.1556, 1.1299, 37.6488, 75.4551, 0.0, 33.4979, 6.4397, 3.384, 33.9864, 0.0, 25.6061, 5.5614, 20.5555, 85.7808, 0.0, 2.852, 67.9622], [32.4664, 89.7798, 39.9634, 0.0, 12.0701, 0.0, 0.0, 82.5449, 0.0, 30.5208, 65.0475, 48.848, 21.1459, 13.8518, 3.7652, 46.9771, 14.2174, 36.6024, 15.7176, 0.0, 27.5946, 113.6074], [43.3018, 124.0817, 32.7281, 0.0, 69.9019, 3.369, 9.8023, 258.6171, 0.0, 62.208, 89.3319, 22.419, 34.1692, 8.9939, 21.2248, 0.0, 87.6629, 0.0, 37.7659, 22.644, 0.0, 0.0, 98.1331], [66.7586, 101.1654, 80.0621, 56.4062, 15.5814, 13.8857, 221.4187, 6.318, 77.5008, 149.1756, 0.0, 66.3916, 0.0, 15.5514, 52.379, 0.0, 38.9232, 69.5203, 61.9114, 11.2896, 319.4966, 102.0989], [53.9387, 136.9903, 130.7771, 23.4108, 109.391, 17.7472, 3.9142, 255.3106, 0.0, 59.0976, 130.9623, 54.4993, 79.1463, 26.4072, 25.6432, 77.3024, 45.0984, 118.6301, 12.3607, 106.6075, 152.1677, 19.9987, 255.9056, 207.4637], [19.9244, 112.0434, 211.3125, 66.654, 47.9952, 23.8835, 24.1166, 152.4542, 28.4674, 50.2848, 148.7419, 74.7356, 87.0676, 25.7936, 68.5392, 58.9628, 43.1827, 121.5878, 102.3509, 96.0422, 340.154, 239.6563], [59.6541, 167.5212, 159.8537, 78.6492, 76.8874, 54.4147, 16.7734, 273.0241, 53.0833, 85.536, 213.5003, 21.4376, 88.0746, 19.7439, 45.105, 74.8034, 15.2812, 71.1878, 0.0, 93.9542, 110.5027, 27.2294, 155.7787, 248.6765], [74.4188, 167.9563, 142.1372, 31.563, 108.4406, 55.0614, 36.3667, 150.6828, 24.9197, 74.3904, 245.3013, 79.6763, 69.8823, 25.9488, 33.7498, 90.5638, 60.3187, 100.4021, 178.488, 22.2432, 285.196, 165.24], [123.6344, 155.0478, 219.2917, 99.6494, 41.0141, 36.66, 258.6171, 27.6898, 90.5256, 280.7161, 10.7442, 71.3592, 25.6022, 53.3619, 84.5328, 12.9628, 95.2027, 0.0, 140.9798, 120.5194, 109.6078, 235.8461]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

