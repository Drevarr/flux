created: 20230410221909000
creator: Drevarr
modified: 20230705163525162
modifier: drevarr
tags: ChartData
title: 202304102219_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Tribal S", "Be\u00eb", "Mistwalker Caelon", "Sofya De Nova", "Lord Erin The Wise", "Bella Sassy", "Jeckyll Mbs", "Tootsie Pop Rocks", "Nazhul Naxxremis", "Zadie Miststep", "Ak\u00e1nt\u00f3r", "Drevarr Moonwillow", "Black Raspberry Pie", "Ark Darkness", "Aisling Sidra", "Mac Chiato", "High Sorcer Baradun", "Inedible Plant", "Xyntharos", "Gavann", "Koralia Danai", "Fribble Bibble", "Zaylen Harker", "Tegan Parker", "Legacy Of Mathus", "Sygaldry Verdandi", "Skye Nightroad", "Asorlia", "Johosh The Great", "Solus Sanctus", "Oo Dads Mad", "Venomina The Siren", "Isla Miststorm", "Kmpek", "Belvyn Brightblade", "Sub Train", "Aira Draugr", "Fecund Algorithm", "Smol Gluvs", "Rozaalyna", "Be\u00eb", "Elonith Requiem", "Rina Of Theros", "R E A P E R Y U", "Nazhul Naxxremis", "Mechcem", "Az New Too", "Shandalar V Basing", "Scrivy"];
const professions = ["Spellbreaker", "Druid", "Scourge", "Vindicator", "Weaver", "Weaver", "Firebrand", "Berserker", "Scrapper", "Scourge", "Tempest", "Druid", "Scrapper", "Chronomancer", "Firebrand", "Reaper", "Tempest", "Tempest", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Berserker", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Willbender", "Vindicator", "Firebrand", "Firebrand", "Herald", "Mechanist", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Scourge", "Reaper", "Scrapper", "Virtuoso", "Dragonhunter", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1293.2656, 215.8395, 174.4735, 359.5676, 374.8092, 340.7105, 271.5378, 138.2386, 731.1324, 47.4889, 631.3214, 213.3333, 471.8806, 1046.7797, 1273.6145, 368.1429, 1666.3019, 29.0, 2918.8615, 1978.9412, 2910.1356, 1094.1455], [16.8152, 214.2945, 453.3989, 525.0575, 100.124, 272.2027, 541.4225, 0.0513, 268.9457, 806.9762, 541.8333, 955.0645, 1394.1842, 343.3333, 1540.2456, 238.0556, 1332.0652, 2401.9412, 8072.8125, 2957.6667], [1824.9833, 35.0056, 262.4234, 591.6869, 698.8926, 169.7879, 232.2833, 132.863, 427.2917, 106.619, 333.7864, 529.878, 226.8209, 758.1803, 1248.5571, 293.3103, 5156.25, 21.1636, 1160.4457], [513.2222, 31.1634, 190.6073, 395.045, 487.0237, 228.6282, 229.6364, 346.0972, 782.7606, 12.8444, 403.3034, 634.125, 245.4531, 956.3065, 1141.7143, 359.0, 1938.3673, 12.24, 1830.5128, 2108.5444, 1699.1111, 664.5364], [729.1934, 722.3295, 278.265, 98.0756, 448.6782, 225.7059, 0.0, 188.0, 287.5606, 61.2833, 819.8333, 0.0, 355.1695, 105.8545, 962.8133, 1247.5806, 946.2353, 213.6972], [1011.5833, 6.1778, 315.7159, 518.3919, 666.042, 400.1013, 66.3937, 125.4318, 371.5775, 35.4318, 530.2021, 126.825, 472.8636, 212.4194, 600.1759, 122.9231, 1289.3654, 231.8113, 1635.0577, 1493.663], [1649.4478, 43.2484, 88.1123, 316.6577, 437.1142, 148.2568, 54.8917, 203.7808, 350.6901, 42.0909, 276.7111, 1193.8537, 244.4179, 541.25, 1920.5278, 567.8571, 2416.9259, 54.4808, 1892.0588, 1950.0, 2198.6825, 626.6239], [1034.9464, 25.2606, 190.9743, 894.5412, 413.2731, 337.0968, 214.8067, 365.0698, 540.0972, 4.7778, 482.2857, 281.7632, 453.9242, 1348.1311, 1043.3721, 142.8125, 2661.4, 8.0962, 2197.4286, 2521.4423, 3276.0185], [1317.783, 22.7143, 150.1266, 382.9908, 556.588, 238.918, 193.9412, 154.4, 323.9, 49.3854, 386.4737, 349.5455, 456.6, 1459.8155, 289.4138, 2635.3659, 0.0, 3463.0312, 2019.871, 3899.6842], [65.7429, 35.1634, 90.9336, 628.7239, 794.7796, 463.2, 12.2683, 316.4536, 884.4048, 499.303, 812.6613, 1128.0693, 161.5625, 2248.6863, 188.5957, 2001.0517], [1333.0526, 10.1667, 134.2152, 352.8931, 465.6351, 138.9733, 211.0826, 130.7313, 544.5972, 136.7079, 237.0976, 402.8769, 1022.15, 971.6186, 237.3182, 2903.7179, 187.75, 1681.7632, 1685.3289, 2651.2258, 745.2], [1167.0571, 11.2771, 61.36, 379.6736, 479.3762, 155.8649, 62.3333, 251.7108, 458.3, 149.4333, 269.4286, 142.0, 346.6935, 798.1792, 163.7273, 2679.6429, 37.9808, 1551.1923, 2027.2414, 1655.2581, 514.7207], [1492.3708, 14.367, 218.9058, 330.4796, 430.3287, 418.1263, 114.975, 173.7568, 295.6571, 27.2667, 142.3846, 606.525, 651.2836, 863.3607, 1350.587, 171.1538, 2502.38, 0.0, 1758.4941, 1693.3368, 3013.2105, 659.1982], [178.0229, 36.5322, 160.0464, 390.3422, 431.131, 124.7684, 108.0254, 160.6818, 619.4429, 22.775, 501.4444, 726.4878, 515.9048, 976.3279, 1078.6571, 529.3704, 3850.3871, 1170.1111, 1944.9423, 2593.0943, 2352.8966, 755.3243], [23.6358, 137.2531, 459.7083, 578.3405, 240.7442, 117.9, 88.8333, 124.7042, 10.0256, 82.1124, 181.5854, 929.3881, 405.7167, 926.233, 78.64, 2661.6512, 0.0, 1858.3824, 1935.2179, 2170.2857], [349.6332, 550.6533, 174.3017, 116.9762, 1083.2817, 21.1163, 359.7528, 482.0, 1396.8333, 1217.5254, 1639.8871, 6681.3571, 11964.0, 5747.5333, 16236.5, 3821.8333, 2558.2157, 1426.3694], [13.3892, 143.3321, 467.3004, 459.2934, 170.0161, 56.3248, 43.6966, 379.7286, 12.5778, 454.0208, 202.7805, 535.3333, 723.8167, 1142.7973, 408.9677, 1838.7455, 142.1852, 1392.6988, 1633.5618, 2411.5091, 761.1009], [31.5541, 161.2007, 561.3423, 531.0556, 405.7403, 50.325, 71.2644, 637.6197, 390.3736, 554.6053, 722.5373, 2370.7273, 999.1304, 1590.2051, 1362.2679, 2674.4865, 1330.0886, 2565.0435, 1037.6036], [13.2092, 163.6375, 419.2576, 525.7657, 132.5423, 49.9917, 5353.0, 251.9714, 57.6889, 117.1538, 197.525, 137.3788, 390.9508, 626.4766, 132.55, 2334.0217, 25.9815, 1887.7761, 2499.7162, 5673.4, 827.0183], [890.9474, 0.0303, 145.8522, 402.4242, 462.9293, 277.8197, 216.5966, 278.5116, 569.3651, 0.3111, 191.831, 93.3846, 3200.35, 716.4561, 706.7383, 156.8621, 1884.8431, 6.0385, 1569.1897, 1484.9324, 1461.0169, 505.7778], [24.5203, 97.65, 424.149, 547.1312, 88.5957, 193.2101, 180.2169, 462.1159, 11.6, 552.5556, 1039.6667, 487.2537, 330.9138, 1448.2917, 6.2963, 1446.1765, 0.0, 1279.7073, 1759.5692, 457.7353, 577.9636], [803.0458, 23.1429, 101.0167, 392.7774, 381.2062, 66.1589, 113.7815, 108.1884, 241.5286, 18.3333, 152.587, 473.1707, 262.9385, 179.6271, 1544.439, 54.24, 1146.7385, 4.9615, 2623.1667, 2172.3111, 5381.25, 612.4595], [648.5814, 26.4625, 135.0849, 494.6816, 406.7165, 108.95, 312.5083, 109.1343, 320.8857, 0.0, 228.5591, 438.7143, 151.9403, 634.3167, 1298.9709, 94.0385, 832.4444, 0.0, 1680.1667, 2415.8889, 798.4091, 482.4234], [1370.6967, 4.6928, 66.1822, 419.8616, 464.8967, 93.5405, 79.4087, 32.3256, 223.7857, 1.3333, 210.3412, 165.1429, 115.5873, 499.9216, 1601.0435, 165.2692, 1966.8125, 73.2407, 1978.5286, 1193.9596, 1562.9524, 501.2432], [47.4684, 90.7615, 406.4258, 402.7592, 345.0656, 165.4017, 43.2464, 220.1791, 31.641, 196.2889, 645.8537, 264.2836, 443.95, 1182.4286, 348.8621, 2654.6889, 1084.0, 2840.0851, 1663.9451, 2083.8163, 476.7387], [33.4329, 284.3173, 774.6113, 749.0416, 296.4861, 103.3167, 102.314], [3.6182, 142.1782, 475.8451, 387.1704, 61.2792, 49.175, 126.5606, 117.5111, 790.3659, 149.0308, 501.0, 2194.3947, 505.3929, 2060.6818, 0.3148, 1837.3467, 1446.1236, 2636.3729, 551.3274], [62.924, 323.291, 968.5869, 824.3137, 230.9737, 218.5833, 154.2192, 480.7059], [29.1105, 169.6067, 355.6533, 423.063, 158.5625, 49.1328, 156.7846, 341.6197, 229.5444, 404.7692, 204.1194, 253.1129, 515.7048, 45.087, 2021.1667, 0.9032, 1118.6087, 2035.075, 1467.0323, 695.8], [988.6078, 16.3275, 61.8, 319.5941, 386.119, 128.7467, 348.6777, 68.5765, 173.7746, 36.6444, 164.1778, 49.4872, 75.1642, 269.0667, 490.6449, 63.0667, 1936.6226, 0.0, 1275.1477, 1712.5, 710.9365, 508.1712], [56.6364, 120.7326, 273.8507, 329.8759, 55.2946, 69.431, 34.3803, 196.1286, 166.3662, 114.6098, 101.1343, 413.7833, 838.0935, 0.0, 1356.7414, 6.1087, 1543.2564, 1407.1628, 2160.5366, 464.6126], [63.267, 130.7174, 632.0421, 597.2529], [179.8664, 236.2025, 66.4793, 187.8143, 215.1127, 8.6136, 507.4719, 320.641, 353.1803, 532.5323, 1003.9277, 140.0, 1700.6731, 98.6981, 1408.9744, 2032.5747, 1154.375, 630.0536], [3755.5, 48.4519, 189.75, 576.3417, 407.6569], [137.966, 219.5333, 139.7024, 524.3143, 20.4222, 266.7619, 624.6429, 741.0896, 844.1967, 1390.5347, 206.9355, 2380.0488, 21.0385, 2435.7742, 2288.038, 4631.5833, 739.1239], [651.0787, 19.9806, 109.0815, 397.3459, 436.4779], [187.6393, 96.1441, 189.0845, 561.0282, 0.0, 183.3516, 237.3077, 325.6562, 815.4918, 802.2617, 45.3846, 2203.3019, 46.0185, 1229.2283, 2149.2581, 2449.5, 764.7182], [937.1724, 41.2986, 174.1359, 531.7419, 798.2706], [23.4444, 662.7353, 2515.6087, 691.0538, 429.0244, 111.3194, 369.4667, 1308.6567, 616.6364, 784.4727, 11568.75], [2466.3077, 1696.2063, 1133.027], [4466.7361, 8676.8], [1986.481, 3291.0794, 726.2091], [1852.8554, 2691.1786, 1030.6396], [2830.878, 3188.2698, 2432.6765], [2379.94, 788.5238, 1239.1712], [3850.1429, 3520.9032], [3098.8824, 3393.8511], [742.4028, 0.0, 499.3238, 11.775, 305.8209, 169.35, 303.5877, 0.0, 66.84, 0.0, 1843.3438, 583.5192], [57.4237, 257.1496], [581.6455]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

