created: 20230628220723000
creator: Drevarr
modified: 20230705163539652
modifier: drevarr
tags: ChartData
title: 202306282207_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["I Toxicheart I", "Shaca Booey", "Oo Dads Mad", "Cpt Z Brannigan", "Irin The Undeath", "Demon Staph", "Legacy Of Mathus", "Elonith Requiem", "Tribal S", "Specialist Zeff", "Cat Wigglebooty", "Caelon Cai", "Arcanophage Farra", "Ateriuz", "Blanco Padre Guard", "Lucky Leipreach\u00e1n", "Vopiscus Zergherdus", "Blade Stacker", "Rozaalyna", "Dim Og", "No Reserv\u00e9", "Zayde Sunsabre", "Tegan Parker", "Johosh The Mighty", "Tootsie Pop Rocks", "Xyntharos", "Fribble Bibble", "Belvyn Brightblade", "Xanvias Einzbern", "Drumina", "Arriasa", "My Birthday Girl", "Miphest\u00f6", "Grasszanine", "Tika Fiery", "Smol Gluvs", "Rahani Sunray", "Be\u00eb", "Gavann", "Crusader Siolith", "Sygaldry Verdandi", "Koralia Danai", "Sub Train", "Solus Sanctus", "Bella Sassy", "Drevarr Moonwillow", "Ryvalia Fazebringer", "Black Raspberry Pie", "Eibh\u00ebar", "Primal Clone"];
const professions = ["Scrapper", "Berserker", "Spellbreaker", "Scrapper", "Reaper", "Druid", "Spellbreaker", "Reaper", "Druid", "Scrapper", "Scrapper", "Reaper", "Spellbreaker", "Berserker", "Firebrand", "Scrapper", "Scrapper", "Chronomancer", "Reaper", "Scrapper", "Vindicator", "Spellbreaker", "Tempest", "Berserker", "Scrapper", "Vindicator", "Scrapper", "Firebrand", "Berserker", "Druid", "Druid", "Scrapper", "Tempest", "Spellbreaker", "Firebrand", "Reaper", "Chronomancer", "Reaper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 5, 3, 21, 4, 1, 4, 0, 0, 10, 3, 0], [2, 1, 7, 3, 0, 4, 0, 8, 0, 1, 3, 7, 0, 4, 5, 6, 0, 9, 1, 0, 0], [0, 7, 10, 6, 10, 12, 4, 7, 7], [1, 0, 3, 20, 2, 2, 5, 0, 0, 1, 0, 2, 8, 4, 12, 1, 5, 0], [0, 3, 2, 4, 10, 6, 1, 7, 5, 0, 9, 7, 3, 2, 10], [1, 0, 4, 13, 5, 2, 10, 5, 5, 3, 0, 4, 14, 9, 0, 9, 10, 0, 5], [0, 6, 18, 9, 12, 13, 8, 3, 6, 0, 12, 9, 5, 5], [8, 2, 4, 6, 7, 3, 1, 8, 0, 3, 6, 0, 4, 7, 0, 8, 11, 9, 0, 4, 7, 1, 8], [0, 2, 19, 2, 4, 6, 3, 2, 4, 0, 5, 5, 1, 3, 9, 0, 2, 15, 11, 3, 5, 3, 0, 4], [0, 0, 9, 3, 2, 11, 5, 2, 5, 5, 0, 10, 8, 4, 2, 7, 3, 1, 7, 13, 0, 6, 3, 0, 4], [1, 0, 20, 6, 11, 4, 2, 0, 3, 0, 7, 7, 5, 2, 6, 0, 1, 12, 6, 0, 6, 9, 0, 6], [0, 14, 11, 4, 2, 7, 6, 1, 8, 0, 11, 4, 1, 4, 8, 0, 5, 11, 9, 3, 6, 5, 0, 3], [0, 4, 21, 3, 7, 7, 1, 6, 6, 0, 9, 6, 5, 3, 3, 0, 3, 2, 14, 2, 8, 5, 1, 7], [10, 21, 6, 7, 5, 3, 1, 5, 1, 8, 7, 3, 4, 12, 0, 5, 3, 10, 4, 9, 2, 0, 1], [0, 8, 10, 6, 11, 7, 8, 6, 7, 1, 11, 6, 5, 4, 4, 15, 6, 2, 1, 4, 7], [0, 0, 5, 13, 9, 10, 11, 2, 3, 3, 6, 3, 4, 17, 0, 3, 17, 12, 1, 5, 7, 0, 2], [6, 11, 8, 10, 10, 2, 2, 12, 1, 6, 2, 4, 5, 7, 0, 3, 14, 13, 1, 5, 5, 7], [5, 24, 0, 6, 7, 5, 2, 15, 0, 10, 17, 19, 1, 9, 5, 0, 12], [0, 6, 17, 4, 8, 9, 3, 5, 3, 1, 14, 8, 5, 0, 9, 1, 2, 14, 10, 2, 8, 4, 1, 8], [0, 0, 5, 12, 9, 11, 12, 3, 6, 8, 0, 3, 6, 4, 7, 13, 0, 1, 17, 6, 10, 1, 0, 10], [0, 11, 23, 5, 9, 11, 3, 6, 8, 0, 6, 4, 3, 3, 6, 0, 7, 0, 12, 3, 9, 9, 0, 7], [0, 8, 8, 5, 9, 7, 5, 6, 7, 0, 12, 13, 9, 3, 9, 0, 2, 9, 9, 10, 8, 1, 6], [8, 13, 4, 7, 7, 2, 1, 0, 9, 9, 2, 3, 13, 3, 1, 19, 18, 2, 10, 7, 10], [2, 0, 6, 18, 9, 12, 8, 3, 6, 5, 0, 11, 9, 5, 3, 15, 0, 3, 13, 5, 2, 9, 4, 1, 10], [0, 6, 14, 7, 13, 11, 5, 5, 9, 1, 12, 10, 8, 5, 8, 1, 5, 18, 11, 2, 6, 7, 0, 2], [2, 0, 9, 14, 8, 19, 14, 3, 5, 5, 1, 10, 7, 6, 6, 11, 0, 4, 9, 9, 1, 13, 4, 0, 6], [10, 19, 5, 20, 5, 5, 3, 11, 1, 11, 16, 3, 3, 14, 0, 6, 16, 6, 1, 4, 3, 0, 8], [2, 1, 6, 19, 4, 11, 7, 3, 8, 8, 1, 5, 13, 8, 5, 11, 1, 9, 22, 7, 1, 10, 8, 1, 2], [0, 9, 26, 5, 12, 9, 4, 7, 11, 0, 9, 8, 6, 4, 13, 0, 6, 16, 9, 2, 9, 9], [10, 27, 7, 13, 9, 6, 5, 8, 0, 9, 3, 9, 3, 8, 0, 3, 21, 14, 0, 7, 6, 0, 6], [0, 13, 33, 5, 11, 10, 2, 5, 8, 0, 14, 10, 6, 16, 0, 4, 6, 12, 3, 8, 9, 0, 13], [0, 0, 8, 30, 7, 17, 11, 7, 5, 8, 0, 9, 5, 8, 3, 10, 9, 13, 12, 3, 8, 9, 0, 10], [0, 11, 25, 9, 12, 8, 7, 5, 6, 0, 4, 8, 6, 4, 8, 0, 10, 16, 16, 1, 9, 8, 1, 18], [0, 4, 19, 8, 13, 13, 4, 6, 13, 1, 20, 4, 5, 3, 11, 1, 8, 14, 13, 4, 11, 7, 0, 14], [1, 8, 13, 7, 9, 10, 5, 3, 9, 2, 11, 10, 9, 3, 22, 1, 6, 23, 11, 2, 10, 14, 1, 8], [0, 10, 32, 7, 13, 17, 6, 5, 12, 0, 8, 9, 6, 2, 4, 0, 9, 13, 19, 2, 9, 7, 0, 10], [30, 5, 14, 11, 5, 2, 4, 0, 8, 15, 26, 2, 9, 0, 2, 24, 18, 3, 8, 5, 10], [0, 8, 24, 7, 15, 8, 3, 4, 8, 0, 14, 7, 7, 5, 13, 3, 5, 23, 12, 6, 16, 10, 0, 9], [8, 32, 6, 7, 11, 8, 10, 7, 1, 11, 6, 10, 5, 17, 2, 9, 18, 17, 2, 11, 7, 2, 9], [2, 7, 14, 11, 15, 20, 4, 7, 9, 1, 11, 12, 9, 6, 25, 2, 6, 18, 17, 2, 9, 4, 1, 15], [1, 9, 25, 11, 16, 11, 9, 7, 11, 1, 11, 10, 8, 2, 22, 6, 14, 6, 18, 1, 11, 8, 1, 13], [2, 1, 11, 26, 9, 15, 10, 11, 8, 11, 1, 13, 9, 11, 5, 17, 1, 12, 12, 13, 6, 8, 11, 10], [0, 13, 24, 5, 17, 14, 8, 5, 8, 1, 13, 13, 5, 4, 13, 2, 10, 20, 13, 5, 15, 10, 1, 20], [1, 1, 10, 27, 7, 16, 14, 13, 5, 14, 1, 12, 9, 9, 4, 21, 2, 12, 19, 13, 6, 16, 10, 2, 11], [3, 11, 36, 8, 16, 18, 2, 8, 11, 1, 16, 8, 6, 6, 23, 2, 11, 17, 17, 1, 12, 9, 1, 13], [1, 0, 9, 22, 7, 12, 13, 12, 8, 10, 0, 32, 10, 7, 14, 28, 3, 17, 31, 14, 6, 7, 11, 1, 10], [2, 0, 19, 21, 8, 12, 19, 7, 10, 8, 0, 16, 10, 11, 8, 27, 0, 12, 24, 26, 3, 10, 9, 2, 28], [0, 0, 10, 36, 5, 18, 14, 6, 14, 12, 1, 13, 17, 19, 3, 15, 0, 11, 26, 15, 0, 29, 3, 0, 30], [0, 13, 35, 17, 26, 15, 3, 9, 7, 0, 14, 12, 38, 7, 45, 0, 14, 44, 17, 4, 16, 9, 0, 14], [1, 13, 39, 4, 29, 15, 5, 7, 19, 1, 9, 8, 53, 2, 43, 0, 22, 35, 18, 3, 19, 24, 0, 34]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

