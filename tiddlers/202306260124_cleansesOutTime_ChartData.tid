created: 20230626012458000
creator: Drevarr
modified: 20230705163538140
modifier: drevarr
tags: ChartData
title: 202306260124_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Elon The Archmagus", "Solus Sanctus", "Mememonoko", "Newtype Khan", "Morton Saltbringer", "Primal Clone", "Eibh\u00ebar", "Venomina The Siren", "Miphest\u00f6", "Tegan Parker", "Elon The Mender", "Artakama Nahid", "Drevarr Moonwillow", "Tribal S", "Arriasa"];
const professions = ["Tempest", "Firebrand", "Vindicator", "Spellbreaker", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Tempest", "Druid", "Tempest", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[40.0152, 4.0, 59.0476, 59.6042, 73.3548, 120.7955, 63.6395, 51.6269], [0.0, 22.0741, 34.3333, 27.1089, 16.0377, 23.038, 12.1429, 18.3143, 17.9242, 0.0, 19.8571, 3.9583, 21.0645, 16.4773, 19.9884, 30.1642], [0.991, 36.0, 28.0889, 52.121, 45.3585, 31.0076], [2.982, 19.0556, 15.0, 26.0202, 18.9811, 25.0, 35.6667, 9.1143, 25.0758, 0.0, 30.5476, 29.0208, 21.3387, 47.6364, 13.9651, 18.0896], [0.0, 9.5556, 12.0556, 44.6935, 14.1509, 13.0418, 27.3095, 10.0286, 9.0303, 0.0, 15.8333, 44.0208, 13.4194, 15.5455, 47.9884, 24.209], [4.973, 54.7963, 36.2889, 14.004, 28.8868, 45.0418, 61.3095, 24.1143, 9.9242, 7.4286, 27.125, 39.4355, 0.0, 58.8953, 23.0448], [4.973, 29.1667, 35.1778, 36.0645, 35.3774, 44.1445, 27.8095, 43.0857, 23.5758, 52.4048, 20.5833, 0.0, 23.5, 35.9535, 0.0], [8.964, 16.0556, 30.1111, 31.0847, 56.9623, 33.0, 55.3571, 28.2286, 2.9697, 0.0, 39.619, 46.9167, 58.5323, 8.9545, 13.9651, 71.7463], [3.982, 4.0, 12.5222, 58.5645, 50.9434, 28.1027, 58.7619, 0.0, 19.0758, 0.0, 19.5476, 35.1875, 35.4194, 40.9545, 48.9767, 24.2985], [0.0, 92.9074, 73.9778, 109.0161, 71.3585, 47.0798, 52.5952, 89.2286, 85.5606, 0.0, 9.0476, 45.6458, 73.2258, 14.1591, 62.3023, 59.9552], [27.9459, 114.6111, 76.3222, 169.0161, 98.6415, 62.327, 97.4524, 60.6857], [11.955, 103.7222, 75.8, 127.6935, 71.3774, 96.4677, 77.6429, 5.0, 76.1818, 73.0952, 85.5833, 64.7581, 108.3636, 64.407, 58.4925], [32.0991, 91.4259, 106.8333, 141.4919, 67.8868, 98.597, 63.7143, 54.9143, 65.3788, 0.0, 45.3333, 66.8958, 66.4839, 56.7727, 123.4419, 40.9552], [56.4, 137.3226, 119.2453, 150.8099, 92.5952, 93.6, 56.9848, 0.0, 90.6667, 79.8542, 102.3548, 153.9318, 43.4302, 90.194], [13.973, 122.3333, 107.9667, 155.6532, 124.9057, 95.3688, 86.119, 37.2, 101.1515, 28.9048, 76.9792, 70.3871, 160.6136, 114.0581, 77.6418]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

