created: 20230422220129000
creator: Drevarr
modified: 20230705163526367
modifier: drevarr
tags: ChartData
title: 202304222201_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Rey Peltrow", "Tempie Magie", "Miphest\u00f6", "High Sorcer Baradun", "Tika Sumiko", "Zadie Miststep", "Mac Aaroni"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[199.6984, 0.0, 183.1421, 170.4978, 57.7665], [53.4336, 133.4255, 59.3995, 42.372, 39.9963, 12.0611, 180.4631, 32.562, 71.8704, 9.2221, 49.1501], [94.0957, 0.0, 32.9329, 859.1808, 0.0, 121.401, 80.6382, 0.0, 59.9025, 92.3099, 71.1004, 42.4267], [0.0, 233.3733, 30.69, 32.7026, 1044.552, 103.576, 0.0, 111.2264, 43.9979, 31.878, 20.0288, 34.2404, 143.1545, 0.0, 110.6291, 30.9333, 0.0, 38.089, 47.4858, 86.3397, 52.0403, 39.2083], [40.095, 228.3086, 15.8301, 70.2086, 1110.756, 106.964, 178.7485, 59.5958, 39.897, 19.845, 20.053, 170.0996, 56.4408, 96.1267, 71.6672, 34.834, 25.2361, 53.3131, 43.4962, 96.1893, 70.5892], [0.0, 605.2245, 39.6, 34.1173, 2130.2976, 224.9632, 0.0, 340.2697, 81.1287, 61.38, 182.8925, 80.7253, 549.8182, 124.9717, 371.1593, 83.6117, 72.9427, 30.0082, 74.937, 209.1142, 205.0154, 32.8172], [651.3394, 30.0069, 96.3641, 2145.9904, 198.7304, 0.0, 222.7997, 179.523, 46.827, 178.9725, 13.051, 535.4475, 147.9159, 311.9945, 87.4571, 150.696, 56.9915, 112.5499, 141.5259, 120.0766, 140.2449]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

