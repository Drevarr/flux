created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Maass X Menos", "Apyen", "Darks Na", "Daring Deathblade", "World Devourerer", "Jimbo One Eye", "Alarics Clone", "Xanvias", "Jimbo The Pleb", "Lhiapp", "Pixzil", "Caelon Cai", "Tribal S", "Thought Bound", "Philip Poundhouse", "Bella Sassy", "Apyen", "Drevarr Moonwillow", "Newtype Khan"];
const professions = ["Berserker", "Berserker", "Dragonhunter", "Scourge", "Guardian", "Scrapper", "Chronomancer", "Reaper", "Berserker", "Tempest", "Firebrand", "Reaper", "Druid", "Firebrand", "Herald", "Firebrand", "Spellbreaker", "Scrapper", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 3.5537, 4.305, 3.5076, 0.6821, 3.392, 6.0768, 0.0, 1.5093, 0.7692], [0.0, 0.0, 0.485, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3021, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.616, 2.4604, 6.2074, 5.1696, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4056, 8.3955], [0.0, 0.3898, 1.1029, 0.0, 0.5107, 0.0, 0.0438, 0.0034, 0.0, 1.9722, 0.5023, 2.6508, 0.6257, 0.8923, 0.0, 0.8131, 3.1282, 0.0, 5.1939, 0.5148, 0.0, 1.3922, 0.2703, 0.5781, 0.2165, 1.3907, 0.4752, 0.0, 0.5805, 0.0, 0.9984, 0.867, 1.9183, 1.479], [4.5584, 1.0335, 3.4932, 0.4773, 2.3061, 3.6973, 4.0896, 1.8705, 4.4892, 5.4796, 3.6738, 0.459, 5.755, 2.5665], [0.556, 2.1706, 4.5318, 4.2067, 6.5835, 2.6845, 0.1872, 0.7066, 0.0493, 8.43, 6.967, 7.5576, 5.3856, 0.2006], [18.4758, 43.8198, 6.786, 4.8906], [3.2331, 0.0, 1.0973, 0.0, 7.2535, 5.2962, 6.3261, 4.9773, 6.8609, 1.3776, 3.5687, 1.356, 5.4272, 8.3664, 0.7353, 2.5155, 12.0933, 1.4196, 0.0, 13.6112, 11.832], [9.784, 11.4027, 1.9656, 3.4749, 7.1826, 4.6587, 5.6088, 2.5308, 2.9476, 10.4813, 4.8528, 1.9672, 7.7981, 3.846, 2.8938, 8.3895, 13.3066, 16.6605], [0.944, 4.7544, 3.0904, 3.0576, 5.3705, 4.8275, 1.631, 0.5248, 1.1222, 8.182, 5.591, 10.8739, 5.1876, 3.8474, 3.5042, 9.9019, 2.2205, 14.7224, 5.883, 4.1082, 5.3835, 2.5659, 5.3933, 12.9888], [4.4419, 8.4575, 6.0547, 2.8249, 20.8436, 0.2152, 10.8902, 0.6653, 13.3211, 26.8414, 28.3466, 2.2889, 0.0, 0.549], [2.7888, 21.6711, 3.2604, 3.5343, 0.0, 4.9847, 3.1488, 1.7038, 0.0, 7.3946, 11.2896, 0.0, 15.6348, 12.4956, 4.998, 19.8534, 27.5355], [4.8121, 9.3737, 8.015, 3.2331, 0.0, 4.0075, 5.5154, 1.9699, 10.4812, 13.0146, 3.1512, 4.0491, 6.5542, 1.1845, 6.027, 2.048, 2.8664, 5.1558, 1.8576, 1.1868, 2.7864, 3.8936, 2.691, 10.557, 13.0021, 17.9655], [0.0, 2.6972, 0.8372, 0.6492, 0.4939, 1.7763, 7.2579, 2.1622, 13.0284, 10.9375, 0.0, 12.6614, 0.9643, 1.3219, 7.8319, 15.0742, 4.3524, 0.891, 4.0779, 10.5337, 1.7958, 4.2402, 2.5578, 15.7389, 8.5536, 3.2831, 8.9978, 3.6716, 5.265, 7.0125, 8.9827, 9.7875], [20.1956, 10.8355, 0.6552, 6.5241, 9.3386, 4.2453, 2.5707, 1.332, 1.1287, 8.8192, 6.6816, 5.3341, 10.2749, 6.2885, 9.9762, 28.5345, 18.7268, 26.4915], [12.1678, 5.0098, 4.2624, 20.1026, 13.94, 5.7798, 5.6034, 1.8523, 5.0307, 0.6715, 6.1387, 8.8531, 9.432, 1.09, 9.3267, 4.4567, 12.909, 41.0295, 11.7233, 13.224], [39.9728, 29.0739, 2.9094, 3.861, 18.7264, 5.9148, 1.3038, 0.5661, 0.6658, 16.9261, 10.9152, 0.0, 7.4691, 5.9237, 1.9032, 37.587, 24.5732, 28.8405], [12.37, 37.5682, 32.3177, 42.7392, 72.7138, 38.129, 16.142, 12.8659, 12.2304], [1.23, 0.0, 2.1349, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.7642, 0.0, 0.0, 0.0, 1.3482, 0.0, 2.178, 0.0, 0.0, 31.5134, 34.3872, 5.7954, 9.1179, 12.6403, 12.6166, 10.332, 0.9768, 3.3779, 24.2528, 16.7616, 0.9223, 15.1898, 14.1154, 7.0746, 8.466, 25.1822, 41.0205], [42.3322, 35.2368, 12.8807, 52.9029, 22.434, 9.4536, 21.2925, 58.6771, 49.416]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

