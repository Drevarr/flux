created: 20230906220528000
creator: Drevarr
tags: ChartData
title: 202309062205_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Solus Luxes", "Darks Na", "Mike The Archmagus", "Jmbrage Gaurdian", "Tootsie Pop Rocks", "Tegan Parker", "Stoic Rapidfire", "Drevarr Moonwillow", "Tribal S"];
const professions = ["Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[401.7647, 128.967, 359.661, 913.4179, 217.7389, 26.1228, 116.1674, 23.5816, 0.0, 354.596, 420.9737, 0.0, 362.4348, 353.1102, 185.0368, 297.4375, 479.1852, 65.74, 78.8523, 14.4946, 305.0862, 53.7143, 37.5429, 0.0, 165.4182, 126.25, 270.1935, 40.1132, 233.7361], [491.5735, 961.7088, 541.3136, 372.4328, 267.2743, 64.614, 57.8571, 350.2934, 377.0586, 0.0, 262.8485, 191.5789], [2254.7794, 2682.1868, 1262.5424], [1334.6269, 578.6195, 25.8947, 504.0286, 344.874, 468.8368, 0.0, 631.701, 0.0, 936.8174, 605.1654, 328.2059, 492.175, 2942.2963], [2487.9853, 899.033, 2039.7119, 905.0448, 428.4735, 0.2281, 154.3714, 18.936, 709.3473, 324.4384, 680.0263, 19.55, 1905.6783, 508.8898, 458.75, 424.2125, 134.7778, 193.47, 995.6477, 266.8925], [2622.2206, 2370.6923, 2123.1864, 3335.1343, 1154.6593, 660.614, 602.3429, 731.7066, 923.682, 0.0, 1056.0929, 1280.4211, 2065.4783, 244.9528, 612.2794, 874.5, 321.7778, 744.9483, 14.8571, 1046.8286, 310.9455, 427.9688, 2013.0645, 197.9623, 403.2014], [2074.791, 1062.354, 674.2, 1082.8636, 1299.0962, 1404.9778, 1849.9211, 1769.6435, 1412.8268, 1016.0882, 1468.7875, 3941.037, 0.0, 1958.7045, 394.914, 1347.069, 441.7143, 722.6857, 264.0455, 1418.4909, 240.8125, 610.7258, 449.3962, 950.8403], [3957.2941, 4048.5769, 3106.6017, 3679.791, 1753.2257, 100.4211, 1136.1429, 1120.7479, 1792.5146, 0.0, 166.25, 1659.2586, 917.9211, 0.0, 2113.5217, 1975.8819, 1074.0588, 1793.025, 5060.8148, 569.48, 3527.9205, 1411.3656, 3084.569, 950.6071, 3143.3714, 1260.5909, 676.2, 625.25, 3657.4516, 323.3396, 956.375], [4846.75, 3585.8187, 4882.9322, 5790.8209, 1755.677, 0.0, 1690.9714, 1608.7149, 2037.3724, 258.2, 2388.3758, 2267.8947, 0.0, 2205.6696, 2260.7087, 1103.8015, 1152.175, 1637.1111, 2268.6023, 73.7419, 256.1034, 57.2143, 1482.2571, 534.5, 1444.5091, 365.0469, 2208.4355, 807.6981, 862.375]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

