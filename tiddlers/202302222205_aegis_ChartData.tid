created: 20230222220539000
creator: Drevarr
modified: 20230705163519790
modifier: drevarr
tags: ChartData
title: 202302222205_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Blanco Padre Guard", "Fribble Bibble", "Ark Darkness", "Drevarr Moonwillow", "Kiloak", "Sygaldry Verdandi", "Zaylen Harker", "Kosair", "Koralia Danai", "Ravioli Fetabringer", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.1719, 22.5552, 37.9764, 0.0, 5.6438, 42.6487, 4.6464, 0.0, 53.6533, 4.4064, 139.3805, 20.0201], [12.931, 9.0132, 5.1559, 30.9359, 44.7929, 0.8874, 33.5232, 11.4816, 84.3885, 67.0752, 48.7512, 44.148], [13.666, 40.7072, 5.1437, 35.2171, 10.9824, 13.2096, 141.9503, 99.7805, 145.7741, 35.7595], [21.9265, 47.1951, 120.7336, 12.534, 34.4448, 52.1088, 110.6822, 45.337, 116.0438, 107.4082], [91.0325, 42.3292, 107.8744, 122.3448, 40.6272, 31.2576, 195.426, 120.5395, 265.0147, 34.1596], [27.993, 14.4448, 89.3138, 88.8913, 39.6492, 85.5193, 31.5648, 44.1984, 292.606, 103.7952, 233.2066, 30.8734], [30.9729, 36.1268, 42.3292, 62.4386, 48.3057, 33.6768, 8.64, 365.8019, 125.9251, 228.731, 140.8759], [25.7716, 6.7192, 30.8524, 6.923, 70.6542, 72.5417, 43.6608, 31.1808, 517.5236, 239.7082, 483.3562, 94.3929], [107.5834, 41.8396, 45.0173, 163.185, 270.4004, 96.2231, 78.2976, 23.424, 383.7456, 109.9642, 390.1694, 104.5111], [66.9845, 86.0472, 201.1918, 152.5434, 234.8947, 236.9251, 69.3504, 62.5536, 296.3369, 176.256, 304.655, 163.1445], [97.4518, 47.36, 154.1786, 146.2138, 329.6956, 165.4926, 75.8016, 44.4672, 464.2256, 333.7114, 515.1643, 90.7608]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

