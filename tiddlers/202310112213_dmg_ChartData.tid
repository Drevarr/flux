created: 20231011221312000
creator: Drevarr
tags: ChartData
title: 202310112213_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Legendery Major", "Sathra Nadilli", "Legendery Major", "Efreet White", "Venutia", "Tribal S", "Zaedy Zae", "Arriasa", "Symra Asher", "Cat Wigglebooty", "Senhora Lagertha", "Tegan Parker", "Atria Ruinheart", "Isarii Ashenfist", "Sub Train", "Mellody Moon", "Belvyn Brightblade", "Tootsie Pop Rocks", "Mirallas Decountae", "Legendary Sakis", "Liyo Morgaine", "Venomina The Sly", "Zaylen Harker", "Crusader Siolith", "Ryvalia Fazebringer", "Foxgale", "Solus Luxes", "Sanskuy", "Bella Bitty", "Victoria Raskae", "Ch\u00e2rl\u00eese", "K\u00e9ld\u00e1", "Drevarr Moonwillow", "Sygaldry Verdandi", "Jmbrage Gaurdian", "Aira Draugr", "\u00c1rk\u00e1ntor", "Rozaalyna", "Daphne Agla\u00e9", "Grayson Kin", "Bozuko", "Black Raspberry Pie", "Newtype Khan", "Luke The Ghastly", "Kalisha Lafay", "Lord Erin The Wise", "Morv\u00e4rth", "Rina Of Theros", "Efreet White", "Necrotic Windrunner", "Glorious Gluvs", "Morton Saltbringer", "Adjudicatrix Farra", "No Reserv\u00e9", "Kat Bon Z", "Sub Train", "Be\u00eb", "Jimbo The Pleb", "Mistwalker Cael", "Mike The Archmagus", "Xanvias Einzbern"];
const professions = ["Firebrand", "Tempest", "Dragonhunter", "Scourge", "Mirage", "Druid", "Druid", "Druid", "Reaper", "Scrapper", "Soulbeast", "Tempest", "Firebrand", "Willbender", "Firebrand", "Dragonhunter", "Firebrand", "Scrapper", "Daredevil", "Druid", "Herald", "Druid", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Firebrand", "Herald", "Firebrand", "Vindicator", "Soulbeast", "Chronomancer", "Scrapper", "Firebrand", "Firebrand", "Herald", "Scourge", "Reaper", "Reaper", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Reaper", "Chronomancer", "Weaver", "Reaper", "Reaper", "Reaper", "Reaper", "Berserker", "Chronomancer", "Reaper", "Vindicator", "Scrapper", "Dragonhunter", "Reaper", "Berserker", "Herald", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [51.375], [64.7937], [94.9841, 1.9079], [0.0, 48.2292, 6.8272], [0.0, 0.0, 17.6421, 0.0, 47.4839, 5.2213, 9.8325, 1.5283, 33.2958, 44.9178, 0.0], [6.8472, 0.0, 0.0, 1.3579, 20.5, 0.0, 8.6996, 0.0, 5.8302, 2.1831, 13.4521, 0.0], [8.3945, 0.0, 0.0, 1.2846, 0.0, 44.717, 6.3662, 5.726, 0.0], [11.9699], [5.6594, 24.2698, 0.0, 5.1939, 12.0632, 0.0, 24.336, 8.5916, 12.5283, 90.8028], [132.0323, 118.0791, 49.2618, 28.3396, 21.4225, 62.4932, 0.0], [20.0781, 20.127, 0.0, 15.1633, 13.7579, 0.0, 31.1613, 22.5455, 13.9476, 0.0, 56.2535, 14.2603, 6.7308], [25.9908, 7.7302, 0.0, 9.7449, 5.6105, 58.2812, 18.9355, 11.7194, 1.3403, 5.8679, 7.9014, 9.0502], [32.8646], [52.6032, 3.3158, 56.7857, 66.3579, 83.9688, 396.129, 38.83, 26.8639, 46.5094, 107.3099, 97.1872], [35.8928, 0.0, 35.2653], [34.6434, 42.0317, 10.75, 24.5816, 17.9789, 9.1875], [29.4066, 19.0952, 10.625, 2.2755, 7.9368, 99.1562, 68.0323, 45.6364, 9.3508, 21.5283, 23.0845, 14.9726, 4.2308, 1.125], [55.6719, 30.5602, 615.5283, 0.0, 177.8858, 18.1154], [36.5531, 71.6667, 10.0658, 90.5408, 65.3474, 0.0, 41.3478, 1.8691], [7.2618, 415.717, 416.4225, 253.7991, 213.7692], [41.1538, 45.4286, 4.8158, 1.8571, 15.5684, 60.6875, 197.7742, 54.8063, 7.7696, 9.0566, 88.6197, 26.9772, 95.3846, 32.5], [63.1611, 25.5397, 0.0, 14.2449, 0.0, 98.1935, 53.0909, 4.6492, 6.1324, 44.8462], [60.8622, 18.254, 0.0, 68.5102, 43.8947, 78.1875, 74.5484, 36.7628, 9.0105, 129.8679, 34.5634, 20.7534, 123.8462, 116.9375], [63.5027, 10.4603, 9.7632, 5.6531, 17.7263, 5.3438, 43.8065, 35.4111, 1.7277, 270.7547, 115.1831, 40.5753, 91.9615, 30.0938], [0.851, 35.6908, 45.4694, 222.6316, 114.7812, 654.3871, 137.6443, 38.712, 641.662, 180.8721], [79.441, 9.3492, 0.0, 19.6837, 24.9053, 178.1613, 60.8221, 28.4136, 297.283, 49.1831, 65.6119, 50.6538, 0.2188], [108.4498, 189.0794], [93.5429, 34.9683, 9.5329, 5.6122, 9.2316, 0.0, 116.5161, 29.9012, 2.2199, 80.2642, 84.0845, 92.2968, 17.8077, 17.5], [443.4466, 120.534, 567.5634, 346.6804], [2.7555, 0.0, 110.7347, 0.0, 233.9677, 145.336, 38.3141, 516.5094, 749.2113, 465.9406, 0.0, 231.0625], [2.3901, 237.9524, 121.3224, 106.3776, 125.7579, 0.0, 684.3226, 303.332, 147.9267, 205.0566, 343.6901, 206.484, 85.8846, 344.6875], [92.0621, 123.6984, 9.7434, 78.7551, 71.4842, 91.9688, 235.1613, 117.2688, 20.9791, 39.6792, 174.662, 74.2283, 6.2308, 151.8438], [108.4343, 0.0, 67.0612, 98.2632, 5.6875, 233.6129, 67.7391, 60.644, 143.5849, 0.0, 105.621], [141.9136, 12.0476, 0.0, 1.6531, 24.6526, 8.2812, 33.5138, 2.7225, 19.8302, 24.8169, 31.1187, 41.1538, 29.1875], [155.1223, 282.5238, 0.0, 57.9694, 348.8947, 163.5625], [116.7394, 56.8889, 19.3947, 180.7755, 258.4737, 0.0, 54.3548, 146.4545, 21.0785, 94.4717, 297.0986, 182.3379, 76.1154, 102.3125], [173.8496, 90.2857, 0.0, 280.2347, 84.5684, 1660.4194, 254.2016], [209.1058, 768.4444, 0.0, 296.8367, 135.6842, 72.9062], [34.9723, 72.4921, 0.0, 348.6735, 470.8105, 238.375, 325.0968, 586.1383, 32.5026, 59.1887, 1971.7183, 458.6895, 62.5312], [2427.6774, 818.4308, 178.178, 707.6604, 1307.507, 606.9406, 511.75], [120.3755, 666.0635, 46.5724, 251.3367, 447.1263, 226.9062, 1337.7419, 359.3913, 74.8639, 469.0566, 626.3521, 271.4566, 399.4615, 237.5312], [216.5371, 188.8571, 0.0, 156.6735, 163.9789, 116.625, 84.9355, 261.1107, 44.9058, 371.4151, 212.7887, 209.21, 86.6538, 458.375], [226.2581, 816.9051, 181.0314, 338.7736, 2390.493, 1228.0594, 322.9231, 199.7812], [277.067, 129.4762, 21.3158, 101.5918, 115.7158, 274.4688, 289.9355, 100.6838, 106.1361, 232.7925, 332.0141, 141.3288, 308.9615], [275.3333, 14.6974, 863.3878, 422.8105, 0.0, 1578.3871, 1025.166, 79.0733, 390.0755, 1618.3521, 622.7123, 351.8125], [89.7074, 50.0159, 0.4474, 427.9286, 913.8, 251.4062, 1001.0645, 824.8814, 282.7487, 347.5094, 968.3521, 524.0685, 104.4231, 201.875], [124.3406, 663.7619, 34.3355, 271.1633, 673.5368, 372.6875, 1135.0323, 518.9921, 191.9058, 510.8113, 1088.7324, 584.5205, 58.9231, 1060.1562], [661.4925], [473.8641, 423.4286, 1.9276, 251.0, 419.8105, 252.0625, 752.1935, 623.6166, 176.9948, 301.9057, 694.9155, 268.79, 169.8462, 92.9375], [507.097, 752.3175, 16.9145, 78.6224, 591.8316, 48.0625, 452.871, 550.7352, 162.9948, 573.9057, 1081.2254, 303.0411, 60.1538, 563.6875], [575.1354, 61.25, 390.5102, 738.0737, 497.3125, 635.4348, 319.4346, 674.6415, 549.9014, 544.8995, 1473.1538], [536.0907, 213.1587, 0.0, 707.8673, 1325.4632, 0.0, 835.6798, 327.5183, 2611.8732, 511.4703, 341.5, 483.7188], [715.4551, 1683.4921, 0.0, 303.3469, 502.6842, 25.8438, 1385.2903, 320.8103, 38.0419, 742.1887, 153.507, 474.0868, 116.8077, 302.75], [734.9801, 0.0, 322.7449, 582.4105, 382.875, 1072.4941, 195.1414, 242.4528, 1587.8169, 704.137], [1217.1058], [860.6866, 18.6825, 1.1053, 824.2653, 899.6947, 751.0625, 3012.7419, 1468.7115, 85.9843, 249.4906, 1904.5352, 698.6895, 0.0], [1036.2882, 1024.4286, 132.7434, 724.949, 1190.9895, 579.5, 1464.4839, 1873.7787, 632.6859, 348.3019, 2323.0141, 1137.2648, 195.8462, 1210.9688], [1428.0417, 0.0, 611.1633, 823.1263, 969.8438, 2581.6452, 1273.083, 394.6178, 0.0, 4041.7465, 1002.1416, 317.3846, 2920.0], [1957.5716, 770.0794, 23.1645, 1614.051, 1736.9368, 0.0, 2314.2581, 2409.6047, 299.9215, 126.9811, 369.274, 522.9615, 622.5938], [2116.1499, 1693.6508, 0.0, 1672.8265, 1562.9684, 185.5938, 4060.871, 1777.3399, 389.8325, 538.5283, 2188.4507, 1414.0548, 0.0, 418.7812]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

