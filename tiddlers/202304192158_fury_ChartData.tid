created: 20230419215809000
creator: Drevarr
modified: 20230705163525965
modifier: drevarr
tags: ChartData
title: 202304192158_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Newtype Khan", "Smol Daddy Tika", "Tootsie Pop Rocks", "Kos\u00e4ir", "My Birthday Girl", "Miphest\u00f6", "Corlyss Velaryonn", "Skye Nightroad", "Lord Erin The Wise", "Mike The Archmagus", "Daddys Lil Orchid", "Etchery Howls", "Tribal S", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Berserker", "Spellbreaker", "Berserker", "Scrapper", "Renegade", "Scrapper", "Tempest", "Vindicator", "Scrapper", "Weaver", "Weaver", "Vindicator", "Druid", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 45.4766, 0.0, 51.1306, 0.0, 60.8462, 65.4797, 0.0, 0.0, 0.0, 120.4584, 63.7339, 87.7632, 92.2655, 0.0, 79.6897, 57.7296, 0.0, 16.1868, 18.4714], [57.0166, 541.1894, 0.0, 31.3997, 31.803, 32.5683, 33.3082, 0.0, 0.0, 0.0, 0.0, 0.0, 33.5843, 11.8944, 64.6673, 19.6196, 31.8872, 17.6746, 0.0, 0.0, 0.0], [0.0, 195.8458, 0.0, 76.1654, 68.6892, 64.5516, 130.0499, 0.0, 0.0, 77.1887, 0.0, 40.9584, 142.9242, 0.0, 0.0, 107.8, 84.4642, 0.0, 0.0, 68.4057, 15.3701], [32.0239, 74.5747, 34.3478, 172.0618, 65.17, 72.84, 104.3582, 0.0, 0.0, 69.5364, 0.0, 70.4688, 34.6338, 72.7776, 128.8906, 42.042, 42.0616, 0.6566, 0.0, 27.7413, 56.0275], [377.127, 475.0746, 284.8821], [0.0, 41.6279, 284.8824, 60.6326, 87.6221, 76.1186, 101.2154, 118.9093, 32.0016, 0.0, 87.3126, 11.9841, 19.9704, 125.4641, 4.032, 40.1026, 58.9666, 24.3275, 27.8525, 0.0, 28.9257, 22.2883], [12.0329, 154.5509, 96.9696, 113.7178, 135.8143, 114.6718, 53.8275, 0.0, 0.0, 79.8504, 0.0, 173.1692, 48.4512, 101.2923, 133.672, 39.7312, 44.8157, 48.1937, 4.1059, 35.784], [9.2347, 84.3955, 348.5789, 87.8492, 65.0392, 45.813, 137.4653, 18.7728, 76.856, 40.9981, 126.4368, 90.1625, 11.1552, 33.0735, 236.4054, 73.1531, 107.9626, 0.0, 66.3527, 7.7702], [16.012, 197.7624, 25.5034, 68.1034, 0.0, 31.3982, 12.448, 0.0, 129.5668, 0.0, 106.9752, 121.934, 120.288, 274.2069, 162.3468, 82.759, 146.759, 60.4619, 110.9388, 83.4278], [16.0439, 306.8366, 74.0592, 264.5635, 107.9867, 125.0078, 63.7176, 9.4022, 18.4627, 87.6929, 27.9819, 160.272, 129.6622, 42.1344, 162.852, 149.1952, 56.7832, 82.5725, 23.8892, 36.3742], [27.0292, 32.3595, 300.564, 96.2947, 310.6022, 66.1475, 253.8185, 103.0509, 22.0896, 13.5143, 124.4811, 33.8019, 159.0, 179.657, 149.9232, 65.1112, 41.503, 99.8679, 127.9354, 28.3521, 31.7946, 31.8648], [14.1103, 28.2526, 328.7909, 80.6659, 404.1648, 134.5109, 182.7337, 110.0991, 33.6442, 12.0027, 116.496, 59.7769, 179.2248, 80.9088, 141.7648, 199.6456, 119.705, 85.199, 34.3316, 25.2409, 50.7792], [24.6775, 23.4906, 445.7059, 86.4202, 553.9498, 205.7417, 39.199, 152.7291, 38.7418, 46.0727, 115.0226, 71.503, 263.94, 152.1789, 113.0976, 193.6318, 261.415, 104.7561, 104.7888, 97.7109, 74.4066, 160.1419], [54.5717, 240.6254, 104.2512, 596.3818, 267.1318, 322.0755, 260.6682, 55.1674, 9.3024, 191.8786, 37.3283, 285.9456, 296.9159, 119.616, 226.0395, 289.0118, 112.0316, 108.7834, 13.4467, 25.3198, 167.1965], [109.0795, 867.541, 196.8874, 1162.2125, 353.7428, 380.1915, 286.4736, 183.9101, 23.6436, 253.525, 182.0258, 597.84, 422.5709, 297.696, 338.0603, 213.6596, 107.4844, 259.8653, 76.2754, 139.6013, 217.4645], [59.0209, 126.7374, 972.9562, 229.3526, 1127.8426, 401.5775, 530.2594, 324.6701, 50.6928, 1.447, 301.1501, 88.0169, 547.596, 572.2692, 256.9056, 508.4593, 539.3234, 221.2213, 316.6646, 58.1339, 130.4946, 201.0379]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

