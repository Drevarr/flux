created: 20230508221143000
creator: Drevarr
modified: 20230705163529221
modifier: drevarr
tags: ChartData
title: 202305082211_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Corinna Barimen", "Miphest\u00f6", "No Reserv\u00e9", "Lord Erin The Wise", "Arriasa", "Fribble Bibble", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Tempest", "Guardian", "Tempest", "Herald", "Weaver", "Druid", "Scrapper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.6788, 25.2869, 0.0, 83.6027, 273.763, 46.5275, 0.0, 41.9921, 335.1744, 14.8764, 15.987, 39.8664, 32.8697, 30.9217, 53.613, 28.16], [39.8565, 79.7026, 0.0, 0.0, 181.9767, 0.0, 41.8413, 698.7878, 28.755], [0.0, 43.8651, 0.0, 0.0, 293.706, 51.2511, 0.0, 82.1739, 553.0378, 30.4096, 14.4514, 110.5272, 93.492, 0.0, 126.6619, 46.62, 123.7984], [44.6561, 127.8682, 12.6618, 145.7231, 49.8393, 73.9263, 1113.1853, 55.0727, 135.781, 121.8431, 80.556, 0.0, 117.311, 164.808, 76.1728], [37.1324, 70.0695, 24.2889, 323.7651, 523.5944, 157.1778, 39.4065, 49.4351, 573.3514, 67.2812, 76.0435, 92.5007, 100.254, 20.1243, 105.4099, 92.295, 59.3824], [22.474, 34.5187, 17.0574, 68.1877, 516.8035, 1333.6428, 331.4786, 22.8123, 124.5683, 2205.0413, 58.6503, 96.8318, 159.2118, 184.5144, 334.6127, 178.857, 131.2256], [55.2931, 166.5727, 44.945, 48.1922, 291.6867, 1326.0282, 433.036, 34.0389, 94.1429, 2643.3072, 80.6525, 142.8134, 120.0667, 206.5056, 46.576, 438.7475, 187.236, 115.2448], [53.8987, 208.0295, 14.0903, 318.0875, 1054.0782, 385.4458, 41.58, 120.8469, 2873.3587, 74.5482, 69.0883, 211.3833, 166.8156, 37.5654, 464.7812, 222.768, 190.9952], [114.6848, 708.8484, 2197.7186, 469.4078, 60.3477, 253.5622, 3759.5395, 121.6608, 165.8042, 286.7128, 342.6276, 14.5946, 521.099, 329.112, 240.416]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

