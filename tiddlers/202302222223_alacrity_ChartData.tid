created: 20230222222328000
creator: Drevarr
modified: 20230705163519920
modifier: drevarr
tags: ChartData
title: 202302222223_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Drevarr Moonwillow", "Primal Clone", "Zadie Miststep", "Venomina The Siren", "Eibh\u00ebar", "Mike The Archmagus", "Mac Aaroni", "Black Raspberry Pie"];
const professions = ["Chronomancer", "Scrapper", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 37.5074, 646.7886, 0.0, 35.8363, 0.0, 0.0, 0.0, 55.8861, 49.4463, 71.7093, 8.477, 54.623], [859.9138, 2.2122, 21.2084, 5.4346, 0.0, 37.8476, 21.652, 106.0072, 39.3371, 52.3014, 64.17], [7.3258, 30.2287, 1994.1104, 64.9942, 0.0, 31.106, 63.8859, 97.7665, 105.3267, 341.3219, 101.9234, 101.404, 128.9503], [68.5146, 46.6428, 1306.55, 86.3322, 129.7875, 234.0462, 80.9258, 99.4374, 71.2084, 403.7523, 145.2825, 401.4574, 119.7084], [2805.8394, 46.8485, 41.2672, 139.3694, 126.4396, 144.7458, 119.6456, 404.2859, 199.5305, 512.618, 129.6914], [43.9548, 48.7224, 3795.4816, 39.3157, 39.3247, 62.1406, 62.2207, 100.8363, 100.0778, 334.9188, 188.936, 222.481, 136.8843], [81.7743, 55.6, 5543.1081, 120.4674, 61.4449, 163.8967, 200.0388, 111.4445, 81.2046, 439.5031, 168.5317, 464.7949, 160.5122], [69.2838, 52.0498, 5915.6138, 89.1045, 96.6469, 197.291, 148.1419, 171.5189, 48.0512, 545.1545, 221.0139, 412.9733, 201.9698], [51.1891, 39.1265, 6584.6416, 102.1257, 68.3426, 229.3266, 151.4722, 163.553, 158.1252, 671.6162, 192.0751, 518.8557, 163.4329]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

