created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Daphne Agla\u00e9", "Tootsie Pop Rocks", "Miphest\u00f6", "Lord Erin The Wise", "Gavann", "Elonith Requiem", "Ateriuz", "Body Ody Ody", "Xanvias Einzbern"];
const professions = ["Reaper", "Scrapper", "Tempest", "Weaver", "Firebrand", "Scourge", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0706, 83.1346, 36.5, 4.7619, 8.2877, 1.3636, 29.5952, 35.7222, 30.74, 5.2035, 33.5233, 0.0], [43.8706, 1.3269, 33.6765, 1.9206, 11.3014, 50.2273, 10.2619, 35.125, 57.28, 0.9292, 15.3605, 0.0], [14.1059, 7.5962, 41.9706, 15.3968, 0.2877, 40.0795, 8.7024, 48.8194, 76.9, 23.1681, 2.4651, 20.8681], [26.9294, 46.4231, 65.8235, 3.3968, 20.7671, 34.5227, 87.6548, 83.8056, 87.7, 40.6283, 31.3837, 36.5934], [124.3529, 433.7692, 131.4265, 52.9206, 0.0, 188.1023, 17.9881, 10.0833, 26.82, 22.4071, 64.907, 4.2088], [78.3176, 224.1538, 276.6905, 13.6667, 350.8, 59.6372, 131.7209, 34.8791], [87.0706, 30.3654, 17.7353, 274.3016, 75.274, 27.2045, 43.0357, 224.9167, 104.42, 107.115, 191.9302, 0.0], [15.2941, 155.75, 78.6765, 0.0, 0.0, 34.0682, 175.5238, 317.4583, 456.22, 128.7434, 174.8605, 0.0], [219.5529, 263.6346, 5.0147, 137.0476, 242.4521, 165.9886, 137.2143, 192.2639, 370.52, 171.5133, 182.1628, 72.3187]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

