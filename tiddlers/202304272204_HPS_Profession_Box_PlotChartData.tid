created: 20230427220456000
creator: Drevarr
modified: 20230705163527015
modifier: drevarr
tags: ChartData
title: 202304272204_HPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Bladesworn_Dps', 'Catalyst_Condi', 'Catalyst_Dps', 'Chronomancer_Dps', 'Chronomancer_Support', 'Daredevil_Dps', 'Dragonhunter_Dps', 'Firebrand_Dps', 'Firebrand_Support', 'Guardian_Cele', 'Guardian_Support', 'Herald_Dps', 'Reaper_Dps', 'Renegade_Cele', 'Scourge_Cele', 'Scourge_Dps', 'Scrapper_Cele', 'Scrapper_Dps', 'Scrapper_Support', 'Spellbreaker_Dps', 'Spellbreaker_Support', 'Tempest_Dps', 'Tempest_Support', 'Vindicator_Dps', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'HPS by Profession across all fights', left: 'center'},
    {text: 'HPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[117.1171, 324.0733, 19.2968, 152.3503, 16.7713, 5.5488, 196.0905, 71.2003, 122.1714, 18.3187], [7.9811], [51.4575], [11.3869], [2.4539], [6.0291, 23.2123, 35.5228, 0.955, 144.6004, 2.1165, 5.8831, 3.8126, 3.9506, 14.6432, 24.7672, 65.6616, 3.7714, 21.805, 4.8707, 1.8341, 0.0358, 5.102, 18.9151, 9.981, 5.5597, 42.8395, 68.8893, 50.326, 133.063, 17.3504, 34.0668, 9.8103, 23.0078, 3.3524, 7.8467], [7.0008], [6.7397, 7.6964, 3.6584, 10.5011], [9.9387, 52.8256], [398.454, 37.1556, 139.0025, 61.6383, 143.6895, 34.6723, 17.4232, 4.4316, 31.7178, 1204.4149, 171.919, 67.5889, 145.5992, 219.9199, 63.0445, 17.4633, 24.0954, 15.0639, 43.5694, 4.5476, 15.1631, 0.1769, 252.8611, 16.3112, 4.3088, 5.1165, 505.0242, 53.4124, 68.2059, 50.7501, 168.3247, 10.2058, 458.0375, 19.2766, 44.0947, 22.9782, 152.9894, 135.7477, 118.4843, 14.0705, 101.7296, 407.2204, 82.8707, 66.1166, 80.0548, 170.8729, 139.4475, 22.3506, 36.036, 4.2163, 431.2859, 65.2168, 4.2477, 26.4209, 59.723, 68.7849, 43.4967, 59.5531, 24.1837, 221.3579, 22.738, 27.2426, 39.669, 13.3763, 17.9825, 42.5367, 4.636, 438.1741, 47.2184, 24.5522, 50.7164, 122.5806, 165.4203, 85.3224, 109.3442, 117.0232, 42.8675, 682.7077, 95.7676, 29.7134, 31.9041, 171.6895, 111.5448, 211.7859, 110.2561, 208.7667, 2.3196, 167.5962, 9.4556, 22.0914, 33.6608, 23.1483, 9.5028, 11.8714, 12.8623, 17.8448, 206.8325, 73.2832, 36.0381, 93.013, 27.8752, 30.8798, 40.9445, 14.5802, 41.7086, 7.8936, 166.5316, 17.0785, 20.1353, 73.6903, 25.1952, 5.9467, 50.6442, 35.6732, 35.1411, 15.2701, 871.011, 133.3644, 43.8714, 0.35, 96.7855, 22.7233, 201.7385, 42.0337, 57.4062], [23.9005, 12.5758, 63.3496, 1.0433], [1.2386], [0.1793, 1.2909, 2.92], [50.7941, 32.2998, 104.3467, 134.232, 7.8121, 3.9768, 3.4224, 0.3364, 46.1187, 1.7796, 49.5285, 2.5689, 41.8864, 5.5781, 115.7238, 88.9951, 8.7801], [3.0197], [21.8083], [1.8645, 21.6828], [57.8283], [32.4968, 39.4713, 12.5979, 56.4226, 12.5768, 149.134, 11.4003, 31.122, 14.7016, 6.3999, 104.749, 3.1843, 26.5018, 93.0778, 3.245, 39.8513, 20.2876, 9.481, 78.7778, 8.7384, 17.498, 33.5762, 2.2222, 1.6588, 324.7769], [1831.2387, 291.3993, 3975.2951, 871.1443, 163.6918, 220.9925, 1024.2683, 2195.7073, 170.1354, 2047.3418, 128.1063, 2176.5149, 281.1953, 2903.2651, 88.9191, 26.9023, 723.8044, 17.1222, 14.0096, 2425.3849, 165.5521, 12.0993, 3737.3847, 798.634, 543.5929, 101.0767, 993.8605, 27.3455, 4.1422, 572.0123, 3533.4578, 48.5094], [9.287, 36.5945, 4.7466, 2.8308, 1.5334, 5.2055, 2.2725, 12.0953, 29.2362, 14.9797, 21.2043], [25.5373], [26.6659, 39.7999, 12.1597, 9.1675, 37.583, 38.5977, 4.5554], [384.7029, 1304.2652, 1062.5142, 286.79, 6.1774, 49.6384, 56.6962, 4.0885, 3.8696, 894.5379, 3207.7278, 1611.5634, 509.7804, 138.7904, 96.4014, 489.9537, 698.964, 91.6726, 43.6386, 22.3295, 33.4899, 206.1475, 13.152, 23.7342, 51.2886, 214.6363, 15.6939, 8.2172, 134.2131, 498.5557, 365.4173, 38.0777, 13.6794, 0.3662, 539.1558, 1908.0974, 2733.9398, 269.5815, 98.4083, 1491.4928, 1295.2745, 1199.2272, 184.6697, 177.6885, 1219.5276, 1282.9901, 1358.4847, 257.9296, 187.6119, 2567.7796, 1102.9932, 1479.8516, 116.8975, 57.7691, 830.9944, 284.1473, 680.2043, 25.522, 17.4388, 1586.7941, 1649.4503, 1279.5869, 220.8933, 73.6322, 3819.6948, 1799.4256, 1830.2804, 59.4267, 82.7335, 498.5609, 367.3433, 7.2663, 23.6012, 707.0322, 679.2525, 20.5981, 1.5023, 1019.4467, 519.678, 20.8134, 18.9112, 2828.0147], [4.2952, 10.0627, 1.0782], [1.0813, 19.9725]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'HPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
