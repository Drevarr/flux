created: 20230527000807000
creator: Drevarr
modified: 20230705163531648
modifier: drevarr
tags: ChartData
title: 202305270008_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Primal Clone", "Miphest\u00f6", "Black Raspberry Pie", "Eibh\u00ebar", "Zaedy Sagemist", "Venomina The Siren", "Arriasa", "Artakama Nahid", "Tegan Parker", "Elonith Primal", "Drevarr Moonwillow", "Johosh Of The North"];
const professions = ["Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Vindicator", "Tempest", "Druid", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2526, 0.2068, 0.0, 0.0, 0.0, 0.2806, 0.027, 0.4079, 0.2061, 0.0, 0.0289, 0.1596, 0.0, 0.25, 0.0, 0.2473, 0.1812, 0.0, 0.1244, 0.0, 0.0, 0.2072, 0.1796, 0.0, 0.2336, 0.1098, 0.1358], [0.4323, 0.2147, 0.0, 0.6055, 0.1216, 0.4342, 0.0534, 0.0, 0.0405, 0.4362, 0.0, 0.0391, 0.0, 0.3978, 0.0652, 0.1579, 0.0, 0.0, 0.0811, 0.0211], [0.349, 0.1754, 0.0323, 0.0, 0.125, 0.3249, 0.027, 0.5855, 0.3511, 0.0, 0.0751, 0.4362, 0.1979, 0.1992, 0.3871, 0.1812, 0.0, 0.1627, 0.0, 0.0, 0.1892, 0.2077, 0.05, 0.1028, 0.2073, 0.3333], [0.3802, 0.1963, 0.0, 0.0, 0.0, 0.5105, 0.027, 0.5526, 0.4504, 0.0, 0.0347, 0.3723, 0.0208, 0.1211, 0.3333, 0.0145, 0.1296, 0.1053, 0.0303, 0.0, 0.1982, 0.25, 0.075, 0.2991, 0.0671, 0.2099], [0.6667, 0.3901, 0.0, 0.0526, 0.8397, 0.4865, 0.9671, 0.6336, 0.0, 0.1387, 0.8085, 0.1042, 0.0312], [0.9167, 0.5183, 0.0081, 0.0, 0.8523, 0.0, 1.5395, 0.7252, 0.0, 0.1503, 1.0851, 0.125, 0.4023, 0.6989, 0.1957, 0.0556, 0.0622, 0.0851, 0.3694, 0.5845, 0.1, 0.486, 0.1159, 0.3704], [1.4245, 0.8377, 0.2661, 0.0263, 1.5084, 0.1118, 1.4122, 0.0, 0.1445, 2.0532, 0.4688], [1.3672, 0.9084, 0.1129, 0.0, 0.125, 1.2827, 0.9189, 1.3289, 0.3053, 0.0, 0.1561, 1.5851, 0.3125, 0.9297, 1.3978, 0.6014, 0.1296, 0.5694, 0.2121, 1.1622, 1.2254, 0.575, 0.4766], [1.3776, 1.0419, 0.0403, 0.0, 0.0, 1.6414, 0.9054, 2.0329, 1.1908, 0.0, 0.2254, 1.8191, 0.2604, 0.7773, 0.0, 1.0108, 0.2391, 0.0556, 0.4737, 0.4545, 1.018, 1.3486, 0.0, 0.9533, 0.3963, 0.4198], [1.6719, 1.1597, 0.2097, 0.0, 2.2152, 1.0946, 2.4671, 1.229, 0.0, 0.3121, 1.0213, 0.7083, 1.25, 0.0, 1.3226, 0.5, 0.0, 0.8947, 0.697, 0.1702, 1.4234, 1.5352, 0.225, 0.8598, 0.5244, 1.0247], [1.8099, 1.3168, 0.1452, 0.0, 0.4062, 1.9198, 1.4054, 1.9145, 1.2443, 0.0, 0.1965, 2.4255, 0.2708, 1.4805, 0.0323, 1.6882, 0.471, 0.6481, 0.9091, 1.0303, 0.0213, 1.6036, 1.5563, 0.725, 0.9065, 0.5183, 0.9383], [1.888, 1.1675, 0.1371, 0.0, 0.375, 2.4156, 1.1622, 2.3158, 1.5191, 0.2832, 2.2128, 0.4271, 1.3711, 1.4516, 0.5362, 0.0, 0.7656, 0.7576, 0.383, 1.8378, 1.6408, 0.525, 0.8505, 0.5122, 0.9383]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

