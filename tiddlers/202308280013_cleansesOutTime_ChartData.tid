created: 20230828001355000
creator: Drevarr
tags: ChartData
title: 202308280013_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Trodek", "Jade Quufu", "Gamora Titus", "Bee Nemesis", "Unbreakable Nemesis", "Flick Embermage", "P Ain", "Chocolate Teapot", "Mom Tapper", "Reina Armitage", "Ayrion", "Heals For Daddy", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Firebrand", "Dragonhunter", "Spellbreaker", "Firebrand", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker", "Druid", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 18.0533, 1.0, 5.9483, 18.1522, 0.98, 18.6], [0.0, 9.0, 6.0133, 0.0, 0.0, 0.0, 0.0, 15.0333, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0, 2.9756, 0.0, 0.9836, 0.0, 17.0836, 0.0, 0.0, 10.931, 7.0217, 0.0, 6.0111, 0.0], [13.9512, 14.1724, 28.2951, 6.0217, 0.0, 24.0556, 0.0, 0.0, 0.0], [5.0, 8.1951, 5.0345, 17.2295, 2.0, 20.0145, 4.0067, 1.0, 14.7069, 2.0, 0.0, 24.1389], [95.7833, 6.5, 10.2667], [0.0, 10.1316, 20.561, 0.0, 24.8852, 0.0, 33.2291, 12.4667, 4.0, 18.7069, 18.1522, 0.0, 57.1333, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 11.2895, 9.9634, 0.0, 0.0, 0.0, 38.96, 40.6667, 10.0159, 13.8621, 19.5217, 0.0, 36.8778, 0.0, 0.9667], [3.005, 46.0618, 28.7067, 5.0, 60.6207, 32.2391, 0.0, 35.1944, 0.0, 7.98, 0.9667], [0.0, 0.0, 0.0, 2.0, 62.9737, 69.7195, 56.2414, 43.2459, 0.0, 18.04, 38.2533, 5.0, 57.7241, 30.6304, 108.2444, 4.98, 20.4333], [7.0667, 13.0556, 20.3736, 13.5102, 16.0903, 51.6316, 49.7317, 49.7586, 40.0164, 4.005, 85.2509, 52.2667, 18.0794, 71.1207, 80.6087], [112.9418, 75.0467, 16.2857, 86.2069, 91.2609, 0.0, 155.0889, 0.0], [0.0, 16.1667, 2.0, 0.0, 0.0, 19.0263, 22.4634, 12.8276, 22.6557, 13.2772, 112.6691, 77.6667, 16.3968, 92.0517, 35.9565, 0.0, 110.55, 22.24, 44.8333]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

