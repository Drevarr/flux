created: 20230517220640000
creator: Drevarr
modified: 20230705163530528
modifier: drevarr
tags: ChartData
title: 202305172206_magneticOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Venomina The Siren", "Artakama Nahid", "Miphest\u00f6", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Magnetic Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 25.1605, 13.3442, 0.0, 0.0, 0.0, 0.0, 48.9326, 19.9064, 0.0, 19.9296, 35.2768, 56.2308, 59.6141, 16.0704, 0.0, 16.07, 18.0359, 38.022, 19.23, 20.0312, 19.9572, 0.0, 0.0, 28.0224, 0.0, 58.0665, 17.6942, 16.7508, 0.0, 16.632], [20.0587, 15.8825, 60.2894, 13.5072, 0.0, 0.0, 0.0, 30.1345, 3.9809, 0.0, 19.3882, 19.872, 62.9424, 54.88, 0.0, 39.7824, 79.9052, 55.9488, 40.055, 37.3637, 0.0, 18.2448, 20.092, 98.6733, 20.0351, 58.9994, 34.6969, 96.2252, 19.8587, 0.0, 61.8912, 0.0, 43.9897, 68.2757, 36.3132, 0.0, 23.8464], [0.0, 19.8995, 60.1114, 86.639, 20.0678, 0.0, 16.5637, 0.0, 0.0, 19.8634, 19.8288, 40.212, 52.1136, 37.2832, 20.1042, 18.9312, 97.9602, 53.6364, 71.0918, 31.739, 16.1935, 0.0, 19.4292, 20.092, 86.7192, 18.8062, 59.6541, 38.8462, 39.9144, 19.9254, 0.0, 56.952, 19.8858, 19.9111, 20.0102, 19.9188, 4.0168, 45.2304], [0.0, 0.0, 60.1114, 59.8176, 20.0678, 3.7638, 60.4293, 7.9919, 19.8528, 0.0, 59.7802, 40.248, 29.2378, 33.214, 40.2408, 17.28, 91.1086, 90.0144, 88.4256, 32.4533, 48.3449, 0.0, 0.0, 0.0, 109.4738, 31.9147, 0.0, 102.2307, 19.9572, 39.8507, 58.968, 0.0, 62.9026, 0.0], [0.0, 16.7881, 40.1138, 119.6352, 20.124, 20.0389, 40.2757, 6.4766, 19.9562, 19.8634, 59.5598, 58.752, 51.3014, 59.6458, 20.0394, 39.8208, 113.9783, 73.7712, 124.6157, 20.088, 16.0864, 19.9141, 15.435, 20.092, 100.6656, 20.0351, 60.145, 62.2398, 69.8088, 33.9198, 16.056, 131.3424, 39.7552, 116.8738, 80.2262, 78.4872, 36.0714, 59.7456]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

