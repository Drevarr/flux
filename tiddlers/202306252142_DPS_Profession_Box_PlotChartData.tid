created: 20230625214256000
creator: Drevarr
modified: 20230705163536009
modifier: drevarr
tags: ChartData
title: 202306252142_DPS_Profession_Box_PlotChartData
type: text/vnd.tiddlywiki

const professions = ['Berserker_Dps', 'Chronomancer_Dps', 'Chronomancer_Support', 'Dragonhunter_Cele', 'Dragonhunter_Dps', 'Druid_Dps', 'Druid_Support', 'Firebrand_Cele', 'Firebrand_Dps', 'Firebrand_Support', 'Guardian_Dps', 'Guardian_Support', 'Herald_Cele', 'Herald_Dps', 'Reaper_Cele', 'Reaper_Dps', 'Scourge_Cele', 'Scourge_Condi', 'Scourge_Dps', 'Scrapper_Cele', 'Scrapper_Dps', 'Spellbreaker_Cele', 'Spellbreaker_Dps', 'Spellbreaker_Support', 'Tempest_Cele', 'Tempest_Support', 'Vindicator_Cele', 'Vindicator_Dps', 'Vindicator_Support', 'Weaver_Dps']

ProfessionColor = {"Warrior":"#FFD166", "Berserker":"#B39247", "Spellbreaker":"#665429", "Bladesworm":"#19150A", "Guardian":"#72C1D9", "Dragonhunter":"#508798", "Firebrand":"#2E4D57", "Willbender":"#0B1316", "Revenant":"#D16E5A", "Herald":"#924D3F", "Renegade":"#542C24", "Vindicator":"#2A1612", "Engineer":"#D09C59", "Scrapper":"#926D3E", "Holosmith":"#533E24", "Mechanist":"#2A1F12", "Ranger":"#8CDC82", "Druid":"#629A5B", "Soulbeast":"#385834", "Untamed":"#1C2C1A", "Thief":"#C08F95", "Daredevil":"#866468", "Deadeye":"#4D393C", "Specter":"#261D1E", "Elementalist":"#F68A87", "Tempest":"#AC615F", "Weaver":"#623736", "Catalyst":"#311C1B", "Mesmer":"#B679D5", "Chronomancer":"#7F5595", "Mirage":"#493055", "Virtuoso":"#24182B", "Necromancer":"#52A76F", "Reaper":"#39754E", "Scourge":"#21432C", "Harbinger":"#08110B"}
option = {
  title: [
    {text: 'DPS by Profession across all fights', left: 'center'},
    {text: 'DPS across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: [[1975.2378, 167.9578, 119.4411, 696.4023, 210.3631, 41.9815, 221.8523, 1932.3191, 1938.3764, 807.8802, 708.9687, 2248.8914, 1236.9563, 512.7383, 397.2283, 2300.376, 3591.1723, 2322.5697, 2135.5434, 1235.1357, 2117.4074, 8298.5486, 4423.9035, 1658.9335, 2929.6499, 1731.1645], [109.4708, 17.7465, 18.8811], [4.2243, 0.1448], [310.9389, 468.6171, 189.8034, 147.0576, 485.5975, 305.3966, 1024.2164, 49.6656, 141.7573, 103.5499, 420.5782, 106.7832, 1868.4251, 49.0787, 592.9488, 289.7372, 237.1045, 110.1387], [206.2568, 520.1249, 1418.6753, 425.1798, 529.1818, 3325.3761, 2165.1316, 1124.7836, 1314.2356, 363.1851, 748.3483, 753.054, 446.1792, 208.2705, 814.1842, 96.0657, 339.4945], [25.3209, 159.5188], [207.6699, 248.0164, 31.3024, 37.8525, 51.4274, 0.5358, 3.5965, 116.3698, 7.5275, 50.926, 1.5533, 35.9562, 81.8909, 68.6119, 139.943, 36.8495, 406.8488, 90.5389, 123.8566, 107.9199, 27.4026], [156.0308, 114.4229, 78.325, 43.8072, 4.834, 1.6273, 7.0835, 26.2643, 22.2484, 297.2247, 52.835, 2.7395, 14.4841], [36.5805, 83.8208, 241.698, 223.2191, 17.4063, 161.2746, 1149.6749, 143.5192], [95.2346, 66.0605, 25.3312, 173.7841, 110.1649, 1.4068, 338.1478, 5.4699, 12.5715, 26.8396, 418.9057, 260.1852, 497.0097, 176.5748, 759.7335, 4.2939, 9.0869, 54.8312, 526.3615, 127.985, 111.6579, 302.8054, 149.6716, 579.2644, 34.1992, 10.0898, 63.039, 119.7881, 119.275, 61.448, 59.0705, 515.8569, 54.2199, 222.4047, 625.7503, 74.024, 229.1558, 357.6532, 34.6695, 115.9101, 111.1099, 664.9369, 270.7641, 214.7355, 258.6897, 282.4058, 281.6619, 74.3682, 134.8465, 292.4182, 484.4506, 47.8285, 623.3504, 27.131, 29.9528, 941.4073], [1248.1148, 1266.2828, 1292.8112], [2256.0527, 604.2784], [127.223, 525.1586], [309.1015, 32.7489], [274.0624, 1489.7446, 365.3555, 1276.6246, 185.7086, 700.2629, 1239.8498, 1375.654, 1065.0343, 679.7168, 1060.407, 1441.2552, 1405.7968, 581.8988], [1432.2093, 826.0299, 552.72, 69.0852, 436.4015, 1250.6952, 422.7503, 1570.3624, 548.4835, 745.3229, 427.6432, 787.8616, 2298.0758, 2004.9659, 1574.4531, 2748.3445, 2197.9116, 1119.5338, 980.0092, 223.7781], [720.7783, 251.2651, 1001.7979, 653.2495, 599.5027, 473.5784, 983.4135, 2.0891, 236.906], [398.6177], [1847.1811, 1163.294, 1602.7086, 644.2968, 107.4211, 902.2785, 263.4071, 3253.2331, 610.5233, 28.1426, 60.6407, 1211.1473, 508.0257, 644.2319, 836.7521, 1098.7455, 121.909, 740.9176, 671.4534, 468.0635, 471.1092, 787.5018, 528.1903, 1602.4217, 1088.9134, 278.9619, 1331.9466, 635.8696, 1127.9107, 251.8447, 370.1921], [1541.7549, 363.4015, 1400.1784, 409.8029, 364.7583, 548.086, 894.7844, 182.3664, 1191.2258], [364.3345, 1480.092, 1438.2959, 760.351, 213.8346, 1168.4672, 258.5552, 1430.2964, 1006.771, 1340.3098, 2618.0978, 800.0496, 2145.335, 1836.1669, 1157.3388], [357.5494, 38.4721, 308.5333, 414.224, 428.876, 436.9419, 483.6617, 185.0617], [478.5658, 137.694, 179.5924, 60.6066, 43.687, 237.5951, 198.1338, 76.551, 378.2807, 594.9326, 614.6808, 7.1451, 774.5206, 227.867, 282.2927, 24.6604, 36.5385, 1103.2011], [11.8423], [95.079, 253.212, 59.6616, 62.4341, 86.7589, 163.6696], [33.6464, 116.5216], [180.3649], [1354.6448, 235.8771, 29.3185, 309.393, 341.399, 1204.0416, 1056.6174, 481.8469, 167.741, 342.1302, 309.7962, 79.5121, 410.6954, 346.9606], [26.9377, 6.1804, 5.4699, 3.9894, 12.694, 64.4786, 17.9755, 3.2629, 26.4225, 54.4806, 47.2536, 56.469], [11.1039, 5028.2267, 4523.0857, 2108.274, 4852.6223]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return professions[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item', axisPointer: {type: 'shadow'}},
  grid: {left: '10%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'DPS', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      itemStyle: {
        borderColor: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
      itemStyle: {
        color: function (seriesIndex) {  
          return ProfessionColor[seriesIndex.name.split('_', 1)];
                }
      },
    }
  ]
};		
