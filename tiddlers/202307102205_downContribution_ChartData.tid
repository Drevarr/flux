created: 20230710220511000
creator: Drevarr
tags: ChartData
title: 202307102205_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Striptease Hercules", "Primal Clone", "Daphne Agla\u00e9", "Eibh\u00ebar", "Glorious Gluvs", "Konztantin\u00eb", "Mister Jekyll", "Charr Surethang", "Rozaalyna", "Legacy Of Mathus", "Kary\u00edna", "Irin The Undeath", "No Reserv\u00e9", "Ateriuz", "Il Kurai Il", "Melli Dragonswrath", "Lord Erin The Wise", "Be\u00eb", "Inedible Plant", "Sister Elonith", "Cyclotechnist Farra", "Mistwalker Cael", "Xanvias Einzbern", "Johosh The Mighty"];
const professions = ["Berserker", "Chronomancer", "Reaper", "Chronomancer", "Berserker", "Herald", "Reaper", "Berserker", "Scourge", "Berserker", "Vindicator", "Scourge", "Vindicator", "Berserker", "Scourge", "Berserker", "Weaver", "Scourge", "Vindicator", "Berserker", "Scrapper", "Vindicator", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[127.7, 220.9672, 855.8315, 0.0, 53.1351], [53.7757, 0.0, 0.0, 0.0, 76.1125, 0.0, 54.8113, 146.2111, 0.0, 22.4242, 0.1964, 0.0, 0.0, 25.6998, 0.0, 48.5738, 112.3727, 7.0833, 54.4, 0.0, 10.4098, 57.0112, 35.6351], [54.0137, 381.2121, 1.8931, 79.2687, 0.0, 33.4151, 0.0, 0.0, 209.4545, 46.1786, 0.0, 15.7556, 47.8822, 16.2308, 15.9344, 60.3455, 14.2051, 35.3, 0.0, 134.5082, 31.7162], [86.3387, 0.0, 315.8438, 0.0, 89.7313, 14.4118, 67.7925, 171.9889, 0.0, 35.697, 0.5357, 0.0, 0.0, 18.2887, 0.0, 35.9672, 50.6364, 23.3013, 0.0, 0.875, 60.9508, 26.7191, 0.0, 108.4189], [77.9085, 0.0, 0.0, 0.0, 156.85, 0.0, 46.4717, 168.1556, 64.2273, 95.2879, 0.0, 0.9302, 0.0, 45.0346, 0.0, 0.0, 63.8636, 112.0769, 0.0, 0.0, 49.0328, 52.0225, 0.0, 0.0], [81.0778, 382.2424, 0.0, 212.5563, 0.0, 230.3774, 25.5, 106.5, 22.5, 0.5357, 0.0, 107.7556, 66.2471, 64.3385, 48.2295, 72.6727, 18.5385, 103.1, 0.0, 35.7705, 0.0], [104.1556, 0.0, 64.5938, 0.0, 78.3125, 21.2353, 251.6981, 268.0222, 0.0, 154.0455, 94.75, 0.0, 3.6, 62.06, 58.6769, 24.5902, 100.2, 36.7372, 50.45, 151.175, 52.377, 160.6292, 82.7027], [244.0252, 0.0, 0.0, 33.475, 0.0, 454.2264, 573.3333], [119.373, 1366.1212, 0.0, 0.0, 67.35, 0.0, 225.7925, 416.4722, 69.3636, 164.2424, 0.0, 0.0, 23.4222, 0.0, 48.7692, 22.8197, 74.1091, 127.6282, 1.8, 15.525, 27.4426, 187.6629, 0.0, 82.3243], [145.7254, 0.0, 0.0, 0.0, 487.725, 11.1373, 745.3774, 461.4833, 0.0, 43.7576, 34.4464, 0.0, 68.0667, 2.1732], [269.7094, 0.0, 203.5625, 23.2264, 249.7688, 0.0, 91.283, 4.6222, 0.0, 52.4394, 0.0, 16.9302, 73.4667, 0.0, 119.9077, 162.5574, 178.7273, 56.9936, 146.3, 13.875, 243.7049, 211.9438, 0.0, 222.0135], [221.7208, 307.0, 0.0, 0.0, 100.25, 72.5882, 247.3774, 205.3389, 86.9545, 224.9394, 67.1429, 231.2326, 49.4, 98.2425, 16.1077, 133.2295, 75.3974, 252.3, 0.0, 78.2459, 28.4494, 0.0, 156.973], [183.5263, 180.697, 142.0312, 0.0, 204.6937, 0.0, 166.5283, 231.6611, 0.0, 69.3182, 130.0, 32.2791, 0.0, 112.4157, 14.3846, 67.3115, 91.5091, 166.4231, 599.2, 151.15, 0.0, 323.8108], [0.0, 384.2, 0.0, 232.3396, 352.2, 0.0, 120.4242, 0.0, 18.1395, 91.7556, 161.0993, 105.6154, 164.8689, 261.5, 99.641, 171.7, 0.0, 191.6066, 112.4045, 0.0, 263.1081], [175.2723, 126.4242, 570.2812, 0.0, 156.7562, 9.1569, 311.5283, 311.2111, 0.0, 118.4091, 89.0714, 121.6977, 85.0, 187.0393, 154.0636, 25.4359, 128.0, 79.775, 127.1639, 47.9326, 0.0, 337.2568], [187.3776, 107.0938, 0.0, 17.2375, 0.0, 293.8868, 526.1444, 0.0, 251.6061, 135.8036, 0.0, 0.0, 194.5774, 46.7385, 103.2459, 107.5364, 10.4808, 806.05, 176.95, 116.377, 0.0, 0.0, 69.2838], [150.222, 1951.8182, 0.0, 0.0, 123.6437, 0.0, 270.8679, 287.8889, 0.0, 64.2121, 38.4643, 0.0, 182.1111, 184.9261, 114.9692, 174.1967, 102.7545, 211.4487, 229.1, 24.775, 90.1803, 0.9326], [241.0023, 118.6061, 49.6875, 0.0, 122.8187, 108.2745, 294.1698, 428.0889, 0.0, 190.3636, 81.0893, 188.3488, 0.0, 146.4896, 122.5692, 90.1803, 181.1727, 49.2436, 283.25, 0.0, 1.8689, 104.1011, 431.0811], [102.4668, 464.3939, 992.5312, 0.0, 178.675, 0.0, 117.4528, 609.1222, 0.0, 145.0909, 49.4821, 0.0, 300.1556, 153.0254, 0.0, 71.9836, 219.6545, 186.6282, 193.85, 0.0, 0.0, 188.0674, 261.4189], [265.2174, 1044.2727, 0.0, 37.7044, 209.7937, 39.2941, 320.6604, 301.2889, 242.1818, 275.8333, 119.0893, 0.0, 44.8, 291.7413, 22.7692, 60.7869, 187.4636, 11.2564, 543.45, 130.0, 384.2295, 358.2809, 0.0, 44.1216], [235.7391, 120.0, 21.2642, 323.4312, 0.0, 280.6792, 549.9556, 0.0, 194.3182, 160.8214, 411.6047, 14.8, 230.9353, 131.2154, 355.8525, 250.2455, 152.3397, 1.05, 34.575, 0.0, 332.3483, 200.1892], [300.7117, 405.1818, 258.3438, 75.7296, 308.6812, 0.0, 241.3396, 0.0, 0.0, 140.7727, 207.9821, 343.5116, 116.8667, 271.9908, 22.3231, 164.5738, 510.3182, 350.4167, 555.05, 56.8, 21.5574, 196.9101, 0.0, 587.0405], [421.6476, 897.0303, 0.0, 0.0, 417.7563, 0.0, 578.9434, 996.2333, 0.0, 612.0303, 56.1071, 0.0, 129.4, 251.5704, 175.1231, 266.082, 344.3727, 297.3077, 120.25, 269.25, 308.918, 546.4607, 532.5811], [458.6545, 1342.1818, 0.0, 0.0, 455.7188, 113.7647, 987.0943, 1355.5111, 0.0, 382.7576, 78.5, 81.8837, 0.0, 273.2494, 0.0, 110.7377, 249.8, 255.2756, 478.05, 84.4, 455.0328, 245.1011, 0.0, 634.6622]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

