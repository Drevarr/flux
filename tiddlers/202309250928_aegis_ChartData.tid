created: 20230925092820000
creator: Drevarr
tags: ChartData
title: 202309250928_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Mar\u00eda Callas", "Gamora Titus", "Alo Penn", "Gestern Yesteryear", "Leafzel", "Koralia Danai"];
const professions = ["Dragonhunter", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 61.7283, 0.0, 19.9805, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.3107, 0.0, 0.0, 0.0, 53.7746, 0.0, 18.072, 0.0, 0.0], [5.2122, 42.3718, 50.3059, 35.6895, 16.3923, 101.5193, 9.7037, 90.1683, 0.9256, 12.3629, 8.085, 40.624, 3.9523], [24.1663, 16.304, 20.2895, 0.0, 5.3136, 0.0, 253.4899, 28.1214, 43.475, 30.4009, 0.0, 0.0, 52.0684, 5.0342, 13.6458, 63.6623, 23.8928, 18.5146, 112.0, 105.3147, 0.0, 65.3646, 22.3344, 13.2787, 12.1968], [6.8093, 10.833, 49.2089, 9.4468, 49.7772, 44.1773, 50.9587, 28.5522, 3.8621, 0.0, 47.2287, 9.7798, 23.5447, 153.5098, 0.0, 38.9873, 62.4524, 11.3958, 23.229, 6.9098, 206.761, 43.2174, 54.5072, 26.6409, 10.2162, 64.6882, 30.1078, 36.0422, 39.4668, 29.4245, 52.6299, 19.8524, 44.496, 15.0945, 66.6968, 21.8249, 13.0066, 50.8896, 25.9532, 12.0528], [0.0, 34.0883, 64.9724, 13.2462, 26.1165, 14.783, 13.3555, 2.4538, 13.4179, 22.4101, 10.1612, 4.5166, 15.6897, 0.0, 18.2245, 26.2585, 6.127, 0.0, 268.4893, 10.9548, 22.7182, 22.3463, 44.3025, 7.2947, 104.0432, 3.2944, 22.6541, 43.3143, 9.767, 34.7651, 19.2055, 12.912, 7.0811, 119.3914, 24.9203, 143.6694, 225.5904, 0.0, 119.5632], [129.0762, 141.105, 117.0547, 46.8982, 78.2352, 112.3805, 183.3385, 102.8493, 28.2146, 111.46, 37.5503, 79.7181, 20.8542, 29.2496, 737.6243]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

