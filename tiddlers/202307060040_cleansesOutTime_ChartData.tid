created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Elonith Requiem", "Gavann", "Hyde En Sikh", "Rahani Sunray", "Black Raspberry Pie", "Fribble Bibble", "Miphest\u00f6", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Scourge", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.9294, 1.9808, 13.131, 1.9861, 3.34, 12.0442, 16.7674, 0.0], [5.0235, 12.6538, 1.0, 0.0, 11.1507, 20.0909, 0.0, 9.9722, 2.0, 4.0088, 17.0698, 0.0], [0.0, 0.0, 0.0, 0.0, 6.9589, 20.875, 0.0, 23.5556, 10.06, 28.4513, 12.9651, 0.0], [20.9765, 36.4808, 14.0147, 18.5079, 0.9863, 21.0227, 10.0714, 27.5556, 7.04, 6.4602, 21.9884, 0.0], [18.0118, 3.4423, 20.4412, 8.7937, 7.9726, 5.0682, 26.3452, 20.8472, 13.6, 22.2832, 32.9186, 0.0], [59.7882, 30.7692, 44.1912, 14.0794, 60.4384, 27.375, 38.881, 61.75, 45.04, 28.4867, 42.8721, 2.0], [31.2235, 28.5577, 40.0735, 26.6825, 23.0685, 61.6023, 44.5119, 48.2361, 30.86, 62.3982, 43.6395, 2.0], [98.9118, 46.2063, 53.5068, 84.2727, 64.2262, 59.1111, 67.76, 105.7434, 70.686, 0.0], [58.1765, 65.4423, 50.9118, 31.4286, 68.9452, 78.8182, 59.3929, 74.6667, 41.2, 88.0708, 80.8605, 10.022]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

