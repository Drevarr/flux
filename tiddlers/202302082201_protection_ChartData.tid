created: 20230208220141000
creator: Drevarr
modified: 20230705163518904
modifier: drevarr
tags: ChartData
title: 202302082201_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Zefirokai", "Arka\u00f1", "Black Raspberry Pie", "Raziel Umbra", "Zadie Miststep", "Ryvalia Fazebringer", "Mac Aaroni", "Gabe Malhorn", "Tribal S", "Etchery Howls", "Kahless The Drunk", "Stabby Beech", "Whose Guardian", "Jupi Jupi Jupi", "Blanco Padre Guard", "Stoic Rapidfire", "\u00c9\u00efbhear", "Zaylen Harker", "Drevarr Moonwillow", "Elonith Primal", "Bella Sassy", "Koralia Danai", "Johosh The Great"];
const professions = ["Catalyst", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Druid", "Scrapper", "Firebrand", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[292.0632, 201.6737, 116.1787, 232.75], [305.0842, 38.0395, 65.6257, 0.0, 0.0, 19.4373, 54.054, 250.1928, 27.0142, 10.1899, 270.9875], [343.1174, 41.6712, 61.9551, 20.9014, 0.0, 16.2131, 36.5904, 277.992, 41.7995, 40.6574, 245.0525], [368.064, 39.4829, 73.968, 0.0, 0.0, 20.8191, 17.3804, 299.2704, 58.4501, 44.0995, 244.055], [325.5322, 36.8755, 87.9829, 92.4767, 18.17, 13.5416, 74.0124, 316.7736, 39.174, 28.1501, 252.035], [394.6464, 36.5962, 74.3016, 47.3624, 0.0, 22.7076, 22.37, 322.9512, 55.6174, 41.0323, 277.97], [277.6838, 57.9672, 131.1402, 71.1803, 0.0, 19.184, 58.212, 388.5024, 74.9626, 64.2408, 389.69], [129.3605, 87.6159, 0.0, 55.4562, 114.5113, 937.9656, 117.5221, 76.6459, 272.65], [699.7306, 0.0, 108.4492, 8.0203, 54.533, 39.2201, 0.0, 530.5872, 108.264, 42.4296, 356.44], [763.9373, 0.0, 93.8781, 0.0, 10.258, 47.5339, 1.1642, 534.0192, 135.3473, 54.5962, 415.9575], [1152.4656, 191.2411, 123.097, 813.295], [797.881, 21.6038, 82.7551, 26.9471, 16.858, 160.1662, 890.604, 118.5584, 80.6674, 339.815], [1172.0794, 42.0437, 182.5284, 83.6058, 0.0, 76.6438, 61.1226, 917.0304, 162.776, 93.3792, 611.4675], [116.424, 1528.6128, 214.5935, 157.3474, 1456.6825], [1248.1459, 23.699, 108.4492, 43.2307, 0.0, 23.5367, 55.3846, 1023.0792, 99.0751, 101.5925, 994.175], [1208.4768, 108.671, 249.8226, 75.2209, 0.0, 72.3603, 89.0644, 889.2312, 118.0748, 162.4253, 821.6075], [1265.3222, 108.9504, 224.2397, 80.5678, 0.0, 56.2853, 85.9043, 981.2088, 159.3215, 79.2019, 1022.105], [1370.425, 40.2278, 292.2012, 25.1243, 0.0, 17.5949, 149.2722, 1134.9624, 177.7686, 105.205, 790.3525], [1145.497, 61.9248, 302.4344, 124.9226, 43.171, 93.2945, 169.1474, 1033.3752, 229.7243, 58.5835, 913.045], [1244.8742, 18.205, 236.8087, 54.8663, 94.737, 66.81, 91.476, 1287.0, 230.6915, 79.0315, 1045.7125], [1417.4554, 112.8614, 389.8611, 147.2822, 94.99, 27.7281, 168.6485, 1218.36, 226.5461, 108.4426, 1134.8225], [2083.2422, 186.659, 419.3371, 75.707, 38.065, 56.4235, 284.4904, 1511.4528, 284.0981, 87.7901, 1127.175], [1898.3923, 91.7698, 381.5189, 140.386, 39.629, 93.0873, 73.3471, 1613.04, 338.1265, 188.5306, 1311.38]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

