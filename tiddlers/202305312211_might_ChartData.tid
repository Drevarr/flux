created: 20230531221142000
creator: Drevarr
modified: 20230705163532551
modifier: drevarr
tags: ChartData
title: 202305312211_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Etchery Of Ascalon", "Tika Fiery", "Cat Wigglebooty", "Koralia Danai", "Tegan Parker", "Zefirokai", "Sub Train", "Blanco Padre Guard", "Miphest\u00f6", "Sygaldry Verdandi", "Gavann", "Drevarr Moonwillow", "Crusader Siolith", "Solus Sanctus", "Legacy Of Mathus", "Bella Sassy", "Newtype Khan", "Johosh Of The North", "Venomina The Siren", "Artakama Nahid", "Grasszanine"];
const professions = ["Chronomancer", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Tempest", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[53.04, 22.4136, 3.1536, 83.2588, 37.3145, 0.0, 2.84, 10.7448, 9.5175, 12.8592, 6.1194, 20.6424, 41.647, 8.1664, 10.716], [71.2725, 45.5064, 6.3072, 145.5084, 12.9595, 0.0, 3.8769, 7.2816, 34.6625], [39.117, 24.4512, 3.672, 143.9522, 33.2926, 7.3348, 1.2172, 2.1312, 22.9125, 10.207, 10.0674, 6.3074, 6.0651, 1.9149, 20.2532], [65.637, 25.1304, 2.0304, 114.3836, 48.0396, 4.9491, 5.9055, 15.4512, 21.62, 12.7788, 8.7514, 18.3488, 24.6647, 4.6464, 0.0], [49.3935, 40.752, 10.6272, 185.1926, 46.2521, 5.4313, 2.6597, 5.8608, 19.975, 0.0, 12.1302, 6.8429, 13.0199], [89.505, 20.5118, 0.0, 133.8366, 35.0801, 0.0, 10.684, 0.0, 26.2025, 0.0, 42.2436, 19.6103, 28.5734, 3.0976, 38.5776], [67.8003, 68.9976, 124.315, 22.9054, 0.0, 69.3814, 110.5196, 22.9222, 19.2352], [112.3785, 44.2838, 16.2432, 196.0862, 37.5379, 0.9898, 18.8434, 23.3544, 21.62, 21.0569, 17.8976], [62.985, 31.7866, 4.752, 166.5177, 54.0725, 0.0, 6.221, 21.2232, 23.8525, 13.1003, 22.1088, 30.3902, 46.7687, 3.6045, 23.0394], [110.058, 54.7435, 7.2576, 128.3898, 48.7099, 0.0, 0.9467, 11.7216, 48.5275, 33.5143, 25.3988, 33.8306, 12.6693, 0.0], [85.527, 25.9454, 14.472, 165.7396, 46.4755, 0.9391, 3.6064, 39.2496, 13.395, 21.4588, 26.3858, 41.8582, 51.7555, 12.9664], [103.428, 51.0758, 1.3824, 225.6548, 94.0682, 7.8678, 9.602, 19.092, 20.0925, 37.2113, 22.3062, 19.8396, 34.7732, 0.0, 6.1617], [80.5545, 42.2462, 10.1088, 235.7704, 67.032, 17.233, 9.7824, 29.1264, 27.025, 28.1295, 19.082, 60.4364, 60.5162, 6.7021, 5.2508], [119.6715, 64.2523, 8.0352, 266.8952, 71.0539, 2.8172, 10.0528, 35.1648, 40.0675, 17.4403, 21.4508, 21.9039, 49.0599, 3.4918, 19.5567], [143.871, 54.0643, 18.8784, 300.3543, 72.8414, 4.7714, 16.2739, 27.2616, 52.5225, 44.6054, 20.7928, 31.4223, 86.5288, 5.9699, 11.5733], [257.6263, 29.72, 29.5725, 109.8456, 166.38, 99.4177, 94.9494, 139.4509, 150.8188, 24.2739, 11.5733], [149.5065, 73.7611, 18.0144, 361.0477, 109.709, 12.9692, 8.3849, 41.4696, 74.1425, 67.8323, 35.7294, 40.8261, 89.4939, 5.7165, 38.8455], [185.3085, 79.3306, 29.9808, 448.1971, 131.8296, 20.2786, 24.3883, 52.1256, 76.9625, 47.1772, 36.848, 74.886, 87.0679, 11.6864, 35.7914], [244.647, 158.3894, 16.6752, 544.684, 0.8938, 17.2838, 31.6462, 51.4152, 81.545, 63.8942, 58.1014, 60.3217, 113.0804, 0.0, 14.4666], [220.116, 88.1602, 20.952, 689.4143, 191.935, 0.0, 48.2356, 70.4184, 80.0175, 44.525, 87.185, 74.6567, 83.294, 0.0, 31.4515], [289.731, 98.0765, 34.6896, 617.0492, 202.6601, 8.35, 43.9079, 121.3008, 98.1125, 62.5279, 27.8334, 89.221, 123.4585, 23.7389, 48.3292], [383.5455, 179.0371, 42.2928, 845.8164, 269.0218, 20.6339, 43.2768, 63.7584, 98.1125, 51.9994, 68.2346, 144.2674, 123.9976, 32.5811, 3.2684]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

