created: 20230501220820000
creator: Drevarr
modified: 20230705163527791
modifier: drevarr
tags: ChartData
title: 202305012208_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "Johosh The Great", "Kary\u00edna", "Tyzzki", "Viral Marketing", "Sygaldry Verdandi", "Gollum Mah Precious", "Grilo Gringo", "Hauzzy", "Spreadflamesoflight", "Svix", "Smol Gluvs", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Vindicator", "Firebrand", "Vindicator", "Tempest", "Dragonhunter", "Firebrand", "Harbinger", "Dragonhunter", "Berserker", "Willbender", "Scourge", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[21.8337, 36.9194, 17.7448, 0.0, 0.0, 3.4712, 20.2915, 26.7069, 19.2812, 9.4364, 20.3103, 1.4603, 2.2564, 24.5515], [13.4503, 0.0, 1.8345, 0.0, 3.0, 9.6283, 45.6078, 5.7931, 23.1203, 0.0, 7.8017, 0.0, 0.0, 37.9948], [12.9197, 30.6303, 23.4483, 0.0, 2.5306, 12.9686, 26.7216, 7.431, 39.3835, 28.7455, 54.4052, 0.0, 8.1795, 13.6804], [23.5593, 39.2891, 0.0, 0.0, 40.7551, 14.2304, 28.7938, 0.9828, 34.7759, 0.0, 28.3017, 0.0, 0.0, 10.701], [34.8509, 6.5403, 1.8138, 0.0, 40.8163, 31.4293, 56.2974], [26.6874, 12.2133, 0.4483, 0.0, 88.6122, 34.1257, 32.4716, 36.3103, 38.3278, 4.9455, 27.0172, 0.0, 0.0, 16.8505], [182.1675, 106.4988], [0.0, 99.7959, 160.7173, 69.5652, 78.1034, 84.2872, 2.0909, 27.1983, 21.6667, 0.0, 54.8041], [76.3002, 5.1564, 0.4, 0.0, 33.7551, 10.4346, 1.7879, 122.1207, 89.3925, 7.7636, 27.7586, 0.1905, 0.0, 174.6443], [69.6912, 149.5308, 167.7655, 0.0, 308.8776, 57.4607, 45.2204], [67.0229, 13.9289, 9.1172, 0.0, 51.2449, 132.6911, 165.1351, 130.3103, 68.194, 32.7636, 8.8103, 39.4127, 5.8718], [92.6061, 4.2275, 0.0, 2.8636, 94.9592, 44.6597, 176.0983, 232.2414, 31.3113, 83.6, 3.2241, 0.0, 9.7692, 126.0412], [99.1042, 14.455, 34.6966, 0.0, 134.9796, 80.1047, 198.7002, 601.2586, 111.6571, 1.6909, 38.8362, 0.0, 4.6154, 101.634], [167.6807, 6.91, 32.4828, 0.0, 285.0612, 102.6754, 364.7725, 528.3793, 135.7113, 69.9455, 354.3276, 12.1587, 16.0256, 175.1495]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

