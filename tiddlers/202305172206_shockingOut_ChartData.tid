created: 20230517220640000
creator: Drevarr
modified: 20230705163530581
modifier: drevarr
tags: ChartData
title: 202305172206_shockingOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Zadie Miststep", "Venomina The Siren", "Artakama Nahid", "Miphest\u00f6"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Shocking Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 37.506, 0.0, 51.1128, 0.0, 0.0, 31.5629, 0.0, 0.0, 0.0, 39.9144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.9152], [0.0, 39.7991, 40.1138, 0.0, 0.0, 0.0, 0.0, 18.2322, 23.5752, 0.0, 38.6294, 0.0, 0.0, 0.0, 40.2894, 39.8208, 0.0, 0.0, 0.0, 11.0261, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 19.9572, 0.0, 0.0, 82.0512, 19.8694, 97.6109, 99.8659, 0.0, 0.0, 0.0], [0.0, 0.0, 20.0569, 39.8462, 0.0, 0.0, 40.1812, 20.0652, 15.9494, 19.8816, 39.8045, 0.0, 0.0, 19.8331, 0.0, 0.0, 86.7568, 0.0, 20.0275, 0.0, 0.0, 0.0, 0.0, 56.205, 40.033, 18.4936, 19.0296, 0.0, 38.7178, 0.0, 56.6496, 0.0, 38.6184, 19.825, 39.8772, 0.0, 15.8976], [60.1762, 0.0, 0.0, 39.9427, 0.0, 19.9769, 20.1536, 0.0, 19.9562, 0.0, 19.9022, 20.124, 73.9066, 84.8312, 0.0, 39.5904, 23.2401, 58.092, 72.8486, 34.596, 0.0, 1.2569, 12.0456, 17.6047, 50.962, 39.0648, 77.002, 58.3766, 19.9572, 0.0, 16.704, 78.7248, 35.7683, 20.0038, 58.1779, 0.0, 6.2837, 39.7872], [72.1653, 19.8995, 19.9976, 96.9624, 20.124, 20.0389, 14.7688, 41.3525, 39.8865, 2.2618, 38.9232, 60.192, 60.6413, 95.7193, 20.1366, 0.0, 169.8101, 60.1788, 80.1101, 51.3806, 16.0864, 39.5489, 0.0, 0.0, 129.7118, 20.0351, 169.8791, 72.8277, 119.7433, 19.9254, 135.3744, 0.0, 78.9293, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

