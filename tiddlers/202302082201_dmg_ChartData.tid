created: 20230208220141000
creator: Drevarr
modified: 20230705163518854
modifier: drevarr
tags: ChartData
title: 202302082201_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Tacoplasm", "Veron Blackburn", "Drakiten", "Arcanophage Farra", "Rina Of Theros", "Rozaalyna", "Newtype Khan", "K\u00e2 \u00d4tik R\u00e6j", "Kira Dragonblaze", "Smol Gluvs", "Nelliel T", "Legacy Of Mathus", "Jupi Jupi Jupi", "Ace Rages", "Fungus", "Panther B Me", "Daddys Lil Orchid", "Tootsie Pop Bringer", "Skye Nightroad", "Kosa\u00edr", "Lord Erin The Wise", "Smol Daddy Tika", "Be\u00eb", "Xyntharos", "Sp\u00edcy Cheese", "Demon Sekhmet", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Tempest", "Herald", "Mechanist", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Berserker", "Dragonhunter", "Scourge", "Scourge", "Berserker", "Dragonhunter", "Berserker", "Scourge", "Scourge", "Vindicator", "Scrapper", "Scrapper", "Scrapper", "Weaver", "Berserker", "Scourge", "Vindicator", "Berserker", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[145.3451, 57.7526, 107.6432, 22.6452, 9.06, 1534.1489, 20.9894, 141.4755, 226.8369, 55.6901, 96.0481], [412.5986, 35.5361, 172.3568, 213.4355, 157.72, 929.7021], [728.7801, 575.6901, 483.4722], [232.7324, 15.1443, 35.1454, 43.0484, 3.1, 547.0, 0.0, 233.8895, 583.6809, 246.1831, 51.5654], [472.7336, 126.4639, 256.3921, 188.7419, 337.46, 1558.234, 17.9735], [590.4624, 0.0, 81.348, 0.0, 0.0, 1641.5745], [217.4601, 0.0, 167.9559, 71.5968, 96.84, 328.0638, 27.0794, 255.1748, 333.3404, 396.507, 141.1068], [270.1049, 1288.7801, 1111.8592, 373.0195], [679.0364, 137.567, 338.7269, 249.4677, 574.9787], [403.2207, 37.433, 193.3833, 2.0484, 261.32, 595.1064, 6.9735, 285.2965, 467.4326, 939.7042, 162.4], [482.358, 92.0825, 230.4581, 2.4194, 0.0, 836.4894, 7.9101, 360.5371, 575.0496, 326.7465, 64.4421], [997.0446, 16.9278, 403.9912, 18.3871], [963.9108, 9.4845, 456.2599, 288.2742, 735.22, 2104.2766], [429.9472, 0.0, 131.3172, 0.0, 1147.7021, 54.7566, 443.6727, 1211.4468, 1077.4789, 119.1444], [572.3286, 0.0, 109.1013, 0.0, 289.04, 1603.9574, 0.0, 364.6699, 1297.1064, 1099.9437, 336.5398], [565.007, 232.5361, 337.0793, 355.3548, 425.2, 1643.9787, 97.9101, 495.2727, 1297.7376, 573.3521, 267.5534], [713.1455, 94.6701, 255.5639, 390.6129, 253.92, 701.8936, 68.8148, 366.386, 1059.5319, 1223.0, 355.7353], [760.7359, 42.701, 376.0617, 48.3226, 292.9, 1655.0213, 107.7249, 680.3217, 1538.9787, 903.3803, 8.4857], [432.4366, 7.7732, 586.163, 1.4677, 130.88, 1372.6596, 44.963, 752.9497, 1555.5745, 1655.1549, 430.6301], [1901.338, 161.1031, 755.652, 604.371, 769.54, 3601.2553, 28.9788], [1089.6631, 71.6598, 321.3172, 0.0, 163.74, 1886.1489, 12.6032, 896.9566, 1317.0142, 1384.8028, 540.7053], [963.3052, 194.6289, 264.5242, 751.3548, 123.68, 2376.0213, 66.672, 913.7427, 1421.2411, 1825.5775, 572.4451], [1125.9096, 56.268, 742.0881, 63.0806, 347.08, 2216.7447, 197.2116, 800.1147, 1531.1348, 1421.9718, 569.8541], [1172.8134, 161.7938, 345.141, 93.2097, 171.94, 2831.7021, 0.7566, 1141.7105, 1959.5177, 1487.5352, 423.5368], [976.3932, 65.7938, 457.1542, 248.5484, 112.76, 1847.2553, 77.3228, 1363.2909, 2289.6312, 2942.2113, 615.591], [1440.5857, 152.3093, 865.4978, 674.0, 217.76, 3273.2979, 190.1323, 1112.7315, 2647.0638, 1618.4085, 469.0797], [1623.8369, 19.4021, 685.0925, 1078.1935, 850.68, 2378.6383, 76.4074, 1374.1273, 2686.6809, 2226.5211, 833.0376], [1510.7711, 280.6495, 557.7753, 44.129, 670.84, 3439.8723, 60.5608, 2161.0434, 2752.4752, 2830.4507, 723.1143]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

