created: 20230204000024000
creator: Drevarr
modified: 20230705163518618
modifier: drevarr
tags: ChartData
title: 202302040000_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Siren", "Evil Stepmother", "Oo Dads Mad", "Tegan Parker", "Klee Flamepumpkin", "Tyrisai", "Bambiae", "Black Raspberry Pie", "Primal Clone", "Mike The Archmagus", "Ryvalia Fazebringer", "Seren\u00e1 Joy", "Raven The Guard", "Fribble Bibble", "Kahless The Drunk", "\u00c9\u00efbhear", "Palatine Of Ruin", "Etchery", "\u00c2 R K", "Ravioli Fetabringer", "Air One Com", "Zady Stardust", "Koralia Danai", "Johosh The Great"];
const professions = ["Tempest", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Chronomancer", "Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.6756, 4.0093, 0.0, 0.0, 0.7478, 4.604, 18.4023, 12.7008, 17.7779, 107.7838, 6.4381, 0.0, 0.0, 23.2452, 32.6133, 0.0, 16.7024, 23.3926, 0.5775, 28.0592, 18.9446, 29.4662, 11.5117, 18.6701, 11.5855, 1.668, 5.7613, 0.0, 0.0], [53.4296, 271.6954, 35.3562, 53.9157], [19.3504, 21.1663, 11.1048, 6.8088, 13.763, 10.2665, 10.2589, 31.1875, 18.0411, 27.5303, 19.3662, 17.3313, 9.4164, 39.8772, 0.0, 52.0592, 31.2541, 18.3458, 15.4903, 25.2178, 31.8146, 10.3273], [11.2594, 17.4279, 3.1248, 14.2885, 18.8748, 12.6353, 14.112, 18.7721, 18.9596, 6.5679, 15.3468, 0.0, 37.026, 24.2802, 61.3899, 20.5005, 39.1468, 14.1655, 13.37, 9.5238, 4.7493, 25.1328, 18.5395, 18.7276, 8.9258, 13.959, 0.0, 18.9567], [6.0352, 13.9604, 0.0, 14.4187, 14.4704, 30.3849, 98.6832, 73.2213, 38.4169, 52.3952, 40.1016, 13.9956, 0.0, 27.5933, 0.0, 1.1669, 23.6314, 50.8126], [14.8428, 7.6033, 10.5504, 21.2405, 13.6822, 24.1844, 6.4336, 26.4953, 0.0, 66.1637, 19.0546, 3.5721, 36.3528, 32.571, 126.3834, 68.9603, 15.8906, 35.091, 10.4778, 43.758, 30.3958, 21.2058, 3.5251, 47.9776, 20.4663, 30.8875, 0.0, 132.0543], [19.7087, 28.5167, 10.9704, 18.0751, 1.3541, 17.9399, 9.9691, 27.8006, 17.3978, 56.3592, 6.9054, 36.9117, 13.2468, 41.0652, 30.7521, 40.4118, 35.4182, 70.928, 33.1887, 15.222, 51.583, 5.6588, 10.1204, 124.5542, 18.973, 17.8968, 25.2023, 19.8944, 70.0434], [7.0536, 30.5033, 14.448, 0.0, 2.7081, 29.741, 25.1546, 22.7909, 30.1757, 41.8798, 21.9362, 29.2383, 20.1096, 15.5628, 37.0971, 77.2844, 72.7584, 62.1302, 43.8213, 29.6322, 36.3449, 19.7048, 21.8566, 111.1066, 27.2055, 10.3909, 31.2682, 20.5377, 48.6999], [14.5411, 18.9449, 16.7664, 14.703, 2.7688, 24.4843, 16.3157, 35.5622, 44.2401, 59.1512, 34.9422, 45.0261, 0.0, 42.0156, 17.5968, 93.0501, 52.2579, 39.7606, 24.934, 36.8119, 46.435, 25.6465, 18.872, 108.2342, 21.9988, 23.8924, 21.2938, 18.2578, 26.9892], [79.5703, 17.157, 13.9608, 0.0, 17.4008, 11.2367, 4.347, 29.9527, 69.9945, 17.3413, 34.9272, 14.44, 27.0864, 43.5267, 38.8674, 83.1459, 56.8106, 26.1229, 19.2812, 42.0592, 17.32, 23.7191, 122.3347, 14.1752, 33.81, 17.4361, 17.1888, 86.1084], [15.5029, 31.1896, 22.7304, 18.5273, 20.6748, 0.0, 0.0, 40.8542, 28.9768, 107.3942, 25.8042, 46.8342, 13.2468, 49.8168, 34.1361, 58.3655, 45.0736, 57.1516, 31.5242, 32.9303, 40.7207, 22.4331, 31.5955, 100.2701, 35.0836, 21.2327, 12.1824, 5.6571, 43.605], [18.8411, 14.6647, 14.868, 0.0, 12.126, 22.3852, 39.6157, 30.87, 32.1055, 71.9424, 17.9124, 45.6876, 19.1672, 52.7076, 39.8889, 78.5713, 55.0493, 37.169, 31.66, 32.296, 71.8146, 18.957, 24.886, 142.7021, 23.3346, 24.0502, 21.5222, 18.8443, 28.2744], [53.9784, 0.0, 131.1948, 134.3025, 86.6795, 184.6416, 46.6488, 77.8932, 42.647, 72.3809, 25.5454, 58.0747, 211.8989], [32.7975, 8.3437, 8.6856, 12.3515, 34.0539, 43.3415, 41.992, 78.0041, 25.9066, 145.7679, 57.8389, 62.5779, 8.0028, 66.7656, 37.8585, 81.5314, 66.8096, 84.568, 25.4435, 33.2854, 70.1672, 20.8163, 24.4596, 180.4339, 22.4077, 28.6258, 27.6896], [0.0, 0.0, 0.0, 0.0, 47.0691, 64.8446, 59.8147, 9.9842, 75.9655, 110.8355, 40.0822, 58.6089, 0.0, 84.9024, 156.2562, 137.516, 194.9834, 163.5436, 129.8673, 52.2115, 92.9214, 5.0727, 72.7954, 156.5414, 81.9163, 32.9535, 34.1615, 0.0, 218.8512], [23.4241, 10.3123, 35.6664, 16.7831, 7.3362, 77.4925, 31.3853, 75.4286, 95.147, 136.353, 17.549, 77.175, 13.4596, 90.5652, 150.2073, 163.3203, 177.0454, 154.7458, 53.5028, 56.6766, 150.1157, 0.0, 39.1129, 171.5558, 70.4671, 22.6302, 49.288, 17.8037, 126.8217], [91.5478, 95.4324, 35.4974, 102.3297, 82.5788, 107.1189, 0.0, 149.0544, 152.6607, 164.0925, 148.6742, 182.9124, 38.7937, 77.0741, 93.2818, 41.9762, 51.5222, 148.8384, 69.1041, 51.6166, 49.4402, 38.7198, 165.9744], [33.948, 56.7084, 19.3032, 44.2639, 51.5153, 30.5525, 43.3831, 90.2815, 124.7086, 153.2348, 41.8475, 76.6899, 0.0, 181.368, 120.3435, 151.4799, 23.063, 106.392, 72.7637, 24.7865, 56.2676, 32.4168, 34.6698, 212.6822, 49.2316, 111.6857, 63.45, 0.0, 156.2436], [93.8096, 105.5426, 35.2464, 21.6798, 91.5311, 93.3685, 53.0044, 119.9717, 68.9557, 40.8091, 119.07, 106.8408, 122.1201, 146.8467, 151.5114, 141.4468, 110.1987, 96.2161, 69.4011, 97.0754, 237.6192, 101.0801], [75.31, 94.5063, 0.0, 41.58, 173.1339, 196.7823, 245.0448, 222.5366, 125.8928, 104.7527, 180.4889, 68.9565, 93.2382, 243.8861, 125.2324, 72.9169, 146.6456, 15.7887, 180.8001], [49.6961, 77.5677, 52.5504, 0.0, 36.863, 103.9878, 49.6427, 64.139, 48.2168, 184.4012, 58.0725, 87.6708, 0.0, 96.6636, 137.3058, 165.1865, 161.9446, 128.6252, 99.9737, 79.1798, 90.7592, 89.692, 77.3058, 180.695, 78.5361, 58.1307, 78.3481, 78.1218], [40.3793, 68.2668, 18.0264, 67.6631, 75.3934, 31.1245, 90.3168, 109.2991, 118.3025, 39.3294, 60.1524, 57.5776, 34.8876, 133.1604, 226.7694, 162.4022, 125.829, 97.8676, 102.85, 121.8532, 30.7192, 49.9066, 353.1648, 65.8329, 53.2395, 138.4987, 21.758, 116.0352], [52.1668, 54.4509, 34.8264, 53.698, 105.3637, 47.5852, 47.4516, 83.4802, 103.4984, 28.3743, 92.3454, 10.7844, 131.3532, 194.6646, 227.4772, 160.6634, 151.063, 93.7232, 89.48, 145.4825, 80.9815, 60.6104, 414.1363, 36.174, 91.7153, 77.5105, 29.1084, 135.6345], [75.4211, 75.4908, 62.832, 51.8092, 88.4188, 51.1207, 69.2042, 131.8414, 151.5509, 176.4797, 61.9146, 97.0641, 20.6872, 181.0908, 176.6871, 209.974, 201.0694, 226.6286, 134.9968, 125.6069, 158.1466, 67.2185, 92.4079, 275.2205, 164.2415, 98.342, 152.1531, 18.8159, 178.3674]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

