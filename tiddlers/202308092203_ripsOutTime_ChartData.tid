created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_ripsOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Brigitte Du Bardo", "Sub Train", "Cesare Pirane", "Bella Sassy", "Rafaellagabriela", "Koralia Danai", "Brigitte Du Bardo", "Glorious Gluvs", "Necrotic Windrunner", "Ryvalia Fazebringer", "Aspros Gemeos", "Raziel Umbra", "Tootsy Pop Star", "Blancooo Padreee", "Arcanophage Farra", "Jimbo The Plug", "Rozaalyna", "Be\u00eb", "Morton Saltbringer", "Black Raspberry Pie", "Seren\u00e1 Joy", "Rahani Sunray", "Eibh\u00ebar"];
const professions = ["Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Reaper", "Berserker", "Scourge", "Chronomancer", "Spellbreaker", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Boons Stripped per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[9.8442, 18.8154], [0.0, 0.0, 0.0, 0.0, 1.0, 5.4222, 0.0, 1.0341, 1.0972, 1.0241, 1.0714, 1.1596, 0.0, 1.124, 1.0775, 1.1628, 0.9859, 0.9825, 0.0, 1.0307, 6.8133, 1.0, 9.041, 0.0, 2.0588, 7.6579, 1.0864], [20.7889, 0.0, 0.0, 8.5694, 13.2771, 27.8143], [0.0, 0.0, 0.9924, 0.0, 0.0, 8.6111, 0.0, 0.0, 3.0, 1.0482, 0.9857, 0.9894, 0.0, 6.0826, 1.0185, 0.0, 1.0, 5.6056, 0.0, 0.0, 9.7791, 1.1067, 1.0, 5.5128, 0.0, 1.0118, 0.0, 0.9877], [0.0, 0.0, 0.0, 0.0, 1.0, 7.7889, 0.0, 0.0, 0.0, 0.0, 1.1286, 0.0, 0.0, 0.0, 9.1292, 1.0, 1.0, 0.9825, 0.0, 6.2883, 4.0, 1.0, 1.0821, 0.0, 1.2, 6.1842, 3.1728], [0.0, 0.0, 0.0, 0.0, 0.0, 8.2, 0.0, 0.0, 4.4583, 0.988, 0.9857, 1.0638, 0.0, 0.0, 8.9742, 0.0, 14.064, 0.0, 0.0, 0.0, 5.3129, 1.1067, 0.0, 1.0154, 0.0, 3.6706, 0.0, 0.0], [4.0833, 2.0361, 9.9286, 8.8298, 4.9623, 7.5207, 0.0, 0.0, 16.5581, 0.0, 4.4737, 0.0, 1.5092, 0.0, 0.0, 14.7765, 6.1053, 16.1975], [3.2381, 0.0, 1.9924, 3.0727, 7.003, 2.9889, 0.0, 0.0, 1.0, 5.2048, 1.9857, 4.9681, 2.9623, 6.1488, 5.0443, 0.0, 5.2965, 0.0, 0.9825, 0.0, 1.0, 2.0, 0.0, 7.0513, 0.0, 2.0, 0.0, 1.9877], [16.4681, 4.3962, 9.8678, 3.0, 4.25, 12.5465, 12.8451, 8.4386, 3.0, 2.1227, 14.4133, 13.8312, 10.759, 0.0, 12.0235, 0.0, 21.3086], [4.9286, 1.0, 1.9924, 1.9818, 5.142, 3.2333, 0.0, 4.5568, 1.0, 7.0602, 4.7571, 5.6277, 0.9811, 9.2231, 9.572, 2.0, 15.6628, 0.0, 0.9825, 1.0, 7.9939, 5.3733, 2.0, 9.2308, 3.0645, 4.8353, 2.0, 5.3086], [0.0, 25.1932, 22.0417, 27.5422, 20.1429, 24.4149, 14.434, 17.4298, 13.8967], [21.7614, 13.2143, 19.766, 16.1698, 15.6033, 19.7897, 15.0988, 1.9859, 13.5263, 0.0, 14.4847, 13.8, 17.5714, 21.7538, 0.0, 21.0118, 0.1579, 27.0988], [8.9524, 0.0, 3.0152, 8.5636, 9.0533, 17.7556, 0.9688, 7.1477, 23.625, 12.8072, 18.2857, 13.1064, 6.9811, 6.8099, 16.9815, 1.0, 14.2616, 7.9577, 11.4912, 0.0, 9.7607, 7.3467, 5.7143, 30.4615, 1.9677, 16.8, 1.1316, 3.6667], [11.6905, 2.0, 10.053, 10.7455, 11.4053, 13.2889, 0.0, 13.1477, 19.8333, 13.253, 12.6714, 16.6277, 11.717, 16.6777, 12.0517, 0.0, 19.0814, 0.0, 0.0, 0.0, 11.3129, 6.3733, 2.2078, 22.0974, 0.0, 4.0, 0.0, 18.0741], [10.1905, 0.0, 6.75, 0.0, 13.1272, 14.4222, 0.0, 2.0, 27.5, 20.0843, 20.2143, 12.8936, 10.3396, 17.7355, 17.0996, 21.4128, 2.9859, 3.9649, 0.0, 21.6748, 8.9333, 5.0779, 2.0359, 2.0, 13.9529, 7.2632, 33.6667], [15.5476, 1.0, 12.0606, 23.7455, 12.3077, 19.1, 4.6875, 12.5114, 14.1528, 23.3494, 17.9286, 19.9574, 11.1887, 20.7686, 20.4871, 4.0, 15.5058, 12.1972, 9.6316, 1.8, 20.0675, 16.1067, 17.5195, 13.1795, 1.8065, 22.1059, 6.7368, 17.284], [16.6429, 0.0, 8.0833, 13.2, 13.6065, 3.9889, 0.0, 33.8636, 8.9306, 28.2289, 22.9, 20.8298, 10.5094, 16.5702, 19.2804, 0.0, 28.4419, 0.0, 6.1579, 0.0, 15.0675, 16.9333, 33.2727, 17.8256, 0.0, 16.1176, 3.0526, 16.4444], [0.0, 0.0, 8.2197, 13.3521, 37.9333, 5.875, 15.7841, 4.7778, 30.0482, 16.3857, 20.2447, 2.0377, 14.8512, 18.2399, 4.0, 29.8663, 8.9014, 15.386, 1.0, 12.4785, 15.0133, 27.039, 22.759, 15.2118, 10.4211, 21.037], [11.4762, 4.4731, 11.2803, 4.6364, 11.1716, 0.9688, 31.9659, 21.9583, 20.506, 25.0571, 24.0319, 16.1321, 22.4711, 24.203, 0.0, 14.7965, 17.0141, 11.0877, 4.28, 16.1472, 13.6533, 1.0, 25.441, 2.0968, 30.6706, 9.7895, 34.1235], [1.0, 2.0719, 9.6742, 12.0545, 14.1893, 12.5111, 4.625, 27.4091, 28.0694, 21.9277, 23.4143, 14.4681, 13.2453, 30.9669, 23.8635, 35.2209, 6.338, 20.4035, 3.36, 18.9325, 16.0133, 10.8442, 18.0051, 3.4839, 2.0, 7.6316, 14.2346], [21.0714, 0.0, 10.8333, 5.0182, 7.997, 19.3222, 0.0, 28.8068, 29.8194, 41.1807, 26.0, 21.4574, 11.4528, 10.562, 22.9077, 2.35, 29.6105, 14.3662, 18.614, 2.28, 20.1227, 24.32, 25.7403, 26.4051, 3.4516, 20.6235, 2.6316, 29.2963], [3.0, 0.0, 11.3182, 6.7455, 14.6746, 40.0111, 0.0, 24.75, 0.0, 38.241, 33.2714, 24.6489, 24.6792, 23.3223, 26.9631, 1.0, 41.1802, 16.5352, 17.2632, 3.52, 20.0307, 17.6133, 8.8831, 29.6462, 2.0, 23.9176, 15.8947, 47.8395], [22.9048, 1.0, 18.947, 10.7455, 19.5296, 51.9444, 3.4375, 38.4886, 32.0556, 54.6867, 54.6857, 36.1915, 16.4528, 33.0, 30.0074, 3.0, 67.1163, 0.9859, 18.8421, 1.0, 29.4663, 19.28, 31.2338, 32.6615, 12.0323, 29.3529, 12.6053, 38.1852]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

