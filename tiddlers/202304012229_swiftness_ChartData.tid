created: 20230401222944000
creator: Drevarr
modified: 20230705163524051
modifier: drevarr
tags: ChartData
title: 202304012229_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Smol Gluvs", "Newtype Khan", "Be\u00eb", "Tegan Parker", "Macette", "Mmathuss", "Zadie Miststep", "Aronorf Xideliesi", "Aluin Ellesmera", "Astraea Lumena", "Drevarr Moonwillow", "Sygaldry Verdandi", "Gabe Malhorn", "Koralia Danai", "Venomina The Fierce", "Johosh The Great", "Bella Sassy"];
const professions = ["Tempest", "Scourge", "Spellbreaker", "Scourge", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.0058, 4.6131, 28.3576, 153.3833, 20.0002, 0.0, 88.4982, 0.0, 60.592, 14.9899, 10.0936, 129.5633, 21.1442, 0.9583, 0.0, 58.464, 6.6312, 29.4272, 5.659, 276.0928, 32.8583, 0.0, 0.0, 0.0, 18.7902, 50.8858, 49.3503, 32.1079], [12.049, 143.5494, 19.1083, 277.3868, 25.5816, 27.6179, 25.0349, 40.6581, 0.0, 56.1686, 40.5385, 56.2351, 0.0, 20.8483, 0.0, 0.0, 0.0, 65.5872, 0.0, 16.3689, 0.0, 199.8496, 103.7728, 0.0, 18.107, 0.0, 0.0, 0.0, 57.6348, 25.0852], [0.0, 187.3741, 181.4274, 179.2174, 0.0, 19.1834, 43.095, 0.0, 0.0, 103.1983, 0.0, 64.306, 86.143, 0.0, 0.0, 81.2949, 22.9152, 0.0, 0.0, 0.0, 322.5318], [36.5165, 116.0064, 42.079, 206.2672, 0.0, 124.9749, 89.505, 70.8624, 80.7308, 16.0243, 21.7048, 24.2854, 36.2067, 167.8126, 0.0, 0.0, 0.0, 110.544, 0.0, 99.4547, 0.0, 235.8918, 6.0952, 0.0, 11.7096, 3.9171, 0.0, 0.0, 0.0, 0.0], [22.442, 151.0499, 46.0918, 77.3262, 76.9084, 0.0, 1.0157, 101.1314, 67.3466, 23.7136, 20.0422, 40.0007, 72.7776, 0.0, 96.3281, 1.1886, 356.7258, 80.1655, 0.0, 29.9499, 72.251, 1.4949, 75.1699, 79.3703, 34.0731], [245.8579, 1012.9869, 56.8168, 96.2445, 0.0, 27.9265, 222.8741, 131.7897, 0.0, 28.2929, 0.0, 2.9857, 0.0, 18.1397, 92.7061, 70.9553, 51.5861, 51.072, 0.0, 73.568, 0.0, 167.735, 69.2747, 0.0, 0.0, 4.7675, 0.0, 1.5994, 10.4224, 6.8493], [92.1586, 58.8807, 66.1945, 298.7712, 62.6184, 234.9578, 119.1224, 976.6061, 274.9328, 85.878, 62.2608, 50.6858, 66.528, 55.1453, 220.4285, 108.7218], [129.8774, 369.321, 146.3616, 346.7841, 49.7678, 106.8715, 74.203, 67.431, 16.1998, 130.907, 31.3513, 0.0, 135.7752, 102.7642, 123.3274, 82.9888, 12.2181, 194.7456, 7.3656, 103.7769, 58.9152, 454.9178, 109.0944, 25.8563, 26.2211, 26.4924, 31.3018, 47.6578, 47.0781], [102.2346, 72.3387, 91.2791, 104.9092, 12.2496, 10.0343, 134.5705, 104.8572, 53.1554, 86.2333, 74.3633, 305.76, 22.9068, 125.7093, 92.9206, 1051.232, 77.9069, 29.5659, 178.0621, 126.8401, 12.7512, 78.1891, 113.4434, 218.9753], [260.6419, 666.4602, 11.2312, 236.8628, 0.0, 79.9736, 0.0, 40.0197, 161.9814, 169.3821, 15.2163, 130.3841, 23.1176, 97.8804, 62.4218, 34.3619, 73.9134, 254.9568, 84.7908, 35.8184, 0.0, 256.4544, 170.4485, 51.5151, 90.0973, 0.4043, 13.6323, 0.0, 278.5532, 39.1884], [213.1114, 349.1046, 172.4831, 349.7221, 62.1194, 49.99, 150.501, 281.0955, 15.8476, 63.1792, 11.4457, 0.0, 421.2287, 168.6744, 195.7316, 7.2283, 19.7543, 69.552, 27.8639, 0.0, 722.4621, 267.6619, 54.0891, 132.6136, 37.3453, 37.6893, 19.992, 22.9826], [334.4141, 471.895, 194.3865, 452.957, 39.2251, 219.3489, 107.6977, 38.4636, 16.8203, 164.6666, 75.8901, 57.9587, 166.4467, 162.7236, 251.2037, 20.9594, 30.4961, 191.0496, 108.5128, 106.1507, 732.3968, 158.6603, 25.0146, 50.1704, 25.7332, 43.0551, 33.864, 149.6099, 90.0235], [349.9373, 265.3901, 128.473, 79.0218, 149.7945, 292.1738, 28.4825, 75.0519, 0.0, 294.28, 9.0532, 24.2854, 0.0, 59.7542, 0.0, 18.8785, 53.9201, 195.6864, 19.3644, 167.4132, 181.1642, 1156.3552, 79.1445, 112.2615, 55.7682, 139.3024, 117.9486, 134.64, 339.1721, 130.7436], [132.3168, 582.0672, 201.0439, 403.923, 0.0, 201.1942, 112.5244, 338.2323, 118.6645, 47.5305, 0.0, 0.0, 199.3974, 141.3828, 130.6562, 28.7901, 68.0504, 109.6704, 131.1768, 123.2264, 19.4575, 1146.4205, 14.7274, 34.4916, 164.7912, 18.0941, 51.1137, 82.1222, 146.0467, 184.0641], [313.9382, 854.784, 241.5983, 478.6897, 99.6003, 351.3183, 63.2502, 101.0667, 100.8883, 34.4273, 58.3579, 0.0, 192.397, 211.8895, 230.5228, 58.7712, 81.9979, 420.5376, 85.6008, 113.8465, 265.1701, 589.152, 25.278, 87.3405, 47.2954, 113.2486, 70.4187, 98.7523, 331.3776, 38.2347], [570.9581, 1090.8672, 584.7857, 577.8722, 24.5738, 277.8763, 116.5024, 125.5254, 115.9478, 381.0784, 83.4138, 19.0476, 231.876, 134.2786, 114.3389, 41.8426, 460.656, 31.3632, 362.4603, 154.3423, 950.2675, 158.7841, 88.0191, 115.668, 139.4418, 110.617, 297.6163, 181.7521], [660.7709, 1758.4128, 548.9576, 891.3254, 127.2232, 404.0855, 147.5573, 86.8224, 109.223, 203.6007, 30.0881, 154.9773, 167.7817, 252.5191, 476.9669, 201.5716, 69.0487, 821.3856, 273.7189, 89.4839, 1305.8381, 186.6301, 28.314, 112.3741, 44.0783, 71.7849, 72.2486, 121.2824, 133.0845], [874.5475, 1248.9344, 383.132, 489.6312, 51.034, 310.5343, 251.0914, 281.0157, 167.4317, 80.2468, 47.1227, 159.7482, 152.8366, 438.9638, 527.5951, 157.9005, 183.9048, 370.0704, 122.7852, 263.4654, 189.0971, 1551.4336, 197.3044, 152.4978, 213.0386, 154.8873, 110.0286, 114.8928, 471.0996, 373.1279]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

