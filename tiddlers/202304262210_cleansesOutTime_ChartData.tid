created: 20230426221022000
creator: Drevarr
modified: 20230705163526722
modifier: drevarr
tags: ChartData
title: 202304262210_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Newtype Khan", "Zefirokai", "Sygaldry Verdandi", "Johosh The Great", "Tika Rucola", "Rey Peltrow", "Miphest\u00f6", "Cyclotechnist Farra", "Black Raspberry Pie", "Primal Clone", "Eibh\u00ebar", "Mac Adaymia", "\u00c1rkantor", "High Sorcer Baradun", "Tegan Parker", "Drevarr Moonwillow", "Zadie Miststep"];
const professions = ["Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Tempest", "Scrapper", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Vindicator", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6008207.4, 837778.76, 0.0, 33327.36, 24499.2, 89115.36, 16746410.52, 39463.2, 2171531.6, 0.0, 415524.18, 158982.2, 0.0, 9016.92, 14917736.55], [23805171.0, 850645.48, 0.0, 0.0, 0.0, 178230.72, 14099111.04, 0.0, 1705167.52, 0.0, 14229.72, 63544.0, 0.0, 0.0, 9880780.86], [1317612.1, 850.54, 926403.84, 63544.0, 18079.38, 52972030.56], [4641.65, 20637380.4, 707891.44, 91780.62, 16663.68, 21427.2, 152802.72, 20292556.2, 0.0, 2484858.04, 850.54, 273635.88, 254420.4, 0.0, 13570.92, 13401023.52], [9307.35, 21870256.2, 1058953.24, 27541.02, 8300.16, 27571.2, 204206.4, 31521862.68, 217388.64, 4227235.46, 0.0, 428854.32, 508840.8, 0.0, 49957.38, 20116299.39], [13973.05, 31953955.8, 1548443.2, 0.0, 0.0, 0.0, 383532.48, 11909828.28, 0.0, 2497642.98, 0.0, 328183.14, 413402.6, 11880.0, 0.0, 32941522.62], [83030134.2, 5419329.36, 230715.84], [0.0, 35029363.2, 1208362.48, 55082.04, 0.0, 42969.6, 358808.64, 44785302.24, 336362.88, 6543599.44, 13786.66, 489698.64, 95316.0, 0.0, 91398.78, 28846676.76], [17075.5, 41733010.8, 1731017.52, 103945.14, 0.0, 6105.6, 410760.0, 44369556.84, 259385.28, 4673945.08, 1701.08, 460748.52, 222526.2, 0.0, 0.0, 40892594.4], [17075.5, 36709124.4, 2155619.28, 64239.6, 158526.72, 52147.2, 459347.04, 47986309.56, 436920.96, 5223697.5, 0.0, 545799.72, 190754.2, 0.0, 4508.46, 43974702.12], [0.0, 60777147.6, 2008206.6, 9157.56, 0.0, 33715.2, 786155.52, 35799627.36, 98804.16, 4510221.52, 0.0, 514069.08, 1145014.0, 0.0, 27278.46, 40514313.96], [7768.15, 45655997.4, 3368862.24, 119321.64, 50054.4, 34752.0, 779974.56, 46475690.52, 242917.92, 7805110.46, 0.0, 944967.9, 604279.0, 0.0, 0.0, 36482913.87], [12433.85, 52720379.4, 2256112.8, 55082.04, 41690.88, 77030.4, 332128.8, 57518724.48, 355850.88, 9271943.8, 4252.7, 861388.74, 955481.8, 0.0, 122274.9, 55258871.49], [6204.9, 58956612.0, 3174308.56, 229554.06, 58354.56, 67660.8, 384314.88, 73180945.32, 652848.0, 10023202.14, 0.0, 1245264.06, 700450.4, 0.0, 108749.52, 66719013.09], [26455.0, 63881883.0, 3973487.16, 119321.64, 233671.68, 107328.0, 816434.4, 100417146.48, 554238.72, 12438410.88, 1701.08, 1171089.6, 1590921.8, 0.0, 13570.92, 78399419.25], [20370.35, 86633079.0, 5693412.68, 82623.06, 326430.72, 145036.8, 1640536.32, 122377329.48, 679059.36, 16985460.66, 17406.4, 1865647.14, 2202044.0, 0.0, 136574.46, 91008767.25], [62842.65, 107468423.4, 6798175.88, 351130.92, 250905.6, 237388.8, 1703676.0, 128954468.16, 1945974.24, 19154893.24, 12046.02, 1777978.98, 3492598.2, 23403.6, 196004.16, 111149008.44], [72438.6, 104931551.4, 7311291.8, 148161.12, 342904.32, 213388.8, 1619020.32, 146001887.64, 1455851.04, 19086579.68, 9375.72, 2513917.2, 3654024.4, 0.0, 346331.7, 114136945.08]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

