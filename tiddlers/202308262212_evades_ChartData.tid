created: 20230826221220000
creator: Drevarr
tags: ChartData
title: 202308262212_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Kylo Milan", "Zaedy Zae", "Yummy Kiwi", "Sienna Veil", "Illusionist Zeroo", "Darks Na", "Jamaass", "Lord Krython", "Greg The Knight", "Roderik Manloy", "Mordelon The Tiger", "Mort\u00e4rion", "Rina Of Theros", "Darkandshadow", "Rhaevynn", "Blaize Harlot", "Ax Axun", "Tootsie Pop Rocks", "Sofya De Nova", "Sygaldry Verdandi", "Govinda Ektar", "Belvyn Brightblade", "Forever Dreaming", "Bee Nemesis", "Aira Draugr", "Daphne Agla\u00e9", "Vee Usagi", "Drevarr Moonwillow", "Sr Conrad", "Hyde En Sikh", "Xanvias Einzbern", "Talia The Pestilent", "Rahani Sunray", "Koralia Danai", "Oo Dads Mad", "Morv\u00e4rth", "Gabe Malhorn", "Kurtis Ruhr", "Be\u00eb", "Loganlek", "Crusader Siolith", "Newtype Khan", "Tegan Parker", "Belladonna Horror", "Lord Erin The Wise", "Mistwalker Cael", "Venomina The Fierce", "Sub Train", "Bearah", "Glorious Gluvs"];
const professions = ["Chronomancer", "Druid", "Firebrand", "Renegade", "Chronomancer", "Dragonhunter", "Reaper", "Scrapper", "Firebrand", "Renegade", "Warrior", "Scrapper", "Reaper", "Virtuoso", "Reaper", "Scourge", "Vindicator", "Scrapper", "Tempest", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Spellbreaker", "Herald", "Reaper", "Reaper", "Scrapper", "Spellbreaker", "Chronomancer", "Berserker", "Reaper", "Chronomancer", "Firebrand", "Berserker", "Reaper", "Firebrand", "Vindicator", "Reaper", "Spellbreaker", "Firebrand", "Spellbreaker", "Tempest", "Tempest", "Weaver", "Herald", "Spellbreaker", "Firebrand", "Firebrand", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 7, 14, 0], [10, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0], [14, 0, 2, 1, 5, 3, 2], [14, 4, 10], [4, 0, 6, 0, 4, 1, 4, 10], [12, 0, 6, 0, 2, 0, 1, 5, 1, 0, 0, 0, 0, 3, 1], [0, 9, 10, 5, 0, 1, 3, 0, 3, 0], [31], [14, 0, 0, 1, 4, 12, 0, 4], [27, 2, 1, 0, 1, 5, 0, 0], [10, 0, 16, 10, 0], [1, 0, 1, 0, 5, 3, 0, 0, 0, 0, 0, 0, 3, 18, 1, 5], [4, 0, 0, 0, 3, 0, 2, 0, 2, 0, 0, 0, 7, 21, 0, 1], [0, 0, 6, 4, 10, 9, 11], [25, 0, 3, 0, 0, 5, 1, 2, 1, 4, 0, 0, 2], [20, 0, 4, 0, 5, 1, 2, 3, 1, 1, 4, 1, 3], [8, 0, 3, 0, 0, 3, 4, 0, 0, 0, 0, 0, 0, 26, 0, 2], [9, 0, 0, 0, 3, 3, 1, 0, 5, 0, 0, 1, 6, 17, 2, 0], [0, 7, 38, 1, 1], [7, 0, 1, 1, 6, 1, 0, 2, 0, 0, 0, 1, 1, 8, 18, 2, 0], [3, 0, 0, 0, 1, 5, 0, 6, 0, 1, 28, 5, 1], [28, 1, 2, 0, 5, 7, 1, 7], [5, 2, 0, 0, 1, 6, 38], [28, 25], [42, 2, 1, 0, 13, 2, 0, 0], [10, 0, 0, 0, 3, 0, 1, 8, 0, 1, 10, 0, 1, 0, 21, 7, 0], [13, 0, 1, 0, 0, 6, 0, 4, 2, 10, 2, 1, 0, 1, 23], [10, 0, 5, 0, 3, 1, 2, 5, 2, 0, 0, 0, 0, 13, 19, 0, 5], [68], [11, 8, 7, 0, 2, 10, 1, 0, 5, 1, 0, 5, 2, 18, 2, 0], [20, 0, 2, 0, 0, 2, 0, 0, 2, 8, 0, 2, 6, 22, 5, 5], [7, 4, 0, 3, 19, 18, 4, 23], [3, 0, 60, 11, 7], [15, 2, 1, 0, 5, 2, 7, 0, 6, 2, 0, 1, 10, 36, 1, 2], [15, 1, 1, 0, 6, 2, 0, 1, 1, 0, 2, 0, 0, 21, 41], [37, 0, 0, 0, 6, 2, 3, 1, 1, 4, 0, 4, 14, 17, 8, 2], [13, 0, 2, 0, 4, 12, 0, 5, 0, 2, 0, 1, 2, 7, 51, 0, 2], [92, 10], [13, 0, 0, 1, 2, 8, 0, 1, 1, 2, 0, 0, 0, 15, 57, 1, 6], [88, 8, 12], [14, 0, 2, 0, 8, 13, 0, 2, 0, 0, 0, 0, 0, 12, 60, 2, 3], [22, 2, 6, 0, 6, 3, 0, 4, 4, 7, 1, 0, 7, 15, 42, 4, 1], [35, 1, 2, 0, 14, 9, 2, 1, 8, 0, 0, 1, 4, 50, 3, 2], [3, 7, 2, 3, 6, 1, 3, 2, 0, 1, 9, 96], [1, 14, 12, 19, 9, 0, 1, 10, 23, 47, 4, 4], [55, 4, 7, 0, 6, 16, 0, 2, 1, 1, 0, 0, 2, 10, 36, 0, 6], [2, 0, 1, 0, 1, 22, 110, 5, 10], [35, 2, 6, 0, 7, 5, 0, 6, 2, 4, 0, 0, 0, 10, 86, 5, 2], [40, 1, 4, 0, 1, 20, 14, 5, 2, 1, 2, 1, 17, 60, 5, 10], [27, 3, 4, 4, 6, 5, 14, 4, 1, 6, 40, 120, 15, 18]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

