created: 20230625215649000
creator: Drevarr
modified: 20230705163536790
modifier: drevarr
tags: ChartData
title: 202306252156_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Elonith Requiem", "Rina Of Theros", "Jacob Pine", "Mister Jekyll", "Tootsy Pop Star", "Rozaalyna", "Smol Gluvs"];
const professions = ["Spellbreaker", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 809, 0, 0, 35711, 177, 2978, 4237, 0, 2087, 6236, 16801, 0, 0, 2982, 0, 2918, 3437, 7106, 4801, 6387, 29117], [36659, 268, 16658, 6458, 2648, 339, 0, 0, 0, 112, 27394, 58134, 22756, 0, 5144], [7977, 8967, 5914, 44552, 74839, 22119, 15275, 169325], [40823, 15494, 877, 53920, 25215, 81027, 1678, 8678, 25508, 0, 23, 40451, 24888, 47671, 41319, 88156], [3617, 2761, 5728, 312932, 38836, 63755, 0, 22288, 17657, 102949, 0, 6948, 18853, 6, 1616, 29293, 81717, 63212, 16295, 94548], [9995, 1776, 7423, 31075, 257844, 30391, 75827, 80563, 0, 45852, 23456, 98029, 9874, 26199, 0, 3983, 11024, 77378, 52818, 1974, 46166], [2025, 13416, 31792, 36187, 325564, 25087, 50964, 43107, 4902, 24128, 49086, 118207, 10, 9496, 35242, 204, 187, 96462, 22120, 19055, 33636], [1536, 1490, 33846, 33622, 305252, 36821, 93203, 26559, 365, 48009, 43280, 107152, 622, 35902, 25151, 0, 154, 24850, 22702, 32077, 34169, 110463]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

