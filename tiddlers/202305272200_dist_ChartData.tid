created: 20230527220043000
creator: Drevarr
modified: 20230705163531934
modifier: drevarr
tags: ChartData
title: 202305272200_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Rocks", "Sygaldry Verdandi", "Be\u00eb", "Newtype Khan", "Xanvias", "Koralia Danai", "Drevarr Moonwillow", "Johosh Of The North", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Scourge", "Spellbreaker", "Reaper", "Firebrand", "Scrapper", "Tempest", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[305, 327, 250, 438, 578, 691, 1502, 912, 6683, 4040, 7764, 503, 320, 369, 6033, 1075, 258, 7046, 548, 400, 357, 236, 250, 334, 588], [2728, 468, 291, 310, 595, 568, 215, 223, 528, 360, 491, 241, 283, 356, 1305], [215, 345, 193, 692, 1059, 3823, 638, 976, 429, 5523, 3215, 367, 317, 264, 9997, 338, 215, 250, 843, 341, 495, 204, 6348, 340, 1388], [238, 196, 678, 426, 571, 280, 300, 1534, 1371, 4318, 628, 238, 288, 1802, 532, 229, 2200, 612, 280, 397, 292, 291, 297, 3935], [7553, 232, 213, 874, 647, 2704, 433, 484, 2482, 1216, 2526, 305, 261, 266, 11327, 315, 233, 252, 339, 336, 331, 260, 261, 356, 1583], [9616, 237, 241, 1618, 608, 302, 252, 368, 6694, 239, 1210, 371, 309, 284, 590, 274, 235, 271, 314, 379, 392, 323, 307, 523], [264, 261, 190, 549, 501, 385, 279, 475, 1562, 192, 281, 286, 257, 248, 467, 287, 382, 276, 801, 245, 357, 225, 234, 245, 565], [199, 247, 220, 695, 507, 285, 210, 291, 354, 287, 3059, 473, 407, 210, 259, 241, 202, 249, 555, 294, 322, 282, 275, 637], [6414, 252, 164, 440, 431, 264, 162, 316, 528, 183, 377, 289, 209, 264, 677, 228, 175, 196, 460, 208, 326, 230, 265, 272, 425]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

