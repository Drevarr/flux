created: 20230520220730000
creator: Drevarr
modified: 20230705163530870
modifier: drevarr
tags: ChartData
title: 202305202207_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Belvyn Brightblade", "Drevarr Moonwillow", "Blanco Padre Guard", "Gabe Malhorn", "La Morte Vivante", "Alnerian", "Crusader Siolith", "Koralia Danai", "Sygaldry Verdandi", "Aronorf Xideliesi"];
const professions = ["Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Guardian", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5.0082, 1.0954, 28.964, 0.0, 0.0, 0.0, 28.7793, 39.7182, 17.529, 0.5925, 22.9143, 13.6068, 94.4813, 15.4837, 0.0207, 30.7085, 0.0, 14.6824, 48.5245, 0.0, 47.142, 0.0, 18.6327, 51.9275, 3.471, 0.0, 0.0, 5.2734, 0.0, 11.5218, 11.0926, 41.3424, 55.7609], [149.2429, 63.1201, 48.3546, 27.3323, 0.0, 0.0, 40.3116, 13.6366, 54.6504, 253.6166, 6.936, 281.0074, 0.0, 0.0], [279.7409, 19.8534, 11.839, 7.0871, 0.0, 2.4022, 0.0, 1.0286, 0.0, 44.3038, 101.1347, 0.0, 264.4934, 38.1085, 6.4315, 9.23, 0.0, 5.4978, 72.6271, 9.2412, 151.029, 0.0, 7.2587, 111.6212, 0.0, 5.8797, 4.9605, 25.3283, 2.4192, 0.0, 0.0, 28.3536, 6.0282], [38.4912, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 54.1181, 0.0, 10.3467, 234.7813, 157.8298, 41.7125, 0.0, 0.7547, 0.0, 56.4333, 209.1022, 124.4502, 165.579, 0.0, 0.0, 33.8062, 0.0, 125.5041, 0.0, 2.7965, 5.2056, 0.0, 0.0, 50.4504, 49.2007], [73.7815, 0.0, 80.6236, 422.8334, 0.0, 344.835, 25.4848, 38.6096, 193.8524, 60.3198, 26.3194, 74.1472, 0.0, 38.7612, 28.0505, 8.0388, 176.1476], [311.328, 35.3055, 38.6302, 81.27, 9.7165, 79.2007, 303.5972, 0.0, 270.921, 65.8601, 3.4949, 227.5063, 0.0585, 32.7402, 20.6125, 56.8888, 23.328, 9.7236, 25.8485, 48.4308, 117.1953], [37.5845, 40.8517, 9.466, 4.6248, 0.5847, 0.0, 67.0542, 33.3117, 28.8977, 282.4094, 23.3988, 237.9629, 37.6414, 58.9794, 0.0, 139.9867, 229.017, 52.2209, 5.5009, 85.7336, 0.0, 122.1624, 66.4849, 65.2783, 3.5208, 35.8308, 20.4977, 80.9424, 120.3867], [244.9701, 118.7096, 29.0128, 14.5954, 120.212, 3.4953, 82.1906, 78.8431, 27.7264, 65.9543, 80.02, 124.542, 185.4432, 50.3887, 15.8409, 135.0243, 86.2369, 60.5081, 389.3132, 55.9062, 215.34, 34.2856, 1.0547, 106.9006, 0.0, 20.2194, 35.518, 132.8737, 48.1248, 4.1958, 52.8906, 92.0304, 120.8299], [345.5623, 167.3847, 46.8686, 53.4257, 27.0928, 49.658, 63.8894, 58.0788, 41.8424, 403.3391, 91.0656, 575.0093, 130.2765, 36.6656, 103.0968, 99.1175, 102.8412, 437.678, 12.5766, 627.396, 52.7214, 26.4704, 230.7042, 80.0739, 44.4998, 157.8824, 27.7344, 31.8015, 43.0945, 132.0264, 271.6236], [274.1604, 305.7424, 97.8054, 172.6918, 42.8532, 17.8448, 0.0, 75.164, 23.1276, 135.6461, 394.3414, 135.9456, 786.4416, 131.2108, 71.4908, 84.753, 22.7317, 124.9618, 581.9745, 141.0048, 426.024, 103.0071, 240.6024, 118.9476, 39.3226, 200.7887, 90.4824, 18.7479, 92.4659, 124.4232, 224.5504], [284.7491, 250.9744, 139.9238, 170.8829, 0.0, 25.5725, 125.0591, 32.637, 8.5312, 151.0065, 257.5756, 144.7788, 659.7446, 34.5713, 52.7133, 74.8845, 54.0355, 70.0161, 608.7907, 40.4226, 725.172, 86.4231, 70.2086, 276.845, 0.2925, 78.1281, 101.3768, 260.7137, 28.2528, 237.8952, 112.4491, 311.2956, 519.3117]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

