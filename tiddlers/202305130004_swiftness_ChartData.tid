created: 20230513000456000
creator: Drevarr
modified: 20230705163529875
modifier: drevarr
tags: ChartData
title: 202305130004_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Nazhul Naxxremis", "Grasszanine", "Jupiter Four", "Husky Guard", "Venomina The Techie", "Eibh\u00ebar", "Mac Aaroni", "Be\u00eb", "Leetle Dim", "High Sorcer Baradun", "Smol Gluvs", "Black Raspberry Pie", "Tegan Parker", "Ryvalia Fazebringer", "Air One Com", "Blancooo Padreee", "Sub Train", "Artakama Nahid", "Tika Fiery", "Drevarr Moonwillow", "Solus Sanctus", "Miphest\u00f6", "Koralia Danai", "Ark Darkness", "Lucas Ryn", "Johosh The Great", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Scourge", "Spellbreaker", "Chronomancer", "Dragonhunter", "Scrapper", "Chronomancer", "Tempest", "Scourge", "Chronomancer", "Tempest", "Scourge", "Chronomancer", "Tempest", "Chronomancer", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[29.1341, 0.0, 499.3443, 273.7924, 6.3055, 32.6105, 0.0], [0.0, 109.792, 13.65, 25.392, 81.7075, 288.1267, 6.4152, 22.7571, 0.0, 0.0, 16.9814, 0.0, 19.9853, 105.9921, 16.0091, 152.0693], [53.7754, 41.6909, 51.2148, 196.5919, 0.0, 14.4839, 0.0, 18.109, 41.3568, 16.2359, 52.9408, 181.045, 20.6425, 51.0451, 0.0, 6.9815, 1.9872, 65.8174, 35.8915, 0.0, 97.1405, 0.0, 0.0, 0.0], [56.5747, 69.8342, 14.6093, 226.6642, 0.0, 143.1912, 26.484, 4.0474, 16.0128, 0.0, 58.8365, 0.0, 73.6685, 54.6825, 138.8621, 0.0, 19.0649, 0.0, 73.5264, 7.992, 99.96, 10.0654, 40.5065, 0.0, 60.3254, 0.0], [52.8077, 167.9731, 272.489, 381.9628, 23.3426, 75.8888, 8.7942, 0.0, 12.9024, 0.0, 42.2323, 0.0, 0.0, 93.035, 8.8704, 0.0, 56.5906, 0.0, 0.0, 17.7822, 64.68, 0.0, 46.9897, 0.0, 0.0], [13.7203, 0.0, 91.2674, 311.495, 28.5567, 233.6506, 53.1457, 125.3789, 59.904, 0.0, 25.7802, 0.0, 87.1117, 0.0, 0.0, 115.0575, 45.9648, 0.0, 39.2039, 0.0, 22.345, 69.6192, 0.0, 32.5231, 0.0, 0.0, 0.0], [0.0, 114.8314, 188.1159, 234.7433, 0.0, 89.2452, 30.5829, 0.0, 43.7184, 0.0, 71.3688, 0.0, 92.7066, 0.0, 0.0, 60.3175, 183.2141, 0.0, 78.8778, 0.0, 0.0, 15.8341, 7.9027, 27.6327, 69.2254, 67.4911, 12.1123], [0.0, 0.0, 178.2669, 386.4512, 24.737, 112.6623, 0.0, 0.0, 73.9584, 125.462, 0.0, 148.5952, 0.0, 0.0, 88.435, 214.0186, 0.0, 22.5557, 0.0, 0.0, 0.0, 45.7229, 0.0, 70.672, 0.0, 0.0], [36.9792, 76.2854, 118.6805, 423.705, 0.0, 43.7986, 0.0, 430.7909, 190.8864, 0.0, 0.0, 16.7846, 5.9825, 21.3928, 34.5, 16.7731, 13.9104, 35.646, 0.0, 21.7709, 15.0017, 34.3392, 0.0, 62.3671, 2.2707, 0.0, 18.7879], [120.407, 154.5062, 233.7496, 910.2475, 28.678, 238.7677, 28.6667, 0.0, 105.0048], [54.8122, 87.6557, 369.5016, 219.9316, 25.0402, 68.7769, 0.0, 2.4998, 83.9232, 0.0, 143.2442, 147.0912, 0.0, 0.0, 66.5275, 181.1981, 0.0, 50.6832, 0.0, 87.3485, 0.0, 54.4723, 0.0, 197.9245, 0.0, 73.3341, 0.0], [60.6182, 46.0454, 163.3293, 556.5616, 77.6064, 61.8385, 33.159, 3.5563, 18.72, 0.0, 0.0, 43.7363, 0.0, 0.0, 101.0275, 527.3856, 0.0, 0.0, 102.7162, 41.8248, 26.8598, 0.0, 48.5971, 1.8531, 0.0], [71.4355, 203.7773, 198.1291, 633.3132, 41.7134, 47.7015, 0.0, 17.2906, 24.9408, 0.0, 49.7523, 0.0, 0.0, 152.26, 196.681, 0.0, 107.3409, 0.0, 83.065, 70.1366, 0.0, 71.2614, 0.0, 0.0, 0.0], [0.0, 0.0, 124.0974, 279.6273, 0.0, 0.0, 2.7664, 20.5939, 0.0, 0.0, 0.0, 55.2269, 0.0, 7.5859, 83.605, 0.0, 77.5872, 426.6112, 0.0, 805.8317, 0.0, 72.3005, 0.0, 0.0, 0.0, 16.6803, 72.6051], [0.0, 45.4003, 258.7004, 948.8478, 66.8749, 214.57, 0.0, 10.9814, 108.0576, 0.0, 65.3939, 2.3317, 0.0, 108.1575, 87.575, 0.0, 49.072, 0.0, 0.0, 109.5091, 20.689, 132.5569, 0.0, 0.0], [54.0864, 179.424, 235.7194, 469.9355, 52.2024, 101.9945, 38.603, 5.1187, 21.7152, 64.7447, 71.6754, 115.0259, 58.0842, 76.59, 87.4138, 62.748, 63.7064, 36.8294, 30.2031, 136.9805, 174.6708, 35.6526, 38.6509, 59.2999], [164.7475, 49.271, 345.8641, 1344.7246, 12.9748, 332.0024, 13.6798, 31.0992, 45.792], [39.6749, 134.4269, 222.9157, 684.9298, 6.9725, 153.0785, 26.4333, 1.116, 55.9296, 43.8984, 0.0, 0.0, 107.2653, 17.2923, 73.6685, 53.5325, 200.2291, 75.492, 42.9632, 112.7405, 71.1121, 91.3987, 21.1999, 94.8902, 47.763, 50.4357, 51.3856], [123.7594, 103.8643, 442.2201, 887.3567, 212.5082, 250.4762, 0.0, 0.0, 74.9376, 0.0, 0.0, 0.0, 16.0026, 26.0066, 148.8289, 60.5475, 285.143, 20.8656, 151.311, 0.0, 6.359, 96.237, 87.9648, 85.14, 64.939, 9.4482, 0.0, 0.0], [27.5098, 293.1264, 418.9108, 1526.056, 106.8301, 247.4407, 79.414, 1.0267, 108.6336, 4.0295, 0.0, 5.9142, 247.9795, 0.0, 20.8849, 103.4425, 210.551, 79.5312, 59.9471, 0.0, 90.5722, 50.1831, 252.84, 59.7777, 137.4863, 24.5079, 19.3255, 0.0], [134.4384, 391.0234, 150.1973, 1053.8763, 299.2697, 335.2115, 22.2583, 46.3661, 143.8272, 38.089, 86.5917, 37.8953, 231.8566, 52.6258, 110.8678, 84.6975, 242.1619, 28.7712, 331.7565, 77.5397, 43.9392, 139.6147, 35.1628, 121.198, 16.3647, 227.0692, 61.5939], [183.6518, 130.9594, 497.867, 1189.8748, 12.9748, 272.2455, 0.0, 25.8912, 153.0432, 94.3925, 0.0, 173.4413, 0.0, 356.615, 587.2205, 42.552, 197.0266, 0.0, 98.8742, 0.0, 367.9469, 0.0, 314.3539, 5.1417, 5.922, 127.1335], [115.465, 232.4851, 566.6458, 1470.8487, 214.5696, 404.5954, 0.0, 55.2346, 87.7248, 24.2606, 74.2976, 14.5266, 139.5608, 214.245, 170.6342, 92.6424, 19.8034, 1.7496, 338.2656, 328.2048, 258.0614, 217.2669, 106.7229, 8.9225], [70.848, 32.0141, 832.4046, 2269.7839, 98.16, 296.7033, 0.0, 59.1778, 102.2976, 1.223, 47.2682, 138.6688, 85.2277, 135.5933, 390.655, 430.295, 165.0456, 190.3135], [96.3187, 666.8122, 333.0603, 2288.1863, 233.183, 537.6393, 28.7682, 36.5602, 123.0336, 75.6078, 8.5036, 285.8803, 182.0289, 131.215, 384.5722, 0.0, 214.6817, 7.7371, 12.0557, 180.4194, 240.1862, 34.7277, 118.894, 77.3082, 22.2865], [193.4669, 662.7802, 585.0306, 2659.377, 227.7869, 122.8964, 0.0, 54.3418, 101.952, 0.0, 0.0, 256.8832, 49.6388, 254.4278, 108.905, 230.3885, 0.0, 150.3712, 10.044, 194.2598, 32.0846, 179.7398, 41.4253, 331.9817, 43.2999, 60.8387, 33.7218], [188.8704, 671.0861, 828.6292, 2539.0879, 296.1169, 506.8501, 129.0319, 60.1152, 229.1904, 0.0, 29.4726, 26.7605, 130.9683, 107.5409, 216.4985, 224.4225, 528.8371, 74.5848, 401.5717, 90.5515, 274.7194, 32.9337, 115.6714, 66.0781, 237.6809, 173.9565, 24.1223, 55.9048], [314.496, 511.4995, 1122.4577, 2727.1518, 0.0, 200.3463, 31.0651, 142.2826, 292.032, 144.1373, 270.7802, 19.1392, 485.5875, 404.1677, 162.432, 311.0804, 148.5475, 245.7062, 79.7036, 282.0048, 51.3773, 260.1845, 136.7379, 4.7771]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

