created: 20230426221022000
creator: Drevarr
modified: 20230705163526827
modifier: drevarr
tags: ChartData
title: 202304262210_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Rey Peltrow", "Black Raspberry Pie", "Sister Elon\u00edth", "Zadie Miststep", "Zaylen Harker", "Tegan Parker", "Koralia Danai", "Miphest\u00f6", "Zefirokai", "Drevarr Moonwillow", "Jupi Jupi Jupi", "Lucas Ryn", "Sygaldry Verdandi", "Johosh The Great", "High Sorcer Baradun", "Bella Sassy", "Newtype Khan", "Grasszanine", "Blancooo Padreee", "Solo Bloodborn"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Tempest", "Firebrand", "Tempest", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[211.5282, 86.4067, 10.3193], [6.3733, 74.0532, 23.9587, 0.0, 0.0, 0.0, 12.5966, 80.8265, 18.8059, 24.9974, 0.0, 18.973, 20.5296, 0.0, 2.6413, 86.9885], [39.1709, 95.6008, 5.6175, 42.362, 41.0592, 5.2272, 13.9808, 132.0789], [2.5974, 78.4524, 10.5374, 6.2189, 12.3552, 4.8, 11.2666, 58.994, 15.3955, 36.2558, 0.9099, 72.6206, 11.3646, 1.5444, 0.0, 94.5701], [7.2631, 75.8862, 34.0524, 14.5564, 6.0826, 8.9856, 20.8901, 101.2654, 15.8827, 53.8112, 0.0, 21.7535, 31.0388, 1.0494, 12.9789, 124.0983], [11.3757, 138.9414, 22.4058, 15.6499, 0.0, 7.5264, 15.1786, 90.5814, 49.7918, 13.9299, 0.0, 45.6332, 47.9024, 0.0, 30.1475, 131.2809], [1.0582, 98.982, 27.0645, 9.7043, 29.6525, 20.0448, 32.6261, 146.7883, 25.237, 40.6447, 16.6745, 30.7493, 22.1182, 6.4944, 23.9996, 94.9691], [0.0962, 97.149, 34.2743, 7.5857, 11.088, 10.5984, 16.5869, 170.0143, 42.7762, 58.3909, 0.0, 10.795, 10.7536, 3.7818, 14.0263, 167.9916], [27.6689, 5.301, 105.8233, 60.2446, 17.8972, 441.7262], [12.2896, 115.479, 49.4703, 11.5495, 10.0109, 9.5616, 20.7336, 139.8205, 24.4574, 74.4198, 4.5296, 30.5039, 31.5276, 6.3558, 12.4324, 134.0741], [4.0885, 92.7498, 36.6036, 14.2831, 17.1072, 6.0288, 33.3302, 171.4079, 53.4946, 70.6034, 9.1581, 26.9056, 44.603, 0.0, 24.3184, 98.9594], [7.5857, 22.4928, 24.384, 39.433, 192.3113, 51.5458, 83.0067, 7.7933, 31.5671, 65.6214, 16.5132, 18.4892, 149.2372], [5.5796, 134.9088, 43.8134, 23.8507, 19.2614, 21.3504, 37.6334, 157.0078, 7.4054, 47.5142, 10.9977, 38.1095, 23.218, 0.0, 21.3583, 132.877], [6.4214, 100.4484, 45.4772, 19.9553, 32.6304, 17.1648, 39.3547, 250.8408, 50.6688, 101.3254, 8.4658, 54.4655, 32.5052, 2.7918, 13.9352, 176.3713], [15.5603, 47.658, 10.6483, 0.0, 0.0, 0.0, 60.7142, 334.9189, 59.2435, 75.5647, 0.0, 46.451, 59.5114, 2.2176, 0.0, 276.1288], [5.9644, 188.799, 57.1238, 18.8618, 36.5587, 20.0064, 47.6482, 271.7442, 68.7926, 93.8834, 17.3668, 34.7565, 65.4992, 5.3064, 30.2386, 207.4956], [290.3472, 95.2803, 40.1839, 44.9856, 40.8192, 55.081, 399.0227, 64.7976, 185.477, 22.4107, 67.6321, 95.316, 19.8396, 26.14, 353.5406], [360.0012, 166.4909, 48.3164, 48.9773, 23.3472, 90.8366, 491.4622, 82.0445, 236.8076, 26.2283, 109.7488, 93.6052, 14.2164, 41.6691, 503.9749], [36.2674, 483.5454, 143.7523, 71.347, 77.7427, 50.7264, 84.0298, 517.4753, 104.2608, 223.641, 33.3886, 95.4373, 156.1716, 21.0474, 33.563, 554.2527], [38.6243, 473.6472, 205.9784, 69.7068, 74.7014, 47.5392, 110.2402, 583.4371, 119.1691, 335.0799, 30.5601, 112.8564, 169.1248, 22.869, 49.2743, 576.9974]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

