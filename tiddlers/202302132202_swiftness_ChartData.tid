created: 20230213220222000
creator: Drevarr
modified: 20230705163519281
modifier: drevarr
tags: ChartData
title: 202302132202_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["High Sorcer Baradun", "Nelliel T", "Smol Gluvs", "Be\u00eb", "Dark Sidiuz", "Grasszanine", "Veron Blackburn", "Mac Chiato", "Uneeta Healah", "Ryvalia Fazebringer", "Tegan Parker", "Zady Stardust", "Blanco Padre Guard", "Mike The Archmagus", "Newtype Khan", "Arka\u00f1", "\u00c9\u00efbhear", "Arcanophage Farra", "Ravioli Fetabringer", "Koralia Danai", "Drevarr Moonwillow", "Gavann", "Zaylen Harker", "Sygaldry Verdandi", "Bella Sassy"];
const professions = ["Tempest", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Herald", "Tempest", "Scrapper", "Chronomancer", "Tempest", "Firebrand", "Firebrand", "Tempest", "Spellbreaker", "Chronomancer", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[206.1675, 98.3136, 464.326, 59.1636, 100.5216], [42.624, 289.6056, 12.496, 36.7495, 30.682, 211.288, 0.0, 59.192, 140.336, 43.3434, 72.372], [56.88, 233.2714, 32.3851, 0.0, 20.9764, 98.6585, 150.5157, 0.0, 85.8872, 171.84, 32.2044, 62.9592], [149.184, 355.1966, 70.4355, 0.0, 32.7065, 57.5023, 132.3245, 0.0, 96.8632, 41.17, 54.3696, 24.0648], [110.016, 262.8931, 1.1652, 12.2015, 123.0454, 60.5027, 0.0, 21.364, 345.47, 0.0, 130.0032], [207.792, 44.9616, 97.316, 0.0, 32.1632, 141.757, 0.0, 0.0, 352.63, 27.6078, 162.504], [394.848, 635.281, 4.902, 2.196, 32.0176], [82.08, 209.4682, 89.7219, 0.0, 47.5369, 51.4717, 276.3723, 78.7528, 572.084, 0.0, 19.7136], [16.9267, 92.9765, 31.1292, 95.5903, 252.252, 0.0, 65.856, 859.558, 34.1784, 41.0256], [37.296, 325.0459, 0.0, 12.492, 1.0697, 151.7701, 1044.043, 0.0, 0.0, 42.244, 0.0, 0.0], [249.552, 531.8693, 72.7258, 47.5187, 83.4233, 192.2882, 62.6496, 79.2624, 556.69, 75.4914, 85.4256], [0.0, 0.0, 5.7835, 145.3163, 378.7822, 77.6944, 1156.34, 87.42, 261.4272], [0.0, 68.1453, 161.5564, 0.0, 487.256, 115.6116, 62.4064, 1112.306, 186.8814, 227.5944], [325.296, 472.8902, 14.4246, 53.6829, 31.74, 354.9315, 70.746, 116.0712, 908.246, 45.6276, 171.5616], [384.48, 757.4707, 69.6319, 9.552, 33.2685, 75.3825, 188.2457, 0.0, 55.6248, 710.272, 121.4856, 167.5656], [307.44, 503.5699, 6.027, 0.0, 15.1204, 58.8248, 152.1328, 0.0, 51.3912, 874.236, 30.5406, 657.0312], [236.016, 661.2, 77.7885, 8.9562, 205.6223, 198.4868, 0.0, 99.8424, 1153.118, 45.4866, 69.1752], [366.48, 689.4994, 89.8827, 77.5058, 67.8707, 265.8617, 44.0544, 91.1008, 821.61, 141.9588, 249.2616], [645.84, 1041.5222, 97.557, 56.688, 16.2807, 103.684, 479.71, 28.2828, 206.9368, 1095.48, 0.0, 192.8736], [1038.96, 820.1525, 78.0697, 67.6974, 86.4386, 543.851, 52.92, 1329.254, 0.0, 258.6744], [676.944, 971.964, 94.1819, 0.0, 72.375, 220.9633, 353.045, 128.6936, 1664.342, 37.8726, 131.6016], [355.104, 1488.4934, 259.9646, 166.7779, 353.7423, 985.292, 0.0, 146.7648, 1828.664, 338.4168], [692.64, 1595.3434, 170.6043, 78.7748, 106.5406, 801.6278, 77.8904, 2141.914, 158.4558, 410.256], [728.064, 1709.0698, 272.782, 56.01, 139.8911, 100.1397, 507.738, 183.1596, 117.992, 2113.99, 0.0, 316.7496], [1244.304, 2415.2314, 380.2233, 94.6749, 228.3164, 870.7545, 104.364, 149.7832, 2755.884, 255.069, 531.912]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

