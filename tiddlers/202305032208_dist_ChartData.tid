created: 20230503220838000
creator: Drevarr
modified: 20230705163528052
modifier: drevarr
tags: ChartData
title: 202305032208_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Zadie Miststep", "Kosa\u00efr", "Tootsie Pop Rocks", "Sygaldry Verdandi", "Tribal S", "\u00c1rkantor", "Eibh\u00ebar", "Smol Daddy Tika", "Hauzzy", "Inedible Plant", "Mac Adaymia", "Oops All Beans", "Lucas Ryn", "Johosh The Great", "Artakama Nahid", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Berserker", "Tempest", "Catalyst", "Scrapper", "Firebrand", "Druid", "Vindicator", "Chronomancer", "Spellbreaker", "Berserker", "Vindicator", "Vindicator", "Spellbreaker", "Firebrand", "Willbender", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[420, 350, 463, 342, 295, 320, 1947, 266, 513, 629, 326, 356], [349, 510, 444, 647, 397, 848, 753, 453, 272, 995, 335, 343], [499, 211, 352, 336, 310, 1417, 624, 297, 394, 807, 319, 502], [602, 550, 617, 471, 299, 1092, 488, 334, 294, 464, 550, 408], [603, 366, 443, 366, 404, 1497, 388, 1886, 364, 1358, 528, 476], [612, 460, 476, 259, 336, 335, 672, 1761, 383], [409, 489, 487, 530, 192, 290, 422, 1750, 299, 648, 504, 334, 346], [544, 245, 500, 441, 215, 375, 293, 1464, 309, 568, 540, 378, 440], [484, 252, 253, 325, 270, 454, 1577, 770, 295, 674, 901, 472, 419], [494, 464, 444, 291, 251, 546, 372, 2053, 366, 590, 455, 400, 582], [594, 398, 558, 266, 360, 388, 1388, 2192, 384, 236, 1192, 633, 1258], [715, 302, 423, 287, 210, 1129, 951, 1496, 327, 283, 2846, 615, 16626], [508, 297, 225, 219, 1060, 1388, 2977, 209, 418], [449, 445, 351, 394, 272, 428, 570, 279, 282, 365, 364, 299, 238], [349, 450, 363, 508, 232, 313, 409, 305, 282, 671, 309, 259], [305, 412, 269, 210, 250, 561, 811, 295, 372, 725, 396, 400], [276, 366, 401, 457, 201, 206, 660, 412, 226, 227, 736, 298, 214], [228, 354, 218, 197, 172, 277, 186, 540, 184, 193]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

