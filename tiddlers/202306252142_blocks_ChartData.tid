created: 20230625214256000
creator: Drevarr
modified: 20230705163535923
modifier: drevarr
tags: ChartData
title: 202306252142_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Ateriuz", "Surethang", "Melpomene Vandrish", "Xanvias Tsolice", "Scythe User", "Fluffy No Care Bear", "Vesnan", "Drac Tepes", "Latedoctor", "Elonith Requiem", "Blaze All Might", "Wall Knot", "Govinda Ektar", "Drev Of The Dead", "No Reserv\u00e9", "Shrimp Tempsura", "Charr Surethang", "Jerryatric Reflexes", "Yngvar The Burdened", "Elonith Requiem", "Hayuf", "Hayuf", "Drevarr Moonwillow", "Koralia Danai", "Yedrax", "Gamora Titus", "Drumina", "Aronorf Xideliesi", "Ani Deasun", "Tacitus Kilgore I", "Booboo Hurts", "Wall Knot", "Gestern Yesteryear"];
const professions = ["Druid", "Berserker", "Guardian", "Chronomancer", "Weaver", "Reaper", "Berserker", "Scourge", "Scourge", "Reaper", "Scourge", "Firebrand", "Firebrand", "Vindicator", "Reaper", "Vindicator", "Tempest", "Spellbreaker", "Berserker", "Scourge", "Reaper", "Firebrand", "Dragonhunter", "Scrapper", "Firebrand", "Scrapper", "Dragonhunter", "Druid", "Firebrand", "Vindicator", "Spellbreaker", "Firebrand", "Dragonhunter", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 2, 4, 10, 8], [1, 4, 7, 7, 6], [13, 1, 3, 7, 2], [0, 1, 4, 0, 6, 0, 4, 5, 0, 1, 7], [0, 11, 6, 6, 6], [3, 1, 0, 0, 0, 3, 3, 2, 10, 4, 4], [0, 1, 1, 3, 1, 0, 7, 2, 10, 5], [0, 0, 1, 3, 1, 9, 5, 10, 3, 0, 1, 0, 2], [3, 22, 1, 3, 0, 1, 3, 3], [8, 13, 1, 1, 2, 6, 2, 3], [6, 6, 4, 1, 3, 5, 0, 7, 8], [9, 3, 0, 4, 1, 2, 1, 2, 6, 6, 8], [3, 14, 8, 7, 10], [4, 14, 19, 1, 0, 6, 4, 0], [10, 22, 2, 3, 11], [15, 4, 0, 0, 0, 4, 5, 1, 13, 8], [8, 16, 1, 1, 16, 2, 4, 2], [0, 2, 5, 1, 1, 5, 3, 9, 3, 3, 7, 12], [0, 7, 1, 6, 8, 11, 4, 2, 7, 3, 2, 3], [0, 5, 4, 3, 3, 8, 12, 1, 3, 8, 6, 5, 1], [7, 7, 11, 20, 3, 1, 11], [7, 17, 25, 2, 2, 5, 4], [0, 6, 0, 3, 1, 5, 13, 3, 15, 12, 7], [26, 2, 0, 1, 2, 7, 5, 2, 11, 2, 8, 7], [12, 5, 1, 0, 7, 9, 1, 10, 7, 14, 11], [5, 8, 6, 9, 13, 7, 3, 2, 9, 7, 7, 7], [7, 4, 0, 3, 1, 5, 12, 1, 15, 13, 19, 9], [16, 6, 0, 1, 3, 7, 2, 6, 5, 8, 6, 2, 17, 0, 0, 15, 1, 3, 3], [4, 12, 7, 12, 9, 16, 24, 4, 3, 15, 9, 7, 7], [10, 3, 0, 4, 10, 3, 9, 6, 14, 8, 13, 28, 1, 2, 19], [8, 8, 0, 3, 1, 5, 11, 2, 12, 6, 4, 9, 19, 24, 2, 5, 13], [0, 2, 0, 3, 18, 0, 8, 18, 24, 3, 33, 29, 2, 2, 2, 3, 1, 2], [13, 4, 5, 1, 15, 13, 6, 39, 3, 3, 27, 10, 2, 28], [10, 9, 5, 1, 4, 8, 4, 17, 7, 13, 14, 19, 22, 3, 5, 13, 7, 9, 7]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

