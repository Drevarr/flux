created: 20230503220838000
creator: Drevarr
modified: 20230705163528178
modifier: drevarr
tags: ChartData
title: 202305032208_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Maaaathexxs", "Tribal S", "Rozaalyna", "Oops All Beans", "Morton Saltbringer", "Blancooo Padreee", "Venomina The Fierce", "Arriasa", "Newtype Khan", "Smol Daddy Tika", "Smol Gluvs", "Primal Clone", "Elonith Requiem", "Be\u00eb", "Solus Nex", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Scourge", "Druid", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Spellbreaker", "Druid", "Spellbreaker", "Spellbreaker", "Scourge", "Chronomancer", "Scourge", "Scourge", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0622, 0.061, 0.0, 0.0, 0.0395, 0.0381], [0.0648, 0.061, 0.0, 0.0, 0.0, 0.0095, 0.0, 0.0, 0.0253], [0.0666, 0.0444, 0.1212, 0.0526, 0.0286, 0.0, 0.0, 0.023], [0.0683, 0.0444, 0.0, 0.0, 0.0286, 0.0, 0.0, 0.046, 0.0], [0.0081, 0.0, 0.0, 0.1215, 0.0999], [0.032, 0.024, 0.0, 0.0, 0.0238, 0.0, 0.0, 0.0196, 0.0, 0.0, 0.0978, 0.088], [0.0631, 0.0462, 0.0606, 0.0526, 0.0, 0.0, 0.0, 0.0069, 0.0, 0.0908, 0.0526], [0.0873, 0.1183, 0.0303, 0.0, 0.0263, 0.019, 0.0147, 0.0, 0.0598, 0.0, 0.0475, 0.0342], [0.0838, 0.0665, 0.0606, 0.0, 0.0, 0.1238, 0.0, 0.0, 0.0506, 0.0, 0.022, 0.1061, 0.0894], [0.0985, 0.0481, 0.0606, 0.0, 0.0, 0.0619, 0.0441, 0.0, 0.0449, 0.0, 0.0769, 0.0992, 0.1156], [0.1409, 0.0924, 0.0303, 0.0658, 0.0524, 0.0, 0.0, 0.0449, 0.0, 0.0549, 0.0964, 0.1038], [0.0985, 0.0591, 0.0303, 0.0, 0.0132, 0.0714, 0.0, 0.0, 0.0863, 0.0, 0.011, 0.1439, 0.1078], [0.146, 0.2121, 0.0, 0.1905, 0.0294, 0.0, 0.1427, 0.0278, 0.0549, 0.4218, 0.1735], [0.2472, 0.0, 0.1818, 0.0, 0.1184, 0.1429, 0.0, 0.0, 0.1151, 0.0556, 0.033, 0.2877, 0.1892], [0.2705, 0.1054, 0.0, 0.0, 0.0132, 0.0952, 0.0, 0.0, 0.1277, 0.0556, 0.011, 0.1858, 0.1984], [0.1901, 0.1738, 0.0, 0.0, 0.1184, 0.1286, 0.0, 0.0, 0.1692, 0.033, 0.2696, 0.1879], [0.2645, 0.2828, 0.0, 0.0, 0.1184, 0.1762, 0.0147, 0.0411, 0.1749, 0.0278, 0.0549, 0.4078, 0.2602]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

