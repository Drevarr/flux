created: 20230902151655000
creator: Drevarr
tags: ChartData
title: 202309021516_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Sofya De Nova", "Newtype Khan", "Elleerie", "Rod Reaper", "Phives", "Cat Wigglebooty", "Elizabeth Conbolt", "J\u00e2sm\u00eene", "Mistwalker Cael", "Forever Dreaming", "Lord Fluffernaut", "Xanvias Einzbern", "Sttrykkerr", "Venomina The Sly", "Luke The Ghastly", "Ao Kita", "Mortuus Araden", "Ryvalia Fazebringer", "Tekka Whitefang", "Daphne Agla\u00e9", "Elonith Requiem", "The Arch\u00eetect", "Zaedy Zae", "Vazd\u00e2h", "Drevarr Moonwillow", "Air One Com", "Tegan Parker", "Adrinz", "Budget Chicken", "Sttrykkerr", "Sub Train", "Greg The Knight", "Bella Sassy", "Koralia Danai", "Gamora Titus", "Gestern Yesteryear", "Lurker Holystrike", "Scarlet Merc\u00fcry", "Yummy Kiwi", "Tyrian Deathmachine", "Cupi Cupita", "High Sorcer Baradun", "Batoo Sai", "Philip Poundhouse", "Hypnodancerr", "Quinnquazy", "Cupi Cupita", "Auro Vivier", "Juchx", "Gorduxho Thief"];
const professions = ["Weaver", "Spellbreaker", "Reaper", "Reaper", "Specter", "Scrapper", "Tempest", "Tempest", "Herald", "Scourge", "Berserker", "Berserker", "Catalyst", "Druid", "Scourge", "Untamed", "Harbinger", "Chronomancer", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Druid", "Reaper", "Scrapper", "Firebrand", "Tempest", "Guardian", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Daredevil", "Herald", "Chronomancer", "Mesmer", "Herald", "Firebrand", "Weaver", "Deadeye"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[286.3991, 130.42, 191.2904, 162.972, 53.8857, 231.8667, 145.2979, 18.5217, 52.5714, 47.3235, 182.6349, 177.0789, 324.3709, 187.2178, 32.1011, 13.7959, 53.6129, 90.6957, 14.8438], [178.4807, 776.2222, 227.9381, 77.1275, 38.8, 45.6875, 314.9608, 239.0164, 342.0606, 21.7391, 433.2364, 185.9091, 251.7587, 34.8776, 76.3214, 34.1071, 80.6571, 0.0], [180.3247, 358.9231, 297.6586, 116.1806, 0.0, 0.0, 19.383, 245.2667, 33.6176, 0.0, 213.1311, 153.8378, 291.6923, 28.9579, 95.8605, 366.1017, 88.7899, 0.0], [231.7069, 42.4681, 222.2109, 94.7361, 0.0, 57.1562, 161.8511, 169.1364, 406.2295, 105.6364, 36.3429, 346.746, 138.0811, 262.8537, 46.7, 2.6479, 62.6071, 184.0, 38.8333, 10.551], [288.3486, 451.8235, 491.1788, 0.0, 146.56, 122.575, 0.7059, 2607.2903, 0.0], [285.8491, 54.25, 292.8425, 56.6667, 37.0, 17.72, 220.2766, 233.0492, 42.375, 406.0781, 86.6972, 197.1092, 34.2062, 34.617, 70.8571, 0.0, 65.0075, 0.0], [221.3853, 327.6667, 253.5408, 42.0986, 50.9697, 54.6957, 159.5625, 272.7344, 57.7419, 87.0, 190.629, 120.4312, 275.1599, 7.2222, 0.0, 85.6316, 86.9412, 0.0], [138.0476, 218.0, 188.8567, 31.1111, 0.0, 148.7045, 0.0, 159.0323, 10.6765, 257.0323, 190.254, 129.4821, 402.0475, 4.86, 37.4, 72.9661, 38.927, 0.0], [152.476, 93.8889, 209.0245, 37.1818, 25.28, 79.62, 0.0, 148.1967, 165.4062, 165.3889, 134.6667, 171.9643, 313.1638, 21.0288, 15.7917, 0.0, 105.6032, 79.9137, 15.1277], [436.3, 76.2424, 136.878, 257.9344, 453.3636, 546.5344, 7.5743, 0.0, 2.7193, 198.8308, 90.6043, 0.0], [296.3433, 223.5, 535.9161, 118.297, 0.0, 4.0571, 285.54, 24.087, 254.8906, 36.875], [175.5812, 351.0769, 246.0877, 56.6847, 6.1522, 0.0, 27.6327, 268.0952, 108.8871, 175.7879, 101.0227, 348.339, 108.9196, 181.1, 55.62, 0.0, 14.9273, 103.2419, 35.6449, 10.0213], [412.6623, 597.3889, 461.906], [172.7851, 170.7715, 43.8544, 128.6522, 0.0, 34.625, 0.2174, 221.2745, 53.2121, 378.3279, 138.6182, 261.5734, 0.0, 235.1562, 49.7353, 0.0], [342.806, 341.0833, 397.0778, 49.1468, 42.1282, 109.1786, 206.16], [147.8276, 4051.7143, 301.8118, 2287.7391, 86.3889], [0.0, 291.541, 21.4444, 120.9744, 693.2419, 279.1455, 343.4485, 75.7228, 0.0, 0.0, 156.0328, 86.1429, 4.2264], [114.1787, 449.6296, 146.2789, 51.0642, 0.0, 28.95, 139.22, 64.4583, 421.0156, 129.2188, 1.1818, 506.5357, 120.0619, 141.1326, 115.2772, 0.0, 0.0, 0.0, 30.1986, 0.0], [399.2295, 247.8919, 512.4913, 111.6893, 12.9583, 0.0, 28.9322, 62.6522, 4.9111], [223.2035, 495.7945, 143.5352, 247.6452, 147.0], [10.5238, 191.4677, 71.3529, 45.5682, 415.2698, 281.6404, 668.2353, 4.1132, 47.6, 61.4483, 157.2132, 0.0], [569.1852, 153.0522, 399.6656, 21.198, 39.3467, 55.6296, 145.7742, 206.6434, 50.1915], [168.8718, 4569.0, 149.9003, 113.5607, 0.0, 18.8125, 27.6939, 21.1364, 49.6935, 38.1176, 0.0, 121.9077, 196.1429, 214.9336, 26.7018, 98.5, 0.0, 105.1935, 61.1811, 0.0], [621.7969, 166.5714, 363.2957, 0.0, 39.75, 66.6222, 286.5085, 83.4627, 0.0], [101.7039, 498.0, 137.1063, 115.0921, 32.4474, 166.1333, 59.5, 0.0, 201.4844, 122.3939, 66.1818, 135.9623, 114.9469, 164.2334, 80.0, 6.8636, 0.0, 95.5806, 73.1, 0.0], [103.364, 243.6923, 243.8836, 76.1467, 0.0, 70.5789, 51.5714, 0.0, 171.4286, 0.0, 137.6296, 79.3694, 134.6246, 0.0, 7.8305, 0.0, 91.6786, 122.1128, 0.0], [100.4914, 425.8846, 153.3219, 66.3619, 0.0, 1483.0, 17.3148, 39.3333, 33.898, 22.5, 0.0, 294.3889, 44.0273, 116.0704, 394.92, 8.1279, 91.9286, 49.5179, 24.806, 0.0], [266.5932, 146.1909, 319.5854, 162.4412, 85.45, 120.8475, 352.7121, 0.0], [81.8961, 374.2381, 142.9456, 30.5238, 238.9592, 0.0, 103.6122, 91.8095, 6.1613, 20.8235, 66.0, 148.7258, 114.8571, 211.0697, 35.6139, 0.0, 0.0, 114.0566, 56.8222, 0.0], [318.2604, 63.7872, 514.9556, 133.4348, 225.375, 20.8, 0.0, 726.6333, 26.0813, 52.2353, 86.75, 9.6897, 10.1864, 121.4783, 145.5536], [118.4573, 527.4348, 163.7848, 26.2667, 0.0, 27.2333, 52.8542, 93.9565, 103.4894, 73.9697, 0.0, 106.7419, 69.1875, 166.6497, 33.4747, 0.0, 0.0, 8.1379, 67.6594, 0.0], [313.069, 1324.0, 291.392, 40.4912, 0.0, 62.7917], [98.8268, 610.4167, 115.1314, 39.1835, 0.0, 1239.0, 83.383, 0.0, 176.9365, 1.8667, 127.4444, 155.7895, 100.8673, 144.4014, 24.0, 21.8667, 1.8824, 31.6364, 6.1871, 0.0], [124.4148, 485.1111, 107.9722, 51.7453, 0.0, 29.6842, 7.3137, 0.0, 78.7377, 48.4516, 13.6667, 92.2821, 51.3947, 133.1126, 39.8137, 8.3714, 1.6727, 20.0786, 4.2432], [10.0526, 640.8197, 122.5089, 269.5053, 1.22, 0.0, 0.0, 42.1029, 0.0], [95.2018, 525.6087, 111.1271, 8.4722, 0.0, 0.0, 39.6863, 0.0, 36.1429, 66.75, 6.7143, 74.2742, 48.5088, 123.6517, 7.4272, 0.0, 4.9107, 39.694], [207.7391, 192.4511], [112.4936, 247.6, 200.0067, 22.5243, 10.05, 0.0, 34.2667], [93.2629, 201.4286, 147.1837, 47.1711, 0.0, 104.8125, 9.6957, 0.0, 151.0833, 90.75], [2185.7368], [50.6545, 44.7292, 18.15, 44.8, 99.7593, 106.27, 178.5811], [150.1545, 22.3636, 0.0, 324.9032, 81.8039, 57.9796], [18.2022, 116.814, 148.4576, 223.4426, 177.6667], [59.1633, 6.3333, 341.84, 151.9062], [126.2482, 0.0], [293.2545, 0.2083], [218.55], [25.4889, 0.0], [0.0, 0.0, 0.0], [0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

