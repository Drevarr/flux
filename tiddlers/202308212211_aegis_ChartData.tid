created: 20230821221155000
creator: Drevarr
tags: ChartData
title: 202308212211_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Tootsie Pop Rocks", "Ryvalia Fazebringer", "Darks Na", "Drevarr Moonwillow", "Hayuf", "Gavann", "Sub Train", "Sister Elon\u00edth", "Crusader Siolith", "Rafaellagabriela", "Solus Luxes", "Koralia Danai", "Bella Sassy"];
const professions = ["Firebrand", "Scrapper", "Chronomancer", "Dragonhunter", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.3493, 16.6785, 1.9051, 0.0, 105.1924, 4.1508, 0.0, 14.5435, 21.3228, 75.7978, 50.4972], [0.0, 12.6974, 0.0, 13.4003, 29.8292, 0.0, 6.2073, 8.6554, 32.0204, 13.1472, 18.9846, 0.0, 13.8521, 5.9049, 19.8161, 34.9029, 5.2205, 0.0, 16.7891, 14.1754, 26.6152, 0.0, 3.8203, 0.4013, 0.0, 18.3328, 0.0, 0.4738, 7.3771, 0.6768, 12.2289, 15.309], [2.1665, 4.8859, 0.0, 0.0, 2.0588, 1.6435, 0.0, 0.0, 23.3965, 27.8485, 35.109, 4.293, 0.0, 2.6426, 94.6971, 0.0, 0.0, 16.8995, 0.0, 0.0, 38.3424, 8.9389, 19.4789, 0.0, 13.9392, 0.0, 0.0, 0.0, 3.9875, 57.1445, 0.0, 0.0, 23.5305], [1.1461, 24.0732, 0.0, 8.3311, 4.0033, 0.0, 6.2073, 35.0272, 3.3592, 8.217, 7.7751, 0.0, 7.3471, 21.9794, 36.9525, 0.0, 10.1182, 62.0541, 0.0, 29.4336, 21.6416, 0.0, 2.8589, 3.0202, 48.204, 17.123, 0.0, 3.3558, 2.4139, 6.9936, 1.6285, 37.989], [9.8447, 14.3562, 5.2423, 19.3207, 36.9634, 0.0632, 0.0, 12.4659, 17.0853, 32.2913, 19.6461, 27.189, 0.0, 2.6136, 6.2329, 18.3352, 7.0155, 26.2103, 2.5133, 0.5451, 26.6772, 29.6396, 11.0932, 11.9163, 6.7795, 0.0, 18.1777, 0.0, 6.5537, 1.5341, 7.8396, 23.8953, 23.6723], [23.6947, 0.0, 66.7906, 0.0, 68.9733, 52.567, 15.4583, 0.0, 4.4781, 41.6064, 86.0184, 32.8812, 0.0, 38.493, 43.4731, 19.0444, 30.3799, 44.9347], [119.2691, 47.2811, 22.9567, 5.3194, 87.0131, 34.2126, 20.7972, 7.1471, 22.2737, 257.9566, 117.9094, 0.0, 15.6616, 18.341, 0.0, 46.7098, 163.858, 91.6619, 93.4633, 56.18, 69.7555, 8.2344, 51.2253, 99.414], [2.2143, 53.0816, 9.545, 16.4038, 83.9336, 5.2675, 0.0, 28.7793, 46.1619, 62.2528, 25.4727, 69.6897, 0.0, 121.3872, 78.8413, 114.454, 9.9265, 96.4993, 62.9517, 32.8877, 88.9898, 91.6744, 43.3136, 17.255, 23.9616, 55.2776, 0.0, 27.9124, 51.0758, 33.4828, 23.8657, 113.589], [91.3763, 142.1924, 104.331, 154.2633, 133.7307, 138.9903, 59.1872, 56.0648, 66.1267, 106.002, 125.9722, 79.2364, 67.9056, 40.42, 115.0645, 174.3525], [36.0337, 96.5723, 28.6027, 47.9119, 72.0115, 107.9205, 0.0, 33.8067, 19.5196, 57.7017, 65.2878, 60.9606, 0.0, 48.7582, 152.4339, 155.5671, 72.6295, 55.5422, 15.0797, 8.3219, 63.1, 54.4401, 31.0892, 35.7489, 32.9472, 66.0582, 45.3823, 49.6264, 54.6629, 19.4392, 40.9802, 28.0192], [47.3756, 18.4828, 106.7346, 28.8342, 45.4581, 0.0, 55.3502, 98.9618, 244.1402, 49.5452, 71.7959, 32.8522, 46.4789, 59.1624, 70.5705, 29.2438, 18.216, 79.897, 212.589, 34.2151, 31.8714, 42.441, 50.4667, 13.0096, 69.998, 101.115], [61.9996, 64.5424, 31.5641, 123.6642, 142.443, 66.2019, 110.3868, 129.0965, 81.5046, 84.3041, 170.7642, 145.9143, 35.919, 81.5734, 268.1262, 274.8164, 12.0807, 103.3344, 106.4554, 198.5618, 176.6014, 129.2448, 20.4727, 48.0194, 90.6682, 68.796, 56.9527, 0.0, 81.2498, 130.0133, 35.72, 125.6352, 168.0682], [45.1934, 151.6143, 40.5389, 70.0918, 156.1367, 36.3036, 11.4048, 96.444, 100.4833, 126.9979, 161.2026, 168.0948, 143.2834, 290.871, 328.4822, 134.954, 198.542, 91.9741, 144.9966, 242.5562, 192.8927, 18.0695, 104.3878, 138.5261, 43.8048, 101.1252, 81.6024, 67.9451, 134.2771, 13.2916, 92.5609, 218.862], [79.5544, 183.8554, 14.7096, 79.5933, 198.702, 123.3649, 45.6192, 82.7469, 32.097, 183.2368, 175.9185, 231.9174, 39.7341, 93.4217, 480.5932, 265.8604, 63.2269, 118.6731, 142.3594, 113.2354, 136.0933, 245.1149, 46.5933, 101.1747, 95.5046, 55.341, 137.2945, 82.9528, 50.6923, 46.1352, 8.4224, 48.0274, 156.6337]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

