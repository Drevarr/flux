created: 20230816221734000
creator: Drevarr
tags: ChartData
title: 202308162217_dmgAll_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Morton Saltbringer", "Aspros Gemeos", "Victoria Raskae", "Cura Ativos", "Vanhelsing Wizard", "Narciza", "Solus Sanctus", "Newtype Khan", "Lumerence", "Y U So Mean", "Civil Rules", "Hawaiian Supreme", "Luke The Ghastly", "Mort\u00e4rion", "Daphne Agla\u00e9", "Name Is What", "Tootsie Pop Rocks", "Rahani Sunray", "Glorious Gluvs", "Blancooo Padreee", "Necrotic Windrunner", "Raziel Umbra", "Darks Na", "Rina Of Theros", "Alarics Bane", "Inedible Plant", "Eibh\u00ebar", "K\u00e2 \u00d4tik R\u00e6j", "Be\u00eb", "Palm Sauce", "Lord Erin The Wise", "Mistwalker Cael", "Mike The Archmagus", "Xanvias Einzbern"];
const professions = ["Tempest", "Chronomancer", "Spellbreaker", "Renegade", "Dragonhunter", "Virtuoso", "Chronomancer", "Firebrand", "Spellbreaker", "Virtuoso", "Mirage", "Berserker", "Berserker", "Scourge", "Scrapper", "Reaper", "Reaper", "Scrapper", "Chronomancer", "Berserker", "Berserker", "Reaper", "Chronomancer", "Dragonhunter", "Reaper", "Reaper", "Vindicator", "Chronomancer", "Berserker", "Reaper", "Vindicator", "Weaver", "Vindicator", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage All per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[388.0851, 652.5057, 212.9541, 0.0, 362.6882, 317.3797, 87.4, 338.1714, 177.8319, 420.5481, 94.8556, 0.1, 627.2842, 403.5532, 563.72, 110.1045, 90.9041], [594.2889, 1033.9714, 214.7345, 1918.875, 499.4074, 419.1667, 1315.4737], [756.4595, 360.3316, 325.1607, 448.0851, 633.6092, 699.9817, 0.0, 753.6, 641.7975, 635.8, 358.1], [565.7632, 1492.925, 795.6667, 1118.5185, 792.7432, 1321.0374, 656.9018, 514.1702], [1623.2618, 1204.4776, 874.3425, 542.9355, 512.7561], [706.1475, 1024.1579, 407.45, 821.6429, 669.1757, 529.8717, 994.9911, 926.8936, 703.6552, 544.1743, 523.0706, 314.2342], [582.6786, 256.9574, 629.4483, 1305.2569, 228.0, 1233.1059, 1105.5886, 1345.2444, 565.5429], [167.2131, 46.8421, 254.625, 139.5833, 262.2963, 588.2973, 149.2941, 237.7857, 289.8936, 518.2874, 442.8257, 48.7, 510.2353, 143.2595, 195.8444, 948.5286, 145.0973, 316.7212, 92.5444, 248.0667, 537.4947, 184.1064, 117.9127, 173.4776, 1115.137, 215.7097, 556.6707], [284.8852, 210.7368, 0.0, 403.7619, 462.7778, 648.7703, 644.6684, 148.6429, 243.7021, 502.9425, 295.7156, 350.5941, 457.1203, 89.1556, 239.3, 420.9115, 392.1058, 114.1037, 127.4, 464.6632, 395.0426, 520.3455, 378.6119, 140.8082, 92.1774, 150.1707], [381.082, 188.7368, 490.55, 803.5476, 264.8148, 1413.4054, 1196.9465, 125.6607, 184.7021, 0.0, 139.6881, 51.9667, 415.6176, 2300.9747, 233.6444, 0.0, 89.3274], [1754.2301, 1745.9712, 957.1704, 578.0667, 1316.9579, 1927.7766], [211.9912, 1971.1731, 108.137, 1284.5213, 1827.9418, 1862.0448, 0.0], [56.55, 478.4286, 1022.6852, 37.5676, 1587.631, 278.9464, 429.766, 2069.9425, 39.7431, 15.8, 1260.1235, 674.2025, 582.2889, 948.1], [1114.1529, 800.3228, 312.1111, 791.4857, 213.7168, 1379.8558, 169.3593, 68.1333, 1292.9684, 1434.5213, 636.5782, 1326.1791], [3293.9344, 1649.0526, 2749.3, 2211.631, 2258.8148, 617.7432, 2801.7005, 1404.7857], [1507.0, 986.5946, 475.8717, 671.4821, 710.9149, 715.4713, 621.1651, 0.0, 760.2765, 649.1392, 239.0, 276.3714, 474.3982, 1030.1635, 75.0778, 88.8667, 546.2842, 1204.2553, 1037.6218, 529.403, 31.7534, 99.5968], [944.5, 539.8108, 639.9198, 54.6161, 1981.6383, 718.5287, 177.5505, 808.0177, 1655.2788, 166.5778, 287.2667, 673.0842, 1047.9149, 1595.7527, 511.791, 604.8904, 743.4677], [179.7705, 119.3158, 369.3, 166.3333, 2440.8704, 754.0946, 1275.0695, 733.4107, 809.1702, 363.4713, 1539.4587, 42.0294, 134.4494, 31.9111, 19.2143, 240.4159, 504.6731, 202.063, 975.0842, 370.0851, 1767.6255, 747.6418, 57.4932, 13.8871], [534.4754, 139.1316, 1040.9, 568.3571, 402.6667, 603.3649, 484.2834, 1008.3661, 1227.5106, 845.2989, 1028.5321, 71.9333, 837.0647, 677.2342, 243.5111, 883.1143, 535.531, 893.2981, 183.8963, 291.8333, 706.1789, 959.6702, 557.2945, 216.791, 931.8767, 1270.3871, 807.2073], [572.4754, 782.0263, 1819.15, 1855.4881, 652.7037, 1335.3784, 832.5936, 764.6607, 1569.0, 764.6782, 545.5505, 87.2, 886.7588, 826.1835, 580.5778, 27.2714, 221.2478, 196.2885, 108.8852, 1032.0667, 592.2842, 808.6489, 585.9091, 81.8806, 398.4658, 506.9516, 1375.8171], [166.2, 751.8929, 625.9444, 943.0946, 1180.5241, 320.9821, 517.1915, 359.1954, 245.8991, 0.0, 917.1882, 1360.019, 447.2889, 836.9857, 912.2389, 1341.0, 135.8259, 186.3, 733.4, 740.5319, 1620.3673, 756.2687, 71.4247, 888.3226], [790.8148, 932.527, 1362.8503, 771.7589, 810.1277, 1428.3563, 373.3761, 1037.1588, 1082.0253, 157.4444, 649.0571, 605.6637, 594.5577, 185.1148, 174.7667, 920.2421, 655.5426, 1585.0473, 672.5373, 24.2329, 958.4194, 169.6098], [420.8852, 1650.9474, 1548.15, 1133.7857, 1696.537, 1666.5405, 809.8556, 937.2768, 838.9787, 356.9195, 1308.422, 49.8, 1241.3412, 293.8608, 964.8222, 740.4857, 362.6372, 1158.2212, 208.3111, 102.1333, 1131.0421, 1036.7766, 456.6945, 693.5821, 265.7397, 1350.8226, 855.8049], [0.0, 2362.3684, 1662.3, 1048.0357, 2009.3333, 792.2162, 1802.9198, 1592.5625, 1667.0851, 1990.7126, 3489.5963, 1770.9941, 881.7911, 1383.3111, 440.6571, 0.0, 320.3741, 719.3, 1193.3474], [2894.8889, 1361.1622, 740.1711, 722.2232, 1649.3404, 2087.5632, 902.7339, 52.3333, 1359.5941, 611.6203, 1417.3556, 1153.9714, 382.4956, 2701.1923, 388.6296, 368.3667, 1229.8316, 2114.883, 1263.9855, 1145.3582, 577.6027, 483.8226, 1194.7683], [2378.377, 1683.5526, 1652.875, 3027.1548, 2586.3519, 3379.5811, 2388.2567, 3537.2128, 980.4138, 2277.3945, 176.4, 3216.3176, 1425.0633, 1709.4444, 1865.3571, 853.9292], [1849.6393, 1428.2368, 2255.925, 1208.7738, 2008.9815, 3076.0811, 764.5989, 565.6607, 2108.6596, 3034.1839, 1792.5596, 658.0059, 1252.7342, 1083.9111, 644.2429, 817.3717, 3585.8269, 532.3519, 1153.1333, 2079.3474, 717.117, 1189.76, 569.1642, 95.3151, 1462.8065, 734.939], [1059.4918, 2426.1316, 1310.8, 1384.0238, 1695.7222, 2352.473, 1299.1604, 1750.3839, 1326.2766, 1986.8966, 1962.8349, 232.0, 1026.2294, 714.0633, 1742.8222, 1766.3286, 1208.6283, 2335.8558, 331.6815, 568.3, 1724.4947, 1718.734, 1727.7382, 653.9104, 1850.9863, 2303.4677, 2308.4146], [1752.7869, 2129.2105, 1734.75, 1985.7381, 2065.4074, 6833.473, 2672.5989, 1118.9018, 1135.0213, 432.8276, 1049.0459, 0.0, 2687.7176, 362.962, 1336.7111, 2764.0, 1179.5841, 1954.5673, 126.8111, 632.3, 1800.3263, 1687.4574, 963.7636, 1170.4179, 1347.8493], [2439.7593, 2884.4054, 1714.1765, 832.1696, 2663.2553, 2826.1264, 3019.0183, 405.0667, 819.7118, 1894.9494, 1824.8222, 2415.8143, 862.0973, 3407.2115, 388.0185, 428.2333, 2408.9158, 1567.9468, 1695.68, 1216.0149, 1825.3562, 2428.7419, 1789.8659], [2221.0656, 1803.5789, 2708.925, 1065.2738, 1237.9444, 3491.2297, 1286.369, 1116.1607, 3230.766, 3888.2644, 2093.945, 173.9333, 2864.3941, 1656.4304, 2131.1778, 1648.6857, 426.7611, 2291.1058, 364.1815, 850.1333, 1586.9263, 2428.5638, 1984.5164, 1389.5075, 1088.5479, 1838.9677, 3188.2439], [4603.5246, 4135.6053, 3062.675, 2985.25, 2647.4074, 4777.2973, 3175.1016, 2308.4375, 432.2766, 4834.3448, 2747.6789, 3424.2176, 3636.1456, 2487.9111, 3172.2857, 1121.7876, 4043.5481, 736.2481, 535.5333, 3126.8737, 3861.4787, 2878.4836, 1911.8806, 1930.5753], [1606.4918, 4299.6053, 1700.75, 3615.4762, 7292.6852, 7366.5405, 4250.5668, 1941.1964, 4814.6809, 2263.5862, 6354.2752, 4180.4235, 3935.0759, 2395.5333, 2975.3, 1544.885, 5060.2981, 755.5519, 948.8333, 4642.3053, 3721.6383, 2712.88, 2148.5075, 1923.5205, 4649.3871, 1073.622], [1978.9737, 7273.4, 4680.6667, 2220.0185, 6468.0676, 2047.107, 5261.3214, 9799.4043, 7188.7701, 7426.8716, 418.0, 6053.5765, 2690.3101, 1758.9111, 5326.7571, 3012.469, 4024.1538, 1217.1593, 2633.8333, 3560.2316, 4449.617, 1408.7273, 2860.2537, 5370.863, 3757.5161, 4842.2195], [3482.4262, 2099.4474, 3531.05, 3871.1548, 7266.5185, 8268.7568, 6731.6738, 5783.3571, 8107.1702, 8436.954, 6720.578, 456.9, 4289.4529, 3667.6899, 4228.9111, 3360.3143, 1755.9115, 8046.8558, 316.0222, 1247.7667, 4430.7158, 6692.7447, 1857.4909, 3729.2239, 3384.6164, 3600.4677]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

