created: 20230610101822000
creator: Drevarr
modified: 20230705163534529
modifier: drevarr
tags: ChartData
title: 202306101018_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["F\u00e2ble", "Gamora Titus", "Cat Noises", "Arriasa", "Ryvalia Fazebringer", "Aronorf Xideliesi", "Sakis Ranger", "Drevarr Moonwillow", "Tomitigas"];
const professions = ["Vindicator", "Firebrand", "Virtuoso", "Druid", "Chronomancer", "Firebrand", "Druid", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 5.9821, 83.3667, 29.2143], [13.1667, 0.0, 13.875, 8.0175, 8.3148, 16.8448, 6.0106, 15.9032, 0.0, 0.0, 2.0, 17.1647, 6.0, 9.1268, 26.9474, 35.8795], [3.975, 1.4792, 4.0, 18.1647, 1.0, 1.0, 24.1579, 17.5663, 0.0, 9.0411, 34.3403, 19.9333, 6.9821, 26.7778], [55.4615, 66.3, 0.0, 17.0833, 24.1754, 62.5741, 0.0, 71.5638, 38.3226, 42.9875, 35.4583, 0.0], [0.0, 13.7667, 0.9792, 10.0175, 7.963, 5.9483, 0.0, 1.0, 9.95, 0.0, 18.1781, 3.9765, 0.0, 0.0, 13.2632, 20.4337, 14.9412, 12.3562, 58.4346, 15.419, 0.0, 13.1889, 0.0], [18.9815, 19.8276, 14.617, 3.0323, 22.325, 5.0, 21.2466, 10.9882, 20.6607, 6.0, 28.4035, 25.8193, 28.5765, 5.0137, 47.0628, 26.9048, 0.0, 45.5556, 18.6429], [65.5385, 35.7333, 0.0, 44.3958, 25.614, 39.1852, 47.6034, 52.6383, 41.5484, 54.0375, 27.5833, 57.2877, 62.4211, 76.4337], [27.8462, 19.1667, 0.0, 4.3958, 28.9298, 12.9259, 13.2069, 32.0957, 18.7742, 20.9125, 0.0, 16.6027, 14.1059, 19.3036, 6.0704, 47.8421, 58.1446, 77.6, 57.2055, 124.0314, 57.0571, 22.2143], [26.0385, 33.7667, 0.0, 26.9167, 48.6667, 29.5926, 42.8793, 47.9043, 75.55, 21.9167, 60.5342, 62.3529, 45.4643, 14.1408, 93.8509, 67.1205, 75.2235, 28.3562, 133.356, 48.6762]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

