created: 20230408223537000
creator: Drevarr
modified: 20230705163524931
modifier: drevarr
tags: ChartData
title: 202304082235_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "Panther B Me", "Anita Strips", "Tribal S", "Sp\u00edcy Cheese", "Xyntharos", "Zadie Miststep", "Sygaldry Verdandi", "Newtype Khan", "Smol Daddy Tika", "Grasszanine", "Smol Gluvs", "Cthullun", "Xanvias Einzbern", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Firebrand", "Scourge", "Chronomancer", "Druid", "Berserker", "Vindicator", "Tempest", "Firebrand", "Spellbreaker", "Berserker", "Spellbreaker", "Scourge", "Chronomancer", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[565, 369, 480, 525, 715, 314, 629, 833, 439, 461, 756, 431, 425, 708, 482, 402, 18414, 458, 697, 1805, 726, 2894, 2521, 2275, 315, 429, 215, 2804, 383], [681, 561, 654, 353, 703, 338, 552, 258, 554, 498, 1625, 523, 369, 334, 602, 18887, 15315, 500, 2718, 1332, 753, 2317, 3971, 682, 297, 268, 219, 406, 469, 247, 383, 534], [342, 641, 413, 832, 833, 454, 478, 540, 492, 1112, 262, 539, 376, 381, 823, 336, 277, 5360, 1916, 649, 4505, 237, 1301, 209, 279, 423, 201, 777, 356, 316, 1062], [296, 490, 955, 544, 553, 297, 477, 1655, 293, 382, 1803, 436, 1629, 1407, 449, 3561, 1074, 3192, 1094, 677, 1839, 4582, 2624, 222, 571, 292, 326, 425, 281, 393, 349], [312, 537, 829, 613, 620, 396, 695, 586, 751, 20004, 558, 455, 445, 6773, 5235, 2021, 2908, 959, 579, 1856, 488, 296, 263, 261, 316, 241, 273, 381], [360, 611, 403, 347, 475, 365, 370, 1151, 361, 344, 882, 379, 322, 640, 324, 3802, 227, 2502, 1727, 3501, 738, 2749, 346], [262, 504, 322, 454, 684, 280, 300, 1133, 923, 1204, 1309, 327, 227, 251, 665, 4812, 3025, 527, 640, 2144, 406, 899, 444, 431, 328, 745, 306, 428, 381], [298, 649, 405, 584, 381, 366, 1500, 499, 625, 830, 392, 601, 652, 1212, 785, 2432, 338, 1098, 1406, 528, 4024, 4240, 1319, 222, 335, 184, 215, 507, 250, 2612, 344], [516, 315, 288, 459, 577, 380, 348, 760, 1415, 766, 1568, 455, 466, 319, 217, 4164, 331, 592, 1611, 2023, 3229, 5936, 3264, 2018, 196, 141, 318, 318, 224, 2813, 382], [411, 347, 754, 571, 466, 507, 14520, 339, 1354, 1002, 2523, 551, 432, 365, 2423, 234, 230, 227, 325, 352, 182, 2455, 917], [506, 592, 620, 856, 844, 312, 578, 1041, 1140, 1375, 2358, 280, 201, 318, 321, 1045, 5469, 2445, 926, 3290, 696, 223, 1778, 165, 241, 147, 294, 171, 3747, 407], [325, 511, 302, 423, 353, 282, 311, 475, 268, 410, 1107, 294, 347, 285, 508, 7637, 222, 2704, 1894, 1993, 587, 4555, 264, 1564, 220, 221, 211, 119, 359, 213, 252, 409], [283, 210, 540, 428, 363, 269, 272, 1565, 213, 573, 651, 318, 521, 313, 287, 806, 3841, 6047, 1515, 376, 682, 4002, 5023, 1454, 176, 623, 130, 507, 350, 163, 1896], [251, 357, 301, 529, 511, 245, 536, 474, 258, 455, 886, 304, 232, 283, 331, 9394, 3162, 550, 3459, 1408, 301, 1837, 354], [204, 452, 809, 348, 311, 223, 210, 569, 350, 391, 1431, 202, 312, 328, 298, 619, 283, 396, 2356, 1817, 586, 2682, 310, 540, 182, 186, 229, 258, 306, 184, 232, 237], [197, 270, 517, 342, 186, 225, 299, 218, 271, 556, 307, 274, 443, 392, 619, 234, 195, 925, 388, 607, 3671, 323, 1049, 201, 161, 164, 157, 345, 172, 207, 243]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

