created: 20230605220452000
creator: Drevarr
modified: 20230705163533696
modifier: drevarr
tags: ChartData
title: 202306052204_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Al\u00ee\u00e7ization", "No Reserv\u00e9", "Skye Nightroad", "Be\u00eb", "Rozaalyna", "Slingsshot", "Black Raspberry Pie", "Aira Draugr", "Melody Phoenixstorm", "Belvyn Brightblade", "Tegan Parker", "Sumatra Satyricon", "Oo Dads Mad", "Miphest\u00f6", "Cat Wigglebooty", "Cedryn X", "Be\u00eb", "Gabe Malhorn", "My Birthday Girl", "Koralia Danai", "Rozaalyna", "Sister Elonith", "Mistwalker Cael", "Jeckyll Mbs", "Tootsie Pop Rocks", "Solus Sanctus", "Ak\u00e1nt\u00f3r", "Kary\u00edna", "Duke Silvver", "Crusader Siolith", "Etchery", "Zaylen Harker", "Xanvias Einzbern", "Bella Sassy", "Newtype Khan", "Blanco Padre Guard", "Ryvalia Fazebringer", "Mildly Ecstatic", "Johosh Of The North", "Drevarr Moonwillow", "Smol Gluvs", "Lord Erin The Wise", "Sygaldry Verdandi", "Stoic Rapidfire", "Primal Clone", "Cyclotechnist Farra", "Zayde Sunsabre", "Venomina The Siren", "Artakama Nahid", "Eibh\u00ebar"];
const professions = ["Firebrand", "Vindicator", "Scrapper", "Reaper", "Reaper", "Untamed", "Chronomancer", "Herald", "Scrapper", "Firebrand", "Tempest", "Soulbeast", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Scourge", "Firebrand", "Scrapper", "Firebrand", "Scourge", "Berserker", "Vindicator", "Berserker", "Scrapper", "Firebrand", "Druid", "Vindicator", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Scourge", "Tempest", "Scrapper", "Scourge", "Weaver", "Firebrand", "Druid", "Chronomancer", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0909, 0.1942, 0.1831, 0.0465, 0.1875, 0.5538, 0.0559, 0.1356, 0.0667], [0.04, 0.2121, 0.4466, 0.2254, 0.093, 0.1875, 0.5354, 0.0505, 0.0847, 0.0444], [0.1515, 0.2233, 0.2254, 0.0698, 0.1042, 0.5785, 0.117, 0.0339, 0.0], [0.0, 0.027, 0.04, 0.0909, 0.2816, 0.2958, 0.0698, 0.3125, 0.5508, 0.0904, 0.0678, 0.0222], [0.0, 0.0, 0.04, 0.1212, 0.3592, 0.5352, 0.0465, 0.2292, 0.5385, 0.0957, 0.0678, 0.0222], [0.0, 0.3437], [0.0541, 0.0, 0.1818, 0.2427, 0.6761, 0.0465, 0.1458, 0.6062, 0.1303, 0.0339, 0.1333], [0.0, 0.3169, 0.25, 0.2487, 0.1, 0.0541], [0.0, 0.2578, 0.3654, 0.5599, 0.0667, 0.1622], [0.0833, 0.2664, 0.1346, 0.6029, 0.0333, 0.0], [0.0, 0.585, 0.0, 0.1892, 0.0, 0.2424, 0.1165, 0.2958, 0.1395, 0.2292, 0.5323, 0.0638, 0.2034, 0.1111], [0.0278, 0.3921, 0.4038, 0.4061, 0.0, 0.0, 0.04, 0.0, 0.2524, 0.4085, 0.0, 0.1667, 0.0985, 0.0904, 0.0169, 0.0], [0.0, 0.4533, 0.1923, 0.5886, 0.0333, 0.0541], [0.0, 0.0962, 0.6995, 0.0, 0.027, 0.0, 0.4242, 0.5534, 0.2113, 0.0, 0.1458, 0.5692, 0.2181, 0.0678, 0.1778], [0.0, 0.3824, 0.1538, 0.2987, 0.0, 0.0, 0.0, 0.3333, 0.1553, 0.3944, 0.1163, 0.0417, 0.5077, 0.0452, 0.0508, 0.0222], [0.276, 0.2115, 0.3435, 0.0333, 0.0541, 0.0, 0.1515, 0.4854, 0.3803, 0.0233, 0.0625, 0.5969, 0.1383, 0.1695, 0.1111], [0.0278, 0.4705, 0.2692, 0.6512], [0.0, 0.3018, 0.0962, 0.551, 0.0333, 0.0, 0.0, 0.1515, 0.2136, 0.1408, 0.0233, 0.2083, 0.4308, 0.0904, 0.0847, 0.0], [0.0278, 0.3029, 0.4038, 0.5653, 0.0, 0.0541, 0.04, 0.1515, 0.2621, 0.2535, 0.0233, 0.1042, 0.5077, 0.0691, 0.0508, 0.0], [0.0, 0.3985, 0.1923, 0.5098, 0.0, 0.0541, 0.0, 0.1515, 0.2233, 0.3099, 0.0233, 0.3333, 0.3754, 0.0532, 0.0508, 0.1778], [0.0278, 0.4436, 0.1731, 0.8479], [0.0397, 0.5, 0.7549, 0.0, 0.0541, 0.0, 0.3939, 0.3883, 0.5352, 0.1395, 0.25, 0.84, 0.0665, 0.0169, 0.1556], [0.0, 0.3856, 0.1538, 0.4329, 0.0333, 0.0541, 0.08, 0.0909, 0.4272, 0.5915, 0.0233, 0.1458, 0.5323, 0.0718, 0.0339, 0.0222], [0.0, 0.4146, 0.0, 0.4741, 0.0, 0.0, 0.0, 0.2121, 0.2427, 0.4366, 0.1875, 0.5446, 0.0479, 0.0169, 0.0667], [0.0, 0.3244, 0.3654, 0.5403, 0.0, 0.027, 0.0, 0.1515, 0.2233, 0.5211, 0.1667, 0.5446, 0.0984, 0.1017, 0.3333], [0.0, 0.4221, 0.2692, 0.5295, 0.0, 0.0541, 0.04, 0.0909, 0.1456, 0.338, 0.0, 0.2917, 0.4092, 0.133, 0.0678, 0.1111], [0.0556, 0.4275, 0.1346, 0.5546, 0.0667, 0.0, 0.0, 0.1818, 0.1359, 0.1408, 0.1163, 0.3125, 0.4277, 0.1277, 0.0508, 0.0889], [0.0, 0.3899, 0.2115, 0.4293, 0.0, 0.0, 0.0, 0.2727, 0.2524, 0.1831, 0.0465, 0.25, 0.7138, 0.1197, 0.1695, 0.0889], [0.0, 0.4393, 0.2308, 0.4454, 0.0, 0.027, 0.0, 0.2121, 0.3592, 0.4225, 0.0233, 0.2917, 0.5477, 0.0691, 0.0508, 0.0667], [0.0, 0.3781, 0.25, 0.5975, 0.0333, 0.0, 0.0, 0.1515, 0.3301, 0.3521, 0.0233, 0.125, 0.5292, 0.1197, 0.1525, 0.0667], [0.0278, 0.4264, 0.3269, 0.6243, 0.0333, 0.0541, 0.2, 0.2424, 0.3786, 0.169, 0.0233, 0.1875, 0.4308, 0.0851, 0.0339, 0.0222], [0.0, 0.3394, 0.0, 0.7138, 0.0, 0.027, 0.0909, 0.3786, 0.2113, 0.0698, 0.2292, 0.5231, 0.1223, 0.1864, 0.1333], [0.0, 0.4318, 0.2115, 0.5546, 0.0, 0.0811, 0.04, 0.2727, 0.3786, 0.2676, 0.0, 0.2708, 0.5385, 0.0931, 0.0508, 0.0889], [0.0278, 0.3942, 0.1154, 0.6494, 0.0667, 0.0541, 0.0, 0.0303, 0.3981, 0.3944, 0.093, 0.2917, 0.4954, 0.125, 0.0169, 0.0222], [0.0278, 0.4329, 0.0769, 0.4651, 0.0, 0.1351, 0.04, 0.5152, 0.4078, 0.3662, 0.2093, 0.2708, 0.6123, 0.1489, 0.0678, 0.0222], [0.0, 0.3512, 0.3846, 0.6243, 0.0, 0.0, 0.04, 0.1515, 0.4078, 0.507, 0.0233, 0.1458, 0.4738, 0.2101, 0.2373, 0.2], [0.0556, 0.4017, 0.0962, 0.6404, 0.1, 0.1081, 0.12, 0.2121, 0.3786, 0.3239, 0.0465, 0.0833, 0.5169, 0.117, 0.1017, 0.0889], [0.1111, 0.4071, 0.3077, 0.4902, 0.0, 0.0541, 0.0, 0.1515, 0.534, 0.4225, 0.186, 0.2292, 0.72, 0.0665, 0.1525, 0.1111], [0.0278, 0.4286, 0.1346, 0.653, 0.0333, 0.027, 0.0, 0.2727, 0.2913, 0.338, 0.0698, 0.3125, 0.5262, 0.0798, 0.0508, 0.0222], [0.0278, 0.4629, 0.1923, 0.5671, 0.0333, 0.0811, 0.0, 0.1212, 0.2816, 0.2535, 0.0698, 0.2708, 0.52, 0.1649, 0.0339], [0.0, 0.4672, 0.1346, 0.6029, 0.0, 0.2432, 0.0, 0.2121, 0.3398, 0.3662, 0.1628, 0.2292, 0.5538, 0.0638, 0.1017, 0.0889], [0.0, 0.4318, 0.2115, 0.5671, 0.1, 0.0541, 0.04, 0.1818, 0.5728, 0.5211, 0.186, 0.3542, 0.4738, 0.1622, 0.0508, 0.1556], [0.0, 0.4243, 0.0769, 0.6834, 0.0, 0.0, 0.0, 0.0606, 0.2816, 0.2254, 0.0233, 0.3333, 0.5877, 0.125, 0.0847, 0.0444], [0.0, 0.4973, 0.1731, 0.6744, 0.1, 0.027, 0.04, 0.0909, 0.2524, 0.3099, 0.0698, 0.2708, 0.5077, 0.0931, 0.1017, 0.0], [0.0, 0.4919, 0.0192, 0.6297, 0.0, 0.0, 0.0, 0.1212, 0.3107, 0.2113, 0.0, 0.125, 0.5877, 0.1463, 0.0678, 0.2667], [0.4361, 0.25, 0.6351, 0.0, 0.0, 0.0, 0.1515, 0.4272, 0.6056, 0.0233, 0.125, 0.6677, 0.0798, 0.1356, 0.1111], [0.0, 0.3276, 0.1731, 0.6726, 0.0, 0.0, 0.04, 0.1212, 0.7476, 0.5915, 0.093, 0.2708, 0.8585, 0.0984, 0.1356, 0.1333], [0.0278, 0.4909, 0.3846, 0.7066, 0.0, 0.027, 0.0, 0.1212, 0.5243, 0.338, 0.0, 0.4167, 0.4738, 0.109, 0.0169, 0.3333], [0.0, 0.5145, 0.2115, 0.6225, 0.0, 0.027, 0.04, 0.0606, 0.5437, 0.3662, 0.0233, 0.2917, 0.5754, 0.1649, 0.1525, 0.0667], [0.0556, 0.507, 0.2885, 0.6834, 0.0333, 0.0811, 0.04, 0.1212, 0.4563, 0.2958, 0.0233, 0.1875, 0.8585, 0.0798, 0.1186, 0.0222]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

