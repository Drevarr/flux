created: 20230628220723000
creator: Drevarr
modified: 20230705163539839
modifier: drevarr
tags: ChartData
title: 202306282207_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Staph", "Tegan Parker", "Black Raspberry Pie", "Eibh\u00ebar", "Oo Dads Mad", "Caelon Cai", "Rozaalyna", "Fribble Bibble", "Vopiscus Zergherdus", "Tribal S", "Koralia Danai", "Shaca Booey", "My Birthday Girl", "Arriasa", "Dim Og", "Belvyn Brightblade", "Blanco Padre Guard", "Tika Fiery", "Gavann", "Johosh The Mighty", "Xanvias Einzbern", "Gaius Valerus", "Crusader Siolith", "Sub Train", "Bella Sassy", "Drevarr Moonwillow", "Solus Sanctus", "Sygaldry Verdandi", "Legacy Of Mathus", "Miphest\u00f6", "Grasszanine", "Zayde Sunsabre", "Arcanophage Farra"];
const professions = ["Druid", "Tempest", "Chronomancer", "Chronomancer", "Spellbreaker", "Reaper", "Reaper", "Scrapper", "Scrapper", "Druid", "Firebrand", "Berserker", "Scrapper", "Druid", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Berserker", "Herald", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.5477, 1.5055, 3.432, 12.3098, 6.3063, 1.7013, 1.7111, 1.9008, 1.3205, 0.9211, 1.9467, 0.4402, 8.573, 8.8304, 1.886, 7.352, 3.087, 0.0, 3.6288], [3.331, 2.1678, 17.0667, 0.0, 0.808, 0.0, 1.321, 0.0, 5.8806, 4.4582, 3.0135, 2.2811, 4.945, 0.0, 3.8986, 7.938, 3.3257, 9.8072, 0.0, 1.2569, 2.6611], [0.0, 0.0, 2.3721, 8.3614, 8.2467, 10.3174, 2.2339, 0.0, 1.4553, 2.1504, 0.0, 13.3593, 3.7843, 0.9555, 0.0, 4.9934, 0.0, 3.144, 7.303, 3.6698, 0.0, 4.5653, 0.0, 0.0, 2.8685], [0.0, 5.8041, 10.8388, 4.9392, 10.2626, 1.616, 0.8986, 5.1744, 1.9046, 0.0, 9.3962, 3.0586, 3.675, 0.2268, 3.8299, 0.0, 1.572, 4.8422, 6.078, 4.0738, 2.1344, 1.6096, 0.0, 2.5574], [3.7429, 7.5705, 8.7485, 10.3635, 11.7992, 17.5861, 7.1539, 7.8155, 11.305], [4.3075, 3.6338, 3.7936, 3.2193, 1.9757, 3.8499, 1.0714, 1.2127, 3.4406, 3.023, 2.8125, 5.4432, 1.8742, 2.3345, 3.2966, 3.5337, 6.2251, 6.5885, 4.4725, 4.2246, 5.7511, 3.5501, 3.2026, 3.6288], [0.0, 3.7853, 7.4323, 6.2622, 6.0368, 4.3728, 0.864, 1.3205, 3.4714, 3.9048, 4.9858, 3.1622, 1.3598, 0.3068, 4.6541, 2.7296, 6.0994, 7.2236, 2.8097, 3.2062, 4.3282, 3.3736, 2.8866, 3.7325], [8.7313, 8.3614, 3.7926, 6.5856, 3.4697, 2.6266, 1.4553, 2.4883, 1.9209, 3.4517, 3.9398, 3.381, 0.6136, 3.539, 3.8723, 7.5456, 14.6059, 3.1537, 1.7351, 5.2768, 0.9702, 0.0, 3.2141], [7.7219, 5.4194, 5.9976, 6.4758, 5.9888, 1.5898, 2.1021, 2.6726, 0.0, 5.8806, 3.2659, 3.3075, 3.3483, 8.2901, 0.0, 3.5213, 14.3678, 7.1675, 0.0, 4.9211, 1.8743, 5.495], [0.0, 11.9614, 14.9421, 3.3957, 4.0611, 3.0894, 1.175, 1.4823, 3.3485, 3.9992, 11.7613, 0.7776, 1.2863, 1.6942, 1.5514, 0.0, 5.6592, 7.7792, 6.1927, 4.451, 5.9883, 1.1466, 0.0, 4.3546], [3.6288, 0.0, 2.3216, 3.9484, 1.1907, 1.7562, 3.2796, 5.3568, 4.9049, 0.0, 7.5891, 3.8991, 5.6506, 6.5047, 2.7214, 4.1208, 0.0, 18.864, 11.5895, 8.1423, 5.1676, 7.8263, 2.4476, 4.0781], [0.0, 0.0, 0.0, 1.0714, 0.0, 2.519, 23.0192, 24.4174, 39.8131, 0.5145, 0.2134, 1.4544, 0.0, 2.3266, 3.8896, 4.3578, 3.8852, 0.1186, 0.8379, 12.0942, 3.9053], [0.0, 0.0, 14.6363, 12.2324, 8.6436, 8.0125, 4.6104, 2.0045, 2.0751, 2.519, 0.0, 7.6065, 4.8211, 2.8297, 3.0015, 6.157, 7.2941, 6.8267, 5.1606, 8.2607, 6.8776, 2.4255, 2.0649, 6.3936], [0.0, 10.3463, 18.7356, 6.3504, 12.6773, 2.1864, 0.0, 0.8354, 7.4035, 0.0, 11.953, 9.9533, 2.7563, 6.1085, 1.8621, 4.3387, 13.2565, 8.8877, 1.0184, 10.6722, 2.6901, 0.0, 5.3914], [3.2281, 3.0947, 10.3463, 18.0389, 8.4231, 13.6651, 4.7055, 1.1405, 2.7489, 1.3517, 0.0, 11.186, 7.5686, 3.3443, 2.8281, 9.5021, 6.9405, 0.0, 8.1761, 10.7226, 8.3599, 2.5798, 0.0, 2.3501], [0.2646, 5.4366, 7.52, 5.4194, 0.9261, 6.0917, 7.3671, 0.0, 4.5545, 2.4576, 15.4931, 6.8394, 4.3027, 6.5047, 0.5069, 3.636, 0.0, 16.3488, 16.4317, 6.6514, 2.2255, 12.1544, 2.5357, 7.2902, 3.3523], [4.5375, 3.0787, 3.5613, 1.764, 2.9635, 4.6579, 3.8016, 7.3035, 9.1546, 7.4946, 0.3835, 6.6355, 7.791, 3.5751, 23.7058, 8.4937, 14.9657, 14.8617, 15.4747, 2.7783, 0.4147], [6.9421, 9.1855, 9.7549, 3.3516, 9.0003, 6.0363, 0.6566, 0.539, 3.7786, 11.8402, 3.2599, 9.5386, 6.0637, 0.4002, 5.2843, 2.3276, 19.6186, 12.7802, 6.4794, 6.7519, 11.5616, 2.8665, 0.8849, 3.456], [9.8921, 20.826, 5.733, 4.1709, 3.7549, 2.1427, 2.2638, 9.216, 8.1559, 8.5014, 14.567, 6.909, 1.5474, 7.5629, 0.0, 14.0222, 19.7656, 10.8373, 4.3378, 9.6643, 2.2932, 2.8655, 2.6266], [3.848, 4.412, 8.2266, 20.0518, 11.1573, 13.1163, 6.5116, 4.32, 2.4255, 9.5232, 1.606, 8.757, 8.9165, 6.174, 0.7737, 9.0173, 2.7508, 6.6024, 13.9709, 12.6721, 14.5599, 8.7156, 3.0429, 2.8445, 9.9878], [8.6149, 11.5072, 14.555, 11.5101, 12.2382, 9.9813, 1.2787, 3.0993, 5.6525, 7.904, 14.8294, 6.1171, 6.5415, 3.8553, 11.9746, 1.714, 6.2251, 18.2574, 13.7616, 7.9589, 14.8225, 3.7926], [14.112, 6.6567, 7.7083, 14.4311, 32.6976, 27.5449, 23.9681, 22.3302, 32.8467, 5.292, 15.7604, 15.2755], [4.9975, 0.2019, 14.0904, 1.8963, 12.8968, 13.5936, 4.9075, 5.7404, 7.7722, 10.99, 11.186, 6.9984, 5.5125, 4.2021, 6.3024, 7.0674, 14.9654, 25.2428, 19.897, 10.2598, 15.534, 2.9768, 4.7829, 10.8864], [0.0, 4.3909, 17.9614, 11.5101, 7.793, 9.2683, 6.3936, 8.112, 6.697, 10.5492, 12.8479, 8.6573, 6.8355, 5.7762, 6.9811, 0.0, 24.1459, 8.6524, 13.0162, 23.3864, 21.2851, 2.0286, 3.2659, 4.0781], [6.1057, 17.4122, 15.5614, 14.8617, 8.232, 9.2208, 0.3802, 7.1417, 6.912, 7.6521, 20.9658, 7.1539, 4.8143, 2.4279, 12.12, 0.0, 15.6571, 27.4655, 17.4887, 4.1115, 20.1586, 2.7342, 5.8364, 5.5296], [6.8494, 10.3923, 14.9391, 22.9163, 12.9213, 15.531, 10.6467, 1.1059, 4.0694, 8.7552, 4.5031, 13.7428, 8.6054, 6.0637, 1.0805, 9.8899, 2.0737, 18.8011, 21.9089, 9.8625, 18.9354, 16.1862, 2.8445, 0.0, 7.4304], [3.0618, 1.4219, 8.9332, 13.6259, 7.9821, 7.9027, 13.546, 11.232, 10.1601, 1.9046, 18.3587, 17.0666, 11.6122, 8.1952, 4.5089, 5.4782, 6.0729, 30.7483, 13.2565, 9.7478, 12.3722, 20.8108, 3.3736, 1.0956, 7.7414], [1.401, 8.2266, 18.3485, 12.8331, 11.0858, 9.8862, 4.4582, 7.1417, 4.8845, 5.9516, 14.9573, 9.5386, 10.4002, 2.7881, 7.0781, 0.5078, 26.7869, 22.2264, 13.7616, 17.5775, 22.8859, 7.2104, 12.8738, 7.7414], [10.1204, 4.6432, 34.9164, 39.0726, 37.8672, 30.2291, 10.057, 4.9588, 21.9648, 5.9516, 45.7028, 16.0704, 14.8838, 7.3904], [2.2583, 10.4473, 55.8198, 21.4767, 43.1906, 12.2152, 7.3958, 2.695, 11.1514, 17.3195, 6.8394, 22.6541, 3.7485, 0.0, 7.5144, 18.642, 10.1237, 36.9911, 3.9565, 37.8332, 1.6008, 5.0936, 1.6856, 2.3155], [0.0, 26.7491, 51.252, 27.2097, 26.8912, 13.0708, 3.2141, 6.9801, 9.2774, 11.9662, 40.9727, 3.2141, 2.9033, 3.295, 19.0042, 14.8332, 12.576, 39.69, 26.7778, 21.1609, 22.7674, 9.8784, 4.5511, 10.8173], [25.8029, 28.8184, 45.523, 24.6078, 30.623, 21.341, 10.0224, 22.9075, 7.8029, 15.2727, 49.2823, 24.0019, 18.3382, 12.6997, 23.1734, 14.8332, 5.5963, 64.139, 39.9086, 37.1748, 9.1067, 16.8139, 20.7706], [14.8461, 32.3513, 77.8845, 38.8962, 60.9168, 30.1816, 13.1328, 11.2651, 22.6714, 18.2642, 44.744, 22.6541, 21.5723, 14.9141, 11.8776, 5.7555, 52.0018, 42.1508, 37.099, 24.782, 44.5861, 12.5685, 20.3747, 18.0058]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

