created: 20230208220141000
creator: Drevarr
modified: 20230705163518902
modifier: drevarr
tags: ChartData
title: 202302082201_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Veron Blackburn", "Drakiten", "Rina Of Theros", "Arcanophage Farra", "Rozaalyna", "Newtype Khan", "K\u00e2 \u00d4tik R\u00e6j", "Kira Dragonblaze", "Smol Gluvs", "Nelliel T", "Legacy Of Mathus", "Ace Rages", "Jupi Jupi Jupi", "Fungus", "Panther B Me", "Daddys Lil Orchid", "Tootsie Pop Bringer", "Skye Nightroad", "Kosa\u00edr", "Be\u00eb", "Lord Erin The Wise", "Smol Daddy Tika", "Xyntharos", "Sp\u00edcy Cheese", "Demon Sekhmet", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Herald", "Mechanist", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Berserker", "Dragonhunter", "Scourge", "Scourge", "Berserker", "Berserker", "Dragonhunter", "Scourge", "Scourge", "Vindicator", "Scrapper", "Scrapper", "Scrapper", "Scourge", "Weaver", "Berserker", "Vindicator", "Berserker", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[395.9354, 33.0412, 164.9383, 213.4355, 157.72, 865.2553], [725.539, 553.4085, 464.8782], [416.919, 80.4536, 217.2555, 163.129, 325.34, 1475.0213, 17.254], [227.5153, 15.1443, 34.467, 43.0484, 3.1, 547.0, 0.0, 231.4014, 574.6241, 225.4225, 50.6917], [522.2312, 0.0, 56.326, 0.0, 0.0, 1563.5532], [210.6784, 0.0, 167.9559, 71.5968, 96.84, 324.0213, 24.127, 242.5147, 310.1348, 393.6901, 137.7429], [266.7007, 1175.3475, 1111.8592, 367.6857], [660.4249, 130.4845, 330.8238, 233.5645, 549.1489], [315.0552, 32.268, 179.1366, 1.6613, 254.44, 523.1915, 6.4868, 241.365, 384.9787, 775.1408, 131.2331], [399.5094, 89.3918, 202.7137, 0.0, 0.0, 557.8298, 7.9101, 307.0126, 488.6383, 299.8732, 55.8316], [943.4214, 16.9278, 372.022, 18.3871], [388.5563, 0.0, 124.0396, 0.0, 1102.8298, 54.7566, 406.8196, 1121.8723, 977.7324, 109.3654], [927.3955, 9.4845, 448.185, 279.2581, 735.22, 2066.0], [480.8932, 0.0, 89.2026, 0.0, 282.24, 1427.617, 0.0, 312.0797, 1140.5035, 996.6338, 271.8947], [498.8615, 229.7835, 303.5991, 347.4839, 415.56, 1463.6809, 97.6349, 438.228, 1151.5177, 559.7746, 239.3308], [710.8427, 91.268, 253.6079, 389.0968, 253.92, 701.8936, 68.8148, 365.751, 1057.1418, 1218.0986, 354.3684], [743.0681, 42.433, 372.3392, 48.3226, 292.9, 1637.8511, 107.5926, 656.8462, 1473.078, 887.0141, 8.4466], [424.7582, 7.6186, 573.2291, 0.0, 130.88, 1355.0851, 44.963, 740.2112, 1526.3546, 1638.831, 426.6256], [1879.7664, 159.4227, 734.3612, 602.6452, 765.12, 3588.1915, 28.9788], [975.9272, 50.9485, 661.2467, 61.3871, 347.0, 1925.9362, 194.9524, 702.6629, 1317.6879, 1287.3099, 524.3023], [1032.6608, 71.6598, 309.3172, 0.0, 157.76, 1841.9149, 12.6032, 868.6657, 1253.3972, 1355.8028, 523.5143], [928.9812, 171.0722, 262.1674, 707.8548, 120.18, 2369.9787, 65.5132, 879.0448, 1363.5957, 1789.8592, 555.9308], [1150.1209, 161.7938, 338.1013, 93.2097, 171.94, 2831.7021, 0.7566, 1133.2392, 1946.8723, 1487.5352, 419.3263], [930.0282, 65.6495, 429.0793, 247.0645, 112.76, 1695.3617, 77.3228, 1303.3119, 2206.3404, 2823.1408, 603.4391], [1331.7183, 136.9278, 795.4581, 647.4194, 213.48, 3169.9787, 189.8519, 1062.5734, 2577.0284, 1569.0704, 447.409], [1595.0423, 19.4021, 667.9604, 1070.5645, 837.36, 2376.5532, 76.4074, 1355.1776, 2662.8227, 2222.8873, 814.8105], [1416.2124, 257.6598, 540.3612, 44.129, 662.2, 3435.5957, 58.1164, 2066.1343, 2639.9433, 2715.2535, 699.4662]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

