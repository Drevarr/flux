created: 20230310230833000
creator: Drevarr
modified: 20230705163521677
modifier: drevarr
tags: ChartData
title: 202303102308_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Kmpek", "Air One Com", "Ark Darkness", "Mistwalker Caelon", "Sub Train", "Akira Moonbright", "Ryvalia Fazebringer", "Riann Swordbreak", "Raelyn Sunray", "Aronorf Xideliesi", "Ace Hammers", "Zaylen Harker", "Viral Marketing", "Blanco Padre Guard", "Kiloak", "Bella Sassy", "Koralia Danai"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Herald", "Chronomancer", "Spellbreaker", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.2375, 1.8837, 0.0, 2.093, 0.0, 3.8125, 3.4335, 0.2905, 3.3465, 2.386, 2.386, 1.128, 5.1014, 4.6883, 3.0202, 0.0, 0.3722, 1.4683, 0.0, 0.0, 8.0824, 2.6866, 6.3707, 0.6264, 2.808, 3.3948, 0.0643, 2.4261, 7.9565], [5.049, 15.7941, 12.0428, 5.796, 2.0033, 42.7], [16.775, 0.0, 3.776, 3.7035, 1.3814, 4.0379, 2.4969, 0.361, 0.0, 6.1171, 0.0, 0.0, 0.2068, 6.233, 0.0, 5.7735, 5.8027, 6.8112, 1.6731, 5.3505, 1.026, 4.1814, 1.735, 0.9391, 7.2727], [2.079, 9.4185, 0.0, 4.669, 0.0, 30.5, 0.0, 1.4523, 2.9449, 4.7302, 0.6293, 0.5945, 0.9024, 0.0, 0.4911, 1.716, 0.0, 0.0, 0.0, 2.7702, 0.0, 5.6985, 1.8652, 1.9677, 2.767, 3.9933, 3.51, 3.1464, 0.4284, 4.3043, 9.0132], [2.0475, 7.4067, 6.9161, 2.386, 3.461, 1.6884, 5.5498, 2.1573, 5.492, 0.0, 0.0, 2.5023, 0.0, 7.5451, 3.1313, 8.9976, 8.7041, 6.5085, 2.1879, 6.0552, 2.7, 6.9138, 2.6347, 5.4391, 8.7646], [0.594, 8.1144, 7.3876, 9.177, 1.0764, 38.8875, 0.0, 21.3488, 0.0446, 0.0, 0.0, 0.2378, 2.7523, 5.1775, 0.2233, 5.2853, 0.0, 3.7844, 0.0, 1.2393, 0.0, 6.6732, 5.8718, 3.2164, 9.7169, 1.9575, 0.0], [3.861, 7.245, 2.3276, 5.635, 2.6611, 39.65, 5.5125, 11.1827, 4.4174, 2.8465, 3.3562, 2.7109, 0.0, 0.0, 4.5543, 1.8533, 0.0, 0.0, 1.9152, 2.8066, 0.0, 8.9226, 12.5726, 4.8057, 7.4002, 0.0, 2.052, 8.1558, 5.0551, 2.2695, 9.1375], [4.2075, 12.4614, 6.7804, 5.152, 1.5847, 48.8, 3.3705, 12.3445, 3.2126, 6.0697, 0.9964, 0.761, 3.1133, 3.6801, 3.3934, 3.9125, 0.0, 1.7164, 0.0, 2.2234, 1.475, 5.8484, 5.8718, 3.0272, 5.4054, 0.0, 4.05, 4.8852, 0.5141, 4.2652, 5.4079], [3.7125, 10.5777, 6.3756, 0.966, 5.1428, 54.9, 0.0, 15.5396, 1.8294, 7.0743, 1.311, 5.8205, 0.4315, 5.8045, 1.2698, 0.3623, 3.9499, 3.7118, 3.0253, 7.423, 2.9704, 6.5085, 6.7567, 3.9411, 0.216, 5.8788, 4.3697, 4.6565, 10.8158], [6.93, 14.9247, 12.2452, 2.4955, 4.6644, 77.775, 0.9135, 13.5064, 5.3098, 3.5162, 4.0641, 2.3304, 5.0534, 2.8172, 6.0724, 2.8142, 3.7777, 4.4876, 0.684, 7.8368, 0.0121, 8.3228, 7.8751, 8.0221, 5.2123, 3.7845, 4.212, 5.2992, 4.2197, 5.2043, 10.2564], [0.0, 7.5348, 10.9296, 10.3845, 0.0, 101.4125, 0.0, 13.3612, 12.2705, 7.9115, 3.4086, 1.7359, 8.257, 3.604, 6.9654, 5.251, 1.5836, 3.7224, 1.5778, 0.2552, 1.2747, 19.2733, 2.3839, 8.3012, 1.6965, 11.178, 4.4712, 0.3427, 5.3999, 8.951], [5.346, 16.0839, 7.8936, 6.8425, 4.5448, 91.5, 0.252, 16.9919, 5.7114, 6.7395, 2.4122, 4.1377, 7.535, 6.2181, 4.3757, 5.3539, 0.4243, 3.7017, 7.9097, 5.4735, 10.1548, 6.9247, 12.1622, 2.7927, 4.698, 5.6718, 1.5208, 5.2043, 8.4538], [6.8805, 17.9676, 12.7512, 8.694, 4.1262, 90.7375, 0.6615, 18.0085, 8.4332, 3.8093, 3.9592, 5.6834, 3.6547, 2.1573, 6.6082, 3.1231, 0.3726, 3.5156, 2.7542, 6.4516, 0.0, 13.2715, 8.5659, 8.8924, 6.0489, 3.4191, 9.126, 5.6718, 3.7699, 5.0478, 11.251], [3.7125, 18.4023, 15.686, 14.49, 0.0, 80.825, 3.3075, 23.0916, 8.8348, 6.1534, 3.7232, 2.0926, 7.4448, 4.2892, 6.7868, 2.2308, 2.9394, 1.1581, 2.4806, 4.7385, 0.0605, 12.5217, 15.8193, 6.0544, 11.9691, 4.8285, 8.1, 9.729, 4.7552, 9.7825, 10.878], [5.3955, 20.7207, 11.2332, 6.6815, 4.0365, 76.25, 3.339, 22.3654, 7.8531, 5.8185, 5.8208, 4.1615, 8.7082, 6.4211, 10.0463, 6.1433, 3.9123, 6.9692, 0.0, 9.2583, 1.9344, 15.071, 15.7502, 7.4545, 8.816, 5.1417, 8.586, 10.8882, 2.6347, 7.6695, 14.9806], [10.593, 8.8389, 11.9416, 7.9695, 1.794, 115.9, 6.93, 13.9421, 5.4883, 1.4232, 7.1843, 4.2091, 8.3472, 2.4872, 9.5105, 0.6864, 3.3017, 2.9366, 9.5863, 4.5942, 12.3717, 12.5035, 9.1194, 13.7065, 4.1499, 6.75, 9.2736, 4.1126, 7.8651, 14.7941], [13.662, 13.041, 16.2932, 14.49, 3.588, 165.4625, 6.1425, 32.2411, 6.7376, 10.8417, 7.9971, 5.3743, 9.6106, 8.5531, 11.3858, 5.8687, 0.5278, 5.7904, 12.5752, 2.4059, 15.8208, 19.2042, 11.0493, 13.3204, 3.0015, 8.694, 14.49, 5.8477, 11.5825, 18.7723]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

