created: 20230706004035000
creator: Drevarr
tags: ChartData
title: 202307060040_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Necrotic Windrunner", "Glorious Gluvs", "Daphne Agla\u00e9", "Elonith Requiem", "Body Ody Ody", "Tootsie Pop Rocks", "Elonith Requiem", "Ateriuz", "Lord Erin The Wise", "Xanvias Einzbern"];
const professions = ["Chronomancer", "Reaper", "Berserker", "Reaper", "Reaper", "Berserker", "Scrapper", "Scourge", "Berserker", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[114.0706, 51.1538, 347.9706, 306.746, 206.1507, 586.9205, 160.7024, 934.8194, 538.86, 400.4336, 525.8721, 250.3297], [260.4444, 231.5068, 670.1818, 579.5714, 1070.7639, 994.96, 374.2566, 436.2326, 75.4286], [533.0471, 139.2115, 129.3971, 278.7143, 349.0822, 369.7273, 232.5833, 2086.2222, 448.98, 174.292, 452.1628, 98.5165], [9.2353, 556.5, 405.7647, 285.873, 243.6438, 328.2159, 817.6071, 1438.8611, 698.5, 227.823, 653.1977, 259.4505], [1718.2941, 1411.1111, 1930.589, 1251.1477], [500.9176, 600.5769, 1003.2647, 0.0, 0.0, 263.0114, 1313.7857, 1715.8056, 2501.98, 1013.0442, 632.2093, 0.0], [541.6706, 284.2885, 1355.3676, 371.7619, 380.6438, 2120.9205, 852.0476, 1908.125, 2581.4, 73.4159, 503.3488, 130.7033], [1577.7647, 750.4808, 1317.2619, 75.9583, 2564.26, 1519.1239, 2039.3837, 450.2418], [1151.3647, 836.4231, 822.4412, 1866.4921, 798.8493, 801.625, 904.9048, 2686.1806, 1764.82, 1642.3274, 3389.2209, 145.4286], [818.8941, 517.6538, 817.4265, 2449.3333, 1124.4247, 2104.2614, 2218.7738, 2960.2917, 4815.08, 2259.8938, 1912.9302, 323.2967], [2098.0235, 2929.4231, 451.6765, 2390.0476, 4358.9726, 3380.7955, 1640.8929, 3082.6111, 6013.28, 3959.7522, 1633.3605, 993.2637]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

