created: 20230408223537000
creator: Drevarr
modified: 20230705163524976
modifier: drevarr
tags: ChartData
title: 202304082235_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Theoden Ellesmera", "Lord Erin The Wise", "Ak\u00e1nt\u00f3r", "Leaf You Dead", "Slautorn", "The Gun Guardian", "Skye Nightroad", "Reikitsuki", "Xyntharos", "Cat Wigglebooty", "Aronorf Xideliesi", "Sofya De Nova", "Newtype Khan", "Fribble Bibble", "Tribal S", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Mechanist", "Weaver", "Druid", "Harbinger", "Weaver", "Scrapper", "Scrapper", "Soulbeast", "Vindicator", "Scrapper", "Firebrand", "Weaver", "Spellbreaker", "Scrapper", "Druid", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[55.3938, 344.7549, 24.8192, 21.3106, 0.0, 41.454, 0.0, 82.0497, 100.0428, 51.597, 48.4255, 40.502, 83.4814, 0.0, 49.2274], [243.0962, 81.774, 309.6765, 20.8544, 23.1219, 3.9917, 17.7265, 7.9649, 0.0, 8.0136, 25.5528, 17.3144, 14.85, 103.2205, 35.6504, 26.9069, 33.495, 0.0, 39.8666], [441.3907, 169.1844, 462.7791, 0.0, 6.6964], [299.3642, 393.2885, 25.129, 34.2619, 72.7964, 62.1372, 21.9258, 23.5264, 0.0, 172.5022, 53.799], [276.6233, 73.5966, 275.5116, 8.96, 22.8321, 55.4333, 343.2871, 32.6697, 0.0, 25.5452, 48.789], [57.1502, 401.482, 56.0498, 121.8195, 110.558, 87.9372, 71.2826, 85.338, 252.0046, 81.608, 30.4013], [65.6947, 34.8044, 142.6554, 256.5696, 113.5863, 63.034, 72.7654, 221.2771, 20.9252, 3.4188, 36.7038, 314.4452, 327.8761], [618.4735, 737.626, 30.6957, 93.8599, 91.4508, 121.6032, 57.4704, 47.2758, 59.268], [196.5143, 59.4132, 271.8576, 10.7296, 21.8696, 258.2798, 386.5656, 23.7472, 27.5352, 50.0075, 32.5844, 42.5178, 17.8292, 25.52, 126.3144, 52.9502, 64.297, 24.1996, 21.2236, 38.6365, 118.72, 54.6082, 58.1742], [359.8971, 78.9096, 446.3361, 0.0, 59.9783, 249.8177, 839.3095, 0.0, 0.0, 0.0, 0.0, 21.0382, 131.9318, 74.292, 15.4627], [242.5028, 25.41, 226.9134, 5.1744, 10.2465, 222.3463, 607.5803, 18.0226, 0.0, 18.4016, 102.0006, 57.6576, 0.0, 115.0795, 46.8468, 70.7179, 6.3202, 0.0, 27.6606, 67.2, 32.5318, 92.3845, 15.3231, 58.4455, 0.0, 0.0, 0.0, 26.2756, 0.0, 58.2281, 169.6702], [306.2933, 113.5596, 283.5504, 0.0, 16.146, 8.2169, 503.1655, 30.5773, 30.3442, 56.0616, 45.792, 44.2962, 33.0673, 142.0744, 30.6384, 64.2096, 41.9958, 47.2279, 86.735, 110.7008, 52.1481, 76.5122, 99.2514, 117.8198, 25.8216, 0.0, 27.6942, 56.0007, 119.4959, 98.8469], [43.7138, 23.7006, 372.8907, 27.9664, 57.8462, 330.7601, 610.5215, 57.3052, 45.6826, 81.2622, 77.7404, 80.1216, 72.0548, 98.34, 288.1279, 85.5287, 22.0584, 0.0, 24.1164, 33.3693, 29.5232, 26.2521, 9.3605, 32.1708, 64.4825, 0.0, 0.0, 0.0, 0.0, 66.4692, 58.8496], [437.3358, 162.5316, 403.0362, 22.8704, 46.4922, 499.2674, 1066.2068, 0.0, 95.671, 101.5409, 0.0, 41.9094, 27.3359, 52.734, 261.6791, 187.5892, 171.0509, 115.5882, 158.3308, 297.5616, 86.9782], [600.8175, 207.4842, 693.5292, 64.2656, 38.5744, 777.047, 1208.8579, 46.0929, 64.6246, 159.965, 63.4516, 79.0686, 107.4216, 38.39, 350.6999, 98.8673, 184.5917, 28.7753, 107.0152, 180.6784, 107.7921, 60.7358, 90.7501, 207.1135, 31.3757, 24.5966, 41.9364, 25.7436, 71.9523, 308.7035, 255.588], [670.7398, 336.336, 636.7095, 24.304, 77.3456, 642.7562, 1118.7293, 45.3823, 0.0, 156.4212, 84.1216, 125.2368, 89.3178, 120.186, 284.1488, 116.2479, 126.3226, 96.5395, 106.5446, 214.4405, 266.9632, 116.791, 125.685, 190.5442, 192.9167, 31.7228, 43.6128, 106.8756, 196.0308, 248.9218, 292.7192], [736.7061, 127.4196, 511.1946, 59.4608, 118.2901, 943.7148, 1342.8953, 66.4054, 71.3328, 218.0446, 144.2448, 164.5254, 129.3864, 125.026, 405.1579, 213.458, 249.7622, 55.6802, 166.4397, 121.4921, 277.3568, 129.4476, 115.5823, 205.5055, 327.2884, 52.7394, 7.3861, 55.1232, 98.461, 110.3004, 643.1436, 546.1418]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

