created: 20230603000934000
creator: Drevarr
modified: 20230705163533083
modifier: drevarr
tags: ChartData
title: 202306030009_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Ana Larive", "High Sorcer Baradun", "Miphest\u00f6", "Pamtastic", "Venomina The Siren", "Tegan Parker", "Johosh Of The North"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14.0778, 0.0, 139.7074, 20.196, 0.0, 0.0, 9.7138, 95.0553, 210.9744, 24.0631], [19.9139, 97.8318, 20.0457, 227.5848, 19.932, 11.9448, 0.0, 53.9956, 31.2179, 38.571, 79.4535], [230.5076, 176.9864, 97.5936, 36.7108, 18.9584, 35.5893, 0.0, 52.003, 51.975, 10.6863], [0.0, 39.8812, 0.0, 314.293, 0.0, 0.0, 0.0, 14.0007, 220.9463, 111.6765, 36.3865, 0.0, 34.4531, 0.0, 84.9275, 101.871, 38.746, 47.8791, 0.0, 57.3811, 0.0, 69.2591, 77.4357], [19.896, 71.7433, 346.833, 0.0, 10.7957, 0.0, 67.7981, 181.0638, 166.4832, 80.7507, 17.876, 98.6396, 137.2525, 88.8149, 141.3474, 87.9957, 98.5075, 19.926, 89.8978, 116.4867], [58.0986, 83.7184, 19.99, 449.7138, 19.932, 0.0, 17.2973, 89.2328, 486.3621, 89.6103, 148.724, 23.2224, 85.0402, 37.1105, 138.794, 175.1108, 59.8644, 15.8598, 140.2867, 107.8587, 127.6034, 199.2536], [34.6484, 132.1888, 20.0039, 813.8884, 19.8264, 36.1066, 31.6216, 106.2319, 385.4455, 284.1696, 202.7524, 19.9424, 59.0125, 25.1328, 91.448, 199.0019, 277.2532, 113.022, 79.3346, 208.0474, 96.6411, 153.9972, 288.951]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

