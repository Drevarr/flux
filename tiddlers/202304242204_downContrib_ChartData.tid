created: 20230424220408000
creator: Drevarr
modified: 20230705163526549
modifier: drevarr
tags: ChartData
title: 202304242204_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Eibh\u00ebar", "Newtype Khan", "Seren Nightroad", "Solo Bloodborn", "Grasszanine", "Smol Gluvs", "Rina Of Theros", "Cedryn X", "Panther B Me", "Tootsie Pop Rocks", "Leana Deeb", "Inedible Plant", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Kmpek", "Cyclotechnist Farra", "Etch\u00e9ry", "Daddys Lil Orchid", "Smol Bee", "Xyntharos", "Arka\u00f1tor", "Mike The Archmagus", "Xanvias Tsoli", "Mistwalker Caelon"];
const professions = ["Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Berserker", "Scourge", "Scrapper", "Weaver", "Vindicator", "Berserker", "Weaver", "Vindicator", "Scrapper", "Berserker", "Vindicator", "Vindicator", "Vindicator", "Scrapper", "Weaver", "Holosmith", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10455.0, 0.0, 3251.0, 28097.0, 17982.0, 1620.0, 0.0, 12992.0, 8608.0, 20181.0, 3929.0, 6564.0, 15995.0], [16885.0, 619.0, 10581.0, 11290.0, 11957.0, 8347.0, 2456.0, 13700.0, 8560.0, 18347.0, 13669.0, 14478.0, 18158.0], [21966.0, 2799.0, 8903.0, 20922.0, 4380.0, 1036.0, 1037.0, 14820.0, 9158.0, 22379.0, 15420.0, 11778.0, 24524.0], [20955.0, 3108.0, 27741.0, 43502.0, 38370.0, 5329.0, 5373.0, 44693.0], [31326.0, 0.0, 11674.0, 38396.0, 19590.0, 6408.0, 1998.0, 24606.0, 11311.0, 14008.0, 18983.0, 11999.0, 47221.0], [43018.0, 1452.0, 14228.0, 32651.0, 15995.0, 13732.0, 8394.0, 19483.0, 7517.0, 29727.0, 22675.0, 18470.0, 42073.0], [12845.0, 4640.0, 23711.0, 53377.0, 24045.0, 5253.0, 12070.0, 21724.0, 22493.0, 23505.0, 37404.0, 28475.0, 20455.0], [45043.0, 4866.0, 45076.0, 40864.0, 29267.0, 16804.0, 17316.0, 25979.0, 31118.0, 30239.0, 42820.0, 35340.0, 45249.0], [46288.0, 57061.0, 1806.0, 3512.0, 76207.0, 13907.0, 29978.0, 99587.0, 62363.0, 39556.0], [56835.0, 3003.0, 21440.0, 41345.0, 55366.0, 5786.0, 12931.0, 58621.0, 21750.0, 56761.0, 27340.0, 43029.0, 49426.0], [50725.0, 5974.0, 16345.0, 7902.0, 37997.0, 5597.0, 23313.0, 39152.0, 33237.0, 107116.0, 29671.0, 46549.0, 50910.0], [10479.0, 5754.0, 51930.0, 80406.0, 91521.0, 10875.0, 7131.0, 36413.0, 29972.0, 74728.0, 48501.0, 36626.0, 101205.0], [68032.0, 8952.0, 50071.0, 65124.0, 58382.0, 16490.0, 27732.0, 61405.0, 2891.0, 161227.0, 81087.0, 40755.0, 5754.0], [66301.0, 4200.0, 76863.0, 65147.0, 97290.0, 0.0, 32777.0, 83425.0, 13487.0, 50056.0, 94737.0, 109694.0], [78747.0, 1647.0, 40052.0, 69462.0, 89131.0, 2886.0, 32577.0, 122183.0, 10005.0, 116435.0, 80578.0, 67103.0], [104726.0, 111071.0, 0.0, 45068.0, 115805.0, 32097.0, 72181.0, 68439.0, 77844.0, 86131.0], [90158.0, 5030.0, 63548.0, 80054.0, 61607.0, 43705.0, 55845.0, 26975.0, 71941.0, 87800.0, 54212.0, 75607.0], [147526.0, 0.0, 66123.0, 59367.0, 63722.0, 29169.0, 44609.0, 13880.0, 86443.0, 28350.0, 112680.0, 90788.0], [71785.0, 11676.0, 94766.0, 104449.0, 14835.0, 12681.0, 132387.0, 8630.0, 81232.0, 118332.0, 30107.0, 80217.0], [55464.0, 3252.0, 75153.0, 62836.0, 110730.0, 1665.0, 45510.0, 105283.0, 15989.0, 135595.0, 63808.0, 107302.0, 0.0], [80873.0, 0.0, 46542.0, 169903.0, 89186.0, 19066.0, 50637.0, 60594.0, 17764.0, 106179.0, 85573.0, 86139.0, 67239.0], [77444.0, 9251.0, 66608.0, 79351.0, 80660.0, 19819.0, 34307.0, 99426.0, 8145.0, 123380.0, 90047.0, 111919.0, 99315.0], [87846.0, 1092.0, 68779.0, 100833.0, 110831.0, 4732.0, 36254.0, 174531.0, 34219.0, 134473.0, 86660.0, 58186.0, 81661.0], [107403.0, 36493.0, 94825.0, 150152.0, 74899.0, 33106.0, 34525.0, 59617.0, 63360.0, 196650.0, 45628.0, 135611.0, 166813.0], [156272.0, 24925.0, 92549.0, 177386.0, 156982.0, 11095.0, 58161.0, 91925.0, 27161.0, 89891.0, 79402.0, 154501.0, 141985.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

