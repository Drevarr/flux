created: 20230403221011000
creator: Drevarr
modified: 20230705163524364
modifier: drevarr
tags: ChartData
title: 202304032210_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Slingsshot", "Eibh\u00ebar", "Black Raspberry Pie", "Primal Clone", "Ryvalia Fazebringer", "Jeckyll Mbs", "Zaylen Harker", "Johosh The Great", "Viral Marketing", "Koralia Danai", "Xanvias Tlesel", "Newtype Khan", "Sygaldry Verdandi", "Bella Sassy", "Blancooo Padreee", "Legacy Of Mathus", "Solus Sanctus"];
const professions = ["Untamed", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36.1852, 67.4595, 16.3363, 48.386, 26.5013, 17.2049, 55.7458], [41.8343, 112.347, 22.062, 47.23, 21.085, 19.1291, 82.2763, 80.9293, 12.213, 17.6042, 0.0, 0.0, 54.9524, 0.0, 12.6945, 10.6272, 0.0, 0.0], [49.0103, 112.86, 8.0881, 59.1201, 27.8554, 25.8073, 81.1709, 82.3464, 14.1128, 5.6966, 0.0, 0.0, 65.3864, 3.4691, 11.1981, 10.0184, 6.6511, 0.0], [59.2398, 102.8565, 24.1842, 45.4135, 31.7242, 27.6184, 86.5402, 73.2143, 11.833, 6.7648, 0.0, 60.6911, 7.8973, 11.8216, 6.6051, 0.0, 6.7663], [51.3005, 119.2725, 17.978, 67.5423, 18.7637, 30.7877, 70.4323, 73.5292, 13.1358, 21.1646, 0.0, 58.0826, 9.4128, 13.2182, 2.3432, 7.1639, 0.0], [120.1592, 135.432, 52.5325, 67.0468, 40.0421, 0.0, 109.1227, 98.7211, 50.5347, 25.8722, 0.0, 0.0, 128.5121, 20.0451, 47.7102, 30.9222, 0.0, 0.0], [127.3351, 281.124, 42.1621, 180.9934, 54.1632, 38.5978, 124.7004, 54.9585, 58.0345, 0.0, 143.8153, 41.3755, 0.0, 9.5726, 0.0], [87.1803, 221.3595, 42.6026, 101.0657, 73.5072, 31.8064, 137.0746, 152.7265, 32.0252, 31.8458, 0.0, 150.5974, 0.0, 40.1534, 30.6086, 25.6565, 0.0], [159.7033, 405.783, 90.8107, 252.4991, 71.9597, 31.1273, 91.4357, 233.8133, 45.6495], [133.7477, 388.341, 52.2922, 212.0398, 45.0715, 41.7671, 113.5445, 169.7311, 27.9542, 35.8414, 165.9006, 0.0, 56.8881, 18.0626, 0.0, 10.9481], [185.9642, 324.9855, 37.6376, 172.5713, 65.963, 66.2161, 264.0422, 225.9407, 14.4656, 34.8919, 0.0, 0.0, 154.4232, 0.0, 38.0335, 0.0, 0.0, 0.0], [160.1613, 314.2125, 73.3132, 226.7372, 128.0573, 69.6119, 211.297, 145.7987, 35.0377, 30.8964, 0.0, 0.0, 155.1188, 4.5821, 57.3371, 31.1067, 6.4802, 7.0277], [168.5587, 409.887, 45.2852, 216.994, 52.4222, 58.8588, 134.3899, 192.7188, 52.3531, 63.0586, 0.0, 199.8111, 57.8109, 7.2693, 0.0, 0.0], [309.0243, 414.504, 37.9179, 236.4805, 57.4517, 38.711, 129.8102, 218.698, 64.4846, 50.439, 0.0, 200.8545, 6.2989, 39.7294, 34.6306, 0.0, 11.3837], [208.4082, 597.9015, 97.0169, 138.7176, 150.4963, 0.0, 0.0, 169.7311, 47.5221, 110.3724, 0.0, 0.0, 212.3319, 0.0, 42.2982, 0.0, 0.0, 116.0729], [217.569, 524.286, 84.7647, 311.454, 0.0, 0.0, 182.2397, 199.3317, 67.85, 218.2525, 0.0, 0.0, 252.8506, 0.0, 41.6997], [408.7244, 411.426, 88.2482, 218.9756, 198.0826, 52.8597, 111.6494, 277.2695, 80.1444, 68.1223, 0.0, 8.3209, 272.8491, 0.0, 61.103, 19.2249, 4.7242, 66.8791]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

