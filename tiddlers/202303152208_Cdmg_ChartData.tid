created: 20230315220824000
creator: Drevarr
modified: 20230705163522148
modifier: drevarr
tags: ChartData
title: 202303152208_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Xyntharos", "Fruji", "Zaylen Harker", "Eibh\u00ebar", "Sygaldry Verdandi", "Lord Erin The Wise", "Ravioli Fetabringer", "Smol Daddy Tika", "Sofya De Nova", "Seren Nightroad", "Sp\u00edcy Cheese", "Panther B Me", "Demon Sekhmet", "Cerys Fireblade", "Dark Sidiuz", "Smol Gluvs", "K\u00f4sair", "Rina Of Theros", "Nazhul Naxxremis", "Elonith Requiem", "Xanvias Tseli", "Be\u00eb"];
const professions = ["Vindicator", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Weaver", "Firebrand", "Berserker", "Weaver", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.7407, 36.6959, 10.9203, 0.0, 60.4848, 0.0, 0.0, 24.8008, 1.6667, 18.9481, 25.1627, 0.0, 1.0073, 0.0, 21.5625, 0.0, 0.0, 15.4118, 0.0, 6.1386, 14.9189, 0.0, 3.2284], [7.4815, 22.0203, 17.1232, 11.0667, 40.4343, 0.0, 1.5417, 12.7884, 2.4444, 42.0222, 17.2949, 0.0, 33.9051, 1.6154, 7.9375, 0.0, 0.0, 33.6078, 0.0, 9.8416, 18.8829, 0.0, 0.4756, 15.463], [85.1111, 36.8446, 6.8116, 30.0303, 2.1875, 0.0, 63.1411, 0.0, 21.6815, 12.1085, 0.0, 11.2628, 0.0, 0.0, 1.4118, 9.5652, 41.6667, 0.0792, 1.0721, 1.4286, 1.3963, 11.4383], [35.4568, 23.2703, 22.4203, 0.0, 93.5152, 0.0, 0.0, 14.1245, 0.0741, 59.3111, 40.1559, 9.0, 27.3358, 0.0, 5.625, 0.0294, 3.7826, 15.6275, 0.0, 0.0, 16.1622, 0.0, 0.0976, 14.3272], [138.7531, 45.4527, 51.1087, 18.3333, 71.5758, 41.4375, 0.0, 9.9129, 6.9259, 37.3481, 32.5593, 0.0, 14.7299, 0.0, 0.0, 0.0, 0.549, 30.099, 6.1982, 0.0, 1.3171, 53.6543], [45.3704, 42.9324, 75.9058, 11.3333, 104.9697, 0.0, 3.625, 27.4938, 33.2074, 12.3831, 72.0, 28.8394, 0.0, 41.0625, 0.0, 63.9565, 35.1765, 0.0, 25.1881, 80.7838, 0.0], [33.5556, 86.7905, 19.2681, 35.5667, 62.3636, 0.0, 51.0, 45.9461, 0.0, 70.837, 17.5661, 2.5556, 19.8029, 1.2308, 1.9688, 13.0294, 0.0, 70.6471, 2.0, 18.5446, 90.973, 0.0, 0.1707, 37.6852], [78.8272, 98.6622, 221.1014, 0.0, 54.7273, 0.9688, 0.0, 79.1245, 4.5185, 21.363, 16.8508, 0.0, 89.2409, 0.0, 4.375, 3.0588, 5.8261, 4.4902, 0.0, 11.9208, 45.0541, 0.0, 22.8457], [73.0864, 48.9324, 40.5362, 0.0, 169.2525, 0.0, 6.5, 19.8672, 15.963, 116.7333, 95.0407, 0.0, 79.3212, 0.0, 0.0, 7.9118, 0.0, 36.8824, 0.0, 31.0, 5.7387, 0.0, 0.0, 37.3704], [194.7284, 99.1959, 84.5725, 19.4333, 25.8586, 2.9688, 10.125, 39.7593, 11.8889, 108.2444, 26.4034, 0.0, 130.4526, 0.0, 26.0, 3.5147, 2.8261, 127.6863, 99.8261, 26.0792, 69.1081, 0.0, 19.0915, 59.9506], [121.284, 75.7568, 113.3841, 56.1616, 0.0, 0.0, 9.1079, 0.0, 192.3037, 97.8644, 1.6389, 107.6277, 22.5938, 0.0, 0.1739, 20.6667, 5.2609, 33.1782, 81.2883, 0.0, 0.0, 29.0741], [133.3086, 115.3986, 47.8696, 0.0, 153.8788, 0.125, 18.4583, 65.9627, 44.0741, 129.8593, 109.5932, 59.9167, 53.1606, 19.8077, 95.625, 17.8382, 10.5652, 6.8235, 0.0, 4.0495, 32.8378, 0.0, 9.0854, 30.7963], [76.2703, 124.2754, 0.0, 72.4747, 0.0, 0.0, 188.3693, 1.037, 97.1852, 75.1559, 0.0, 89.4234, 0.0, 0.0, 50.1373, 0.0, 14.4752, 104.6216, 0.0, 0.0, 60.716], [145.1235, 116.4054, 164.3841, 0.0, 59.3434, 0.0, 0.0, 73.2573, 0.0, 92.0519, 153.4305, 0.0, 125.5401, 0.0, 83.0312, 0.0, 0.0, 38.1961, 0.0, 11.6139, 94.5045, 0.0, 0.0, 29.3951], [140.8765, 113.723, 180.5797, 1.7, 169.0909, 16.0312, 31.25, 139.3278, 0.8889, 138.437, 144.9932, 8.6389, 49.2847], [93.3704, 103.8108, 100.8406, 0.0, 254.4949, 0.0, 8.4167, 103.527, 3.3333, 86.5185, 105.6373, 18.0278, 155.2117, 0.0, 5.9062, 0.7794, 15.7451, 0.0, 6.3861, 97.0541, 3.9524, 7.8598, 80.7346], [182.8148, 47.2365, 267.9275, 0.0, 138.8586, 0.0, 0.0, 101.2739, 5.8519, 146.3111, 126.7525, 0.0556, 143.1679, 0.0, 79.8438, 4.0735, 0.0, 0.6078, 0.0, 90.4059, 53.1261, 0.0], [117.8395, 109.5068, 150.9348, 31.1333, 181.6667, 11.4375, 0.0, 147.6058, 0.0, 179.6667, 138.8915, 17.9167, 146.8248, 0.0, 25.8438, 13.5441, 0.0, 30.4314, 1.5652, 40.1089, 48.3514, 4.6829, 91.4938], [104.9136, 151.8243, 132.5362, 0.0, 174.7576, 0.5625, 0.0, 118.332, 20.7037, 174.8815, 138.7627, 24.5556, 205.1095, 0.0, 42.1875, 9.1029, 31.0784, 1.6522, 26.0495, 93.2342, 0.0, 78.037], [249.6296, 15.6284, 144.1739, 277.5152, 1.7812, 12.0417, 144.6017, 7.5926, 244.763, 176.9898, 47.2482, 0.0, 2.5312, 5.3382, 0.0, 32.6863, 0.0, 34.2772, 6.5225, 0.2195, 117.0679], [237.4938, 190.0743, 138.6449, 4.0, 261.9697, 6.4688, 18.9167, 169.6556, 0.0, 309.2074, 132.6576, 0.0, 131.7956, 0.0, 0.0, 1.7206, 0.0, 25.6275, 0.6522, 6.2376, 68.964, 0.0, 0.0, 88.3025], [277.2346, 222.1419, 185.7246, 0.0, 190.6263, 0.9375, 8.125, 172.7178, 29.5926, 393.1111, 178.8508, 7.3611, 245.0365, 0.0, 119.125, 39.3235, 0.0, 72.7059, 2.7391, 28.2475, 253.9279, 4.0238, 0.9939, 97.2963]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

