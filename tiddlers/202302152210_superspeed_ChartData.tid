created: 20230215221053000
creator: Drevarr
modified: 20230705163519402
modifier: drevarr
tags: ChartData
title: 202302152210_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Domina Flagbringer", "Mac Chiato", "My Birthday Girl", "Tegan Parker", "Jeckyll Mbs", "Skye Nightroad", "Fribble Bibble", "Tribal S", "Zadie Miststep", "Smol Daddy Tika", "Cat Wigglebooty", "Xanvias Tseli", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Spellbreaker", "Spellbreaker", "Tempest", "Scrapper", "Tempest", "Berserker", "Scrapper", "Scrapper", "Druid", "Tempest", "Berserker", "Scrapper", "Berserker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.331, 0.18, 0, 0, 0, 0.243, 0.773, 0, 0, 0.3, 0.604, 0, 0.544, 0.197, 0.464, 0, 0, 0, 1.775, 0.25, 0, 0.409, 0, 0.881], [0.464, 0.159, 0, 0, 0, 0, 0.801, 0.358, 0, 0.665, 0.678, 0, 0.567, 0.894, 0.619, 0.872, 1.19, 1.285, 1.775, 0.958, 0, 0.205, 0], [0.417, 0.396, 0.267, 0, 0.111, 0.233, 0.529, 0.429, 0.648, 0.407, 0, 0.485, 0.319, 0.66, 0.516, 0.722, 0.583, 1.065, 0.59], [0.557, 0.268, 0.234, 0, 0.111, 0.291, 0.529, 0.857, 0, 0.125, 1.625, 0, 0.679, 0.56, 0.894, 0.261, 0, 0.141, 2.636, 0.701, 0, 0.123, 0.134], [0.476, 0.359, 0.534, 0.101, 0.222, 0.228, 0.529, 0.644, 0.299, 0.792, 0, 0.604, 0.495, 0, 0.552, 0.521, 0.722, 0.93, 1.064, 0.75, 0, 0.698, 0.722], [0.397, 0.46, 0, 0.042, 0.185, 0.582, 0.762, 0.715, 0.805, 0.501, 0.505, 0.996, 0.873, 0.816, 0.926, 0.931, 0, 0.409, 0], [0.536, 0.192, 0, 0.405, 0.348, 0.583, 1.316, 0.858, 0.448, 1.219, 0, 0.984, 0.888, 0.172, 1.351, 1.308, 0.36, 0.683, 1.593, 0.723, 0.523, 0, 1.607], [0.196, 1.01, 0.404, 0.389, 0.858, 0.925, 1.125, 0, 0.885, 1.821, 0.597, 0.952, 1.065, 1.276, 1.294, 0.719, 1.346, 1.936, 1.525, 0.669, 1.006], [0.647, 0.622, 0.267, 0.504, 0.444, 0.466, 0.528, 0.642, 0.479, 0.501, 0.789, 0.592, 0.58, 0.61, 0, 0.716, 0.523, 0.722, 0.686, 1.065, 0.573, 0.444, 0.711, 1.071, 0.56], [0.67, 0.679, 0.533, 0.707, 0.673, 0.575, 0.529, 0.857, 0, 0.698, 0.813, 0.596, 0.525, 0.619, 0, 0.742, 0.523, 0, 0.686, 0.79, 0.748, 0, 0.489, 0, 0.542], [0.679, 0.636, 0, 0.506, 0.509, 0.194, 0.881, 0.715, 1.873, 0.596, 0.509, 1.24, 0.584, 1.031, 0, 0.971, 0.436, 1.2, 1.143, 0, 0.98, 0.768, 1.777, 0.885], [1.054, 1.097, 0.846, 0.771, 1.0, 0.683], [0.927, 0.905, 0.398, 0.548, 0.741, 0.777, 0.881, 0.713, 0, 0.585, 1.355, 0, 0.876, 1.098, 1.233, 0.872, 1.204, 1.284, 0, 1.238, 1.488, 1.102, 1.785, 1.33], [1.703, 1.614, 1.037, 1.415, 1.511, 1.789, 1.603, 1.647, 0.802, 1.589, 2.464, 2.385, 1.845, 1.692, 2.945, 1.997, 1.301, 2.406, 2.049, 1.597, 1.59, 1.452, 1.828, 1.083], [2.272, 2.005, 1.068, 1.644, 1.364, 1.806, 1.322, 2.145, 0.212, 1.713, 2.414, 0.699, 1.502, 1.7, 1.907, 1.301, 2.167, 2.909, 2.946, 2.123, 1.786, 1.743, 1.068, 2.623]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

