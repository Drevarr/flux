created: 20230311223557000
creator: Drevarr
modified: 20230705163521699
modifier: drevarr
tags: ChartData
title: 202303112235_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Morton Saltbringer", "Koralia Danai", "Misaki Amakase", "Sofya De Nova", "Husky Guard", "Mistwalker Caelon", "Sheep Paws", "Xyntharos", "Bella Sassy", "Tegan Parker", "Zadie Miststep", "Rina Of Theros", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Black Raspberry Pie", "High Sorcer Baradun", "Lord Erin The Wise", "Smol Daddy Tika", "Xanvias Tseli", "Blanco Padre Guard", "Slautorn", "Venomina The Fierce", "Newtype Khan", "Demon Sekhmet", "Aronorf Xideliesi", "Primal Clone", "Tribal S", "K\u00f4sair", "Drevarr Moonwillow", "Dark Sidiuz", "Seren Nightroad", "\u00c1rkantor", "Panther B Me", "Be\u00eb", "Smol Gluvs", "Vopiscus Zergherdus", "Harry Callahann", "Tootsie Pop Rock", "My Birthday Girl"];
const professions = ["Tempest", "Chronomancer", "Firebrand", "Vindicator", "Weaver", "Dragonhunter", "Vindicator", "Berserker", "Vindicator", "Firebrand", "Tempest", "Tempest", "Scourge", "Chronomancer", "Firebrand", "Chronomancer", "Tempest", "Weaver", "Berserker", "Berserker", "Firebrand", "Weaver", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand", "Chronomancer", "Druid", "Spellbreaker", "Scrapper", "Scourge", "Scourge", "Vindicator", "Scourge", "Scourge", "Scourge", "Scrapper", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15419, 0, 0, 0, 0, 3675, 6628, 20, 820, 3461, 3636, 0, 0, 0, 0, 0, 0, 1941, 0, 0, 0, 0, 0, 9570], [29102, 31, 0, 0, 2389, 164, 741, 392, 7549, 5042, 0, 1150, 0, 310, 0, 332, 0], [12368, 0, 0, 0, 0, 0, 136, 1944, 5025, 11288, 4986, 349, 0, 0, 0, 0, 0, 0, 0, 2322, 4539, 1188, 0, 3204], [10623, 768, 20429, 2018, 865, 215, 142, 112, 2656, 1735, 0, 8094], [17195, 69, 590, 269, 0, 41, 4972, 3676, 2122, 10272, 5109, 412, 0, 0, 1049, 0, 0, 261, 1449, 522, 261, 960, 713], [21417, 0, 5763, 0, 1054, 3223, 0, 2673, 1335, 3752, 9785, 613, 23, 0, 0, 267, 0, 0, 3027, 664], [15516, 0, 0, 0, 261, 3877, 1234, 0, 8310, 9607, 3958, 0, 0, 0, 1653, 1145, 0, 108, 2413, 3372, 459, 5260], [28569, 323, 0, 0, 0, 0, 7482, 2362, 3412, 4063, 6848, 0, 806, 0, 0, 0, 0, 3556, 0], [23921, 12, 0, 0, 0, 2405, 4314, 0, 1120, 4076, 4979, 0, 46, 0, 0, 892, 0, 0, 0, 2420, 4773, 1805, 954, 7663], [29759, 0, 0, 0, 0, 1203, 1622, 1417, 2034, 6542, 5083, 0, 143, 0, 0, 0, 0, 2017, 0, 2757, 0, 0, 1188, 6202], [27831, 0, 0, 2166, 5899, 549, 2534, 10352, 3174, 0, 0, 0, 0, 0, 1362, 0, 0, 1498, 76, 6302], [23366, 0, 400, 0, 0, 4597, 3074, 364, 8612, 9523, 7560, 0, 32, 181, 423, 0, 5775], [32534, 0, 0, 0, 0, 934, 8038, 0, 2942, 1465, 6524, 0, 0, 0, 1387, 1127, 0, 8145, 2235], [17682, 944, 0, 0, 0, 5219, 4731, 434, 3468, 14073, 9328, 0, 420, 0, 366, 0, 0, 1188, 0, 2393, 1485, 0, 490, 4209], [25155, 269, 0, 1756, 0, 2077, 0, 2181, 5680, 4013, 0, 0, 3, 0, 0, 1188, 0, 2662, 5729, 4536, 0, 11505], [32874, 88, 0, 269, 0, 1188, 5921, 843, 4041, 8288, 6452, 661, 98, 0, 0, 165, 0, 1119, 0, 3292, 8257], [47749, 371, 0, 0, 1044, 7021, 6370, 233, 2370, 261, 9624, 0, 0, 0, 1016, 0, 0, 4893], [38457, 46, 0, 0, 269, 2471, 19144, 4064, 626, 261, 8731, 0, 0, 1242, 0, 0, 0, 10, 827, 2376, 318, 2457], [34466, 418, 0, 3214, 0, 1182, 3433, 0, 1139, 7972, 12501, 0, 0, 1188, 0, 0, 2104, 0, 3869, 1342, 261, 251, 8445], [23018, 0, 344, 0, 0, 1240, 7137, 79, 3896, 12739, 13009, 0, 1106, 0, 0, 1807, 0, 3939, 0, 259, 6486, 3780, 836, 4538], [53326, 0, 0, 170, 0, 2935, 10686, 1226, 4178, 3336, 10213, 0, 818, 7, 0, 0, 2924, 0, 295, 5273], [45773, 2765, 81, 269, 1188, 715, 1955, 4569, 1086, 5217, 19845, 0, 2383, 195, 0, 0, 5634, 0, 716, 2459, 1716, 783, 818], [20473, 3427, 1674, 0, 1044, 3551, 16160, 4389, 16467, 5714, 14283, 1188, 0, 0, 69, 1188, 12909], [38102, 26, 3247, 0, 2225, 7073, 7522, 0, 5022, 20529, 15728, 261, 1144, 0, 61, 2645], [49692, 1295, 0, 0, 4518, 4918, 13834, 284, 5193, 3623, 21593, 0, 594, 0, 0, 0, 3413, 0], [33500, 2117, 0, 0, 207, 2008, 2173, 1596, 4308, 14110, 13437, 0, 0, 261, 0, 9, 1044, 2673, 0, 4437, 11745, 7287, 1487, 9441], [39343, 54, 0, 0, 2372, 6577, 4778, 1415, 3962, 10624, 7167, 0, 1106, 0, 0, 0, 4313, 0, 6907, 0, 3339, 22816], [67067, 73, 0, 0, 2801, 1335, 5803, 1985, 4419, 6857, 11314, 0, 297, 0, 0, 1562, 0, 0, 8205, 4604, 0, 4677], [51937, 0, 0, 0, 2527, 7067, 1263, 2154, 17672, 3442, 0, 9, 321, 1009, 0, 2232, 0, 2406, 9537, 3407, 4367, 21567], [51462, 932, 1319, 299, 4022, 2497, 9464, 5358, 1655, 14120, 12920, 1131, 1098, 8, 1230, 4234, 224, 2806, 40, 5949, 4549, 3388, 4156, 17547], [152221, 0, 2380], [97820, 35, 0, 0, 886, 5202, 12776, 83, 6793, 15092, 17708, 0, 0, 0, 0, 25, 0, 6002, 0], [67517, 1226, 103, 0, 2289, 2339, 17289, 2838, 6322, 18668, 15791, 0, 3832, 0, 208, 0, 0, 1870, 0, 33573], [84299, 4825, 0, 0, 1443, 5110, 9558, 1664, 3019, 19424, 9935, 0, 2629, 0, 633, 0, 0, 11303, 2106, 5169, 4527, 8034, 1356, 3745], [52684, 3453, 1010, 0, 2470, 7452, 1986, 5514, 14967, 13087, 0, 24, 925, 1402, 0, 0, 7966, 148, 5670, 12907, 13831, 13712, 24329], [70660, 0, 4664, 0, 3369, 2997, 7172, 628, 6649, 18558, 23297, 1188, 1800, 78, 298, 1047, 5120, 0, 8641, 16374, 11379, 2800, 24194], [200786, 2186, 0, 791, 3148, 14160, 29350], [2786, 2401, 1597, 0, 4154, 18032, 23230, 8788, 14940, 20639, 54226, 163, 2046, 0, 1422, 939, 4867, 1853, 32083, 33991, 16078, 55417], [124081, 4506, 0, 236, 269, 8833, 14034, 7094, 11071, 27232, 75056, 1970, 0, 0, 406, 0, 9259, 0, 0, 11126, 6046, 6650, 5823], [220665, 7056, 434, 2692, 0, 19717, 35687, 1662, 9711, 53312, 54639, 6527, 242, 0, 13697, 0, 13706, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

