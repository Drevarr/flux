created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Charr Surethang", "Bae Ken", "Shaca Booey", "Gestern Yesteryear", "Mother Ship", "Ateriuz", "Geradenil", "No Reserv\u00e9", "Wall Knot", "Aronorf Xideliesi", "Elonith Requiem", "Legacy Of Mathus", "Free H\u00e4nd", "Twinks R Us", "Synomi\u00f1 Spyce", "Ain Sof Aur", "F\u00f9gly", "Heymerino", "Emobilized", "Legoh Brave", "Luke The Knight", "A\u00fcrora Windrunner", "My Heel Your Sack", "Lost Uber Driver", "Govinda Ektar", "Rapiorel", "Kittendoo", "Elonith Requiem", "Drevarr Moonwillow", "Warrior W Warrior", "Pet Pirate", "Conky Jr", "Herm E Licious", "Free H\u00e4nd", "Venport", "Heymerino", "Aronorf Xideliesi", "Rapiorel", "Charr Surethang"];
const professions = ["Berserker", "Reaper", "Berserker", "Firebrand", "Tempest", "Berserker", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Scourge", "Berserker", "Vindicator", "Firebrand", "Scourge", "Guardian", "Tempest", "Chronomancer", "Vindicator", "Tempest", "Berserker", "Firebrand", "Dragonhunter", "Herald", "Vindicator", "Willbender", "Firebrand", "Reaper", "Scrapper", "Spellbreaker", "Druid", "Herald", "Firebrand", "Renegade", "Specter", "Virtuoso", "Guardian", "Dragonhunter", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[718.2882, 716.5388, 712.2453, 230.9273, 2674.4615, 950.5357, 379.4217, 540.5697, 1311.6243, 1437.978, 1762.125, 610.2667, 530.1953, 7.8511, 1241.2941, 1517.2879], [261.6875, 658.4721, 405.6518, 9.3784, 271.75, 2292.1695, 719.5934, 260.6617, 106.3378, 916.0145, 1198.5955, 0.0, 200.3333, 115.5, 318.375, 29.9796, 1589.8039, 1594.35], [504.4856, 977.6727, 946.4127, 267.5667, 2251.1379, 506.0755, 711.4948, 459.6205, 178.3678, 238.3553, 1024.9211, 31.5873, 623.2333, 647.4505, 0.0, 1208.4545, 835.0926], [338.5853, 372.1667, 233.7308, 144.4259, 5236.8947, 3144.2826, 510.5816, 310.8802, 57.1351, 527.2721, 1093.2637, 35.283, 173.8125, 0.0, 525.8016, 7.5581, 2007.1, 1606.4675], [553.0584, 243.969, 227.2946, 1333.8596, 1910.4, 2029.925, 279.5893, 527.5928, 503.7632, 655.0738, 903.5761, 0.0, 773.7879, 167.9048, 434.2216, 16.0, 1287.9739, 759.8917], [353.3223, 634.6431, 408.0388, 0.9057, 4469.381, 472.8814, 589.0928, 292.766, 547.4189, 359.261, 1525.3478, 18.3265, 922.2121, 228.0476, 301.2447, 1.8542, 1439.7282, 1613.5862], [331.337, 767.1597, 537.6615, 781.2, 275.44, 5986.2857, 839.8966, 254.2163, 179.7619, 173.9898, 1732.6413, 15.1667, 481.6774, 47.3333, 409.6358, 0.0, 1206.6068, 917.094], [1033.8417, 1484.3, 1353.9368, 90.9394, 6932.4, 270.4828, 484.0612, 304.6418, 31.013, 351.8539, 837.3855, 1329.7736, 754.1875, 74.6, 431.7055, 41.5, 722.1635, 700.5567], [378.3268, 251.4969, 1470.2809, 676.4259, 2538.56, 462.1429, 477.7245, 134.6454, 231.5541, 468.8942, 1231.1064, 0.0, 909.5806, 320.3043, 319.9193, 16.5208, 1945.4727, 1114.863], [360.5728, 215.0727, 2047.5926, 2197.1818, 221.2143, 858.1835, 181.9556, 587.1978, 1008.3736, 0.0, 640.75, 475.7812, 568.3706, 36.1875, 528.1638, 4065.8696], [578.3697, 175.2258, 976.6557, 1827.9778, 1520.8065, 45.75, 592.3101, 43.7959, 1292.5059, 1503.0769], [454.0441, 422.1115, 2143.4554, 756.8704, 6599.7143, 4546.0952, 804.6224, 337.9184, 186.427], [696.4068, 2228.3333, 462.7824, 81.9079, 530.2088, 1048.6111, 0.0, 958.4375, 134.0, 458.0499, 94.5833, 1386.1215, 1235.3404], [348.1667, 431.8075, 341.2119, 3754.0, 8381.2727, 2615.5357, 397.7041, 375.3794, 428.2694, 1366.2967, 0.0, 484.0625], [780.9517, 301.6622, 619.6858, 2421.9412, 26.0469, 583.375, 86.65, 621.4667, 224.7234, 1691.3585, 2404.2143], [517.0293, 317.9856, 833.8219, 18.5238, 2680.439, 84.4138, 296.6479, 103.5513, 285.0704, 573.4457, 114.5926, 2.5333, 7.2778, 402.8701, 0.0, 957.0976, 1177.9216], [410.9706, 234.6056, 299.6226, 1421.4615, 1588.3774, 223.8265, 644.7583, 499.8635, 1195.0575, 4.1791, 456.9062, 170.625, 576.1556], [2800.7857, 4943.3636, 203.1111, 238.2211, 610.7566, 100.8571, 236.8785, 574.3111, 77.4524, 496.0312, 0.0, 370.2455, 3.4103, 1044.5263, 961.6698], [488.1767, 204.287, 509.2833, 4600.8333, 623.9796, 240.0645, 172.9184, 57.12, 248.5194, 761.2527, 11.8696, 229.1818, 227.8182, 259.4085, 0.0, 682.5, 1905.64], [643.2018, 954.85, 175.2593, 1320.7931, 190.6804, 440.1631, 280.6104, 746.7717], [532.8041, 4378.2, 380.1845, 31.5862, 30.4, 247.2698, 59.2755, 298.8406, 38.0875, 507.6357, 730.0575, 192.3182, 1010.6061, 70.5, 453.6827], [230.9766, 290.7422, 184.5077, 538.283, 4464.5, 1238.9487, 123.0179, 159.3433, 102.8571, 213.6492, 515.2841, 0.0, 170.5, 193.6471, 204.5911, 102.913, 518.875, 807.4038], [522.0218, 437.9293, 916.1244, 169.75, 7073.5, 3695.9615, 572.7449], [634.2624, 1064.1333, 0.0, 710.9091, 49.5294, 378.1528, 0.0, 1165.4766, 971.4752], [734.8027, 223.3056, 56.813, 23.4, 344.3478, 3510.8889, 2.4318, 424.8571, 180.3086, 780.3864, 25.4444, 362.1816], [282.9195, 3811.9643, 390.9721, 265.25, 4115.25, 1667.5, 396.9255, 175.4409], [1065.7857, 441.7414, 300.5265, 131.76, 509.3704, 899.5795, 193.9, 329.4828, 57.2, 362.1024], [3554.75, 160.5741, 541.5268, 385.7167, 3157.4815, 732.4912, 411.5979], [256.4891, 247.8916, 184.1548, 277.6, 4319.92, 834.4355, 124.0114, 326.2388], [48.1333, 584.1541, 10.9111, 3173.4545, 1232.4516], [105.4545, 519.037, 21.1667, 1560.0952], [0.0, 215.6527, 30.234, 515.1402, 1528.3671], [57.15, 280.6985, 114.3778, 1350.7451, 769.0], [349.1502, 327.3406, 306.5185, 345.7119, 204.2842], [0.0, 1028.0952, 1227.1064], [421.9745, 291.8069], [372.1587, 310.3514], [1286.6667], [137.4459]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

