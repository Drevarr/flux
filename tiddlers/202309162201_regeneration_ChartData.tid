created: 20230916220103000
creator: Drevarr
tags: ChartData
title: 202309162201_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Revenant Brandorf", "Crusader Siolith", "Tegan Parker", "Xeltrom", "Anja Starkin", "High Sorcer Baradun", "Tootsie Pop Rocks", "Tribal S", "Etchery Howls", "Zaedy Zae", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Firebrand", "Tempest", "Druid", "Druid", "Tempest", "Scrapper", "Druid", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[174.122, 91.2488, 5.7106, 90.8636, 0.0, 100.4044, 2.686, 119.7472, 83.0471, 62.9526, 10.3974, 57.0046, 10.5819, 19.3752, 13.5002, 34.6925, 37.6577, 99.4455, 107.016], [134.2079, 166.9791, 4.7029, 34.3148, 172.4604, 15.2992, 43.3793, 14.994, 110.3123, 27.6271, 42.5014, 101.8945, 29.8976, 3.2869, 15.9732, 31.7226, 0.0, 5.016, 39.5666, 72.7237, 54.936], [40.9688, 31.1372, 149.6615, 113.568, 111.5125, 121.108, 133.4783, 84.9938, 26.6074, 46.2517, 157.0806, 119.1676, 136.5012, 25.1024, 10.3803, 66.1382, 25.5742, 181.5726, 130.242], [655.2345, 869.036, 224.4462, 235.7057, 0.0, 28.8736, 35.3833], [858.5554, 1226.8926, 71.6026, 239.8183, 143.36, 325.8234, 157.08], [902.2198, 610.4978, 98.024, 358.8278, 45.864, 100.7104, 34.5215, 129.982, 34.1593, 203.9521, 117.5905, 9.8608, 15.4926, 57.4372, 97.9452, 0.0, 17.6409, 8.4998, 29.4708, 318.8345, 164.556], [1426.7289, 1983.2643, 32.7264, 185.9684, 67.9924, 147.9296, 186.3968, 311.95, 9.9403, 84.6625, 50.2566, 9.9949], [2119.4666, 2031.3716, 24.4705, 350.3455, 78.7724, 261.0272, 22.0248, 30.124, 35.4229, 79.982, 23.5693, 4.8298, 112.9421, 0.0, 93.6684, 53.9312, 0.0, 3.192, 28.1424, 49.9933, 428.694], [3191.5223, 2954.7224, 24.4188], [5616.3721, 5352.3307, 278.8782, 915.7693, 64.8564, 254.1504, 420.6258, 575.382, 85.3772, 296.0287, 169.8458, 103.6386, 29.7335, 50.9976, 233.7984, 23.4644, 12.4449, 79.2893, 127.1131, 163.3071, 668.052], [5651.7322, 5883.0634, 193.6708, 711.1654, 127.2628, 337.8816, 618.7532, 611.524, 431.6879, 340.141, 237.2596, 360.2196, 351.1588, 156.2293, 545.8428, 169.8606, 125.8488, 186.8688, 55.6354, 622.3124, 439.866]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

