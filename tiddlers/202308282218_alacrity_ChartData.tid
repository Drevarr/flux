created: 20230828221838000
creator: Drevarr
tags: ChartData
title: 202308282218_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Mad V King", "Hyde En Sikh", "Drevarr Moonwillow", "Tegan Parker", "High Sorcer Baradun", "Venomina The Sly", "Spirita Demon", "Zaedy Zae"];
const professions = ["Scourge", "Chronomancer", "Scrapper", "Tempest", "Tempest", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[286.3625, 31.1172, 67.1908, 47.2785, 80.2321, 29.799, 203.5362], [0.0, 172.235, 75.9033, 0.0, 0.0, 0.0, 0.0, 0.0, 94.3506, 0.0, 0.0, 17.4404, 19.089, 0.0, 71.8754, 0.0, 0.0, 0.0, 0.0, 225.423, 134.0064, 0.0, 0.0, 7.2576, 0.0], [19.9613, 114.0266, 260.9568, 32.8085, 57.7116, 13.386, 20.108, 48.8974, 202.6461, 4.59, 16.1818, 66.9203, 12.663, 102.2798, 191.1363, 0.0, 23.8612, 67.16, 0.0, 170.775, 136.4299, 27.573, 0.0, 17.5258, 0.0], [49.6831, 77.4042, 89.5104, 103.4838, 300.9781, 0.0, 100.4978, 0.0, 0.0, 917.631, 163.2312, 46.6375, 0.0, 0.0, 0.0], [37.9181, 234.0287, 984.2337, 193.2084, 25.2404, 291.3165, 47.1817, 360.7872, 111.9501], [46.8269, 131.5313, 179.0942, 134.8283, 221.3672, 53.0267, 277.0108, 70.5694, 560.4663, 80.0496, 118.7084, 231.7227, 75.1842, 64.6247, 258.5194, 0.0, 277.7724, 96.0388, 0.0, 677.6352, 479.0016, 0.0, 0.0, 135.1258, 95.1127], [107.365, 419.6207, 1733.5436, 112.9944, 270.8821, 90.8177, 491.6966, 151.2073, 1432.1709, 0.0, 310.2768, 384.2776, 183.2166, 224.5159, 306.0499, 91.5236, 690.0098, 186.6041, 0.0, 3025.6776, 748.7251], [25.2509, 526.547, 1837.3617, 116.5501, 374.5399, 0.0, 481.9927, 0.0, 1400.7207, 160.6959, 98.0176, 423.0776, 232.3188, 186.9511, 541.6736, 0.0, 696.326, 100.74, 0.0, 3469.2372, 1056.0845, 109.5868, 0.0, 120.1536, 142.223]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

