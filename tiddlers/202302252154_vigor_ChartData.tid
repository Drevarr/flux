created: 20230225215428000
creator: Drevarr
modified: 20230705163520330
modifier: drevarr
tags: ChartData
title: 202302252154_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Ace Hammers", "Sassy Daddy Demon", "Tegan Parker", "Xyntharos", "Prince Valentin X", "Zadie Miststep", "Venomina The Fierce", "Mac Aaroni", "Grasszanine", "Vopiscus Zergherdus", "Newtype Khan", "Drevarr Moonwillow"];
const professions = ["Vindicator", "Vindicator", "Tempest", "Vindicator", "Druid", "Tempest", "Spellbreaker", "Tempest", "Spellbreaker", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[15.1913, 0.9744, 0.0, 48.6736, 15.96, 11.9473, 4.0248, 9.9165, 0.0, 10.9809], [17.9993, 0.0, 23.0769, 37.4806, 20.102, 15.7299, 9.7344, 6.8522, 1.6748, 7.9407, 4.3346], [0.0, 0.0, 30.0932, 23.985, 30.818, 0.0, 46.3632, 22.0886, 0.0, 0.0, 0.0], [11.934, 0.0, 7.3893, 51.4238, 23.066, 15.9366, 0.0, 9.4058, 0.0, 9.9406, 25.9022], [23.2942, 51.4087, 82.803], [31.0846, 7.5152, 31.0722, 30.9566, 30.172, 30.9223, 0.0, 0.0, 0.0, 30.9393, 53.9849], [88.6486, 48.716, 0.0, 46.176, 0.0, 0.0, 63.408, 0.0], [58.2941, 0.0, 23.4499, 94.4689, 31.502, 31.4391, 18.5328, 26.068, 0.0, 31.4687, 28.5029], [66.3811, 5.9024, 58.648, 82.6363, 28.386, 0.0, 7.2384, 0.0, 98.4647], [82.3165, 162.602, 96.4462, 5.2104, 10.3634, 0.0, 0.0, 66.7521], [126.1634, 0.0, 133.5896, 241.2571, 112.822, 128.0093, 104.1456, 43.475, 0.0, 65.2314, 149.0822], [155.3947, 38.4048, 61.0722, 253.2816, 175.142, 102.1511, 119.9328, 50.7315, 13.6619, 158.167, 33.9934]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

