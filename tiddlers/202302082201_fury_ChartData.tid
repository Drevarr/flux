created: 20230208220141000
creator: Drevarr
modified: 20230705163518875
modifier: drevarr
tags: ChartData
title: 202302082201_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsie Pop Bringer", "Daddys Lil Orchid", "Skye Nightroad", "Lord Erin The Wise", "Mistwalker Caelon", "Tribal S", "Veron Blackburn", "Newtype Khan", "Etchery Howls", "Arcanophage Farra", "Stoic Rapidfire", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Scrapper", "Vindicator", "Scrapper", "Weaver", "Vindicator", "Druid", "Herald", "Spellbreaker", "Druid", "Spellbreaker", "Druid", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[609.3504, 0.0, 91.876, 23.9394, 12.259, 68.8827, 88.0664, 651.7368, 90.577, 51.9038, 31.5875], [615.4848, 47.1653, 248.2654, 57.9043, 23.805, 0.0, 179.1266, 392.964, 120.0093, 58.7198, 614.1275], [601.1712, 15.877, 161.1723, 48.1827, 15.893, 48.1097, 109.1891, 850.4496, 146.4017, 77.123, 624.1025], [799.5168, 95.2152, 92.0984, 34.8459, 15.916, 33.9693, 77.5883, 815.1, 128.7838, 77.7024, 606.1475], [813.4214, 83.1096, 223.6835, 59.1802, 29.808, 52.992, 104.7816, 762.9336, 105.2932, 68.4667, 606.1475], [1095.6038, 139.261, 333.2451, 71.4234, 36.34, 36.0419, 152.6818, 1120.2048, 158.8379, 82.7122, 938.315], [2758.0262, 467.3227, 1042.5588, 345.5725, 203.32, 168.1881], [1578.9946, 54.1493, 403.9874, 109.1857, 54.326, 51.7714, 313.0974, 1309.6512, 255.5639, 102.7171, 1121.19], [2035.8029, 216.0384, 389.9724, 73.2462, 25.668, 90.7382, 224.8646, 1433.2032, 378.5441, 193.0632, 981.8725], [1588.8096, 179.3957, 599.3072, 189.4193, 0.0, 156.8343, 301.6213, 1848.4752, 344.2064, 180.3173, 828.59], [1873.8547, 111.0456, 467.0548, 178.999, 21.229, 57.6671, 214.4696, 1953.4944, 330.8029, 164.6746, 2013.9525], [2374.8307, 125.1533, 498.0879, 202.6346, 84.042, 122.2432, 297.9623, 2305.2744, 372.1878, 223.5989, 1859.6725], [2744.9395, 218.6458, 574.7254, 203.9409, 57.822, 125.3062, 195.6755, 2777.5176, 385.8676, 195.7896, 2314.2]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

