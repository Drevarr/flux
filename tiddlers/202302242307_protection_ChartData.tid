created: 20230224230708000
creator: Drevarr
modified: 20230705163520138
modifier: drevarr
tags: ChartData
title: 202302242307_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Viral Marketing", "Abigail Ryn", "Zadie Miststep", "Venomina The Siren", "Arka\u00f1", "Primal Clone", "Mike The Archmagus", "Arriasa", "Black Raspberry Pie", "Ryvalia Fazebringer", "Akira Moonbright", "Kosair", "Blanco Padre Guard", "Air One Com", "Gavann", "Aronorf Xideliesi", "Kahless The Drunk", "Drevarr Moonwillow", "Zaylen Harker", "Ravioli Fetabringer", "Bella Sassy", "Koralia Danai"];
const professions = ["Tempest", "Willbender", "Tempest", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Druid", "Chronomancer", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[54.4223, 33.097, 14.5882, 25.9651, 23.3184, 32.194, 5.2896, 18.9365, 14.6651, 0.0, 18.863, 0.0, 18.5309, 0.0, 14.256, 0.0, 33.1229, 18.7762, 44.2176, 19.1698, 18.6063, 0.0, 66.5616, 38.8368, 38.2112, 33.3087, 0.0], [39.9517, 14.3208, 35.5238, 15.167, 19.9248, 54.9383, 32.1729, 32.7619, 14.5044, 16.7805, 0.0, 20.2179, 79.5682, 0.0, 14.9869, 59.6837, 19.9778, 14.8963, 29.9802, 27.585, 0.0, 0.0, 54.9584, 29.8512, 48.879, 21.1077, 29.3402], [56.205, 182.4576, 56.3482, 18.7546, 74.088, 96.0606, 135.1013, 75.4948, 29.2842, 18.904, 47.6986], [90.2845, 73.7256, 21.5606, 32.3232, 38.1244, 49.6595, 48.5144, 9.6161, 0.0, 13.8062, 12.9101, 0.0, 73.6459, 0.0, 18.576, 13.7052, 42.2294, 47.877, 32.3131, 43.4022, 15.1596, 18.6278, 18.5712, 45.7856, 15.1632, 47.4325, 31.1126, 32.4032], [114.4023, 5.6222, 66.816, 6.216, 17.64, 35.1918, 18.3578, 38.9624, 16.7305, 18.6665, 43.3709, 0.0, 73.7414, 18.392, 13.932, 18.5655, 65.8886, 67.7054, 44.9438, 42.5869, 64.8917, 0.0, 83.2608, 71.8848, 58.3414, 28.8757], [94.6886, 71.3918, 34.0762, 48.769, 38.2032, 76.7703, 44.2455, 59.4071, 5.0949, 0.0, 19.2394, 9.8138, 78.2309, 14.3986, 15.804, 4.8476, 43.3901, 24.8104, 40.2427, 68.6784, 24.4255, 19.4687, 38.3635, 63.2688, 40.7808, 45.5641, 35.0575, 19.5985], [52.1154, 63.2237, 40.1453, 24.6864, 39.0768, 65.8869, 40.1384, 47.09, 13.0126, 0.0, 19.451, 19.8374, 0.0, 81.7651, 0.0, 39.312, 19.606, 34.5067, 44.1903, 29.4245, 65.0406, 29.6509, 20.8485, 34.3694, 78.4784, 72.3168, 71.1186, 52.7083, 14.8774], [93.8497, 54.8434, 48.1075, 32.5718, 22.4784, 51.8102, 55.3847, 63.429, 12.8061, 17.4636, 29.353, 12.2672, 15.688, 104.4034, 17.3419, 11.124, 14.8981, 46.5149, 42.7954, 34.607, 52.3085, 17.6508, 35.1428, 24.0917, 69.9328, 55.3392, 44.419, 50.3088, 22.0627], [30.2346, 10.5605, 202.8845, 0.0, 59.724, 44.3516, 114.323, 68.9011, 11.4979, 69.431, 18.6533, 60.4327, 60.3182, 176.5568, 80.352, 90.5858, 74.3854, 40.5789], [104.6503, 57.6014, 72.9408, 20.7437, 33.1296, 68.5588, 71.0044, 57.6475, 30.1792, 0.0, 20.8152, 18.6042, 105.3586, 0.0, 21.024, 20.7608, 48.5683, 67.3566, 35.2867, 69.8074, 18.5926, 27.3596, 26.2795, 101.9984, 51.84, 68.6475, 52.4643, 6.4714], [82.9443, 59.617, 34.4102, 22.6262, 44.8224, 80.876, 82.3925, 113.9544, 13.7011, 22.6017, 17.9222, 18.0269, 0.0, 141.6562, 0.0, 22.5, 22.4867, 64.3709, 59.6844, 47.6909, 66.6086, 33.9648, 28.8042, 8.0136, 82.3984, 54.6048, 71.3597, 45.0217, 17.0422], [129.4296, 0.0, 19.8, 0.0, 96.5563, 146.2217, 42.5366, 213.1226, 51.0688, 38.3768, 11.0155, 112.2688, 220.8384, 189.8505, 137.3426, 16.4664], [276.0934, 110.9478, 131.2142, 88.9891, 355.936, 234.6624, 307.0154, 178.5006, 84.6122], [180.1495, 138.1162, 160.3584, 36.2659, 42.3024, 177.5882, 130.8697, 182.4108, 40.851, 45.6638, 21.756, 0.0, 77.5622, 21.0012, 91.512, 21.9283, 175.7923, 71.3921, 92.5498, 156.7373, 128.5985, 21.2797, 47.5982, 222.264, 193.5792, 198.228, 117.0889, 40.694], [227.6511, 29.8085, 69.6, 24.1891, 150.5616, 169.5723, 101.4349, 88.6498, 80.0955, 78.3931, 12.889, 46.1693, 326.965, 0.0, 64.26, 14.9107, 140.1696, 145.1257, 116.7634, 183.7069, 81.6614, 92.7942, 25.4654, 237.0032, 85.4064, 254.5805, 142.6297, 109.3234], [359.7747, 143.6323, 263.7562, 87.7344, 41.4624, 168.7251, 170.3857, 288.7403, 40.1166, 48.0397, 18.3456, 21.1101, 291.145, 72.612, 16.3828, 156.1061, 129.4324, 49.8998, 106.9376, 44.8409, 20.9348, 128.879, 187.0624, 185.5713, 56.8973, 25.6324], [185.0779, 141.5107, 119.0995, 89.1197, 90.2496, 156.2777, 122.3442, 216.0106, 91.6623, 15.5776, 17.8987, 20.9658, 32.96, 232.9733, 39.132, 20.1771, 154.9454, 213.0801, 147.887, 174.6752, 67.1702, 72.6356, 49.0738, 259.4256, 159.3648, 251.8683, 148.3642, 74.3869], [217.2699, 191.4744, 187.5859, 70.5427, 86.2176, 203.0697, 137.5905, 233.8579, 103.1144, 0.0, 20.4389, 20.8346, 0.0, 272.9962, 0.0, 46.764, 17.601, 156.0168, 129.8309, 95.3534, 259.159, 17.4685, 82.4239, 80.7211, 306.8576, 122.5152, 144.7685, 124.3689, 168.6026], [308.7078, 146.9208, 115.536, 80.879, 134.9712, 86.7413, 106.4755, 227.7412, 38.9691, 58.2863, 78.7214, 48.544, 5.48, 268.9843, 59.0261, 119.52, 43.3744, 208.0224, 144.5278, 106.9363, 160.1242, 63.6461, 86.1106, 64.2614, 307.9552, 178.9344, 179.8457, 97.8927, 75.8378], [202.0652, 219.9038, 214.368, 141.5827, 80.1696, 154.9743, 132.3632, 245.8399, 112.6157, 19.451, 0.0, 403.763, 0.0, 53.28, 68.4118, 154.5437, 227.777, 39.7046, 242.3501, 111.768, 89.3878, 20.581, 270.3232, 156.0384, 216.7309, 95.4525, 55.4102], [349.4984, 111.2779, 79.4554, 110.7514, 133.7952, 177.9141, 200.5051, 310.3582, 71.3286, 67.7011, 77.7571, 60.247, 22.656, 433.7563, 0.0, 48.6, 22.4105, 161.5075, 253.2351, 96.0331, 236.2662, 146.3708, 96.5457, 54.5179, 226.0272, 159.9696, 195.3953, 181.5102, 72.4754], [377.9154, 229.451, 234.0787, 98.8166, 150.5616, 145.3291, 282.8354, 222.7138, 31.5103, 5.1529, 29.1648, 16.5181, 17.016, 408.8256, 82.4297, 98.172, 37.9177, 151.1064, 218.112, 104.4442, 218.5792, 107.1503, 55.5386, 160.679, 301.3696, 104.9328, 201.1813, 155.156, 121.8748], [382.6341, 356.2166, 238.199, 114.9427, 59.9088, 184.3659, 267.0289, 268.2956, 27.1269, 58.4472, 69.8771, 469.6718, 91.1643, 85.464, 39.9735, 174.9888, 349.6368, 159.6398, 327.9002, 92.6894, 146.3924, 130.151, 401.5648, 177.7248, 214.3201, 172.1154, 100.2496]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

