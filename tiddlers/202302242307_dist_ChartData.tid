created: 20230224230708000
creator: Drevarr
modified: 20230705163520079
modifier: drevarr
tags: ChartData
title: 202302242307_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Zadie Miststep", "Viral Marketing", "Luck Engi", "Project Jupiter", "Sassy Daddy Demon", "Mike The Archmagus", "Smol Gluvs", "Ravioli Fetabringer", "Xanvias Tseli", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Spellbreaker", "Tempest", "Willbender", "Scrapper", "Druid", "Vindicator", "Tempest", "Scourge", "Firebrand", "Berserker", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[431, 248, 241, 220, 468, 6616, 290, 348, 2044, 256, 300, 357, 1369, 689, 301, 260, 618, 327, 310, 342, 1413, 974, 230, 134, 406, 727, 298, 233, 388], [645, 10648, 368, 366, 4318, 324, 333, 1012, 488, 343, 498, 828, 395, 595, 586, 380, 618, 327, 343, 345, 489, 152, 139, 390, 7806, 334, 320, 485], [570, 221, 264, 433, 673, 4559, 309, 429, 9912, 226, 263, 371, 660, 1065, 1105, 360, 3586, 416, 1380, 635, 173, 176, 600, 307, 268, 333, 659], [358, 775, 308, 709, 273, 298, 297, 369, 445, 201, 152, 424, 252, 373, 295, 509], [386, 176, 277, 414, 476, 471, 266, 387, 891, 358, 344, 343, 561, 369, 372, 556, 333, 396, 383, 298, 630, 173, 109, 310, 320, 275, 238, 533], [620, 263, 281, 353, 2107, 6065, 264, 489, 5563, 209, 357, 363, 276, 3552, 680, 996, 373, 4678, 374, 630, 851, 143, 178, 391, 331, 396, 220, 287], [647, 213, 264, 377, 352, 2139, 346, 571, 6231, 295, 292, 297, 650, 270, 184, 329, 574, 355, 321, 420, 260, 894, 157, 188, 306, 356, 350, 243, 476], [293, 181, 216, 3513, 426, 4739, 297, 8822, 2222, 260, 272, 324, 1469, 454, 240, 405, 687, 232, 309, 274, 4209, 284, 185, 151, 352, 361, 358, 243, 531], [678, 9421, 5506, 230, 539, 2727, 321, 446, 203, 231, 263, 340, 759, 505, 468, 586, 692, 289, 277, 367, 331, 442, 211, 125, 509, 232, 403, 284, 393], [212, 186, 223, 316, 432, 2168, 248, 230, 3160, 274, 275, 364, 708, 700, 207, 390, 601, 263, 191, 480, 1264, 297, 162, 116, 306, 322, 261, 239, 662], [424, 256, 194, 213, 385, 2806, 252, 289, 958, 299, 264, 255, 245, 243, 286, 331, 390, 208, 209, 277, 251, 539, 143, 138, 351, 309, 216, 199, 246], [187, 150, 186, 207, 329, 2674, 251, 248, 271, 185, 215, 231, 793, 343, 201, 264, 267, 211, 228, 238, 254, 243, 127, 112, 236, 221, 213, 188, 228]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

