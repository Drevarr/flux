created: 20230419215809000
creator: Drevarr
modified: 20230705163525962
modifier: drevarr
tags: ChartData
title: 202304192158_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Declan To", "Miphest\u00f6", "Venomina The Siren", "Abigail Ryn", "Mac Chiato", "Tegan Parker", "Zadie Miststep"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[62.5632, 217.6786, 96.0498, 107.4844, 88.0445, 0.0, 61.6414, 19.9027], [0.0, 105.241, 39.6758, 95.8963, 56.6979, 34.226, 87.4768, 0.0, 0.0, 23.9551, 40.068, 87.491, 56.0448, 70.8824, 115.9928, 51.156, 76.8816, 0.0, 22.451, 45.1901], [0.0, 211.5274, 41.807, 246.9542, 145.9808, 19.9895, 138.2349, 0.0, 117.0664, 0.0, 155.9472, 219.8246, 91.2576, 178.0939, 144.452, 31.4894, 117.648, 0.0, 84.224, 49.3478], [0.0, 37.0257, 286.1021, 89.9366, 229.5571, 102.1214, 152.2131, 145.9083, 98.3837, 15.6849, 93.0637, 0.0, 129.108, 126.132, 84.0672, 203.9164, 174.8516, 84.4074, 61.8336, 40.2049, 17.4238, 52.1424], [8.006, 628.6579, 155.329, 454.4467, 175.6331, 331.6315, 137.4391, 0.0, 11.951, 159.8909, 39.966, 221.964, 382.7849, 198.7776, 267.0299, 122.5686, 129.4815, 75.8966, 0.0, 88.5668, 17.3808], [28.0609, 482.2963, 83.472, 423.6835, 199.355, 255.1837, 141.6453, 0.0, 15.9433, 130.0421, 20.0403, 293.5776, 380.018, 217.5264, 312.5338, 284.1608, 202.7483, 173.4077, 72.5116, 62.9458], [0.0, 474.9782, 182.7149, 610.3843, 186.4514, 300.5258, 220.9371, 0.0, 15.995, 214.7881, 74.1119, 251.6016, 255.3172, 141.1872, 305.7267, 233.4948, 171.8273, 57.5654, 20.1025, 107.5698, 99.8885]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

