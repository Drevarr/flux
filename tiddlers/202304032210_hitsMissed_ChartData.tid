created: 20230403221011000
creator: Drevarr
modified: 20230705163524320
modifier: drevarr
tags: ChartData
title: 202304032210_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Zeharah", "Rozaalyna", "Nazhul Naxxremis", "Seren Nightroad", "Azar Fletcher", "Ateriuz", "Thedrunkenbrick", "Zaylen Harker", "Sister Elon\u00edth", "Etch\u00e9ry", "Sumatra Satyricon", "Viral Marketing", "Slingsshot", "Drevarr Moonwillow", "Venomina The Siren", "Bella Sassy", "Be\u00eb", "My Birthday Girl", "Riazera", "Eibh\u00ebar", "Xyntharos", "Raemonnd Redington", "Zenek Tryst", "Ak\u00e1nt\u00f3r", "Smol Gluvs", "Tribal S", "Tootsie Pop Rocks", "Lagertha Scorned", "Mac Chiato", "Your Arch Nemesis", "Tegan Parker", "Cat Wigglebooty", "Solus Sanctus", "Koralia Danai", "Johosh The Great", "Fribble Bibble", "Primal Clone", "Lord Erin The Wise", "Newtype Khan", "Tika Sumiko", "High Sorcer Baradun", "Ryvalia Fazebringer", "Xanvias Tlesel", "Mistwalker Caelon", "Black Raspberry Pie", "Il Dim Snail Il", "Blancooo Padreee", "Sygaldry Verdandi", "Jeckyll Mbs", "Legacy Of Mathus"];
const professions = ["Dragonhunter", "Scourge", "Scourge", "Scourge", "Soulbeast", "Berserker", "Firebrand", "Firebrand", "Dragonhunter", "Berserker", "Soulbeast", "Firebrand", "Untamed", "Scrapper", "Tempest", "Firebrand", "Scourge", "Scrapper", "Soulbeast", "Chronomancer", "Vindicator", "Soulbeast", "Tempest", "Druid", "Scourge", "Druid", "Scrapper", "Scrapper", "Tempest", "Scrapper", "Tempest", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Weaver", "Spellbreaker", "Tempest", "Tempest", "Chronomancer", "Berserker", "Vindicator", "Chronomancer", "Dragonhunter", "Spellbreaker", "Firebrand", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0], [5, 4, 2, 2, 0], [1, 1, 0, 7, 1, 1, 2, 0], [2, 6, 2, 3, 0, 0, 2], [0, 0, 1, 0, 2, 1, 4, 2, 1, 0, 4], [2, 0, 0, 3, 5, 0, 0, 0, 0, 3, 0, 1, 1, 0, 0], [0, 0, 1, 3, 2, 0, 0, 8, 1], [1, 4, 0, 2, 0, 0, 5, 2, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 4, 1, 0, 0, 0, 7, 0, 2, 1, 0, 0], [2, 0, 0, 0, 1, 1, 4, 6, 1, 0, 0, 3, 0], [1, 4, 0, 2, 0, 0, 5, 0, 2, 1, 0, 0, 2, 0, 1, 1, 0, 0], [5, 3, 0, 4, 0, 0, 3, 3, 1], [1, 8, 3, 4, 0, 0, 5], [4, 5, 0, 2, 0, 1, 3, 4, 0, 0, 0, 3, 0, 0, 0, 0, 0], [2, 3, 1, 1, 1, 0, 2, 4, 1, 0, 0, 4, 2, 0, 2, 0], [2, 4, 1, 1, 0, 1, 1, 5, 1, 1, 0, 2, 0, 3, 0, 1, 0], [2, 4, 0, 1, 0, 1, 2, 4, 0, 0, 0, 0, 6, 0, 1, 2, 0], [3, 4, 1, 1, 1, 0, 3, 3, 0, 0, 0, 0, 5, 0, 1, 0, 1, 0], [0, 3, 1, 3, 0, 0, 3, 4, 0, 0, 0, 0, 3, 0, 4, 2, 0, 0], [3, 3, 2, 3, 0, 2, 1, 4, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0], [3, 6, 2, 2, 0, 1, 1, 4, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0], [0, 5, 2, 3, 1, 0, 7, 2, 0, 0, 0, 0, 4], [0, 0, 4, 5, 1, 3, 0, 6, 0, 3, 1, 1, 0], [1, 4, 3, 3, 0, 0, 3, 7, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [5, 5, 2, 2, 0, 0, 3, 5, 1, 1, 0, 0, 1], [3, 6, 0, 5, 1, 0, 2, 5, 1, 0, 0, 0, 1, 1], [3, 6, 2, 2, 1, 0, 3, 0, 0, 1, 0, 2, 0, 4, 0, 1, 0], [3, 4, 2, 0, 0, 4, 4, 2, 0, 0, 0, 3, 0, 3], [2, 5, 2, 2, 0, 0, 4, 4, 0, 1, 0, 0, 3, 0, 2, 0, 1, 0], [1, 8, 2, 1, 0, 5, 3, 0, 1, 0, 0, 5, 0, 0, 0], [4, 5, 0, 3, 0, 0, 3, 4, 0, 1, 5, 1, 0, 1, 0], [2, 4, 2, 4, 2, 0, 4, 3, 0, 0, 0, 5, 2, 0, 0, 0], [6, 5, 3, 3, 1, 0, 2, 4, 0, 1, 0, 0, 2, 0, 2, 0, 0, 0], [3, 7, 2, 3, 0, 0, 4, 6, 0, 0, 6, 0, 0, 1, 0, 0], [5, 6, 0, 2, 0, 1, 4, 4, 1, 1, 0, 7, 0, 0, 0, 1, 0], [1, 2, 0, 10, 1, 0, 2, 5, 1, 4, 0, 0, 2, 0, 4, 0, 0, 0], [5, 7, 3, 3, 1, 0, 2, 5, 0, 0, 0, 6, 0, 2, 0, 0, 0], [5, 7, 3, 3, 0, 0, 4, 4, 0, 0, 0, 6, 0, 0, 3], [2, 9, 3, 5, 1, 1, 3, 4, 0, 2, 0, 0, 4, 0, 2, 0, 0, 0], [3, 6, 1, 2, 1, 1, 2, 9, 0, 2, 0, 0, 5, 0, 4, 0, 0, 0], [9, 7, 0, 7, 0, 0, 3, 5, 1, 4, 0, 0, 1, 0, 0, 0], [3, 8, 2, 3, 0, 0, 1, 3, 1, 1, 0, 10, 0, 6, 0, 0, 0], [3, 9, 1, 8, 0, 1, 2, 6, 2, 2, 0, 0, 4, 0, 0, 1, 0, 0], [2, 11, 3, 4, 0, 0, 4, 5, 1, 1, 0, 0, 5, 0, 2, 0, 1, 0], [3, 8, 1, 5, 0, 0, 6, 4, 5, 1, 0, 0, 4, 0, 1, 2, 0, 0], [4, 4, 1, 4, 0, 0, 7, 5, 2, 0, 0, 0, 9, 0, 3, 1, 0, 0], [9, 10, 2, 3, 0, 0, 3, 0, 2, 3, 0, 0, 6, 0, 1, 2, 0, 0], [4, 4, 4, 3, 1, 1, 5, 7, 0, 2, 0, 7, 2, 0, 2, 0], [9, 7, 5, 5, 1, 0, 4, 7, 0, 1, 0, 0, 3, 0, 2, 0, 0, 0], [3, 11, 2, 6, 1, 0, 4, 6, 1, 2, 0, 0, 10, 0, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

