created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Melli Dragonswrath", "Shaca Booey", "Bella Sassy", "Urilstormwalker", "Ephuras", "The Fancy Cheese", "Black Raspberry Pie", "Solus Sanctus", "Etchery Howls", "Pale Pam", "Arcanophage Farra", "Grasszanine", "Air One Com", "K\u00f4sair", "Aronorf Xideliesi", "Eibh\u00ebar", "Morton Saltbringer", "Tribal S", "Newtype Khan", "Rahani Sunray", "Mike The Archmagus", "Pet Pirate", "Venomina The Siren", "Mother Ship", "Tegan Parker", "Zaedy Zae", "Arriasa", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Chronomancer", "Firebrand", "Druid", "Druid", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Chronomancer", "Chronomancer", "Druid", "Spellbreaker", "Chronomancer", "Weaver", "Druid", "Tempest", "Tempest", "Tempest", "Druid", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 4.989, 0.0, 9.9565, 5.9815, 2.9851, 0.0, 4.0, 4.9684, 0.0, 0.0, 0.0, 0.0, 4.9931, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9841, 11.5476, 0.0, 0.0, 0.0, 8.0, 0.0, 59.0493, 0.0, 0.0, 1.9976, 8.0028], [0.0, 4.0159, 0.0, 0.0, 0.0, 0.0, 3.9918, 0.0, 0.0, 0.0, 0.9872, 5.9775, 0.0, 0.0, 0.0, 2.0, 0.0, 2.0, 0.0, 0.0, 0.0, 69.0118, 0.9884, 0.0, 1.9976, 4.0], [0.0, 0.0, 0.0, 9.9206, 3.0, 17.9205, 14.0301, 0.0, 0.0, 0.0, 71.6956, 0.0, 0.0, 5.9929, 11.0056], [0.0, 8.0, 8.9888, 0.0, 0.0, 2.0635, 12.0238, 9.0227, 15.3609, 0.0, 41.2721, 74.4802], [83.3391, 0.0, 6.9905, 4.0084], [0.0, 1.9895, 0.0, 0.0, 0.0, 57.2213, 23.0276, 48.2462, 0.0, 20.4103, 27.0787, 2.0, 0.0, 0.0, 22.0476, 37.3523, 17.7368, 0.0, 33.0068, 83.2606, 0.0, 0.0, 14.0056], [17.4316, 1.0, 0.0, 0.0, 0.0, 0.0, 12.2747, 0.0, 15.4783, 0.0, 23.0149, 41.536, 0.0, 0.0, 0.0, 33.1831, 0.0, 44.2951, 20.0276, 31.1692, 0.0, 12.859, 29.0225, 0.0, 0.0, 21.3968, 16.0595, 0.0, 20.0902, 0.0, 23.1633, 0.0, 93.1842, 0.0, 0.0, 14.9905, 27.1955], [0.0, 1.0, 4.0147, 4.9804, 0.0, 0.0, 19.967, 0.0, 21.4261, 4.9815, 7.9701, 16.028, 10.0159, 9.9474, 12.0, 9.9577, 0.0, 41.8852, 8.9862, 32.0154, 0.0, 19.1538, 18.1573, 0.0, 0.0, 22.2222, 11.0238, 23.5227, 14.0301, 8.9467, 14.068, 17.0571, 102.4121, 0.0, 24.0924, 24.0307], [54.8105, 4.0083, 0.0, 48.1961, 21.2154, 2.9846, 187.1648, 2.0, 24.9043, 120.8519, 86.5224, 118.044, 67.6349, 61.3789, 64.9268, 62.0, 0.0, 104.8033, 111.0897, 172.3744, 18.0755, 120.2179, 107.9213, 0.0, 0.0, 119.127, 148.5595, 82.4318, 49.6466], [39.6737, 10.025, 7.0441, 46.3235, 4.0154, 0.0, 193.8791, 0.0, 141.6087, 159.963, 72.1493, 195.216, 95.2421, 60.7561, 138.9718, 81.3115, 120.1655, 279.5385], [0.0, 0.0, 2.0, 0.0, 4.0154, 0.0, 18.967, 0.0, 13.9391, 7.9815, 8.9701, 8.012, 13.0317, 3.9789, 6.0, 1.9859, 20.9918, 3.9931, 2.0, 0.0, 3.9744, 26.9663, 0.0, 0.0, 22.6508, 0.0, 0.0, 15.0376, 0.0, 14.0, 0.0, 135.6046], [5.9684, 21.9268, 26.0563, 0.0, 17.9918, 12.9793, 34.0564, 7.0189, 13.9231, 17.9438, 5.0282, 0.0, 16.8571, 21.1071, 15.9091, 11.0226, 0.0, 14.0, 2.0, 137.54, 0.0, 0.0, 3.9953], [0.0, 0.0, 1.0, 2.9902, 0.0, 0.0, 26.7363, 0.0, 16.9565, 11.7407, 15.4776, 0.0, 1.0, 4.9684, 10.0, 2.9859, 24.7541, 17.0069, 38.5949, 0.0, 9.4487, 20.1798, 0.0, 0.0, 14.873, 10.0119, 7.9659, 21.0526, 0.0, 6.0, 12.0286, 127.9152, 2.9884, 9.9905, 20.1145], [8.0, 0.0, 0.0, 5.9804, 3.0154, 0.9846, 21.956, 0.0, 13.9391, 16.5556, 6.9701, 15.028, 10.0159, 1.9895, 16.2195, 5.9718, 44.0246, 5.9931, 8.0, 1.0, 19.0256, 23.9213, 0.0, 0.0, 24.4286, 15.0595, 26.9205, 0.0, 0.0, 35.0272, 10.5429, 133.4941, 0.0, 1.9976, 15.0084], [2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 20.1978, 0.0, 29.9391, 20.2222, 1.9851, 19.056, 16.0317, 0.0, 13.0244, 5.9718, 27.3607, 1.9931, 42.2256, 1.0, 11.9359, 23.7191, 0.0, 0.0, 20.8413, 20.2381, 25.4773, 17.0526, 0.0, 27.0136, 8.2857, 134.8297, 0.9884, 0.9615, 13.9834, 14.0196], [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 26.9451, 7.9652, 0.9815, 17.1791, 27.052, 17.5714, 12.9579, 28.1707, 5.9718, 26.0328, 28.0069, 58.8103, 0.0, 45.2949, 46.8202, 0.0, 0.0, 21.8571, 40.4167, 56.6932, 20.9248, 18.8933, 27.2449, 6.0, 120.4684, 0.0, 30.045, 18.0084], [31.2737, 0.0, 0.0, 4.9804, 0.0, 0.0, 41.033, 0.0, 25.9217, 23.3519, 10.024, 7.0159, 31.0105, 64.122, 24.5634, 0.0, 42.3197, 14.1034, 80.2051, 0.0, 11.9487, 61.4382, 0.0, 0.0, 40.4444, 35.8977, 44.7519, 14.92, 58.6327, 25.5143, 142.1133], [50.0632, 11.025, 7.0441, 46.6176, 11.1846, 10.9846, 164.0659, 0.0, 89.5826, 140.5556, 130.8806, 171.78, 64.7778, 54.0947, 117.5122, 138.0141, 0.0, 118.4262, 104.6759, 293.4, 0.0, 89.6667, 151.9663, 4.1268, 147.4762, 144.3452, 119.875, 102.8647, 50.7333, 120.4286, 61.4857], [1.0, 3.0, 9.0588, 0.0, 0.0, 0.0, 30.2527, 0.0, 29.8957, 34.2778, 20.7313, 43.108, 18.1746, 24.8632, 20.0244, 30.2254, 2.0, 9.9918, 28.0069, 62.3692, 3.0094, 16.9103, 13.9551, 4.0141, 0.0, 27.7302, 30.0595, 28.9091, 37.4511, 6.96, 34.0, 12.1714, 192.6859, 1.9884, 0.0, 34.3246, 48.2318], [14.1474, 0.0, 0.0, 8.9804, 0.0, 0.0, 32.022, 0.0, 45.2174, 0.9815, 14.9403, 34.124, 0.0, 4.9684, 41.878, 26.9859, 38.0082, 36.3862, 94.4667, 0.0, 26.6282, 55.8315, 2.0, 0.0, 39.5079, 1.0, 5.9659, 26.1278, 8.9733, 44.8299, 34.1429, 193.4885, 0.0, 59.3957, 31.0447], [1.0, 0.0, 1.0, 0.0, 0.0, 0.9846, 0.0, 0.0, 10.9565, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.0051, 0.0, 13.2436, 11.9551, 5.0282, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 10.0286, 286.7985, 0.0, 177.2559], [266.5115, 7.9884, 0.9615, 168.0095, 170.2682], [26.1684, 1.0, 5.2794, 7.098, 7.0308, 2.9846, 65.5495, 1.0, 73.4783, 41.3889, 65.0448, 77.804, 37.5397, 4.9684, 9.0488, 71.3239, 0.0, 41.3115, 60.8759, 171.9026, 0.0, 39.6282, 82.7079, 1.0, 0.0, 76.0952, 0.0, 104.7159, 36.6165, 6.9733, 72.2381, 60.6, 306.0862, 6.9884], [25.0211, 0.0, 2.0, 6.9804, 1.0, 3.9846, 50.1648, 0.0, 84.0, 46.9259, 79.9403, 107.952, 79.5873, 43.9053, 4.0, 62.3803, 5.0, 96.6066, 51.8552, 204.9077, 1.0, 85.7436, 102.7978, 0.0, 0.0, 95.0317, 76.0, 127.8636, 56.2556, 11.9333, 76.2313, 56.6286, 323.3773, 4.9884, 70.519, 125.3436], [23.0421, 6.0083, 2.0, 27.098, 4.0154, 1.0308, 100.0879, 1.0, 21.5391, 62.8148, 34.9552, 148.076, 26.2063, 19.8947, 28.878, 21.9155, 48.2295, 71.8966, 212.3282, 8.0189, 102.6538, 115.5506, 0.0, 1.0, 67.254, 85.3452, 86.6023, 58.9173, 25.0, 97.9388, 71.3714, 327.3072, 0.9884, 0.9615, 102.5806, 91.1844], [39.4947, 5.0083, 1.0, 27.902, 6.0308, 1.9846, 86.0659, 0.0, 63.3826, 48.7963, 52.209, 138.044, 84.0317, 96.1053, 77.5122, 29.0845, 0.0, 125.7869, 87.669, 189.9692, 13.066, 82.4487, 95.9213, 0.0, 0.0, 29.9524, 130.6905, 130.8182, 58.2105, 21.88, 92.9592, 72.1143, 380.6657, 2.9884, 0.0, 120.4858, 120.7011], [43.2526, 6.3667, 10.0588, 58.1765, 17.3385, 0.0, 151.0, 0.0, 62.2696, 90.9259, 56.9851, 39.26, 30.3492, 42.9895, 48.9024, 98.338, 3.0, 52.9344, 3.9931, 200.8872, 4.0094, 70.9231, 98.0562, 0.0, 0.0, 16.1905, 141.4048, 116.8636, 76.2707, 25.0133, 104.6667, 71.5714, 422.319, 0.9884, 0.0, 162.9573, 135.2542], [48.3579, 17.1583, 10.1176, 57.7549, 51.9385, 19.9385, 96.6593, 3.0, 89.7652, 88.6667, 69.7463, 174.364, 82.127, 79.6421, 47.7073, 63.4507, 101.9754, 100.6897, 205.2769, 24.1038, 110.1538, 128.4607, 7.0423, 95.1111, 75.8214, 88.2955, 64.7895, 50.0667, 88.2381, 23.7429, 397.87, 6.9884, 0.9615, 154.8934, 155.0531]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

