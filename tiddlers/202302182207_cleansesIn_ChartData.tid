created: 20230218220736000
creator: Drevarr
modified: 20230705163519552
modifier: drevarr
tags: ChartData
title: 202302182207_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Koisx", "Adalvarn", "Liyo Morgaine", "Kira Dragonblaze", "Krahli\u00e1", "Bri The Warrior", "Mini Mei Rev", "Jessica Jung", "Irish Mini Rev", "Belvyn Brightblade", "El Mas Prron Aki", "Sheep Poh", "Kalenthian", "Nelliel T", "Sailor Soup", "Sygaldry Verdandi", "Flower Redrose", "Leilani Ellesmera", "Flanneryflame", "Venomina The Fierce", "Ark Est Destroyer", "Koralia Danai", "Dark Sidiuz", "Sumatra Satyricon", "Minka Bringer", "Primal Clone", "Morv\u00e4rth", "Johosh The Great", "Ace Hammers", "Gabeulon", "Xmus Jaxnflaxn Waxn", "Aveliad Frostmoon", "Be\u00eb", "Kia Forte", "Rina Of Theros", "Husky Guard", "Kahless The Drunk", "Blanco Padre Guard", "Peanut Strongpaw", "Tegan Parker", "Anita Strips", "Legacy Of Mathus", "Newtype Khan", "Lord Erin The Wise", "Aronorf Xideliesi", "Xanvias Tseli", "Zadie Miststep", "Sp\u00edcy Cheese", "Hyde En Sikh", "Drevarr Moonwillow"];
const professions = ["Dragonhunter", "Mirage", "Herald", "Dragonhunter", "Untamed", "Spellbreaker", "Renegade", "Catalyst", "Vindicator", "Firebrand", "Firebrand", "Catalyst", "Mechanist", "Scourge", "Reaper", "Firebrand", "Scrapper", "Soulbeast", "Tempest", "Spellbreaker", "Spellbreaker", "Firebrand", "Scourge", "Soulbeast", "Scrapper", "Chronomancer", "Scourge", "Firebrand", "Vindicator", "Firebrand", "Engineer", "Scrapper", "Scourge", "Scrapper", "Scourge", "Dragonhunter", "Firebrand", "Firebrand", "Spellbreaker", "Tempest", "Chronomancer", "Berserker", "Spellbreaker", "Weaver", "Firebrand", "Berserker", "Tempest", "Berserker", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0342, 0.1507, 0.1053, 0.0, 0.0441, 0.1271], [0.0479, 0.1096, 0.0263, 0.0, 0.0, 0.1864], [0.0588, 0.3136], [0.1624, 0.1333, 0.1071, 0.0336, 0.0], [0.0, 0.3729], [0.1765, 0.0, 0.0753, 0.1918, 0.0526], [0.0889, 0.1548, 0.1681, 0.0479, 0.0137], [0.1667, 0.131, 0.1597, 0.0104, 0.0548, 0.0822, 0.0263, 0.0455], [0.131, 0.0924, 0.0, 0.3559], [0.2308, 0.2222, 0.1667, 0.084, 0.0], [0.1507, 0.2055, 0.0, 0.322], [0.1548, 0.1176, 0.0, 0.0616, 0.1918, 0.0, 0.0, 0.0588, 0.1864], [0.2556, 0.0714, 0.1008, 0.0, 0.0616, 0.2192, 0.0526, 0.0, 0.0, 0.0847], [0.2, 0.0714, 0.1933, 0.0, 0.0753, 0.2329, 0.1053], [0.131, 0.1345, 0.0548, 0.1507, 0.0263, 0.0, 0.0147, 0.2627], [0.0778, 0.1667, 0.1092, 0.0, 0.089, 0.0411, 0.0, 0.2542], [0.131, 0.1176, 0.0, 0.1438, 0.0274, 0.0526, 0.0294, 0.2712], [0.1905, 0.0, 0.1027, 0.2055, 0.1053, 0.0, 0.0, 0.2966], [0.3452, 0.1429, 0.0208, 0.0548, 0.1507, 0.1579, 0.0152, 0.2059], [0.2017, 0.0104, 0.1027, 0.0685, 0.0, 0.0152, 0.2206, 0.2712], [0.2667, 0.2738, 0.395, 0.0], [0.1709, 0.0667, 0.2143, 0.1176, 0.0, 0.0959, 0.0822, 0.0526, 0.0, 0.0, 0.178], [0.2906, 0.2111, 0.2262, 0.2521], [0.1197, 0.1444, 0.0952, 0.0756, 0.0, 0.0616, 0.1096, 0.0, 0.0, 0.0588, 0.322], [0.0256, 0.0778, 0.25, 0.1849, 0.0, 0.0548, 0.1233, 0.0263, 0.0303, 0.0294, 0.2458], [0.2051, 0.0778, 0.1667, 0.1176, 0.0, 0.0411, 0.1918, 0.0789, 0.0, 0.2203], [0.1444, 0.2262, 0.1008, 0.0, 0.0685, 0.1507, 0.0263, 0.0, 0.0147, 0.3729], [0.1709, 0.1111, 0.119, 0.1849, 0.0, 0.0616, 0.0822, 0.0, 0.0, 0.0, 0.3136], [0.1111, 0.1111, 0.1786, 0.2185, 0.0, 0.0616, 0.1096, 0.0789, 0.1029, 0.2034], [0.2444, 0.1667, 0.1597, 0.0, 0.1164, 0.1507, 0.0263, 0.0758, 0.0441, 0.2034], [0.1778, 0.2976, 0.1176, 0.0, 0.0959, 0.1781, 0.0789, 0.0152, 0.0735, 0.2119], [0.3504, 0.4556, 0.1905, 0.2017, 0.0], [0.4017, 0.1667, 0.2381, 0.084, 0.0, 0.0137, 0.0263, 0.0303, 0.0588, 0.1949], [0.1933, 0.0, 0.1781, 0.1644, 0.1316, 0.0455, 0.1029, 0.3983], [0.2051, 0.1667, 0.2143, 0.1345, 0.0, 0.1027, 0.1233, 0.0263, 0.0, 0.0147, 0.2203], [0.2137, 0.2222, 0.1597, 0.0, 0.0548, 0.137, 0.0526, 0.0152, 0.0, 0.3729], [0.1795, 0.1556, 0.1667, 0.2605, 0.0, 0.0822, 0.0685, 0.0263, 0.0, 0.0294, 0.2542], [0.265, 0.1778, 0.131, 0.1849, 0.0, 0.0548, 0.0959, 0.0, 0.0147, 0.3136], [0.2667, 0.25, 0.1345, 0.0, 0.0822, 0.1507, 0.0526, 0.0152, 0.0441, 0.4068], [0.0256, 0.1444, 0.3214, 0.2605, 0.0616, 0.1233, 0.0526, 0.0303, 0.4237], [0.2735, 0.0889, 0.2024, 0.1513, 0.0, 0.0822, 0.1233, 0.0, 0.0152, 0.1765, 0.3136], [0.2051, 0.0889, 0.2024, 0.2689, 0.0, 0.089, 0.0685, 0.0, 0.0303, 0.1029, 0.3898], [0.2051, 0.3778, 0.2143, 0.2017, 0.0, 0.0479, 0.137, 0.0, 0.0, 0.1618, 0.2458], [0.188, 0.1556, 0.1548, 0.1429, 0.0729, 0.1233, 0.1644, 0.0, 0.1176, 0.4068], [0.2906, 0.2778, 0.1667, 0.084, 0.0548, 0.2466, 0.0152, 0.1618, 0.4068], [0.4188, 0.2667, 0.1429, 0.1345, 0.0, 0.0685, 0.1507, 0.0, 0.0, 0.0441, 0.3898], [0.4017, 0.1444, 0.2619, 0.1597, 0.0411, 0.2603, 0.0263, 0.0, 0.4492], [0.4017, 0.1889, 0.1667, 0.2941, 0.0, 0.137, 0.1644, 0.0263, 0.0, 0.3051], [0.359, 0.1333, 0.3929, 0.1933, 0.0, 0.0753, 0.1644, 0.0789, 0.0, 0.1029, 0.339], [0.3248, 0.2222, 0.2262, 0.2437, 0.0, 0.1918, 0.1781, 0.1316, 0.0152, 0.1912, 0.4492]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

