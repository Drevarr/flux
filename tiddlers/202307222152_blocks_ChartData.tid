created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Freyviana", "Sr Conrad", "Audra Storm", "Lord Erin The Wise", "Cedryn X", "Edgy Nekrodancer", "Tribal S", "Pookha Thundernutz", "Kosa\u00efr", "Mort\u00e4rion", "Belvyn Brightblade", "Nina Chan Fanboy", "Dakk Regia", "Aira Draugr", "Skylar Shadowmoon", "Charr Surethang", "Johosh The Mighty", "Jimbo The Pleb", "Sirius Quack", "Name Is What", "Vee U", "Kary\u00edna", "Venomina The Sly", "Daphne Agla\u00e9", "Tootsie Pop Rocks", "Glorious Gluvs", "Rahani Sunray", "Keypek The Drunk", "Crusader Siolith", "Newtype Khan", "Tegan Parker", "Aronorf Xideliesi", "Sub Train", "Xanvias Einzbern", "Be\u00eb", "Hyde En Sikh", "Bella Sassy", "Sygaldry Verdandi", "Mistwalker Cael", "Zaedy Zae", "Yummy Kiwi", "Drevarr Moonwillow"];
const professions = ["Tempest", "Bladesworn", "Weaver", "Weaver", "Berserker", "Harbinger", "Druid", "Firebrand", "Weaver", "Scrapper", "Firebrand", "Druid", "Chronomancer", "Herald", "Scrapper", "Berserker", "Berserker", "Berserker", "Reaper", "Scourge", "Tempest", "Vindicator", "Druid", "Scourge", "Scrapper", "Berserker", "Chronomancer", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Firebrand", "Firebrand", "Berserker", "Scourge", "Chronomancer", "Firebrand", "Firebrand", "Vindicator", "Druid", "Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 16], [13, 0, 1, 2, 2], [3, 20], [0, 1, 8, 2, 1, 4, 7, 1, 3, 0, 7, 0, 3], [1, 3, 5, 4, 2, 0, 1, 7, 3, 0, 0, 5, 3, 2, 1, 2], [5, 2, 0, 0, 3, 0, 2, 3, 6, 2, 10, 2, 5], [7, 0, 1, 16, 1, 3, 7, 2, 1, 2, 3], [6, 22, 1, 17], [2, 0, 1, 8, 2, 0, 4, 4, 1, 2, 1, 12, 0, 14], [1, 0, 0, 7, 7, 0, 0, 11, 0, 1, 14, 3, 3, 8], [2, 38, 0, 4, 8, 4, 1, 1, 15], [41, 0, 5, 4, 2, 0, 0, 3, 0, 4, 6, 5, 2, 3], [5, 1, 5, 2, 0, 2, 14, 0, 5, 2, 14, 3, 0, 10, 3, 11], [5, 44, 0, 5, 6, 2, 0, 1, 15], [1, 43, 0, 8, 7, 2, 0, 2, 16], [2, 37, 1, 8, 5, 4, 0, 2, 10, 1, 3, 8], [1, 33, 1, 6, 9, 3, 0, 0, 9, 4, 5, 6, 7, 2, 5], [2, 26, 0, 8, 4, 4, 0, 1, 12, 0, 2, 9, 3, 2, 5, 4, 8, 0, 8], [0, 33, 1, 8, 5, 3, 0, 0, 12, 0, 7, 8, 8, 1, 1, 2, 6, 0, 9], [2, 24, 4, 6, 5, 0, 1, 5, 2, 6, 11, 8, 5, 6, 3, 11, 3, 5], [1, 32, 0, 7, 8, 4, 3, 17, 1, 2, 5, 13, 5, 4, 3, 11], [2, 45, 1, 10, 9, 5, 0, 2, 16, 0, 6, 4, 3, 2, 5, 6, 4, 0, 6], [1, 35, 0, 4, 6, 2, 0, 1, 11, 8, 8, 6, 5, 4, 28, 2, 9], [0, 48, 0, 9, 3, 3, 0, 2, 16, 7, 3, 3, 9, 1, 15, 2, 11], [2, 53, 1, 5, 6, 2, 0, 12, 0, 2, 7, 9, 6, 5, 2, 13, 0, 14], [1, 46, 0, 7, 7, 3, 0, 2, 13, 3, 2, 9, 6, 3, 12, 7, 15, 1, 8], [50, 2, 8, 5, 5, 0, 3, 30, 2, 1, 8, 15, 8, 7, 5, 0, 4], [3, 49, 2, 8, 4, 5, 0, 4, 11, 1, 6, 6, 9, 5, 4, 3, 18, 1, 15], [1, 42, 2, 7, 5, 4, 1, 2, 19, 1, 4, 8, 13, 4, 10, 6, 22, 1, 6], [2, 54, 1, 9, 2, 6, 1, 13, 3, 2, 5, 13, 4, 8, 31, 1, 12], [53, 0, 7, 5, 4, 0, 0, 11, 2, 1, 9, 9, 10, 9, 4, 20, 1, 22], [3, 55, 4, 4, 9, 1, 1, 18, 3, 2, 11, 8, 7, 8, 13, 7, 1, 13], [3, 54, 1, 10, 4, 6, 0, 1, 13, 1, 3, 10, 10, 5, 14, 4, 7, 1, 24], [3, 53, 0, 9, 4, 2, 0, 3, 11, 2, 1, 11, 16, 2, 7, 6, 26, 0, 17], [0, 66, 1, 14, 10, 5, 1, 1, 17, 1, 2, 10, 10, 5, 8, 4, 13, 1, 9], [1, 55, 0, 11, 8, 7, 0, 2, 23, 2, 5, 6, 10, 3, 9, 8, 23, 1, 19], [3, 64, 1, 11, 9, 3, 0, 1, 18, 2, 1, 12, 9, 3, 9, 8, 25, 1, 14], [2, 52, 0, 10, 6, 4, 1, 4, 12, 1, 4, 15, 12, 3, 4, 4, 34, 0, 28], [1, 63, 0, 8, 6, 3, 0, 1, 12, 2, 3, 4, 5, 0, 4, 6, 65, 0, 18], [1, 71, 0, 9, 7, 5, 0, 3, 18, 3, 1, 18, 16, 9, 5, 5, 17, 2, 14], [2, 52, 0, 8, 11, 8, 0, 2, 26, 10, 15, 9, 12, 7, 26, 0, 21], [4, 62, 0, 11, 12, 9, 1, 1, 24, 2, 4, 5, 14, 6, 11, 3, 29, 0, 18]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

