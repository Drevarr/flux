created: 20230204000024000
creator: Drevarr
modified: 20230705163518645
modifier: drevarr
tags: ChartData
title: 202302040000_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Whose Guardian", "Tegan Parker", "Sakis Ranger", "Grasszanine", "Arcanophage Farra", "Fribble Bibble", "\u00c9\u00efbhear", "Etchery", "Newtype Khan", "Abigail Ryn", "Mike The Archmagus"];
const professions = ["Dragonhunter", "Tempest", "Druid", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Scrapper", "Spellbreaker", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Top Output in Seconds for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 12.8768, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 18.5382, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 266.9882, 22.1021, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 104.7091, 0.0, 0.0, 0.0, 19.3173, 41.0346], [0.0, 49.5205, 0.0, 7.0331, 27.5008, 0.0, 14.6059, 1.4912, 0.0, 0.0, 18.8307, 0.0, 35.5212, 62.4348, 0.0, 62.1421, 31.5084, 28.6707, 0.0, 30.5276, 20.3919, 15.4163, 47.1322, 0.0, 5.5223, 15.8625, 0.0, 23.3172], [59.4109, 15.0568, 41.8509, 0.0, 51.282, 12.4362, 60.6177, 113.8051, 51.6274, 42.2247, 37.1671, 0.0, 0.0, 147.2717, 32.9573, 17.5136, 37.1056, 0.0, 74.3121], [61.7099, 37.637, 0.0, 0.0, 0.0, 31.505, 0.0, 12.595, 0.6433, 152.0011, 43.2753, 31.9725, 0.0, 71.9136, 85.9113, 19.8841, 156.6365, 147.9258, 77.8253, 57.2094, 34.0798, 13.6215, 7.8091, 0.0, 7.1966, 0.0, 27.9434, 0.0, 82.7577], [37.6446, 17.1389, 17.472, 0.0, 35.6909, 0.0, 58.1049, 0.0, 0.0, 135.2492, 0.0, 33.075, 0.0, 84.1104, 36.0819, 89.5752, 61.9133, 94.457, 103.6425, 0.0, 41.9562, 13.5205, 36.7567, 130.4294, 98.7357, 21.2327, 70.0234, 45.2661, 58.5225], [18.2753, 0.0, 17.4216, 0.0, 23.5851, 29.0354, 8.4911, 9.6667, 30.4096, 129.6003, 2.2845, 36.6912, 0.0, 85.4172, 118.2285, 122.5224, 49.192, 195.2566, 43.074, 44.1945, 78.61, 32.5785, 42.2096, 337.367, 71.2031, 17.2431, 75.0487], [21.9908, 1.6976, 2.7552, 0.0, 15.4, 106.0517, 10.7806, 63.0454, 95.0008, 5.4541, 11.1109, 37.9701, 0.0, 112.8996, 142.0434, 169.9484, 208.4368, 66.6996, 56.6959, 100.3637, 74.3886, 1.3945, 7.1808, 187.0925, 108.931, 22.247, 69.3382, 0.0, 134.2575], [37.5314, 36.6076, 0.4368, 61.8868, 14.3491, 62.9219, 9.5344, 38.3141, 85.9364, 88.1749, 26.8426, 57.5064, 0.0, 151.6284, 140.9436, 127.0913, 15.9245, 166.8854, 37.5708, 72.7358, 190.2186, 66.1675, 61.6651, 277.1789, 62.1801, 27.4537, 68.0692, 0.0, 103.5963], [39.0213, 42.4771, 0.0, 57.2145, 45.9346, 30.487, 55.4602, 108.188, 67.8518, 61.0579, 29.988, 0.0, 125.6112, 97.6707, 46.332, 164.8733, 302.6034, 26.2248, 48.2284, 84.5302, 59.0334, 54.8658, 248.8474, 74.4743, 78.3941, 104.6417, 63.2779, 100.7964], [73.422, 132.4159, 60.7656, 70.8016, 116.8946, 125.1382, 16.8374, 232.8127, 240.9084, 394.4497, 48.8308, 199.4202, 300.4452, 251.6004, 452.3161, 167.8019, 276.551, 147.3279, 130.3764, 197.7862, 85.9329, 91.802, 457.6128, 103.8606, 19.4069, 36.5726, 69.2472, 333.8766], [0.0, 23.3516, 0.0, 0.0, 10.3879, 122.5804, 45.1508, 145.8475, 582.7467, 54.6458, 202.5513, 75.848, 265.0824, 246.4821, 350.5145, 293.2758, 344.6146, 151.1665, 106.351, 262.445, 113.56, 56.3917, 730.6138, 65.4785, 99.1535, 85.5814, 60.1467, 361.6461]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

