created: 20230310230833000
creator: Drevarr
modified: 20230705163521683
modifier: drevarr
tags: ChartData
title: 202303102308_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Demon Sekhmet", "Nimplet", "Rayge Storm", "Sp\u00edcy Cheese", "K\u00f4sair", "Sofya De Nova", "Venomina The Siren", "Mac Chiato", "Tegan Parker", "High Sorcer Baradun", "Zadie Miststep", "Cat Wigglebooty", "Riann Swordbreak", "Drevarr Moonwillow"];
const professions = ["Berserker", "Scrapper", "Tempest", "Berserker", "Spellbreaker", "Weaver", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.304, 0.662, 0.439, 0.249, 0, 0.271, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.631, 0, 0.939, 0.348, 0, 0.576, 0.483, 1.325, 0, 0.319, 0.202, 0.42, 0.466, 1.295, 0.418, 1.006, 1.126, 0.379, 1.241], [0.484, 0.561, 0.219, 0.463], [0.405, 0.241, 0.238, 0, 0.495, 0.098, 0, 0.138, 0, 0, 0.759, 0.839, 0, 0, 0.447, 0, 0, 0, 0, 0.552, 0, 0.368, 0.29, 0.531, 0.242, 0, 0.372, 0.436, 0, 0.625, 0.642], [0, 0.138, 0.585, 0.497, 0.774, 0.63, 0.821, 0, 0.546, 0.552, 0, 0.941, 1.088, 0, 0.472, 0.569, 0.915, 0.576, 0.764, 0.419, 0.484, 0, 0.51, 0.834], [0.49, 0.312, 0.509, 0.552, 0, 0.149, 1.003, 0.387, 0.269, 0.293, 0, 0, 0.263, 0.471, 0.608, 0.381, 0.866, 0, 0, 0, 0.984, 0.16, 0, 0, 0, 1.205, 0.469, 0.581, 0, 0.627, 0.577], [0.486, 0.487, 0.512, 0.588, 0.255, 0.164, 0.38, 0.349, 0.302, 0.285, 0.558, 0.827, 0.529, 0.471, 0.671, 0.087, 0, 0, 1.056, 0.662, 0, 0.439, 0.13, 0.635, 0.371, 0.916, 0.391, 0.891, 0.557, 0.61, 0.549], [0.082, 0.378, 0.149, 0.404, 0.392, 0.012, 0.362, 0.4, 0, 0.456, 0.926, 0.488, 0.445, 0.451, 0.349, 0.263, 0, 0.651, 0, 0.478, 0.498, 0.585, 0.559, 0.916, 0.446, 0.639, 0, 0.611, 0.471], [0.208, 0.328, 0.212, 0.378, 0, 0.34, 0.38, 0.289, 0.588, 0.286, 0.473, 0.504, 0.528, 0.944, 0.268, 0.351, 1.143, 0.778, 0, 0.331, 0.738, 0.63, 0.482, 0.61, 0.371, 0.474, 0.444, 0.536, 0.513, 0.565, 0.577], [0.622, 0.539, 0.474, 0.502, 0.387, 0.427, 0.597, 0.577, 0.114, 0.161, 0.456, 0.45, 0.471, 0.71, 0.696, 0.287, 0.576, 0.331, 0.319, 0, 0.229, 0.863, 0.216, 0, 0.72, 0.413], [0.488, 0.486, 0.352, 0.73, 0.686, 0.666, 0, 0.472, 0.541, 0.852, 0.456, 0.885, 0.506, 0.49, 0.435, 0.696, 1.147, 0.576, 0, 0.844, 0, 0.477, 0.517, 0.927, 0.58, 0.917, 0.649, 0.602, 0.551, 0.611, 0.693], [0.799, 0.568, 1.251, 1.25, 1.006, 1.304, 0.693, 1.274, 1.378, 0.93, 0.696, 1.67, 1.423, 0.166, 0.457, 1.323, 1.2, 0.882, 1.05, 0.844, 0], [1.167, 1.015, 0.766, 0.902, 0.69, 0.898, 1.316, 1.057, 0.924, 1.252, 0.546, 0.63, 0.962, 1.442, 0.985, 1.157, 0, 0.96, 0, 1.104, 1.125, 1.05, 1.106, 1.056, 1.009, 0, 0.763, 1.464, 0.929, 1.528, 1.114], [1.778, 1.344, 1.093, 0.86, 0.947, 1.176, 0.566, 1.547, 1.428, 1.883, 0.665, 1.729, 1.28, 0.94, 1.242, 1.225, 1.147, 0.996, 1.539, 1.446, 1.064, 1.495, 1.754, 1.721, 2.415, 1.379, 1.809, 1.581, 1.431, 1.289, 1.893]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

