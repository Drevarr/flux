created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Mielikki Embla", "Seiker Novus Terra", "Mike The Archmagus", "Tegan Parker", "Mistwalker Cael", "Rozaalyna", "Legacy Of Mathus", "Black Raspberry Pie", "Pr\u00e6tor Lightbringer", "Zaedy Zae", "My Birthday Girl", "Morton Saltbringer", "Eibh\u00ebar", "Xanvias Einzbern", "Name Is What", "Squishy Jellyfish", "Raziel Umbra", "Rina Of Theros", "Koralia Danai", "Klengah", "Kisumaiassu", "Sister Elon\u00edth", "Tropcaller", "Crusader Siolith", "Heian I", "Sygaldry Verdandi", "Drevarr Moonwillow", "Bella Sassy", "High Sorcer Baradun", "Blancooo Padreee", "Arcanophage Farra", "Newtype Khan", "Jerryatric Reflexes"];
const professions = ["Berserker", "Druid", "Tempest", "Weaver", "Tempest", "Vindicator", "Scourge", "Berserker", "Chronomancer", "Firebrand", "Druid", "Scrapper", "Chronomancer", "Chronomancer", "Berserker", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Firebrand", "Druid", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Herald", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.3789, 7.9688, 39.3108, 5.3676, 8.8445, 0.4968, 0.0], [0.0, 44.5522, 2.8116, 15.4181, 0.0, 8.93, 0.0, 0.0], [13.9146, 66.6655], [1.5293, 9.3293, 37.0177, 1.4152, 1.8576, 2.3184, 1.247, 2.772, 8.148, 5.4567, 4.214, 2.4329, 1.908, 2.7275], [0.0, 15.3544, 32.759, 16.1667, 13.3464, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.483, 4.6986, 0.0, 7.2504, 0.0], [1.9069, 0.0, 36.6901, 7.4763, 3.227, 4.4712, 4.4204, 1.4458, 0.7857, 3.3428, 2.4252, 1.895, 1.0101, 2.31, 4.5629, 1.1379, 4.8375, 9.7343, 0.6347, 0.7997], [6.5325, 10.4954, 37.0177, 8.1792, 7.4102, 5.3544, 5.0901, 2.4825, 1.296, 4.8556, 5.6045, 4.4393], [4.6067, 0.0, 45.2074, 6.7095, 4.7011, 7.5624, 4.8222, 1.8005, 1.4823, 3.7152, 0.8669, 1.4091, 3.784, 8.2702, 9.5589, 4.3193, 3.7728, 1.5264, 1.7422], [20.505, 39.966, 8.6265, 5.7768, 5.1336, 3.6613, 4.1738, 4.2212, 4.2828, 5.3021, 3.105, 4.29, 9.1258, 1.0483, 3.9087, 2.9709, 3.4907, 2.3956, 1.4137], [23.4204, 67.4835, 5.5593, 7.7688, 14.1864, 6.6082, 2.1824, 0.0, 1.464, 3.4572, 3.4675, 5.1127], [4.2858, 8.4547, 52.0868, 28.4355, 2.1912, 3.036, 1.1162, 0.0, 3.3672, 5.7276, 3.1248, 2.5813, 4.136, 4.1147, 7.9335, 5.1832, 5.0069, 0.0, 2.3276], [7.9296, 0.0, 32.759, 0.0, 4.968, 2.4111, 2.046, 0.0, 7.4908, 6.1404, 9.9792, 6.1726, 15.356, 14.096, 0.0, 9.4041, 9.3551, 8.9208, 9.3492, 0.0], [6.136, 10.787, 51.104, 12.0132, 5.1394, 7.6176, 6.6082, 5.3196, 0.0, 4.032, 1.8081, 6.908, 4.8073, 2.3475, 8.901, 4.5301, 5.8179, 2.8832, 2.756], [2.6243, 15.3544, 40.6212, 10.2879, 5.1792, 7.2312, 5.8938, 4.3375, 2.1789, 4.6848, 4.0764, 3.3062, 4.3271, 5.742, 11.6924, 1.8995, 7.353, 4.0454, 7.8277, 2.332, 1.9564], [6.5702, 13.1193, 35.0521, 7.4763, 2.6294, 5.3544, 6.6529, 2.4156, 1.9608, 8.8099, 5.6115, 8.976, 17.4367, 1.353, 11.223, 5.7521, 7.4046, 4.2612, 1.328], [5.0976, 15.9375, 48.4833, 10.0323, 0.9163, 9.384, 6.4742, 3.4646, 1.5714, 4.8312, 10.1136, 4.4957, 3.6537, 6.468, 7.4147, 1.5501, 9.7137, 1.4538, 5.9942, 0.0, 1.1281], [10.5926, 98.9322, 20.3202, 7.6094, 17.1672, 5.6706, 5.5378], [1.9446, 9.3293, 57.6558, 10.863, 5.4979, 7.7832, 9.6444, 4.583, 2.2356, 1.4964, 5.7254, 4.3396, 7.326, 14.7071, 8.3205, 4.2772, 7.9688, 5.4272, 5.0266], [4.6445, 13.6052, 49.4661, 8.8182, 4.1832, 7.7832, 6.1171, 2.9462, 0.0, 5.856, 8.1528, 7.8221, 6.5467, 9.284, 11.8961, 1.6128, 7.8561, 5.0568, 7.6162, 3.0952, 5.6977], [2.5299, 25.364, 83.2079, 11.4381, 10.4381, 11.2056, 7.4119, 0.0, 0.0, 1.7544, 1.8749, 1.6086, 2.728, 2.8111, 2.8314, 2.0511, 5.9839, 7.863, 2.2684, 1.7564], [2.681, 29.5427, 87.4665, 8.4987, 4.8605, 7.452, 14.8238, 1.6368, 0.5184, 1.6592, 0.0, 1.7539, 4.7635, 2.926, 5.3777, 0.9318, 7.8174, 5.8364, 2.8208, 0.0, 0.0], [8.8736, 23.8091, 95.9839, 10.7991, 17.1312, 13.8552, 16.6545, 9.5753, 0.0, 7.2956], [2.3323, 83.863, 11.0547, 9.3624, 11.4264, 15.4935, 7.4474, 0.0, 5.2704, 6.1404, 4.153, 3.4417, 6.578, 6.0295, 4.6413, 8.2431, 8.9548, 8.8503, 3.71, 4.1412], [130.0532, 20.448, 11.5536, 12.144, 12.2341, 0.0, 0.9028, 0.0, 1.0886, 6.4844, 2.53, 9.8591, 4.6234, 13.1193, 11.6939, 16.2196, 1.4204, 1.9278], [16.2291, 103.5184, 18.7866, 16.5336, 12.3096, 17.101, 16.9136, 5.4168, 0.8256, 5.2416, 0.0, 9.306, 9.6146, 4.2829, 10.3716, 4.4247, 7.3693, 5.2576, 5.355], [78.9492, 57.8295, 31.4338, 47.3616, 50.3206, 22.315], [3.7949, 34.013, 108.4323, 25.4322, 16.5734, 14.7384, 20.1818, 19.4506, 3.416, 4.7472, 7.0762, 2.8182, 8.008, 11.285, 3.5661, 22.3686, 11.5674, 18.6173, 0.0, 5.7406], [9.5533, 38.7748, 135.9498, 36.8064, 13.3464, 12.42, 13.4843, 4.1738, 3.4263, 8.2716, 10.1136, 4.657, 4.8758, 6.776, 17.0293, 4.2829, 15.7896, 8.3437, 11.1422, 8.5436, 9.3677], [9.6477, 38.6776, 153.9673, 34.8894, 15.179, 20.148, 17.3242, 18.4686, 0.0, 4.3188, 12.642, 4.7578, 3.9156, 8.052, 15.4405, 5.6717, 24.1875, 12.4102, 15.9023, 12.8472, 1.428], [11.7622, 55.4898, 116.2944, 45.6885, 20.0395, 0.0, 17.0563, 0.3546, 0.0, 42.5184, 16.8134, 2.3444, 21.362, 50.8028, 38.4291, 13.4005, 17.3127, 0.0], [8.0806, 74.8286, 307.9346, 70.4178, 40.1986, 28.7592, 43.623, 9.6026, 7.8894, 20.984, 21.5172, 1.459, 23.2716], [2.6243, 58.9883, 309.5725, 60.3855, 25.896, 31.2432, 43.3998, 2.8371, 23.2532, 18.2664, 2.2982, 8.118, 21.494, 37.4808, 37.1907, 13.1898, 31.0993, 9.8792, 16.1935], [3.6627, 105.3431, 302.3656, 70.7373, 22.5893, 56.3592, 45.8556, 17.541, 0.1539, 26.962, 9.7524, 15.3418, 3.7285, 21.758, 40.74, 1.2275, 32.3145, 25.6633, 26.1982, 3.4344, 7.2542], [128.472, 439.6258, 100.1313, 36.8122, 72.6432, 58.5361, 20.4054, 34.9408, 32.5596, 27.5789, 19.1414, 28.93, 40.2511, 1.0662, 49.536, 18.1202, 45.4149, 24.4436, 17.0932]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

