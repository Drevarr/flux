created: 20230626220846000
creator: Drevarr
modified: 20230705163539348
modifier: drevarr
tags: ChartData
title: 202306262208_chaosOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "My Birthday Girl", "Specialist Zeff", "Mistwalker Cael", "Tootsie Pop Rocks", "\u00c1rkantor", "Zadie Miststep", "Ateriuz", "Gravlyn Isshtail", "Ateriuz", "Aira Draugr", "Lord Erin The Wise", "Be\u00eb", "Zaylen Harker", "Bella Sassy", "Il Kurai Il", "Shaca Booey", "Cyr", "Mike The Archmagus", "Regis Hawkesburne", "Arcanophage Farra", "Gavann", "Crusader Siolith", "Mike The Archmagus", "Legacy Of Mathus", "Drevarr Moonwillow", "Grasszanine", "Tegan Parker", "Arriasa", "Johosh The Mighty", "Xanvias Einzbern", "Sub Train", "Artakama Nahid"];
const professions = ["Spellbreaker", "Scrapper", "Scrapper", "Vindicator", "Scrapper", "Vindicator", "Tempest", "Spellbreaker", "Spellbreaker", "Berserker", "Herald", "Weaver", "Reaper", "Firebrand", "Firebrand", "Reaper", "Berserker", "Tempest", "Weaver", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Berserker", "Scrapper", "Spellbreaker", "Tempest", "Druid", "Berserker", "Berserker", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Chaos Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.1317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.7797, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 2.9753, 0.0, 0.0, 8.8929, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9556, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9556, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0334], [0.0, 0.0, 0.0, 0.0, 14.8548, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 9.6545, 0.0, 8.0073, 0.0], [11.9738, 0.0, 0.0, 0.0, 0.0, 5.8452], [10.1317, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.8504, 0.0], [0.0, 0.0, 11.9618, 0.0, 0.0, 6.1465], [3.0702, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0982, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.9712, 0.0, 0.0, 0.0, 0.0, 0.0, 9.752, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.5854, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0334], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.1838, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.9261, 0.0], [11.9738, 0.0, 0.0, 0.0, 11.8796, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9553, 0.0, 0.0, 9.009], [0.2352, 0.0, 0.0, 0.0, 0.0, 25.9951, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5161, 0.0, 0.0, 0.0, 0.0, 0.0, 15.0579], [25.1756, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.8538, 0.0, 0.0, 0.0, 0.0], [8.9036, 0.0, 8.9866, 0.0, 0.0, 12.052, 0.0, 0.0, 0.0, 0.0], [11.9738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0028, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.7567], [0.0, 0.0, 0.0, 0.0, 11.8796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10.442, 0.0, 0.0, 0.0, 0.0, 11.8404], [38.0705, 0.0], [17.5001, 0.0, 0.0, 0.0, 0.0, 9.039, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0334], [20.8774, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.7755, 0.0, 0.0, 0.0, 0.0, 0.0, 11.9691], [11.9738, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.7763, 0.0, 0.0, 7.83, 0.0, 8.5608, 9.9099], [15.965, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15.9408, 15.3153], [0.0, 0.0, 0.0, 0.0, 11.8796, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.9866, 21.7282, 0.0, 11.9556, 0.0], [0.0, 6.006, 0.0, 0.0, 10.1332, 0.0, 0.0, 0.0, 5.9808, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.7512, 0.0, 0.0, 11.9556, 11.9691], [23.9476, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.9371, 0.0, 0.0, 0.0, 12.0028, 0.0, 0.0, 12.006, 5.1612, 4.0716, 0.0, 0.0, 0.0], [15.044, 0.0, 0.0, 0.0, 0.0, 3.9772, 0.0, 0.0, 11.9616, 0.0, 0.0, 0.0, 0.0, 25.1063, 0.0, 10.5653, 2.9754, 0.0, 0.0, 12.0334], [0.0, 0.0, 0.0, 0.0, 0.0, 21.0307, 0.0, 0.0, 19.2528, 0.0, 0.0, 0.0, 0.0, 25.7729, 0.0, 15.9694, 8.8871, 0.0, 0.0, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

