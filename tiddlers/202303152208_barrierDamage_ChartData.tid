created: 20230315220824000
creator: Drevarr
modified: 20230705163522142
modifier: drevarr
tags: ChartData
title: 202303152208_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Raziel Umbra", "Belvyn Brightblade", "Lord Erin The Wise", "Etcheriii", "Demon Sekhmet", "Primal Clone", "Tribal S", "Smol Daddy Tika", "Cerys Fireblade", "Cat Wigglebooty", "Blanco Padre Guard", "Mistwalker Caelon", "Nelliel T", "Xanvias Tseli", "Theevildead", "Mac Chiato", "K\u00f4sair", "Ravioli Fetabringer", "Black Raspberry Pie", "Sp\u00edcy Cheese", "Johosh The Great", "Mike The Archmagus", "Sofya De Nova", "Zadie Miststep", "Fribble Bibble", "Bella Sassy", "Eibh\u00ebar", "Zaylen Harker", "Sumatra Satyricon", "Ryvalia Fazebringer", "Whose Guardian", "Drevarr Moonwillow", "Arcanophage Farra", "Rina Of Theros", "Panther B Me", "\u00c1rkantor", "Newtype Khan", "Be\u00eb", "Seren Nightroad", "Smol Gluvs", "Nazhul Naxxremis", "Dark Sidiuz", "Elonith Requiem", "Fruji"];
const professions = ["Chronomancer", "Firebrand", "Weaver", "Herald", "Berserker", "Chronomancer", "Druid", "Berserker", "Berserker", "Scrapper", "Firebrand", "Vindicator", "Reaper", "Berserker", "Reaper", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Tempest", "Weaver", "Tempest", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Soulbeast", "Chronomancer", "Firebrand", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2610, 3136, 0, 0, 3572, 0, 0, 4450, 0, 10699, 8943, 0, 1248, 1109, 0, 0, 2140, 3240, 2465, 0, 0, 737], [2112, 4256, 2477, 0, 4566, 0, 0, 12707, 0, 19584], [0, 749, 5013, 0, 5205, 0, 0, 5747, 0, 15804, 0, 0, 0, 6908, 0, 0, 0, 0, 6393, 391, 0], [3634, 10346, 0, 9202, 0, 0, 9535, 321, 9419, 3982], [4843, 5241, 0, 8071, 0, 0, 9664, 0, 3173, 3725, 0, 5967, 2496, 1109, 936, 0, 1098, 2223, 0, 0, 2406], [3549, 6787, 1248, 0, 3889, 0, 0, 7269, 0, 13863, 10178, 0, 1006, 0, 0, 0, 0, 0, 0, 3500, 1248, 0, 0, 1746], [6535, 3804, 4766, 0, 6867, 1192, 0, 2128, 0, 3632, 10476, 0, 8621, 1006, 269, 1266, 0, 1124, 0, 2607, 1687, 0, 0, 2492], [570, 4566, 3576, 0, 2035, 0, 0, 12726, 0, 3515, 11122, 790, 3552, 0, 3090, 538, 0, 124, 0, 6952, 2130, 0, 4889], [4505, 3627, 1760, 0, 4962, 0, 0, 5807, 0, 0, 15241, 0, 9895, 2357, 3319, 0, 0, 2, 0, 0, 3539, 0, 0, 5302], [12, 11996, 0, 0, 1670, 8, 17899, 14975, 4491, 0, 1393, 145, 0, 217, 0, 1471, 3892, 266, 2956], [708, 11420, 7106, 0, 2469, 0, 0, 9528, 0, 5664, 2465, 0, 3796, 2357, 0, 0, 0, 3471, 1057, 0, 0, 11605], [3800, 3928, 7200, 5330, 0, 0, 11552, 0, 3645, 13295, 0, 12965, 0, 1006, 0, 0, 528, 0, 524, 1533, 0, 0, 0], [6570, 0, 16439, 0, 3977, 269, 0, 27857, 0, 9803, 1788, 46, 1006, 0, 0, 2465, 0, 0, 0, 0, 0, 0, 0], [7637, 7696, 1192, 0, 5165, 0, 1192, 6848, 0, 15002, 8009, 165, 11628, 0, 2218, 269, 0, 0, 0, 3233, 1222, 0, 0, 0], [35801, 742, 38913], [6874, 6739, 7801, 0, 934, 0, 1192, 8261, 0, 8815, 5157, 0, 14909, 0, 0, 483, 428, 0, 0, 8151, 0, 0, 0, 7500], [6057, 0, 4817, 0, 1111, 0, 0, 10264, 703, 14533, 19290, 0, 6011, 0, 1248, 0, 0, 0, 0, 9880, 3608, 0], [9649, 424, 8749, 0, 7562, 0, 0, 12655, 0, 14597, 9238, 0, 6631, 1109, 0, 0, 0, 200, 0, 1006, 3763, 1162, 0, 1162], [7429, 7493, 5197, 0, 4291, 0, 0, 4882, 0, 6198, 13963, 0, 16112, 0, 0, 0, 0, 1776, 1657, 10240, 0, 0, 269], [0, 6100, 4743, 2465, 0, 0, 2465, 0, 11378, 23976, 0, 11313, 0, 0, 0, 0, 0, 10596, 6410, 0, 0, 5707], [7476, 1958, 5370, 1192, 0, 0, 12147, 0, 6242, 19344, 0, 15205, 0, 0, 0, 0, 4972, 0, 5689, 2425, 1162, 4305], [10559, 2298, 8898, 0, 4654, 0, 0, 9982, 886, 9326, 18240, 0, 12007, 0, 0, 3188, 0, 4488, 0, 1162, 4086], [600, 17357, 7563, 0, 5213, 0, 269, 13085, 0, 14875, 17474, 0, 5927, 0, 269, 0, 0, 3114, 269, 5322, 269, 0, 0, 568], [7179, 5635, 2336, 5619, 0, 0, 13727, 0, 1225, 20218, 0, 20364, 0, 0, 4790, 0, 1248, 0, 3478, 2154, 0, 4961], [3108, 8838, 4646, 0, 1323, 0, 0, 15297, 757, 13052, 20899, 47, 6271, 227, 3635, 3610, 1229, 3104, 440, 0, 12268], [1691, 6277, 7559, 0, 3867, 0, 0, 10524, 3437, 14086, 22874, 0, 12490, 0, 1950, 0, 0, 1001, 0, 0, 6061, 0, 0, 9303], [8202, 12607, 8664, 0, 4031, 0, 0, 4930, 0, 23584, 20417, 0, 20906, 0, 529, 723, 0, 80, 0, 0, 3059, 0, 0, 95], [4784, 5335, 4360, 5222, 0, 0, 17456, 0, 16033, 14253, 0, 11343, 0, 0, 1965, 0, 0, 11023, 5822, 0, 1101, 9180], [6738, 1267, 6704, 0, 10674, 0, 0, 36526, 0, 20957, 5230, 0, 12893, 1010, 0, 3297, 0, 0, 0, 0, 2496, 0, 1038, 6048], [7039, 8409, 3077, 0, 6041, 0, 0, 18744, 0, 8868, 29532, 0, 12457, 0, 0, 0, 2382, 0, 7512, 5273, 0, 0, 9356], [16174, 15295, 17289, 0, 11424, 630, 212, 38984, 0, 21022, 12059, 0, 3289, 0, 3658, 0, 3563, 0, 3622, 3995, 0, 0, 498], [3859, 15229, 6435, 0, 9549, 60, 8, 25228, 6, 14783, 31093, 0, 20168, 18, 0, 432, 0, 3786, 0, 5757, 8292, 0, 0, 10408], [8688, 10359, 2845, 7523, 0, 0, 23073, 0, 16859, 24507, 0, 17492, 0, 5655, 3174, 0, 0, 9164, 7013, 0, 21836], [8142, 16940, 11963, 0, 8843, 0, 0, 28803, 0, 18123, 35070, 0, 19269, 0, 1006, 0, 0, 0, 0, 4646, 7126, 0, 197], [8366, 275, 10486, 0, 8919, 0, 0, 22424, 4813, 25929, 46682, 0, 12594, 0, 8402, 0, 0, 20, 0, 3437, 7085, 0, 4, 10569], [11368, 15783, 15537, 0, 9622, 0, 28628, 428, 23146, 36471, 0, 15717, 240, 2226, 0, 0, 0, 0, 14201, 7619, 0, 770, 6984], [12957, 14822, 15456, 0, 6991, 0, 0, 26852, 0, 15658, 38252, 0, 26440, 0, 1943, 3182, 0, 904, 0, 8504, 11949, 0, 7200], [13306, 20787, 15778, 0, 2852, 0, 0, 31838, 1462, 34865, 37891, 0, 27581, 0, 2465, 192, 0, 50, 0, 2563, 16525, 0, 0, 5468], [18165, 19843, 19409, 0, 8705, 0, 0, 42827, 0, 25766, 17870, 0, 24926, 0, 2736, 1817, 0, 3474, 0, 8099, 9416, 0, 1958, 16369], [17671, 12948, 19273, 0, 9894, 0, 0, 32452, 0, 11482, 51024, 0, 30151, 0, 2470, 0, 476, 0, 5515, 17638, 0, 0, 14153], [11175, 18566, 35131, 0, 19724, 0, 2090, 38899, 577, 23602, 49064, 0, 19051, 1230, 0, 5602, 0, 0, 2374, 9598, 0, 12767], [14430, 14822, 39562, 0, 29121, 0, 2359, 36819, 0, 35211, 70956, 194, 6471], [23158, 2257, 14188, 24129, 269, 0, 53883, 269, 21504, 55359, 7233, 0, 5733, 4822, 0, 4988, 0, 18635, 3535, 0, 14725], [19201, 31623, 32580, 0, 17127, 0, 0, 63835, 0, 61809, 102284, 0, 49964, 2023, 4803, 472, 0, 6358, 0, 10983, 27249, 0, 0, 10157]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

