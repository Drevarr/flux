created: 20230826003133000
creator: Drevarr
tags: ChartData
title: 202308260031_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Gamora Titus", "Xi Ming Zhao", "Nelthare", "Darkened Sword", "Mike The Archmagus", "Philip Poundhouse", "Luceif", "C\u00f4dad", "Mort\u00e4rion", "Jinxi Greenphene", "High Sorcer Baradun", "Wren Raveness", "Lucky Luprac\u00e1n", "Flora Lumos", "Venomina The Sly", "Drevarr Moonwillow", "Adrinz", "Vivy Mei", "Forever Dreaming", "Rozaalyna", "Greg The Knight", "Newtype Khan", "Brutal Araden", "Vylade Vinzanti", "Rina Of Theros", "Air One Com", "Glorious Gluvs", "Lord Erin The Wise", "Wall Knot", "Tegan Parker", "Zaedy Zae", "Sub Train", "Bee Nemesis", "Budget Chicken", "Jimbo The Pleb", "Darks Na", "Black Raspberry Pie", "Keypek The Drunk", "Luke The Ghastly", "J\u00e2sm\u00eene", "Mmathuss", "Solus Luxes", "Arcanophage Farra", "Eibh\u00ebar", "Mistwalker Cael", "Xanvias Einzbern", "Tribal S", "Koralia Danai", "Bella Sassy", "Ryvalia Fazebringer"];
const professions = ["Firebrand", "Weaver", "Renegade", "Berserker", "Tempest", "Herald", "Herald", "Berserker", "Scrapper", "Vindicator", "Tempest", "Chronomancer", "Scrapper", "Reaper", "Druid", "Scrapper", "Guardian", "Soulbeast", "Scourge", "Reaper", "Firebrand", "Spellbreaker", "Renegade", "Tempest", "Reaper", "Firebrand", "Berserker", "Weaver", "Firebrand", "Tempest", "Druid", "Firebrand", "Spellbreaker", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Scrapper", "Scourge", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Chronomancer", "Herald", "Berserker", "Druid", "Firebrand", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 3, 0, 4, 5, 2, 2, 6, 0, 3], [1, 3, 2, 0, 3, 1, 1, 0, 0, 0, 14, 0, 2, 2, 3], [0, 3, 0, 3, 0, 0, 0, 0, 1, 11, 0, 1, 0, 3, 7, 0, 0, 0, 0, 0, 1, 2], [24, 1, 0, 1, 1, 0, 9], [5, 5, 4, 0, 2, 1, 0, 2, 19, 0, 0, 3], [8, 5, 0, 3, 8, 0, 2, 1, 0, 2, 11, 0, 0, 3], [23, 0, 0, 5, 7, 8], [3, 4, 8, 2, 6, 1, 2, 3, 1, 14], [4, 6, 4, 4, 9, 1, 3, 0, 0, 18, 0, 0, 3], [4, 8, 3, 0, 9, 0, 0, 33], [4, 4, 0, 3, 4, 1, 1, 1, 0, 1, 13, 0, 0, 3, 6, 16, 6, 0, 9], [1, 5, 0, 2, 2, 0, 0, 0, 0, 0, 11, 0, 0, 0, 3, 5, 12, 0, 0, 7, 2, 0, 52, 0], [2, 1, 5, 1, 5, 0, 0, 0, 0, 1, 15, 0, 0, 8, 5, 8, 4, 0, 5, 7, 49, 0], [5, 4, 5, 3, 6, 0, 1, 0, 0, 0, 15, 0, 0, 0, 5, 4, 9, 7, 0, 51, 3], [21, 0, 1, 3, 8, 12, 7, 6, 2, 0, 63, 2], [7, 8, 8, 9, 6, 1, 2, 2, 0, 6, 40, 0, 4, 5, 11, 18], [8, 7, 2, 0, 11, 9, 89, 2], [11, 0, 3, 1, 1, 5, 12, 4, 0, 7, 7, 0, 77, 2], [4, 7, 0, 4, 3, 0, 1, 0, 0, 1, 17, 0, 1, 2, 2, 6, 22, 5, 0, 9, 3, 0, 45], [6, 5, 3, 5, 4, 0, 1, 0, 0, 1, 34, 0, 5, 6, 21, 9, 0, 8, 0, 31], [28, 6, 0, 12, 1, 0, 88, 4], [6, 5, 5, 2, 4, 0, 2, 1, 0, 2, 10, 0, 5, 0, 3, 5, 10, 4, 0, 7, 3, 0, 70, 4], [2, 4, 3, 3, 5, 0, 1, 0, 0, 1, 18, 0, 0, 0, 2, 5, 16, 4, 0, 10, 3, 0, 70, 1], [3, 2, 0, 2, 3, 0, 1, 0, 0, 12, 0, 2, 5, 7, 8, 5, 0, 0, 100, 0], [8, 5, 2, 4, 0, 0, 1, 1, 1, 16, 0, 1, 0, 4, 6, 12, 6, 0, 9, 2, 0, 76, 1], [5, 6, 5, 2, 4, 1, 1, 1, 0, 19, 0, 1, 6, 7, 15, 12, 0, 8, 4, 0, 68, 2], [5, 4, 8, 6, 4, 0, 2, 3, 0, 0, 18, 0, 2, 0, 1, 7, 14, 4, 0, 7, 3, 0, 80, 3], [4, 2, 2, 3, 7, 1, 1, 1, 1, 0, 24, 0, 1, 5, 2, 16, 4, 9, 2, 0, 90, 0], [4, 4, 4, 5, 7, 1, 1, 6, 1, 2, 18, 0, 2, 2, 5, 19, 7, 1, 6, 4, 0, 80], [0, 1, 5, 0, 0, 0, 5, 18, 9, 0, 9, 0, 128, 7], [7, 7, 6, 1, 8, 0, 1, 1, 1, 25, 3, 4, 8, 17, 4, 0, 6, 5, 77, 2], [6, 6, 8, 3, 5, 1, 2, 2, 1, 4, 17, 0, 3, 1, 4, 8, 14, 8, 0, 4, 3, 0, 88], [6, 6, 5, 6, 6, 1, 2, 1, 0, 2, 21, 0, 0, 7, 4, 12, 5, 0, 6, 0, 102, 2], [7, 3, 8, 2, 10, 0, 3, 6, 1, 21, 3, 7, 9, 17, 8, 0, 10, 2, 0, 74, 5], [4, 4, 7, 2, 5, 1, 1, 2, 0, 2, 22, 0, 1, 8, 2, 5, 5, 0, 12, 1, 0, 119, 1], [4, 6, 8, 4, 6, 0, 3, 4, 2, 31, 0, 0, 0, 3, 8, 18, 10, 1, 12, 4, 0, 84, 0], [6, 5, 22, 6, 0, 4, 3, 0, 174, 2], [4, 2, 0, 2, 5, 1, 4, 0, 0, 2, 28, 0, 3, 0, 6, 8, 16, 4, 0, 6, 2, 0, 132, 1], [3, 2, 2, 1, 7, 0, 1, 1, 0, 4, 24, 0, 0, 1, 6, 18, 9, 0, 5, 7, 0, 132, 5], [4, 4, 4, 6, 7, 1, 2, 3, 1, 26, 0, 0, 3, 3, 15, 7, 0, 10, 0, 133, 0], [7, 9, 5, 6, 4, 2, 1, 5, 1, 2, 27, 4, 0, 6, 20, 10, 0, 9, 6, 0, 106], [1, 2, 35, 0, 3, 9, 7, 22, 6, 0, 10, 6, 0, 143, 8], [8, 6, 9, 5, 7, 1, 0, 0, 0, 3, 32, 0, 0, 7, 7, 25, 8, 0, 15, 0, 120, 1], [3, 6, 1, 5, 8, 0, 2, 0, 0, 3, 32, 0, 1, 0, 6, 8, 24, 6, 0, 13, 4, 0, 141, 8], [10, 6, 6, 4, 6, 0, 1, 2, 1, 3, 40, 0, 5, 9, 23, 8, 0, 16, 5, 0, 125, 3], [11, 6, 0, 7, 8, 1, 2, 0, 0, 5, 37, 0, 3, 9, 10, 27, 7, 0, 16, 4, 0, 123, 4], [8, 4, 9, 5, 4, 0, 2, 1, 0, 4, 39, 0, 6, 11, 25, 8, 0, 10, 5, 137, 3], [10, 7, 8, 4, 4, 1, 2, 2, 1, 4, 31, 4, 2, 7, 11, 28, 12, 0, 12, 6, 121, 5], [7, 6, 7, 5, 7, 0, 2, 4, 7, 32, 1, 3, 4, 11, 27, 10, 0, 11, 9, 0, 126, 6], [7, 8, 7, 1, 7, 0, 2, 2, 0, 4, 35, 0, 5, 1, 7, 11, 30, 6, 0, 16, 20, 0, 127, 8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

