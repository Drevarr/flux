created: 20230220220953000
creator: Drevarr
modified: 20230705163519786
modifier: drevarr
tags: ChartData
title: 202302202209_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Husky Guard", "Black Raspberry Pie", "Mustache Bloodclaw", "Arka\u00f1", "Mac Aaroni", "Dark Sidiuz", "Donnica Hackdead", "Ryvalia Fazebringer", "Venomina The Siren", "Zadie Miststep", "Fribble Bibble", "Sygaldry Verdandi", "Veron Blackburn", "Drevarr Moonwillow", "Zaylen Harker", "Blanco Padre Guard", "Kahless The Drunk", "Koralia Danai", "Ravioli Fetabringer", "Bella Sassy"];
const professions = ["Firebrand", "Dragonhunter", "Chronomancer", "Herald", "Chronomancer", "Tempest", "Scourge", "Tempest", "Chronomancer", "Tempest", "Tempest", "Scrapper", "Firebrand", "Herald", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 288.4291, 1157.2616, 0.0, 16.0776, 90.754, 6.8904, 0.0, 30.9488, 6.048], [0.0, 149.9602, 729.2254, 55.8382, 0.0, 38.866, 22.3938, 77.6454, 59.6036, 27.2469, 46.1815, 23.8762, 87.9648, 12.2485, 0.0, 9.9833, 11.9769, 7.8732, 0.0, 27.7776, 0.0, 114.2482, 11.5479, 47.5506, 32.021, 7.9712, 14.335], [463.9472, 7.7112, 10.3774, 17.8303, 25.7624, 18.5269, 234.1599, 51.314, 36.3712, 170.4226, 57.288, 1.5867, 76.177, 28.3446, 0.0, 18.1278, 12.7499, 16.5888, 0.0, 358.7626, 28.2987, 64.4482, 59.0558, 8.7683, 0.0, 90.1142], [58.5281, 112.6305, 104.1955, 90.8064, 58.8353, 438.1104, 198.6831, 225.0648, 435.9844, 123.1799, 0.4687, 17.1351], [0.0, 75.8419, 519.5514, 222.7856, 144.2356, 0.0, 41.9932, 48.7711, 3.9207, 0.0, 49.8229, 8.6856, 0.0, 78.4449, 0.0, 0.0, 0.0, 0.0, 461.16, 0.0, 103.5341, 0.0, 14.4668, 0.0, 110.8993, 0.0, 18.7579], [0.0, 349.0452, 823.6366, 0.0, 51.0829, 0.0, 0.0, 3.8703, 17.0177, 4.4892, 6.426, 63.719, 238.1702, 48.5298, 46.2362, 15.3391, 0.0, 0.0, 49.0752, 93.8808, 0.0, 59.8829, 44.7203, 1.3701, 0.0, 37.2771], [0.0, 253.0937, 1321.7572, 0.0, 0.0, 0.0, 5.9185, 6.1314, 0.0, 28.2744, 33.7445, 14.6362, 15.9057, 12.835, 0.0, 0.0, 6.075, 29.5838, 0.0, 18.4505, 132.6, 93.483, 24.6053, 0.0, 0.0, 0.0], [51.7172, 12.4387, 61.479, 0.2917, 195.696, 67.1539, 220.8586, 216.0261, 322.9526, 315.5355, 276.2021, 130.6427, 201.2774], [0.0, 517.6786, 915.731, 58.6732, 79.9495, 10.2173, 125.1373, 9.3898, 34.6193, 518.1908, 0.0, 0.0, 292.2797, 0.9868, 12.138, 0.0, 20.0433, 141.669, 0.0, 0.0, 0.0, 113.3995, 0.0, 0.0, 0.0, 1.395, 0.0, 83.623], [15.1411, 519.4022, 1174.0587, 140.1397, 65.0899, 8.993, 11.6371, 113.4091, 141.0215, 0.0, 0.0, 61.6123, 103.1184, 37.8099, 18.819, 44.0046, 0.0, 15.4062, 61.0896, 0.0, 14.7177, 152.3309, 46.6992, 95.5162, 182.2315, 53.98, 59.5014, 0.0], [0.0, 702.6869, 1218.6578, 70.8977, 45.1634, 48.8607, 0.0, 39.0355, 49.051, 172.2107, 41.9404, 51.781, 82.4208, 28.1156, 10.047, 152.4501, 25.2814, 0.0, 0.0, 0.0, 16.353, 224.4653, 0.0, 85.3183, 166.6495, 55.6988, 15.6761, 19.2352], [0.0, 1112.6354, 1719.0953, 0.0, 0.0, 0.0, 0.0, 0.0, 34.4525, 160.6136, 40.698, 13.86, 90.6259, 18.3632, 8.33, 0.0, 17.5613, 0.0, 8.0995, 0.0, 0.0, 232.3152, 37.9008, 78.9743, 0.0, 0.0, 0.0, 28.2084], [467.4046, 1622.3672, 87.7716, 0.0, 78.0213, 68.9806, 85.1599, 178.06, 19.2038, 0.0, 136.9738, 387.2669, 67.1058, 154.0161, 0.0, 8.7723, 15.341, 57.7584, 252.2273, 76.5898, 254.223, 67.5313, 205.2928, 118.6463, 0.0, 99.0875], [144.4209, 736.8732, 1237.1926, 159.7042, 176.6836, 319.1073, 200.1913, 154.2341, 339.9581, 91.0417, 272.051, 148.5743, 84.5887, 181.5453, 87.0012, 225.3744, 143.5864, 405.8621], [81.3124, 1643.8162, 3035.0604, 53.8196, 27.137, 6.9674, 60.291, 42.6664, 132.8046, 453.2222, 85.1659, 31.7117, 288.5837, 75.7939, 21.012, 139.5306, 4.0837, 0.0, 18.8074, 34.2144, 0.0, 301.1611, 145.2159, 88.8757, 288.9682, 29.4685, 10.0124, 54.5077], [0.0, 1655.5946, 2645.2521, 0.0, 98.1708, 32.4328, 169.3507, 61.2731, 192.2414, 293.6061, 132.4184, 36.2208, 199.6579, 38.7967, 157.9311, 128.0367, 88.374, 124.7616, 15.8553, 695.6726, 247.7088, 67.1163, 543.4222, 141.5635, 81.0455], [49.3012, 1657.3183, 3164.2242, 114.2165, 112.056, 93.6701, 62.0136, 103.7001, 146.1101, 207.3761, 283.3009, 187.4242, 353.2637, 156.4641, 117.0977, 152.9003, 49.086, 49.3178, 89.856, 206.19, 381.1454, 141.7473, 115.0819, 624.9161, 157.481, 97.5328, 285.0913], [144.9396, 2394.1915, 4550.2738, 159.5765, 198.3878, 134.3836, 187.2658, 87.78, 210.427, 488.2005, 318.2155, 239.0203, 549.743, 93.0348, 135.5764, 95.743, 95.6448, 0.0, 177.6816, 154.5714, 330.6514, 289.4166, 174.0754, 559.4717, 95.3306, 68.1727, 71.2132], [16.796, 2203.1503, 3441.6658, 218.5898, 229.3738, 295.9244, 309.6469, 379.8113, 520.1861, 342.8485, 333.4162, 530.3021, 179.6841, 73.338, 411.7405, 0.0, 222.9525, 127.4988, 325.4256, 201.213, 587.6832, 368.1792, 184.0954, 609.6458, 177.957, 98.6395, 221.3717], [105.5184, 2245.3805, 3536.0771, 181.6895, 235.7317, 252.3839, 315.2741, 115.2179, 356.7039, 484.896, 385.9884, 313.3099, 517.5139, 134.3858, 87.346, 269.4303, 65.2958, 148.5702, 30.1158, 253.8, 158.9796, 829.7578, 355.0239, 659.3048, 724.8746, 189.8142, 234.6204, 119.8978], [0.0, 2035.3788, 4333.6492, 149.121, 289.1532, 211.4477, 416.8692, 97.0767, 436.4534, 681.9219, 395.7559, 225.3451, 847.9363, 363.0834, 144.041, 273.5802, 81.2553, 164.754, 216.6107, 122.9904, 426.5289, 806.3141, 372.24, 499.7554, 479.7698, 221.7488, 139.978, 323.8003]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

