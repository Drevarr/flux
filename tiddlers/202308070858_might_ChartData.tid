created: 20230807085837000
creator: Drevarr
tags: ChartData
title: 202308070858_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Crabbedmermaid", "Xx Zen Xx", "A\u00fcrora Windrunner", "Mom Tapper", "Meryndah", "Forever Dreaming", "Raghnaid", "Microsakis", "Gestern Yesteryear", "Avatar Shazbott", "Liza Hexx", "Squishy Jellyfish", "Unbreakable Nemesis", "Dragon Deezz", "Xanvias Tsolea", "Drevarr Moonwillow", "Vee U", "Newtype Khan", "Jerryatric Reflexes"];
const professions = ["Dragonhunter", "Druid", "Firebrand", "Spellbreaker", "Druid", "Scourge", "Firebrand", "Spellbreaker", "Firebrand", "Tempest", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Dragonhunter", "Scrapper", "Tempest", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.7633, 0.6457, 0.8926, 0.0, 0.0, 0.0706, 0.0, 0.0, 2.5916, 6.1338, 0.0, 0.0, 0.3947, 0.0, 0.5538, 0.0, 0.1642, 1.836, 1.6588, 6.7032, 0.0, 0.1814, 2.1855, 1.1189, 0.756, 1.96, 1.1399, 5.9228, 4.1828, 0.0, 0.0, 6.5534, 5.4014, 1.6859, 1.4763, 0.1698, 0.0, 2.7112, 0.0, 2.9968, 0.0], [1.6848, 16.317, 16.2392, 22.3652, 1.7517, 0.0, 5.072], [5.6128, 0.0, 10.7226, 0.0, 9.0433, 5.245, 6.2919, 4.145, 0.0, 5.1704, 0.0, 8.448, 6.8422, 5.5719], [4.5326, 0.0135, 1.5926, 17.6955, 3.3966, 0.0, 8.379, 5.1212, 11.1384, 0.0358, 0.0, 2.8594, 0.2904, 0.0, 0.562, 1.2303, 7.8356, 8.6787, 0.283, 0.0, 1.2043, 0.0, 1.8697, 0.0], [0.0, 0.0432, 11.172, 1.5694, 12.1992, 1.4658, 0.0, 4.7996, 6.2339, 4.0511, 6.5562, 7.3815, 7.6174, 9.1649, 8.5292], [2.3659, 2.6303, 6.311, 1.4739, 1.4661, 0.0, 3.1198, 20.4383, 18.8955, 2.4737, 4.3566, 7.0863, 6.325, 8.1224], [0.0, 4.1738, 18.8725, 16.5556, 5.963, 13.8324, 19.8135, 5.2937, 6.697, 8.4599, 0.0], [24.7298, 17.9938, 1.3358, 25.0687, 8.35, 21.6144, 14.2142], [0.0, 0.0, 0.0, 0.0, 2.9039, 0.0, 0.0, 0.0, 10.3369, 6.1338, 5.5501, 1.0494, 0.0, 0.0, 1.7722, 0.0, 0.0, 5.5692, 2.6884, 9.193, 0.0, 3.8909, 3.8422, 3.7562, 2.376, 7.987, 0.0, 23.6912, 4.719, 0.0, 0.6468, 0.0, 3.7237, 6.8372, 3.3041, 5.3995, 3.6708, 10.0766, 0.6698, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 28.288, 0.0, 0.0, 11.6076, 0.0, 15.2632, 9.4597, 0.0, 21.9251, 18.6458, 2.6795, 7.7836, 20.4843], [0.5103, 2.2896, 4.7541, 2.9044, 2.2337, 0.0, 3.1738, 0.0, 7.9508, 4.7561, 0.4005, 3.6691, 9.7643, 3.8761, 0.0, 9.408, 0.0, 11.8456, 4.0397, 0.0, 0.5787, 3.8817, 10.6801, 18.0296, 8.0493, 5.6176, 4.6675, 3.8117, 0.0, 2.8787, 4.4467, 3.7658, 3.1212], [9.257, 6.3756, 3.0459, 0.0, 5.1437, 4.7002, 8.9232, 25.3445, 0.0, 7.5802, 22.137, 16.8631, 1.3392, 35.574, 4.1961], [1.462, 3.3201, 10.8837, 4.4622, 6.2985, 1.1838, 0.0, 5.2384, 9.2767, 13.1106, 0.1895, 4.0704, 0.8432, 3.4151, 0.0, 10.944, 1.4076, 13.5278, 20.2692, 2.9025, 4.0925, 10.6807, 4.3956, 15.582, 0.0, 10.166], [9.6088, 1.1938, 9.1141, 0.8265, 8.1682, 1.4269, 0.688, 2.245, 13.1347, 15.6397, 0.0, 1.219, 4.3111, 4.4858, 3.3875, 6.2381, 0.0, 9.0662, 16.6942, 0.054, 6.0278, 6.345, 4.5155, 0.0, 21.119, 0.4791, 15.47, 4.3972, 0.0, 10.3482, 0.9777, 5.1968, 9.4597], [13.9004, 12.2094, 4.1699, 3.551, 4.4132, 3.6432, 4.3935, 1.8687, 7.0315, 6.3526, 7.2644, 8.7461, 1.7325, 5.1811, 7.2262, 5.954, 2.5056, 14.259, 4.543, 29.5256, 6.5065, 1.8355, 7.7611, 2.4394, 9.207, 10.8177, 12.3728, 5.4904, 10.6964, 6.5102, 0.407, 4.5402, 1.6973, 3.9913, 4.5084], [10.4569, 1.7892, 12.4654, 4.15, 9.4146, 3.2771, 3.5732, 3.0671, 22.058, 27.8781, 1.6961, 5.2788, 11.6789, 3.1068, 9.6361, 0.0, 10.6704, 4.847, 13.6708, 20.0138, 3.159, 14.8982, 26.367, 9.4705, 4.3308, 27.293, 3.9648, 41.0176, 10.9752, 0.8019, 14.2287, 8.2958], [7.3445, 5.8031, 18.0469, 27.8869, 0.0, 14.3871, 47.7384, 78.3727, 0.0, 13.2076, 3.588, 0.0, 12.3682, 0.0, 0.0, 5.9854, 0.9724, 39.1339, 3.204, 18.0634, 5.7105, 0.0, 0.0, 10.878, 0.0, 87.958, 0.0], [37.2738, 17.5402, 80.9398, 60.0829, 71.8466, 40.8505, 50.4676, 45.6843, 5.0325, 21.4774, 16.5581, 24.0271, 29.2699], [110.3155, 12.897, 60.4397, 117.6645, 64.7352, 24.8616, 61.201, 42.4399, 235.7628, 89.5537, 0.8197, 71.8925, 18.5082, 81.1034, 75.0217, 79.6148, 49.995]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

