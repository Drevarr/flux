created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Amiti\u00e9l", "Hamazuk", "Belvyn Brightblade", "Vamp X Potato", "Govinda Ektar", "Jandir Schug", "Tegan Parker", "Venomina The Sly", "Kat Bon Z", "Amiti\u00e9l", "Xanvias Einzbern", "Mistwalker Cael", "Drevarr Moonwillow", "Gadget Windrunner", "Be\u00eb", "Koralia Danai", "Rina Of Theros", "Sonja Wintersong", "Glorious Gluvs", "Daray Darkblood", "Bella Bitty", "Ax Axun", "Gabe Malhorn", "Sassy Daddy Demon", "Hyde En Sikh", "Caoimhe Corpsetouch", "Atria Ruinheart", "K\u00e2 \u00d4tik R\u00e6j", "Morv\u00e4rth", "Sygaldry Verdandi", "Cedryn X", "Aronorf Xideliesi", "Zaedy Zae", "Newtype Khan", "Daring Deathblade", "Adjudicatrix Farra", "Daphne Agla\u00e9", "Kalisha Lafay", "Lord Erin The Wise"];
const professions = ["Willbender", "Reaper", "Firebrand", "Renegade", "Vindicator", "Soulbeast", "Tempest", "Druid", "Scrapper", "Firebrand", "Berserker", "Herald", "Scrapper", "Scrapper", "Reaper", "Firebrand", "Reaper", "Firebrand", "Berserker", "Reaper", "Firebrand", "Vindicator", "Firebrand", "Herald", "Chronomancer", "Reaper", "Firebrand", "Berserker", "Reaper", "Firebrand", "Berserker", "Firebrand", "Druid", "Spellbreaker", "Reaper", "Reaper", "Reaper", "Chronomancer", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[16, 10], [6, 21], [32, 4, 0, 0, 18], [11, 0, 6, 3, 0, 0, 0, 0, 0, 1, 16, 0, 20], [0, 14, 0, 19, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 10], [12, 0, 14, 18, 21, 3, 0, 12], [0, 0, 0, 0, 0, 109], [10, 0, 0, 0, 0, 0, 12, 5, 16, 0, 0, 0, 11, 0, 29, 0, 2, 0, 8, 0, 0, 0, 0, 14, 0, 0, 30], [14, 8, 0, 13, 23, 16, 30, 0, 0, 0, 11, 12, 0, 0, 0, 10, 0], [12, 0, 8, 0, 0, 6, 0, 0, 40, 0, 0, 14, 9, 0, 16, 0, 32, 0, 0], [21, 0, 15, 0, 0, 19, 15, 0, 0, 0, 0, 0, 0, 0, 33, 0, 35, 0, 10, 0, 1], [40, 15, 17, 0, 26, 23, 22, 0, 32], [16, 0, 0, 0, 0, 11, 10, 0, 11, 0, 0, 28, 0, 0, 0, 0, 43, 0, 14, 0, 25, 0, 0, 0, 0, 0, 24], [13, 23, 16, 0, 0, 0, 8, 11, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 10, 44, 0, 0, 10, 0, 0, 42], [7, 17, 4, 0, 0, 31, 16, 0, 13, 0, 0, 11, 24, 0, 0, 0, 10, 0, 0, 0, 22, 2, 0, 0, 0, 0, 44], [6, 0, 8, 0, 0, 20, 4, 0, 25, 0, 0, 31, 14, 0, 34, 0, 7, 0, 10, 0, 20, 0, 0, 2, 0, 25], [12, 5, 18, 0, 16, 5, 11, 0, 85, 0, 0, 15, 12, 0, 4, 0, 16, 0, 2, 0, 16, 7, 0, 0, 0, 0, 15], [47, 0, 38, 0, 25, 0, 10, 0, 58, 41, 0, 18, 0, 0, 8], [20, 13, 24, 0, 27, 22, 23, 0, 19, 0, 0, 0, 0, 0, 74, 0, 7, 0, 6, 10, 0, 0, 0, 0, 0, 14], [9, 10, 15, 0, 5, 20, 13, 0, 20, 0, 0, 14, 19, 0, 15, 0, 43, 0, 42, 0, 6, 9, 0, 24, 0, 0, 7], [17, 0, 9, 0, 0, 21, 20, 0, 25, 0, 0, 23, 27, 0, 21, 0, 30, 0, 6, 0, 35, 12, 0, 0, 0, 0, 26], [10, 0, 15, 0, 43, 18, 10, 0, 12, 0, 0, 30, 17, 22, 19, 0, 49, 0, 12, 7, 0, 0, 12], [0, 12, 0, 0, 0, 63, 0, 23, 0, 0, 92, 8, 0, 12, 0, 42, 0, 5, 0, 14, 0, 0, 0, 0, 0, 22], [9, 22, 15, 0, 0, 17, 72, 0, 8, 4, 0, 26, 23, 0, 36, 3, 17, 0, 11, 24, 10], [12, 6, 56, 0, 1, 23, 37, 0, 20, 0, 8, 24, 0, 0, 19, 0, 34, 0, 41, 0, 16, 0, 0, 7, 0, 1, 28], [21, 0, 33, 0, 31, 33, 31, 0, 41, 0, 20, 34, 9, 0, 11, 0, 41, 0, 8, 0, 11, 0, 0, 11, 0], [7, 34, 14, 0, 41, 23, 28, 7, 0, 0, 28, 18, 0, 33, 0, 48, 0, 7, 4, 33, 0, 0, 19], [34, 0, 21, 0, 27, 34, 40, 0, 57, 0, 0, 43, 35, 0, 31, 0, 23], [13, 59, 0, 0, 65, 6, 26, 0, 64, 0, 0, 37, 9, 0, 0, 0, 44, 0, 15, 0, 7], [11, 0, 33, 0, 16, 6, 32, 0, 32, 45, 0, 32, 14, 0, 20, 0, 16, 0, 9, 0, 23, 28, 0, 8, 3, 0, 23], [20, 10, 6, 15, 32, 0, 19, 0, 10, 85, 47, 0, 10, 30, 12, 0, 15, 0, 6, 2, 0, 32], [29, 41, 4, 0, 35, 7, 24, 0, 4, 0, 0, 92, 9, 0, 38, 0, 17, 0, 0, 0, 21, 0, 0, 0, 0, 0, 33], [8, 0, 28, 0, 0, 21, 27, 0, 11, 0, 0, 35, 82, 32, 20, 0, 28, 0, 36, 0, 30, 0, 0, 5, 0, 0, 15], [21, 11, 0, 0, 26, 53, 0, 9, 0, 0, 51, 38, 0, 29, 0, 29, 0, 43, 0, 29, 14, 0, 33, 0, 0, 0], [0, 43, 11, 40, 0, 22, 25, 0, 62, 28, 33, 30, 36, 2, 0, 16, 0, 2, 0, 0, 36, 7, 0], [18, 13, 28, 51, 13, 6, 0, 22, 0, 4, 22, 35, 0, 13, 0, 42, 0, 8, 0, 39, 41, 0, 29, 0, 2, 45], [16, 2, 13, 0, 69, 8, 16, 0, 44, 13, 0, 57, 30, 0, 26, 20, 21, 0, 19, 0, 66, 0, 0, 21], [37, 31, 19, 0, 46, 26, 25, 0, 22, 0, 0, 24, 42, 0, 40, 0, 71, 0, 0, 0, 61, 1, 0, 10], [0, 41, 19, 0, 36, 3, 73, 0, 10, 10, 0, 17, 52, 0, 52, 0, 39, 0, 0, 38, 62, 0, 0, 4, 0, 5, 37]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

