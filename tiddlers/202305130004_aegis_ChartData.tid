created: 20230513000456000
creator: Drevarr
modified: 20230705163529641
modifier: drevarr
tags: ChartData
title: 202305130004_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Sub Train", "Drevarr Moonwillow", "Ark Darkness", "Air One Com", "Tika Fiery", "Lucas Ryn", "Aronorf Xideliesi", "Solus Sanctus", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 6.6125, 33.4866, 109.517, 14.3087, 29.7484, 0.0, 0.0, 5.4144, 2.7191, 0.3066, 9.9264, 0.0, 0.0, 40.6525, 66.8506, 0.0, 47.7294, 0.0, 37.4477, 0.0, 4.9862, 0.0, 8.3585, 0.0, 0.0, 0.0], [15.241, 16.128, 102.5938, 179.0872, 8.5488, 102.6016, 0.0, 0.0, 21.4848], [5.5296, 2.3386, 82.075, 222.6246, 0.9701, 17.5195, 0.0, 5.5949, 9.6768, 4.5427, 5.8252, 0.0, 46.3834, 23.0366, 30.7878, 28.52, 13.3056, 0.0, 14.7015, 0.0, 26.2752, 0.0, 21.4502, 4.7584, 34.0233, 0.0, 0.0, 15.4386], [6.4973, 27.9014, 154.4652, 323.6136, 10.4284, 20.2948, 0.0, 0.0, 63.3024, 0.0, 13.7432, 49.5718, 0.0, 0.0, 47.0925, 78.0595, 0.0, 42.2248], [30.2746, 0.0, 143.1388, 253.1458, 5.578, 42.6712, 0.0, 0.0, 9.4464, 0.0, 64.672, 46.9326, 0.0, 50.6575, 96.4454, 0.0, 30.0071, 0.0, 0.0, 45.864, 0.0, 38.0954, 0.0, 0.0], [125.3146, 36.6106, 171.5367, 558.357, 2.9709, 117.6926, 0.0, 0.0, 59.0976, 0.0, 0.0, 12.3188, 50.3539, 7.7611, 0.0, 24.2075, 130.2336, 0.0, 42.2248, 0.0, 73.6589, 0.0, 42.6653, 20.0457, 45.8109, 0.0, 0.0, 0.0], [95.8349, 214.5024, 86.8354, 703.7811, 17.7646, 24.5446, 0.0, 15.1181, 51.4944, 14.5697, 8.7547, 81.4566, 13.2991, 63.25, 102.1709, 0.0, 57.329, 0.0, 44.0275, 12.3709, 140.1322, 0.0, 80.0485, 11.2752, 0.0], [68.1869, 107.4125, 192.3838, 1076.7672, 3.6378, 39.1152, 27.1693, 73.4328, 46.8864, 1.1197, 176.7501, 12.8547, 70.955, 105.961, 118.1952, 58.336, 16.8091, 2.2522, 1.6817, 31.4698, 0.0, 153.0245, 63.3969, 1.9345], [82.2182, 175.5533, 133.4539, 1109.0836, 42.6835, 152.1244, 9.7967, 42.155, 98.3232, 31.7008, 22.6877, 16.756, 91.744, 23.8365, 8.8555, 91.0225, 175.8758, 15.0336, 98.2783, 3.1363, 60.4109, 64.1626, 6.1112, 186.0833, 7.7778, 4.0664, 47.2564], [219.2141, 233.6141, 355.0564, 982.5108, 18.1284, 62.966, 73.9319, 31.9325, 108.9216, 0.0, 27.5664, 88.1344, 24.1429, 51.7997, 132.365, 136.4429, 40.0032, 40.9493, 0.0, 80.9453, 0.0, 100.1952, 16.0063, 221.0175, 0.0, 39.6774, 31.5884], [158.9414, 176.7629, 380.1714, 1247.7752, 57.1135, 149.0889, 0.0, 29.5368, 85.0176, 47.988, 180.4198, 35.8356, 7.6493, 92.9775, 186.359, 66.3984, 89.2158, 4.7434, 86.2445, 18.315, 81.6144, 121.8409, 14.8509, 0.0], [157.4208, 235.3882, 432.6994, 976.6758, 77.0001, 285.5152, 17.6137, 31.501, 83.3472, 76.4182, 32.6718, 34.9591, 112.8602, 10.9183, 137.2438, 126.2125, 212.809, 88.6896, 125.9359, 24.4296, 184.5005, 55.8941, 119.6698, 12.2412, 81.388, 35.7831, 47.8892, 31.4737]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

