created: 20230515002743000
creator: Drevarr
modified: 20230705163530119
modifier: drevarr
tags: ChartData
title: 202305150027_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Hyde En Sikh", "Artherwise", "Belvyn Brightblade", "Tribal S", "Tegan Parker", "Tika Mi", "Osh Kosh Johosh", "Cuscuszera", "Artakama Nahid", "Ever Moore", "Sub Train", "Blancooo Padreee", "Drogo Discourteous", "Ark Darkness", "Miphest\u00f6", "Gabe Malhorn", "Koralia Danai", "Venomina The Fierce", "Lucas Ryn", "Aronorf Xideliesi"];
const professions = ["Chronomancer", "Soulbeast", "Firebrand", "Druid", "Tempest", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 25.389, 176.4492, 14.7841, 0.0, 51.9655, 0.0, 0.0, 23.6028, 315.8863, 0.0, 0.0, 0.0, 160.408, 0.0], [99.3798, 151.4475, 143.7072, 19.3515, 12.243, 197.1791, 72.3677, 100.8518, 0.0], [76.5461, 452.3594, 184.5675, 0.0, 1.9958, 149.9394, 26.961], [25.8242, 316.9458, 203.945, 79.2931, 10.7231, 0.0, 0.0, 42.9, 56.4213, 82.2491, 67.1224, 0.0, 7.5307, 0.0], [63.545, 212.8988, 32.98, 92.7261, 75.3363, 62.814, 31.5744, 74.4549, 116.8443, 211.7746, 0.0, 136.1917, 0.0], [48.8311, 131.8777, 363.6676, 74.8683, 100.9394, 147.0982, 3.3915, 0.0, 89.2066, 129.903, 73.9015, 107.0362, 36.8166, 51.238], [8.087, 257.3719, 100.2364, 131.3512, 315.4836, 82.3017, 8.037, 0.0, 122.2416, 136.5117, 104.5377, 372.372, 46.6066, 0.0, 62.48], [140.7432, 113.6714, 383.6924, 628.9268, 218.951, 203.7216, 140.8], [160.0841, 158.8626, 479.8093, 140.923, 181.8444, 248.1882, 143.3835, 29.4641, 7.6128, 64.742, 91.0688, 167.6629, 89.1106, 99.3752, 62.986], [976.6224, 23.598, 0.0, 275.4627, 285.1988, 193.3747, 471.2815, 155.034], [503.6672, 479.8205, 176.3177, 234.8073, 50.9295, 1.0279, 140.0919, 330.0904, 194.4928, 242.7902, 153.0742, 0.0], [159.1294, 326.5751, 706.9566, 310.277, 525.1919, 167.6279, 119.6145, 20.7553, 43.8243, 217.5533, 129.3754, 76.7659, 30.1226, 44.11], [314.8236, 1006.6717, 878.897, 607.7857, 232.791, 6.9825], [169.5985, 1249.0615, 751.5261, 365.9917, 480.8875, 155.895, 81.1041, 43.5708], [176.567, 926.9161, 797.5835, 160.1613, 90.5768, 171.2938, 70.509, 160.0482, 2.1878, 246.052, 226.5648, 243.2945, 48.73], [40.7675, 1008.6598, 800.0483, 272.191, 362.0175, 68.9985, 6.7798, 82.992, 182.5239, 246.2687, 455.2486, 107.3318, 289.4628, 172.524], [81.3197, 604.2582, 1073.7721, 538.7674, 258.8347, 643.0164, 95.817, 42.8505, 1.482, 119.4726, 80.5399, 404.8352, 17.1864, 140.2278, 142.362], [466.7177, 895.4338, 582.6966, 376.5212, 397.4633, 391.0706, 121.3815, 31.9357, 0.0, 113.0083, 220.2881, 367.789, 289.9882, 185.5102, 120.934], [117.6552, 993.9431, 775.2167, 717.8828, 328.0722, 737.4159, 99.1515, 16.1007, 71.7288, 123.6495, 254.8834, 461.2639, 158.3736, 260.8168, 42.372], [527.3705, 1229.8432, 1010.4823, 813.6952, 308.8822, 241.956, 191.007, 64.8071, 75.348, 308.5933, 328.0393, 633.4143, 382.7578, 195.1081, 51.546]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

