created: 20230329220116000
creator: Drevarr
modified: 20230705163523357
modifier: drevarr
tags: ChartData
title: 202303292201_ripsIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Kiloak", "Arkintor", "Avian Nefaris", "Sister Elon\u00edth", "Bura Beignetbringer", "Lord Mac\u00fcmbeiro", "Bubble Teabringer", "Nazhul Naxxremis", "Zaylen Harker", "Oo Dads Mad", "Sp\u00edcy Cheese", "Bee Honeybringer", "Cael Saladbringer", "My Birthday Girl", "Abigail Ryn", "Pieca Pizzabringer", "Johosh The Great", "Legacy Of Mathus", "K\u00f4sair", "Sizzln Sisigbringer", "Panther B Me", "\u00c4lplrmagron\u00e4bringer", "Rina Of Theros", "Ark Darkness", "Charred Fishbringer", "Bella Lunabringer", "Boysto Yardbringer", "Cinder Flamebringer", "Blancooo Padreee", "Ravioli Fetabringer", "Band Aidbringer", "Xanvias Tlesel", "Bork Borkbringer", "Plum Crazybringer", "Smol Gluvs", "Baidu Sugiyama", "Spicy Gyrosbringer", "Gavann", "Seren Nightroad", "Jorja Peachbringer", "Iced Coffeebringer", "Sumatra Satyricon", "Domina Flagbringer", "Big Macbringer", "Tootsie Pop Bringer", "Mort\u00e4rion", "Ryvalia Fazebringer", "Brioche Bunbringer", "Morton Saltbringer", "Newtype Khan"];
const professions = ["Firebrand", "Tempest", "Tempest", "Dragonhunter", "Firebrand", "Berserker", "Firebrand", "Scourge", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Vindicator", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Weaver", "Scourge", "Vindicator", "Scourge", "Firebrand", "Scrapper", "Firebrand", "Vindicator", "Weaver", "Berserker", "Firebrand", "Scrapper", "Berserker", "Tempest", "Scrapper", "Scourge", "Scourge", "Scrapper", "Firebrand", "Scourge", "Chronomancer", "Scourge", "Soulbeast", "Spellbreaker", "Tempest", "Scrapper", "Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0177, 0.0426, 0.0, 0.0263, 0.0123, 0.0], [0.0635, 0.0, 0.0107, 0.0195, 0.0193, 0.0, 0.0, 0.0123, 0.0286], [0.0, 0.0, 0.0353, 0.0213, 0.0, 0.0, 0.0123, 0.0], [0.0065, 0.0269, 0.0596, 0.0, 0.0526, 0.0], [0.0476, 0.0, 0.0068, 0.0065, 0.0269, 0.0298, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0156, 0.0, 0.0109, 0.0894, 0.0, 0.0], [0.0, 0.0, 0.0156, 0.0, 0.0219, 0.0383, 0.0, 0.0, 0.0], [0.0635, 0.0, 0.0224, 0.0, 0.021], [0.0159, 0.0, 0.0058, 0.0, 0.032, 0.0298, 0.0, 0.0263, 0.0, 0.0], [0.0476, 0.0, 0.0, 0.0429], [0.0345, 0.0596, 0.0], [0.0317, 0.0, 0.0107, 0.0, 0.0261, 0.0468, 0.0, 0.0, 0.0247, 0.0], [0.0317, 0.0, 0.0107, 0.013, 0.0261, 0.0468, 0.0, 0.0, 0.0], [0.0317, 0.0243, 0.0065, 0.0227, 0.0085, 0.0133, 0.0, 0.0, 0.0286], [0.0159, 0.0, 0.0156, 0.0065, 0.0362], [0.0126, 0.0, 0.0294, 0.0553, 0.0, 0.0, 0.0, 0.0], [0.0794, 0.0, 0.0156, 0.0065, 0.0193, 0.0723, 0.0, 0.0, 0.0, 0.0], [0.0476, 0.0, 0.0165, 0.0, 0.0294, 0.0298, 0.0, 0.0, 0.0, 0.0], [0.0476, 0.0, 0.0117, 0.0, 0.0294, 0.0383, 0.0, 0.0789], [0.0159, 0.0, 0.0214, 0.0, 0.0235, 0.0468, 0.0, 0.0, 0.0, 0.0286], [0.0476, 0.0, 0.0214, 0.0065, 0.0193, 0.0596, 0.0, 0.0, 0.0123, 0.0], [0.0476, 0.0, 0.0185, 0.0, 0.0235, 0.0511, 0.0, 0.0, 0.0247, 0.0286], [0.0159, 0.0, 0.0107, 0.013, 0.0362, 0.0383, 0.0, 0.0, 0.0123, 0.0], [0.0159, 0.0, 0.0185, 0.0395], [0.0, 0.0, 0.0165, 0.0, 0.0328, 0.0213, 0.0, 0.1579, 0.0, 0.0571], [0.0159, 0.025, 0.0126, 0.0065, 0.0412, 0.017, 0.0, 0.0, 0.0123, 0.0], [0.0317, 0.0, 0.0204, 0.013, 0.0311, 0.0468, 0.0, 0.0, 0.0, 0.0], [0.0159, 0.0, 0.0136, 0.0, 0.0345, 0.0723, 0.0, 0.0, 0.0], [0.0317, 0.0, 0.0185, 0.0, 0.032, 0.0638, 0.0, 0.0, 0.0123, 0.0], [0.0317, 0.0, 0.0165, 0.0195, 0.0311, 0.0638, 0.0526, 0.0, 0.0], [0.0159, 0.0, 0.0117, 0.026, 0.037, 0.0638, 0.0, 0.0263, 0.0123, 0.0], [0.0952, 0.0, 0.0233, 0.0, 0.032, 0.0511, 0.0, 0.0, 0.0, 0.0], [0.0317, 0.0, 0.0175, 0.0, 0.0446, 0.0298, 0.0133, 0.0, 0.0], [0.0635, 0.0, 0.0243, 0.013, 0.0336, 0.0596, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0175, 0.0065, 0.0437, 0.0596, 0.0133, 0.0, 0.0, 0.0286], [0.0476, 0.0, 0.0117, 0.0065, 0.0513, 0.0468, 0.0, 0.0, 0.0, 0.0286], [0.0476, 0.0, 0.0204, 0.013, 0.0345, 0.0809, 0.0267, 0.0526, 0.0, 0.0], [0.0159, 0.0, 0.0233, 0.013, 0.0513, 0.017, 0.0, 0.0, 0.0, 0.0], [0.0233, 0.0195, 0.0488, 0.0468, 0.0, 0.0], [0.0, 0.0, 0.0156, 0.0065, 0.0681], [0.0317, 0.0, 0.034, 0.013, 0.0429, 0.0426], [0.0, 0.0, 0.0272, 0.0, 0.0463, 0.0766, 0.0, 0.0, 0.0, 0.0], [0.0317, 0.0, 0.0302, 0.026, 0.0412, 0.0638, 0.0, 0.0, 0.0], [0.0, 0.0, 0.036, 0.0325, 0.0362, 0.0511, 0.0, 0.0789, 0.0247, 0.0571], [0.0159, 0.0, 0.0165, 0.0065, 0.0606, 0.0511, 0.0, 0.0789, 0.0123, 0.0], [0.0476, 0.0, 0.0175, 0.0, 0.069, 0.0298, 0.0, 0.0], [0.0, 0.0, 0.0243, 0.013, 0.0496, 0.1106, 0.0, 0.0, 0.0247, 0.0571], [0.0794, 0.0, 0.0224, 0.013, 0.0555, 0.0809, 0.0, 0.0263, 0.0494, 0.0], [0.0794, 0.0, 0.0272, 0.0065, 0.069, 0.0128, 0.0, 0.0247, 0.0], [0.0952, 0.0, 0.037, 0.013, 0.0429, 0.1234, 0.0, 0.0, 0.0123, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

