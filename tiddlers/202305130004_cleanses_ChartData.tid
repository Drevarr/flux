created: 20230513000456000
creator: Drevarr
modified: 20230705163529670
modifier: drevarr
tags: ChartData
title: 202305130004_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Johosh The Great", "Lookin Boi", "Lucas Ryn", "Aronorf Xideliesi", "Spreadflamesoflight", "Miphest\u00f6", "Black Raspberry Pie", "Jupiter Four", "Leetle Dim", "Zaidy Sagemist", "Eibh\u00ebar", "High Sorcer Baradun", "Arriasa", "Venomina The Techie", "Mac Aaroni", "Tegan Parker", "Artakama Nahid", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Willbender", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Vindicator", "Chronomancer", "Tempest", "Druid", "Scrapper", "Tempest", "Tempest", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5271, 0.8983, 0.0741, 0.1613, 1.7667], [0.1389, 0.0952, 0.206, 0.1921, 0.1085, 0.1017, 0.0, 0.0, 0.2583, 0.0, 0.0, 0.2891, 0.0, 0.0, 0.24, 0.131, 0.0, 0.0949, 0.0, 0.0, 0.0, 0.3673, 0.0, 0.2544, 0.0, 0.0238, 0.0], [0.3571, 0.0, 1.0657, 0.0, 0.163, 0.0, 1.398, 1.2719, 0.0, 0.0], [0.0, 0.0714, 0.0299, 0.1583, 0.2403, 0.0904, 0.0, 0.0323, 0.4, 0.0, 0.0, 0.3906, 0.0, 0.336, 0.2619, 0.0, 0.2628, 0.0, 0.0, 0.0, 0.2755, 0.2273, 0.3246, 0.0, 0.0], [0.0972, 0.0417, 0.2925, 0.1441, 0.0465, 0.0621, 0.0, 0.0, 0.4833, 0.0, 0.3672, 0.0, 0.296, 0.119, 0.0, 0.4891, 0.0, 0.0, 0.0, 0.2755, 0.0, 0.2719, 0.0517, 0.0476], [0.0417, 0.006, 0.0806, 0.3668, 0.0, 0.435, 0.5185, 0.129, 0.8, 0.0], [0.0, 0.0417, 0.3582, 0.2675, 0.031, 0.1469, 0.0, 0.0, 0.2917, 0.0, 0.0, 0.4766, 0.0, 0.152, 0.0655, 0.0, 0.4745, 0.0, 0.0217, 0.0, 0.2857, 0.0, 0.2895, 0.0172, 0.0238, 0.0], [0.1806, 0.0893, 0.1224, 0.2434, 0.0, 0.1751, 0.0, 0.0, 0.425, 0.0, 0.0, 0.3594, 0.087, 0.0, 0.544, 0.1607, 0.0, 0.292, 0.0217, 0.0, 0.5102, 0.0, 0.5877, 0.0, 0.0], [0.1667, 0.1845, 0.0866, 0.2162, 0.3488, 0.1864, 0.0, 0.0645, 0.5667, 0.0, 0.4453, 0.0, 0.224, 0.3274, 0.0, 0.6204, 0.0, 0.0, 0.4184, 0.0, 0.4298, 0.0, 0.0, 0.0], [0.1528, 0.1012, 0.209, 0.2576, 0.3178, 0.1469, 0.1852, 0.1613, 0.4583, 0.0, 0.0, 0.0625, 0.0, 0.0, 0.352, 0.6429, 0.0222, 0.1241, 0.0, 0.087, 0.0, 0.5306, 0.0, 0.2544, 0.0, 0.2143, 0.129], [0.0, 0.0175, 0.186, 0.3333, 0.0, 0.0968, 0.8667, 0.0476, 0.4194, 0.0435, 1.1484, 0.0, 0.0, 0.848, 0.4048, 0.0, 0.6496, 0.0, 0.1087, 0.6633, 0.0909, 0.7281, 0.0, 0.0, 0.0161], [0.0556, 0.0714, 0.4537, 0.3406, 0.4729, 0.3616, 0.2963, 0.0323, 0.875, 0.0714, 0.0, 0.0, 0.5938, 0.0, 0.029, 0.632, 0.2738, 0.0, 0.4891, 0.0, 0.0, 0.4388, 0.0, 0.5702, 0.0, 0.1667, 0.129], [0.3056, 0.2143, 0.9224, 0.5862, 0.2946, 0.5311, 0.2593, 0.0323, 1.4833], [0.3226, 2.1583, 0.2581, 0.4783, 1.875, 0.1304, 0.0, 1.696, 0.7619, 0.0667, 2.2263, 0.2283, 0.0222, 2.3265, 0.3182, 2.5088, 0.0, 0.0645], [0.1389, 0.1667, 1.0746, 0.6463, 0.3488, 0.5593, 0.3333, 0.0, 1.7167, 0.0323, 1.4844, 0.6957, 0.0, 1.592, 0.631, 0.0, 1.8978, 0.0556, 0.0109, 0.3556, 1.5714, 0.0, 1.0965, 0.0345, 0.0], [0.1667, 0.2083, 0.8806, 0.4028, 0.7597, 0.7232, 0.0741, 0.0645, 2.775, 0.3333, 0.0323, 0.0, 2.1953, 0.3043, 0.0, 2.184, 0.9286, 0.0, 1.9124, 0.0, 0.0109, 0.6, 2.2245, 0.5455, 1.9737, 0.3333, 0.129], [0.4028, 0.1905, 1.2388, 1.1834, 0.8295, 0.7288, 0.0, 0.0323, 2.225, 0.0645, 1.8906, 0.6522, 0.0145, 2.232, 0.9643, 0.0, 1.7153, 0.0, 0.25, 2.602, 0.3636, 2.2105, 0.0, 0.0, 0.0], [0.3611, 0.6131, 1.5075, 1.1659, 0.6667, 0.6554, 0.1481, 0.2581, 2.4333, 0.3571, 0.0968, 0.0435, 1.7578, 1.1739, 0.0435, 2.016, 1.0774, 0.0444, 1.2263, 0.1087, 0.0444, 2.1939, 0.2273, 1.9825, 0.0172, 0.1905, 0.0645], [0.5833, 0.5893, 1.6567, 1.3515, 0.5271, 0.6102, 1.0741, 0.2258, 2.3, 0.6905, 0.4194, 0.087, 2.0, 1.0435, 0.1594, 1.672, 1.4702, 0.0, 2.6204, 0.0, 0.25, 0.0222, 2.0918, 0.9545, 2.4035, 0.0517, 0.0952, 0.2742]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

