created: 20230303232222000
creator: Drevarr
modified: 20230705163521108
modifier: drevarr
tags: ChartData
title: 202303032322_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Insanityburn", "Nelliel T", "Oo Dads Mad", "Panther B Me", "Seren Nightroad", "Heks Appeal", "Arcanophage Farra", "Morton Saltbringer", "Newtype Khan", "Rozaalyna", "Grasszanine", "Smol Gluvs", "Seren\u00e1 Joy", "Eibh\u00ebar"];
const professions = ["Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.024, 0.2003, 0.1765, 0.2353, 0.0385, 0.1114, 0.0, 0.0474], [0.0882, 0.1242, 0.0, 0.0, 0.4211, 0.0727, 0.0079, 0.4211, 0.0465, 0.0364, 0.0, 0.0788, 0.2101, 0.0588, 0.0577, 0.0173, 0.0, 0.1075, 0.006, 0.0, 0.0847, 0.0058, 0.0778, 0.0432], [0.0, 0.1404, 0.4118, 0.0294, 0.1538, 0.1163, 0.0, 0.0838, 0.0536, 0.0, 0.1328, 0.0, 0.0], [0.0, 0.1536, 0.0, 0.0, 0.3158, 0.1455, 0.0, 0.0853, 0.0547, 0.3235, 0.096, 0.1387, 0.1597, 0.0, 0.0, 0.1436, 0.0, 0.1311, 0.0298, 0.0, 0.0, 0.0876, 0.0058, 0.1278, 0.0757], [0.0, 0.0686, 0.0588, 0.0, 0.0789, 0.0909, 0.0, 0.4737, 0.0233, 0.0114, 0.0441, 0.016, 0.1524, 0.2773, 0.0, 0.0769, 0.1782, 0.0, 0.1658, 0.0536, 0.1538, 0.0, 0.1723, 0.0058, 0.0167, 0.0703], [0.0882, 0.1013, 0.1373, 0.0312, 0.0, 0.1091, 0.0, 1.0175, 0.0775, 0.1253, 0.2206, 0.112, 0.1935, 0.2269, 0.0, 0.0577, 0.047, 0.0, 0.1439, 0.0595, 0.2308, 0.0179, 0.1116, 0.0116, 0.2111, 0.027], [0.0, 0.1699, 0.0, 0.3947, 0.0545, 0.0472, 0.5614, 0.093, 0.0091, 0.3382, 0.184, 0.1199, 0.2605, 0.0882, 0.0385, 0.3045, 0.0, 0.1384, 0.0179, 0.0, 0.0, 0.1285, 0.0, 0.1278, 0.0216], [0.0588, 0.1732, 0.0196, 0.0312, 0.2105, 0.0727, 0.0236, 0.3333, 0.1163, 0.0979, 0.1884, 0.2269, 0.1176, 0.0577, 0.1757, 0.0, 0.224, 0.0298, 0.1795, 0.0357, 0.1342, 0.0058, 0.05, 0.027], [0.0, 0.1536, 0.0, 0.0, 0.1579, 0.1091, 0.0, 1.0351, 0.0233, 0.0433, 0.5147, 0.04, 0.1404, 0.1597, 0.0, 0.1923, 0.1881, 0.0, 0.1075, 0.0357, 0.1795, 0.0, 0.185, 0.0, 0.1667, 0.1297], [0.0, 0.1569, 0.0, 0.5526, 0.1273, 0.0157, 0.6667, 0.0543, 0.0934, 0.7353, 0.096, 0.2997, 0.2941, 0.0588, 0.0577, 0.2376, 0.0, 0.2022, 0.0357, 0.1026, 0.1695], [0.0, 0.2222, 0.1176, 0.0, 0.1053, 0.0727, 0.0, 0.5789, 0.0853, 0.1116, 0.7206, 0.056, 0.238, 0.521, 0.1471, 0.0769, 0.2178, 0.173, 0.006, 0.2051, 0.0, 0.161, 0.0291, 0.0833, 0.0703], [0.1471, 0.2974, 0.0784, 0.0, 0.8158, 0.0545, 0.0157, 0.8246, 0.2016, 0.0774, 0.6618, 0.256, 0.1884, 0.3277, 0.1471, 0.0962, 0.302, 0.0, 0.173, 0.0595, 0.3333, 0.0, 0.2613, 0.0058, 0.1278, 0.1081], [0.0588, 0.2484, 0.0, 0.375, 0.4211, 0.1091, 0.0236, 1.1404, 0.1085, 0.1344, 0.2941, 0.184, 0.2962, 0.4034, 0.0588, 0.0577, 0.3144, 0.0, 0.1949, 0.0833, 0.4103, 0.0179, 0.1992, 0.0058, 0.1722, 0.1189], [0.3235, 0.4085, 0.1569, 0.0, 0.8158, 0.3091, 0.0709, 1.0, 0.3101, 0.2027, 0.7794, 0.28, 0.4606, 0.9496, 0.0882, 0.3654, 0.3936, 0.093, 0.4153, 0.125, 0.5385, 0.0714, 0.3701, 0.0174, 0.1556, 0.1568]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

