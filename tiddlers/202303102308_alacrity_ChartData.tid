created: 20230310230833000
creator: Drevarr
modified: 20230705163521551
modifier: drevarr
tags: ChartData
title: 202303102308_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Drevarr Moonwillow", "Rayge Storm", "High Sorcer Baradun", "Primal Clone", "Tegan Parker", "Venomina The Siren", "Zadie Miststep", "Black Raspberry Pie", "Mac Chiato"];
const professions = ["Chronomancer", "Scrapper", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[24.9975, 75.0582, 37.5452, 0.0, 14.95, 183.7625, 0.0, 37.4693, 7.7639, 0.0, 29.0255, 0.0, 0.0, 0.0, 37.4614, 0.0, 0.0, 18.674, 0.0, 43.1933, 0.0, 21.8942, 91.6692, 10.0276, 43.9511, 22.5765, 47.034, 0.0, 0.0, 0.0, 52.836], [31.779, 91.4319, 66.5896, 77.1995, 13.9334, 410.225, 19.152, 76.2458, 10.7088, 22.0184, 15.1289, 16.5747, 44.353, 27.5627, 24.87, 16.0274, 10.9503, 18.8602, 8.1624, 38.0538, 0.0, 46.8625, 87.3862, 28.1151, 22.4581, 19.053, 13.932, 14.0346, 12.7235, 20.3867, 58.1196], [232.4564, 226.366, 10.8537, 1592.8625], [52.3215, 282.555, 163.7416, 205.3555, 17.94, 1434.2625, 0.0, 325.3152, 15.3047, 43.367, 18.4064, 119.8387, 0.0, 18.9316, 85.8686, 38.74, 0.0, 44.2868, 13.4964, 0.0, 0.0, 90.72, 0.0, 0.0, 85.3034, 131.9657], [121.5225, 254.4444, 62.1368, 31.073, 27.1193, 1061.4, 53.5815, 98.3207, 106.2402, 69.9481, 50.5784, 50.8654, 80.1782, 30.6083, 139.9331, 0.0, 5.796, 0.0, 27.1776, 74.2486, 7.0485, 137.8132, 144.8608, 76.7395, 102.8957, 83.1546, 62.208, 105.8184, 32.5584, 65.1515, 158.0729], [57.717, 177.0678, 77.5192, 157.458, 25.3851, 1478.4875, 80.1045, 61.4323, 52.5177, 25.2416, 9.9636, 6.9438, 94.1203, 29.1362, 50.3206, 39.6739, 0.0, 40.3674, 10.488, 48.9159, 0.0, 149.2102, 153.2194, 96.8326, 120.0127, 72.1143, 114.966, 28.4832, 45.4961, 79.2774, 155.0892], [165.033, 410.7915, 290.444, 298.4135, 51.9961, 1054.5375, 100.296, 564.9447, 38.6855, 114.6127, 43.4203, 22.3056, 115.5974, 86.9773, 78.8965, 77.4259, 43.1077, 85.5325, 30.707, 82.8144, 40.9126, 114.4195, 89.6658, 71.5176, 152.5738, 36.1224, 53.406, 100.3122, 38.6631, 43.043, 125.6254], [143.6985, 341.6742, 177.606, 165.5885, 29.9, 1832.2875, 109.305, 328.6555, 47.208, 87.1944, 53.0955, 20.1179, 120.9216, 109.5147, 131.405, 86.1775, 44.7017, 25.1055, 0.0, 56.4246, 0.0, 175.0033, 173.2526, 118.969, 195.4953, 77.6475, 197.424, 105.2802, 47.5524, 115.9031, 180.8234], [107.0685, 411.3711, 209.484, 159.229, 42.0095, 1826.1875, 70.686, 405.1917, 187.0917, 173.2167, 76.6148, 56.6677, 137.4806, 63.6023, 66.1713, 98.2925, 23.8774, 27.339, 19.4712, 88.0268, 52.7245, 286.4986, 271.3462, 137.397, 177.2842, 116.145, 125.658, 139.3524, 0.0, 0.0, 0.0], [121.716, 253.6072, 283.521, 70.9826, 2584.1125, 160.335, 555.65, 119.8493, 160.0726, 41.9258, 64.634, 194.016, 127.0777, 105.9991, 142.9428, 55.5051, 42.7272, 106.9808, 82.5989, 234.8374, 231.8325, 157.1495, 250.3859, 56.4804, 209.25, 149.661, 83.131, 124.3943, 253.0534]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

