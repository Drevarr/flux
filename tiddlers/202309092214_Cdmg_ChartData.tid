created: 20230909221422000
creator: Drevarr
tags: ChartData
title: 202309092214_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Seiker Novus Terra", "Sofya De Nova", "Oo Dads Mad", "Koralia Danai", "Itty Bitty Mew", "Belvyn Brightblade", "Tootsie Pop Rocks", "Krytsmancer", "Matrim The Mad", "Mistwalker Cael", "Tikonis", "Keypek The Drunk", "Crusader Siolith", "Mort\u00e4rion", "Christie Raskae", "Helgariz", "Drevarr Moonwillow", "Jimbo The Pleb", "Traidoruns Maximus", "Rhaevynn", "Rina Of Theros", "Fourty Eighth", "High Sorcer Baradun", "Pr\u00e6tor Lightbringer", "Sygaldry Verdandi", "Bella Sassy", "Gabe Malhorn", "Nsidejob", "Glorious Gluvs", "Latedoctor", "Serene Azura", "Lord Erin The Wise", "Charr Surethang", "Be\u00eb", "Zenady", "Xanvias Einzbern"];
const professions = ["Tempest", "Tempest", "Berserker", "Firebrand", "Catalyst", "Firebrand", "Scrapper", "Reaper", "Catalyst", "Herald", "Holosmith", "Scrapper", "Firebrand", "Scrapper", "Willbender", "Berserker", "Scrapper", "Berserker", "Firebrand", "Reaper", "Reaper", "Scourge", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Catalyst", "Berserker", "Reaper", "Dragonhunter", "Weaver", "Berserker", "Reaper", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 6.1621, 0.0, 0.7444, 9.5212, 0.0, 0.0, 0.0, 0.0, 5.3662], [11.3878, 0.0, 4.2286, 0.0, 14.5403, 3.2565, 3.5226, 0.0, 2.8804, 7.3909], [0.0, 0.0, 16.7116, 0.0, 20.4111, 0.0], [0.0, 0.0, 3.1485, 3.2093, 0.0, 18.788, 0.0, 0.0213, 0.0, 1.0254, 3.639, 2.7026, 0.0, 0.0, 0.0, 3.2727], [26.974, 2.5508, 0.0, 41.1848, 4.6455], [0.0, 2.4845, 12.9454, 11.6047, 26.4111, 6.3242], [0.93, 0.5773, 3.1075, 2.8605, 9.1333, 9.6833, 15.1122, 6.8511, 1.6286, 1.5293, 7.039, 9.29, 0.3164], [19.5279, 6.2401, 53.8814, 27.9239, 35.4545], [12.9451, 21.1837, 12.4681, 0.0, 7.458, 2.4182, 7.2345, 11.9783, 13.7273], [0.0, 17.9897, 11.8703, 0.0, 0.0, 0.0, 4.0204, 0.0, 0.0, 5.1603, 8.2649, 0.5465, 4.8757, 0.0, 9.1848, 22.9182], [5.8216, 23.5282, 0.0339, 67.1848, 35.9], [14.3163, 65.9787, 3.0286, 4.715, 19.2104, 9.948, 2.9576], [0.0, 19.1134, 1.8703, 6.9535, 43.0333, 22.0424, 3.4694, 0.4681, 0.1832, 1.7766, 16.974, 2.7655, 0.0, 0.0], [26.9539, 16.4638, 30.9694, 2.117, 0.0, 0.6819], [12.2594, 15.9149, 0.0, 0.0, 72.7361], [38.171, 30.096, 2.4576, 35.2283, 50.6091], [0.0, 17.134, 10.5887, 12.2558, 1.2556, 12.9052, 3.3367, 10.5, 0.0, 7.2799, 21.1714, 1.0632, 6.7429, 0.0678, 11.3478, 17.9364], [39.3505, 40.5427, 34.907, 42.1333], [35.5162, 37.8469, 10.9255, 19.5429, 9.1476, 28.9065], [10.8247, 15.9437, 42.2093, 8.8444, 9.4788, 24.7857, 0.0426, 7.4857, 3.3486, 18.8, 6.9108, 4.5508, 0.0, 20.7935, 21.2455], [0.0, 17.134, 15.029, 16.1628, 36.1444, 16.9776, 31.0714, 0.0, 0.0, 4.229, 10.8416, 2.1673, 7.3531, 0.0, 23.6727], [39.6361, 15.226, 11.948, 17.6356, 22.9831, 71.0543], [11.0424, 14.3776, 0.6915, 10.3155, 18.8312, 21.6989, 25.0508, 6.1356, 13.337, 51.3545], [42.1959, 6.8464, 0.0, 1.1222, 25.601, 1.2551, 2.7766, 4.6, 10.3639, 36.7558, 6.9108, 2.2175, 0.678, 3.5217, 17.9636], [0.0, 9.0599, 0.0, 3.883, 32.0857, 11.3715, 41.013, 28.0669, 24.4689, 0.0, 0.0217, 15.8364], [0.0, 45.1031, 0.5375, 0.0, 0.0222, 31.6509, 2.6633, 0.0, 11.5429, 3.173, 9.4208, 24.7695, 3.9548, 0.0, 1.5761, 121.1455], [11.38, 14.1134, 16.2696, 10.3023, 0.2889, 21.9302, 25.6122, 2.0851, 71.7143, 1.9975, 8.2416, 17.7881, 19.7655, 1.9322, 11.2391, 10.2182], [37.0206, 20.1775, 21.8837, 22.2222, 23.7332, 3.3571, 0.0, 3.7429, 5.3155, 15.2935, 17.6729, 23.0311, 0.0, 48.0, 25.6636], [36.971, 15.093, 26.9333, 35.7232, 1.6429, 1.4574, 7.43, 12.4805, 4.3866, 34.678, 33.1356, 1.0, 5.5], [6.3, 31.433, 32.7935, 44.7442, 18.6444, 19.8504, 70.2653, 9.4043, 3.1143, 27.5623, 15.2442, 10.8885, 18.7147, 0.0, 0.0], [17.3505, 25.8464, 41.7674, 12.0556, 50.7107, 22.2041, 2.8085, 0.0, 15.458, 26.7662, 11.7993, 9.3559, 0.0, 24.0217, 50.5818], [34.6604, 83.3488, 21.4, 47.3541, 0.0, 0.0, 0.0, 12.8015, 35.8104, 34.1636, 12.1441, 0.0, 20.3587, 67.9455], [78.8041, 106.0956, 80.6744, 0.0, 111.0474], [8.065, 37.6598, 40.6672, 18.4186, 8.4667, 101.8354, 62.0306, 11.3085, 60.0, 25.1094, 58.5117, 16.974, 32.6356, 0.2881, 22.25, 89.2727], [0.0, 48.0512, 38.4651, 23.3667, 105.6085, 20.4592, 78.2553, 112.0571, 50.5522, 115.4701, 14.342, 25.0565, 0.0, 0.3913, 32.9727], [15.06, 33.5258, 75.0034, 93.1395, 56.3444, 32.7781, 56.5306, 0.0, 8.9143, 27.8321, 183.1247, 30.2937, 27.1328, 6.3898, 4.8913, 40.4455]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

