created: 20230802110620000
creator: Drevarr
tags: ChartData
title: 202308021106_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Gestern Yesteryear", "Drevarr Moonwillow"];
const professions = ["Firebrand", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 152, 243, 218, 319, 870, 1192, 272, 1264, 229, 5383, 223, 9685, 546, 225, 1064, 408, 878, 205, 208, 820, 271, 438, 188, 5083, 392, 240, 1059, 231, 243, 435, 0, 0, 197, 0, 241, 0, 0, 0, 0, 236, 0, 219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 325, 164, 210, 306, 240, 277, 210, 284, 191, 185, 134, 172, 128, 328, 547, 411, 242, 6110, 272, 150, 182, 194, 265, 363, 9856, 1657, 3971, 282, 200, 279, 203, 234, 1287, 196, 181, 132, 529, 283, 0, 175, 195, 1457, 164, 0, 479, 0, 202, 0, 0, 0, 0, 0, 0, 0, 857, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 222, 266, 250, 256, 202, 255, 195, 195, 272, 173, 0, 0, 0, 185, 0, 0, 739, 0, 498, 0, 362, 0, 205, 305, 0, 470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 556, 287, 1003, 1454, 308, 4834, 347, 245, 220, 1662, 219, 504, 261, 2010, 196, 292, 262, 197, 207, 222, 239, 209, 1638, 179, 429, 6777, 4022, 328, 2093, 258, 1005, 763, 1789, 149, 1500, 261, 260, 422, 447, 289, 190, 249, 145, 296, 441, 535, 180, 156, 276, 281, 188, 233, 210, 174, 157, 321, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [389, 286, 344, 283, 958, 195, 301, 251, 165, 199, 209, 1405, 313, 191, 320, 201, 267, 193, 362, 189, 158, 178, 237, 11713, 1068, 2709, 2255, 218, 583, 86, 253, 244, 363, 198, 289, 171, 450, 239, 360, 635, 599, 1048, 344, 291, 418, 243, 210, 514, 228, 237, 3583, 745, 551, 283, 182, 258, 241, 304, 1738, 1336, 241, 1277, 244, 8456, 194, 9211, 300, 204, 3626, 161, 526, 183, 249, 304, 1418, 319, 551, 358, 264, 2970, 153, 289, 471, 190, 292, 193, 217, 569, 267, 323, 365, 401, 1341, 224, 339, 313, 179, 280, 202, 314, 372, 3122, 340, 382, 503, 182, 2032, 1008, 472, 342, 432, 188, 210, 317, 373, 994, 229, 131, 431, 251, 397, 1326, 5113, 245, 276, 248, 6050, 304, 2402, 481, 689, 602, 188, 588, 295, 4900, 658, 250, 2824, 351, 6484, 284, 199, 605, 409, 195, 162, 163, 121, 208, 165, 531, 184, 179, 142, 137, 7709, 2226, 168, 298, 471, 248, 2012, 1592, 106, 320, 188, 251, 188, 298, 530, 395, 154, 170, 777, 259, 194, 155, 699, 146, 127, 155, 197, 134, 192, 1485, 339, 165, 222, 1237, 167, 6956, 4658, 229, 240, 146, 153, 201, 122, 1211, 143, 173, 129, 623, 256, 125, 176, 1053, 151, 434, 146, 185, 235, 237, 234, 497, 155, 234, 151, 1148, 5615, 202, 322, 325, 241, 231, 401, 444, 352, 541, 169, 228, 213, 440, 233, 283, 130, 465, 248, 228, 586, 14724, 189, 310, 305, 234, 221, 381, 418, 318, 533, 747, 440, 464, 238, 445, 278, 184, 182, 178, 209, 196, 247, 175, 276, 229, 1205, 161, 173, 143, 187, 5648, 289, 147, 146, 247, 185, 283, 316, 786, 386, 532, 272, 211, 1825, 630, 311, 387, 1097, 846, 1052, 342, 374, 5111, 531, 395, 1275, 389, 555, 299, 317, 643, 374, 443, 575, 7964, 6658, 378, 745, 15113, 260, 374, 6213, 369, 287, 3994, 1124, 434, 771, 370, 416, 325, 395, 399, 631, 239, 217, 337, 478, 530, 424, 4625, 327, 13997, 164, 364, 236, 1108, 437, 941, 311, 8330, 459, 367, 629, 496, 599, 203, 210, 325, 306, 296, 324, 350, 228, 522, 947, 450, 7018, 289, 358, 3920, 497, 521, 195, 1074, 846, 397, 847, 236, 156, 233, 205, 205, 242, 1464, 194, 286, 186, 259, 1142, 148, 185, 341, 269, 468, 1512, 182, 205, 762, 253, 255, 644, 194, 1880, 393, 293, 155, 146, 250, 329, 846, 232, 185, 1614, 183, 1757, 186, 257, 155, 280, 200, 299, 175, 318, 199, 199, 184, 184, 405, 1045, 272, 341, 229, 412, 679, 8292, 656, 208, 382, 964, 180, 247, 205, 406, 311, 1340, 234, 2954, 347, 225, 125, 182, 285, 516, 490, 391, 143, 321, 173, 276, 300, 4646, 2897, 423, 246, 219, 236, 552, 894, 198, 354, 289, 351, 703, 403, 373, 452, 577, 7330, 1545, 520, 422, 567, 361, 3421, 13266, 433, 314, 280, 423, 402, 247, 178, 225, 1435, 274, 610, 299, 258, 174, 199, 247, 153, 1515, 341, 575, 222, 349, 643, 254, 209, 215, 252, 271, 984, 497, 873, 281, 973, 760, 687, 180, 826, 407, 657, 217, 373, 3251, 248, 2998, 10280, 2887, 243, 252, 300, 679, 199, 281, 392, 319, 221, 403, 264, 285, 235, 391, 199, 168, 517, 172, 1254, 268, 202, 525, 215, 263, 994, 314, 193, 199, 238, 368, 267, 250, 168, 287, 178, 948, 143, 3427, 1423, 229, 354, 255, 201, 1335, 193, 239, 135, 175, 350, 186, 275, 254, 301, 189, 246, 193, 232, 186, 219, 365, 235, 812, 227, 211, 262, 157, 231, 1549, 240, 205, 314, 252, 402, 212, 224, 198, 208, 500, 125, 1711, 302, 187, 1758, 1130, 296, 344, 220, 811, 214, 620, 318, 4644, 197, 284, 192, 285, 264, 365, 962, 247, 478, 2086, 822, 240, 6991, 9074, 934, 2146, 301, 812, 750, 538, 177, 1257, 415, 210, 349, 220, 335, 628, 294, 350, 2087, 227, 253, 506, 451, 782, 857, 1864, 726, 297, 223, 667, 723, 1080, 417, 484, 6456, 743, 456, 223, 184, 235, 664, 1279, 517, 356, 264, 2036, 768, 1951, 298, 188, 256]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

