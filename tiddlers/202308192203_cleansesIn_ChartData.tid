created: 20230819220337000
creator: Drevarr
tags: ChartData
title: 202308192203_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Bee Nemesis", "Melody Phoenixstorm", "Faz Zypher", "Vini Boy", "Aira Draugr", "Storm Dragonbane", "Faz Zypher", "Mort\u00e4rion", "Jimbo The Pleb", "Belvyn Brightblade", "Gwyn Cassel", "Pr\u00e6tor Lightbringer", "Gwyn Cassel", "Nadumi", "Milvia Rosalyn", "Govinda Ektar", "K\u00e2 \u00d4tik R\u00e6j", "Rahani Sunray", "Wergrh", "Minnie Darley", "Stratager", "Vini Boy", "Nose Llama", "Bonewings", "Rina Of Theros", "Ax Axun", "Mmathuss", "Lord Erin The Wise", "Blancooo Padreee", "Klengah", "Xanvias Tsolice", "Glorious Gluvs", "Irish Mini Rev", "Darks Na", "Grand Magus Karen", "Lillith Bella", "Koralia Danai", "Sub Train", "Morv\u00e4rth", "Be\u00eb", "Bee Nemesis", "Gabe Malhorn", "Hyde En Sikh", "Tootsie Pop Rocks", "Crusader Siolith", "Drevarr Moonwillow", "Newtype Khan", "High Sorcer Baradun", "Tegan Parker", "Zaedy Zae"];
const professions = ["Berserker", "Scrapper", "Untamed", "Weaver", "Herald", "Soulbeast", "Soulbeast", "Scrapper", "Berserker", "Firebrand", "Chronomancer", "Firebrand", "Virtuoso", "Daredevil", "Druid", "Vindicator", "Berserker", "Chronomancer", "Renegade", "Dragonhunter", "Daredevil", "Tempest", "Weaver", "Scourge", "Scourge", "Vindicator", "Firebrand", "Weaver", "Spellbreaker", "Druid", "Weaver", "Berserker", "Herald", "Firebrand", "Tempest", "Dragonhunter", "Firebrand", "Firebrand", "Scourge", "Scourge", "Spellbreaker", "Firebrand", "Chronomancer", "Scrapper", "Firebrand", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.6892], [0.1667, 0.0172, 0.1196], [0.1847, 0.2, 0.2817, 0.0224], [0.041, 0.0741, 0.2816], [0.098, 0.0, 0.0521, 0.0241, 0.041, 0.0185, 0.1913], [0.0359, 0.0741, 0.0036, 0.465, 0.0, 0.0423, 0.0, 0.0087, 0.0177], [0.0261, 0.2686, 0.2432], [0.0241, 0.1026, 0.0556, 0.2888], [0.1564, 0.0, 0.0564, 0.1667, 0.3105], [0.1569, 0.0, 0.1319, 0.1566, 0.0462, 0.1296, 0.2635], [0.2157, 0.0, 0.0613, 0.0, 0.0087, 0.311, 0.473], [0.0087, 0.4382, 0.7568], [0.0513, 0.0556, 0.2383, 0.2994, 0.0, 0.3169, 0.1269], [0.0675, 0.0, 0.1128, 0.0556, 0.2852, 0.4076, 0.0, 0.0352, 0.1493], [0.0308, 0.0926, 0.2708, 0.4013, 0.0704, 0.0, 0.0, 0.1943, 0.2568], [0.0123, 0.0361, 0.041, 0.0556, 0.2491, 0.0493, 0.3781, 0.7568], [0.1569, 0.0172, 0.0521, 0.0, 0.041, 0.1111, 0.2996, 0.121, 0.0, 0.4789, 0.3134], [0.2675, 0.0, 0.5986, 0.2761, 0.3675, 0.2568], [0.135, 0.041, 0.037, 0.2708, 0.2675, 0.3169, 0.1791, 0.0087, 0.0813, 0.3243], [0.092, 0.0241, 0.0462, 0.0741, 0.2094, 0.242, 0.0, 0.0986, 0.5448, 0.0261, 0.1166, 0.5541], [0.0951, 0.0, 0.0308, 0.0556, 0.3105, 0.3503, 0.0211, 0.5149, 0.0087, 0.0883, 0.3919], [0.3248, 0.2667, 0.1901, 0.6194, 0.0261, 0.371, 0.4595], [0.1765, 0.0, 0.0767, 0.012, 0.0513, 0.0741, 0.1661, 0.3312, 0.0, 0.3732, 0.4104, 0.0, 0.2756], [0.0552, 0.0, 0.0667, 0.0, 0.2094, 0.3758, 0.331, 0.2836, 0.0, 0.2721, 0.5811], [0.2157, 0.0, 0.0552, 0.0, 0.041, 0.0926, 0.3032, 0.3057, 0.0, 0.2958, 0.2761, 0.0, 0.3463, 0.473], [0.1765, 0.0172, 0.1196, 0.012, 0.0564, 0.0926, 0.2202, 0.2611, 0.3028, 0.3806, 0.0087, 0.3781, 0.4865], [0.0723, 0.0564, 0.0741, 0.1841, 0.2803, 0.0, 0.5634, 0.5075, 0.0087, 0.4028, 0.5541], [0.1196, 0.1084, 0.0205, 0.037, 0.1913, 0.2866, 0.0, 0.6268, 0.6642, 0.0, 0.2332, 0.4189], [0.1373, 0.0, 0.0521, 0.0, 0.0769, 0.0556, 0.2238, 0.2166, 0.3592, 0.5896, 0.0174, 0.3816, 0.5811], [0.1765, 0.0, 0.0429, 0.0, 0.0615, 0.037, 0.343, 0.2994, 0.0, 0.2535, 0.4254, 0.0, 0.3816, 0.527], [0.0392, 0.0, 0.0736, 0.0, 0.0667, 0.2094, 0.3185, 0.0, 0.3099, 0.5373, 0.0, 0.4205, 0.6351], [0.2549, 0.0, 0.0613, 0.012, 0.0821, 0.0741, 0.2455, 0.3758, 0.0, 0.669, 0.4179, 0.0, 0.212, 0.4595], [0.0462, 0.037, 0.1841, 0.3567, 0.0, 0.4085, 0.7836, 0.0, 0.3852, 0.6892], [0.1275, 0.0, 0.1166, 0.012, 0.159, 0.0556, 0.2924, 0.2803, 0.1972, 0.4776, 0.0, 0.4488, 0.9189], [0.012, 0.0308, 0.037, 0.3032, 0.4395, 0.0, 0.8239, 0.5224, 0.0087, 0.5583], [0.0644, 0.0361, 0.0769, 0.0741, 0.3538, 0.2866, 0.0, 0.8099, 0.8134, 0.0, 0.159, 0.7703], [0.1667, 0.0, 0.1012, 0.0, 0.0769, 0.1481, 0.1986, 0.2484, 0.0, 0.8239, 0.5672, 0.4028, 0.5541], [0.1471, 0.0172, 0.0583, 0.012, 0.0923, 0.1111, 0.343, 0.3312, 0.0, 0.7183, 0.5075, 0.0, 0.3675, 0.5676], [0.0, 0.0798, 0.012, 0.0154, 0.0926, 0.3502, 0.5159, 0.0, 0.8873, 0.5522, 0.0, 0.1979, 0.8243], [0.1569, 0.0, 0.1472, 0.0602, 0.0513, 0.0741, 0.4043, 0.3503, 0.6338, 0.4627, 0.0, 0.3922, 0.4595], [0.012, 0.0769, 0.0741, 0.3502, 0.2166, 0.0, 0.838, 0.7985, 0.6078], [0.2353, 0.0, 0.0736, 0.012, 0.1231, 0.0556, 0.2671, 0.4395, 0.0, 0.6972, 0.6119, 0.3993, 0.7568], [0.3039, 0.0, 0.089, 0.0723, 0.0974, 0.0, 0.3791, 0.3758, 0.0, 0.6831, 0.6791, 0.0, 0.3074, 0.6757], [0.1275, 0.0172, 0.0736, 0.0, 0.0667, 0.0741, 0.3213, 0.3185, 0.0, 0.7535, 0.7239, 0.0, 0.4841, 0.5946], [0.2059, 0.0, 0.0982, 0.012, 0.0564, 0.1852, 0.0722, 0.2866, 0.0, 0.9859, 0.7537, 0.0087, 0.4912, 0.9324], [0.2647, 0.0172, 0.1503, 0.0241, 0.0872, 0.1481, 0.2744, 0.4522, 0.0, 0.7183, 0.597, 0.0, 0.4523, 0.8514], [0.2549, 0.0, 0.1871, 0.0, 0.0821, 0.2996, 0.3885, 0.0, 0.7042, 0.8806, 0.0087, 0.477, 0.6622], [0.1863, 0.1503, 0.012, 0.0718, 0.1296, 0.3394, 0.414, 0.0, 1.0986, 1.0075, 0.0348, 0.2933, 0.5135], [0.1288, 0.1026, 0.1481, 0.4296, 0.5478, 0.0, 0.8662, 0.5746, 0.4382, 0.9189], [0.1765, 0.0, 0.1166, 0.0361, 0.0872, 0.1296, 0.3105, 0.4076, 1.0141, 0.9179, 0.0, 0.6042, 1.0541]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

