created: 20230626013408000
creator: Drevarr
modified: 20230705163538873
modifier: drevarr
tags: ChartData
title: 202306260134_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Aronorf Xideliesi", "Sub Train", "Taery Shimui", "Skylar Shadowmoon", "Sumatra Satyricon", "Sub Train", "Warrior Constantine", "Belvyn Brightblade", "Mister Jekyll", "Lord Erin The Wise", "Rosie Sunray", "Fribble Bibble", "Blanco Padre Guard", "Drevarr Moonwillow", "Fuuko Kazari", "Husky Guard", "Azariel Moon", "No Reserv\u00e9", "Mememonoko", "Morv\u00e4rth", "Solus Sanctus", "Be\u00eb", "Argentum Boomstick", "Traidoruns Maximus", "Mistwalker Cael", "Minka Bringer", "Melli Dragonswrath", "Xanvias Einzbern", "Johosh The Mighty", "Crusader Siolith", "Lucky Leipreach\u00e1n", "Cat Wigglebooty", "Koralia Danai", "Cedryn X", "Sygaldry Verdandi", "Newtype Khan", "Tika Fiery", "Kary\u00edna", "Tegan Parker", "Gestern Yesteryear", "Artakama Nahid", "Axunar", "Ryvalia Fazebringer", "Tootsie Pop Rocks", "Bella Sassy", "Zayde Sunsabre", "Primal Clone", "Arcanophage Farra", "Elon The Archmagus", "Miphest\u00f6", "Venomina The Siren"];
const professions = ["Firebrand", "Dragonhunter", "Scourge", "Scrapper", "Soulbeast", "Firebrand", "Spellbreaker", "Firebrand", "Reaper", "Weaver", "Vindicator", "Scrapper", "Dragonhunter", "Scrapper", "Berserker", "Dragonhunter", "Reaper", "Vindicator", "Vindicator", "Reaper", "Firebrand", "Reaper", "Holosmith", "Firebrand", "Vindicator", "Scrapper", "Berserker", "Berserker", "Berserker", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Tempest", "Firebrand", "Tempest", "Dragonhunter", "Chronomancer", "Scrapper", "Firebrand", "Spellbreaker", "Chronomancer", "Spellbreaker", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 30, 0, 0, 0, 64, 0, 14, 0], [7, 1, 6, 49, 0, 20, 0, 0, 0, 0, 55], [0, 4, 15, 21, 0, 0, 0, 34, 34, 18, 13], [0, 0, 0, 34, 0, 0, 32, 10, 51, 10, 4], [0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 45, 0, 7, 0, 26, 17, 0, 0, 17, 0, 7], [0, 2, 33, 15, 0, 48, 0, 0, 18, 0, 28, 15, 10], [31, 21, 37, 0, 0, 2, 11, 3, 33, 31], [0, 0, 0, 0, 35, 0, 68, 12, 29, 0, 5, 32, 0, 13, 24, 0, 0], [0, 38, 0, 0, 0, 0, 0, 44, 0, 41, 16, 12, 10, 5, 24, 36], [0, 0, 0, 0, 17, 0, 23, 0, 2, 28, 5, 19, 0, 31, 19, 0, 0, 0, 6, 9, 0, 23, 10, 0, 27, 0, 0, 14, 0, 0], [3, 13, 0, 0, 26, 8, 14, 34, 22, 18, 29, 0, 24, 0, 0, 25, 18], [0, 0, 0, 0, 0, 0, 0, 41, 24, 36, 13, 13, 5, 0, 21, 0, 0, 0, 0, 19, 0, 19, 33, 23], [16, 63, 15, 16, 0, 2, 0, 0, 8, 0, 7, 0, 6, 0, 0, 0, 6, 47, 10, 32, 20], [0, 0, 0, 0, 0, 0, 0, 0, 8, 7, 0, 17, 0, 0, 7, 21, 0, 0, 0, 3, 0, 17, 0, 0, 30, 16, 0, 0, 0, 0, 45, 40, 43], [41, 21, 0, 13, 0, 0, 0, 0, 0, 0, 28, 0, 10, 104, 0, 0, 28, 0, 0, 2, 7], [78, 4, 11, 12, 0, 0, 0, 5, 0, 34, 87, 19, 8], [49, 0, 0, 0, 0, 7, 2, 17, 10, 3, 19, 0, 0, 0, 22, 21, 16, 20, 30, 0, 12, 12, 23], [0, 0, 0, 0, 0, 0, 0, 14, 6, 0, 29, 22, 5, 0, 24, 28, 0, 0, 0, 19, 21, 0, 30, 6, 36, 35], [0, 0, 0, 0, 0, 0, 50, 39, 16, 31, 19, 26, 1, 14, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 59, 0, 16], [0, 0, 0, 0, 0, 0, 26, 9, 19, 18, 5, 5, 0, 34, 27, 0, 0, 0, 6, 0, 24, 25, 8, 5, 77], [0, 0, 0, 0, 29, 0, 0, 34, 4, 17, 0, 0, 15, 0, 15, 0, 0, 0, 52, 0, 14, 12, 25, 0, 0, 0, 0, 21, 0, 0, 24, 30], [0, 0, 0, 0, 0, 0, 0, 69, 0, 4, 0, 17, 49, 0, 34, 0, 0, 0, 0, 0, 0, 1, 12, 67, 65, 43], [57, 0, 21, 30, 20, 0, 88, 113, 29, 22, 0], [0, 0, 0, 0, 0, 0, 54, 39, 35, 18, 8, 12, 0, 10, 0, 14, 0, 0, 0, 0, 0, 10, 0, 0, 85, 0, 6, 97], [0, 70, 0, 0, 0, 24, 25, 0, 24, 0, 0, 0, 0, 0, 8, 0, 0, 36, 28, 56, 0, 0, 40, 22, 8, 31, 21], [19, 28, 44, 0, 0, 0, 32, 3, 17, 12, 63, 37, 9, 0, 0, 23, 36, 29, 32, 18], [0, 0, 0, 0, 0, 0, 0, 3, 4, 30, 11, 46, 43, 14, 13, 17, 6, 0, 0, 13, 20, 16, 13, 57, 21, 24, 0, 0, 0, 9, 23, 57, 20], [0, 0, 0, 0, 0, 0, 76, 8, 118, 33, 58, 0, 13, 0, 0, 0, 0, 30, 0, 13, 16, 8, 28, 20, 0, 20, 10, 0, 11, 9], [0, 0, 0, 0, 0, 0, 0, 47, 5, 24, 35, 10, 0, 9, 0, 32, 0, 0, 19, 36, 26, 58, 9, 0, 32, 0, 0, 55, 25, 0, 22, 34], [0, 23, 2, 27, 0, 69, 15, 34, 0, 23, 0, 31, 30, 13, 16, 48, 0, 60, 49, 29, 27, 19], [13, 0, 71, 0, 0, 164, 3, 6, 26, 10, 0, 16, 42, 11, 0, 0, 0, 26, 28, 28, 66, 20, 0], [0, 0, 0, 0, 0, 0, 0, 22, 13, 8, 2, 22, 40, 0, 0, 62, 0, 0, 0, 8, 6, 35, 14, 22, 89, 0, 0, 41, 77, 55, 8, 8], [0, 0, 0, 0, 0, 0, 0, 27, 0, 19, 5, 16, 83, 0, 35, 0, 0, 0, 92, 0, 0, 5, 27, 32, 27, 0, 0, 17, 7, 51, 62, 35], [0, 0, 0, 38, 0, 0, 2, 0, 9, 55, 19, 25, 25, 67, 29, 0, 0, 0, 7, 0, 0, 24, 48, 20, 13, 0, 0, 26, 59, 18, 35, 30], [0, 0, 40, 16, 66, 30, 11, 16, 0, 0, 0, 0, 21, 39, 24, 44, 23, 17, 83, 0, 19, 0, 0, 28, 75], [0, 0, 0, 0, 0, 0, 0, 56, 52, 5, 95, 14, 9, 0, 31, 0, 0, 0, 0, 6, 0, 0, 26, 0, 17, 42, 0, 0, 74, 35, 6, 61, 30], [0, 0, 0, 0, 0, 0, 0, 68, 30, 6, 21, 30, 33, 0, 12, 0, 0, 0, 0, 31, 0, 36, 23, 30, 109, 12, 0, 0, 21, 0, 33, 41, 48], [0, 0, 0, 0, 0, 0, 0, 2, 0, 101, 28, 33, 25, 0, 37, 23, 0, 0, 0, 3, 5, 28, 33, 56, 13, 73, 0, 0, 38, 0, 76, 12, 5], [30, 0, 17, 14, 14, 13, 0, 54, 21, 0, 0, 46, 0, 26, 64, 18, 10, 2, 0, 0, 44, 87, 37, 33, 66], [0, 0, 20, 13, 30, 85, 79, 0, 8, 35, 0, 0, 80, 0, 19, 27, 28, 14, 19, 0, 0, 43, 0, 65, 32, 10], [0, 0, 0, 0, 0, 0, 0, 45, 0, 44, 49, 14, 19, 0, 66, 0, 0, 0, 81, 0, 0, 53, 47, 10, 43, 0, 65, 8, 7, 31, 43], [0, 0, 0, 26, 0, 0, 44, 8, 27, 24, 12, 53, 10, 15, 11, 0, 0, 0, 34, 12, 23, 4, 19, 22, 1, 0, 95, 110, 11, 59, 12], [0, 0, 0, 0, 0, 0, 0, 0, 26, 41, 63, 39, 0, 31, 14, 14, 0, 0, 13, 0, 37, 24, 73, 48, 59, 0, 0, 39, 8, 0, 46, 74], [0, 0, 0, 0, 0, 0, 0, 28, 22, 13, 32, 19, 18, 0, 15, 17, 45, 0, 65, 0, 14, 39, 32, 17, 60, 0, 0, 105, 21, 68, 20, 14], [0, 0, 0, 0, 0, 0, 0, 11, 8, 0, 97, 0, 72, 61, 19, 47, 16, 0, 54, 16, 30, 19, 116, 29, 0, 0, 0, 0, 0, 0, 58, 15], [0, 0, 0, 0, 10, 0, 0, 4, 20, 27, 17, 33, 30, 71, 76, 41, 0, 0, 0, 22, 0, 12, 37, 49, 0, 26, 0, 0, 111, 0, 51, 31, 26], [0, 6, 9, 0, 1, 0, 0, 52, 0, 13, 59, 21, 58, 10, 47, 8, 0, 0, 24, 26, 53, 69, 31, 41, 41, 0, 0, 35, 0, 41, 37, 34], [0, 38, 5, 0, 14, 0, 0, 50, 27, 56, 22, 65, 37, 0, 70, 24, 0, 0, 0, 30, 4, 28, 57, 3, 14, 91, 0, 75, 3, 0, 25, 104], [0, 0, 0, 0, 23, 0, 0, 25, 14, 66, 30, 34, 33, 0, 37, 0, 46, 0, 0, 23, 0, 37, 73, 75, 22, 45, 0, 0, 55, 86, 93, 30, 23], [0, 0, 0, 0, 0, 0, 0, 82, 7, 6, 0, 67, 153, 14, 98, 60, 49, 18, 11, 49, 17, 70, 29, 70, 69, 0, 0, 68, 22], [37, 33, 27, 79, 50, 34, 39, 47, 102, 0, 0, 55, 0, 56, 35, 43, 96, 150, 0, 0, 34, 84, 62, 97, 11]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

