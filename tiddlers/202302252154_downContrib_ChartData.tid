created: 20230225215428000
creator: Drevarr
modified: 20230705163520237
modifier: drevarr
tags: ChartData
title: 202302252154_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Nekroomori", "Grasszanine", "Madrigal Moonshade", "Daring Deathblade", "Sparks Malefacio", "Ace Hammers", "Viral Marketing", "Smol Gluvs", "Morv\u00e4rth", "Husky Guard", "Smol Daddy Tika", "Xyntharos", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Harry Callahann", "Be\u00eb", "Sassy Daddy Demon", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Scourge", "Spellbreaker", "Vindicator", "Scourge", "Scourge", "Vindicator", "Willbender", "Scourge", "Scourge", "Dragonhunter", "Berserker", "Vindicator", "Weaver", "Berserker", "Scrapper", "Scourge", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 15719.0, 5069.0, 4173.0], [1418.0, 0.0, 0.0, 12381.0, 9536.0, 3034.0, 874.0, 631.0, 0.0], [0.0, 0.0, 0.0, 19056.0, 1011.0, 0.0, 5522.0, 0.0, 0.0, 3499.0], [306.0, 0.0, 0.0, 13927.0, 14112.0, 5105.0, 5007.0, 0.0], [0.0, 0.0, 18635.0, 9161.0, 12024.0, 2360.0, 0.0, 0.0, 0.0, 0.0], [6901.0, 0.0, 0.0, 22875.0, 9162.0, 0.0, 0.0, 2887.0, 0.0, 2561.0], [3403.0, 0.0, 33294.0, 4931.0, 1507.0, 4191.0, 0.0], [6223.0, 0.0, 24912.0, 9063.0, 8340.0, 5316.0, 0.0, 0.0, 0.0], [134.0, 0.0, 0.0, 31398.0, 8293.0, 7810.0, 10068.0, 3033.0, 0.0], [0.0, 0.0, 0.0, 32150.0, 20936.0, 3077.0, 0.0, 2005.0, 0.0, 4986.0], [8839.0, 0.0, 0.0, 57159.0, 2743.0, 15335.0, 0.0, 0.0, 0.0, 0.0], [8553.0, 0.0, 0.0, 45688.0, 15280.0, 10684.0, 0.0, 921.0, 0.0, 0.0, 10335.0], [16245.0, 0.0, 0.0, 61833.0, 7125.0, 10917.0, 4925.0, 906.0], [8225.0, 0.0, 0.0, 76239.0, 14049.0, 1228.0, 8997.0, 0.0, 0.0, 0.0], [3995.0, 38344.0, 25909.0, 1259.0, 11074.0, 0.0, 0.0, 30777.0], [0.0, 0.0, 55059.0, 52458.0, 7729.0, 3055.0, 2653.0, 0.0, 0.0, 2144.0], [9639.0, 0.0, 0.0, 76940.0, 10823.0, 9552.0, 3723.0, 0.0, 0.0, 0.0, 22297.0], [7128.0, 0.0, 0.0, 47993.0, 29414.0, 19240.0, 16798.0, 0.0, 0.0, 23772.0], [0.0, 0.0, 0.0, 95347.0, 39287.0, 20623.0, 6334.0, 3552.0, 0.0, 0.0, 11652.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

