created: 20230625214256000
creator: Drevarr
modified: 20230705163536018
modifier: drevarr
tags: ChartData
title: 202306252142_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Blaze All Might", "Drac Tepes", "Hayuf", "Xanvias Tsolice", "Ateriuz", "Shrimp Tempsura", "Elonith Requiem", "Wall Knot", "Melpomene Vandrish", "Vesnan", "Drev Of The Dead", "Drevarr Moonwillow", "Liyo Morgaine", "Yedrax", "Gamora Titus", "Scythe User", "Latedoctor", "Hayuf", "Elonith Requiem", "Wall Knot", "Fluffy No Care Bear", "Booboo Hurts", "Jerryatric Reflexes", "No Reserv\u00e9", "Govinda Ektar", "Drumina", "Koralia Danai", "Yngvar The Burdened", "Charr Surethang", "Gestern Yesteryear", "Aronorf Xideliesi", "Tacitus Kilgore I", "Ani Deasun"];
const professions = ["Firebrand", "Scourge", "Dragonhunter", "Weaver", "Berserker", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Reaper", "Scrapper", "Herald", "Scrapper", "Dragonhunter", "Reaper", "Reaper", "Firebrand", "Reaper", "Dragonhunter", "Berserker", "Firebrand", "Berserker", "Vindicator", "Vindicator", "Druid", "Firebrand", "Scourge", "Spellbreaker", "Firebrand", "Firebrand", "Spellbreaker", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 0, 0, 0, 2, 0, 14, 13, 5], [18, 5, 0, 0, 1, 3, 0, 9], [0, 8, 0, 1, 0, 0, 7, 0, 15, 5, 5], [0, 10, 9, 14, 10], [1, 13, 9, 10, 13], [27, 0, 0, 0, 6, 0, 17, 0], [14, 14, 5, 0, 5, 3, 0, 11, 2], [0, 24, 18, 7, 11], [0, 0, 0, 0, 6, 0, 0, 39, 11, 0, 6], [1, 0, 4, 5, 0, 21, 10, 17, 3, 0, 0, 0, 5], [23, 18, 0, 4, 24], [7, 7, 0, 0, 0, 6, 5, 1, 8, 10, 12, 14], [7, 30, 25, 11], [1, 10, 4, 0, 21, 0, 0, 1, 1, 0, 6, 31], [7, 6, 1, 2, 0, 2, 14, 0, 8, 5, 17, 15], [11, 6, 2, 1, 4, 9, 9, 0, 14, 14, 9], [15, 31, 0, 2, 1, 2, 23, 10], [0, 64, 12, 4, 1, 2, 2], [3, 7, 28, 28, 2, 4, 17], [7, 8, 1, 0, 9, 16, 11, 32, 0, 0, 3, 0, 0, 9], [1, 7, 0, 8, 12, 5, 21, 21, 8, 16], [0, 2, 0, 9, 12, 0, 11, 12, 5, 4, 25, 14, 1, 4, 0, 0, 0, 1], [10, 4, 2, 19, 38, 12, 0, 2, 7, 2, 2, 3], [19, 3, 0, 0, 0, 8, 17, 0, 20, 40], [30, 21, 13, 0, 0, 29, 16, 0], [6, 10, 0, 2, 3, 9, 0, 23, 9, 3, 8, 19, 6, 0, 1, 24, 0, 0, 3], [8, 2, 1, 0, 20, 23, 0, 21, 26, 19, 14], [0, 10, 17, 4, 22, 10, 23, 0, 5, 28, 6, 0, 11], [2, 10, 0, 0, 19, 12, 0, 27, 25, 0, 10, 35], [10, 2, 12, 0, 3, 13, 0, 5, 9, 15, 18, 36, 23, 0, 6, 0, 0, 11, 2], [0, 9, 13, 33, 20, 14, 38, 0, 1, 41, 0, 16, 4], [5, 9, 0, 1, 0, 3, 15, 0, 11, 24, 9, 25, 62, 58, 3, 5, 4], [17, 1, 0, 10, 45, 1, 32, 27, 15, 18, 66, 62, 2, 1, 41]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

