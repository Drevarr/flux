created: 20230429000309000
creator: Drevarr
modified: 20230705163527288
modifier: drevarr
tags: ChartData
title: 202304290003_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Koisx", "Sub Train", "Rudjulin", "Rudjulin", "Aronorf Xideliesi", "Viral Marketing", "Air One Com", "Sister Elon\u00edth", "Koralia Danai", "Johosh The Great", "Bella Sassy"];
const professions = ["Dragonhunter", "Firebrand", "Willbender", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[65.828, 66.8552, 54.8624, 0.0, 184.747, 0.0, 16.0195, 321.4957], [264.8444, 296.2164, 199.5136], [89.9114, 104.22, 56.2057, 11.7757, 310.9095, 17.0318, 32.7058, 26.8039, 0.0, 60.8932, 45.5422, 27.9755, 20.0244], [1234.7626], [153.331, 1.6984, 89.6055, 0.0, 535.7408, 82.4548, 0.0, 79.537, 32.3952, 23.839, 106.571, 38.5433, 35.2321, 404.6078], [194.8119, 959.4513, 112.6058, 137.2711, 281.2225, 0.0, 0.0, 23.8503, 0.0, 24.0293], [211.788, 231.3684, 102.0923, 673.209, 145.2885, 17.9861, 151.639, 0.0, 0.0, 0.0, 0.0, 0.0, 1214.7899], [495.4612, 516.9312, 273.6709, 0.0, 1895.7771, 192.1261, 86.155, 193.0007, 0.0, 137.7871, 65.6963], [485.0251, 473.6992, 214.9312, 1599.2568, 237.41, 102.1898, 319.2728, 0.0, 175.9425, 33.8599, 23.9702, 19.375, 2027.5492], [424.8896, 520.4824, 188.4312, 0.0, 1809.185, 312.7874, 100.9172, 363.0713, 0.0, 59.9215, 38.3925, 0.0, 138.3307, 2546.8388], [423.284, 447.1424, 254.3149, 0.0, 1676.5988, 188.2133, 136.7197, 301.1536, 24.072, 285.2911, 127.1567, 127.8307, 344.3656, 2217.2896]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

