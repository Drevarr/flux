created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Cesare Pirane", "Minnie Darley", "Irish Necroman", "Be\u00eb", "Vini Boy", "Tegan Parker", "Ex Warcraft", "Mistwalker Cael", "Tootsie Pop Rocks", "Rahani Sunray", "Ryvalia Fazebringer", "Zaedy Zae", "Xanvias Einzbern", "Jimbo The Pleb", "Blancoo Padre", "N\u00eec\u00f4le", "Gabe Malhorn", "Kosa\u00efr", "Koralia Danai", "Aronorf Xideliesi", "Mmathuss", "Johosh The Great", "Sub Train", "Gestern Yesteryear", "Loganlek", "Keypek The Drunk", "Sygaldry Verdandi", "Bella Sassy", "Drevarr Moonwillow", "Grasszanine", "Newtype Khan"];
const professions = ["Spellbreaker", "Dragonhunter", "Reaper", "Reaper", "Tempest", "Tempest", "Tempest", "Vindicator", "Scrapper", "Chronomancer", "Chronomancer", "Druid", "Berserker", "Berserker", "Scrapper", "Spellbreaker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Firebrand", "Firebrand", "Scrapper", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.852, 2.6264, 0.0, 2.632, 3.9928, 1.0819, 5.0318, 0.0, 37.03, 1.6788, 0.0, 8.3592], [1.6425, 2.1756, 1.6313, 6.3636, 0.2386, 4.6558, 0.0669, 10.199, 8.5652, 0.0, 4.8325, 1.3188, 22.54, 0.972, 0.6336, 1.2539], [5.6179, 12.9955, 7.8568, 3.0912, 4.8824, 4.3292, 36.225, 2.695, 4.8576, 1.637], [0.0, 0.0, 12.173, 5.474, 4.0958, 5.2809, 3.0103, 50.3125, 7.113], [0.0, 0.0, 11.938, 3.9459, 11.186, 8.372, 0.0, 8.7683, 2.5803, 46.2875, 0.0442, 0.0, 0.0], [0.0, 1.3291, 6.0884, 42.441, 4.2504, 6.7491, 4.1351, 0.0, 23.345, 11.4426, 0.0], [24.8784, 81.1784], [2.775, 1.7538, 0.8618, 9.8904, 2.4538, 10.983, 4.6482, 11.844, 8.8872, 1.5714, 6.2275, 3.1824, 32.2, 2.695, 6.8429, 4.6672], [0.0, 1.3764, 0.5367, 2.6923, 7.9985, 0.0, 21.056, 13.1376, 9.0418, 9.0174, 1.7489, 46.69, 7.0246, 1.8586, 7.5929], [4.9757, 19.6977, 4.5144, 12.831, 8.7584, 7.0067, 6.6759, 3.7271, 54.3375, 5.3458, 2.3654, 2.3684], [21.385, 7.4704, 5.255, 7.2239, 5.1893, 64.4, 11.4868, 6.167, 4.2493], [1.7625, 7.8588, 0.0, 11.4238, 3.2376, 4.6558, 0.0, 18.095, 9.1448, 2.6533, 2.6903, 6.164, 90.5625, 10.8683, 12.5453, 5.3986], [2.8275, 2.1756, 1.3133, 10.0438, 3.4762, 20.6527, 9.4635, 28.294, 12.4936, 1.7517, 14.398, 5.7053, 61.985, 7.7315, 4.1818, 4.0751], [6.8376, 1.4364, 15.7173, 6.1344, 13.0124, 2.9762, 14.6405, 12.6224, 7.0582, 11.06, 5.734, 72.8525, 14.0051, 5.7446, 5.538], [2.7, 5.7498, 3.2216, 9.8138, 5.0098, 11.2217, 4.0462, 18.095, 9.2736, 3.22, 8.6687, 5.476, 89.355, 9.3662, 6.2515, 4.5976], [0.0, 47.8695, 14.6832, 3.6837, 15.5937, 9.3464, 105.455, 27.0382, 0.0, 7.1401], [0.0, 47.8695, 25.76, 8.8614, 12.5048, 5.648, 122.36, 11.9728, 5.6179, 0.8011], [56.4235, 8.7584, 0.0, 17.1381, 3.2397, 128.3975, 25.1384, 0.0, 11.2501], [0.0, 11.2776, 0.0, 23.461, 6.1003, 25.3086, 0.0, 37.6705, 2.8336, 7.8053, 12.2059, 0.0, 101.43, 5.0365, 16.5581, 6.9312], [0.0, 12.2322, 1.5493, 6.977, 10.5307, 15.4, 5.9523, 37.506, 11.7208, 0.0, 12.1063, 5.5907, 112.7, 21.118, 9.3773, 0.6966], [2.145, 10.545, 0.0, 15.4107, 13.4957, 29.3675, 4.9157, 32.4065, 5.8604, 8.6811, 12.1063, 6.1354, 112.7, 6.141, 8.4058, 6.6874], [32.4714, 0.0, 45.402, 18.032, 8.9645, 22.5186, 4.0998, 130.0075, 22.576, 12.2496, 5.3986], [0.0, 9.5016, 0.0, 13.3406, 10.8715, 24.831, 8.1259, 36.519, 8.8228, 8.0371, 12.7539, 6.7088, 135.6425, 7.0688, 18.4166, 3.4133], [20.424, 0.0, 33.2748, 8.3496, 29.3675, 3.5446, 36.6835, 13.202, 9.4282, 13.1525, 5.1319, 130.41, 7.0688, 10.0531, 6.7222], [18.301, 44.7675, 4.1466, 47.376, 10.3684, 6.1566, 15.6933, 10.4359, 144.9, 14.8003, 4.2662, 6.2346], [5.13, 9.8568, 4.2374, 23.7677, 5.4187, 14.0868, 5.852, 37.3415, 22.9908, 11.1541, 21.2731, 13.4749, 132.4225, 13.9167, 2.8723, 8.2895], [0.9, 10.3008, 0.0, 40.1751, 4.2941, 29.4869, 5.4173, 33.887, 20.6724, 2.4987, 14.8962, 10.2639, 141.68, 17.186, 23.7811], [0.0, 17.3604, 0.0, 24.8411, 10.7011, 41.6636, 5.317, 44.5795, 29.8816, 13.0346, 13.4016, 4.0425, 146.9125, 33.135, 19.895, 12.3646], [4.605, 14.1414, 2.6471, 44.3919, 6.9182, 29.9644, 2.7421, 52.64, 28.2716, 14.1938, 11.8073, 11.6114, 177.905, 17.3186, 12.841, 5.6076], [69.0016, 27.6214, 5.593, 46.046, 14.2968, 21.7713, 14.077, 272.4925, 35.9625, 8.1946, 9.9614], [2.295, 21.312, 14.4153, 92.464, 12.7118, 83.6854, 10.8011, 104.7865, 61.0512, 28.0011, 46.0835, 21.4452, 348.9675, 52.7951, 19.5149]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

