created: 20230408223537000
creator: Drevarr
modified: 20230705163524982
modifier: drevarr
tags: ChartData
title: 202304082235_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Ak\u00e1nt\u00f3r", "Tootsie Pop Rocks", "Tribal S", "Zadie Miststep", "Drevarr Moonwillow"];
const professions = ["Druid", "Scrapper", "Druid", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1656.5535, 508.1333, 355.3103, 373.7143, 386.0435], [528.2279, 10.7524, 9.9236, 51.0, 56.3478, 94.1404, 317.604, 0.0, 35.7045, 7.1682, 4.5849, 2031.5385, 108.2564, 78.86, 1102.494, 1559.7674, 2054.8242], [1069.1349, 371.0, 41.5099, 91.1071, 410.3478, 703.4212, 1176.651, 17.1915, 312.4773, 34.243, 488.6981, 1804.3846, 453.7949, 95.64, 1170.8133, 2449.814, 1503.4835, 353.4828, 1137.5783, 1827.3661, 1962.9639, 1430.8571, 2358.4474, 288.6075, 107.1429, 32.1613, 0.0, 16.5192, 774.6296, 453.7824, 382.4249], [1224.2093, 515.7905, 74.8842, 119.4643, 178.6957, 1154.7192, 1267.0895, 320.3404, 1012.7727, 90.3178, 96.2264, 2020.75, 333.2821, 132.28, 1288.8795, 2954.6744, 2901.9011, 1881.3494, 3026.9018, 2726.6988, 2475.873, 1849.5, 261.3364, 152.0, 104.0455, 9.1154, 619.0185, 1299.9119, 829.9223], [1204.693, 415.3905, 71.9729, 357.0357, 198.5217, 998.0514, 1395.953, 1075.7872, 621.4545, 245.0561, 179.717, 2712.9615, 198.7949, 382.32, 1456.6325, 4089.5233, 2739.2308, 3559.6364, 1929.069, 2591.1566, 3001.1429, 2770.8072, 2754.8095, 3016.5395, 491.0841, 374.7619, 70.2581, 0.0, 49.3462, 522.0926, 1374.2021, 581.6269]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

