created: 20230408223537000
creator: Drevarr
modified: 20230705163525055
modifier: drevarr
tags: ChartData
title: 202304082235_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Traidoruns Maximus", "Sp\u00edcy Cheese", "Venomina The Fierce", "Kat Bon Z", "Smol Daddy Tika", "Cthullun", "Venom The Ferocious", "Anita Strips", "Kosair", "Ryvalia Fazebringer", "Sister Elon\u00edth", "Xanvias Einzbern", "Newtype Khan", "Grasszanine", "Mmathuss", "Arcanophage Farra", "Sygaldry Verdandi", "Koralia Danai", "Bella Sassy", "Aronorf Xideliesi"];
const professions = ["Spellbreaker", "Firebrand", "Berserker", "Spellbreaker", "Berserker", "Berserker", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Firebrand", "Berserker", "Spellbreaker", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[26.4063, 4.5738, 8.9523, 4.5808, 4.4298, 47.2164, 86.9773, 4.583, 0.0, 9.2664, 3.6894, 6.842, 14.9018, 9.4786, 3.1324, 3.7758, 10.4713, 11.4688], [53.3484, 9.5088, 6.2928, 121.2219, 0.0, 6.2647, 15.652, 15.7516, 13.7124, 13.3505, 6.402], [0.0, 0.0, 17.9046, 0.0, 0.0, 0.0, 53.783, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 26.0709, 23.3688, 5.9926, 65.408, 0.0, 8.4029, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.316, 52.2837, 72.1608], [0.0, 44.0669, 52.514, 113.051, 127.9293], [81.1969, 0.0, 0.0, 0.0, 246.0154, 0.0, 0.0, 0.0, 18.0414, 18.121, 0.0, 6.0278], [95.2407, 25.5486, 6.9426, 3.976, 0.0, 17.0864, 0.0, 39.0936, 0.0, 0.0, 0.0, 22.8032, 19.2925, 10.8927, 0.0, 31.8432, 8.5747, 0.0, 19.4436, 0.0, 19.2969, 14.9286, 64.9638], [50.439, 8.9166, 20.4624, 0.0, 4.6575, 55.3106, 90.7589, 6.2576, 4.7124, 6.3002, 6.36, 2.8314, 4.8048, 3.168, 25.2005, 21.3418, 13.9339, 1.5985, 4.7806, 6.7811, 27.2832, 10.0994, 6.799, 5.659, 18.1772, 8.0266, 0.0, 0.0, 3.1756, 7.6545, 22.4941], [4.368, 14.1288, 37.7534, 93.3632, 55.1908, 55.469, 2.2998, 27.7301, 9.0863, 0.0, 0.0, 9.261, 94.0296, 72.9887], [43.8127, 20.79, 29.232, 6.5968, 6.5308, 63.5275, 102.1037, 3.8493, 12.7972, 6.5084, 8.541, 17.3831, 6.512, 40.1803, 16.7339, 18.433, 8.2698, 5.6028, 11.8275, 24.9984, 10.585, 9.983, 3.2042, 22.6551, 0.0, 0.0, 0.0, 3.1918, 11.3589, 30.8028, 26.6224], [68.0971, 29.4848, 25.9129, 32.4547, 89.6896, 30.9781, 51.9737, 49.7678, 68.098, 15.2737, 1.7754, 0.0, 89.8415, 76.3643], [64.7795, 18.6648, 25.0299, 11.0544, 9.0563, 61.0747, 116.3899, 6.1194, 5.8397, 14.9629, 0.0, 12.9636, 6.6752, 5.28, 34.3288, 19.5229, 15.5938, 18.942, 8.1302, 15.2338, 29.1648, 20.8139, 18.3859, 16.0983, 24.5126, 3.4896, 0.0, 7.3788, 0.0, 11.5101, 31.0055, 38.3414], [13.6416, 50.9686, 126.0672, 71.5053, 60.5921, 41.9383, 44.0498, 4.7989, 0.0, 19.2024, 189.748, 112.1581], [85.4496, 11.1342, 61.9353, 38.8528, 0.0, 111.1118, 373.1198, 41.3158, 35.1305, 12.8956, 0.0, 19.305, 36.8254, 0.0, 74.119, 35.4483, 15.8122, 4.158, 33.0078, 17.1578, 107.4304, 39.4267, 20.9475], [75.3618, 28.9674, 20.8278, 0.0, 28.4625, 41.8202, 198.535, 0.0, 0.0, 20.8201, 0.0, 43.1028, 36.2419, 30.47, 37.4496, 36.9439, 41.5834, 20.3372, 21.924, 47.2154, 52.0576, 18.6128, 16.5425, 38.2432, 81.2997, 27.3563, 19.5426, 19.5858, 22.1886, 84.3024, 83.816], [29.67, 44.3058, 83.4939, 0.0, 63.8595, 89.5272, 329.6312, 0.0, 0.0, 0.0, 0.0, 0.0, 31.5744, 45.188, 72.9487, 77.8489, 14.0213, 11.2361, 7.065, 17.0688, 61.8914, 40.1234, 0.0, 19.4376, 0.0, 0.0, 0.0, 20.4687, 87.2746, 180.7522], [107.8999, 33.8184, 48.9636, 0.0, 26.6099, 77.999, 192.0223, 0.0, 7.8355, 40.0159, 0.0, 38.2824, 0.0, 6.71, 50.2449, 62.7723, 61.8946, 7.0963, 38.4583, 34.1263, 105.8624, 44.3469, 60.0176, 30.1811, 16.9167, 18.6171, 0.0, 6.7059, 16.8777, 114.092, 110.948], [156.4598, 42.6888, 66.5028, 0.0, 0.0, 62.3011, 288.4536, 0.0, 0.0, 58.7195, 0.0, 0.0, 0.0, 0.0, 53.1316, 57.8814, 51.8918, 60.8731, 71.3139, 117.3919, 138.5664, 107.1447, 89.1765, 82.197, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [128.6689, 30.5382, 82.9458, 23.4428, 105.593, 219.544, 0.0, 7.7246, 19.2942, 0.0, 33.462, 19.5624, 14.608, 66.0049, 100.0799, 60.1037, 60.9932, 26.6133, 38.6996, 92.6016, 67.4591, 46.0845, 24.7289, 43.4527, 0.0, 11.1557, 0.0, 7.7537, 12.852, 129.8987, 145.2132], [115.1196, 32.1552, 70.8876, 7.616, 41.1309, 118.7155, 246.8558, 4.935, 5.2853, 7.826, 7.8864, 59.5062, 11.8576, 15.598, 76.8497, 90.6621, 40.8408, 44.4998, 23.2943, 59.8945, 114.5984, 86.6545, 46.3239, 7.261, 19.6035, 17.6793, 7.749, 112.2005, 162.7916], [125.8008, 57.75, 76.0032, 51.4291, 139.319, 283.6215, 8.5474, 19.8845, 7.9736, 12.0204, 54.6156, 27.8164, 17.776, 54.9261, 138.5598, 117.8923, 35.7126, 39.5546, 53.9965, 129.92, 41.466, 88.2907, 64.2899, 57.5168, 26.2601, 0.0, 0.0, 15.2334, 10.6407, 112.4032, 168.9059], [98.9989, 69.762, 152.0064, 10.36, 27.4896, 129.1399, 309.4626, 14.1338, 0.0, 2.6076, 61.2378, 40.8065, 4.532, 75.5234, 98.4227, 125.7547, 52.7327, 16.5953, 85.5996, 150.7072, 75.3574, 52.668, 44.2381, 120.6393, 8.0144, 0.0, 0.0, 0.0, 17.5392, 167.9968, 209.0306]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

