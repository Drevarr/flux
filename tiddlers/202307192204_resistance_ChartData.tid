created: 20230719220425000
creator: Drevarr
tags: ChartData
title: 202307192204_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Easily Impressed", "Jimbo Mann", "Cedryn X", "K\u00e2 \u00d4tik R\u00e6j", "Ryvalia Fazebringer", "Klengah", "Arriasa", "Raelyn Sunray", "Sister Elonith", "Gavann", "Frosmor", "Ateriuz", "Sygaldry Verdandi", "Johosh The Mighty", "Xanvias Einzbern", "Sub Train", "Koralia Danai", "Bella Sassy", "Grasszanine", "Newtype Khan"];
const professions = ["Firebrand", "Firebrand", "Berserker", "Berserker", "Chronomancer", "Druid", "Druid", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[63.0154, 71.3349, 18.326, 31.104, 130.2083], [13.8013, 0.0, 16.0211, 36.8353, 15.1776, 32.5818, 19.4873, 16.8728, 15.1202, 0.0, 14.212, 0.0, 113.4738, 0.0, 0.0, 15.6391, 16.999, 16.9651, 0.0, 0.0, 0.0, 0.0, 34.1107, 60.2347, 0.0, 0.0, 0.0, 16.9939, 0.0, 15.9907, 31.1091, 0.0, 81.3288, 0.0, 14.1466], [0.0, 0.0, 4.2851, 0.0, 0.0, 47.0304, 0.0, 0.0, 20.0146, 8.5176, 0.0, 8.9664, 157.4879, 18.4644, 0.0, 0.0, 51.0157, 52.7436, 0.0, 0.0, 23.5526, 60.9104, 0.0, 0.0, 35.8315, 22.5027, 0.0, 38.4474, 0.0, 90.6912, 0.0, 0.0], [209.2961, 14.4279, 32.1788, 0.0, 32.5466, 23.6026, 0.0, 0.0, 0.0, 59.9645, 110.7199, 0.0, 83.9275, 31.1111, 54.441, 19.306, 115.7328, 0.0, 59.2589], [17.2458, 9.3834, 12.2245, 21.0926, 32.5548, 22.9704, 34.4862, 71.7024, 7.4725, 57.3344, 34.0704, 4.312, 10.0416, 146.2551, 9.0294, 0.0, 15.2706, 11.1982, 17.2058, 15.6492, 6.6976, 5.7134, 5.7408, 30.7718, 46.5275, 5.7229, 15.2517, 52.4246, 9.6301, 28.5004, 39.2627, 18.865, 63.6192, 30.3667], [27.2355, 0.0, 0.0, 54.249, 25.2899, 27.1728, 23.1012, 40.8079, 26.9892, 79.7088, 61.0428, 27.346, 0.0, 110.7229, 0.0, 34.2999, 0.0, 0.0, 27.072, 27.2412, 0.0, 0.0, 0.0, 31.8547, 13.8038, 0.0, 96.2722, 30.1093, 52.9759, 46.7891, 0.0, 54.4824, 0.0, 27.095], [0.0, 24.8048, 57.3226, 77.7153, 18.5232, 62.5968, 112.8498, 28.2193, 74.29, 20.3713, 0.0, 0.0, 240.702, 0.0, 0.0, 24.8096, 0.0, 3.9104, 45.402, 22.6173, 0.0, 18.5894, 24.7117, 18.517, 30.2312, 36.3869, 38.2592, 18.571, 84.036, 39.2141], [48.4337, 85.9142, 65.7275, 43.362, 5.76, 197.3756, 51.6051, 38.5245, 39.0852, 74.4179, 59.1514, 24.7296, 3.7461, 7.7952, 81.7123, 116.8013, 0.0, 5.8186, 210.42, 37.277, 68.6946, 107.9411, 19.404, 137.052, 84.2342], [0.0, 77.9976, 175.9968, 0.0, 65.2004, 165.0285, 0.0, 13.92, 359.9068, 22.4595, 53.7133, 22.5515, 65.4541, 21.9282, 0.0, 0.0, 53.6928, 126.7439, 0.0, 0.0, 156.0715, 21.2106, 20.505, 73.8214, 49.343, 104.1144, 0.0, 102.3898], [22.512, 14.3299, 34.6685, 74.8037, 37.4243, 66.6954, 203.2926, 47.9012, 158.7184, 67.502, 8.052, 7.1232, 242.9944, 3.3315, 5.1129, 25.5466, 16.3786, 39.7658, 15.6492, 16.847, 6.7584, 54.0538, 73.8454, 0.0, 0.0, 131.9434, 7.0946, 51.2354, 128.4506, 31.115, 162.8832, 71.424], [59.8128, 164.1687, 220.6974, 234.3552, 98.6148, 117.5224, 175.0622, 260.2837, 141.482, 56.1408, 480.487], [68.0034, 7.3042, 65.1168, 98.532, 176.2684, 31.3956, 188.9588, 139.6886, 46.288, 14.496, 235.4295, 0.0, 0.0, 33.1914, 77.3056, 34.132, 51.5715, 0.0, 0.0, 28.1098, 97.7849, 0.0, 0.0, 0.0, 52.7453, 31.7915, 110.031, 102.359, 50.127, 180.3672, 97.8278], [52.5414, 25.3936, 15.5879, 53.4038, 47.8309, 44.5536, 83.7522, 211.5764, 18.7639, 130.663, 102.7081, 7.832, 16.1088, 457.7923, 17.0361, 36.9279, 37.9685, 91.2026, 30.3646, 25.2448, 16.8707, 7.7952, 49.1808, 68.3432, 0.0, 0.0, 102.8453, 26.7449, 50.5283, 67.9885, 40.033, 116.6352, 58.9363], [16.2408, 0.0, 9.7343, 53.4422, 34.0864, 56.7528, 97.1658, 211.5764, 7.2522, 128.7402, 87.1634, 40.062, 11.3088, 294.8026, 0.0, 16.1874, 53.6314, 27.7629, 18.9504, 49.266, 14.5802, 0.0, 55.7952, 84.1939, 120.4694, 4.8407, 0.0, 144.6086, 2.438, 47.3193, 129.2032, 33.761, 228.8712, 0.0, 67.2768], [25.1853, 0.0, 21.9103, 151.4516, 66.2485, 56.5488, 66.2814, 144.3554, 0.0, 105.5792, 148.0643, 0.0, 0.0, 453.666, 48.2467, 66.5712, 41.4722, 0.0, 49.993, 21.9604, 0.0, 0.0, 40.9728, 92.3155, 134.5628, 0.0, 0.0, 0.0, 127.3742, 38.7154, 56.6744, 109.8854, 28.028, 231.804, 0.0, 57.3696], [54.672, 25.6957, 14.2458, 49.6002, 53.6428, 17.8296, 93.15, 207.2308, 49.8474, 130.4882, 64.8757, 38.412, 8.0448, 497.2216, 0.0, 49.9905, 39.8346, 8.0032, 68.5824, 74.9616, 26.6874, 4.0156, 7.9488, 65.2435, 80.6991, 0.0, 0.0, 9.896, 199.4381, 24.6726, 58.7412, 117.7254, 82.516, 114.7176, 70.825], [82.209, 7.873, 12.9037, 93.4759, 53.1323, 81.2736, 63.5076, 213.9529, 43.5132, 114.4066, 119.8142, 18.942, 32.4672, 353.0296, 12.6115, 25.7094, 38.6474, 22.0862, 75.3203, 74.6074, 57.0326, 5.9021, 86.3146, 136.59, 13.797, 142.8451, 18.5532, 33.885, 116.5965, 71.491, 224.0208, 86.6304], [5.4941, 12.3215, 88.827, 44.3751, 91.4328, 86.733, 196.6384, 50.7287, 161.5152, 157.5046, 31.262, 32.1024, 483.4672, 21.112, 40.1373, 57.5207, 39.5815, 63.8298, 46.6256, 32.4576, 11.9388, 7.968, 67.7251, 100.8738, 128.8171, 50.4666, 55.7497, 167.9014, 48.265, 191.4216, 67.6454], [0.0, 63.248, 0.0, 74.2659, 0.0, 26.2752, 57.753, 333.5248, 68.0789, 254.2466, 324.6625, 104.786, 0.0, 558.6579, 0.0, 52.2675, 0.0, 54.9674, 104.0768, 118.2062, 32.8698, 0.0, 100.7981, 153.4827, 0.0, 0.0, 0.0, 204.4882, 0.0, 44.0015, 160.0614, 38.122, 296.4384, 153.4003], [136.077, 69.2141, 0.0, 70.5007, 75.0842, 268.872, 195.9462, 377.7956, 39.0884, 212.9064, 252.9727, 158.422, 24.6144, 601.5258, 10.7462, 69.3864, 104.4789, 32.8812, 214.1696, 132.4064, 113.7046, 0.0, 28.8, 200.5584, 171.7269, 34.2693, 0.0, 23.1861, 415.9502, 64.5582, 131.787, 230.8723, 104.762, 404.0496, 279.337]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

