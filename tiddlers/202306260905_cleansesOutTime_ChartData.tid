created: 20230626090515000
creator: Drevarr
modified: 20230705163539054
modifier: drevarr
tags: ChartData
title: 202306260905_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Louie Runesoldier", "Yngvar The Burdened", "Urilstormwalker", "Brace Stonebrow", "Geradenil", "Traidoruns Maximus", "Illusive Heart", "Utopia Skye", "Drevarr Moonwillow"];
const professions = ["Tempest", "Scourge", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Chronomancer", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.0, 4.9722, 0.9927, 0.0, 31.229, 12.1309, 0.0, 0.0, 0.0, 27.0192, 11.6077], [0.0, 4.0, 1.9902, 3.1463, 2.9905, 1.0, 12.9583, 13.9635, 2.0, 3.0794, 33.5403, 9.987, 0.0, 4.4167, 17.0128, 8.0615, 3.9412, 5.0], [31.5906, 0.0, 2.9535, 43.7974, 5.0154, 3.0882, 6.0], [11.9452, 14.9635, 4.0, 31.3178, 29.5, 2.987, 1.9767, 0.0, 26.2452, 0.0, 3.1471, 6.0], [9.3896, 0.0, 2.0833, 56.6674, 10.0462, 6.1765, 49.4286], [0.0, 10.8485, 21.0756, 64.9104, 0.0, 0.0, 3.9902, 14.9024, 15.0476, 23.9623, 41.1528, 28.2555, 9.0488, 44.514, 69.4966, 1.987, 0.0, 0.0, 22.0043, 7.0231, 4.9118, 8.0], [3.0, 3.0465, 26.697, 28.7647, 38.7993, 0.0, 12.0385, 23.1667, 4.2195, 10.9905, 11.0755, 33.75, 13.0137, 22.8832, 9.3598, 24.3318, 61.1409, 5.987, 0.0, 17.875, 58.7825, 2.0462, 7.8824, 16.1429], [14.0061, 74.2009, 106.5973, 18.039, 0.0, 3.2917, 139.5416], [7.0492, 22.3462, 30.8922, 30.3659, 47.8, 43.283, 72.9861, 57.9452, 46.9197, 9.0244, 90.4112, 129.7349, 36.5065, 0.0, 36.5, 134.4989]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

