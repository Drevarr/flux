created: 20230415000841000
creator: Drevarr
modified: 20230705163525582
modifier: drevarr
tags: ChartData
title: 202304150008_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Sheep Paws", "Smol Daddy Tika", "Nazhul Naxxremis", "Smol Daddy Tika", "Yuuka Chou", "Elonith Primal", "Johosh The Great", "Cat Wigglebooty", "Zadie Miststep", "Panther B Me", "Nazhul Naxxremis", "Air One Com", "Rozaalyna", "Koralia Danai", "Tegan Parker", "Cedryn X", "Be\u00eb", "Lord Erin The Wise", "Solus Sanctus", "Mmathuss", "Fruji", "Xanvias Einzbern", "Drogo Deception", "Xyntharos", "Inedible Plant", "Drevarr Moonwillow", "Rina Of Theros", "Kosa\u00edr", "Stoic Rapidfire", "Smol Gluvs", "Sassy Daddy Demon", "Bella Sassy", "Mistwalker Caelon", "Blancooo Padreee", "Corlyss Velaryonn", "The Fancy Cheese", "Kmpek", "Grasszanine", "High Sorcer Baradun", "Hauzzy", "Arcanophage Farra", "Paul Bjart Mist Cop", "Lucas Ryn", "Primal Clone", "Mac Chiato", "Black Raspberry Pie", "Newtype Khan", "Aronorf Xideliesi", "Ryvalia Fazebringer", "Venomina The Siren"];
const professions = ["Berserker", "Berserker", "Reaper", "Spellbreaker", "Tempest", "Tempest", "Firebrand", "Scrapper", "Tempest", "Scourge", "Scourge", "Firebrand", "Reaper", "Firebrand", "Tempest", "Berserker", "Reaper", "Weaver", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Chronomancer", "Vindicator", "Vindicator", "Scrapper", "Scourge", "Scrapper", "Druid", "Reaper", "Vindicator", "Firebrand", "Vindicator", "Spellbreaker", "Vindicator", "Scrapper", "Vindicator", "Spellbreaker", "Tempest", "Spellbreaker", "Spellbreaker", "Scrapper", "Firebrand", "Chronomancer", "Tempest", "Chronomancer", "Spellbreaker", "Firebrand", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 1, 1, 1, 1, 4, 0, 1, 0, 0, 0, 0, 3, 1, 0], [2, 1, 0, 2, 2, 2, 1, 3, 4], [4, 0, 8, 0, 0, 3, 1, 1, 1], [2, 0, 6, 0, 1, 3, 2, 0, 3, 1, 0, 3], [4, 0, 11, 0, 3, 2, 0, 6], [0, 10, 0, 3, 4, 1, 1, 3, 3, 1, 0], [1, 0, 6, 0, 3, 1, 1, 1, 1, 4, 0, 2, 0, 0, 1, 2, 0, 1, 0, 0, 3], [2, 7, 2, 0, 0, 9, 0, 2, 1, 1, 0, 2, 2, 0, 2], [0, 8, 0, 8, 0, 2, 2, 2, 1, 2, 4, 1, 0, 1], [5, 4, 4, 1, 4, 1, 2, 2, 1, 1, 0, 4, 0, 0, 1, 0, 1, 0, 0, 2], [2, 2, 11, 1, 7, 1, 2, 7, 0, 1], [2, 0, 4, 1, 3, 2, 0, 7, 1, 1, 0, 4, 0, 1, 1, 1, 2, 0, 2, 0, 3], [3, 0, 5, 0, 7, 1, 1, 2, 3, 4, 0, 8, 0, 2], [1, 2, 5, 1, 6, 2, 0, 5, 2, 4, 0, 4, 0, 1, 1, 1, 0, 0, 1, 0, 0], [5, 0, 8, 0, 2, 1, 0, 3, 0, 3, 0, 4, 0, 2, 0, 4, 1, 1, 1, 1, 2], [6, 0, 1, 1, 2, 1, 0, 2, 3, 2, 0, 5, 0, 2, 2, 0, 3, 1, 4, 1, 1, 1], [0, 8, 2, 0, 3, 2, 3, 0, 4, 0, 3, 0, 3, 1, 2, 4, 3], [2, 1, 1, 1, 6, 1, 2, 6, 2, 0, 0, 7, 0, 1, 1, 0, 2, 4, 2], [7, 0, 4, 1, 5, 2, 0, 2, 1, 6, 0, 2, 0, 2, 4, 2, 0, 1, 0, 1, 0], [4, 0, 1, 0, 6, 1, 1, 9, 3, 3, 0, 5, 0, 1, 2, 1, 1, 2, 0, 0, 1], [4, 1, 5, 2, 5, 2, 0, 2, 0, 2, 0, 7, 0, 0, 3, 3, 0, 3, 1, 0, 2], [3, 0, 3, 0, 7, 2, 1, 5, 1, 5, 0, 8, 0, 1, 1, 2, 1, 1, 0, 1, 1, 1], [3, 1, 0, 3, 2, 3, 5, 2, 1, 0, 7, 0, 0, 2, 3, 2, 0, 3, 7], [2, 1, 5, 2, 6, 3, 0, 3, 2, 5, 0, 4, 0, 3, 0, 3, 2, 1, 1, 1, 1, 0], [6, 0, 11, 1, 3, 2, 1, 2, 4, 3, 0, 3, 0, 3, 0, 1, 0, 1, 3, 1, 0, 0], [2, 1, 5, 1, 8, 1, 2, 5, 3, 4, 0, 6, 0, 1, 1, 1, 1, 0, 2, 1, 1, 0], [3, 1, 7, 0, 5, 1, 2, 6, 3, 2, 0, 4, 0, 1, 1, 2, 3, 1, 1, 0, 0, 3], [4, 1, 4, 4, 5, 1, 4, 3, 2, 5, 0, 5, 0, 0, 0, 0, 1, 2, 1, 1, 0, 3], [2, 2, 2, 0, 5, 2, 2, 9, 1, 4, 0, 5, 3, 1, 1, 1, 0, 0, 3, 1, 3], [1, 4, 1, 7, 1, 3, 7, 1, 4, 0, 1, 0, 4, 2, 0, 3, 1, 5, 0, 3, 0], [3, 1, 7, 1, 5, 1, 2, 3, 7, 2, 0, 6, 0, 0, 0, 1, 1, 2, 5, 0, 0, 2], [5, 0, 3, 0, 7, 5, 0, 5, 3, 3, 0, 4, 0, 2, 3, 2, 2, 4, 1, 1, 0], [3, 2, 3, 2, 4, 3, 1, 2, 1, 8, 1, 11, 0, 0, 0, 0, 2, 0, 4, 1, 1, 1], [3, 2, 4, 7, 6, 2, 2, 4, 2, 4, 0, 4, 1, 0, 3, 2, 2, 2, 0, 0], [1, 6, 1, 0, 8, 1, 5, 9, 3, 3, 0, 2, 1, 0, 3, 1, 5, 1, 0], [3, 0, 11, 0, 6, 1, 4, 1, 3, 6, 0, 7, 0, 1, 0, 1, 1, 2, 1, 1, 1, 3], [7, 0, 3, 2, 10, 2, 1, 3, 1, 0, 0, 9, 0, 2, 3, 3, 1, 0, 1, 3, 1, 2], [8, 2, 2, 3, 6, 1, 4, 3, 1, 1, 0, 4, 3, 2, 2, 1, 3, 4, 1, 2, 3], [1, 4, 1, 1, 4, 1, 4, 2, 2, 3, 0, 11, 1, 0, 4, 5, 2, 2, 3, 0, 5], [5, 2, 11, 2, 7, 1, 3, 6, 0, 2, 0, 4, 1, 1, 5, 3, 2, 1], [5, 1, 11, 1, 6, 3, 3, 3, 0, 3, 0, 3, 2, 2, 3, 2, 1, 5, 1, 1, 1], [4, 0, 10, 1, 5, 2, 6, 7, 3, 0, 6, 0, 3, 2, 4, 1, 0, 2, 1, 0, 1], [3, 1, 10, 1, 7, 1, 3, 3, 2, 1, 0, 5, 0, 3, 0, 2, 1, 1, 2, 3, 7, 2], [3, 3, 8, 0, 10, 1, 1, 6, 3, 5, 0, 5, 0, 1, 0, 2, 2, 0, 3, 2, 1, 5], [6, 1, 6, 0, 10, 1, 3, 6, 3, 6, 0, 4, 0, 0, 3, 1, 2, 4, 1, 1, 3], [3, 2, 8, 3, 8, 1, 3, 7, 0, 4, 0, 10, 0, 2, 1, 2, 1, 1, 2, 3, 0, 1], [2, 3, 7, 1, 8, 2, 5, 4, 2, 6, 0, 7, 5, 1, 1, 2, 1, 0, 3, 1, 2], [7, 0, 7, 0, 6, 2, 2, 12, 0, 1, 0, 7, 1, 5, 2, 2, 1, 4, 5, 1, 1], [7, 2, 6, 2, 8, 2, 1, 11, 4, 1, 0, 4, 0, 0, 1, 2, 3, 3, 4, 3, 1, 3], [5, 0, 13, 2, 5, 1, 1, 3, 7, 4, 0, 9, 0, 5, 2, 2, 4, 2, 2, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

