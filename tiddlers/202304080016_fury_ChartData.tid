created: 20230408001602000
creator: Drevarr
modified: 20230705163524722
modifier: drevarr
tags: ChartData
title: 202304080016_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Smol Daddy Tika", "Smol Dome Dim", "Lord Erin The Wise", "Zadie Miststep", "Xanvias Einzbern", "Lucky Leipreach\u00e1n", "Cat Wigglebooty", "S E M C H O R \u00c1", "Aronorf Xideliesi", "Sofya De Nova", "Arriasa", "Kos\u00e4ir", "Arcanophage Farra", "Drevarr Moonwillow"];
const professions = ["Berserker", "Berserker", "Weaver", "Tempest", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Weaver", "Druid", "Herald", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.4528, 106.3163, 2.9807, 90.7735, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 11.7216, 15.3424, 0.0, 0.0, 0.0, 68.2966, 0.0, 99.8163, 0.0, 53.5766, 43.1995, 108.6888, 23.3587, 0.0, 112.3051], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 59.9126, 29.4, 0.0, 6.4386, 65.4336, 34.1113, 0.0, 0.0, 0.0, 136.7362, 44.9649, 84.835, 55.6608, 6.4022, 77.0224, 65.7984, 85.0819, 0.0, 0.0], [0.0, 50.1245, 37.8809, 32.683, 63.4187, 60.3686, 93.8563, 71.8462, 31.2728, 31.1557, 35.64, 51.4368, 39.0197, 20.5843, 42.7066, 65.8677, 69.7527], [23.6067, 30.9386, 23.204, 10.7428, 23.3211, 0.0, 34.5571, 19.4408, 32.2753, 31.4776, 0.0, 13.7952, 27.4126, 47.3294, 0.0, 0.0, 53.5086, 49.3641, 66.4463, 78.4992, 23.5872, 13.7301, 53.8752, 31.2312, 28.5196, 120.7017], [17.8414, 0.0, 58.2174, 0.0, 0.0, 0.0, 69.1824, 27.489, 0.0, 0.0, 0.0, 22.2912, 55.319, 0.0, 0.0, 0.0, 113.3753, 53.6787, 28.435, 82.6176, 84.3523, 89.4548, 78.9912, 102.4162, 0.0, 0.0], [24.7234, 64.5291, 21.657, 85.601, 71.3915, 0.0, 78.694, 22.896, 0.0, 70.9701, 0.0, 35.0318, 0.0, 116.3673, 190.2912, 218.0256, 128.4941, 48.432, 148.3776, 69.1522, 5.6776, 167.483], [92.6869, 26.4384, 85.5716, 92.6492, 98.8418, 151.3008, 197.664, 39.249, 26.4865, 123.335, 69.5664, 43.9488, 64.3331, 0.0, 0.0, 126.5202, 32.148, 126.3125, 85.488, 12.4675, 10.2976, 88.872, 15.9298, 286.6853], [39.6562, 42.1488, 37.4282, 26.2032, 69.7554, 0.0, 67.9555, 41.0865, 33.5204, 55.6939, 0.0, 59.04, 72.2975, 10.0022, 16.0574, 19.5508, 155.5963, 124.1505, 137.1225, 215.1552, 94.1242, 69.7806, 145.452, 90.8107, 27.1472, 272.441], [20.9318, 85.4428, 32.1837, 0.0, 127.6425, 23.6242, 15.8131, 40.425, 48.1866, 0.0, 0.0, 48.1248, 75.1684, 0.0, 0.0, 123.7341, 108.0342, 78.96, 236.8704, 15.6125, 61.4505, 138.1656, 132.5755, 42.6384, 477.259], [0.0, 43.3944, 49.5018, 35.6955, 68.6387, 90.4771, 105.8525, 65.0107, 28.2652, 74.1154, 31.5216, 45.0144, 0.0, 112.8514, 77.9933, 24.0204, 171.3846, 76.1823, 140.295, 258.336, 157.3603, 118.5475, 121.992, 99.1267, 32.9752, 339.1643], [10.5105, 29.106, 58.5197, 0.0, 27.2448, 118.726, 99.1526, 66.8069, 138.2364, 138.1518, 198.5162, 598.1664, 163.201, 69.9899, 47.5824, 35.0011, 35.1184, 620.3018], [249.779, 288.5213, 105.2352, 82.368, 108.7488, 119.1992, 309.7638, 120.8934, 272.8937, 661.44, 814.8816, 143.2868], [96.8681, 78.9939, 189.7064, 132.7782, 146.263, 198.9662, 270.7315, 184.926, 58.5354, 138.9307, 112.2912, 184.4928, 121.5969, 501.4166, 215.232, 88.6224, 451.2865, 170.469, 374.0613, 570.2112, 456.0192, 107.9151, 201.7008, 173.9338, 208.0032, 760.3457], [124.9417, 150.3335, 129.678, 167.9622, 206.7212, 162.4114, 329.6899, 227.7765, 176.5602, 215.6216, 101.304, 131.328, 224.3323, 414.6581, 126.3072, 102.3568, 564.3046, 316.1925, 430.5787, 703.3728, 327.5251, 251.7042, 390.0984, 235.8048, 114.9056, 997.4009]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

