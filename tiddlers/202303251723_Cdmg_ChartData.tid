created: 20230325172304000
creator: Drevarr
modified: 20230705163522923
modifier: drevarr
tags: ChartData
title: 202303251723_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Koralia Danai", "High Sorcer Baradun", "Johosh The Great", "Whose Guardian", "Bella Sassy", "Zaylen Harker", "Tika Sumiko", "Sumatra Satyricon", "Xyntharos", "Fruji", "Venomina The Siren", "Kalenthian", "Sygaldry Verdandi", "Eibh\u00ebar", "What Charr U Saying", "Sp\u00edcy Cheese", "Cerys Fireblade", "K\u00f4sair", "Abigail Ryn", "Lord Erin The Wise", "Smol Gluvs", "Rozaalyna", "Aronorf Xideliesi", "Zefirokai", "Mike The Archmagus", "Legacy Of Mathus", "Panther B Me", "Xanvias Einzbern", "Sofya De Nova", "Morton Saltbringer", "Be\u00eb"];
const professions = ["Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Soulbeast", "Vindicator", "Scrapper", "Tempest", "Mechanist", "Firebrand", "Chronomancer", "Berserker", "Berserker", "Berserker", "Berserker", "Tempest", "Weaver", "Scourge", "Scourge", "Firebrand", "Tempest", "Weaver", "Berserker", "Scourge", "Berserker", "Weaver", "Chronomancer", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.5455, 0.0, 0.0, 0.0, 19.2582, 8.1875, 0.0, 0.0773, 2.5316, 5.8269, 0.0, 37.4247, 3.2143, 0.0, 0.0, 1.4223, 3.0341], [18.8599, 2.4727, 0.0, 0.0, 4.5833, 0.0215, 19.35, 7.0089, 0.0, 21.6039], [13.1401, 0.0485, 0.0, 0.0, 0.0, 0.0, 14.7054, 2.7232, 0.0, 8.6087, 6.2025, 0.0, 0.0, 40.2466, 3.9714, 12.1609, 1.8564, 2.0146, 8.0614], [10.4968, 11.9576, 11.3889, 4.1626, 1.1611, 1.2258, 20.183, 3.1786, 6.5098, 8.0145, 0.0, 0.0, 0.0, 9.3836, 2.9429, 0.0, 0.8785, 0.7961, 1.4471], [1.2611, 1.2727, 0.0, 0.0, 3.9778, 0.0, 23.9188, 7.2411, 0.0, 0.0193, 1.2911, 0.0, 0.0, 3.8151, 7.6, 0.0, 2.7624, 0.0, 4.744], [8.6433, 2.6485, 5.1111, 0.0, 1.8056, 15.4472, 131.7321, 11.0392, 4.0483, 3.1139, 0.0, 0.0, 1.9726, 23.1714, 0.0, 0.0, 0.0, 1.6007], [0.6115, 5.7394, 9.6667, 0.0, 0.7278, 0.0, 19.0334, 8.4643, 0.0, 11.43, 3.1519, 0.0, 0.0, 60.9658, 12.6571, 0.0, 0.0, 12.7621, 5.4949], [0.0, 0.0, 0.0, 19.957, 16.0486, 17.8839, 0.0, 13.686, 2.1772, 12.9423, 3.9412, 58.8151, 77.8571, 0.0, 0.0, 21.233, 0.9044], [7.9172, 8.1818, 0.0, 13.3984, 0.9333, 28.4935, 2.9107, 0.0, 4.0531, 0.0253, 0.0, 0.0, 5.3425, 1.3143, 5.687, 0.0, 10.5777, 7.0956], [15.8471, 10.0182, 9.0278, 0.1789, 1.4667, 0.0, 28.1906, 3.8571, 2.549, 9.2029, 7.6203, 15.6346, 0.0, 14.5274, 2.0143, 5.2435, 0.105, 1.9223, 2.0239], [0.2229, 7.6667, 1.1111, 0.0, 0.0, 6.9677, 19.2688, 6.7679, 0.0, 2.1159, 0.0, 2.9615, 124.0548, 0.0, 0.0174, 0.0, 2.7282, 10.6553], [9.3389, 0.0, 20.8307, 36.1786, 4.3922, 14.9324, 16.5696, 12.9231, 14.8824, 39.2808, 40.0429, 0.5217, 30.0994, 4.3641, 19.7065], [43.8344, 2.6364, 0.0, 0.5285, 1.3333, 4.2366, 23.7601, 33.9375, 1.0, 33.1353, 48.4684, 68.3077, 0.0, 0.0, 0.0, 4.1304, 6.4586, 0.0, 15.8805], [14.8981, 10.1939, 3.5278, 9.6098, 1.2778, 2.7957, 23.4617, 25.8214, 1.1569, 6.0628, 33.3924, 18.9808, 3.6176, 72.6644, 54.5429, 4.0913, 4.3591, 1.199, 14.9044], [1.7516, 18.6, 0.0, 0.9778, 2.5054, 48.5809, 9.7589, 15.8039, 4.6087, 0.0, 3.3077, 0.0, 5.2466, 5.8286], [19.414, 38.3939, 0.0, 39.2361, 0.0179, 3.1176, 47.6812, 1.9747, 0.0, 1.7353, 48.1986, 32.5571, 1.7522, 1.3646, 6.0243, 1.3584], [22.3631, 10.4909, 0.0, 0.0, 0.0, 0.0, 45.4647, 10.4643, 0.0, 20.1739, 4.3038, 19.3654, 0.0, 3.2466, 64.1571, 3.7565, 1.7624, 5.7913, 17.5119], [31.4204, 6.1394, 0.0, 0.0, 6.8, 0.0215, 70.2437, 14.2946], [29.3248, 1.5939, 21.1111, 13.2927, 8.8667, 0.5269, 54.1807, 67.9911, 10.5686, 24.3285, 4.8861, 0.0, 0.0, 82.6781, 0.5143, 7.2043, 0.0, 11.2136, 8.7304], [79.5732, 80.0303, 2.6944, 0.0, 4.0667, 3.2903, 38.7418, 85.4375, 17.2745, 22.5121, 50.0759, 0.0, 91.1471, 67.411, 33.9571, 10.5043, 5.9779, 25.7233, 29.4334], [149.4841, 17.6121, 9.1944, 1.8618, 0.95, 4.1398, 24.9947, 124.0268, 10.8235, 13.0, 38.962, 4.75, 3.3824, 164.2123, 269.2286, 2.7043, 9.011, 3.5728, 32.5734], [24.4459, 3.3758, 0.0, 1.7833, 0.0, 80.1936, 16.6518, 13.9804, 10.3382, 1.4051, 0.0, 46.137, 119.6, 0.0, 4.0276, 0.0243, 27.1024], [11.1656, 12.7212, 4.4715, 0.0, 6.129, 70.4336, 95.7768, 2.1765, 21.1208, 41.3544, 57.8269, 35.4706, 63.0685, 0.0, 0.0, 43.8177, 7.3398, 17.6792], [29.6815, 5.1758, 2.4444, 5.626, 7.2556, 76.937, 43.2321, 6.1569, 18.1787, 27.6329, 0.0, 120.9412, 12.3014, 92.3286, 23.713, 4.7624, 4.0534, 21.3515], [59.5287, 19.4182, 0.0, 10.2195, 11.8667, 0.0, 70.3364, 111.3125, 0.0, 20.9179, 87.0127, 29.6538, 20.5, 26.7466, 95.6857, 11.4217, 13.3978, 11.9806, 30.884], [41.5096, 28.7273, 13.3333, 11.3008, 27.3333, 0.0, 85.6735, 16.5357, 0.0, 31.1594, 0.0, 41.4423, 0.0, 49.363, 91.7143, 16.5696, 22.1436, 1.8107, 45.2253], [83.4586, 12.5939, 1.3056, 0.0, 1.4333, 0.0, 92.511, 77.1339, 15.549, 29.8889, 26.8608, 0.0, 7.7647, 1.2123, 83.7, 12.7609, 13.1713, 29.7767, 38.3584], [26.2675, 27.897, 0.0, 15.439, 11.8, 0.0, 70.6173, 64.1071, 0.0, 42.2222, 63.9747, 0.0, 0.0, 43.4247, 3.4429, 10.0478, 29.0387, 12.1019, 147.1809], [33.8344, 21.3152, 0.0, 0.0, 0.0, 32.9892, 125.3614, 70.1786, 9.4314, 28.0145, 46.9747, 48.25, 51.5548, 8.9286, 2.9609, 4.5801, 12.8447, 36.4369], [55.4331, 44.7394, 3.2222, 35.122, 4.35, 92.8172, 114.8216, 36.6161, 0.4118, 71.8261, 0.4684, 3.3077, 9.6781, 31.7286, 16.3739, 26.7403, 27.1505, 62.1604], [56.9236, 7.0424, 2.6667, 34.3984, 3.1611, 36.8495, 145.514, 129.1607, 0.8431, 81.058, 186.8228, 7.4038, 0.0, 280.1781, 28.6429, 17.1913, 3.4088, 4.3689, 36.9966]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

