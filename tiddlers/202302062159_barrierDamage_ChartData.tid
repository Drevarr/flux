created: 20230206215940000
creator: Drevarr
modified: 20230705163518735
modifier: drevarr
tags: ChartData
title: 202302062159_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Ravioli Fetabringer", "Isla Miststorm", "\u00c2 R K", "Etchery Howls", "Zaylen Harker", "Gavann", "Arkintor", "Squishy Thingy", "Sp\u00edcy Cheese", "Xanvias Tsollice", "Belvyn Brightblade", "Lord Erin The Wise", "Ace Rages", "Dark Sidiuz", "Veron Blackburn", "Hyde En Sikh", "Oo Dads Mad", "Demon Sekhmet", "Mac Aaroni", "High Sorcer Baradun", "Zadie Miststep", "Allexa Adalhart", "Sigmund Mistwalker", "Reyga Bannerclaw", "Grasszanine", "Johosh The Great", "Drevarr Moonwillow", "Raziel Umbra", "Cat Wigglebooty", "Bella Sassy", "Daring Deathblade", "Legacy Of Mathus", "Arriasa", "\u00c9\u00efbhear", "Rina Of Theros", "Arcanophage Farra", "Smol Gluvs", "Fungus", "Newtype Khan", "Tootsie Pop Bringer", "Skye Nightroad", "Be\u00eb"];
const professions = ["Firebrand", "Willbender", "Firebrand", "Druid", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Berserker", "Vindicator", "Firebrand", "Weaver", "Berserker", "Scourge", "Herald", "Chronomancer", "Spellbreaker", "Berserker", "Tempest", "Tempest", "Tempest", "Spellbreaker", "Vindicator", "Spellbreaker", "Spellbreaker", "Firebrand", "Scrapper", "Chronomancer", "Scrapper", "Firebrand", "Scourge", "Berserker", "Druid", "Scrapper", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Scrapper", "Scrapper", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 36.4378, 0.0, 0.0, 0.0, 0.0, 24.0909, 0.0, 25.7425], [13.2255, 0.0, 18.4684, 44.8486, 0.0, 15.125, 0.0], [2.3309, 0.9167, 3.1962, 24.0595, 0.0, 37.5812, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.7303, 19.2372, 0.0, 0.0], [4.5382, 0.0, 17.1266, 33.3946, 0.0, 10.8812, 0.0, 44.5082, 0.0, 0.0, 15.0, 0.0, 0.0, 7.0674, 0.0], [7.5418, 0.9487, 0.0, 45.0486, 32.1375, 50.4382, 0.0], [6.9927, 26.3077, 15.6013, 17.3297, 0.0, 35.2437, 0.0, 48.377], [4.9055, 7.1154, 15.8608, 40.9243, 0.0, 14.4313, 24.5955, 62.7049], [0.0, 0.0, 143.4607, 58.6346, 0.0], [0.0, 0.0, 45.6772, 0.0, 0.0, 29.9438, 35.9213, 0.0, 0.0, 30.4516, 13.6407, 0.0, 0.0, 0.0, 17.5321], [13.9345, 4.7179, 14.0, 31.1135, 0.0, 34.875, 0.0, 0.0, 0.0, 2.3656, 3.6946, 0.0, 3.7789, 43.3933, 0.0], [0.0, 0.0, 3.1076, 40.5405, 0.0, 30.5437, 44.1573, 106.9672], [8.3127, 0.1538, 19.2595, 23.0432, 0.0, 19.5938, 0.0, 0.0, 0.0, 50.3548, 14.491, 0.0, 0.0, 40.8989, 0.0, 0.0], [3.3564, 18.4684, 0.0, 0.0, 2.6688, 66.4045, 0.0, 30.0, 0.0, 27.479, 0.0, 0.0, 14.0225, 22.0321, 0.0, 0.0], [28.4036, 111.8861], [11.5164, 17.6346, 7.8987, 50.8865, 0.0, 56.1375, 12.5169, 0.0], [2.7782, 0.0, 58.8481, 8.8919, 0.0, 16.3438, 46.7978, 0.0, 6.75, 44.2473, 6.5928, 0.0, 0.0, 18.3371, 0.0, 0.0, 31.7241], [11.9127, 0.0, 42.3228, 45.1676, 0.0, 66.2313], [12.3018, 0.0, 0.0, 30.6486, 0.0, 20.8625, 0.0, 0.0, 48.3693, 2.172, 22.6826, 0.0, 0.0, 47.6517, 0.0], [1.9491, 0.0, 7.8987, 35.0757, 0.0, 7.425, 36.236, 6.3279, 24.9205, 3.1505, 25.5449, 0.0, 45.1368, 14.618, 10.4038, 0.0, 0.0], [14.0291, 0.0, 0.0, 38.8216, 0.0, 64.1437, 41.1685, 0.0, 0.0, 0.0, 33.7186, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [11.5745, 0.0, 0.0, 17.4324, 0.0, 32.6625, 0.0, 0.0, 25.9489, 86.5484, 11.3473, 0.0, 0.0, 26.7191, 19.5321, 0.0, 0.0], [0.0, 31.3544, 0.0, 0.0, 172.0125], [9.8618, 22.8718, 1.9873, 84.6378, 0.0, 46.5125, 15.7191, 0.0, 19.5284, 0.0, 11.5389, 0.0, 0.0, 4.2921, 0.0, 0.0, 0.0], [77.5284, 66.0108, 85.3473, 0.0, 0.0, 25.8989, 14.7308, 0.0, 0.0], [43.2564, 32.7152, 44.6757, 0.0, 71.575, 75.573, 24.9672], [0.0, 0.0, 28.6646, 73.7838, 0.0, 28.35, 0.0, 77.3934, 35.358, 12.7742, 24.6407, 0.0, 0.0, 20.7191, 0.0, 0.0, 0.0], [8.7745, 0.5321, 14.9494, 53.5784, 0.0196, 25.2063, 45.3034, 36.7213, 14.9659, 5.043, 31.6168, 7.0385, 0.0316, 62.3371, 13.7436, 3.5773, 0.0], [4.9345, 3.0128, 26.1013, 66.1027, 50.875, 13.3483, 0.0, 20.5, 25.5699, 36.5569, 0.0, 0.0, 14.0225, 8.0, 0.0, 0.0], [151.2703, 0.0, 2.275, 0.0, 47.1475, 2.4205, 2.5806, 14.9521, 0.0, 32.3474, 5.9438, 41.4231, 3.2268, 15.6897], [9.1964, 0.0, 25.5759, 58.2324, 0.0, 27.6687, 57.5281, 62.7049, 6.75, 31.4086, 60.0479, 0.0, 0.0, 12.0112, 0.0, 0.0, 0.0], [37.0656, 51.6761, 37.871, 115.5629, 0.0, 30.8316, 80.1011, 19.8654], [9.0764, 10.8718, 16.1519, 6.7459, 0.0, 43.4188, 107.4607, 51.9016, 34.3693, 0.0, 55.1856, 0.0, 0.0, 30.0449, 22.0641, 0.0, 0.0], [24.7709, 0.0, 47.8101, 40.0703, 0.0, 124.3563, 72.6517, 26.377], [39.4509, 3.109, 11.5063, 62.2541, 1.6667, 99.6, 5.5281, 32.2623, 0.0739, 16.9892, 30.515, 0.0, 0.0947, 39.2247, 31.0449, 0.9588], [0.0, 14.4359, 78.519, 36.5784, 0.0, 43.5938, 79.3258, 65.6066, 41.4091, 53.0968, 40.485, 0.0, 0.0, 98.5056, 0.0, 0.0, 30.9655], [7.7491, 22.5962, 45.2342, 38.173, 0.0, 81.8688, 69.4045, 30.7377, 51.5682, 3.4516, 76.7186, 0.0, 0.0, 0.0, 35.5577, 0.0, 0.0], [1.7309, 0.0, 17.8797, 98.2703, 0.0, 125.7938, 123.1348, 39.6721, 19.358, 0.0, 69.4371, 0.0, 0.0, 41.7191, 55.5641, 0.0, 0.0], [0.0, 0.0, 24.3291, 170.4162, 0.0, 64.1688, 164.6517, 44.9344, 75.4716, 0.0, 43.6527, 0.0, 0.0, 19.7528, 0.0, 0.0, 0.0], [25.3891, 13.5962, 45.1835, 101.3243, 0.0, 31.1187, 56.4045, 92.377, 41.6307, 32.5161, 128.0958, 0.0, 0.0, 17.1798, 19.6026, 21.3918, 0.0], [175.7164, 27.7885, 111.2785, 264.9297], [309.3018, 36.3718, 77.9114, 43.7568, 0.0, 124.65, 69.2472, 12.3115], [29.4764, 0.0, 75.9367, 188.5784, 0.0, 150.325, 157.3146, 36.9836, 36.5909, 194.3333, 57.485, 27.6538, 0.0, 76.9101, 20.1859, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

