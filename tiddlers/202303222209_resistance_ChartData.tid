created: 20230322220917000
creator: Drevarr
modified: 20230705163522873
modifier: drevarr
tags: ChartData
title: 202303222209_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Morton Saltbringer", "Etch\u00e9ry", "Eibh\u00ebar", "Primal Clone", "Macette", "Black Raspberry Pie", "Amiti\u00e9l", "Ryvalia Fazebringer", "Smol Daddy Tika", "Ark Darkness", "Gabe Malhorn", "Kiloak", "Grasszanine", "Blanco Padre Guard", "Koralia Danai", "Zaylen Harker", "Xanvias Einzbern", "Newtype Khan", "Viral Marketing", "Johosh The Great", "Bella Sassy", "Solus Sanctus"];
const professions = ["Chronomancer", "Berserker", "Chronomancer", "Chronomancer", "Chronomancer", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[123.83, 15.1027, 9.3024, 9.18, 15.1206, 12.5194, 9.4696, 24.2442, 21.479, 5.5009, 9.6975, 9.8222, 0.0, 5.4492], [109.9699, 22.0648, 7.544, 0.0, 74.0256, 64.5581, 40.6656, 32.1754, 105.4586, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [77.0285, 13.8685, 15.755, 0.0, 27.4032, 20.0448, 13.248, 11.5718, 13.2893, 0.0, 20.6554, 13.524, 159.964, 2.3074, 17.8214, 10.152, 6.6392, 15.2435, 17.7392, 20.8108, 20.9088, 7.4298, 19.1078, 14.6923, 0.0, 3.4094], [78.5146, 17.9395, 7.314, 0.0, 24.6576, 24.192, 14.8896, 19.1923, 19.277, 19.6416, 9.8784, 147.784, 13.075, 18.8006, 13.5, 6.5001, 8.5781, 13.7503, 31.6016, 16.9171, 6.8404, 9.0127, 14.0083, 5.4932, 3.3802], [76.7808, 17.641, 5.681, 0.0, 22.8096, 18.985, 17.136, 15.1939, 15.0612, 16.1779, 13.524, 179.046, 1.8878, 21.2486, 10.62, 12.2703, 19.5905, 17.6419, 9.1091, 23.6333, 5.233, 17.4511, 9.0288, 3.8902], [79.0099, 23.0419, 13.869, 0.0, 7.0224, 19.2154, 13.968, 10.3488, 10.4176, 6.9514, 21.3312, 14.1708, 190.414, 14.0539, 21.5424, 14.112, 14.2168, 18.0545, 14.8854, 25.0851, 12.2918, 6.9297, 12.3041, 15.7867, 1.7909, 11.5686], [205.842, 9.3693, 44.5046, 29.124, 12.027, 32.1968, 31.3598, 70.7006, 31.5533, 27.6116, 50.321, 34.8566, 9.7379, 9.4414], [103.7779, 14.9813, 13.064, 0.0, 22.3344, 13.6397, 18.6336, 9.1728, 20.4991, 0.0, 20.6131, 15.1116, 161.994, 12.6555, 26.879, 16.2, 9.2462, 16.4027, 20.8525, 26.8368, 33.264, 7.5726, 8.1512, 17.1547, 6.8188], [120.3725, 20.2464, 8.717, 4.255, 2.112, 0.0, 15.8112, 0.0, 53.7985, 0.0, 38.4806, 2.1462, 209.09, 46.5667, 0.0, 8.856, 47.0998, 42.1659, 41.4131, 41.061, 30.7296, 0.1429, 12.768, 0.0, 8.4034, 9.5142], [30.4646, 92.6112, 14.4691, 60.9408, 28.8355, 64.43, 55.7146, 32.634, 68.614, 44.0496, 73.5869, 37.224, 7.96, 70.9141, 50.7205, 51.2912, 0.0], [514.808, 62.4386, 45.0922, 44.64, 10.9146, 98.0683, 81.4642, 58.1581, 61.9027, 10.7517, 14.0271, 54.7474, 0.0, 15.9833], [115.6666, 34.6578, 28.566, 0.0, 49.2096, 34.2835, 34.3296, 35.6093, 45.3973, 7.6752, 38.6074, 32.8692, 244.412, 2.0277, 61.3958, 32.004, 30.6583, 42.05, 38.8511, 55.4254, 39.2832, 7.0547, 14.248, 32.3122, 7.6199, 18.6933], [150.3418, 54.7142, 0.0, 0.0, 144.7776, 54.5587, 35.1072, 30.9523, 73.4116, 49.3363, 58.506, 295.974, 64.0467, 69.3763, 23.292, 68.512, 25.7922, 20.3985, 29.7797, 81.8611, 0.0, 9.8742, 0.0, 0.0, 0.0], [147.865, 31.2924, 78.108, 0.0, 38.9136, 35.5277, 40.4352, 51.6499, 76.1611, 5.8781, 69.1469, 58.1826, 437.668, 24.8216, 95.2272, 39.888, 49.0811, 40.9198, 53.2501, 40.5005, 72.7373, 7.019, 3.1589, 31.9291, 18.6923, 24.8127], [135.7286, 33.6807, 28.98, 0.0, 96.624, 54.743, 27.5616, 62.7043, 61.8638, 47.689, 62.9454, 382.452, 69.2208, 66.047, 62.532, 18.2142, 14.9247, 57.0444, 111.6916, 37.8893, 10.1623, 21.2285, 65.7461, 0.0, 49.2612], [201.3638, 67.1986, 52.509, 0.0, 56.8656, 52.1626, 35.0784, 34.5744, 20.6824, 46.7597, 39.837, 360.122, 38.1064, 75.4474, 59.58, 25.5834, 72.479, 38.5917, 106.086, 87.6902, 6.7332, 53.745, 10.9714, 14.439, 38.8145], [197.6486, 73.9022, 27.6, 0.0, 77.8272, 33.0394, 75.9168, 42.8064, 94.9799, 0.0, 75.9898, 60.1524, 630.924, 2.0976, 80.2454, 64.836, 0.0, 9.2446, 36.4513, 28.5886, 40.1069, 20.9676, 36.3381, 7.0315, 14.0257, 15.4151], [247.1846, 73.658, 43.033, 7.82, 98.472, 83.7274, 62.0064, 43.3709, 51.7517, 62.5997, 66.6204, 501.004, 40.6235, 36.9158, 46.008, 19.7437, 14.1422, 31.0355, 59.069, 46.6963, 30.5942, 41.1316, 30.9168, 0.0, 50.6453], [198.3917, 65.0546, 66.217, 0.0, 117.48, 80.4557, 58.5792, 99.4426, 52.1794, 73.5398, 64.7388, 523.74, 54.8173, 63.0605, 77.04, 37.1237, 51.2077, 82.7614, 131.171, 66.0845, 35.5771, 41.0653, 35.2397, 0.0, 20.5437], [249.1661, 80.7958, 62.33, 0.0, 152.5392, 51.1027, 21.8304, 92.1514, 67.5155, 54.743, 76.4694, 389.354, 82.5755, 108.6912, 64.08, 49.0811, 108.2113, 94.5983, 109.3092, 60.889, 44.4535, 11.2438, 38.7691, 0.0, 31.2527], [252.6336, 65.7602, 77.142, 0.0, 134.7984, 34.2835, 72.2592, 85.6598, 103.2285, 0.0, 81.6077, 71.8242, 578.956, 80.8974, 184.1386, 29.376, 0.0, 92.3013, 82.4046, 73.2231, 145.6013, 18.4672, 59.2896, 42.0797, 0.0, 7.2267], [325.2038, 103.0777, 67.62, 10.396, 147.9456, 50.6419, 45.8208, 77.8512, 74.1143, 0.0, 111.3024, 70.1484, 417.368, 85.652, 134.9338, 128.736, 26.6262, 93.5185, 109.581, 156.6064, 39.8534, 27.4687, 49.0398, 36.635, 0.0, 41.6848]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

