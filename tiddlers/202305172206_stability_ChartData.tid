created: 20230517220640000
creator: Drevarr
modified: 20230705163530596
modifier: drevarr
tags: ChartData
title: 202305172206_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Blancooo Padreee", "Newtype Khan", "Grasszanine", "Xanvias Einzbern", "Kmpek", "Raelyn Sunray", "Khailerian", "Dimsnail", "Asureon", "Mistwalker Caelon", "Kos\u00e4ir", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Solus Sanctus", "Lucas Ryn", "Itsy Bitsy Tika", "Gabe Malhorn", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Druid", "Berserker", "Spellbreaker", "Spellbreaker", "Berserker", "Vindicator", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Vindicator", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1.8445, 0.9056, 1.9582, 1.2542, 0.9173, 0.0, 0.8817, 0.0, 0.0, 0.0, 2.6438, 1.008, 0.5414, 0.8798, 0.9072, 0.9216, 2.6851, 1.1844, 1.7568, 0.4018, 0.1285, 0.7541, 1.0584, 0.0, 2.4118, 0.0, 2.6186, 0.8585, 1.8218, 0.933, 0.0, 3.024, 0.6373, 2.8709, 2.5013, 0.9108, 0.9147, 1.08], [0.0, 0.0, 1.0088, 2.0261, 1.4789, 0.0, 1.0077, 0.6354, 1.1891, 0.0, 0.0, 1.08, 1.2182, 0.9532, 0.0, 1.728, 3.0555, 1.0152, 2.6938, 0.0, 0.0, 1.0334, 0.0, 0.9526, 3.775, 1.4896, 3.5187, 1.9316, 3.3124, 0.9663, 0.0, 1.9152, 1.2745, 0.0, 2.316, 0.0, 1.2329, 1.8144], [0.0, 0.0, 2.611, 0.0, 0.0, 0.0, 2.5507, 1.0509, 0.0, 0.0, 0.0, 0.0, 3.384, 2.2363, 0.0, 0.0, 3.1481, 3.8352, 3.0451, 1.741, 0.0, 0.0, 1.7816, 8.3888, 1.5268, 2.4549, 1.6454, 2.1531, 0.0, 0.0, 1.4112, 0.0, 2.6857, 1.8528, 1.98, 0.0, 2.8512], [0.4035, 0.0, 4.5098, 3.3768, 1.6848, 0.0, 3.6528, 0.6843, 0.0, 0.0, 5.508, 0.0, 1.895, 1.5397, 0.0, 1.6512, 5.185, 2.7636, 2.8109, 0.0, 0.0, 0.0, 0.0, 0.0, 2.9361, 1.6758, 3.6005, 1.6454, 3.3952, 1.5994, 0.0, 1.7136, 0.0, 0.9261, 3.1498, 0.0, 1.2726, 2.5488], [0.0, 0.5341, 3.323, 3.3768, 1.3291, 0.0, 2.2673, 0.0, 1.2925, 0.0, 1.3219, 1.08, 1.9627, 3.5927, 1.296, 1.0752, 4.7221, 2.9328, 1.6397, 1.0267, 0.0, 1.0613, 0.0, 1.076, 5.6624, 0.0, 3.5187, 3.4339, 4.8858, 1.0662, 0.0, 3.9312, 0.0, 3.5192, 1.1117, 1.5048, 0.0, 2.2896], [0.0, 0.0, 2.9892, 6.2074, 3.0355, 0.0, 1.8992, 1.9278, 1.9228, 4.2993, 0.1117, 3.2732, 7.6548, 10.6825, 2.3657, 0.0, 7.4592, 0.0, 2.7783, 4.8173, 0.0, 4.6929, 0.0], [0.0, 2.0948, 0.0756, 2.2226, 11.954, 3.724, 1.0638, 9.4433, 7.7013, 0.833, 9.8784, 0.7516, 9.4462, 0.9264, 1.782, 0.5568, 5.5296], [0.0, 1.0088, 8.3938, 3.1824, 0.0, 2.8971, 0.0, 0.1293, 0.0, 10.4285, 1.368, 0.0, 4.0693, 0.0, 1.8048, 4.3517, 4.8504, 4.8019, 2.4552, 0.0, 0.0, 0.0, 0.0, 1.3632, 0.6331, 0.0, 3.2908, 3.1468, 0.0, 5.6448, 0.0, 0.0, 4.5394, 1.8216, 0.5616], [0.0, 0.0, 2.2549, 3.4733, 0.0, 0.0, 3.4954, 0.0, 0.0, 0.0, 0.0, 0.432, 5.076, 1.5764, 0.0, 3.6864, 4.6295, 4.0608, 1.1712, 4.7318, 0.0, 0.0, 3.2886, 1.6052, 2.6215, 0.1862, 5.5644, 12.1618, 2.3187, 0.0, 0.0, 3.7296, 0.0, 3.5192, 3.9835, 0.2376, 0.9545, 0.0], [0.0, 3.145, 0.193, 0.3744, 0.0, 0.8502, 2.5906, 0.0, 0.0, 3.3782, 0.0, 5.6851, 2.6762, 2.688, 5.0925, 2.6508, 10.1894, 1.8749, 2.3562, 1.8713, 0.1764, 1.764, 13.1075, 2.4951, 4.9916, 5.6517, 2.0703, 0.0, 0.0, 3.024, 0.0, 4.4453, 0.0, 2.0592, 1.0738, 3.024], [0.0, 2.531, 8.4856, 1.5437, 0.5054, 0.2999, 0.063, 0.1466, 0.0, 0.5472, 3.011, 0.648, 3.7901, 3.9226, 0.0, 4.5312, 3.9814, 6.204, 6.9101, 1.4285, 2.5061, 0.0, 0.0, 0.8467, 6.711, 1.0055, 5.0735, 4.7932, 5.4655, 2.4324, 0.0, 6.4512, 0.0, 2.13, 0.0, 2.3364, 1.8576], [0.0, 0.0, 3.0857, 6.6571, 3.6691, 3.4536, 2.7711, 0.0, 0.0, 0.0, 3.3782, 2.088, 3.1133, 3.2627, 0.0, 3.6096, 6.7591, 5.076, 6.2074, 0.0, 0.5586, 0.819, 2.4167, 14.4707, 2.0854, 4.6643, 6.3671, 7.5357, 2.6323, 0.0, 1.9152, 9.8167, 0.6485], [0.0, 1.4861, 5.5186, 3.7627, 0.0, 0.0, 4.629, 0.611, 1.887, 0.0, 2.9376, 2.772, 9.1368, 1.6864, 2.511, 3.6096, 10.5553, 6.8244, 7.847, 3.9283, 0.0, 4.9436, 0.5418, 2.3108, 21.1817, 4.9902, 10.1469, 14.308, 15.7339, 6.0309, 0.0, 10.8864, 0.0, 8.3349, 7.2259, 0.0, 0.0, 5.4432], [0.8646, 3.2972, 7.8329, 7.7184, 4.1371, 3.1744, 6.361, 4.057, 1.6544, 1.4045, 4.1861, 1.944, 10.7611, 5.7556, 0.0648, 8.8704, 12.5922, 11.562, 14.2886, 8.8387, 2.806, 0.5865, 0.0756, 3.6162, 18.0359, 4.1336, 4.9098, 9.3717, 11.4278, 4.2983, 11.6928, 0.9477, 10.0019, 5.7437, 3.8448], [0.1729, 0.2554, 7.236, 6.2899, 0.0, 4.0307, 7.552, 3.4898, 0.0, 8.2987, 1.476, 12.3854, 8.6884, 0.3888, 7.68, 16.8514, 14.7768, 15.8112, 7.812, 0.0, 2.402, 0.945, 2.5578, 19.8185, 3.4261, 8.8376, 12.0187, 11.5934, 3.7652, 0.0, 12.3984, 0.0, 17.1329, 6.7627, 5.0688, 6.2837, 4.752], [0.0, 0.209, 11.2746, 5.4994, 0.6552, 0.2275, 9.8879, 2.444, 3.7482, 0.0, 3.9658, 0.9, 6.1589, 8.1385, 3.24, 7.7568, 17.6847, 14.7768, 11.0093, 5.5354, 2.806, 3.6588, 1.3482, 3.8279, 17.4068, 5.1019, 11.538, 13.6641, 15.1542, 3.3986, 0.0, 14.616, 0.0, 15.4659, 8.0597, 4.3164, 0.517, 9.8928], [2.5938, 4.5743, 12.046, 9.3586, 3.2386, 3.4329, 5.6682, 4.3748, 5.8679, 3.7027, 7.8581, 2.988, 11.844, 8.1385, 0.0, 11.136, 10.7404, 10.8852, 10.4237, 6.071, 3.0631, 5.8653, 0.5922, 2.3461, 18.2456, 2.1599, 6.6282, 15.0234, 14.4089, 7.6969, 0.774, 15.5232, 0.0, 18.2442, 9.1714, 4.9896, 0.0, 3.6288], [1.441, 1.9273, 10.8592, 7.8149, 1.3478, 0.2585, 5.0699, 1.5642, 1.7061, 0.5837, 9.7675, 5.472, 9.8813, 8.7617, 1.8306, 5.952, 18.9809, 12.3516, 16.2797, 9.4637, 0.3427, 1.5362, 4.3848, 4.4629, 20.972, 3.1654, 7.0374, 15.238, 11.1794, 2.399, 0.0, 19.9584, 0.4085, 16.855, 7.0406, 6.534, 6.6814, 7.9488], [1.6139, 4.2493, 15.0724, 13.6037, 4.5864, 1.4062, 12.1237, 3.1772, 5.1183, 1.1674, 6.7565, 4.536, 14.5512, 11.3279, 3.6612, 8.4864, 23.4253, 14.1, 14.9914, 8.6602, 1.1781, 1.6758, 7.2677, 24.2227, 3.4261, 14.7294, 13.8072, 10.7653, 8.33, 0.0, 17.136, 0.0, 15.0028, 7.7818, 3.5244], [3.9195, 4.853, 14.835, 19.5854, 3.613, 3.0503, 10.6436, 1.3931, 4.5755, 3.0461, 10.9426, 7.884, 12.047, 10.3748, 4.4064, 12.4416, 26.1104, 14.1, 18.8563, 8.5262, 3.4633, 2.6712, 4.9568, 29.6754, 5.437, 15.6295, 14.8803, 21.0337, 7.597, 24.0912, 21.5781, 14.2666, 5.3856, 3.5793, 1.7712], [2.5362, 2.6703, 18.158, 19.5854, 3.276, 3.5053, 5.1329, 1.7597, 9.2543, 0.2371, 16.524, 6.552, 16.1078, 8.945, 2.187, 11.6736, 25.4623, 16.5252, 17.4509, 12.276, 1.2424, 6.9825, 3.024, 1.6582, 21.2866, 6.7777, 16.2842, 13.9503, 17.1417, 5.6977, 0.0, 25.8048, 3.5621, 18.1516, 12.0432, 8.316, 2.8634, 8.2512]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

