created: 20230809220339000
creator: Drevarr
tags: ChartData
title: 202308092203_cleansesOutTime_ChartData
type: text/vnd.tiddlywiki


const names = ["Tootsy Pop Star", "Audens Silvermarker", "Bella Sassy", "Aspros Gemeos", "Crusader Siolith", "Rozaalyna", "Rafaellagabriela", "Raziel Umbra", "Sygaldry Verdandi", "Black Raspberry Pie", "Morton Saltbringer", "Mort\u00e4rion", "Be\u00eb", "Jimbo The Plug", "Arcanophage Farra", "Blancooo Padreee", "Seren\u00e1 Joy", "Rahani Sunray", "Fastdrawl", "Mike The Archmagus", "Eibh\u00ebar", "Elementsofmathus", "My Birthday Girl", "Tegan Parker", "Konoko K", "Kosa\u00efr", "Drevarr Moonwillow", "Tribal S", "Zaedy Zae"];
const professions = ["Scourge", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Scourge", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Chronomancer", "Chronomancer", "Scrapper", "Tempest", "Chronomancer", "Tempest", "Scrapper", "Tempest", "Tempest", "Tempest", "Scrapper", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.0, 0.0, 0.0, 0.9818, 9.0089, 2.9889, 0.0, 9.0114, 10.0139, 15.9277, 2.9714, 14.3404, 2.9623, 12.0248, 29.0185, 0.0, 12.0174, 6.9718, 0.9825, 0.0, 3.0, 4.0, 5.013, 34.0308, 0.0, 10.2353, 5.0, 3.1852], [0.0, 0.0, 0.9924, 2.9818, 2.0059, 0.0, 0.0, 36.375, 30.3472, 12.9518, 4.9857, 56.9255, 1.9811, 38.4959, 24.1365, 0.0, 40.1337, 7.7465], [4.0, 0.0, 12.9697, 0.0, 24.0178, 15.0667, 0.0, 22.1818, 0.0, 17.0361, 9.9429, 9.9468, 0.0, 2.0, 13.0037, 0.0, 25.0465, 5.1831, 0.0, 3.0, 16.1227, 5.0, 2.0, 17.9949, 1.0, 0.0, 0.0, 11.963], [0.0, 49.375, 20.0278, 33.012, 38.3, 56.2553, 8.9245, 47.3471, 42.1255], [10.0898, 4.9848, 19.2364, 30.4704, 7.9778, 0.0, 15.7386, 0.0, 16.494, 9.9429, 11.0638, 3.9623, 13.2314, 17.059, 0.0, 18.0058, 0.0, 0.0, 16.68, 15.0184, 1.0, 14.0649, 15.0051, 0.0, 1.0, 0.0, 17.0988], [0.0, 1.0, 2.9848, 7.4545, 16.0207, 3.0444, 0.0, 7.0114, 21.1528, 10.9518, 8.9429, 23.2979, 3.9623, 20.2066, 50.1845, 0.0, 37.2267, 2.9859, 0.9825, 0.0, 8.0061, 15.1067, 14.1429, 3.9949, 0.0, 4.0, 0.0, 5.9753], [3.0, 7.0, 0.0, 11.0545, 39.1923, 18.1, 0.0, 18.1705, 0.0, 28.5663, 0.0, 16.383, 0.0, 18.2397, 18.0959, 22.314, 0.0, 0.0, 0.0, 12.0123, 11.0, 16.0649, 17.9949, 0.0, 9.0, 0.0, 15.5679], [15.75, 30.4571, 23.0426, 9.9245, 34.3306, 51.155, 45.0465, 0.0, 0.0, 0.0, 6.0982, 7.0, 15.0909, 20.0564, 0.0, 38.5294, 0.0, 38.6296], [0.0, 5.0, 9.9697, 0.0, 37.1538, 13.9667, 0.0, 25.0909, 0.0, 12.9398, 8.9429, 15.9787, 15.8679, 18.0413, 26.0, 0.0, 27.0116, 0.9859, 3.9649, 2.0, 9.0307, 5.0, 12.3896, 21.0769, 0.0, 20.0, 2.0, 8.963], [0.0, 0.0, 12.9621, 17.5818, 17.0118, 0.0, 10.0, 31.1023, 20.375, 6.9639, 15.3286, 11.9787, 0.0, 37.5537, 63.321, 33.0407, 0.0, 1.9825, 0.0, 25.0307, 4.0, 11.0519, 1.9949, 0.0, 0.0, 0.0, 0.9877], [0.0, 0.0, 0.9924, 1.9818, 0.0, 0.0, 2.3977, 20.1667, 2.988, 6.0857, 25.3936, 20.6038, 1.0, 86.4133, 0.0, 37.1221, 11.0563, 0.0, 0.0, 21.0245, 12.0933, 2.0, 25.4462, 0.0, 24.1529, 0.0, 20.4568], [0.0, 14.0898, 4.9848, 11.0364, 5.003, 0.0, 0.0, 7.0114, 0.0, 0.988, 1.9857, 0.9894, 20.8868, 33.124, 73.5867, 0.0, 61.5465, 0.0, 17.2667, 19.2468, 0.0, 0.0, 36.8471, 0.0, 41.4938], [0.0, 2.0, 0.9924, 11.1361, 36.8667, 0.0, 1.0, 0.0, 25.2892, 15.9429, 31.2128, 5.9434, 39.1488, 53.3026, 0.0, 63.1919, 1.9859, 0.0, 0.0, 11.0123, 7.0, 19.961, 40.3692, 17.0, 0.0, 24.1235], [8.2381, 1.0, 8.9773, 12.6, 26.1834, 26.2889, 3.9688, 4.0, 41.9028, 34.506, 19.1, 54.2234, 11.2642, 28.0661, 72.4871, 3.0, 39.064, 7.0423, 2.9825, 0.0, 19.0613, 5.0, 14.0649, 23.0564, 0.0, 22.0353, 2.0, 11.1111], [0.0, 15.0479, 2.9848, 16.0182, 43.1953, 38.2111, 0.0, 0.0, 8.0, 21.4578, 19.0, 46.8723, 11.9057, 28.0661, 42.0775, 55.0988, 15.1268, 5.9649, 0.0, 30.3067, 6.0, 6.026, 16.9949, 0.0, 39.7176, 10.0, 29.358], [2.0, 14.0, 0.0, 0.0, 32.0769, 8.9778, 0.0, 28.3409, 20.4722, 21.9518, 26.8571, 42.0957, 0.0, 44.2066, 49.0074, 0.0, 54.093, 1.9859, 9.7719, 0.0, 43.0613, 18.0, 0.0, 38.441, 0.0, 8.0, 7.0, 14.9506], [16.1429, 0.0, 0.0, 0.0, 23.0178, 16.5667, 0.0, 48.0682, 51.4444, 36.8072, 22.5143, 26.8723, 2.9623, 17.0413, 90.9557, 0.0, 39.3721, 5.9859, 0.0, 0.0, 17.0736, 27.3467, 40.9351, 21.2256, 0.0, 25.5059, 0.0, 28.9012], [0.0, 8.0, 2.9848, 11.9818, 69.9615, 30.2, 9.0, 35.9205, 0.0, 11.0241, 37.6286, 31.1596, 11.9057, 25.3719, 73.0996, 0.0, 103.4186, 5.9859, 3.9649, 0.0, 38.135, 31.5333, 25.2208, 26.0154, 0.0, 33.4, 2.0, 23.1975], [9.0, 38.1288, 0.0, 94.1065, 30.1889, 0.0, 25.0114, 23.1111, 25.8916, 42.3571, 22.8936, 13.9623, 45.1983, 39.1845, 0.0, 69.3663, 2.9825, 1.0, 45.2699, 22.1299, 58.2051, 23.1882, 4.0, 0.0], [32.0526, 26.16, 214.2147, 61.32, 87.2857, 228.4974, 25.9677, 99.2353, 68.5526, 118.358], [4.0, 0.0, 15.9545, 19.1273, 74.3639, 32.8222, 0.0, 30.75, 43.8194, 14.0241, 22.0286, 50.883, 8.3019, 30.843, 92.4686, 0.0, 127.7849, 0.0, 9.6842, 0.0, 38.3926, 17.16, 30.4156, 28.0667, 0.0, 33.5412, 2.0, 27.2222], [14.0476, 56.491, 35.9697, 47.1636, 162.7426, 181.6453, 40.8451, 15.9123, 9.08, 63.1472, 44.32, 70.3377, 146.5385, 7.0645, 51.6235, 15.0263, 124.4444], [19.0238, 42.2575, 36.9545, 47.5091, 124.4142, 69.9444, 6.9688, 52.9432, 22.2639, 55.1566, 62.3571, 76.2553, 36.8679, 69.7769, 159.3026, 114.6628, 22.9437, 0.0, 8.08, 99.7546], [9.9697, 41.4909, 184.6272, 67.0889, 0.0, 103.3068, 68.9722, 83.9157, 100.1286, 108.5, 18.9434, 107.1653, 192.31, 168.157, 26.0423, 10.1228, 136.6748, 30.0, 35.1688, 106.3333, 12.2581, 75.7294, 9.0, 68.0247], [62.8802, 66.0152, 40.3818, 169.1509, 103.9222, 0.9688, 70.9205, 76.7639, 94.8554, 114.5, 108.117, 24.8113, 112.0909, 166.6974, 5.0, 159.0698, 43.831, 27.9649, 27.72, 106.2393, 38.1067, 75.2727, 94.8103, 0.0, 67.2471, 49.1842, 109.0123], [11.0476, 44.4132, 52.1894, 42.4, 179.3432, 134.3222, 0.9688, 120.7614, 81.4583, 103.4096, 83.8143, 138.0851, 16.8679, 97.2231, 182.2362, 206.7791, 22.4789, 12.9649, 17.16, 107.5706, 47.1333, 62.6494, 138.5128, 20.0, 88.1529, 20.3947, 129.8889], [46.7619, 88.8802, 106.0985, 57.8909, 202.497, 93.2222, 9.1875, 81.8182, 64.4028, 101.8795, 108.8571, 158.0638, 74.283, 114.2314, 195.6347, 9.0, 199.2442, 53.3099, 37.4912, 27.6, 130.7791, 75.48, 83.6494, 154.3026, 23.7097, 88.3412, 40.3947, 114.7037], [216.9083, 221.7333, 4.9688, 180.4091, 136.6389, 121.7711, 114.3, 196.6809, 39.8868, 164.2975, 307.5535, 296.1337, 51.1549, 25.9649, 25.16, 212.7975, 94.32, 79.2078, 196.2718, 11.0968, 99.2235, 61.6579, 107.6914], [67.3571, 78.5509, 67.1439, 76.6364, 247.0503, 168.9333, 0.0, 129.2727, 89.4722, 112.2771, 154.2429, 194.5, 70.0189, 169.7107, 279.524, 0.0, 239.7733, 60.5211, 11.9649, 29.92, 164.6135, 70.5867, 108.2208, 244.9692, 15.2903, 136.2588, 16.0526, 142.5062]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

