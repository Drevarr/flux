created: 20230610164704000
creator: Drevarr
modified: 20230705163534991
modifier: drevarr
tags: ChartData
title: 202306101647_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Morv\u00e4rth", "Smol Gluvs", "Little Heks", "Arcanophage Farra", "Zayde Sunsabre", "Morton Saltbringer", "Be\u00eb", "Seikers Sorrow", "Yngvar The Burdened", "Elonith Requiem", "Newtype Khan", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Druid", "Reaper", "Reaper", "Reaper", "Spellbreaker", "Spellbreaker", "Chronomancer", "Reaper", "Chronomancer", "Scourge", "Reaper", "Spellbreaker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0233, 0.03, 0.1667, 0.0984, 0.0115, 0.0282, 0.0244, 0.0, 0.0, 0.0, 0.0192, 0.0145, 0.0532, 0.0488, 0.0435, 0.1182, 0.0118, 0.0469, 0.042, 0.0495], [0.0141, 0.0, 0.0, 0.0, 0.1223, 0.0, 0.0, 0.1246, 0.0, 0.0312, 0.084, 0.1683], [0.2791, 0.0, 0.06, 0.125, 0.3115, 0.023, 0.0, 0.0, 0.0244, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0745, 0.0, 0.0, 0.1086, 0.0, 0.0, 0.1597, 0.4059], [0.0714, 0.02, 0.0208, 0.082, 0.0115, 0.0565, 0.0233, 0.0122, 0.0, 0.0345, 0.0141, 0.0769, 0.0, 0.0, 0.1755, 0.0, 0.0, 0.2428, 0.0, 0.0, 0.1261, 0.0396], [0.0, 0.0714, 0.0, 0.75, 0.1967, 0.0575, 0.0226, 0.1163, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0479, 0.0244, 0.0435, 0.2843, 0.0, 0.0, 0.1092, 0.6139], [0.12, 0.2292, 0.2459, 0.0, 0.0395, 0.0698, 0.0, 0.0345, 0.0282, 0.0577, 0.0192, 0.0, 0.0426, 0.2683, 0.0, 0.3578, 0.0, 0.0625, 0.1176, 0.3861], [0.186, 0.2619, 0.14, 0.0625, 0.1475, 0.0, 0.0452, 0.0, 0.0, 0.0345, 0.169, 0.0385, 0.0577, 0.0, 0.4202, 0.0, 0.087, 0.1821, 0.0941, 0.2656, 0.0168, 0.1584], [0.0233, 0.0714, 0.13, 0.125, 0.3607, 0.0115, 0.0226, 0.0465, 0.0366, 0.0, 0.069, 0.0282, 0.0962, 0.0, 0.0, 0.4468, 0.0, 0.0435, 0.2396, 0.0, 0.0, 0.0756, 0.2871], [0.1163, 0.0952, 0.03, 0.1667, 0.2459, 0.023, 0.0565, 0.1163, 0.0122, 0.0, 0.0345, 0.0704, 0.1538, 0.0769, 0.0, 0.4787, 0.0732, 0.0435, 0.2236, 0.0118, 0.0312, 0.0756, 0.2574], [0.0845, 0.2115, 0.1538, 0.029, 0.2128, 0.0488, 0.3478, 0.4696, 0.0941, 0.1875, 0.1008, 0.505], [0.0465, 0.1667, 0.11, 0.4167, 0.2787, 0.0, 0.0565, 0.1395, 0.0976, 0.069, 0.0423, 0.0385, 0.0962, 0.087, 0.5266, 0.0244, 0.0435, 0.3163, 0.0353, 0.0781, 0.2017, 0.3267], [0.1395, 0.0, 0.37, 0.7083, 0.5246, 0.0345, 0.0678, 0.2093, 0.0, 0.0, 0.1379, 0.1268, 0.0, 0.0962, 0.0, 0.4628, 0.0488, 0.4348, 0.377, 0.0, 0.0, 0.1933, 0.4158], [0.0233, 0.2619, 0.19, 0.7708, 0.3443, 0.0, 0.1186, 0.0233, 0.0122, 0.069, 0.1127, 0.0577, 0.0385, 0.6064, 0.0976, 0.1304, 0.4313, 0.0588, 0.1094, 0.1429, 0.6238], [0.5349, 0.6905, 0.24, 0.7083, 1.2951, 0.0345, 0.1864, 0.2558, 0.061, 0.0, 0.0345, 0.1127, 0.5192, 0.0, 0.6968, 0.1951, 0.1739, 0.5112, 0.1176, 0.3438, 0.395, 0.7129]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

