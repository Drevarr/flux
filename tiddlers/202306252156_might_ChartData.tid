created: 20230625215649000
creator: Drevarr
modified: 20230705163536973
modifier: drevarr
tags: ChartData
title: 202306252156_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Artakama Nahid", "Tika Fiery", "Elon The Mender", "Cerys Fireblade", "Black Raspberry Pie", "Belvyn Brightblade", "Xanvias Einzbern", "Johosh The Mighty", "Mmathuss", "Koralia Danai", "Sygaldry Verdandi", "Tegan Parker", "Drevarr Moonwillow", "Crusader Siolith", "Etchery Howls", "Grasszanine", "Irish Mini Rev", "Solus Sanctus", "Bella Sassy", "High Sorcer Baradun", "Miphest\u00f6", "Blancooo Padreee", "Zayde Sunsabre", "Newtype Khan", "Arcanophage Farra"];
const professions = ["Reaper", "Tempest", "Firebrand", "Druid", "Berserker", "Chronomancer", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Scrapper", "Firebrand", "Druid", "Spellbreaker", "Herald", "Firebrand", "Firebrand", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.6729, 6.2375, 8.9939, 4.586, 38.3438, 8.1144, 21.0524, 5.089, 4.8768, 3.7083, 6.2847, 3.8588, 0.0, 3.1139, 2.5725, 2.8182, 2.8224, 5.3784, 4.0925, 1.5096, 9.69], [0.0, 4.9599, 18.6576, 8.2887, 56.1571, 4.801, 29.9767, 4.1587, 6.1056, 9.5236, 5.7134, 5.3508, 0.0, 0.0, 0.0, 0.0, 0.3749, 0.0, 2.7562, 0.0, 24.48], [0.0, 13.8276, 14.5434, 5.0276, 39.8534, 14.4707, 41.6471, 0.0, 0.2304, 1.0114, 7.1677, 3.3442, 0.3942, 1.7277, 6.1328, 0.0, 1.9204, 0.0, 4.3824, 12.0269, 1.9232, 32.64], [4.964, 16.2324, 13.2038, 6.2505, 46.7976, 4.5305, 43.4777, 4.1587, 0.0, 11.8835, 4.5188, 2.6754, 2.464, 0.8237, 2.6137, 0.0, 0.2866, 2.5498, 4.2595, 1.9646, 29.325], [6.4777, 20.2905, 21.1453, 3.431, 30.192, 9.9401, 30.2056, 5.472, 11.136, 8.1752, 8.3104, 3.7558, 2.735, 1.2657, 3.869, 3.4655, 0.0, 2.3152, 5.6971, 2.7562, 3.102, 23.715], [3.428, 5.4108, 29.2781, 5.2993, 51.6283, 14.6735, 29.9767, 5.9645, 0.0, 6.7845, 8.3104, 3.7558, 0.0, 3.2144, 2.0992, 0.0, 0.0, 2.646, 5.8166, 5.8464, 4.3635, 27.285], [15.8714, 21.7183, 41.9078, 13.3162, 79.405, 22.5175, 34.0957], [7.1677, 5.1102, 19.136, 3.397, 49.5149, 12.5097, 24.9425, 8.4816, 12.4032, 9.3129, 18.5945, 8.4378, 2.427, 2.7925, 2.7577, 2.8681, 2.4476, 6.4541, 8.9366, 2.6057, 46.41], [4.8972, 10.3707, 10.1421, 9.104, 58.8744, 15.4174, 37.9858, 13.0781, 3.9552, 17.2774, 12.154, 13.2741, 3.117, 6.911, 3.2516, 0.0, 4.2772, 0.7938, 7.3704, 5.9299, 1.3028, 31.62], [5.8989, 28.557, 32.9139, 7.5074, 104.1624, 16.8374, 48.0543, 9.6854, 5.0688, 3.0762, 1.1946, 5.8653, 0.0, 4.6006, 4.0954, 0.0, 1.4715, 1.4773, 5.737, 9.6048, 0.0, 22.185], [0.7346, 19.8396, 37.6979, 23.779, 71.857, 21.1651, 56.7498, 1.368, 5.0688, 4.3404, 13.2447, 8.3349, 0.0, 2.8126, 2.058, 2.5563, 1.4773, 3.745, 14.0314, 2.5023, 48.45], [5.3424, 8.4168, 15.5002, 4.484, 78.1973, 24.5461, 60.8688, 8.1533, 11.0976, 11.3357, 6.7522, 11.0103, 1.9958, 3.0135, 3.4986, 0.8729, 1.0804, 11.195, 6.1805, 4.7771, 69.615], [1.5582, 35.3205, 38.4634, 18.14, 78.4992, 4.5982, 74.8274, 1.2586, 0.0, 2.7812, 1.9218, 3.0355, 0.8008, 4.1988, 8.8494, 0.0, 12.6945, 2.7563, 0.8765, 4.0925, 2.2128, 67.575], [7.3013, 20.516, 26.5034, 5.5711, 80.0088, 19.745, 55.148, 6.457, 14.208, 6.7003, 12.985, 14.2517, 3.3264, 2.7724, 3.478, 3.335, 2.2945, 3.4398, 8.6054, 15.0336, 4.4669, 50.745], [5.5427, 14.7294, 46.7875, 31.9318, 102.049, 14.2678, 55.8345, 4.8154, 7.9488, 8.133, 4.9862, 5.2993, 6.5666, 5.4042, 1.9139, 2.262, 3.2921, 3.7485, 7.2509, 25.1395, 1.5303, 76.245], [0.9058, 0.0, 145.0782, 30.6979, 12.9792, 23.4298, 35.7867, 26.0851, 0.0, 7.594, 8.0674, 11.0858, 2.1389, 23.7048, 1.8374, 6.6796, 115.005], [118.5339, 28.9469, 19.7376, 30.5515, 33.1897, 14.9205, 10.8293, 7.7547, 6.2357, 0.0, 10.612, 7.6072, 19.8802, 26.1418, 5.6663, 130.56], [9.3047, 19.4639, 47.6486, 5.0276, 114.4277, 37.3262, 89.9302, 6.1834, 0.384, 16.9403, 14.5951, 7.203, 0.1355, 1.3259, 6.1123, 0.0, 0.3528, 11.195, 20.1283, 4.5289, 63.75], [4.2739, 38.1762, 77.4051, 0.0, 116.2392, 41.5187, 88.5572, 23.0371, 19.6992, 15.2968, 16.8805, 11.5248, 1.6139, 1.9487, 4.3012, 0.4785, 4.9257, 5.0274, 6.4541, 25.9747, 7.2794, 85.68], [7.1009, 38.5519, 43.1517, 19.8045, 140.9966, 35.9062, 129.0601, 16.799, 18.5472, 18.9209, 10.5438, 11.782, 6.7637, 2.2903, 4.5688, 0.4205, 2.8432, 2.5357, 7.0517, 31.7376, 2.8745, 104.04], [21.9261, 46.2172, 41.8122, 0.0, 230.6669, 32.5252, 80.0905, 30.096, 16.8576, 19.3423, 19.01, 14.6632, 1.1853, 0.7203, 0.0, 0.1323, 0.9562, 44.5997, 0.5997, 169.83], [13.2224, 62.6751, 104.3869, 0.0, 235.4976, 98.5223, 211.6678, 5.2531, 39.2064, 17.2353, 30.2291, 13.4799, 0.0, 0.0603, 7.2647, 0.0, 0.0, 0.4851, 13.3464, 23.5526, 4.8598, 179.775], [8.8372, 59.8945, 64.2013, 19.4988, 274.4453, 55.0427, 179.8604, 29.1658, 27.3408, 26.2532, 44.3568, 10.4444, 12.4432, 12.5563, 10.0842, 12.0834, 14.5089, 29.2824, 16.6205, 1.7578, 168.045], [13.3115, 46.3675, 48.127, 26.8023, 325.7717, 72.6915, 162.927, 13.297, 28.224, 29.1609, 54.1734, 9.5697, 8.7793, 14.653, 15.3381, 15.5011, 27.8482, 19.8778, 15.1584, 155.295], [14.6693, 73.4215, 67.263, 21.8767, 296.1835, 69.5134, 171.6225, 50.3971, 15.1296, 22.7977, 43.2141, 30.2011, 4.0779, 12.3553, 11.4219, 4.437, 14.7894, 15.435, 33.4258, 34.7443, 10.7329, 170.085], [8.2585, 66.2823, 60.3741, 42.8022, 384.6461, 92.0308, 174.1396, 53.4067, 35.9424, 35.819, 60.3023, 48.9804, 0.0, 12.8777, 15.2909, 7.4385, 8.5669, 10.143, 37.4894, 20.713, 11.9737, 218.28]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

