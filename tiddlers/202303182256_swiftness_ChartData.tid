created: 20230318225613000
creator: Drevarr
modified: 20230705163522589
modifier: drevarr
tags: ChartData
title: 202303182256_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Legacy Of Mathus", "Smol Gluvs", "Xanvias Tseli", "Newtype Khan", "Primal Clone", "Flower Redrose", "S\u00edzz", "Nazhul Naxxremis", "High Sorcer Baradun", "Ark Darkness", "Zadie Miststep", "Tegan Parker", "Gavann", "Drevarr Moonwillow", "Blanco Padre Guard", "Demon Sekhmet", "Koralia Danai", "Venomina The Fierce", "Aronorf Xideliesi", "Johosh The Great", "Zaylen Harker", "Bella Sassy"];
const professions = ["Berserker", "Scourge", "Berserker", "Spellbreaker", "Chronomancer", "Scrapper", "Firebrand", "Scourge", "Tempest", "Firebrand", "Tempest", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Spellbreaker", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 58.6051, 0.0, 66.0231, 218.88, 22.7134, 0.0, 0.0, 9.8448, 39.8268, 121.1364, 37.0918, 0.0, 0.0, 1.3763, 0.0, 0.0, 0.0, 64.8377, 0.0, 0.0, 0.0, 0.0], [0.0, 18.4464, 0.0, 17.2676, 239.8925, 13.0234, 0.0, 0.0, 25.6032, 37.4736, 38.7007, 49.02, 54.5194, 0.0, 11.9381, 0.0, 0.0, 45.4944, 26.1274, 24.1907, 70.2413, 20.0587, 17.0413], [0.0, 2.7821, 0.0, 16.7751, 242.2272, 132.6367, 0.0, 0.0, 0.0, 102.8304, 17.6198, 31.4708, 0.0, 0.0, 38.8661, 0.0, 0.0, 1.7081, 111.8344, 27.621, 0.0, 23.9888, 11.2158], [113.6373, 0.0, 70.5628, 31.7342, 135.9974, 163.9548, 0.0, 0.0, 0.0, 90.4872, 1.3372, 77.5496, 140.448, 11.1355, 0.0, 0.0, 0.0], [0.0, 88.0589, 47.1516, 62.0217, 105.9379, 21.318, 77.9933, 0.0, 0.0, 40.8924, 94.3133, 0.2614, 60.6906, 0.0, 37.9685, 0.0, 21.1997, 57.616, 18.3935, 21.3394, 8.1818, 0.0, 99.5695], [36.358, 143.761, 0.0, 0.0, 64.4966, 87.7526, 0.0, 48.7872, 133.3332, 149.69, 53.203, 0.0, 0.0, 0.0, 0.0, 19.8462, 20.4039, 119.5494, 0.0, 0.0], [366.1623, 100.2622, 213.1405, 49.0882, 16.4859, 0.0, 158.508], [123.0236, 78.0797, 0.0, 69.5628, 210.2707, 57.1322, 0.0, 0.0, 77.1792, 50.7936, 145.9143, 5.2288, 82.609, 45.2707, 46.017, 0.0], [102.2476, 0.0, 15.4208, 85.3632, 26.8994, 70.5168, 41.1936, 37.6068, 145.8356, 51.1769, 108.3578, 27.0547, 16.3962, 7.0524, 19.9512, 28.8492, 85.8502, 20.4485, 91.0003, 32.2573, 3.5489], [37.842, 175.5734, 243.3775, 560.1869, 25.194], [50.8641, 34.5946, 0.0, 15.7594, 210.2707, 84.1867, 51.3583, 15.792, 48.4404, 184.4577, 40.2944, 82.9069, 24.0926, 37.041, 55.2096, 50.0861, 33.5966, 15.877, 36.1746, 111.1066, 52.4436, 33.5804], [0.0, 4.5359, 58.6667, 225.1546, 81.0084, 0.0, 0.0, 10.8864, 130.2696, 74.8057, 97.5498, 105.7616, 49.7693, 49.5475, 106.3901, 1.0838, 51.3137, 92.7085, 60.8845, 61.5542, 30.7012], [122.5413, 182.1053, 90.7184, 24.6856, 511.7414, 271.5526, 110.979, 85.6898, 85.1088, 53.1912], [57.8018, 127.9152, 0.0, 47.0318, 541.9469, 115.3498, 156.2414, 32.6711, 60.7824, 226.7508, 127.6652, 52.288, 59.6691, 10.5336, 81.5619, 0.0, 41.4202, 21.0626, 45.2166, 144.5648, 121.2467, 18.3999, 45.2984], [233.0993, 177.3274, 11.4678, 85.3222, 347.1437, 198.1411, 52.1867, 48.5638, 143.3712, 122.8992, 327.8549, 7.6798, 90.3549, 113.4619, 76.5354, 35.2944, 5.513, 102.3818, 109.1029, 28.5056, 1.1229, 0.0], [186.9469, 246.8189, 12.3823, 143.127, 519.767, 294.421, 51.4008, 17.7518, 206.3268, 284.7492, 89.2164, 276.6826, 1.2038, 97.6888, 142.9142], [152.8891, 401.9501, 0.0, 609.216, 57.985, 97.3004, 163.5984, 54.4788, 415.4035, 37.7454, 100.1011, 11.7058, 0.0, 0.0, 192.1925, 15.2787, 42.0658, 123.6262, 285.4477, 181.4727, 215.7116], [215.2913, 218.5142, 178.2909, 116.4407, 492.6259, 418.2979, 236.741, 99.792, 219.78, 156.848, 31.3401, 131.0422, 12.4186, 8.2579, 79.596, 152.1187, 79.1145, 84.4589, 244.2676, 115.1104, 26.8215, 28.3241], [100.0587, 222.5059, 156.5624, 80.028, 601.0445, 398.2978, 84.3865, 0.9194, 130.3008, 182.7948, 284.5132, 30.131, 273.9587, 64.057, 184.6064, 0.0, 207.7618, 15.7381, 99.9471, 260.9293, 178.8672, 182.468, 248.3546], [211.9523, 546.9206, 198.4465, 128.8451, 927.7594, 202.2497, 0.0, 57.1693, 137.8272, 206.238, 304.6502, 54.3795, 169.8144, 0.0, 66.0035, 16.0164, 10.8202, 47.9328, 25.7387, 166.3051, 269.0842, 167.2581, 255.0172], [221.8951, 338.6275, 94.2484, 87.7846, 599.0016, 362.9486, 62.5306, 205.464, 240.3816, 479.9047, 74.2816, 469.5645, 95.832, 160.5208, 81.54, 194.5181, 74.909, 180.5186, 399.3907, 383.1936, 22.6107, 192.3091], [303.2925, 394.5715, 246.22, 161.6566, 561.6461, 556.8262, 168.4757, 74.0355, 196.8624, 177.0228, 797.927, 241.4072, 444.1136, 116.725, 146.6678, 51.084, 286.2936, 18.1765, 181.3165, 307.395, 405.6499, 154.2174, 310.7948]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

