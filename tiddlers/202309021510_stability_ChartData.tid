created: 20230902151000000
creator: Drevarr
tags: ChartData
title: 202309021510_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Ria Zerrah", "Drac Tepes", "Govinda Ektar", "Legoh Brave", "Serene Azura", "Koisx", "Leoric Von", "Jimbo The Pleb", "Aloe Pen", "Unbreakable Nemesis", "Lurker Holystrike", "Banish Evil", "Gestern Yesteryear", "Frozen Chaos", "Wall Knot"];
const professions = ["Vindicator", "Scourge", "Vindicator", "Tempest", "Dragonhunter", "Dragonhunter", "Vindicator", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.4309, 0.0, 0.0, 0.0, 0.0, 4.1814, 0.0, 0.0, 0.0, 0.0, 0.0, 5.5535], [1.4969, 0.9299, 2.6741, 0.0, 0.0, 12.6905, 0.0292, 0.0], [0.0, 2.7805, 0.0, 0.0, 0.0, 0.0, 0.0, 4.4906, 3.0484, 2.4486, 3.0782, 0.661, 2.3409], [0.0, 0.0, 0.5335, 0.324, 1.3248, 0.8712, 0.3564, 1.073, 0.6096, 0.537, 3.663, 2.5175, 1.3505, 4.5617, 1.3247, 0.7102, 1.1616, 0.0, 0.8721], [0.0, 2.5376, 1.68, 0.0, 1.6006, 0.0, 3.519, 2.3285, 0.0, 2.378, 1.132, 0.9974, 1.4179, 0.8845, 1.1734, 2.8314], [0.6811, 0.8633, 1.044, 2.2641, 2.0331, 6.2625, 2.9938, 0.0, 5.8201, 2.41, 1.166, 4.0075, 0.0, 1.0863], [15.3608, 6.1916, 2.5682, 8.3369], [1.258, 1.5774, 1.9471, 1.632, 0.0, 1.4364, 0.9202, 2.7738, 1.0454, 0.0, 1.305, 2.8736, 2.4934, 6.1443, 1.633, 2.1697, 6.6066, 0.7661, 0.0, 1.2778, 0.0583], [4.06, 1.2191, 1.6495, 8.153, 6.3958, 0.0, 11.1683, 3.176, 1.0494, 8.1022, 0.4957, 0.2142], [6.5261, 0.9583, 4.669, 17.1548, 2.9921, 8.153, 8.0968, 5.6014, 19.0333], [0.0, 3.3037, 0.0907, 11.3022, 5.639, 1.9325, 4.176, 0.1742, 3.9894, 13.3521, 8.2328, 5.7564, 20.2917, 3.4662, 0.0, 4.743], [7.2276, 4.795, 16.8969, 17.4863, 5.1808, 40.2688, 6.6872, 6.4759, 2.5466, 1.6371], [3.3966, 0.0, 7.4214, 8.904, 0.0405, 4.853, 0.6091, 10.8468, 7.3814, 2.4948, 4.785, 1.9158, 7.4418, 13.5884, 16.7378, 6.9962, 12.7413, 8.2034, 4.3884, 6.9986, 3.1882, 9.3483], [0.0, 3.7449, 2.2421, 7.9074, 7.1438, 3.6986, 6.119, 0.0, 5.9074, 20.5598, 16.6018, 5.4022, 30.8308, 9.8473, 5.512, 13.7359, 1.147, 6.4413], [3.1746, 9.3685, 12.912, 0.0, 4.5965, 2.7864, 14.9868, 6.1301, 1.6632, 8.41, 6.7922, 6.0225, 18.9056, 22.2491, 8.9446, 25.0107, 9.0334, 4.6746, 10.2802]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

