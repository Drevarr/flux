created: 20230412220340000
creator: Drevarr
modified: 20230705163525308
modifier: drevarr
tags: ChartData
title: 202304122203_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Belvyn Brightblade", "Skye Nightroad", "Tootsie Pop Rocks", "Smol Gluvs", "Rina Of Theros", "K\u00f4sair", "Lord Erin The Wise", "Arriasa", "Be\u00eb", "Estryl", "Rozaalyna", "Blancooo Padreee", "Rozaalyna", "Konztantin\u00eb", "Minka Bringer", "Sp\u00edcy Cheese", "Be\u00eb", "Newtype Khan", "Zadie Miststep", "Kira Dragonblaze", "Inedible Plant", "Sister Elon\u00edth", "Allie Mistwalker", "Smol Daddy Tika", "Grasszanine", "Venomina The Siren", "Xyntharos", "Arcanophage Farra", "Tegan Parker", "Sub Train", "Mac Chiato", "Gavann", "Jeckyll Mbs", "Fribble Bibble", "Xanvias Einzbern", "Mistwalker Caelon", "Ark Darkness", "Lucas Ryn", "Demon Staph", "Koralia Danai", "Primal Clone", "Sygaldry Verdandi", "Johoshua", "Drevarr Moonwillow", "Solus Sanctus", "Black Raspberry Pie", "Bella Sassy", "Ryvalia Fazebringer", "Eibh\u00ebar"];
const professions = ["Spellbreaker", "Firebrand", "Scrapper", "Scrapper", "Scourge", "Scourge", "Berserker", "Weaver", "Druid", "Reaper", "Berserker", "Reaper", "Berserker", "Scourge", "Vindicator", "Scrapper", "Berserker", "Scourge", "Spellbreaker", "Tempest", "Dragonhunter", "Vindicator", "Firebrand", "Vindicator", "Berserker", "Spellbreaker", "Tempest", "Vindicator", "Spellbreaker", "Tempest", "Firebrand", "Tempest", "Firebrand", "Berserker", "Scrapper", "Berserker", "Vindicator", "Firebrand", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[25, 1, 2, 15, 5, 23, 26], [24, 2, 2, 4, 7, 14, 35, 1, 10], [14, 1, 3, 4, 1, 6, 26, 0, 14, 0, 4, 0, 0, 2, 2, 1, 0, 24], [8, 1, 1, 6, 2, 1, 21, 0, 18, 1, 18, 2, 12, 10, 0, 5, 0], [22, 0, 0, 7, 4, 16, 36, 0, 22, 6], [22, 2, 0, 11, 2, 15, 19, 0, 6, 4, 5, 1, 3, 7, 20], [20, 1, 0, 8, 2, 14, 25, 0, 5, 3, 3, 5, 34], [8, 0, 1, 4, 3, 11, 12, 1, 4, 2, 3, 5, 8, 5, 0, 2, 1, 4, 1, 54], [11, 0, 0, 6, 3, 8, 21, 0, 7, 14, 7, 1, 1, 5, 0, 2, 2, 1, 0, 41], [17, 2, 11, 6, 1, 6, 0, 11, 4, 77], [19, 0, 23, 6, 9, 1, 6, 18, 1, 4, 4, 4, 2, 41], [20, 14, 16, 1, 6, 0, 5, 2, 80], [10, 1, 1, 9, 2, 11, 22, 0, 7, 4, 4, 1, 5, 9, 1, 1, 0, 1, 4, 54], [30, 0, 0, 7, 5, 36, 38, 0, 29, 4], [33, 0, 0, 13, 4, 7, 46, 0, 25, 0, 1, 2, 21], [0, 12, 10, 2, 13, 2, 0, 10, 2, 6, 3, 93], [17, 1, 0, 15, 5, 13, 21, 0, 32, 4, 12, 1, 3, 0, 3, 4, 3, 25], [34, 3, 2, 9, 10, 30, 31, 0, 35, 6], [9, 0, 1, 5, 5, 16, 27, 0, 16, 2, 11, 0, 8, 8, 1, 7, 1, 7, 1, 45], [16, 0, 0, 16, 2, 4, 21, 0, 22, 1, 15, 10, 8, 0, 2, 3, 2, 2, 47], [52, 1, 2, 4, 6, 21, 50, 1, 38], [14, 1, 0, 9, 2, 16, 19, 0, 31, 7, 14, 0, 12, 13, 0, 6, 2, 2, 2, 26], [11, 20, 3, 14, 10, 0, 11, 8, 5, 5, 89], [15, 1, 1, 4, 3, 25, 41, 30, 7, 21, 1, 14, 14], [22, 0, 0, 10, 3, 14, 25, 0, 28, 13, 0, 6, 12, 1, 4, 1, 0, 6, 32], [18, 1, 0, 9, 0, 15, 21, 0, 17, 4, 14, 0, 18, 15, 0, 6, 2, 2, 2, 37], [26, 0, 1, 9, 4, 15, 12, 0, 30, 6, 13, 1, 6, 12, 0, 7, 3, 4, 3, 31], [28, 0, 1, 8, 4, 15, 38, 0, 18, 4, 11, 0, 4, 5, 0, 6, 1, 2, 2, 47], [21, 2, 0, 11, 6, 12, 28, 0, 36, 8, 14, 0, 12, 4, 0, 3, 0, 5, 6, 43], [10, 0, 2, 9, 0, 13, 28, 15, 11, 15, 3, 12, 8, 1, 7, 2, 6, 3, 72], [24, 0, 1, 12, 9, 29, 38, 0, 29, 9, 16, 1, 19, 12, 1, 4, 3, 2, 3, 18], [19, 1, 1, 14, 3, 19, 29, 0, 33, 18, 0, 17, 13, 0, 7, 0, 5, 4, 51], [0, 2, 9, 6, 19, 43, 1, 26, 8, 17, 1, 13, 5, 1, 7, 3, 4, 2, 67], [20, 2, 1, 13, 8, 16, 41, 24, 6, 1, 11, 20, 1, 4, 3, 2, 4, 64], [25, 0, 0, 19, 6, 16, 30, 45, 6, 13, 1, 8, 13, 0, 4, 5, 3, 3, 48], [25, 1, 2, 12, 4, 16, 32, 0, 29, 10, 19, 0, 18, 16, 0, 6, 8, 2, 6, 49], [23, 0, 2, 14, 6, 12, 40, 29, 8, 29, 1, 7, 21, 0, 11, 3, 3, 5, 42], [28, 1, 1, 12, 5, 27, 33, 46, 11, 18, 1, 14, 19, 2, 12, 5, 3, 3, 26], [29, 0, 1, 14, 5, 16, 34, 42, 9, 24, 0, 20, 12, 1, 13, 9, 6, 7, 31], [27, 2, 1, 22, 5, 17, 43, 0, 36, 11, 21, 0, 4, 9, 3, 6, 2, 4, 3, 59], [30, 3, 2, 15, 8, 22, 44, 32, 4, 15, 1, 19, 16, 2, 11, 6, 6, 6, 43], [31, 1, 3, 21, 6, 23, 32, 0, 44, 2, 19, 0, 14, 11, 0, 8, 4, 6, 2, 68], [34, 1, 2, 20, 8, 15, 43, 1, 43, 11, 22, 0, 15, 15, 0, 5, 6, 3, 74], [34, 2, 2, 19, 10, 43, 45, 0, 47, 7, 21, 0, 19, 14, 1, 8, 6, 7, 3, 65], [29, 2, 1, 14, 7, 28, 41, 0, 35, 16, 23, 0, 23, 18, 1, 10, 6, 7, 2, 118], [26, 3, 3, 10, 13, 39, 46, 2, 37, 15, 22, 1, 26, 17, 2, 10, 7, 6, 6, 95], [26, 3, 3, 16, 3, 36, 58, 1, 44, 8, 34, 2, 26, 38, 1, 7, 4, 6, 3, 70], [49, 1, 2, 20, 4, 41, 49, 0, 38, 16, 21, 2, 20, 21, 2, 7, 11, 7, 3, 117], [42, 2, 1, 19, 7, 41, 62, 0, 50, 15, 31, 0, 28, 18, 0, 14, 5, 7, 5, 107], [81, 0, 0, 18, 5, 43, 46, 0, 61, 32, 26, 0, 17, 10, 1, 12, 2, 9, 5, 87]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

