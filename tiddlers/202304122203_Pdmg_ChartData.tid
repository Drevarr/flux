created: 20230412220340000
creator: Drevarr
modified: 20230705163525422
modifier: drevarr
tags: ChartData
title: 202304122203_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Arcanophage Farra", "Nazhul Naxxremis", "Kira Dragonblaze", "Rozaalyna", "Grasszanine", "Rozaalyna", "Smol Gluvs", "Nazhul Naxxremis", "Panther B Me", "Minka Bringer", "Tribal Z", "Panther B Me", "Konztantin\u00eb", "Sofya De Nova", "Mike The Archmagus", "Rina Of Theros", "Be\u00eb", "Blancooo Padreee", "Skye Nightroad", "Be\u00eb", "Allie Mistwalker", "Jeckyll Mbs", "K\u00f4sair", "Estryl", "Smol Daddy Tika", "Lord Erin The Wise", "Inedible Plant", "Sp\u00edcy Cheese", "Xyntharos", "Mistwalker Caelon", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Reaper", "Dragonhunter", "Reaper", "Spellbreaker", "Scourge", "Reaper", "Scourge", "Scourge", "Scrapper", "Weaver", "Reaper", "Vindicator", "Weaver", "Weaver", "Scourge", "Scourge", "Berserker", "Scrapper", "Reaper", "Vindicator", "Berserker", "Berserker", "Berserker", "Berserker", "Weaver", "Vindicator", "Berserker", "Vindicator", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[176.3304, 4.4848, 45.7069, 164.5762, 176.3361, 280.7449, 322.4938, 0.0, 59.0069, 255.4133, 556.0221, 0.0, 358.8519, 29.8257, 0.0, 121.4257, 268.6667, 672.4444, 547.6349, 59.7661], [1337.4559, 243.8182, 333.7963, 376.6422, 420.4242, 713.9554, 1747.9524, 3569.8333], [566.7913, 165.2727, 94.2069, 116.8286, 245.0581, 182.5153, 495.1255, 0.0, 246.6448], [1424.9118, 1036.75, 928.2018, 20.0606, 540.6188, 285.5, 1575.9074, 1147.3651, 95.4515], [148.9159, 108.9697, 0.0, 215.0857, 147.0664, 258.6633, 263.5741, 0.0, 74.9276, 455.2933, 524.1691, 0.0, 493.8981, 667.7523, 209.2727, 188.7475, 482.6667, 516.2037, 393.0, 117.455], [363.2203, 65.1818, 32.2414, 468.0095, 130.0539, 900.9847, 445.2572, 0.0, 238.5586, 581.3467], [1244.7794, 313.0909, 1744.0185, 391.2018, 182.6212, 370.4059, 2272.2619, 1235.7593, 1528.8413, 100.9544], [640.0464, 129.303, 60.7931, 440.9, 299.2614, 245.7398, 470.0844, 0.0, 207.6017, 813.4267], [252.1681, 242.3333, 47.0345, 657.5381, 158.722, 393.8367, 648.823, 0.0, 289.6103, 881.8], [0.0, 1131.8, 1078.4412, 619.4545, 787.25, 166.0092, 27.7424, 423.7228, 1661.6667, 969.9259, 1621.2222, 290.7953], [262.4812, 822.8788, 103.8966, 1309.4095, 1088.1411, 282.9031, 162.5823, 161.2552, 273.88, 96.5221], [1247.0809, 576.6818, 811.3981, 957.7615, 142.0, 349.3515, 2588.2619, 2425.4259, 1195.0794, 227.2608], [251.6696, 127.303, 153.3276, 1002.8048, 494.7427, 404.051, 607.2654, 0.0, 207.4638, 132.0735, 1016.7273, 91.8611, 679.367], [701.302, 4046.4762, 3747.3519, 3518.4286, 386.0175], [1178.2228, 6718.1905, 3437.1852, 3811.8571, 162.248], [406.9536, 42.9394, 50.9828, 612.3, 261.8797, 538.2143, 327.7778, 0.0, 228.6828, 514.0, 561.1485, 2223.5714, 568.4444, 1309.4921, 137.2994], [589.2261, 143.8485, 187.7414, 875.4762, 413.0954, 1117.2755, 694.5123, 0.0, 303.0724, 634.8267], [176.7188, 55.5758, 134.2414, 599.0095, 281.8382, 527.4541, 337.2243, 0.0, 177.9517, 256.6, 592.4044, 278.4545, 702.0556, 418.844, 195.4545, 473.9257, 704.0476, 1383.2037, 894.3492, 196.7076], [25.6377, 465.1515, 195.4828, 712.7762, 447.5145, 646.301, 563.6605, 0.0, 176.669, 0.0, 945.0648, 131.4404, 89.0758, 319.7673, 1677.4048, 1317.7037, 871.619, 319.4503], [1915.9926, 1139.0455, 1747.2593, 507.4037, 455.4242, 584.802, 304.8095, 3587.4815, 3139.0952, 564.3801], [361.8116, 223.0909, 0.0, 234.5524, 633.0373, 1064.1173, 964.2099, 267.2362, 833.08, 1783.2721, 856.1364, 1968.9722, 858.8165], [380.2406, 0.0, 94.1207, 958.8048, 442.9793, 1091.5204, 835.7881, 337.5086, 826.2133, 254.5, 973.2315, 2591.1927, 269.2273, 666.4455, 2570.0, 1597.8519, 1960.6667, 217.4058], [985.6406, 52.1818, 70.8103, 1954.9, 386.4108, 1947.1378, 345.5329, 492.3333, 710.9257, 3475.3571, 3910.2407, 2506.1746, 371.8655], [1464.2428, 0.0, 328.7086, 1233.0267, 601.3824, 629.6818, 1460.9352, 3026.5046, 271.3636, 1460.7277, 4995.5476, 1586.0, 3714.0, 230.2982], [486.5826, 380.2121, 125.4483, 981.9524, 504.4689, 1288.4082, 811.537, 84.4043, 448.5138, 1911.3309, 448.5909, 2665.9444, 2775.6055, 198.1818, 896.6485, 1943.9762, 1586.1852, 1530.7302, 243.5708], [787.0203, 131.2424, 132.4655, 1784.5619, 513.3361, 965.3673, 999.1214, 0.0, 331.1172, 98.5867, 973.6103, 712.2727, 2429.5926, 2076.8716, 190.1212, 810.4554, 2122.5238, 1444.8704, 1666.0794, 264.7345], [450.9623, 298.1515, 238.6379, 825.5, 554.9461, 1031.9847, 990.1955, 80.9149, 419.7466, 878.4267, 2059.7794, 668.3636, 1764.0, 3663.9633, 281.5758, 1022.4851, 3823.619, 2270.7778, 833.9365, 169.6246], [655.8754, 438.7879, 148.4483, 1762.2762, 690.7344, 2306.4898, 1320.6584, 0.0, 525.0241, 2039.84, 2363.7279, 0.0, 884.0741, 0.0, 4753.0238, 2571.1111, 3072.127, 329.5123], [594.458, 520.2424, 51.9828, 1135.4429, 680.7884, 1543.6633, 1043.716, 0.0, 480.5931, 1540.1467, 3063.1471, 0.0, 811.4537, 2386.8532, 433.1667, 1274.4505, 1889.3571, 3805.9259, 4099.7619, 321.2117], [1152.3159, 378.0606, 196.931, 1874.2905, 1090.2946, 794.5255, 1679.6337, 569.5466, 1799.1467, 3409.6397, 852.4545, 1475.6574, 3579.1743, 207.3788, 1151.6683, 4214.0714, 5369.0926, 3903.0794, 518.0503], [1248.8406, 413.1515, 211.9655, 2181.2286, 472.7925, 2645.4184, 2265.0741, 0.0, 1208.469, 1960.1067, 3556.4338, 469.7273, 5949.3056, 4330.422, 513.0152, 988.3911, 5068.0476, 5336.2963, 4491.6984, 387.8222]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

