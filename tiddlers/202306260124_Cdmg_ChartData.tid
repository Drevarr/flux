created: 20230626012458000
creator: Drevarr
modified: 20230705163538117
modifier: drevarr
tags: ChartData
title: 202306260124_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Kary\u00edna", "Be\u00eb", "Mistwalker Cael", "Smol Gluvs", "Venomina The Siren", "Eibh\u00ebar", "Primal Clone", "Miphest\u00f6", "Artakama Nahid", "Permanent Dawn", "Smol Daddy Tika", "Sygaldry Verdandi", "Elonith Requiem", "Ganbaatar Bloodwine", "Elonith Requiem", "Lord Erin The Wise", "Necrotic Windrunner", "Kira Dragonblaze", "Yuwathida", "Tootsy Pop Star", "Naosiva", "Morton Saltbringer", "Regis Hawkesburne", "Be\u00eb", "Charr Surethang", "Xanvias Einzbern", "Smol Gluvs", "Rozaalyna", "Mammary Mission", "Johosh The Mighty"];
const professions = ["Vindicator", "Reaper", "Vindicator", "Reaper", "Tempest", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Weaver", "Berserker", "Firebrand", "Scourge", "Berserker", "Reaper", "Weaver", "Scourge", "Dragonhunter", "Berserker", "Scourge", "Catalyst", "Chronomancer", "Berserker", "Scourge", "Berserker", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 1.9815, 0.0, 4.7419, 38.7358, 4.384, 20.9762, 4.8286, 18.7424, 6.9091, 0.9048, 0.0, 18.6129, 23.6818, 0.0, 8.1791], [21.9009, 33.0926, 37.0778, 12.621], [0.0, 8.1667, 0.0, 4.4798, 32.3585, 14.1065, 44.8095, 0.0, 7.1818, 1.8, 4.881, 5.3333, 2.0645, 0.0, 17.7442, 0.0], [11.4685, 41.6111, 6.0556, 32.9798], [4.7477, 9.3704, 3.0667, 9.8548, 12.9623, 9.1065, 5.0714, 2.4286, 0.6061, 0.0, 31.2619, 29.0417, 6.2742, 9.8182, 0.0, 23.3284], [0.0, 24.6852, 33.2556, 8.6129, 51.283, 5.3308, 1.0238, 0.0, 1.4242, 0.7143, 22.8125, 0.6129, 15.6591, 11.3256, 0.0], [0.0, 30.6111, 3.2889, 2.8185, 3.0377, 5.8707, 35.8095, 25.9143, 34.0, 25.1905, 36.9375, 10.7581, 0.0, 10.8023, 3.4179], [0.0, 1.1481, 0.4222, 1.0, 0.0, 7.5741, 24.8333, 0.0, 28.8485, 10.3818, 46.5714, 65.0625, 26.9194, 59.7273, 1.5116, 0.0], [0.0, 29.6852, 0.7556, 5.5524, 56.5094, 5.0342, 21.3095, 0.0, 15.9697, 0.0, 7.5625, 90.7419, 36.3182, 1.7209, 0.0299], [26.7778, 0.0, 10.3024, 50.2264, 17.1901, 73.881, 0.0, 47.4091, 0.0, 35.6905], [0.0, 30.9259, 28.5333, 20.6452, 0.5849, 24.749, 124.0, 11.2286], [0.0, 45.7037, 51.6556, 22.9153, 11.4906, 12.5475, 18.0952, 0.0, 2.9697, 19.119, 0.0, 30.4032, 16.7045, 2.5465, 5.209], [33.3585, 32.0532, 28.2381, 356.4857], [0.0, 28.5926, 20.0778, 6.371, 103.5283, 18.6426, 238.7619], [5.027, 42.4444, 23.4222, 34.0927, 58.4242, 18.8364, 56.0, 18.9583, 14.4194, 15.5909, 26.6047, 32.1791], [0.0, 61.7778, 32.6444, 6.4597, 17.6604, 13.0951, 101.7381, 179.3429, 19.7273, 0.0, 37.0238, 37.75, 24.3871, 5.4318, 42.7442, 1.3284], [55.8679, 1.8365, 60.6667, 93.4857, 190.9545, 2.8364, 97.7857, 137.7917, 20.8871, 46.5455, 26.4535, 11.403], [5.1802, 211.2222, 117.0889, 52.0685, 5.1887, 15.7643], [11.0625, 289.5323, 241.6364, 2.8372, 157.5821], [28.8113, 10.3574, 341.9524, 5.1714, 25.2273, 2.4364, 330.881, 46.8542, 13.371, 25.4318, 43.0581, 6.7164], [133.1429, 183.3714, 88.9697, 0.0, 132.5, 0.2708, 135.6452, 0.8182, 75.5, 94.3134], [2.1081, 52.8519, 13.2111, 10.7782, 292.6792, 7.0304, 25.6905, 8.7714, 62.4394, 1.4909, 0.0, 97.9583, 22.1774, 44.8864, 35.8837, 70.8358], [0.0, 45.2407, 16.3111, 21.4637, 19.8868, 9.9658, 130.5, 157.4571, 35.6212, 0.0, 31.8095, 0.0, 102.5323, 0.0, 64.7674, 101.0], [200.1887, 31.0038, 429.381, 99.6286, 23.6667, 3.6182, 45.381, 25.3333, 78.5484, 48.4773, 8.186, 77.2985], [0.0, 146.6111, 14.2333, 14.9476, 54.2075, 7.1103, 6.1667, 6.0857, 95.1061, 0.0, 40.1905, 88.4792, 141.7742, 51.4091, 104.9419, 173.0299], [0.0, 85.0556, 36.4778, 33.2258, 130.3962, 10.9962, 170.4524, 363.6, 90.4394, 0.0, 242.4286, 83.4167, 111.3548, 5.3636, 56.6047], [183.9623, 24.5551, 250.8333, 16.6, 15.3333, 34.3818, 384.2143, 73.2083, 90.6935, 244.2727, 129.5581, 82.2985], [131.6792, 3.8783, 129.1429, 514.7714, 197.1667, 6.9818, 30.7143, 0.0, 144.8065, 307.6136, 113.5581, 70.3134], [93.4151, 14.3802, 435.0238, 338.5143, 84.2424, 7.6, 13.4524, 67.75, 304.3387, 0.3636, 274.7326, 68.2836], [0.3514, 238.8889, 84.5111, 13.1411, 414.9623, 97.8859, 0.0, 134.8, 140.3788, 4.7273, 148.381, 105.1458]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

