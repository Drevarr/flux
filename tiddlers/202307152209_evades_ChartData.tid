created: 20230715220952000
creator: Drevarr
tags: ChartData
title: 202307152209_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Daphne Agla\u00e9", "Gamora Titus", "Willow Starrdust", "Lucky Luprac\u00e1n", "Gamora Titus", "Permanent Dawn", "Sygaldry Verdandi", "Vee Usagii", "Necrotic Windrunner", "Dark Sidiuz", "Saiaran", "Shaca Booey", "Tribal S", "Satori Krull", "Arriasa", "Bella Sassy", "Ax Axun", "Rina Of Theros", "Be\u00eb", "Aira Draugr", "Belvyn Brightblade", "Brygdyla", "Tootsy Pop Star", "Lord Of Bones", "Vivian Vivisection", "My Birthday Girl", "Sub Train", "Newtype Khan", "Grasszanine", "Artakama Nahid", "Tika Fiery", "Gestalia Yesteryear", "Primal Clone", "Blancooo Padreee", "Koralia Danai", "Lost In Sauce", "Gokai Ramasheta", "Glorious Gluvs", "Legacy Of Mathus", "Aronorf Xideliesi", "Ateriuz", "Drevarr Moonwillow", "Xanvias Einzbern", "Crusader Siolith", "Lord Erin The Wise", "High Sorcer Baradun", "Duke Silvver", "Jmbrage Rev", "Ryvalia Fazebringer", "Mistwalker Cael"];
const professions = ["Scourge", "Dragonhunter", "Herald", "Scrapper", "Firebrand", "Weaver", "Firebrand", "Dragonhunter", "Reaper", "Scourge", "Tempest", "Berserker", "Druid", "Scrapper", "Druid", "Firebrand", "Vindicator", "Scourge", "Scourge", "Herald", "Firebrand", "Tempest", "Scourge", "Scourge", "Reaper", "Scrapper", "Firebrand", "Spellbreaker", "Spellbreaker", "Tempest", "Firebrand", "Druid", "Chronomancer", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Berserker", "Berserker", "Firebrand", "Berserker", "Scrapper", "Berserker", "Firebrand", "Weaver", "Tempest", "Vindicator", "Vindicator", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[33, 5, 6, 0, 0, 0, 0, 1, 14, 0, 1, 3, 0, 10, 0, 0, 0, 0, 0, 16, 0, 0, 4, 0, 1], [43, 53], [10, 42, 19, 19, 16, 0], [2, 26, 29, 0, 0, 1, 0, 0, 8, 0, 0, 0, 0, 16, 9, 0, 0, 0, 0, 0, 13, 1, 0, 11], [70, 21, 1, 0, 4, 1, 20], [0, 0, 7, 40, 12, 0, 0, 0, 0, 0, 10, 2, 9, 27, 0, 16], [21, 12, 33, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 4, 0, 0, 0, 21, 0, 4, 19, 0, 2], [20, 3, 0, 5, 1, 8, 0, 2, 0, 0, 9, 1, 0, 0, 0, 0, 0, 0, 54, 10, 0, 12], [13, 14, 21, 0, 0, 0, 3, 1, 27, 3, 2, 9, 0, 8, 2, 0, 0, 0, 10, 2, 0, 7, 0, 4], [20, 40, 6, 2, 0, 0, 4, 1, 33, 4, 9, 7, 0, 3, 1, 0, 1, 0, 0, 1, 0], [141], [1, 101, 44, 0, 5, 0, 2, 1, 1], [20, 9, 14, 3, 0, 0, 0, 0, 0, 2, 2, 28, 0, 13, 0, 0, 0, 0, 0, 17, 0, 3, 39, 0, 7], [13, 87, 15, 0, 4, 12, 6, 20], [7, 38, 9, 4, 0, 0, 1, 0, 0, 1, 0, 0, 0, 3, 1, 0, 0, 0, 11, 0, 28, 46, 0, 12], [2, 34, 18, 0, 2, 0, 0, 0, 0, 0, 0, 41, 0, 2, 0, 0, 0, 0, 5, 0, 11, 53, 0, 2], [14, 31, 23, 1, 3, 0, 4, 0, 13, 10, 0, 5, 0, 23, 1, 0, 0, 0, 0, 9, 0, 6, 18, 0, 13], [13, 24, 43, 1, 0, 1, 6, 1, 15, 7, 3, 4, 0, 8, 0, 0, 0, 0, 0, 8, 0, 18, 26, 0, 0], [11, 7, 29, 0, 2, 0, 1, 0, 13, 5, 4, 14, 0, 4, 0, 0, 0, 0, 0, 15, 0, 17, 57, 0, 6], [11, 96, 41, 9, 9, 0, 3, 1, 20], [52, 81, 24, 3, 7, 0, 0, 37], [0, 40, 33, 0, 1, 0, 14, 0, 16, 0, 2, 0, 0, 5, 7, 0, 0, 0, 0, 2, 1, 49, 37], [18, 9, 65, 16, 0, 0, 0, 0, 5, 3, 0, 0, 0, 11, 0, 0, 0, 0, 4, 0, 57, 19, 0, 2], [15, 20, 33, 1, 0, 0, 5, 0, 4, 3, 1, 43, 17, 0, 0, 0, 0, 0, 18, 0, 16, 34, 1, 3], [34, 36, 0, 2, 10, 0, 17, 1, 39, 13, 12, 0, 1, 9, 18, 3, 1, 0, 23, 0, 5], [25, 44, 32, 1, 0, 0, 13, 1, 3, 4, 0, 20, 0, 1, 0, 0, 13, 0, 37, 28, 0, 16], [17, 22, 34, 18, 3, 1, 15, 0, 6, 1, 0, 13, 0, 19, 0, 0, 0, 0, 0, 17, 2, 7, 57, 0, 23], [30, 77, 72, 2, 0, 0, 2, 1, 12, 6, 13, 2, 0, 5, 4, 2, 0, 0, 0, 0, 0, 3, 26, 0, 6], [0, 150, 5, 10, 0, 0, 0, 31, 0, 27, 34, 0, 11], [6, 83, 65, 0, 0, 0, 0, 0, 3, 14, 0, 26, 0, 0, 0, 0, 0, 0, 0, 23, 45, 0, 5], [14, 44, 39, 0, 3, 0, 9, 0, 22, 0, 1, 24, 0, 15, 2, 0, 0, 0, 0, 13, 0, 38, 64, 0, 1], [23, 50, 50, 6, 1, 0, 2, 1, 19, 0, 0, 17, 9, 1, 0, 0, 0, 0, 28, 0, 33, 57, 0, 4], [31, 71, 23, 1, 1, 0, 8, 0, 12, 0, 14, 57, 10, 5, 0, 0, 0, 12, 0, 5, 48, 0, 10], [58, 60, 46, 2, 0, 0, 2, 0, 11, 2, 5, 32, 0, 14, 0, 0, 0, 0, 2, 0, 15, 49, 0, 27], [16, 60, 34, 0, 4, 0, 8, 0, 21, 8, 0, 65, 1, 4, 0, 0, 0, 8, 2, 43, 61, 0, 11], [32, 80, 81, 32, 10, 1, 14, 0, 91, 18], [25, 1, 50, 0, 91, 18, 43, 14, 1, 57, 41, 9, 11], [20, 84, 74, 26, 5, 0, 3, 2, 23, 6, 3, 33, 12, 2, 1, 0, 0, 4, 0, 0, 47, 0, 22], [35, 65, 65, 17, 16, 0, 14, 1, 8, 1, 12, 62, 0, 15, 3, 0, 0, 0, 0, 33, 1, 5, 7, 1, 18], [25, 55, 80, 0, 4, 0, 0, 1, 14, 10, 12, 23, 0, 10, 2, 1, 0, 0, 0, 42, 0, 24, 77, 0, 7], [16, 62, 45, 19, 14, 0, 5, 0, 36, 7, 14, 37, 0, 17, 10, 0, 0, 0, 10, 1, 6, 107, 0, 14], [32, 80, 40, 4, 0, 0, 8, 1, 27, 2, 6, 36, 23, 1, 3, 0, 29, 0, 12, 111, 0, 7], [24, 63, 78, 0, 5, 1, 2, 2, 20, 1, 9, 46, 0, 41, 0, 0, 0, 0, 0, 27, 0, 33, 61, 0, 10], [27, 75, 93, 15, 16, 0, 2, 4, 19, 5, 1, 26, 0, 14, 3, 0, 0, 0, 29, 0, 31, 41, 0, 53], [14, 147, 83, 1, 4, 0, 29, 2, 35, 0, 18, 20, 0, 34, 1, 0, 1, 0, 1, 0, 18, 63], [38, 104, 32, 4, 10, 0, 15, 0, 15, 0, 5, 41, 0, 25, 22, 0, 2, 0, 37, 0, 59, 59, 0, 7], [0, 69, 40, 23, 0, 23, 2, 23, 10, 23, 69, 0, 15, 1, 9, 0, 0, 45, 0, 49, 56, 0, 28], [16, 0, 53, 15, 11, 103, 0, 50, 11, 2, 0, 0, 37, 2, 48, 103, 0, 76], [21, 137, 54, 14, 24, 0, 24, 0, 17, 7, 6, 72, 36, 8, 0, 0, 0, 19, 0, 35, 139, 0, 25], [69, 218, 80, 23, 3, 4, 7, 2, 36, 0, 20, 76, 0, 36, 0, 2, 1, 0, 0, 24, 0, 18, 113, 1, 24]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

