created: 20230426221022000
creator: Drevarr
modified: 20230705163526882
modifier: drevarr
tags: ChartData
title: 202304262210_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Viral Marketing", "Raelyn Sunray", "Aira Draugr", "Grasszanine", "Sassy Daddy Demon", "Blancooo Padreee", "Solo Bloodborn", "Lucas Ryn", "Ryvalia Fazebringer", "Mistwalker Caelon", "Khailerian", "Sister Elon\u00edth", "Xyntharos", "Daddys Lil Orchid", "Sygaldry Verdandi", "Zaylen Harker", "Jupi Jupi Jupi", "Bella Sassy", "Johosh The Great", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Herald", "Spellbreaker", "Vindicator", "Spellbreaker", "Spellbreaker", "Firebrand", "Chronomancer", "Vindicator", "Vindicator", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.1325, 2.9779, 8.2944, 13.9267, 30.1938], [29.6946, 15.6397, 2.1869, 0.7603, 4.5696, 2.6602, 8.8259, 0.6821], [0.0, 26.7618, 1.6638, 1.9819, 1.1405, 1.0752, 4.6162, 28.8002], [16.1304, 8.9845, 4.3738, 0.0, 0.0, 0.0, 25.5486, 4.7746, 8.5869, 0.0, 3.353, 1.833, 0.0, 1.685, 21.9467], [1.8518, 34.0938, 7.8753, 2.1185, 3.0413, 5.8752, 3.6773, 43.6649], [2.6936, 16.497, 8.2081, 7.1757, 2.1542, 2.688, 4.7726, 22.297, 0.0, 9.1594, 0.0, 4.4161, 1.833, 0.0, 0.0, 20.7496], [0.0, 21.6294, 8.2081, 2.5286, 0.0, 2.2656, 5.555, 16.7227, 4.4822, 14.6931, 0.0, 3.5983, 4.1548, 0.0, 0.0, 25.5379], [0.205, 0.7603, 2.6496, 7.3546, 19.0453, 4.9694, 21.3718, 0.2967, 6.3788, 11.3646, 0.0, 2.4592, 35.9127], [0.0, 31.8942, 17.5254, 7.3807, 0.0, 2.0352, 4.6162, 5.5742, 8.185, 5.7246, 0.0, 1.5538, 8.554, 0.0, 1.8671, 29.5282], [1.2987, 30.4278, 14.0868, 0.8884, 3.4848, 4.032, 2.1125, 17.6518, 1.7539, 7.442, 0.0, 4.2526, 11.2424, 0.0, 0.0, 28.3311], [0.1924, 18.33, 7.2098, 0.0, 0.0, 0.0, 4.9291, 35.768, 7.308, 15.0748, 0.0, 3.5165, 7.332, 0.0, 0.0, 53.071], [13.1544, 32.6302, 3.2637, 16.1107, 22.607, 2.079, 5.647, 66.239], [1.0101, 45.4584, 16.0834, 4.7838, 2.9779, 5.4912, 11.5795, 67.8199, 15.2981], [3.9682, 34.827, 20.4093, 8.8159, 5.3856, 3.3408, 12.5966, 63.6392, 7.4054, 24.2341, 2.8879, 5.8064, 18.2078, 0.0, 0.0, 43.4943], [3.1505, 59.3892, 18.08, 4.7838, 3.6749, 4.3008, 7.1981, 43.6649, 3.313, 28.8138, 5.0241, 7.1966, 11.7312, 2.3364, 3.461, 66.239], [6.0125, 49.491, 17.1926, 7.5174, 1.4573, 2.7648, 12.049, 66.8909, 13.8365, 32.4394, 3.4022, 12.5123, 14.9084, 1.9602, 6.0568, 64.2438], [5.0505, 68.1876, 32.1668, 8.7475, 6.5894, 7.7568, 11.6578, 71.0716, 14.2262, 39.4997, 1.9187, 15.0475, 21.385, 0.0, 7.2409, 77.0128], [5.6517, 67.0878, 26.6208, 9.4993, 9.1238, 7.8336, 15.4133, 79.4329, 14.1288, 40.0722, 4.3318, 13.0848, 25.5398, 3.3858, 6.831, 94.1711], [7.2871, 71.1204, 26.0662, 6.0823, 3.1046, 3.3024, 11.5013, 90.5814, 11.5954, 46.9417, 0.2374, 22.1624, 26.884, 2.1978, 7.423, 90.1808], [7.1909, 97.8822, 29.5047, 11.2078, 10.3277, 12.288, 20.4206, 103.588, 21.047, 54.0021, 3.1648, 20.7721, 24.0734, 4.5144, 5.6925, 104.9449]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

