created: 20230417215912000
creator: Drevarr
modified: 20230705163525871
modifier: drevarr
tags: ChartData
title: 202304172159_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Aira Draugr", "Belvyn Brightblade", "Newtype Khan", "Grasszanine", "Fribble Bibble", "Black Raspberry Pie", "Ryvalia Fazebringer", "Smol Daddy Tika", "Venomina The Siren", "Zadie Miststep", "Drevarr Moonwillow", "Miphest\u00f6", "Sub Train", "Ark Darkness", "Mettrik Milliohm", "Sygaldry Verdandi", "Gavann", "Solus Sanctus", "Koralia Danai", "Arcanophage Farra", "Johosh The Great", "Bella Sassy"];
const professions = ["Tempest", "Herald", "Firebrand", "Spellbreaker", "Spellbreaker", "Scrapper", "Chronomancer", "Chronomancer", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[144.5098, 110.7414, 41.6928, 0.0, 46.552, 16.2435, 65.1705, 60.0867, 0.0, 0.0, 15.9255, 37.3402, 0.0, 5.2061, 65.0122, 58.8265, 48.0246, 21.384, 89.0462, 55.223], [58.3338, 37.2601, 34.4956, 0.0, 50.1682, 0.0, 47.4438, 606.2868, 25.528, 10.3292, 0.0, 14.1414], [1.9737, 0.0, 147.844, 0.0, 188.1306, 0.0, 297.1007, 184.0482, 84.0693, 46.9812, 84.6485, 72.1594], [14.483, 73.656, 50.8466, 314.48, 0.0, 106.5064, 180.9011, 26.6452, 0.0, 17.1725, 34.5127, 0.0, 57.1473, 14.8834, 0.0, 7.8439, 0.0, 15.4144, 99.7753, 0.0, 0.0, 0.0, 38.1888, 0.0, 0.0, 0.7438, 0.0, 59.8752, 0.0, 21.805], [0.0, 0.0, 62.6695, 407.8486, 63.308, 43.2438, 4.6364, 22.8659, 6.7649, 11.9246, 0.0, 18.0029, 0.0, 0.0, 4.6467, 10.6061, 83.5734, 88.3705, 0.0, 0.0, 186.7, 46.6502, 90.0072, 2.4235, 21.4723, 0.0, 0.0, 0.0, 0.0, 3.087], [99.6402, 8.7036, 511.6688, 36.3462, 0.0, 52.7877, 8.7048, 73.1423, 0.0, 5.2706, 134.5805, 8.5272, 25.9617, 198.3618, 50.8047], [12.298, 6.3017, 4.7962, 308.209, 0.0, 149.1834, 178.7448, 33.8512, 35.1942, 160.8552, 21.5943, 0.0, 147.2209, 1.4544, 0.0, 32.3988, 37.3601, 5.61, 0.0, 0.0, 0.0, 0.0, 8.711, 12.1014, 40.8408, 15.5188, 3.04, 0.0, 0.0, 0.4905, 8.33], [0.0, 0.0, 0.0, 0.0, 53.2532, 12.1805, 1.1731, 0.0, 296.7322, 0.0, 0.0, 139.1078, 24.337, 67.9522, 0.0, 13.7891, 400.2741, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 214.0482, 118.235, 0.0, 0.0, 0.0, 0.0], [78.5506, 41.479, 205.2414, 60.0324, 147.9359, 61.4196, 73.2245, 92.6831, 109.6992, 68.8176, 126.023, 102.7971, 30.8524, 175.3279, 113.2635], [254.557, 160.7278, 88.5273, 126.9139, 38.5263, 104.4229, 87.1034, 36.2426, 153.2453, 114.1631, 190.3356, 153.4102, 258.2687, 1.472, 0.0, 46.0762, 28.5525, 118.3934, 131.6914, 56.4656, 51.6173, 31.2206, 39.9081, 54.047], [0.0, 0.0, 140.2738, 43.1157, 796.4195, 0.0, 170.6337, 15.619, 201.2636, 143.3176, 117.6059, 62.6044, 117.7294, 95.3117, 59.8525, 60.7698, 91.8049, 71.4915, 0.0, 0.0, 87.8327, 93.0758, 19.7802, 41.3794, 69.8941, 44.4352, 79.7722, 137.1298, 47.2208, 19.1345], [0.0146, 53.8538, 132.0079, 63.5918, 1039.3635, 155.7377, 9.0334, 131.662, 23.7822, 78.6352, 41.4687, 18.6754, 133.6003, 36.0691, 10.3165, 137.1142, 101.1899, 231.2883, 100.6063, 58.9632, 26.5559, 41.808, 90.882, 250.3406, 83.8253, 91.1665, 84.9779, 41.8349, 17.6131, 21.8295], [477.9911, 2.4662, 523.2965, 0.0, 287.7907, 241.6116, 104.712, 94.9767, 156.5185, 115.3824, 2.9458, 115.442, 167.9769, 80.2703, 226.2702, 9.0353, 0.0, 28.4557, 60.2285, 0.0, 80.1557, 173.9613, 129.1013, 63.0634, 223.7972, 160.4995], [77.216, 115.5285, 651.0248, 4.5896, 288.5355, 201.4157, 261.5924, 13.6196, 175.079, 47.9661, 261.3971, 173.0251, 9.4483, 161.6956, 295.2495, 19.5564, 50.3764, 29.4916, 61.4141, 96.0783, 46.2758, 27.9693, 378.6974, 26.3939, 1.0025, 14.3707, 8.3981, 75.803, 28.665], [562.3015, 35.0451, 315.0504, 24.2445, 227.8529, 147.9825, 53.9461, 246.1368, 217.9888, 226.5955, 27.3509, 62.8792, 309.1998, 119.0685, 105.8361, 0.0, 103.4875, 135.1645, 122.8282, 117.9765, 275.2939, 148.8375, 176.8998, 61.1672, 137.363, 98.6777, 112.7735], [103.8959, 65.4533, 1064.6798, 101.2647, 252.3382, 300.9579, 156.4639, 234.5728, 188.2041, 170.9581, 45.3499, 271.9975, 287.2925, 70.51, 311.7797, 133.0673, 130.9265, 38.6284, 106.8619, 52.7885, 52.9651, 118.5597, 87.516], [55.6291, 372.0446, 192.1842, 412.9583, 20.9334, 340.3736, 119.1243, 107.6981, 166.9332, 56.6058, 195.7628, 51.4879, 222.2527, 133.223, 7.6243, 145.4109, 197.8841, 130.1837, 244.9089, 361.6142, 82.0157, 288.5584, 9.5846, 0.6075, 189.9322, 167.1743, 172.4045, 28.0449, 99.3773, 169.0407, 46.305], [1074.8993, 67.0472, 91.6104, 131.3631, 179.4223, 124.117, 85.2845, 80.5295, 12.276, 49.271, 264.4099, 20.9669, 200.5315, 503.644, 167.7236, 80.6805, 328.1634, 155.0626, 253.0292, 35.2685, 96.3495, 251.1485, 0.0, 84.3427, 45.6417, 204.5088, 189.2845, 122.7205], [104.2552, 24.0068, 337.9383, 32.2362, 198.2658, 245.0091, 159.9272, 171.6813, 69.7309, 237.2698, 29.3436, 39.4405, 60.1152, 88.163, 111.2217, 574.0644, 199.8632, 290.6582, 183.7004, 133.7861, 163.1755, 93.4003, 177.7302, 394.4952, 175.3504, 188.4128, 219.6667, 100.3493, 136.8913, 114.2925], [22.5711, 263.6885, 37.5313, 1236.32, 35.8811, 361.3025, 99.5422, 154.8439, 197.2544, 32.7839, 48.2719, 46.4429, 137.3312, 79.7496, 11.0352, 158.2426, 695.4129, 95.3702, 52.9832, 203.4461, 79.032, 214.2664, 17.5219, 92.6802, 414.8707, 183.6059, 104.0378, 130.6012, 85.1861, 128.2854, 42.7035], [213.1114, 100.1169, 627.5665, 4.6816, 286.4501, 315.4696, 269.6362, 330.3262, 217.3454, 332.0936, 67.1695, 281.828, 167.5954, 89.2574, 91.825, 289.8987, 231.426, 249.6663, 228.8768, 111.9946, 201.0895, 107.303, 120.1878, 362.3611, 144.5907, 108.4684, 62.322, 73.3277, 117.0487, 69.8495], [62.3251, 290.4502, 45.4467, 1096.964, 22.9315, 316.3166, 208.2344, 257.1794, 249.9417, 52.7318, 228.1734, 28.6229, 179.8511, 246.7147, 164.0402, 315.4106, 261.4684, 353.5473, 549.0202, 92.0146, 97.2505, 51.9917, 322.1694, 696.2683, 242.109, 224.7307, 132.3976, 88.6075, 237.3526, 6.272], [57.9683, 2.7513, 474.9994, 115.3776, 1611.6521, 523.8923, 300.4917, 263.1006, 190.5487, 223.9947, 217.3571, 76.6973, 350.5824, 318.7075, 111.9038, 906.1007, 257.2216, 227.9647, 235.4756, 83.2766, 442.599, 96.3955, 20.9466, 580.3882, 217.5012, 200.4757, 62.2487, 161.1965, 111.9209, 48.51]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

