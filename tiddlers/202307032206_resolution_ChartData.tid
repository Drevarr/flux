created: 20230703220627000
creator: Drevarr
modified: 20230705163541503
modifier: drevarr
tags: ChartData
title: 202307032206_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Gavann", "Air One Com", "Erma Starr", "Drumina", "Il Dim Snail Il", "Arriasa", "Smol Daddy Tika", "Sub Train", "Zaylen Harker", "Crusader Siolith", "Mmathuss", "Koralia Danai", "Gabe Malhorn", "Sister Elon\u00edth", "Solus Sanctus"];
const professions = ["Spellbreaker", "Firebrand", "Firebrand", "Guardian", "Druid", "Firebrand", "Druid", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.7565, 0.0, 8.7307, 0.0, 0.0, 0.0, 381.876, 0.0, 0.0, 0.0, 6.1953, 2.53, 0.0, 11.5225, 0.0, 0.0, 28.5947, 9.1546, 20.1392, 42.863, 45.239, 32.5028, 32.1262, 33.3267, 71.4712], [652.1085, 43.9383, 22.8988, 0.0, 77.0666], [28.3613, 60.6816, 37.2832, 20.5162, 50.148, 63.8299, 65.8156, 63.0511, 99.3643, 111.1387, 80.4536, 36.8562, 36.9594, 228.4577], [166.8446, 4.06, 55.836, 0.0, 0.0, 0.0, 584.2545, 51.6558, 74.3006, 32.5639, 52.3535], [33.721, 52.8242, 37.1952, 27.8456, 0.0, 323.0955, 65.1357, 59.2356, 23.7345, 27.6628, 14.7053, 0.0, 24.7486, 10.2028, 12.1157, 16.128, 27.5444, 30.1303, 22.3463, 21.8592, 59.7643, 24.2128, 24.4825, 12.9344, 95.3684], [42.4291, 5.9377, 52.6212, 17.9626, 0.0, 17.7837, 715.2285, 23.9757, 33.4443, 10.8401, 24.0869, 146.338], [91.1578, 0.0, 49.7786, 76.5072, 0.0, 0.0, 555.8505, 60.5052, 46.0989, 0.0, 0.0, 17.7348, 7.2358, 0.0, 0.0, 4.2312, 11.4156, 22.9029, 9.7324, 0.5267, 22.7621, 13.3426, 26.5866, 40.5266, 9.9898, 73.4565], [122.9333, 54.5162, 101.6064, 35.6891, 0.0, 649.347, 59.4762, 71.4684, 85.7153, 35.6814, 75.1944, 17.71, 48.1234, 14.9996, 27.0797, 11.8692], [70.6843, 0.0, 0.0, 0.0, 0.0, 530.997, 23.9757, 0.0, 0.0, 32.7557, 148.2782, 82.9081, 27.6899, 44.5419, 70.8365, 43.218, 70.9786, 134.1644, 121.7383, 192.3134, 202.2821, 149.0381, 292.9194, 64.4794, 370.2235], [336.2832, 50.1509, 55.6416, 34.7663, 1171.2705, 122.7597, 144.6843, 191.9306, 161.0432, 96.5954, 103.9676, 74.6933, 79.0925, 91.1988, 68.4037, 133.9866, 57.985, 65.6726, 173.749, 167.6268, 122.261, 181.7696, 412.0621], [270.8794, 155.3458, 159.3864, 169.0416, 96.347, 0.0, 1669.9185, 93.2789, 346.7963, 207.9285, 77.8835, 77.1144, 115.2486, 52.1051, 70.7952, 48.8124, 86.6989, 172.4272, 111.6562, 146.3141, 124.3704, 90.3505, 118.4392, 109.1718, 366.6206], [288.481, 93.918, 129.5395, 146.1197, 104.1633, 50.0188, 1914.903, 139.1723, 105.7563, 191.3187, 163.0516, 145.3991, 51.5678, 117.9155, 44.1902, 118.7676, 199.316, 111.7666, 123.9203, 181.764, 211.2264, 277.4059, 250.463, 191.319, 389.1943], [371.4864, 89.6854, 123.8882, 392.3338, 82.397, 41.4691, 1965.399, 219.0226, 174.6937, 126.0159, 64.9541, 96.0949, 86.8296, 46.1497, 106.1392, 61.8168, 118.8432, 211.7161, 89.3688, 98.0126, 200.867, 183.4694, 182.7096, 198.4708, 99.1546, 575.3723], [245.4034, 18.9703, 128.5243, 286.4938, 130.3806, 35.5786, 2298.357, 320.4306, 362.5242, 263.4839, 13.7308, 213.3968, 141.4776, 103.0387, 136.9759, 87.6787, 137.5668, 159.7103, 105.3228, 108.8723, 207.2822, 191.4158, 177.4872, 185.4917, 148.8557, 481.7686], [497.1989, 89.5433, 344.7281, 352.7194, 104.869, 2238.393, 215.9871, 130.945, 103.1993, 46.409, 165.128, 124.8808, 80.9023, 122.357, 113.6438, 141.1452, 195.5892, 108.0336, 121.9139, 236.9347, 239.316, 164.3035, 195.3301, 208.8218, 390.3708], [334.8936, 267.8436, 252.4435, 175.3787, 0.0, 3021.081, 120.393, 96.657, 75.0938, 21.672, 118.2209, 106.2853, 93.5766, 109.9462, 66.5846, 177.282, 94.288, 154.9178, 178.8956, 173.6381, 262.8595, 159.0081, 242.2517, 117.9232, 556.6221]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

