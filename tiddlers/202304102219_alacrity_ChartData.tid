created: 20230410221909000
creator: Drevarr
modified: 20230705163525110
modifier: drevarr
tags: ChartData
title: 202304102219_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Ryvalia Fazebringer", "Venomina The Siren", "Asorlia", "High Sorcer Baradun", "Tegan Parker", "Eibh\u00ebar", "Zadie Miststep", "Mac Chiato", "Black Raspberry Pie"];
const professions = ["Scrapper", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[13.8185, 8.3923, 66.5665, 116.1094, 154.6483, 13.0401, 22.8614, 5.4067, 34.8552, 16.1181, 18.4985, 16.8756, 19.3687, 15.7976, 5.6477, 5.711, 37.8432, 8.1026, 51.7964, 33.8129, 21.8688, 81.9683], [0.0, 49.8575, 39.4984, 105.1008, 55.5846, 28.1232, 35.7773, 51.7752, 0.0, 35.8249, 0.0, 35.9856, 64.1626, 0.0, 0.0, 66.4803, 0.0, 0.0, 78.1178, 19.5533, 107.5894], [910.6234, 84.4331, 73.967, 129.6346, 142.128, 1.5382, 95.55, 49.6076, 110.7792, 109.7933, 172.2007, 85.7525, 91.9103, 95.4397, 153.2035, 172.3369, 73.3891, 182.6227], [63.121, 143.5087, 182.3819, 1501.44, 46.114, 124.1654, 61.2902, 85.3783, 96.3144, 39.102, 99.2426, 108.0617, 48.781, 11.1132, 63.6882, 0.0, 145.1172, 166.3119, 76.8624, 199.4306], [86.3338, 368.9455, 383.3201, 1910.5824, 114.5202, 228.7354, 192.9101, 111.4351, 72.7709, 60.5052, 65.1974, 8.8406, 0.0, 5.5566, 37.8055, 0.0, 70.5345, 12.3173, 293.2462], [92.5834, 159.9483, 690.0293, 1833.2582, 30.1599, 182.4077, 88.2816, 103.0766, 0.0, 129.1836, 43.7276, 65.5855, 55.0182, 109.0789, 0.0, 51.5392, 0.0, 77.8475, 100.452, 48.6581, 177.4214], [101.9578, 274.6205, 619.5153, 1974.3936, 89.5327, 126.887, 119.2435, 143.2447, 15.5329, 86.2243, 49.392, 106.4398, 108.8212, 35.9905, 30.848, 60.8208, 1.0128, 132.2227, 117.4363, 60.3965, 147.5141], [56.9509, 171.5069, 400.3422, 824.9601, 1945.1155, 86.7643, 75.479, 84.0154, 105.6146, 128.0115, 14.3472, 47.8044, 116.8111, 127.5725, 43.9898, 48.8981, 12.5954, 114.2579, 114.9952, 93.4891, 176.7472], [170.5248, 506.7948, 76.3459, 2686.8269, 99.8045, 135.4752, 147.5021, 73.0267, 82.9814, 210.4138, 92.1004, 40.5014, 63.1296, 209.6308, 73.228, 121.151, 129.5643, 126.1908, 161.845, 30.0053, 123.0006], [1.1068, 327.8362, 695.31, 950.6127, 2078.7437, 283.2408, 137.1082, 159.5405, 130.6224, 31.6008, 166.6902, 33.2808, 163.3817, 118.3605, 129.1228, 66.4146, 73.1962, 33.3974, 102.6311, 109.8531, 158.9669, 240.4147]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

