created: 20230729231435000
creator: Drevarr
tags: ChartData
title: 202307292314_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Drevarr Moonwillow", "Sub Train", "Gabe Malhorn", "Aronorf Xideliesi", "Gestern Yesteryear", "Mmathuss", "Sygaldry Verdandi", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4.9875, 13.5864, 0.0, 8.8937, 11.9962, 91.9226, 0.0, 14.6405, 9.8532, 19.0366, 28.8956, 0.0, 197.225, 45.7263, 0.0, 0.0], [9.03, 59.0298, 0.0, 0.0, 41.1346, 134.8994, 44.4752, 166.145, 24.472, 0.5925, 54.254, 0.2294, 315.56, 67.9047, 23.063, 35.0041], [76.7782, 210.231, 95.1832, 59.7117, 54.6027, 0.0, 447.58, 48.5096, 16.1357, 28.6303], [0.0, 67.6434, 17.8216, 81.9602, 46.4851, 89.4156, 42.3685, 193.6165, 46.1748, 0.0, 40.0055, 0.0, 383.18, 91.2759, 24.7104, 0.9752], [42.0912, 12.1171, 98.1376, 33.3984, 68.0466, 26.0498, 112.189, 101.3656, 93.3027, 70.9935, 164.0784, 1051.7325, 173.7599, 68.1754, 66.8039], [33.795, 98.3016, 0.0, 126.3522, 58.2086, 271.9476, 151.2826, 294.784, 122.038, 42.9934, 72.6376, 60.2357, 878.255, 79.2147, 37.7626, 99.161], [4.4625, 16.0506, 0.0, 297.8629, 52.3128, 170.7134, 42.3685, 406.315, 32.0712, 23.287, 255.9253, 140.4257, 963.1825, 79.524, 0.0], [216.1972, 38.2219, 453.033, 149.0216, 109.7118, 203.166, 107.9999, 1432.9, 191.697, 55.799, 146.1119], [15.2025, 147.3414, 0.0, 438.3224, 44.3381, 185.039, 177.5998, 570.9795, 189.5936, 108.5269, 262.4518, 75.1727, 1344.7525, 123.704, 42.1133, 34.4469], [13.5225, 135.6864, 39.029, 290.8093, 55.1074, 516.6766, 107.543, 537.257, 390.9724, 158.9392, 223.7416, 175.4031, 1656.69, 205.6137, 147.671, 92.0905]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

