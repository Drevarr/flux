created: 20230318225613000
creator: Drevarr
modified: 20230705163522547
modifier: drevarr
tags: ChartData
title: 202303182256_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "High Sorcer Baradun", "Primal Clone", "S\u00edzz", "Mylania Svenson", "Hyde En Sikh", "Gavann", "Boysto Yardbringer", "Zadie Miststep", "Blanco Padre Guard", "\u00c1rkantor", "Aronorf Xideliesi", "Zaylen Harker", "Drevarr Moonwillow", "Bella Sassy", "Koralia Danai", "Johosh The Great"];
const professions = ["Firebrand", "Tempest", "Chronomancer", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Vindicator", "Tempest", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 129.8506, 89.3236, 302.9299, 52.6361], [32.4625, 125.496, 13.8818, 123.5942, 76.8998, 18.6275, 18.5472, 49.7724, 57.8151, 23.9871, 34.7715, 13.5432, 18.4606, 18.468, 18.4334, 0.0, 29.3192, 24.948, 13.8829, 2.0671, 0.0], [46.2637, 44.9366, 0.0, 37.9517, 85.801, 82.3262, 19.7532, 0.0, 50.1984, 50.6604, 28.7109, 55.1965, 33.4096, 24.5045, 42.0974, 0.0, 24.4555, 17.3402, 31.3447, 25.2153, 55.6621, 19.6504, 35.4888], [261.1512, 149.3476, 196.3718, 74.8915, 183.0805, 60.8256, 21.7138], [56.754, 108.0547, 62.4104, 125.3993, 153.5639, 235.0515, 140.9214, 173.0916], [26.8604, 63.2016, 18.2168, 35.7356, 102.8736, 121.7839, 0.0, 29.7778, 55.8432, 86.4024, 79.2106, 55.7194, 102.9101, 33.4066, 40.6314, 0.0, 19.7064, 20.2734, 32.0404, 55.6429, 59.4918, 23.3763, 50.2535], [76.0179, 131.7254, 0.0, 104.9598, 277.8317, 267.7541, 0.0, 45.7382, 87.2256, 202.1976], [15.953, 75.9024, 11.4313, 43.5229, 320.5862, 70.5432, 0.0, 4.5968, 53.424, 159.9288, 125.5414, 13.072, 59.6691, 19.895, 0.0, 13.5619, 25.539, 0.0, 72.171, 115.1974, 36.1108, 56.2129], [67.7446, 85.9421, 48.816, 20.1609, 349.7702, 159.7687, 19.031, 14.2128, 69.0864, 226.3048, 32.4186, 58.7754, 44.9222, 54.9032, 32.2272, 0.0, 13.0051, 43.8049, 116.5428, 137.8278, 45.7063, 73.9908], [21.4438, 126.6451, 0.0, 60.9752, 283.0848, 148.5283, 0.0, 27.0535, 61.8912, 120.0132, 146.1503, 89.8046, 64.3082, 33.2006, 101.8776, 20.3904, 31.7, 78.3823, 68.6961, 144.0947, 54.4342, 32.576], [18.6984, 65.6208, 2.0851, 145.0354, 386.3962, 141.474, 0.0, 67.4016, 162.948, 101.2354, 38.3336, 78.0976, 65.9102, 96.7014, 34.8516, 43.9171, 51.7967, 114.0031, 88.8327, 144.0512, 39.0711, 62.7415], [47.6364, 156.2198, 41.0793, 145.6202, 341.5987, 188.7612, 0.0, 0.0, 132.6192, 178.6656, 186.2669, 138.8246, 83.4176, 55.9627, 64.2981, 0.0, 21.2731, 18.2943, 102.7501, 108.4347, 153.495, 69.0316, 82.8965], [90.6724, 169.5859, 39.2869, 147.467, 315.479, 109.4582, 0.0, 114.6768, 156.4212, 169.5123, 144.3476, 116.2739, 58.2754, 86.7082, 6.2208, 30.7714, 9.7538, 109.3178, 164.7014, 131.9962, 70.7414, 80.3185], [98.5376, 160.9978, 87.5725, 75.6265, 380.8512, 165.6602, 71.5151, 9.3153, 140.6832, 155.8884, 277.0405, 48.8239, 143.3421, 57.5942, 109.7765, 36.0612, 56.6222, 32.2301, 54.1576, 139.1296, 125.5987, 42.695, 105.529], [117.1618, 239.9846, 0.0, 27.5481, 409.7434, 159.2261, 0.0, 49.9902, 120.3888, 108.114, 285.4571, 99.7394, 112.6563, 77.8061, 77.3731, 57.8772, 30.3307, 29.662, 90.0445, 155.3013, 139.351, 106.5715, 133.2839], [109.1853, 177.5693, 154.4233, 446.6611, 149.9237, 0.0, 88.2672, 260.2284, 236.6879, 80.4582, 149.6835, 64.1837, 26.9878, 37.1196, 21.6648, 49.4524, 73.6151, 136.6349, 253.9392, 112.6198, 143.3279], [89.4852, 302.4605, 39.5064, 182.7716, 568.0666, 341.7082, 22.3232, 12.5939, 158.2896, 301.3428, 233.1482, 214.5442, 294.3024, 86.8507, 196.4846, 18.1548, 86.4144, 89.1157, 169.5725, 217.4931, 355.5584, 131.6577, 159.6326]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

