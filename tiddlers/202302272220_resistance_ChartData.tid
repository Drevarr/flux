created: 20230227222028000
creator: Drevarr
modified: 20230705163520434
modifier: drevarr
tags: ChartData
title: 202302272220_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Ark Darkness", "Sp\u00edcy Cheese", "Gavann", "Grumyaar Lordsbane", "Primal Clone", "Black Raspberry Pie", "Newtype Khan", "Eibh\u00ebar", "Kahless The Drunk", "Ryvalia Fazebringer", "What Charr U Saying", "Jeckyll Mbs", "Blanco Padre Guard", "Smol Daddy Tika", "Xanvias Tseli", "Zaylen Harker", "Koralia Danai", "Sygaldry Verdandi", "Bella Sassy", "Arcanophage Farra", "Ravioli Fetabringer"];
const professions = ["Firebrand", "Berserker", "Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Spellbreaker", "Chronomancer", "Firebrand", "Chronomancer", "Berserker", "Berserker", "Firebrand", "Berserker", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[17.2975, 18.965, 24.7375, 11.7965, 9.9029, 0.0, 9.849, 0.0, 14.8176, 0.0, 184.973, 0.0, 0.0, 14.4126, 0.0], [0.0, 51.081, 32.7869, 14.9871, 15.3023, 0.0, 0.0, 6.4239, 0.0, 0.0, 0.0, 14.9184, 61.6577, 0.0, 0.0, 0.0, 0.0, 0.0, 143.3376, 0.0], [21.9614, 58.5131, 24.9518, 0.0, 14.1032, 41.9268, 13.271, 6.1474, 7.2618, 22.7997, 0.0, 5.3939, 20.3885, 208.8811, 6.9062], [532.9656, 18.3206], [16.2355, 41.1715, 24.6504, 9.8039, 13.0378, 12.7642, 0.0, 4.9715, 6.615, 6.4626, 7.7302, 18.6835, 154.7734, 6.5128, 0.0, 26.2111, 0.0, 6.5932, 227.52, 6.2899], [14.0611, 16.7501, 6.889, 6.6287, 7.1148, 11.5616, 5.2528, 13.9949, 184.5536, 6.1631, 3.5154, 25.7166, 7.0047, 10.5017, 271.8864, 0.0], [18.1834, 0.0, 53.8353, 18.3051, 18.3582, 478.9296, 18.2707], [19.4246, 43.5309, 27.1215, 11.5317, 14.7876, 10.0685, 4.5328, 4.8598, 6.9972, 6.8183, 3.1674, 13.4976, 208.8811, 13.5938, 0.0, 24.0917, 4.6053, 6.8695, 251.4096, 6.4646], [27.9773, 80.8095, 32.0034, 19.3266, 12.8319, 13.8931, 6.0039, 7.057, 5.8065, 14.0517, 5.5507, 20.8147, 203.4284, 4.3273, 0.0, 21.195, 0.0, 15.9499, 275.2992, 0.0], [29.9342, 49.9013, 29.3515, 15.0675, 15.0278, 17.1878, 5.98, 6.9453, 6.909, 7.4705, 10.0666, 22.3066, 232.7892, 7.4744, 7.4844, 22.6787, 0.0, 17.0948, 299.1888, 7.2883], [0.0, 212.2366, 48.0373, 0.0, 51.9984, 0.0, 37.1507, 461.2968, 22.0147], [0.0, 76.4446, 44.4793, 0.0, 11.17, 30.433, 49.3286, 0.0, 0.0, 0.0, 3.873, 0.0, 167.3566, 19.1887, 0.0, 32.499, 0.0, 2.0135, 431.7192, 23.687], [29.7893, 162.6806, 74.4937, 0.0, 28.2867, 23.8111, 39.3062, 12.9048, 17.9311, 6.7473, 25.0797, 10.6781, 35.2358, 216.431, 1.7484, 0.0, 14.9071, 7.1982, 37.7429, 388.4904], [65.3045, 81.9891, 45.8052, 6.7738, 22.0186, 65.635, 55.9872, 0.7176, 0.0, 0.0, 51.108, 8.4986, 43.5475, 265.0861, 19.6695, 9.9565, 78.0682, 30.0505, 30.0443, 428.3064, 9.8342], [19.2072, 95.6737, 46.1668, 0.0, 51.2697, 49.0633, 49.559, 0.0, 6.7591, 11.0544, 17.0162, 0.0, 36.1594, 413.5678, 20.6748, 0.0, 17.8038, 0.0, 19.3057, 742.284, 31.9488], [105.7738, 52.3144, 46.5587, 37.4861, 6.4584, 33.9815, 4.998, 16.5419, 22.5949, 17.0496, 477.3227, 16.8284, 61.6068, 0.0, 23.767, 791.7696, 24.0115], [45.445, 156.5462, 80.581, 39.8987, 16.709, 28.4314, 14.2683, 5.6605, 13.7004, 37.0563, 36.5658, 7.033, 330.9382, 31.5149, 5.9422, 31.1566, 17.8601, 25.4646, 840.6864, 19.1194], [52.3306, 110.4199, 66.96, 27.7242, 59.1848, 46.5408, 17.1865, 41.9881, 6.8502, 51.3451, 23.5514, 14.7053, 489.9059, 53.7633, 1.2474, 59.4166, 26.7674, 834.9984, 26.0582], [47.8368, 203.1443, 44.5998, 55.7698, 28.4087, 14.3078, 5.8963, 5.5301, 9.4668, 43.8746, 16.8717, 42.624, 517.589, 48.7367, 19.845, 21.4069, 0.0, 61.3519, 984.024, 19.8682], [91.9771, 222.1375, 178.7005, 81.0431, 78.5013, 0.0, 0.0, 0.0, 0.0, 0.0, 22.2499, 0.0, 769.253, 56.2548, 0.0, 198.4558, 0.0, 64.9841, 955.584, 77.8003], [92.7744, 202.7904, 138.2594, 62.1986, 104.6112, 52.0934, 10.8358, 21.7482, 57.9768, 98.2435, 7.448, 138.2438, 629.5794, 76.2302, 5.8061, 101.1708, 11.6487, 47.2576, 969.804, 15.5251]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

