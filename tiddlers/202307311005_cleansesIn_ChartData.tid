created: 20230731100532000
creator: Drevarr
tags: ChartData
title: 202307311005_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Phantasmal Akihito", "Smythe The Noble", "Igh Homura", "Necrotic Windrunner", "Laddimus", "Sakis Ranger", "Brutal Araden", "Tridozaul", "Lord Sahan", "Luke The Ghastly", "Elvezio Figone", "Aezlenne", "Latedoctor", "Aloepen", "Govinda Ektar", "Smol Gluvs", "Lady Fluffs", "Fyshaye", "Drevarr Moonwillow", "Squishy Jellyfish", "The Bussiest Cat", "Jerryatric Reflexes", "Charr Surethang", "Jimbo The Pleb", "Revitiel", "St\u00e1rless", "K\u00e2 \u00d4tik R\u00e6j", "Whip \u00d1 Sl\u00e0pper", "Mother Ship", "Grasszanine", "Sister Elon\u00edth", "Gestern Yesteryear", "Scarlet Merc\u00fcry", "Drac Tepes", "Vee Usagi"];
const professions = ["Chronomancer", "Scrapper", "Tempest", "Scourge", "Tempest", "Druid", "Renegade", "Holosmith", "Firebrand", "Scourge", "Virtuoso", "Chronomancer", "Reaper", "Reaper", "Vindicator", "Reaper", "Druid", "Druid", "Scrapper", "Firebrand", "Holosmith", "Berserker", "Berserker", "Berserker", "Vindicator", "Spellbreaker", "Berserker", "Tempest", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scourge", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3125, 0.0481, 0.075, 0.0495], [0.0, 0.0877, 0.0, 0.2963, 0.1562, 0.0721, 0.08, 0.0594], [0.375, 0.194, 0.7647], [0.0, 0.0566, 0.3, 0.3077, 0.0625, 0.1567, 0.2941], [0.2075, 0.0, 0.6154, 0.0, 0.0299, 0.2353], [0.0, 0.1053, 0.0, 0.4375, 0.0385, 0.135, 0.099], [0.0, 0.2105, 0.0, 0.7778, 0.4531, 0.0865, 0.18, 0.0495], [0.0667, 0.0625, 0.4552, 0.0862, 0.0377, 0.15, 0.6615], [0.0, 0.217, 0.3, 0.7385, 0.1562, 0.194, 0.8235], [0.099, 0.3923, 0.4697, 0.0303, 0.4624, 0.2768], [0.1401, 0.2624, 0.2434, 0.0667, 0.0, 0.2836, 0.0], [0.0571, 0.1488, 0.0215, 0.8214, 0.0, 0.3, 0.0773, 0.0993, 0.1086, 0.0333, 0.1343, 0.0, 0.0472, 0.05, 0.2615, 0.0, 0.1119, 0.0882], [0.4, 0.1884, 0.0526, 0.193, 0.5926, 0.25, 0.0721, 0.175, 0.0891, 0.0, 0.0, 0.15, 0.4308, 0.2188, 0.2164, 0.3529], [0.0, 0.175, 0.2029, 0.1915, 0.2007, 0.0333, 0.0, 0.403, 0.0283, 0.25, 0.4154, 0.375, 0.1642, 0.3529], [0.0645, 0.5, 0.0, 0.2, 0.1884, 0.1844, 0.2829, 0.4179, 0.0, 0.0283, 0.1, 0.6, 0.0, 0.0448, 0.8235], [0.1613, 0.3214, 0.0714, 0.2066, 0.1183, 0.3571, 0.0, 0.5, 0.2029, 0.4397, 0.3684, 0.0, 0.3209], [0.1286, 0.2222, 0.0, 0.2632, 0.36, 0.4815, 0.3906, 0.0962, 0.125, 0.1188, 0.5455, 0.2121, 0.7097, 0.1964, 0.0143, 0.2066, 0.2366, 0.9286, 0.225], [0.2367, 0.3333, 0.2664, 0.4776, 0.0, 0.217, 0.35, 0.9538, 0.1562, 0.2612, 0.7647], [0.2174, 0.0, 0.2281, 0.0, 0.5926, 0.375, 0.0817, 0.145, 0.099, 0.2923, 0.4697, 0.0606, 0.6452, 0.4821, 0.1857, 0.2645, 0.043, 0.5357, 0.0625, 0.45], [0.3769, 0.4697, 0.0606, 0.7419, 0.3036, 0.0286, 0.1818, 0.1183, 0.5714, 0.0, 0.325, 0.1981, 0.2908, 0.1842, 0.0167, 0.2687], [0.4844, 0.0625, 0.125, 0.1386, 0.2692, 0.3548, 0.2232, 0.2429, 0.1074, 0.0108, 0.4643, 0.0312, 0.175, 0.0773, 0.227, 0.2599, 0.0333, 0.3284, 0.0862, 0.0094, 0.1, 0.3077], [0.0, 0.1692, 0.5758, 0.0, 0.3333, 0.4018, 0.1, 0.3306, 0.1613, 0.6786, 0.0, 0.4, 0.3285, 0.0, 0.0167, 0.0, 0.6567, 0.0, 0.2075, 0.225, 0.5538, 0.1875, 0.2388, 0.6176], [0.4, 0.1401, 0.0, 0.0877, 0.04, 0.5185, 0.5938, 0.0865, 0.05, 0.0792, 0.2424, 0.0, 0.5054, 0.2946, 0.0215, 0.2143, 0.0, 0.175, 0.1594, 0.3972, 0.3092, 0.0333, 0.0, 0.5896, 0.0, 0.0566, 0.3], [0.0048, 0.0, 0.2632, 0.0, 0.4444, 0.4062, 0.101, 0.14, 0.0693, 0.1462, 0.3182, 0.0, 0.5699, 0.3036, 0.1286, 0.2397, 0.0323, 0.1429, 0.0, 0.45, 0.2512, 0.4539, 0.4276], [0.0, 0.2281, 0.04, 0.6667, 0.5312, 0.0673, 0.095, 0.0198, 0.2769, 0.3636, 0.0, 0.1828, 0.4018, 0.0571, 0.0826, 0.0538, 0.9643, 0.0, 0.775, 0.256, 0.1986, 0.2993, 0.1667, 0.5299], [0.4615, 0.5, 0.0303, 0.6452, 0.25, 0.1286, 0.1983, 0.043, 0.6071, 0.0, 0.35, 0.2657, 0.3191, 0.0625, 0.0, 0.0, 0.5299, 0.0, 0.2264, 0.2, 0.5846, 0.3125, 0.306, 0.5588], [0.2286, 0.0531, 0.0, 0.2632, 0.0, 0.3704, 0.25, 0.0673, 0.2, 0.0396, 0.2923, 0.303, 0.0606, 0.6667, 0.2411, 0.1286, 0.124, 0.0645, 0.25, 0.0, 0.175, 0.2657, 0.3546, 0.3125, 0.0167, 0.0, 0.6343], [0.3231, 0.4394, 0.2424, 0.6022, 0.3393, 0.2, 0.1901, 0.1183, 0.75, 0.0, 0.5, 0.2754, 0.3901, 0.0329, 0.0, 0.4478, 0.3208, 0.5, 0.5692, 0.3438, 0.2985, 0.8824], [0.5615, 0.4091, 0.7742, 0.375, 0.1286, 0.2645, 0.172, 0.5, 0.0, 0.4, 0.3333, 0.4823, 0.3158, 0.0333, 0.4254, 0.0, 0.2075, 0.25, 0.5231], [0.0, 0.0769, 0.13, 0.1386, 0.5154, 0.3333, 0.0, 0.7634, 0.2589, 0.0571, 0.2975, 0.1075, 0.3929, 0.0, 0.425, 0.2657, 0.3546, 0.3651, 0.0667, 0.4776, 0.0, 0.3302, 0.35, 0.7231], [0.9259, 0.4219, 0.0721, 0.085, 0.0198, 0.1769, 0.3182, 0.0606, 0.6344, 0.3036, 0.0714, 0.2314, 0.2258, 0.7857, 0.25, 0.343, 0.2766, 0.2204, 0.1667, 0.0, 0.3955, 0.283, 0.175, 1.0462, 0.4375, 0.3507, 0.4118], [0.2429, 0.1884, 0.0, 0.3333, 0.6296, 0.2188, 0.0673, 0.12, 0.0594, 0.2692, 0.3485, 0.0, 0.5699, 0.2857, 0.2571, 0.1818, 0.1075, 0.5, 0.0, 0.125, 0.1981, 0.2553, 0.3849, 0.1, 0.3806, 0.0, 0.066, 0.35, 0.8462, 0.0938, 0.3433, 0.5], [0.0, 0.0877, 0.24, 0.8148, 0.2969, 0.1346, 0.16, 0.1188, 0.4, 0.2879, 0.0303, 0.7097, 0.3393, 0.0143, 0.2231, 0.1075, 0.6071, 0.0, 0.075, 0.2415, 0.4397, 0.227, 0.3167, 0.0, 0.4776, 0.0, 0.1792, 0.275, 0.5077, 0.5625, 0.3209, 0.7353], [0.1485, 0.4462, 0.4394, 0.0303, 0.9785, 0.3393, 0.2286, 0.2397, 0.1183, 0.7143, 0.0, 0.625, 0.2512, 0.3546, 0.4539, 0.0, 0.6119, 0.0, 0.1321, 0.3, 0.7077, 0.5938, 0.3507, 0.5588], [0.1981, 0.3158, 0.2105, 0.0, 0.3333, 0.625, 0.1442, 0.11, 0.1287, 0.3846, 0.7727, 0.1818, 0.871, 0.3393, 0.2571, 0.3306, 0.0215, 1.0, 0.0, 0.3, 0.2802, 0.4184, 0.1349, 0.0833, 0.0, 0.6866, 0.0, 0.0, 0.275, 0.7231, 0.25, 0.4627, 0.9706]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

