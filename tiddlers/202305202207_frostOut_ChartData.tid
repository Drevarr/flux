created: 20230520220730000
creator: Drevarr
modified: 20230705163530974
modifier: drevarr
tags: ChartData
title: 202305202207_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Pedro O Mago Preto", "High Sorcer Baradun", "Tegan Parker", "Tika Mi", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[267.7214, 101.5262, 15.7853, 39.6728, 16.4164, 39.3502, 0.0, 17.9998, 39.0169, 124.0232, 213.0667, 40.1064, 427.4669, 19.9553, 18.1364], [271.4417, 69.6923, 38.3914, 57.9604, 32.144, 16.7518, 0.0, 60.1312, 0.0, 87.1034, 175.996, 345.168, 74.7488, 20.101, 79.7607, 17.4583, 33.0191, 171.7511, 17.5338, 423.987, 8.0083, 20.2044, 302.4281, 0.0, 122.4867, 31.6656, 0.0, 16.8139, 95.9904, 170.3853], [397.0747, 138.7684, 38.1234, 51.9141, 0.0, 35.0288, 0.0, 81.3749, 19.7551, 30.7665, 286.7283, 20.1348, 730.4026, 80.0213, 20.101, 227.0335, 60.3187, 115.1304, 528.3422, 13.2804, 802.578, 67.8205, 40.1812, 353.4419, 2.86, 110.826, 72.3604, 222.2019, 29.3976, 0.0, 126.2448, 214.799], [468.6198, 239.9523, 104.1877, 83.3351, 53.6444, 62.0629, 0.0, 103.212, 58.3987, 149.7759, 451.807, 52.8972, 1067.7197, 108.9864, 57.0975, 229.878, 72.4812, 153.809, 564.4163, 71.0226, 893.079, 71.9498, 93.2875, 712.2136, 209.0889, 116.9084, 363.3852, 111.2832, 56.8431, 51.9028, 83.16, 341.0365], [539.5924, 293.6934, 92.0321, 112.4764, 28.372, 56.7374, 0.0, 156.4598, 69.6892, 205.7025, 542.0245, 70.584, 1230.1517, 170.1203, 72.6282, 252.8078, 87.6955, 155.1997, 672.6387, 111.6288, 1093.287, 72.1318, 582.9278, 36.8745, 165.3507, 132.5363, 306.3366, 144.4176, 106.1937, 112.8607, 169.686, 325.4341]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

