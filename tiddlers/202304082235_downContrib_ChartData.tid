created: 20230408223537000
creator: Drevarr
modified: 20230705163524947
modifier: drevarr
tags: ChartData
title: 202304082235_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["Newtype Khan", "Sarah Dresser", "Oo Dads Mad", "Sumatra Satyricon", "Kat Bon Z", "Irish Mini Rev", "Grasszanine", "Arcanophage Farra", "Seren Nightroad", "Lord Erin The Wise", "Tac Mancer", "Rozaalyna", "Slautorn", "Smol Gluvs", "Smol Daddy Tika", "Inedible Plant", "Panther B Me", "Xyntharos", "Kos\u00e4ir", "Kmpek", "Mistwalker Caelon", "Be\u00eb", "Sp\u00edcy Cheese", "Sofya De Nova", "Xanvias Einzbern"];
const professions = ["Spellbreaker", "Tempest", "Spellbreaker", "Soulbeast", "Berserker", "Vindicator", "Spellbreaker", "Spellbreaker", "Scourge", "Weaver", "Scourge", "Scourge", "Weaver", "Scourge", "Berserker", "Vindicator", "Scourge", "Vindicator", "Vindicator", "Vindicator", "Vindicator", "Scourge", "Berserker", "Weaver", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8112.0, 1829.0, 8882.0, 2404.0, 9860.0, 2754.0, 13042.0, 0.0, 0.0, 6821.0, 2701.0, 4269.0, 4905.0, 6684.0, 6425.0, 5142.0, 0.0, 2558.0, 0.0, 1779.0, 1664.0, 1128.0, 1314.0, 0.0, 0.0, 0.0, 691.0, 2458.0, 0.0, 6802.0, 3643.0], [18622.0, 32149.0, 3386.0, 0.0, 13106.0, 7428.0, 6756.0, 9207.0, 716.0, 5258.0, 10322.0, 0.0], [9319.0, 0.0, 0.0, 4016.0, 509.0, 14140.0, 21669.0, 808.0, 5119.0, 11600.0, 21572.0, 0.0, 2793.0, 2726.0, 0.0, 1130.0, 2784.0, 11562.0], [4645.0, 576.0, 1254.0, 5734.0, 1690.0, 17622.0, 13126.0, 1376.0, 0.0, 2808.0, 3917.0, 2948.0, 0.0, 6488.0, 1044.0, 0.0, 0.0, 0.0, 2668.0, 13611.0, 5505.0, 0.0, 6167.0, 787.0, 1405.0, 594.0, 0.0, 0.0, 9580.0, 7781.0], [29938.0, 0.0, 0.0, 2859.0, 61549.0, 0.0, 4562.0, 6345.0, 5267.0, 3782.0, 997.0, 0.0], [0.0, 3259.0, 1086.0, 0.0, 11837.0, 4973.0, 2311.0, 0.0, 8359.0, 4462.0, 5213.0, 16137.0, 11923.0, 34678.0, 21527.0, 2162.0], [9387.0, 2515.0, 9784.0, 2739.0, 9719.0, 10475.0, 37558.0, 0.0, 0.0, 6599.0, 1376.0, 5208.0, 12880.0, 3508.0, 7101.0, 5168.0, 246.0, 962.0, 6341.0, 2840.0, 1810.0, 1117.0, 0.0, 0.0, 0.0, 3359.0, 4239.0, 0.0, 1001.0, 7100.0], [19373.0, 1485.0, 4695.0, 14.0, 6350.0, 7780.0, 31104.0, 856.0, 0.0, 3952.0, 0.0, 6649.0, 6765.0, 1653.0, 14619.0, 1659.0, 0.0, 5843.0, 0.0, 2982.0, 0.0, 1861.0, 1711.0, 0.0, 0.0, 0.0, 3550.0, 3826.0, 0.0, 0.0, 27658.0], [31739.0, 0.0, 3746.0, 18631.0, 21673.0, 37379.0, 2585.0, 1187.0, 4335.0, 4542.0, 10807.0, 5397.0, 5415.0, 13804.0, 478.0], [25425.0, 8194.0, 0.0, 3606.0, 16008.0, 0.0, 9173.0, 0.0, 0.0, 0.0, 21563.0, 16411.0, 0.0, 14537.0, 16399.0, 0.0, 14495.0, 0.0, 30776.0], [15194.0, 4473.0, 5882.0, 8375.0, 21938.0, 1910.0, 40986.0, 0.0, 6351.0, 29290.0, 0.0, 16567.0, 7493.0, 2166.0, 25751.0, 437.0, 3756.0], [26391.0, 11922.0, 2090.0, 0.0, 26256.0, 8625.0, 31074.0, 0.0, 6250.0, 0.0, 29652.0, 14043.0, 59.0, 8270.0, 0.0, 2412.0, 9570.0, 14167.0, 6484.0], [19911.0, 11705.0, 1068.0, 0.0, 19818.0, 8770.0, 81801.0, 3668.0, 0.0, 7335.0, 44657.0], [24222.0, 1606.0, 869.0, 1274.0, 22183.0, 30816.0, 24328.0, 2082.0, 3077.0, 838.0, 119.0, 12331.0, 8414.0, 4115.0, 13929.0, 10196.0, 4498.0, 4425.0, 1923.0, 7012.0, 6729.0, 6085.0, 4551.0, 0.0, 7714.0, 0.0, 1518.0, 1887.0, 4673.0, 127.0, 32514.0, 42275.0], [43520.0, 5429.0, 11335.0, 1397.0, 21354.0, 40329.0, 4201.0, 15350.0, 5919.0, 2460.0, 13543.0, 20327.0, 20018.0, 6059.0, 3610.0, 13527.0, 0.0, 15751.0, 11418.0, 11708.0, 0.0, 50018.0, 92587.0], [18944.0, 5242.0, 4586.0, 5842.0, 30532.0, 45922.0, 59270.0, 0.0, 0.0, 21445.0, 0.0, 14905.0, 7965.0, 7661.0, 37466.0, 2071.0, 7840.0, 5538.0, 0.0, 12794.0, 0.0, 3194.0, 5764.0, 0.0, 55.0, 0.0, 4774.0, 0.0, 4862.0, 27773.0, 77127.0], [27547.0, 5747.0, 5058.0, 0.0, 16774.0, 49501.0, 93349.0, 4764.0, 1813.0, 3903.0, 4459.0, 20354.0, 27142.0, 7016.0, 8501.0, 13972.0, 1727.0, 10539.0, 928.0, 10913.0, 4768.0, 11185.0, 10406.0, 2136.0, 7589.0, 0.0, 1431.0, 5544.0, 925.0, 0.0, 51110.0, 43987.0], [50253.0, 5205.0, 2753.0, 0.0, 95576.0, 43605.0, 45289.0, 0.0, 0.0, 6082.0, 4018.0, 34653.0, 12324.0, 0.0, 48728.0, 11961.0, 13373.0, 15564.0, 0.0, 7576.0, 38543.0, 29281.0, 11329.0], [62787.0, 39168.0, 21544.0, 0.0, 77042.0, 51235.0, 71359.0, 6926.0, 0.0, 8257.0, 48273.0, 44304.0, 7162.0, 74817.0, 35656.0], [19501.0, 7855.0, 19416.0, 69285.0, 110133.0, 87570.0, 0.0, 0.0, 0.0, 4317.0, 24359.0, 9045.0, 1681.0, 85180.0, 26266.0, 1032.0, 12320.0, 0.0, 18673.0, 5663.0, 5995.0, 19883.0, 0.0, 5498.0, 0.0, 0.0, 5377.0, 0.0, 6852.0, 22426.0, 35494.0], [65338.0, 22875.0, 21396.0, 14946.0, 72407.0, 76980.0, 105679.0, 2247.0, 0.0, 33347.0, 14004.0, 29794.0, 15995.0, 0.0, 58936.0, 13171.0, 4197.0, 17509.0, 3212.0, 14939.0, 21946.0, 4821.0, 33493.0], [32968.0, 4976.0, 18970.0, 0.0, 36168.0, 53780.0, 81695.0, 10349.0, 0.0, 31779.0, 0.0, 37256.0, 14591.0, 21386.0, 47766.0, 35792.0, 18076.0, 1701.0, 15453.0, 22961.0, 3452.0, 5801.0, 3182.0, 31142.0, 0.0, 6977.0, 3073.0, 0.0, 2081.0, 84254.0, 98099.0], [68023.0, 6011.0, 6733.0, 5987.0, 0.0, 51612.0, 124014.0, 1464.0, 6599.0, 0.0, 1391.0, 4146.0, 94904.0, 27464.0, 6317.0, 28863.0, 18709.0, 19136.0, 3479.0, 2492.0, 16607.0, 0.0, 7893.0, 5317.0, 0.0, 0.0, 112146.0, 120576.0], [43435.0, 13470.0, 81059.0, 1038.0, 11058.0, 2483.0, 134885.0, 0.0, 0.0, 18199.0, 3058.0, 43268.0, 14622.0, 58191.0, 42845.0, 9571.0, 46448.0, 3734.0, 20605.0, 22345.0, 16287.0, 22318.0, 9097.0, 46282.0, 0.0, 16554.0, 0.0, 5470.0, 106939.0, 103634.0], [112097.0, 19670.0, 5700.0, 10866.0, 42878.0, 43934.0, 156472.0, 13840.0, 6572.0, 22016.0, 3992.0, 38996.0, 45494.0, 2924.0, 118287.0, 74378.0, 36954.0, 26821.0, 4166.0, 56725.0, 36010.0, 52039.0, 37466.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

