created: 20230804003338000
creator: Drevarr
tags: ChartData
title: 202308040033_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Tirluka", "Scarlet Merc\u00fcry", "Big Boy Belkins", "Kellenas Cairek", "Revitiel", "K\u00e2 \u00d4tik R\u00e6j", "Govinda Ektar", "Eternal Depravity", "Jerryatric Reflexes", "Cestaphine", "Sister Elon\u00edth", "Jimbo The Pleb", "Drevarr Moonwillow"];
const professions = ["Tempest", "Firebrand", "Holosmith", "Harbinger", "Vindicator", "Berserker", "Vindicator", "Scrapper", "Spellbreaker", "Weaver", "Dragonhunter", "Berserker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 61.1226, 22.1613, 28.657, 0.0, 11.4485, 0.0, 18.5123, 28.7705, 22.1067, 24.8472, 0.0, 0.0, 0.0, 14.4381, 7.3794], [0.0, 0.0, 0.0, 84.1104, 144.7786, 17.892, 0.0], [0.0, 71.0014, 0.0, 68.3155, 3.9627, 27.0328, 35.6227, 23.4353, 0.0, 38.2511, 8.076, 16.0644], [15.3439, 0.0, 0.0, 25.4826, 0.0, 0.0, 108.9623, 4.2024, 59.8699, 0.0, 0.0, 0.0, 50.6167, 0.0, 4.1641, 0.0, 0.0, 0.0, 32.0242], [41.4557, 14.7732, 24.9552, 106.5636, 5.9085, 60.0277, 51.6482, 71.0328], [13.6851, 56.0952, 171.963, 96.613, 164.9941], [0.0, 92.9237, 0.0, 97.0428, 66.3136, 27.3334, 25.9018, 103.6318, 73.8342, 44.387, 49.2728, 6.9985, 6.9477, 13.9475], [24.6818, 16.7271, 8.568, 150.876, 0.0, 76.4501, 31.5794, 79.1112, 99.2202, 5.1638, 43.7882, 88.5658, 31.2543, 0.0, 0.0, 0.0, 47.2291], [568.0422, 70.947, 204.8063, 159.7756], [127.3536, 8.514, 73.1195, 32.8915, 107.916, 119.9275, 34.0043, 55.1086, 75.2184, 53.5788, 0.0, 34.2727, 0.0, 0.0, 24.1458, 315.4939, 10.7905], [76.4192, 9.0597, 50.7528, 346.6584, 75.9889, 47.9506, 125.358, 193.2166, 22.2386, 92.2979, 159.7219, 112.6026, 30.1605, 30.7123, 29.6344, 34.3794, 36.8995, 149.2949, 37.1735], [73.2875, 43.2744, 55.3392, 333.0558, 49.9545, 110.4991, 220.668, 78.8256, 289.7466, 27.3334, 125.7539, 151.0171, 72.9194, 7.6279, 57.9262, 27.8643, 24.5982, 46.7736], [53.9611, 167.8752, 707.3352, 9.531, 148.596, 165.6203, 221.1156, 194.3114, 94.6687, 44.469, 270.63, 206.6051, 59.4464, 81.9202, 10.606, 20.0706, 107.026, 23.7846, 419.6102, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

