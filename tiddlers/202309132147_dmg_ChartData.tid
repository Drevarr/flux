created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Aira Draugr", "Banetank", "Z\u00e9 Chamin\u00e9", "Zaedy Zae", "Tegan Parker", "Clean And Green", "Belvyn Brightblade", "Tribal S", "Tootsie Pop Rocks", "Elisha Raskae", "Revenant Brandorf", "Morton Saltbringer", "Itacolomi", "Cat Wigglebooty", "Etchery Howls", "Koralia Danai", "Tequilasaurous", "Blaize Harlot", "Darks Na", "Venomina The Fierce", "Rafaellagabriela", "Melody Phoenixstorm", "Cura Ativos", "Nebula Davar", "Sygaldry Verdandi", "Drevarr Moonwillow", "Victoria Raskae", "Sub Train", "Bella Sassy", "Solus Luxes", "Rahani Sunray", "Blaize Harlot", "Arcanophage Farra", "Ryzen Grimsaw", "Primal Clone", "Morv\u00e4rth", "Lord Erin The Wise", "Daphne Agla\u00e9", "Oo Dads Mad", "Rozaalyna", "Mort\u00e4rion", "Zanos Engine", "Ka Otik Nightm\u00e6r", "Glorious Gluvs", "Charr Surethang", "Elonith Requiem", "Rina Of Theros", "Eibh\u00ebar", "Jimbo The Pleb", "Lucky Luprac\u00e1n", "Jmbrage Rev", "Mistwalker Cael", "Keypek The Drunk", "Xanvias Einzbern"];
const professions = ["Herald", "Spellbreaker", "Spellbreaker", "Druid", "Tempest", "Druid", "Firebrand", "Druid", "Scrapper", "Virtuoso", "Vindicator", "Chronomancer", "Firebrand", "Scrapper", "Druid", "Firebrand", "Dragonhunter", "Reaper", "Firebrand", "Spellbreaker", "Firebrand", "Scrapper", "Dragonhunter", "Scourge", "Firebrand", "Scrapper", "Renegade", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Scourge", "Spellbreaker", "Vindicator", "Chronomancer", "Reaper", "Weaver", "Reaper", "Berserker", "Reaper", "Scrapper", "Scrapper", "Reaper", "Berserker", "Berserker", "Reaper", "Reaper", "Chronomancer", "Berserker", "Scrapper", "Vindicator", "Herald", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0], [0.0], [0.0, 373.6852], [8.8202, 7.7315, 26.3651, 1.0312, 0.0, 0.0, 30.5349, 22.7984, 1.5906, 3.2717, 18.2308, 14.1481, 8.7204, 0.0, 9.8519], [0.0, 13.1879, 2.2619, 2.5625, 33.95, 9.0, 30.2248, 17.8658, 60.1739, 19.8182, 24.0556, 22.7419, 0.0, 0.0], [0.0, 23.3492, 28.6523, 57.3833, 87.8372, 52.2636], [42.3386, 57.3591], [17.8569, 6.7953, 18.8095, 18.7891, 49.3167, 15.0814, 47.5659, 8.0805, 57.5652, 28.8252, 22.963, 0.0, 0.0, 67.4815], [26.8953, 18.5705, 0.0, 5.3672, 86.9, 0.0, 53.093, 7.9845, 13.7987, 74.7717, 54.5315, 71.1852, 13.3978, 0.0, 0.0], [196.375, 5.0, 108.4186], [0.0, 1.0391, 253.4167, 0.0, 162.2442, 109.5116, 11.4832, 37.0543, 101.6224, 11.9815, 20.0108, 0.0, 94.6111], [31.7818, 6.4631, 1.254, 12.7891, 24.8, 0.0, 62.8372, 10.1008, 56.1678, 99.6522, 69.1329, 63.0, 45.3871, 0.0, 74.7778], [276.651, 205.2391, 16.7063, 12.5556, 116.871, 0.0, 14.5185], [16.5794, 52.6711, 8.8889, 18.3867, 30.0167, 46.2045, 151.3953, 53.0465, 45.4161, 63.087, 53.6503, 16.2963, 12.6452, 0.0, 84.2593], [33.6702, 16.7718, 66.2698, 20.7656, 84.45, 81.7674, 90.845, 19.3356, 41.9565, 57.4476, 62.4815, 35.8495, 77.9074], [25.836, 9.4027, 0.0, 37.6055, 72.9833, 17.407, 111.7364, 93.2349, 158.6848, 34.0979, 14.2778, 8.9785, 0.0, 294.4259], [108.1349, 27.9883, 376.9833, 395.7273, 57.1744, 297.4961], [41.7692, 477.9259, 568.172, 0.0, 495.7037], [42.7609, 56.8893, 39.4444, 98.8125, 200.4167, 0.0, 233.9651, 99.8217], [187.9664, 398.9674, 164.5524, 310.3333, 149.7957, 0.0, 28.537], [76.2967, 44.4597, 29.4286, 45.2617, 15.55, 35.6136, 115.3488, 98.907, 71.8591, 112.0217, 69.5385, 56.3704, 43.3763, 0.0, 70.037], [258.3665], [395.7174, 323.6713, 869.3333, 192.4409, 0.0, 382.7963], [272.1141, 650.2935, 276.7203, 273.0, 197.5699, 0.0, 199.1481], [117.63, 66.453, 46.4286, 22.8438, 27.65, 115.4651, 139.0543, 205.8456, 123.7717, 241.1049, 64.6667, 21.5591, 0.0, 132.4444], [121.1222, 98.3255, 29.627, 34.6758, 165.8, 0.0, 109.4651, 147.4651, 56.4698, 136.5326, 226.6783, 61.1667, 77.2151, 0.0, 220.0556], [451.698, 991.3043, 482.5664], [84.445, 108.6846, 91.9444, 49.6875, 85.2833, 182.9186, 225.5194, 200.9664, 211.837, 52.2098, 61.5926, 74.2473, 0.0, 240.9815], [96.0489, 29.896, 43.3175, 12.5273, 17.8833, 0.0, 109.6279, 329.7674, 236.4161, 229.1304, 345.3566, 22.2593, 16.2043, 0.0, 201.3333], [93.4887, 60.8087, 224.6984, 68.3516, 113.3, 0.0, 158.8837, 68.2636, 180.2953, 403.6304, 199.1049, 174.0741, 18.6989, 0.0, 350.1667], [1011.124, 749.9866, 581.7609, 987.9091, 232.0185, 248.5054, 0.0, 379.2037], [369.0576, 211.6342, 86.1746, 160.5117, 563.6, 57.8864, 520.8605, 50.155, 375.953, 301.8696], [230.6946, 178.9933, 189.9603, 147.2969, 464.7, 34.1818, 402.3023, 432.6667, 142.302, 421.6196, 388.5385, 113.7037, 150.5591, 0.0, 753.8889], [45.1779, 257.0794, 95.7148, 798.8, 688.5116, 734.6512, 114.2416, 702.2065, 599.986, 425.3704, 417.3978, 0.0, 1292.0], [166.4921, 277.1309, 224.4127, 233.0312, 922.3167, 81.25, 812.7442, 592.0, 587.5369, 51.1522, 171.8671, 465.4444, 494.3763, 0.0, 1117.2593], [664.0227, 278.9295, 175.9127, 255.5938, 1722.6167, 529.7045, 1212.593, 8.9225], [397.5117, 1033.3167, 23.2727, 88.4302, 1083.8682, 731.4832, 10.9565, 1975.951, 882.6852, 602.2903, 100.2553, 2169.1296], [487.5515, 376.5201, 224.0556, 199.4219, 827.05, 0.0, 1032.8605, 296.4806, 406.1879, 911.087, 886.8671, 98.4074, 320.4086, 0.0, 348.2407], [571.8429, 441.8523, 439.7143, 442.9453, 1491.45, 0.0, 53.1047, 2147.1163], [843.2635, 358.8255, 553.6111, 514.5039, 1754.1167, 1128.7558, 320.2016], [597.9791, 431.0235, 802.4841, 834.2891, 1941.1, 335.6136, 1370.3488, 404.093], [419.2234, 121.4094, 503.9524, 778.918, 1156.9667, 188.0455, 2073.9884, 135.8682, 974.557, 1744.2717, 454.8182, 404.3889, 374.3656, 0.0, 551.5185], [604.3859, 519.246, 441.7891, 1895.7833, 0.0, 1558.5116, 2286.3488, 577.5973, 414.6848, 1481.7133, 761.6481, 0.0, 1049.0185], [438.3613, 380.2651, 211.6825, 392.8633, 1263.95, 0.0, 760.5233, 2480.6822, 552.2886, 1311.6087, 1247.6643, 584.1481, 267.5054, 0.0, 2328.9074], [1563.0768, 661.5101, 35.3175, 560.2734, 2206.7667, 1654.3372, 112.8992], [1201.1111, 869.8477, 2076.3, 2084.1744, 1717.4496, 1854.0201, 758.1848, 2439.5035, 1435.2037, 1309.7593], [865.6597, 506.255, 797.6984, 247.8477, 1796.0667, 149.7045, 2237.4419, 763.7984, 324.6443, 1226.3152, 1385.4545, 463.4074, 743.4731, 599.7234, 993.2593], [538.0855, 475.8087, 1260.9921, 526.0703, 1824.3167, 0.0, 1757.4535, 1624.876, 1205.2148, 1769.7935, 760.3427, 744.4259, 612.1828, 0.0, 1130.8519], [471.6073, 178.9463, 1374.3095, 887.082, 2771.4667, 59.0455, 2467.686, 2121.8605, 2099.4966, 510.7174, 1047.007, 1598.7593, 521.2043, 0.0, 3747.6111], [1007.0628, 462.0403, 1299.0635, 636.5547, 1929.0, 365.1364, 1742.9767, 2321.0388, 953.9597, 1529.4891, 1057.5035, 1608.3519, 812.0645, 0.0, 892.9815], [1717.2269, 676.7114, 880.7619, 661.8438, 1516.5167, 0.0, 1244.4767, 1642.3876, 1333.4161, 1748.7391, 2295.8252, 341.4444, 1090.4409, 0.0, 2275.7778], [1549.0349, 830.7852, 1438.3492, 878.4805, 2817.0167, 684.2045, 2254.7093, 1983.4961, 445.2416, 296.0, 2705.6783, 417.0926, 1199.0323, 0.0, 3082.4444], [1632.3264, 785.0872, 1816.3254, 1483.0273, 3506.95, 13.4091, 2822.1047, 1852.4341, 1346.5503, 2518.2717, 1805.972, 1634.1481, 939.8817, 0.0, 1954.6481], [2275.6614, 984.4396, 2138.2143, 1382.7969, 4744.9333, 0.0, 2707.8488, 3672.907, 2269.4027, 5234.1304, 5709.3636, 1079.0741, 1591.043, 0.0, 6816.8333]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

