created: 20230412220340000
creator: Drevarr
modified: 20230705163525448
modifier: drevarr
tags: ChartData
title: 202304122203_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Rozaalyna", "Smol Gluvs", "K\u00f4sair", "Oo Dads Mad", "Be\u00eb", "Panther B Me", "K\u00f4sair", "Rozaalyna", "Nazhul Naxxremis", "Smol Gluvs", "Rina Of Theros", "Arcanophage Farra", "Be\u00eb", "Newtype Khan", "Primal Clone", "Grasszanine", "Black Raspberry Pie", "Eibh\u00ebar"];
const professions = ["Reaper", "Reaper", "Berserker", "Spellbreaker", "Reaper", "Scourge", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.5221, 0.5093, 0.2936, 0.0, 0.1337, 0.0476, 0.1481, 0.3651, 0.0117], [0.375, 0.0, 0.7685, 0.0367, 0.0, 0.1881, 0.881, 0.4074, 0.3651, 0.0035], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5514, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.2058, 0.1212, 0.0, 0.2714, 0.0456, 0.5, 0.1337], [0.625, 0.0, 0.4537, 0.2018, 0.0, 0.1733, 0.0714, 0.7037, 0.6032, 0.0737], [0.1565, 0.0909, 0.0, 0.3619, 0.029, 0.1786, 0.2407, 0.0, 0.0983, 0.4133], [0.0, 0.1448, 0.7467, 0.9265, 0.0, 0.6667, 0.5229], [0.3043, 0.0606, 0.0172, 0.3143, 0.0747, 0.6786, 0.2778, 0.0, 0.1466, 0.5867], [0.5246, 0.2727, 0.0517, 0.3429, 0.1245, 0.2449, 0.4218, 0.0, 0.1793, 0.5467], [0.2261, 0.303, 0.0345, 0.3143, 0.2033, 0.6071, 0.3951, 0.0, 0.2379, 0.5733], [0.2609, 0.0, 0.0, 0.3857, 0.0747, 0.4184, 0.3066, 0.0213, 0.1534, 0.56, 0.3267, 0.9524, 0.2963, 0.5714, 0.0842], [0.287, 0.0606, 0.0, 0.1571, 0.0871, 0.648, 0.4568, 0.0, 0.0828, 0.6267, 0.5956, 0.0, 0.5093, 0.0183, 0.0, 0.1733, 0.0714, 0.6296, 0.5238, 0.0316], [0.4754, 0.1212, 0.0345, 0.7048, 0.1867, 0.8418, 0.4547, 0.0, 0.281, 0.7467], [0.313, 0.0, 0.0172, 0.4238, 0.083, 0.4898, 0.3333, 0.0, 0.0914, 0.4133, 0.6765, 0.0, 0.713, 0.2936, 0.0303, 0.2525, 0.5476, 0.7778, 0.7302, 0.0526], [0.3362, 0.3333, 0.0172, 0.5143, 0.0581, 0.4694, 0.3951, 0.0, 0.1776, 0.72, 0.4485, 0.3182, 0.4352, 0.6147, 0.0909, 0.302, 0.8095, 0.6481, 0.4127, 0.0386], [0.2899, 0.0606, 0.0, 0.3619, 0.1245, 0.5153, 0.3807, 0.0, 0.1534, 1.0133, 0.7426, 0.0455, 0.8241, 0.6789, 0.0, 0.1881, 0.5952, 0.5185, 0.3651, 0.0947], [0.3942, 0.0, 0.1034, 0.4429, 0.1743, 0.5459, 0.5144, 0.0, 0.1362, 0.8267, 0.6765, 0.4545, 0.8426, 0.8349, 0.0758, 0.1733, 0.8333, 1.3148, 0.2857, 0.2538], [0.6029, 0.1818, 0.0172, 0.4381, 0.2531, 1.2296, 0.5206, 0.0, 0.3414, 1.5067, 1.1544, 0.1364, 0.7685, 0.5046, 0.0606, 0.2475, 2.1429, 1.4444, 1.1429, 0.2491]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

