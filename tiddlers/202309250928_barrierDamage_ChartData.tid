created: 20230925092820000
creator: Drevarr
tags: ChartData
title: 202309250928_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Necrophagya", "Leafzel", "Mar\u00eda Callas", "Grasszanine", "Kathra Tull", "Necrotic Windrunner", "Dinosaur Kale", "Alo Penn", "Grae Leon", "Koralia Danai", "Flick Embermage", "Forgemaster Grast", "Reina Armitage", "Gestern Yesteryear", "Illusive Heart", "Drac Tepes", "Morv\u00e4rth", "Cyclotechnist Farra", "Drevarr Moonwillow"];
const professions = ["Reaper", "Firebrand", "Dragonhunter", "Spellbreaker", "Herald", "Reaper", "Harbinger", "Firebrand", "Tempest", "Firebrand", "Weaver", "Scrapper", "Druid", "Firebrand", "Chronomancer", "Scourge", "Reaper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3149, 0, 0, 4465, 0, 0, 637, 1314, 5519, 2342, 846, 0, 0, 0, 0, 0, 0, 6174, 0, 0, 0, 0, 0, 0, 0, 0, 4838, 0, 1189, 0, 2007, 0, 8144, 0, 9042, 2915, 0, 607], [0, 3623, 0, 0, 4622, 348, 504, 0, 322, 5380, 1581, 0, 0, 0, 3057, 2966, 7598, 913, 5030, 6255, 0, 0, 0, 0, 568, 0, 0, 5418, 0, 0, 59, 0, 0, 5760, 0, 306, 2164, 1407, 0], [3248, 0, 2799, 0, 40714, 2874, 0, 0, 0, 2886, 0, 0, 3370, 0, 0, 0, 134, 0, 306, 0, 0, 3031, 0], [4898, 0, 1849, 2641, 20797, 3027, 6412, 0, 8959, 4271, 0, 16897, 0], [11247, 3021, 0, 3124, 2184, 14101, 4875, 3095, 0, 0, 9019, 5957, 0, 2874, 0, 0, 806, 2773, 0, 0, 2815, 1310, 3102], [0, 12057, 11070, 5109, 0, 38219, 4835, 0, 0, 0, 0, 2446, 3804, 0, 0, 0, 2748, 3022, 0, 898, 482, 0], [0, 2783, 1841, 10435, 2863, 0, 3305, 1782, 15379, 0, 576, 0, 6540, 8620, 0, 15808, 2874, 4584, 5435, 0, 5795], [0, 2799, 10238, 0, 3314, 221, 26376, 2874, 5744, 6402, 0, 0, 3519, 0, 2923, 0, 2929, 3070, 2797, 14241, 0, 443, 3953, 801, 1723], [0, 2393, 3576, 0, 6, 4661, 0, 316, 0, 17266, 0, 1670, 0, 0, 2843, 6520, 0, 4949, 0, 11816, 0, 10428, 0, 0, 0, 2236, 0, 1721, 0, 0, 0, 587, 0, 15826, 324, 4107, 6175], [275, 11435, 1091, 0, 2961, 1090, 9703, 1759, 1736, 0, 14996, 9914, 6647, 960, 42463], [2196, 679, 0, 6609, 1797, 7118, 1661, 2874, 338, 3011, 6188, 4845, 1662, 293, 0, 10986, 5065, 340, 6037, 0, 31895, 2823, 7907, 413, 0, 0, 2989, 0, 3534, 1839], [3066, 18970, 10388, 0, 8728, 1985, 49353, 11747, 8651, 739], [43, 6315, 0, 9542, 0, 18469, 0, 56, 92, 765, 4442, 5790, 1946, 821, 0, 11757, 12606, 20610, 0, 38979, 335, 13028, 3680, 0, 0, 7852, 0, 3925, 3469, 1554, 3001, 3172, 2110, 0, 15088, 3022, 4498, 431, 0, 4165], [169, 6220, 6211, 4576, 1431, 7005, 6395, 2378, 7546, 9053, 32052, 7589, 10415, 3284, 0, 5123, 6674, 1290, 9378, 0, 31609, 6090, 7017, 3141, 0, 9938, 1159, 2040, 4051, 1494, 876, 2583, 476, 82, 12682, 0, 3294, 2400, 0, 6598], [0, 17363, 3981, 1510, 5309, 10353, 0, 4793, 3504, 31105, 7401, 5222, 0, 0, 14066, 11015, 340, 11035, 940, 29375, 3190, 8661, 3163, 0, 0, 11119, 5448, 520, 1725, 1404, 6083, 2224, 0, 8704, 0, 8322, 709, 308, 3444], [1670, 0, 15564, 20877, 0, 11626, 0, 75648, 2939, 17514, 13287, 0, 0, 18355, 11565, 18762, 0, 7574, 8893, 6126, 30231, 639, 11614, 0, 2779, 5568], [654, 78768, 14403, 47, 20510, 12036, 49509, 12138, 26441, 7609, 902, 39423, 24817], [0, 19815, 2714, 30663, 310, 14893, 20930, 17070, 0, 22510, 457, 67432, 36485, 17341, 6773, 0, 37949, 64873, 6871, 83135, 8585, 36798, 4793, 0, 0, 26790, 408, 20259, 21485, 3233, 24656, 17023, 4570], [947, 16600, 1887, 40652, 9742, 6852, 64113, 20714, 0, 21897, 72, 70520, 35076, 17598, 13897, 11513, 42561, 32698, 1214, 21594, 3567, 114084, 15180, 47934, 11789, 3453, 1196, 79296, 3027, 5885, 24374, 8348, 39181, 682, 20565, 6897, 94197, 6429, 28896, 48092]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

