created: 20230724220321000
creator: Drevarr
tags: ChartData
title: 202307242203_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Luke The Ghastly", "Crabbedmermaidd", "Klengah", "Legacy Of Mathus", "Tootsie Pop Rocks", "Necrotic Windrunner", "Oo Dads Mad", "Ryvalia Fazebringer", "Tegan Parker", "Fang Shiyu", "Gabe Malhorn", "Vee Nemesis", "Elon Illusionblade", "Primal Clone", "Ateriuz", "Eibh\u00ebar", "Mistwalker Cael", "Name Is What", "Rahani Sunray", "Rina Of Theros", "Keypek The Drunk", "Jerryatric Reflexes", "Johosh The Mighty", "Xanvias Einzbern", "Gavann", "Be\u00eb", "Sylvanas Rodex", "Jimbo The Pleb", "Sygaldry Verdandi", "Urilstormwalker", "Sub Train", "Drevarr Moonwillow", "Koralia Danai", "Rafaellagabriela", "Crusader Siolith", "Solus Sanctus", "Sister Elon\u00edth", "Bella Sassy"];
const professions = ["Scourge", "Deadeye", "Druid", "Berserker", "Scrapper", "Scourge", "Berserker", "Chronomancer", "Tempest", "Dragonhunter", "Firebrand", "Chronomancer", "Chronomancer", "Chronomancer", "Berserker", "Chronomancer", "Vindicator", "Scourge", "Chronomancer", "Scourge", "Scrapper", "Spellbreaker", "Berserker", "Berserker", "Firebrand", "Scourge", "Herald", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[351.936], [125.3899, 271.089], [17.5769, 0.0, 180.2832, 0.0, 0.0, 30.8784, 0.0, 0.0, 0.0, 0.0, 0.0, 196.6899, 8.7048, 0.0, 1.9943, 0.0, 65.9612, 0.0], [45.7724, 206.7251, 48.6576, 60.9062, 112.9499, 70.6137, 62.377, 102.609], [188.7395, 38.5493, 152.3589, 0.0, 31.1903, 18.5136, 0.0, 7.2526, 10.4044, 2.3824, 84.3486, 151.2806, 0.0, 0.0, 20.8495, 0.0, 27.7488, 94.419], [138.6757, 36.4795, 19.2694, 0.0, 0.0, 15.624, 0.0, 26.3268, 44.4672, 0.0, 10.0274, 303.8157, 117.1354, 0.0, 51.1266, 0.7478, 92.6694, 61.893], [244.1371, 59.4194, 284.142, 41.8375, 70.6762, 39.3456, 9.18, 66.9353, 19.8147, 113.4552], [119.2805, 33.2886, 287.7346, 0.0, 0.0, 0.0, 49.4224, 141.8899, 8.2837, 0.0, 0.0, 286.505, 0.0, 0.0, 20.1243, 7.5788, 0.0, 118.053], [185.9515, 87.0593, 50.7863, 15.3769, 1.9269, 31.752, 0.0, 29.426, 0.0, 124.0795, 97.9151, 97.0906, 15.8918, 38.2378, 0.0, 0.0, 132.7318, 198.315], [11.9209, 20.2032, 53.1378, 60.7488, 0.0, 56.3918, 0.0, 44.0428, 77.2704, 413.7011, 63.8798, 77.6995, 81.3131, 71.3413, 78.506, 78.624], [279.897, 153.1191, 679.8179, 136.6241, 195.3395], [38.548, 46.2246, 210.657, 51.4059, 40.1718, 18.3568, 50.9969, 167.8713, 270.9504, 56.916, 108.3974, 153.7424, 0.0, 71.9735, 169.416], [124.3717, 16.0406, 151.0525, 23.9632, 21.7516, 50.8368, 50.8504, 7.3165, 76.2105, 92.7216, 150.4117, 364.5286, 80.9323, 97.8221, 56.0217, 17.2998, 29.0206, 62.244], [141.4637, 21.8618, 196.1233, 83.9836, 24.1684, 34.4736, 51.0816, 6.0705, 112.3939, 26.4643, 209.8686, 200.9549, 55.175, 46.1693, 138.6945, 3.4963, 45.5543, 140.868], [75.0288, 296.5528, 48.3754, 35.4034, 96.8688, 18.0064, 27.8285, 9.6754, 70.829, 252.8097, 293.7805, 54.0144, 42.7421, 150.479, 17.4008, 72.2625], [173.7083, 59.9368, 201.8388, 30.5012, 76.9796, 49.6272, 0.0, 74.2838, 26.3755, 69.0261, 105.8191, 324.6387, 27.5875, 91.849, 108.78, 0.0, 65.73, 127.062], [142.9184, 47.777, 166.0761, 61.8442, 39.9432, 29.1648, 62.288, 59.0116, 121.6717, 41.0164, 170.3487, 374.313, 67.1386, 58.8989, 116.1226, 0.0, 63.7644, 135.252], [111.0375, 41.1796, 227.6402, 9.1195, 31.1903, 30.072, 27.6216, 28.3396, 105.4356, 93.4299, 185.8028, 416.7117, 86.8248, 102.6691, 134.8872, 3.1123, 97.4099, 116.181], [155.8889, 53.8569, 240.2143, 2.5535, 26.3566, 54.2304, 35.3464, 0.0, 97.8808, 126.0112, 56.2717, 547.671, 84.1018, 117.7488, 115.3974, 25.8082, 114.2326], [220.8628, 109.1367, 209.5139, 16.8641, 32.9213, 38.6064, 0.0, 36.9022, 140.1611, 61.4924, 203.8522, 409.9379, 27.6322, 50.135, 139.601, 21.9481, 118.3371, 204.633], [166.0714, 61.0579, 277.7733, 55.8955, 76.849, 62.664, 15.844, 41.7906, 145.794, 86.8621, 224.9688, 424.489, 75.3523, 80.9798, 167.0679, 11.5803, 106.3704, 195.039], [103.833, 352.728, 14.8718, 18.4856, 15.5904, 38.76, 28.5313, 0.0, 2.64, 575.4577, 177.8739, 106.4218, 164.5546, 164.1672, 6.9522, 137.819, 416.052], [322.2028, 15.6957, 430.6221, 0.0, 35.6647, 149.856, 26.044, 42.2698, 65.4085, 8.6283, 210.3405, 392.3763, 147.8477, 101.3962, 175.6797, 9.7614, 39.5999, 165.789], [241.349, 158.8972, 365.792, 53.5946, 46.2792, 100.7328, 17.7072, 37.3815, 57.6549, 130.9693, 180.966, 463.3754, 46.9613, 93.9542, 97.9927, 59.2557, 63.1863, 202.176], [766.4741, 265.0155, 651.8936, 176.329, 0.0, 128.0496, 48.2764, 166.5365, 219.8275], [105.219, 125.4361, 285.4484, 68.4664, 91.8399, 55.5744, 9.2752, 28.1799, 169.6512, 58.7881, 53.2045, 534.8762, 33.6139, 278.9741, 190.8183, 0.0, 63.3598, 272.61], [256.5443, 97.6769, 119.013, 69.8544, 3.0991, 323.9278, 343.1987, 349.5451, 1546.1734], [257.1076, 39.6273, 301.2885, 38.6106, 157.9764, 147.3024, 43.4248, 89.8114, 148.3785, 114.5498, 247.1472, 525.0918, 104.1005, 238.3373, 280.3804, 62.3276, 172.9097, 259.857], [244.622, 182.915, 530.725, 175.1786, 7.4138, 25.2672, 0.0, 110.0997, 258.9832, 370.1781, 98.269, 368.7936, 20.8022, 75.4474, 225.9904, 3.6782, 50.5259, 497.133], [87.1916, 222.0045, 257.3024, 429.4108, 711.7466, 106.7789, 244.751, 472.1052, 101.7574, 323.5048, 366.093], [309.2322, 254.1062, 49.8065, 76.688, 173.4246, 187.7568, 58.2352, 48.3404, 43.8045, 204.1807, 85.6462, 954.3475, 19.9094, 155.3011, 386.2597, 7.9627, 278.5864, 377.442], [445.1198, 82.1867, 475.0397, 18.688, 60.8456, 121.1616, 85.9384, 29.5218, 32.2735, 280.4828, 533.5783, 822.3846, 81.1555, 108.2016, 270.3183, 0.0, 142.6751, 193.167], [231.5302, 119.1406, 551.4641, 83.1137, 152.0976, 73.92, 22.1136, 92.2716, 428.7006, 168.5086, 314.2721, 601.3594, 109.5912, 173.6122, 502.9262, 35.8121, 137.9347, 179.01], [178.603, 426.213, 69.3082, 41.0863, 149.3184, 0.0, 165.9163, 20.2786, 266.7034, 626.1848, 1021.3325, 104.3683, 140.711, 268.9586, 85.4277, 162.9664, 299.52], [693.0147, 45.4054, 419.3544, 187.2444, 220.7816, 77.5824, 61.608, 242.9478, 141.3539, 350.1528, 460.7908, 1391.3805, 176.5512, 206.3174, 470.9268, 239.3268, 144.0625, 647.946], [685.6203, 174.636, 561.0988, 56.9057, 195.8294, 123.1104, 119.4216, 179.3673, 288.407, 266.7678, 649.3069, 960.6195, 9.9994, 322.6464, 390.2482, 177.6257, 463.2315, 623.025], [470.3336, 279.8057, 1124.8104, 19.3895, 120.3521, 246.4224, 16.9048, 133.0078, 231.216, 282.3502, 839.9464, 1045.1661, 18.8381, 154.7626, 609.5306, 117.7839, 286.622, 597.753], [515.185, 206.7173, 1114.6858, 45.9623, 292.111, 77.3808, 0.0, 123.1992, 567.8676, 382.3478, 165.6299, 1254.6509, 285.5621, 134.2483, 561.8487, 200.463, 175.2799, 891.54]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

