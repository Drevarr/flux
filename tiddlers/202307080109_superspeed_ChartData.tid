created: 20230708010915000
creator: Drevarr
tags: ChartData
title: 202307080109_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Shaca Booey", "Pale Pam", "Newtype Khan", "Mort\u00e4rion", "Pet Pirate", "Mike The Archmagus", "Arcanophage Farra", "The Fancy Cheese", "Grasszanine", "Tegan Parker", "Melli Dragonswrath", "Johosh The Mighty", "Xanvias Einzbern", "K\u00f4sair", "Venomina The Siren", "Ateriuz", "Mother Ship", "Drevarr Moonwillow"];
const professions = ["Berserker", "Druid", "Spellbreaker", "Scrapper", "Druid", "Weaver", "Spellbreaker", "Scrapper", "Spellbreaker", "Tempest", "Berserker", "Berserker", "Berserker", "Spellbreaker", "Tempest", "Berserker", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0.056, 0.562, 0, 0.601, 1.377, 0.227, 1.229, 0.585, 0, 1.231, 0.432, 0, 0, 0, 0, 0, 0, 0, 0, 2.133, 0, 0, 0, 0, 0], [0.252, 0.424, 0.372, 0.512, 0.287, 0, 0.553, 0, 0.135, 0.463, 0.408, 0.303, 0.161, 0.42, 0.202, 0.321, 0.369, 0.814], [0.447, 0, 0, 0, 0.637, 0.69, 0.459, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.014, 0, 0, 0.681, 0.516, 0.583, 0.278, 0, 0.615, 0, 0.334, 0, 0.548, 0.14, 0.518], [0.716, 0.107, 0.435, 0, 0.189, 0, 1.319, 0, 0.515, 1.363, 0.909, 0.166, 0.132, 0.369, 0.609, 0.976, 0, 0.401, 0.67, 0.943, 0, 0.791, 0.989], [0.353, 0.41, 0, 1.066, 1.164], [0.536, 0.21, 1.12, 0.246, 0, 0.411, 0, 0, 0.667, 0, 0, 0, 0, 0.14, 0, 0, 0, 0, 0.392, 0.282, 0.735, 0, 0, 0.381, 0, 0, 0, 0, 0, 0, 0, 0, 0.506, 0, 1.002], [0.424, 0.512, 0.619, 0, 0.638, 0, 0.916, 0, 0.111, 0.772, 0, 0.452, 0, 0.549, 0, 0.601, 0.429, 0.3, 0.669, 0.404, 0.572, 0.604, 0, 0, 0.681, 0.516, 0.832, 0.263, 0, 0.59, 0, 0.248], [0, 0.276, 0.533, 0.316, 0, 0.784, 0.449, 1.072, 0, 0.958, 0.892, 0, 0, 0.514, 0.774, 1.439, 0.379, 0, 0.526, 0.328, 0, 0.182, 0.355], [0.571, 0.745, 0.064, 0, 0.518, 0.3, 0.968, 0, 0.986, 0.984, 0, 0, 0.851, 0.471, 0.383, 0.082, 0, 0, 1.422, 0.611, 0, 0, 0.558], [0.519, 0.637, 0.553, 0, 0.95, 0.103, 0.55, 0, 0.223, 0.924, 1.168, 0.372, 0.863, 0.42, 0.786, 0.359, 0.428, 0.42, 0.575, 0, 0.619, 0.615, 0, 0.889, 0.408, 0.569, 0.509, 0.196, 0.383, 0.856, 1.398, 0.56, 0.616, 1.67, 0.418, 0.956], [0.212, 0.354, 1.401, 0.409, 0.798, 0, 0.459, 0.343, 0, 0, 0, 0.685, 0, 0.47, 0, 0.601, 0, 0.032, 0.428, 0.446, 0, 0.713, 0.512, 0, 1.473, 0.34, 0, 0.843, 0.381, 1.274, 0.616, 0, 0.776, 0.685, 0.927, 0.453, 0.978], [0.447, 0, 0, 0.819, 0.637, 0, 0.459, 0, 0, 0.769, 0.467, 0.547, 0.896, 0.468, 0.655, 0.983, 0.918, 0.183, 0.306, 1.141, 0.511, 1.035, 0.512, 0, 1.105, 1.362, 1.146, 0.381, 0.441, 0.643, 0.342, 0.766, 1.03, 0, 0], [0.896, 0.527, 0.621, 0.818, 0.637, 0, 1.028, 0, 0.371, 0.772, 0, 0.486, 0.801, 0.938, 1.015, 0.544, 0, 0.608, 0.753, 0.986, 0.312, 1.151, 0.683, 0, 0, 0.681, 0.67, 1.015, 0.578, 0.652, 1.253, 1.403, 0.879], [0.447, 0, 0.621, 0, 0, 0, 0.803, 0, 0.354, 1.022, 0.952, 0.599, 0.54, 0.387, 1.097, 0.912, 0.583, 0.274, 1.111, 0, 0.605, 0.998, 0, 0, 0.482, 0.775, 0.845, 0.543, 0, 0.792, 1.422, 0.894, 0.342, 0.697, 0.705], [0.805, 0.583, 0.706, 0.663, 0.944, 0, 1.022, 0.927, 0.988, 0.463, 0.712, 0.627, 0.13, 0.233, 0.457, 0.201, 0.118, 0.214, 0.527, 0.939, 0.491, 0.344, 1.018, 0.18, 1.768, 0.821, 0, 0.533, 0.391, 1.066, 0.895, 0.853, 1.034, 0.821], [0.559, 0, 0, 0, 0, 0, 0.926, 0, 0.454, 0, 0.68, 0.475, 0.834, 0.55, 1.033, 0.556, 0, 0.505, 0.404, 1.166, 0, 0.987, 1.152, 0, 0, 0, 1.089, 1.077, 0.533, 0.638, 0.486, 1.067, 0.901, 0, 0.963, 1.118], [1.103, 0.425, 0.823, 0.245, 0.681, 0.514, 0.275, 0.507, 0.848, 0.463, 0.75, 0.665, 0.796, 1.126, 0.926, 0.361, 2.023, 0.786, 0.695, 0.863, 0.797, 0.831, 0.998, 0.714, 0.885, 1.442, 0.697, 0.609, 0.409, 1.459, 0.43, 1.446, 0.519, 1.023, 1.003, 1.126], [0.671, 0.742, 0.746, 0.737, 2.23, 0.975, 1.377, 0.154, 0.474, 1.448, 0.408, 0.872, 0.805, 1.687, 1.049, 0.536, 1.128, 0.935, 1.449, 0.121, 1.35, 0.833, 0.57, 1.031, 0.697, 0.864, 0.505, 0.582, 1.212, 0.91, 1.516, 0.719, 0, 1.59, 1.61]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

