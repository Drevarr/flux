created: 20230401000636000
creator: Drevarr
modified: 20230705163523618
modifier: drevarr
tags: ChartData
title: 202304010006_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Dark Sidiuz", "Il Kurai Il", "Blancooo Padreee", "Air One Com", "Cat Wigglebooty", "Gavann", "Arriasa", "Tegan Parker", "Rina Of Theros", "Bella Lunabringer", "Nazhul Naxxremis", "Panther B Me", "Sister Elon\u00edth", "Ju\u00e7", "Xanvias Tlesel", "Ark Darkness", "High Sorcer Baradun", "Etcherii", "Legacy Of Mathus", "Be\u00eb", "Whose Guardian", "Newtype Khan", "Jeckyll Mbs", "Rozaalyna", "Smol Daddy Tika", "Zadie Miststep", "Koralia Danai", "Sp\u00edcy Cheese", "Abigail Ryn", "Zaylen Harker", "Aronorf Xideliesi", "Mike The Archmagus", "Smol Gluvs", "Johosh The Great", "Raziel Umbra", "Mac Chiato", "Drevarr Moonwillow", "Arcanophage Farra", "Oo Dads Mad", "Arkintor", "Brioche Bunbringer", "Lord Erin The Wise", "Ateriuz", "Estryl", "Primal Clone", "Grasszanine", "Sassy Daddy Demon", "Ryvalia Fazebringer", "Mistwalker Caelon", "Xyntharos"];
const professions = ["Scourge", "Scourge", "Berserker", "Firebrand", "Scrapper", "Firebrand", "Druid", "Tempest", "Scourge", "Firebrand", "Scourge", "Scourge", "Dragonhunter", "Firebrand", "Berserker", "Firebrand", "Tempest", "Firebrand", "Berserker", "Scourge", "Firebrand", "Spellbreaker", "Berserker", "Scourge", "Berserker", "Tempest", "Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Tempest", "Scrapper", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Weaver", "Berserker", "Berserker", "Chronomancer", "Spellbreaker", "Vindicator", "Chronomancer", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[14, 0, 0, 3, 7, 17, 0, 18, 0, 2, 0, 5, 6, 3, 5, 1, 0, 11, 8, 0, 5, 4, 0, 0], [0, 0, 9, 2, 13, 28, 55, 1, 13, 0], [7, 0, 13, 0, 0, 5, 3, 2, 21, 0, 5, 0, 1, 24, 0, 0, 3, 5, 0, 0, 0, 6, 5, 0, 1, 0, 0, 21], [6, 0, 22, 3, 0, 12, 0, 1, 19, 0, 0, 0, 0, 10, 1, 9, 9, 3, 7, 8, 0, 3, 0, 0, 0, 0, 11], [16, 1, 26, 1, 3, 23, 16, 2, 7, 0, 15, 0, 7, 11], [8, 7, 16, 6, 9, 2, 0, 56, 2, 0, 1, 0, 0, 21], [0, 0, 22, 23, 1, 0, 2, 42, 20, 11, 0, 14, 0, 0, 4], [0, 3, 7, 4, 19, 5, 19, 0, 10, 0, 33, 0, 0, 17, 0, 0, 2, 2, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 9], [19, 0, 18, 7, 1, 17, 5, 1, 3, 0, 15, 0, 0, 19, 1, 7, 1, 0, 0, 3, 7, 0, 0, 5, 0, 0, 0, 0, 14], [7, 0, 5, 0, 27, 0, 5, 6, 1, 0, 23, 0, 0, 8, 0, 0, 14, 5, 0, 10, 2, 0, 3, 3, 0, 0, 0, 0, 25], [9, 1, 14, 3, 13, 9, 19, 3, 10, 0, 7, 0, 0, 10, 1, 0, 14, 2, 5, 0, 2, 14, 0, 7, 9, 0, 0, 0], [0, 0, 29, 6, 4, 19, 12, 1, 15, 0, 7, 0, 3, 10, 3, 0, 12, 7, 4, 0, 1, 0, 0, 11, 2, 0, 1, 0, 0, 5], [13, 5, 11, 1, 9, 0, 16, 2, 17, 0, 1, 29, 0, 0, 0, 0, 8, 0, 18, 2, 0, 3, 0, 0, 21], [20, 23, 4, 0, 5, 0, 23, 0, 1, 11, 0, 18, 28, 0, 0, 0, 0, 12, 3, 0, 0, 0, 0, 9], [17, 0, 7, 0, 18, 15, 2, 11, 11, 0, 14, 0, 2, 1, 1, 16, 11, 2, 0, 1, 1, 0, 1, 5, 0, 0, 0, 0, 32], [5, 0, 9, 0, 32, 8, 5, 3, 14, 0, 0, 0, 0, 21, 2, 10, 46, 0, 0, 0, 14, 0], [19, 2, 15, 0, 25, 7, 16, 1, 22, 0, 32, 8, 0, 25], [7, 1, 8, 6, 1, 17, 45, 8, 5, 0, 40, 0, 3, 6, 0, 0, 19, 3, 1, 0, 8], [13, 1, 41, 12, 0, 9, 3, 18, 40, 0, 21, 0, 0, 3, 0, 22, 6, 0, 0, 0, 0, 0], [5, 0, 1, 0, 11, 15, 34, 1, 14, 0, 11, 0, 1, 16, 1, 16, 34, 2, 0, 2, 2, 0, 9, 3, 0, 2, 0, 0, 11], [20, 3, 13, 0, 0, 4, 20, 1, 17, 0, 31, 0, 0, 28, 0, 0, 13, 9, 3, 0, 3, 10, 0, 10, 0, 6], [12, 5, 22, 10, 15, 10, 10, 0, 8, 0, 9, 0, 1, 30, 0, 6, 20, 1, 5, 1, 0, 18, 5, 0, 1, 0, 0, 6], [22, 0, 1, 20, 16, 15, 35, 2, 22, 0, 17, 25, 1, 0, 4, 13, 2, 0, 12], [17, 0, 7, 0, 0, 15, 30, 5, 6, 10, 0, 0, 21, 2, 20, 15, 0, 7, 23, 0, 9, 6, 3, 0, 0, 13], [34, 2, 13, 11, 6, 8, 18, 0, 21, 0, 29, 0, 3, 20, 0, 0, 15, 1, 3, 0, 2, 2, 0, 13, 7, 0, 0, 0, 1, 0], [11, 5, 24, 10, 33, 5, 36, 0, 11, 0, 12, 0, 0, 5, 0, 0, 4, 33, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 21], [10, 0, 7, 9, 7, 28, 12, 0, 21, 0, 18, 0, 5, 4, 2, 8, 12, 3, 13, 1, 0, 16, 1, 0, 4, 0, 0, 36], [12, 0, 14, 8, 3, 24, 10, 0, 0, 0, 59, 3, 13, 0, 19, 6, 0, 0, 3, 17, 0, 24, 0, 0, 0, 2, 0], [16, 0, 12, 5, 2, 43, 24, 12, 3, 0, 80, 0, 6, 17], [19, 4, 5, 0, 3, 4, 27, 16, 7, 0, 57, 0, 0, 3, 0, 0, 37, 2, 5, 4, 4, 0, 9, 2, 2, 0, 0, 18], [6, 0, 12, 0, 23, 8, 14, 0, 7, 0, 33, 1, 1, 22, 0, 28, 4, 1, 0, 2, 40, 0, 9, 2, 0, 0, 0, 30], [10, 0, 3, 2, 26, 3, 23, 5, 0, 0, 33, 0, 0, 10, 0, 0, 19, 29, 2, 0, 5, 51, 10, 3, 3, 0, 0, 8], [7, 0, 25, 0, 0, 25, 22, 0, 14, 0, 8, 0, 1, 40, 0, 0, 27, 24, 5, 0, 5, 12, 0, 7, 2, 0, 2, 1, 0, 20], [4, 4, 21, 7, 8, 14, 51, 2, 20, 0, 6, 0, 0, 14, 2, 0, 13, 19, 2, 3, 20, 17, 4, 0, 2, 0, 0, 17], [7, 1, 15, 0, 29, 11, 36, 0, 9, 0, 27, 0, 0, 20, 0, 0, 17, 19, 2, 0, 4, 0, 0, 13, 4, 0, 0, 0, 0, 38], [31, 2, 4, 3, 20, 31, 30, 1, 9, 1, 28, 0, 0, 18, 3, 0, 27, 12, 7, 0, 9, 10, 0, 5, 4, 0, 0, 0, 0, 7], [11, 0, 38, 4, 6, 12, 19, 4, 8, 0, 61, 0, 3, 18, 0, 0, 17, 25, 0, 5, 1, 0, 5, 6, 0, 3, 0, 0, 21], [34, 2, 36, 9, 17, 27, 61, 0, 32, 0, 67, 0, 2, 1], [34, 2, 1, 5, 54, 17, 38, 1, 17, 0, 59, 0, 3, 21, 2, 14, 19, 8, 0, 1], [12, 0, 13, 1, 22, 16, 8, 0, 14, 0, 60, 0, 0, 1, 0, 17, 36, 10, 2, 48, 0, 10, 1, 0, 0, 0, 0, 26], [20, 0, 2, 8, 5, 25, 44, 10, 18, 0, 43, 0, 0, 22, 4, 29, 18, 10, 0, 4, 27, 0, 7, 0, 1, 7, 0, 0, 15], [21, 0, 0, 11, 94, 45, 5, 1, 12, 3, 23, 0, 5, 28, 0, 1, 23, 9, 5, 2, 7, 0, 0, 7, 16, 0, 2, 0, 0], [0, 7, 6, 35, 24, 47, 0, 9, 0, 75, 0, 2, 27, 0, 0, 16, 4, 6, 0, 2, 20, 0, 18, 5, 0, 0, 0, 0, 17], [16, 0, 15, 45, 24, 21, 28, 0, 16, 4, 18, 2, 19, 0, 0, 11, 13, 0, 0, 7, 19, 0, 15, 14, 6, 1, 0, 1, 36], [12, 0, 17, 6, 5, 20, 34, 3, 24, 0, 101, 0, 36, 0, 0, 47, 6, 4, 0, 1, 0, 0, 12, 6, 0, 8, 0, 1, 21], [62, 3, 43, 2, 58, 23, 7, 3, 27, 1, 56, 1, 48, 0, 0, 19, 11, 11, 9, 7, 0, 23, 18, 0, 3, 0, 0, 24], [68, 5, 16, 19, 20, 37, 28, 4, 34, 0, 3, 0, 6, 52, 2, 0, 36, 14, 7, 1, 35, 0, 0, 45, 20, 0, 4, 2, 0, 13], [16, 0, 26, 15, 28, 16, 71, 7, 26, 0, 91, 0, 11, 50, 2, 0, 45, 32, 11, 9, 3, 0, 9, 9, 0, 4, 0, 0, 13], [71, 6, 19, 12, 59, 61, 6, 3, 22, 3, 89, 0, 1, 37, 0, 0, 23, 20, 14, 1, 8, 8, 0, 27, 8, 0, 13, 4, 0, 22], [81, 2, 47, 14, 30, 30, 50, 5, 44, 0, 20, 0, 1, 58, 10, 1, 43, 1, 17, 4, 41, 9, 1, 68, 19, 0, 5, 0, 1, 50]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

