created: 20230204220933000
creator: Drevarr
modified: 20230705163518668
modifier: drevarr
tags: ChartData
title: 202302042209_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "Ace Rages", "Domina Flagbringer", "Daring Deathblade", "Kira Dragonblaze", "Whose Guardian", "Warrior Husky", "Manuel Radiador", "Grasszanine", "Dark Sidiuz", "Smol Gluvs", "Nelliel T", "Bubblesparklepuff", "Daddys Lil Orchid", "Rozaalyna", "Madrigal Moonshade", "Legacy Of Mathus", "Fungus", "Rina Of Theros", "Be\u00eb", "Etch\u00e9ry", "Sp\u00edcy Cheese", "Lord Erin The Wise", "Kosa\u00edr", "Sofya De Meme", "Xanvias Einzbern", "Mistwalker Caelon", "Demon Sekhmet"];
const professions = ["Necromancer", "Berserker", "Spellbreaker", "Scourge", "Dragonhunter", "Dragonhunter", "Berserker", "Scrapper", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Vindicator", "Vindicator", "Scourge", "Vindicator", "Berserker", "Scourge", "Scourge", "Scourge", "Berserker", "Berserker", "Weaver", "Scrapper", "Weaver", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[309.1375, 259.24, 485.4533, 547.2281], [154.3285, 295.263, 142.4262, 356.9438, 41.6168, 33.9637, 346.3393, 186.4089, 7.44, 207.5273, 190.6175], [187.018, 135.206, 208.7377, 229.1953, 229.1402, 141.4283, 0.0, 440.8104, 0.0, 87.7866, 284.7684], [408.5095, 242.3125, 724.8439, 202.52, 170.1446, 523.2607], [518.3381, 537.536, 221.0164, 526.3639, 110.8598, 63.0829], [490.8165, 307.1117, 591.9344, 432.6036, 650.6199], [254.9616, 190.7022, 294.3852, 444.1953, 3.9688, 319.487, 122.0179, 67.8736, 0.0, 275.6085, 327.1973], [839.56, 779.9479, 524.5328], [290.0288, 242.5782, 324.9262, 325.5118, 226.9065, 128.6788, 114.9911, 538.6506, 0.0, 253.4268, 370.3019], [496.2604, 405.0903, 247.9447, 706.9554, 1064.9033, 245.92, 459.4621, 171.2316], [244.6547, 186.5385, 487.7049, 527.6746, 237.4081, 255.3696, 180.5982, 447.9442, 0.0, 145.1182, 370.5197], [216.3561, 346.7643, 639.6967, 106.1065, 0.0, 292.2263, 54.3036, 80.0669, 0.0, 479.8095, 495.0943], [618.9464, 115.6989, 131.44, 931.0705, 1230.9897], [624.7314, 257.7519, 545.5164, 708.0917, 80.5919, 392.4957, 481.2946, 0.0, 83.8, 718.2011, 41.1321], [508.2314, 406.5906, 656.9754, 579.8787, 398.9626, 191.8411, 448.7679, 1071.2045, 0.0, 450.866, 502.4545], [544.8825, 346.3548, 610.5328, 740.4112, 114.1277, 404.418, 129.1786, 19.7807, 0.0, 601.6702, 874.084], [631.9077, 793.1663, 339.0902, 1163.2101, 842.5202, 254.7098, 295.1339, 389.9294, 0.0, 361.5891, 695.2264], [675.2074, 463.3623, 758.377, 572.2988, 731.1246, 466.1796, 592.9911, 1197.6171, 21.6, 426.1817, 733.669], [621.2062, 422.8536, 663.0656, 833.8195, 749.2336, 626.5354, 0.0, 1174.1673, 0.0, 469.5855, 677.0137], [889.5779, 726.6055, 894.3361, 1129.8195, 478.215, 711.3489, 607.8661, 1379.7063, 0.0, 500.358], [944.6775, 625.3747, 1494.6148, 1282.1154, 340.0935, 849.2936, 349.9107, 1308.4201, 0.0, 576.7302, 1022.4631], [707.1871, 971.9007, 0.0, 1085.8728, 1382.7508, 871.0449, 540.1429, 1895.2268, 103.96, 489.194, 890.5386], [1084.3549, 989.7221, 999.4344, 1010.5059, 551.7477, 252.0449, 525.4464, 1911.4387, 68.28, 955.9594, 846.3619], [645.6243, 1098.3333, 996.0086, 635.4107, 2154.9888, 0.0, 2191.7795, 1923.7907], [1359.3106, 1041.9156, 1447.8197, 1539.3373, 1541.3427, 1503.3195, 1463.0446, 2436.829, 35.64, 564.8854], [1373.1067, 790.3772, 2107.5902, 1594.4024, 1501.7165, 1011.5561, 694.1161, 2194.6022, 293.44, 2021.7919, 1206.2453], [1453.9556, 1113.206, 1377.0984, 1726.3669, 1156.7134, 1181.2245, 559.9911, 2317.5576, 195.88, 1364.2011, 1739.0497], [1441.5635, 841.0868, 1186.1803, 2133.1243, 1109.9439, 1253.5544, 231.6339, 1170.0929, 224.56, 2004.3139, 1684.4717]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

