created: 20230424220408000
creator: Drevarr
modified: 20230705163526619
modifier: drevarr
tags: ChartData
title: 202304242204_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Black Raspberry Pie", "Zadie Miststep", "Koralia Danai", "Tika Rucola", "Kiloak", "Gavann", "Arka\u00f1tor", "Fribble Bibble", "Zaylen Harker", "Johosh The Great", "Sygaldry Verdandi", "Zefirokai", "Bella Sassy", "Tegan Parker", "Drevarr Moonwillow", "High Sorcer Baradun", "Mac Aaroni", "Newtype Khan", "Blancooo Padreee", "Grasszanine", "Solo Bloodborn"];
const professions = ["Chronomancer", "Tempest", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Tempest", "Scrapper", "Tempest", "Tempest", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[47.0973, 6.027, 5.3975, 10.1287, 3.36, 0.0, 0.0, 3.5328, 4.9416, 0.0, 12.1275, 3.4744, 0.0], [52.5407, 4.7285, 5.3354, 2.0971, 4.704, 0.0, 0.0, 0.0, 0.7838, 3.3075, 10.6722, 7.216, 5.88], [42.3639, 0.0, 13.959, 8.4332, 1.801, 2.467, 0.0, 2.089, 8.6563, 2.8665, 0.8379, 4.3525, 12.78], [30.0571, 9.8245, 12.0978, 9.861, 7.4995, 0.0, 14.449, 3.0413, 6.6115, 3.3443, 6.0417, 3.4362, 13.14], [57.9841, 1.2005, 7.724, 14.0107, 8.9779, 0.9187, 4.5158, 3.7147, 8.1585, 3.1311, 4.6961, 8.94], [71.001, 6.6885, 4.2497, 7.4995, 0.7905, 4.9834, 6.2054, 9.0312, 8.6362, 5.9535, 5.0779, 0.18], [49.464, 6.517, 9.4301, 4.8636, 6.4243, 7.4965, 6.1248, 9.4003, 5.0438, 6.468, 9.1287, 4.2762, 10.98], [60.8242, 2.597, 8.5305, 6.4699, 6.2899, 1.8128, 4.2595, 5.3146, 4.669, 6.9457, 13.5828, 5.6125, 10.02], [72.421, 0.0, 3.164, 3.7927, 6.3168, 1.7719, 4.8442, 13.824, 4.6008, 15.435, 13.8033, 11.9885, 11.94], [76.9178, 8.085, 5.3665, 7.05, 6.2899, 2.2353, 0.0, 3.9936, 6.816, 9.6653, 8.7759, 10.1941, 19.32], [94.4313, 5.1695, 7.724, 7.8531, 4.5696, 0.0, 3.2573, 12.2573, 2.3856, 14.8103, 8.379, 12.1031, 17.34], [22.2298, 1.0904, 19.9334, 28.1088, 30.672, 0.9923, 40.1751, 22.068, 34.38], [109.3415, 0.0, 11.9737, 7.3623, 3.9514, 2.4398, 3.6749, 10.6598, 2.0448, 11.0985, 6.8796, 16.4556, 17.94], [103.4248, 0.0, 23.6062, 0.0, 0.0, 9.8545, 14.0592, 0.0, 0.0, 18.522, 13.3623, 14.1648, 20.52], [79.0478, 5.2675, 9.7713, 11.1996, 12.4186, 4.7841, 5.0112, 8.3866, 16.0176, 9.1508, 25.1811, 13.7448, 19.92], [19.4069, 0.0, 42.9937, 25.7011, 19.5149, 10.536, 3.2851, 34.345, 15.8813, 20.9107, 18.1692, 19.9681, 21.78], [205.1929, 6.1985, 6.4522, 0.0, 9.9725, 5.4929, 12.7507, 4.4851, 0.443, 16.0598, 16.0083, 17.2955, 8.82], [140.3453, 12.9605, 21.745, 32.8849, 16.4237, 8.6959, 9.2429, 20.5824, 17.6534, 17.9708, 26.6805, 20.159, 37.62], [216.0797, 7.2765, 26.8013, 39.2656, 28.5197, 12.744, 25.1952, 40.1818, 45.7013, 38.6242, 29.7675, 46.9614, 80.28], [270.0405, 15.631, 31.9816, 36.633, 30.455, 15.8381, 24.3322, 31.9488, 24.708, 34.1407, 51.5088, 38.9818, 70.14], [388.3755, 27.4645, 49.1047, 51.2238, 41.4221, 14.6795, 31.0416, 49.0906, 37.5221, 52.5892, 65.8413, 62.3861, 77.46]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

