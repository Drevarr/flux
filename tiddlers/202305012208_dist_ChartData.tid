created: 20230501220820000
creator: Drevarr
modified: 20230705163527829
modifier: drevarr
tags: ChartData
title: 202305012208_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Be\u00eb", "Zadie Miststep", "Black Raspberry Pie", "Sygaldry Verdandi", "Tika Sumiko", "Hauzzy", "Skye Nightroad", "Mac Aaroni", "Gabe Malhorn", "Smol Gluvs", "Tyzzki", "Eibh\u00ebar", "Koralia Danai", "Raevarae", "Whose Guardian", "Drevarr Moonwillow", "Johosh The Great", "Joint Lee", "Xanvias Einzbern", "Bella Sassy"];
const professions = ["Scourge", "Tempest", "Chronomancer", "Firebrand", "Tempest", "Berserker", "Scrapper", "Tempest", "Firebrand", "Scourge", "Tempest", "Chronomancer", "Firebrand", "Reaper", "Firebrand", "Scrapper", "Firebrand", "Scrapper", "Berserker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[339, 177, 522, 658, 371, 508, 389, 3213, 268, 443, 554, 416, 213, 305], [316, 238, 422, 402, 288, 484, 306, 6913, 329, 668, 729, 548, 179, 327], [304, 224, 320, 265, 475, 467, 2836, 484, 355, 569, 513, 297, 200, 355], [3199, 236, 713, 444, 394, 556, 946, 726, 313, 532, 355, 448, 170, 328], [296, 167, 297, 246, 592, 581, 5582, 6683, 288, 544, 422, 341, 182, 338], [271, 184, 348, 224, 570, 605, 8079, 5519, 357, 454, 556, 538, 182, 335], [264, 234, 379, 256, 341, 357, 1495], [3136, 357, 674, 286, 971, 573, 417, 257, 338, 371, 557, 633, 185, 527], [308, 218, 353, 380, 376, 403, 276, 499, 308, 390, 381, 323, 176, 257], [287, 176, 393, 202, 488, 439, 421, 4298, 285, 486, 640, 247, 202, 316], [291, 207, 408, 199, 350, 574, 383, 2230, 403, 568, 316, 420, 161, 676], [249, 294, 487, 463, 411, 468, 2962, 1433, 292, 511, 610, 391, 113, 201], [283, 162, 388, 561, 379, 392, 5304, 11612, 294, 369, 604, 238, 289], [164, 348, 331, 472, 638, 2648, 368], [289, 131, 358, 288, 331, 471, 1571, 333, 320, 456, 341, 519, 195, 264], [263, 240, 367, 272, 246, 431, 303, 221, 252, 468, 295, 205, 197, 349], [317, 195, 381, 267, 290, 424, 648, 4107, 326, 259, 544, 223, 162, 243], [243, 172, 479, 247, 246, 474, 286], [225, 184, 344, 274, 312, 404, 228, 7025, 243, 374, 4150, 201, 152, 270], [204, 84, 286, 238, 296, 294, 4552, 3367, 219, 232, 445, 228, 139, 223]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

