created: 20230303232222000
creator: Drevarr
modified: 20230705163521028
modifier: drevarr
tags: ChartData
title: 202303032322_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Jupi Jupi Jupi", "Seren\u00e1 Joy", "Morton Saltbringer", "Kosa\u00edr", "Sp\u00edcy Cheese", "Smol Gluvs", "Heks Appeal", "Xanvias Tseli", "Newtype Khan", "Demon Sekhmet", "Panther B Me", "Koralia Danai", "Grasszanine", "Drevarr Moonwillow", "Eibh\u00ebar", "Viral Marketing", "Bella Sassy"];
const professions = ["Firebrand", "Firebrand", "Chronomancer", "Chronomancer", "Scrapper", "Berserker", "Scourge", "Scourge", "Berserker", "Spellbreaker", "Berserker", "Scourge", "Firebrand", "Spellbreaker", "Scrapper", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[381, 735, 1542, 5534, 635, 263, 265, 1564, 292, 247, 228, 320, 316], [349, 615, 932, 1305, 2171, 546, 955, 22311, 1576, 2501, 302, 598, 645], [398, 686, 572, 678, 522, 434, 257, 329, 396, 2240, 605, 482, 268, 541, 933, 1361, 457, 706, 234, 226, 888, 202, 287, 250, 385, 319], [333, 496, 1600, 599, 207, 448, 372, 437, 952, 3481, 2579, 1146, 381, 662, 666, 2816, 204, 243, 722, 715, 240, 518, 339, 331], [266, 420, 3812, 1227, 2478, 499, 342, 521, 352, 189, 1055, 517, 3253, 278, 253, 1145, 431, 274, 311, 345, 291], [563, 1011, 3369, 1256, 433, 365, 6264, 379, 1501, 985, 195, 5458, 947, 584, 294, 216, 378, 303, 255, 301, 15145], [231, 606, 595, 364, 474, 353, 325, 468, 387, 5243, 419, 381, 345, 249, 479, 355, 1795, 511, 238, 256, 877, 272, 871, 1649, 294, 279], [449, 411, 346, 308, 1233, 395, 423, 456, 414, 3763, 449, 536, 4384, 1659, 638, 373, 14454, 2121, 338, 365, 1848, 247, 6791, 331, 405, 435], [272, 656, 478, 851, 575, 477, 264, 286, 573, 721, 414, 403, 260, 162, 476, 456, 712, 1118, 205, 228, 1213, 234, 207, 275, 291, 325], [243, 486, 586, 366, 812, 333, 396, 431, 833, 1226, 462, 413, 206, 406, 1022, 1076, 326, 819, 237, 285, 1989, 199, 237, 257, 308, 312], [285, 775, 3088, 420, 2212, 438, 184, 442, 627, 1285, 4821, 734, 8135, 285, 293, 198, 1334, 2535, 3456, 258, 922, 385, 297, 369, 283, 292], [217, 696, 411, 844, 219, 610, 1076, 9984, 4193, 285, 306, 266, 446, 971, 703, 613, 3629, 390, 213, 543, 310, 6072, 333, 379, 301], [307, 402, 1037, 430, 1036, 267, 438, 355, 423, 2314, 486, 344, 235, 333, 776, 294, 364, 369, 1845, 257, 300, 344], [199, 1200, 417, 289, 2567, 393, 300, 285, 254, 2321, 569, 370, 275, 209, 790, 279, 541, 246, 259, 602, 173, 7001, 513, 276, 293], [190, 721, 1033, 325, 2039, 352, 312, 324, 344, 2182, 262, 568, 228, 156, 341, 996, 906, 1961, 195, 231, 452, 216, 215, 223, 258, 268], [166, 1156, 914, 230, 767, 827, 230, 210, 763, 2165, 477, 1035, 190, 200, 670, 502, 954, 512, 204, 180, 385, 221, 177, 448, 208, 243], [269, 221, 299, 305, 955, 399, 415, 215, 301, 940, 405, 706, 896, 179, 230, 867, 180, 229, 235, 309, 286], [211, 261, 332, 937, 375, 228, 442, 304, 238, 1542, 227, 421, 185, 177, 288, 209, 407, 188, 202, 255, 185, 182, 242, 197, 227]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

