created: 20231014223416000
creator: Drevarr
tags: ChartData
title: 202310142234_downContribution_ChartData
type: text/vnd.tiddlywiki


const names = ["Vamp X Potato", "Newtype Khan", "Kalisha Lafay", "Daphne Agla\u00e9", "Cedryn X", "Caoimhe Corpsetouch", "Mistwalker Cael", "Morv\u00e4rth", "Kat Bon Z", "Daring Deathblade", "Daray Darkblood", "Rina Of Theros", "Adjudicatrix Farra", "Sassy Daddy Demon", "K\u00e2 \u00d4tik R\u00e6j", "Glorious Gluvs", "Lord Erin The Wise", "Be\u00eb", "Xanvias Einzbern"];
const professions = ["Renegade", "Spellbreaker", "Chronomancer", "Reaper", "Berserker", "Reaper", "Herald", "Reaper", "Scrapper", "Reaper", "Reaper", "Reaper", "Reaper", "Herald", "Berserker", "Berserker", "Weaver", "Reaper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Down Contribution per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8.4706, 0.0, 68.0851, 51.1169, 0.0, 95.0752, 13.775, 256.8672, 494.8667, 72.3883, 33.185, 0.0, 0.0], [143.3248, 95.4286, 88.3448, 103.5851, 0.0, 21.5385, 7.8872, 46.95, 109.3594, 78.3333, 7.2979, 58.9764, 118.0667, 0.0, 83.0495, 31.1159, 84.5, 28.4091, 12.1021, 19.7718, 96.398, 51.7368, 0.0, 0.0, 0.0, 25.3529], [0.0, 94.0769, 46.5714, 0.4138, 104.0691, 36.5584, 113.8803, 52.7143, 14.9417, 66.1641, 108.2667, 0.0, 2.2047, 61.68, 31.1591, 224.0297, 28.6667, 129.4048, 26.3182, 66.7617, 80.5235, 201.1939, 59.8947, 23.0863], [1.6176, 158.6154, 6.0857, 0.0, 53.8723, 115.0779, 49.359, 44.6541, 163.5917, 144.5, 386.45, 41.4894, 86.9567, 242.6267, 67.553, 0.0, 69.2464, 879.881, 171.5, 7.7404, 44.4899, 23.5714, 69.0877, 0.0], [0.0, 0.0, 49.4415, 103.1818, 30.906, 66.015, 64.0167, 600.8125, 372.8167, 44.0372, 33.1496, 103.4533, 127.053, 0.0, 43.9565, 1644.0, 50.0455, 82.3319, 60.9597, 120.5204, 27.8421, 0.0], [0.0, 123.1752, 197.8571, 3.931, 99.0319, 104.8831, 89.5128, 45.2256, 82.15, 261.625, 316.5833, 96.3936, 105.2992, 228.72, 37.0758, 144.8515, 82.7681, 553.6667, 0.0, 32.4596, 20.8322, 507.7755, 11.4211, 56.651, 0.0], [37.1471, 536.1966, 529.2286, 781.8276, 615.4628, 225.1299, 215.7094, 104.797, 161.2167], [36.8235, 67.3932, 0.0, 551.6552, 73.9096, 290.4545, 202.8462, 0.0, 46.1833, 238.0703, 550.2167, 100.1702, 189.5433, 397.12, 269.5909, 315.6634, 116.1522, 855.0, 20.1818, 56.9617, 164.2483], [0.0, 33.3034, 397.4828, 180.6649, 0.0, 163.6581, 80.1429, 46.7833, 321.3281, 664.4167, 0.0, 410.3976, 422.1733, 178.6061, 474.0, 176.2174, 621.8095], [826.8621, 95.117, 217.0519, 104.1368, 78.6617, 46.325, 171.375, 423.0333, 49.2447, 64.9803, 617.5467, 181.5758, 0.0, 82.7899, 939.881, 72.4091, 104.4936, 303.0671, 916.6429, 0.0, 24.1373, 0.0, 0.0], [6.8235, 143.0085, 193.6857, 22.3448, 172.5319, 251.5974, 27.4103, 0.0, 48.0333, 229.3125, 919.4167, 30.0904, 138.4055, 487.2267, 40.4924, 229.2574, 187.8261, 1108.4524, 20.1061, 50.3277, 129.8792, 264.8367, 171.3333, 73.9882, 0.0, 0.1938, 71.8824], [0.0, 275.6496, 200.4, 712.069, 159.8883, 72.6104, 69.2393, 52.188, 122.8333, 434.2812, 758.4667, 99.4255, 115.689, 165.92, 66.303, 348.1485, 73.3986, 983.3571, 87.9394, 116.417, 153.9866, 259.7143, 65.1228, 61.349, 10.5228, 28.938, 56.6765], [86.1176, 300.9701, 55.1714, 378.2287, 51.7532, 231.7778, 3.4361, 128.7583, 286.7969, 13.2, 196.5691, 237.3898, 535.2267, 59.6515, 551.4455, 90.0507, 1101.1905, 0.0, 30.0681, 120.1007, 262.0918, 29.4561, 0.0, 0.0, 0.0, 163.3529], [0.0, 370.3462, 61.3143, 189.5862, 515.7234, 61.8442, 0.0, 19.797, 86.375, 665.5312, 655.8167, 182.9255, 421.7047, 481.64, 55.5682, 350.7624, 42.9783, 879.3333, 0.0, 46.4553, 145.2349], [0.0, 549.8162, 167.5143, 2278.7586, 430.7074, 303.6234, 178.9487, 95.2105, 52.3667, 556.1875, 2181.95, 49.2287, 420.8819, 230.5733, 57.5606, 670.1782, 330.4855], [157.2647, 378.5726, 0.0, 798.7586, 372.6223, 156.3896, 93.9829, 51.6015, 228.6667, 687.0625, 1684.55, 466.5851, 488.5394, 531.8933, 161.0, 285.5347, 145.5217, 205.881, 0.0, 2.2213, 528.3367, 0.0, 8.9098, 0.0, 0.0, 105.5294], [0.0, 338.2051, 115.5143, 1149.2759, 300.1596, 886.0, 122.8547, 18.1128, 215.9417, 520.0703, 851.85, 202.2287, 299.3937, 771.2667, 98.9394, 666.2277, 120.6884, 1226.381, 25.8182, 207.6894, 77.396, 981.3878, 96.6842, 100.7333, 9.1574, 0.0, 359.9706], [168.6765, 321.688, 26.3714, 732.3448, 750.6064, 207.987, 178.2051, 78.188, 119.3667, 507.7031, 939.4167, 0.0, 309.3346, 943.5067, 429.0758, 696.8713, 262.058, 1745.4762, 45.5, 33.9362, 316.8792, 376.3571, 194.4737, 124.502, 0.0, 0.0, 211.1176], [114.1176, 1193.0385, 680.5143, 2009.7931, 1279.2287, 505.0909, 96.188, 45.0, 271.3, 1691.0703, 3097.95, 753.0691, 743.6181, 864.7467, 249.9015, 1286.0396, 868.587, 4387.5952, 0.0, 229.7234, 569.0134]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

