created: 20230329220116000
creator: Drevarr
modified: 20230705163523343
modifier: drevarr
tags: ChartData
title: 202303292201_regeneration_ChartData
type: text/vnd.tiddlywiki


const names = ["Gavann", "Ravioli Fetabringer", "Tootsie Pop Bringer", "Boysto Yardbringer", "Avian Nefaris", "Big Macbringer", "Arkintor", "Charred Fishbringer", "Spicy Gyrosbringer", "Band Aidbringer"];
const professions = ["Firebrand", "Firebrand", "Scrapper", "Vindicator", "Tempest", "Tempest", "Tempest", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Regeneration per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[89.2231, 0.0, 774.0223, 113.3194, 950.8195, 101.5036, 0.0, 43.2391, 0.0, 10.584], [77.713, 0.0, 1015.6023, 60.4666, 816.2009, 122.5995, 85.1743, 21.7404, 12.1716], [144.2335, 8.2824, 994.3433, 19.2192, 2061.1196, 136.0744, 0.0, 5.2866, 34.344, 0.0], [61.2549, 0.0, 315.0203, 100.4573, 3086.5251, 525.3002, 64.053, 31.5229, 19.44, 99.3426], [0.0, 0.0, 3687.4576, 611.2303, 180.576, 60.7597, 67.2948, 70.413], [0.0, 12.7512, 1708.9369, 106.8144, 2080.5241, 520.7717, 59.631, 74.7262, 48.6324, 114.4836], [325.9343, 164.0688, 4125.2201, 565.0445, 3190.2178, 70.026, 331.9102, 123.0552, 280.4613], [161.9352, 0.0, 4844.1622, 136.0867, 7350.0532, 505.0879, 7.986, 0.0, 0.0, 19.2276], [340.9106, 21.6216, 7138.2058, 571.1798, 8086.2106, 878.5193, 0.0, 47.5612, 90.0072, 45.0261], [421.1903, 180.3816, 6512.9968, 864.4944, 7616.2584, 1041.1017, 97.218, 40.3815, 404.6436, 198.9792]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

