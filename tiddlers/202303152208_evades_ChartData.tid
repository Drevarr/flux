created: 20230315220824000
creator: Drevarr
modified: 20230705163522197
modifier: drevarr
tags: ChartData
title: 202303152208_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Husky Guard", "Bella Sassy", "Etcheriii", "Oo Dads Mad", "Rayla Shadowmoon", "Rina Of Theros", "Cat Wigglebooty", "Panther B Me", "Blanco Padre Guard", "Elonith Requiem", "Sp\u00edcy Cheese", "Fribble Bibble", "Johosh The Great", "Smol Daddy Tika", "Sygaldry Verdandi", "Kmpek", "Be\u00eb", "Koralia Danai", "Ace Hammers", "Seren Nightroad", "Dark Sidiuz", "Fruji", "Zaylen Harker", "Drevarr Moonwillow", "Tribal S", "K\u00f4sair", "Whose Guardian", "Sumatra Satyricon", "Nazhul Naxxremis", "Lord Erin The Wise", "Belvyn Brightblade", "Demon Sekhmet", "Ravioli Fetabringer", "Raziel Umbra", "Etcheriii", "Xanvias Tseli", "Smol Gluvs", "Sofya De Nova", "Cerys Fireblade", "Mike The Archmagus", "Primal Clone", "Black Raspberry Pie", "Eibh\u00ebar", "Newtype Khan", "Arcanophage Farra", "Mac Chiato", "Ryvalia Fazebringer", "Xyntharos", "Mistwalker Caelon", "\u00c1rkantor"];
const professions = ["Dragonhunter", "Firebrand", "Vindicator", "Spellbreaker", "Herald", "Scourge", "Scrapper", "Scourge", "Firebrand", "Scourge", "Berserker", "Scrapper", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Scourge", "Firebrand", "Vindicator", "Scourge", "Scourge", "Scrapper", "Firebrand", "Scrapper", "Druid", "Berserker", "Firebrand", "Soulbeast", "Scourge", "Weaver", "Firebrand", "Berserker", "Firebrand", "Chronomancer", "Herald", "Berserker", "Scourge", "Weaver", "Berserker", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Spellbreaker", "Spellbreaker", "Tempest", "Chronomancer", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2, 0, 1, 0, 16, 13, 0, 9, 6], [0, 1, 3, 0, 2, 0, 0, 5, 1, 3, 24, 0, 7, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [9, 0, 35, 1, 0, 0, 0, 1, 0, 5], [15, 0, 11, 0, 4, 0, 10, 0, 4, 14], [2, 28, 11, 0, 0, 0, 0, 19], [0, 7, 1, 1, 3, 0, 0, 1, 0, 13, 12, 0, 8, 0, 1, 0, 0, 0, 0, 5, 10, 0, 0], [0, 4, 0, 0, 6, 0, 21, 18, 15, 0, 1, 0, 0, 0, 0, 1, 6, 0, 4], [0, 3, 10, 0, 1, 0, 0, 4, 4, 14, 22, 0, 3, 0, 0, 1, 0, 0, 0, 0, 11, 0, 1, 3], [4, 7, 0, 0, 3, 0, 0, 10, 0, 26, 2, 0, 1, 5, 0, 0, 0, 4, 7, 0, 0, 13], [8, 0, 8, 6, 0, 0, 19, 0, 14, 25, 2, 0, 0, 0, 1, 0, 0, 4, 1, 0, 3], [8, 7, 7, 1, 0, 0, 8, 0, 9, 21, 0, 13, 0, 0, 0, 0, 0, 11, 5, 0, 1, 1], [7, 3, 8, 0, 3, 0, 0, 17, 0, 11, 18, 0, 16, 0, 2, 0, 0, 0, 2, 0, 7], [5, 3, 3, 3, 0, 0, 14, 0, 31, 17, 0, 8, 2, 1, 2, 0, 2, 0, 2, 3, 0, 0], [6, 5, 7, 0, 16, 0, 0, 9, 0, 18, 15, 0, 16, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0], [7, 9, 3, 1, 4, 0, 0, 10, 0, 21, 14, 0, 33, 0, 0, 0, 0, 1, 0, 0, 0, 0], [3, 8, 0, 4, 5, 0, 0, 0, 33, 4, 3, 2, 43], [3, 2, 7, 0, 8, 0, 0, 3, 0, 39, 13, 0, 25, 0, 3, 0, 0, 0, 0, 1, 4, 0, 0, 0], [15, 4, 13, 1, 8, 1, 0, 11, 1, 10, 16, 0, 13, 0, 3, 1, 0, 3, 4, 0, 0, 4], [9, 14, 13, 0, 2, 8, 19, 49], [8, 17, 7, 0, 12, 0, 0, 22, 0, 12, 7, 0, 9, 0, 0, 0, 0, 0, 0, 6, 0, 0, 1, 14], [3, 3, 13, 0, 6, 0, 0, 22, 0, 19, 21, 2, 28], [3, 5, 0, 0, 14, 0, 0, 18, 0, 31, 20, 0, 15, 0, 0, 0, 0, 1, 0, 5, 10, 0, 1, 0], [14, 13, 9, 5, 0, 0, 5, 1, 38, 12, 0, 16, 0, 0, 0, 0, 1, 6, 2, 0, 0, 2], [9, 7, 2, 0, 4, 0, 0, 8, 0, 30, 23, 0, 35, 0, 0, 0, 0, 1, 0, 2, 4, 0, 0, 0], [8, 20, 3, 0, 7, 1, 0, 9, 0, 13, 24, 0, 27, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 9], [11, 20, 3, 0, 5, 0, 0, 31, 0, 18, 31, 0, 7, 0, 0, 0, 0, 1, 0, 1, 3, 0], [28, 4, 3, 0, 1, 0, 0, 26, 0, 12, 14, 0, 18, 5, 2, 0, 1, 0, 7, 9, 0, 1, 0], [10, 8, 10, 2, 6, 1, 0, 28, 0, 10, 8, 1, 13, 0, 2, 2, 0, 0, 0, 8, 10, 0, 6, 7], [4, 7, 10, 0, 1, 0, 0, 15, 0, 19, 33, 0, 13, 0, 0, 4, 0, 0, 1, 20, 0, 8], [6, 8, 21, 1, 28, 0, 0, 3, 14, 19, 2, 10, 0, 1, 0, 0, 2, 0, 19, 6, 0], [34, 18, 12, 0, 31, 1, 1, 24, 2, 18], [3, 4, 0, 14, 0, 1, 32, 0, 17, 10, 0, 17, 11, 0, 1, 0, 4, 3, 0, 2, 28], [12, 16, 3, 0, 3, 2, 0, 22, 3, 13, 15, 0, 42, 0, 0, 4, 0, 1, 0, 1, 15, 0, 1, 1], [7, 18, 0, 0, 11, 0, 0, 7, 0, 23, 44, 0, 36, 0, 0, 0, 0, 0, 7, 0, 1, 1], [6, 31, 0, 21, 0, 0, 44, 1, 40, 33], [31, 5, 11, 0, 2, 0, 0, 11, 0, 26, 39, 0, 42, 0, 0, 0, 0, 0, 0, 1, 10, 0, 0, 3], [35, 12, 10, 0, 9, 2, 0, 25, 0, 8, 35, 0, 22, 0, 2, 2, 4, 0, 5, 9, 0, 0, 1], [4, 12, 7, 0, 12, 1, 0, 6, 0, 23, 16, 0, 41, 0, 3, 2, 0, 2, 0, 28, 16, 0, 0, 13], [18, 10, 12, 1, 16, 0, 0, 22, 0, 17, 34, 0, 31, 0, 4, 4, 0, 2, 0, 5, 13, 0, 1, 8], [40, 10, 5, 0, 7, 2, 0, 24, 0, 32, 23, 0, 35, 2, 0, 0, 2, 10, 2, 0, 6], [52, 8, 7, 0, 6, 0, 0, 19, 0, 26, 48, 0, 7, 0, 2, 2, 0, 1, 0, 4, 15, 0, 0, 7], [54, 26, 10, 0, 28, 0, 0, 12, 0, 12, 14, 0, 36, 3, 0, 2, 0, 0, 1, 9, 0, 0, 9], [6, 20, 7, 0, 8, 0, 0, 27, 2, 21, 59, 0, 43, 0, 5, 3, 0, 1, 0, 6, 7, 0, 0, 2], [7, 28, 0, 0, 7, 0, 0, 33, 0, 42, 50, 0, 51, 0, 0, 0, 0, 0, 0, 0, 9, 0, 6], [11, 21, 29, 10, 0, 0, 40, 0, 41, 53, 0, 49, 0, 3, 3, 0, 0, 0, 17, 0, 11], [8, 21, 35, 1, 17, 2, 1, 31, 0, 35, 124, 0, 29, 0, 1, 2, 0, 3, 0, 5, 9, 0, 0, 8], [23, 13, 18, 0, 8, 1, 0, 45, 0, 71, 84, 0, 73, 0, 6, 0, 1, 0, 7, 16, 0, 0, 6], [46, 24, 27, 5, 15, 0, 2, 47, 0, 58, 76, 3, 17, 0, 3, 4, 0, 3, 0, 18, 14, 2, 18], [14, 31, 23, 23, 0, 0, 39, 10, 54, 110, 0, 41, 2, 3, 2, 0, 3, 0, 25, 12, 3, 0, 25], [40, 24, 18, 0, 28, 1, 39, 1, 72, 129, 0, 53, 0, 3, 0, 0, 1, 0, 6, 14, 0, 0, 12]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

