created: 20230817231923000
creator: Drevarr
tags: ChartData
title: 202308172319_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Maass X Menos", "Xanvias Tlesia", "Lord Erin The Wise", "Jimbo One Eye", "Apyen", "Newtype Khan", "Jimbo The Pleb", "Xanvias", "Philip Poundhouse", "Caelon Cai", "Tribal S", "Drevarr Moonwillow"];
const professions = ["Berserker", "Daredevil", "Weaver", "Scrapper", "Spellbreaker", "Spellbreaker", "Berserker", "Reaper", "Herald", "Reaper", "Druid", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 60.2928, 47.109, 27.8166, 0.0, 35.209, 64.6272, 0.0, 21.9623, 0.0], [51.5363, 232.9303, 7.92], [39.7841, 25.3267, 107.2758, 63.2223, 20.436, 37.4121], [220.8265, 389.3634, 35.9814, 8.613], [45.506, 135.1459, 87.1853, 145.0109, 107.8258, 157.5802, 77.399, 45.5504, 22.7696], [137.2064, 178.2864, 63.3261, 221.9832, 79.7044, 38.7348, 130.611, 274.9026, 276.7035], [0.0, 55.44, 105.3289, 30.4416, 54.9583, 26.9678, 9.1578, 7.8478, 18.4755, 120.3523, 88.1972, 215.8202, 69.4426, 19.1646, 92.8893, 85.9656, 44.1072, 162.8458, 64.562, 33.1854, 47.6468, 21.6479, 83.8163, 144.216], [158.5665, 193.6071, 26.2626, 25.5816, 126.2307, 73.7998, 74.8209, 62.0879, 58.0093, 142.4979, 77.8608, 44.8082, 121.4406, 58.682, 68.9208, 121.737, 186.3235, 172.086], [77.4013, 51.0384, 68.3251, 249.249, 26.2083, 93.1632, 107.0388, 89.4931, 77.8467, 0.0, 57.4652, 116.4134, 39.168, 0.0, 84.8304, 0.0, 0.0, 498.015, 142.4451, 468.5385], [72.8801, 170.3618, 115.2756, 63.0432, 0.0, 71.4771, 84.8249, 37.6474, 150.0607, 249.0385, 59.2254, 42.9363, 89.2091, 21.0357, 106.6779, 38.3394, 44.0916, 77.0323, 23.6448, 55.1023, 106.7152, 100.0845, 48.555, 142.7745, 246.036, 333.0795], [0.0, 165.4015, 73.2414, 0.0, 42.3742, 22.6733, 209.9038, 149.5822, 190.9704, 152.959, 20.8366, 157.329, 45.5582, 11.2982, 156.6144, 236.8, 59.0928, 64.0035, 151.0186, 44.2418, 72.0411, 70.3573, 54.5258, 215.9008, 73.9008, 69.8535, 187.8111, 100.3621, 106.8834, 81.6255, 226.3653, 392.5875], [13.36, 35.8042, 19.9945, 7.9968, 11.9461, 0.0, 7.371, 0.0, 0.0, 40.1663, 14.3707, 19.3678, 0.0, 9.68, 0.0, 36.3194, 34.1981, 3.6403, 485.809, 692.132, 133.7388, 136.4715, 205.0294, 151.3918, 161.4006, 33.0947, 60.7051, 498.183, 132.9408, 7.3208, 300.757, 196.8702, 199.4148, 170.595, 564.8475, 695.6955]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

