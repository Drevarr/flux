created: 20230904220351000
creator: Drevarr
tags: ChartData
title: 202309042203_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Darks Na", "Venomina The Fierce", "Tootsie Pop Rocks", "Crusader Siolith", "Darkened Sword", "Elementsofmathus", "Newtype Khan", "Tegan Parker", "Drevarr Moonwillow", "Nose Llama"];
const professions = ["Dragonhunter", "Spellbreaker", "Scrapper", "Firebrand", "Spellbreaker", "Tempest", "Spellbreaker", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[81.6872, 20.8296, 34.8128, 51.8076, 38.214, 0.0, 9.3865, 51.3765, 88.3247, 61.6, 0.0, 8.8717, 12.0834, 0.0, 51.2996, 0.0, 247.4828, 0.0, 46.4058, 60.2279, 0.0, 345.7604], [63.5216, 442.9762, 55.9434, 102.9834, 47.7675, 9.2149, 0.0, 39.7194, 10.9991, 78.3904, 0.0, 0.0, 82.5742, 0.387, 74.5606, 0.0, 16.5264, 48.0405, 3.8976, 102.8489, 63.3235, 303.3758], [75.6784, 126.2505, 54.9314, 24.8157, 91.2285, 41.9905, 56.6452, 28.371, 23.8357, 65.472, 41.7774, 31.0728, 47.4514, 64.1065, 250.4674, 41.7186, 185.3711, 55.6534, 55.6626, 29.2307, 35.9549, 301.9688], [41.8528, 112.9427, 96.0995, 126.1845, 108.5535, 12.2522, 0.0, 0.0, 88.2737, 49.808, 40.1587, 21.1847, 39.9268, 6.1727, 226.1882, 72.6516, 231.9205, 4.7445, 60.5833, 47.7208, 214.9914, 211.3957], [0.0, 15.1557, 47.7734, 157.6608, 147.9551, 21.2137, 63.5544, 56.6761, 196.035, 26.7372, 351.5992, 12.5558, 0.0, 128.8888, 227.8708, 598.6615], [41.5422, 80.439, 147.6992, 22.4303, 54.0434, 89.8292, 123.9561, 242.9486, 45.1584, 639.2962, 124.1332, 76.1737, 46.4672, 226.7975, 727.2224], [168.084, 422.7252, 165.968, 133.9416, 211.266, 94.5859, 22.3252, 0.0, 59.6147, 128.48, 144.9875, 71.5836, 70.5153, 83.1856, 82.0794, 0.0, 450.8953, 37.8479, 59.7064, 77.2649, 0.0, 422.2639], [106.8592, 484.5196, 190.3774, 106.8093, 148.203, 102.0162, 0.0, 0.0, 37.9482, 225.2448, 0.0, 88.0202, 92.6478, 91.5255, 77.6934, 363.8562, 101.7997, 88.0614, 0.0, 230.3527, 664.9645], [139.0144, 435.9172, 193.6158, 129.0627, 202.4055, 81.8704, 75.933, 72.7209, 102.667, 151.0784, 100.4352, 69.9283, 83.1379, 92.5898, 407.264, 5.1156, 562.4485, 53.4886, 92.6654, 30.5983, 329.0274, 910.3031], [729.7303, 569.1083, 404.5626, 572.517, 221.2782, 127.31, 164.5518, 264.6424, 380.4064, 223.9559, 148.6122, 157.2317, 235.2186, 659.7677, 160.1082, 1365.3561, 188.4098, 190.0567, 103.1338, 424.6835, 1693.9798]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

