created: 20230625215649000
creator: Drevarr
modified: 20230705163536812
modifier: drevarr
tags: ChartData
title: 202306252156_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Raziel Umbra", "Black Raspberry Pie", "Primal Clone", "Pale Pam", "Momomeko", "Miphest\u00f6", "Eibh\u00ebar", "High Sorcer Baradun", "Etchery Howls", "Tegan Parker", "Tribal S", "Artakama Nahid", "Demon Staph", "Drevarr Moonwillow", "Elon The Mender"];
const professions = ["Chronomancer", "Chronomancer", "Chronomancer", "Druid", "Chronomancer", "Tempest", "Chronomancer", "Tempest", "Druid", "Tempest", "Druid", "Tempest", "Druid", "Scrapper", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0539, 0.0144, 0.0, 0.399, 0.0, 0.0343, 0.0, 0.0, 0.5116, 0.3113, 0.8095, 0.0, 0.0244, 1.6667, 0.0, 0.4444, 1.1687, 0.4195, 0.5909, 0.216], [0.3962, 0.0599, 0.101, 0.2658, 0.2957, 0.1497, 0.1092, 0.4123, 0.0, 0.6279, 0.2925, 0.1333, 0.2857, 1.3659, 0.4524, 0.0, 0.2414, 0.2444, 0.7952, 0.2989, 0.7955, 0.28], [0.1509, 0.0359, 0.0048, 0.0127, 0.3895, 0.068, 0.0664, 0.5526, 0.0875, 0.7907, 0.717, 1.0476, 0.0, 1.1951, 0.5952, 0.0, 0.1379, 0.8444, 1.2651, 0.3851, 0.4773, 0.258], [0.2334, 0.0877, 0.0375, 1.7674, 1.3019, 1.8571, 0.0, 2.7317, 3.3095, 0.7586, 0.6667, 1.6145, 0.3678], [0.0, 0.125, 0.0506, 0.461, 0.1905, 0.0771, 0.3596, 0.0, 0.4767, 0.5472, 1.0, 0.0714, 0.0, 0.9762, 0.2069, 0.8, 0.8072, 0.7299, 0.9091, 0.326], [0.0943, 0.0, 0.0721, 0.0, 0.6677, 0.1429, 0.0707, 0.3333, 0.0, 0.4186, 0.5943, 0.4952, 0.0, 0.8537, 0.4048, 0.04, 0.0, 0.8222, 1.6024, 0.4195, 0.7727, 0.284], [0.0719, 0.0625, 0.3038, 0.4706, 0.1088, 0.0792, 0.6316, 0.0, 0.6512, 0.6038, 1.219, 0.0, 1.6098, 0.5476, 0.0, 0.3103, 1.0667, 1.4337, 0.3218, 0.6591, 0.352], [0.5472, 0.0, 0.0962, 0.4684, 0.7679, 0.3878, 0.0857, 0.6579, 0.075, 0.8372, 0.4717, 1.3714, 1.3415, 0.5238, 0.02, 0.0667, 0.3012, 0.7069, 0.3636, 0.558], [0.0048, 0.034, 0.3533, 1.7105, 0.05, 1.1977, 1.5189, 2.8095, 0.0, 1.9024, 2.6667, 0.6897, 1.7333, 1.9759, 0.6437, 0.5455, 0.826], [0.0189, 0.0898, 0.226, 0.4557, 1.1574, 0.4694, 0.197, 0.9035, 0.0, 1.1047, 1.1509, 2.4381, 0.2857, 1.8537, 1.6429, 0.0, 0.2759, 1.4667, 2.3494, 0.7126, 1.1591, 0.6], [0.4737, 0.1, 1.5233, 2.283, 3.6857, 0.2143, 4.2439, 2.0, 0.02, 0.3448, 3.5556, 3.8795, 2.0632, 3.0909, 1.112], [0.434, 0.0299, 0.3462, 0.6962, 1.4165, 0.8299, 0.2848, 1.0088, 0.1125, 1.3256, 1.5849, 2.6762, 0.2143, 2.2439, 0.1667, 0.4138, 1.7778, 2.6747, 0.3736, 1.5909, 0.754], [0.3396, 0.0, 0.2452, 1.2405, 1.7091, 0.7347, 0.2634, 1.2982, 0.0, 0.7209, 1.3019, 2.5905, 0.0, 2.5122, 1.1667, 0.1379, 2.8889, 2.7711, 1.7586, 1.1818, 0.648], [0.434, 0.1198, 0.5865, 1.2152, 1.5692, 1.0136, 0.4047, 1.2018, 0.2625, 1.3256, 1.566, 2.4476, 1.6786, 1.878, 1.1667, 0.26, 0.2759, 2.0, 2.3012, 1.2299, 2.4091, 0.8], [0.434, 0.0599, 0.3365, 1.3671, 1.903, 0.8435, 0.2827, 1.7632, 0.225, 1.2791, 1.8679, 3.3905, 0.2857, 4.4146, 0.9286, 0.9655, 4.0222, 2.9639, 0.9828, 2.4318, 1.23]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

