created: 20230213220222000
creator: Drevarr
modified: 20230705163519278
modifier: drevarr
tags: ChartData
title: 202302132202_superspeed_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal S", "Tootsie Pop Bringer", "Grasszanine", "High Sorcer Baradun", "Mac Chiato", "Arcanophage Farra", "Jeckyll Mbs", "Tegan Parker", "Smol Daddy Tika", "Uneeta Healah", "Xanvias Tseli", "Skye Nightroad", "Mike The Archmagus", "Drevarr Moonwillow", "\u00c9\u00efbhear"];
const professions = ["Druid", "Scrapper", "Spellbreaker", "Tempest", "Tempest", "Spellbreaker", "Berserker", "Tempest", "Berserker", "Scrapper", "Berserker", "Scrapper", "Tempest", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Superspeed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.354, 0, 0.572, 0.452, 0.419, 0.269], [0.218, 0.291, 0.443, 0, 0.947, 1.04, 0.177, 0, 0.398, 0.14, 0, 0], [0.277, 0.075, 0.492, 0, 0.656, 0.148, 0, 0.51, 0.324, 0.697, 0], [0.444, 0.61, 0.435, 0.838, 0.404], [0.145, 0.316, 0, 0, 0, 0.675, 0.177, 0.507, 0.402, 0, 0.135], [0.242, 0.469, 0.473, 1.088, 1.008, 0.443, 0, 0.51, 0.056, 0.175, 0], [0.277, 0.301, 0, 3.264, 0.627, 1.126, 0, 0, 0.496, 0.444, 0.699, 0], [0.249, 0.407, 0.59, 0.653, 0.652, 0.266, 0.755, 0.611, 0.368, 0.418, 0.124], [0.589, 0.533, 0.602, 0, 0, 0.301, 0.148, 0.88, 0, 0.51, 0, 0.225], [0.023, 0.488, 1.11, 0.87, 0.611, 0, 0.762, 1.013, 0.733, 0.489], [0.658, 0.696, 0.492, 0, 1.088, 1.315, 0.296, 0, 1.018, 0.502, 0, 0.225], [0.644, 0.611, 0.683, 2.451, 0.653, 1.364, 0.399, 0, 1.119, 0.532], [0.581, 0.6, 0.295, 0.652, 0.77, 0.621, 0, 0.869, 0.769, 0.418, 0.539], [1.037, 1.54, 1.21, 0.245, 2.285, 1.996, 1.066, 1.987, 1.551, 1.047, 1.202], [1.651, 1.981, 1.696, 2.375, 2.007, 1.609, 1.128, 1.68, 2.206, 1.151, 1.482]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

