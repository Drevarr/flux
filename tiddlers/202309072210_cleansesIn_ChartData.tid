created: 20230907221038000
creator: Drevarr
tags: ChartData
title: 202309072210_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Ean Thane", "Cormac Shadowcharm", "Kittendo", "Zetsu Shinigami", "Reckkyy", "Xuerreux", "Sub Train", "Pl\u00eeo", "Kittendo", "Glorious Gluvs", "Snowe Shadowcharm", "Darks Na", "Regis Hawkesburne", "Lasting Beauty", "Beware My Math", "Aira Draugr", "Vanhelsing Wizard", "Serum Vision", "Melody Phoenixstorm", "Kary\u00edna", "Hawaiian Supreme", "Morv\u00e4rth", "Steamy Steam", "Raelyn Sunray", "Pafema", "High Sorcer Baradun", "Belvyn Brightblade", "Poppy Pittstop", "Bella Sassy", "Smol Gluvs", "Empressy", "Forever Dreaming", "Black Raspberry Pie", "Daphne Agla\u00e9", "Latedoctor", "Seiker Novus Terra", "Sonja Wintersong", "Lord Erin The Wise", "Traidoruns Maximus", "Cat Wigglebooty", "Cyclotechnist Farra", "Toka Lockhart", "Blaize Harlot", "Malfax Jinn", "Mistwalker Cael", "Tootsie Pop Rocks", "Xanvias", "Koralia Danai", "Hyde En Sikh", "Drevarr Moonwillow"];
const professions = ["Chronomancer", "Mechanist", "Untamed", "Soulbeast", "Scrapper", "Berserker", "Firebrand", "Mechanist", "Soulbeast", "Berserker", "Reaper", "Dragonhunter", "Berserker", "Spellbreaker", "Scrapper", "Herald", "Chronomancer", "Tempest", "Scrapper", "Vindicator", "Spellbreaker", "Reaper", "Berserker", "Firebrand", "Druid", "Tempest", "Firebrand", "Mechanist", "Firebrand", "Reaper", "Spellbreaker", "Scourge", "Chronomancer", "Reaper", "Reaper", "Tempest", "Firebrand", "Weaver", "Firebrand", "Scrapper", "Scrapper", "Tempest", "Scourge", "Firebrand", "Herald", "Scrapper", "Reaper", "Firebrand", "Chronomancer", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0556, 0.0737, 0.0115, 0.1426], [0.0609, 0.0, 0.0303, 0.0417, 0.0, 0.1133, 0.0495, 0.0305, 0.1143], [0.0851, 0.1839, 0.0761, 0.226, 0.0227], [0.0308, 0.1618, 0.1053, 0.104, 0.0346, 0.0081], [0.3289, 0.0939, 0.1108, 0.0458], [0.2632, 0.0967, 0.1108, 0.0305, 0.1214], [0.3421, 0.1547, 0.092, 0.0305, 0.1071], [0.0121, 0.0269, 0.2851], [0.1786, 0.1105, 0.1368, 0.0687, 0.1357], [0.0426, 0.2701, 0.1066, 0.2938, 0.0, 0.2083], [0.0691, 0.0152, 0.2034, 0.0152, 0.1429, 0.1711, 0.1519, 0.0259, 0.0305, 0.0929], [0.1243, 0.0637, 0.0382, 0.1071, 0.0, 0.1401, 0.1263, 0.0809], [0.0479, 0.1092, 0.0609, 0.0734, 0.0303, 0.0774, 0.1711, 0.1188, 0.0708, 0.0687, 0.1214], [0.066, 0.1412, 0.053, 0.1131, 0.1851, 0.1368, 0.0071], [0.1594, 0.0737, 0.2627], [0.0319, 0.3103, 0.0812, 0.1017, 0.0682, 0.125, 0.0718, 0.0991, 0.0305, 0.0643], [0.0266, 0.1379, 0.0812, 0.1469, 0.0455, 0.0833, 0.25, 0.0967, 0.1486, 0.0382, 0.0786], [0.1787, 0.0421, 0.1214, 0.1231, 0.2016], [0.0426, 0.2356, 0.0457, 0.2655, 0.0227, 0.131, 0.1243, 0.1085, 0.0763], [0.0904, 0.3161, 0.1168, 0.1073, 0.053, 0.119, 0.0658, 0.0884, 0.0755, 0.0458, 0.1571], [0.0532, 0.4253, 0.066, 0.2938, 0.0379, 0.1012, 0.25, 0.1575], [0.0, 0.1039, 0.0421, 0.1676, 0.1346, 0.279], [0.0479, 0.2759, 0.132, 0.2938, 0.0152, 0.125, 0.1685, 0.0825], [0.0585, 0.3563, 0.1117, 0.2712, 0.0227, 0.1548, 0.0658, 0.0691, 0.125, 0.002], [0.0, 0.1304, 0.0632, 0.1387, 0.1769, 0.2648], [0.1015, 0.096, 0.0, 0.125, 0.174, 0.2052, 0.0571, 0.128], [0.0372, 0.2644, 0.0609, 0.2034, 0.0455, 0.1369, 0.4868, 0.1326, 0.1533, 0.0458, 0.0786], [0.1269, 0.1921, 0.0076, 0.125, 0.105, 0.092, 0.0992, 0.05, 0.0, 0.1184, 0.1053, 0.2139, 0.1269], [0.2077, 0.0737, 0.3295, 0.1385, 0.2912], [0.0884, 0.1108, 0.0534, 0.0857, 0.0, 0.0676, 0.0947, 0.1272, 0.1769, 0.2668], [0.0655, 0.0773, 0.0708, 0.0534, 0.1214, 0.1812, 0.0421, 0.0925, 0.0923, 0.2709], [0.1602, 0.0755, 0.0382, 0.1857, 0.0, 0.1232, 0.0947, 0.104, 0.2, 0.2179], [0.0, 0.0, 0.132, 0.2034, 0.053, 0.1429, 0.1381, 0.1108, 0.0382, 0.1286, 0.0121, 0.0105, 0.0, 0.1615, 0.2179], [0.016, 0.1322, 0.1269, 0.2994, 0.0379, 0.1071, 0.0884, 0.1557, 0.0305, 0.0786, 0.0, 0.1111, 0.0, 0.1462, 0.0937], [0.0213, 0.4483, 0.1015, 0.3446, 0.0379, 0.1548, 0.3947, 0.1519, 0.1698, 0.0992, 0.0929], [0.0904, 0.4368, 0.0761, 0.2373, 0.0682, 0.2321, 0.4605, 0.1823, 0.184, 0.0534, 0.0643, 0.0], [0.0, 0.4211, 0.0967, 0.092, 0.0611, 0.0929, 0.2222, 0.0947, 0.1503, 0.1385, 0.2383], [0.0213, 0.3506, 0.0761, 0.2994, 0.0985, 0.2381, 0.6711, 0.1602, 0.2052, 0.1221, 0.0714, 0.0, 0.0024, 0.0, 0.0, 0.0077, 0.0102], [0.0745, 0.3391, 0.0558, 0.2768, 0.0758, 0.119, 0.5658, 0.1381, 0.1415, 0.0305, 0.0929, 0.0, 0.157, 0.1053, 0.052], [0.0266, 0.5, 0.0711, 0.2147, 0.0152, 0.131, 0.4868, 0.1547, 0.1226, 0.0382, 0.1714, 0.0, 0.1449, 0.0421, 0.237, 0.002], [0.0266, 0.2126, 0.0051, 0.0621, 0.0303, 0.1964, 0.4737, 0.1077, 0.1934, 0.0534, 0.1214, 0.0, 0.1232, 0.0526, 0.1329, 0.2769, 0.0957], [0.0266, 0.2644, 0.0355, 0.2542, 0.0076, 0.1012, 0.4211, 0.1271, 0.0991, 0.0687, 0.1786, 0.0154, 0.1522, 0.1368, 0.0694, 0.1538, 0.1568], [0.0, 0.2414, 0.0711, 0.2429, 0.0152, 0.1012, 0.4342, 0.1271, 0.0896, 0.0305, 0.1, 0.0154, 0.1353, 0.1368, 0.1445, 0.1192, 0.2118], [0.0638, 0.4483, 0.1218, 0.3559, 0.0227, 0.1786, 0.1575, 0.1509, 0.0611, 0.1286, 0.0154, 0.0966, 0.0737, 0.1156, 0.1346, 0.0733], [0.0585, 0.0977, 0.0609, 0.3898, 0.0303, 0.1012, 0.0967, 0.1509, 0.0229, 0.1429, 0.0462, 0.1087, 0.1158, 0.1387, 0.1346, 0.2994], [0.0372, 0.3391, 0.1472, 0.1808, 0.0076, 0.1488, 0.163, 0.1792, 0.0305, 0.1214, 0.0, 0.1763, 0.0526, 0.1445, 0.1269, 0.2301], [0.0213, 0.2414, 0.1117, 0.4011, 0.0152, 0.1488, 0.4605, 0.0691, 0.1321, 0.0458, 0.1286, 0.0, 0.1473, 0.0737, 0.1329, 0.1962, 0.2342], [0.0479, 0.3966, 0.0914, 0.3164, 0.0303, 0.125, 0.5395, 0.1271, 0.0755, 0.0763, 0.1571, 0.0, 0.2053, 0.0737, 0.1156, 0.1269, 0.1935], [0.0798, 0.3908, 0.1371, 0.3277, 0.0758, 0.1071, 0.3421, 0.1492, 0.125, 0.1069, 0.1857, 0.0154, 0.1401, 0.0526, 0.1908, 0.2, 0.2424], [0.0532, 0.4253, 0.1777, 0.2768, 0.0076, 0.2024, 0.3947, 0.2182, 0.1297, 0.0763, 0.0929, 0.1077, 0.1498, 0.0526, 0.1214, 0.1962, 0.2892]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

