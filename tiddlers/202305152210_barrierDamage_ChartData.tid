created: 20230515221048000
creator: Drevarr
modified: 20230705163530138
modifier: drevarr
tags: ChartData
title: 202305152210_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Arriasa", "Koralia Danai", "Miphest\u00f6", "Sheeps Sticks", "Husky Guard", "Lagmeloves", "Kary\u00edna", "Sumatra Satyricon", "Black Raspberry Pie", "Blancooo Padreee", "Xanvias Einzbern", "Tika Mi", "Lord Erin The Wise", "Solus Sanctus", "Farra The Bloodless", "Sygaldry Verdandi", "Domitia Gravestorm", "Fribble Bibble", "Mistwalker Caelon", "Artakama Nahid", "Ark Darkness", "Evan Nightroad", "Primal Clone", "Tribal S", "Rosetendril", "Jeckyll Mbs", "Hauzzy", "Bella Sassy", "Mike The Archmagus", "Necrotic Windrunner", "Eibh\u00ebar", "Kyllarian", "Gollum Mah Precious", "No Reserv\u00e9", "Sub Train", "Tootsie Pop Rocks", "Roxy Willowmoon", "Panther B Me", "Ryvalia Fazebringer", "Elonith Requiem", "Grasszanine", "Demon Sekhmet", "Cat Wigglebooty", "Rozaalyna", "Drevarr Moonwillow", "Be\u00eb", "Cyclotechnist Farra", "Smol Gluvs", "Newtype Khan", "River No Hug"];
const professions = ["Druid", "Firebrand", "Tempest", "Scrapper", "Dragonhunter", "Dragonhunter", "Vindicator", "Soulbeast", "Chronomancer", "Berserker", "Berserker", "Tempest", "Weaver", "Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Scrapper", "Vindicator", "Tempest", "Firebrand", "Vindicator", "Chronomancer", "Druid", "Tempest", "Berserker", "Berserker", "Firebrand", "Weaver", "Scourge", "Chronomancer", "Reaper", "Harbinger", "Vindicator", "Firebrand", "Scrapper", "Scrapper", "Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Scrapper", "Scourge", "Scrapper", "Scourge", "Scrapper", "Scourge", "Spellbreaker", "Scourge"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 2740, 0, 0, 0, 1968, 0, 0, 0, 0, 4665, 0, 0, 0, 0, 2466, 0, 0, 0, 273], [447, 0, 0, 0, 0, 87, 9100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3497, 0, 0, 0, 0, 255, 0, 0, 2964], [0, 4361, 10674, 0, 664, 0, 269, 0, 1352], [17915], [1284, 0, 0, 0, 0, 8882, 0, 0, 2550, 0, 0, 0, 0, 0, 746, 1248, 1037, 269, 0, 304, 0, 2213, 0, 0], [12224, 0, 0, 1248, 731, 0, 600, 0, 0, 0, 0, 5136, 0, 0, 0, 0, 0, 0], [1248, 0, 0, 0, 267, 3713, 1098, 0, 0, 290, 2624, 0, 0, 2765, 0, 0, 4263, 3461, 0, 0, 0, 269, 0, 0, 0, 0], [0, 0, 0, 0, 1001, 0, 16159, 0, 0, 0, 0, 0, 0, 3062, 0, 0, 186, 0, 0, 0], [0, 0, 0, 0, 14813, 0, 0, 0, 0, 1248, 0, 310, 0, 0, 269, 0, 0, 0, 0, 1050, 0, 4, 0, 3508], [0, 0, 3771, 0, 0, 2576, 0, 0, 4654, 0, 0, 1941, 1279, 0, 7033, 0, 459, 0, 0, 0, 0], [1249, 0, 0, 0, 0, 0, 7595, 0, 0, 689, 989, 0, 0, 3775, 0, 1248, 2241, 0, 0, 0, 0, 1164, 0, 0, 0, 3980], [0, 0, 0, 164, 1136, 5514, 0, 0, 924, 417, 0, 0, 10417, 755, 0, 2804, 342, 1182, 0, 0, 0, 308, 0, 304], [1248, 0, 0, 0, 2465, 6899, 0, 0, 0, 2156, 2225, 0, 1536, 275, 269, 305, 0, 540, 3405, 0, 269, 0, 3741], [627, 0, 0, 0, 2156, 2752, 0, 0, 1250, 3709, 0, 0, 1710, 275, 267, 5089, 4021, 487, 609, 1794, 0, 0, 0, 2030], [0, 1517, 0, 0, 216, 4527, 15230, 0, 0, 90, 1174, 1111, 0, 1083, 0, 429, 1772, 269], [0, 0, 0, 0, 0, 3839, 4485, 0, 0, 219, 3160, 0, 0, 3861, 0, 0, 1230, 0, 0, 3918, 0, 3196, 0, 3231, 0, 414], [0, 0, 0, 0, 0, 0, 6549, 0, 0, 0, 4693, 0, 0, 3942, 0, 8122, 0, 1165, 2776, 0, 977, 0, 0, 0, 0, 0], [1566, 0, 0, 0, 5096, 7551, 0, 0, 605, 2430, 1293, 17, 4722, 0, 242, 4170, 755], [0, 1248, 0, 0, 0, 3700, 10669, 0, 0, 0, 0, 3054, 0, 91, 0, 1200, 31, 0, 671, 4163, 0, 705, 0, 0, 0, 3999], [0, 1008, 0, 0, 3713, 3218, 0, 0, 0, 1248, 1168, 0, 3492, 2127, 467, 3182, 60, 269, 7977, 0, 0, 0, 1858, 0, 0], [1098, 0, 0, 0, 0, 3713, 18993, 0, 0, 3760, 1292, 0, 1282, 0], [0, 0, 0, 0, 0, 2960, 24506, 0, 0, 1, 1248, 1093, 0, 2600, 0], [0, 0, 258, 3264, 10310, 0, 0, 0, 1299, 0, 0, 1392, 0, 104, 0, 4239, 1378, 3415, 0, 2038, 0, 4539, 0, 245], [334, 0, 0, 0, 2288, 10454, 1254, 1785, 244, 0, 4490, 0, 269, 3006, 3692, 917, 1443, 685, 1395, 0, 608], [0, 0, 0, 89, 3713, 10341, 0, 0, 0, 2689, 1252, 0, 2344, 0, 430, 3990, 2859, 741, 0, 0, 4520, 0, 0, 0, 269], [0, 1517, 0, 0, 1091, 0, 17643, 0, 0, 1248, 289, 1248, 0, 933, 1482, 0, 269, 2317, 860, 0, 0, 0, 1248, 0, 3395], [0, 0, 0, 0, 0, 17801, 0, 0, 0, 0, 2457, 0, 1435, 0, 1304, 3686, 0, 0, 0, 0, 1684, 0, 1248, 0, 6751], [0, 0, 0, 0, 0, 928, 15085, 0, 865, 30, 463, 0, 3624, 829, 2000, 3084, 7275, 0, 2445, 0, 84, 0, 0, 315, 0], [113, 401, 0, 0, 269, 4093, 14489, 0, 304, 917, 269, 0, 1170, 1243, 269, 1838, 948, 1111, 4343, 0, 2482, 0, 2334, 269, 1301], [269, 0, 0, 0, 4691, 17105, 0, 0, 0, 1849, 0, 3501, 0, 0, 8494, 2279], [0, 0, 0, 0, 0, 1516, 14924, 0, 0, 209, 2965, 1248, 0, 1409, 0, 228, 7460, 6890, 269, 152, 0, 780, 0, 0, 0, 269], [15786, 0, 0, 0, 2488, 0, 0, 1597, 0, 0, 8386, 1408, 2364, 0, 1340, 3963, 0, 450, 0, 610], [23773, 21606, 0], [1061, 1248, 0, 0, 14, 8636, 20338, 0, 0, 779, 2476, 1908, 0, 1463, 0, 0, 4632, 0, 4360, 0, 0, 0, 0, 0, 0, 514], [269, 0, 0, 269, 3271, 14619, 0, 0, 300, 978, 1519, 0, 2008, 0, 1360, 1294, 9514, 3602, 1303, 0, 1569, 0, 1121, 0, 4796], [804, 66, 0, 0, 314, 7042, 19161, 0, 225, 6763, 3497, 0, 146, 761, 629, 4924, 0, 2817, 679, 0, 510, 0, 1579, 0, 129], [5521, 1569, 0, 0, 33526, 11217], [0, 3474, 0, 0, 0, 2749, 20233, 0, 142, 0, 3457, 2354, 0, 5387, 0, 4306, 5540, 4293], [0, 0, 0, 0, 0, 1981, 24736, 0, 565, 2295, 1248, 0, 3722, 0, 2496, 3197, 6004, 0, 0, 0, 6879, 0, 0, 0, 1248], [0, 0, 8708, 4028, 2458, 0, 10995, 473, 5654, 10410, 13029], [2669, 291, 0, 6982, 678, 1101, 12316, 9662, 4020, 17030, 33, 4476, 0, 3963, 0, 2], [3337, 33187, 181, 1222, 781, 1469, 0, 3361, 4333, 3497, 14648, 5941], [1387, 864, 0, 0, 93, 14780, 23569, 0, 0, 1240, 5199, 564, 1664, 0, 555, 8769, 0, 1870, 4652, 290, 1889, 0, 984, 115, 6098], [0, 0, 0, 2766, 0, 37233, 0, 969, 4797, 1333, 2879, 7700, 0, 0, 5640, 13642], [431, 94, 0, 17, 61, 6475, 30442, 0, 805, 1565, 1192, 0, 4479, 46, 729, 5663, 8899, 4287, 6492, 280, 1198, 8, 814, 0, 4366], [3309, 2707, 0, 0, 1248, 9393, 11700, 0, 0, 5800, 3038, 3870, 0, 12444, 0, 1748, 13639, 9809], [24434, 28593, 3484, 19167, 0, 6741, 1058, 1343], [1143, 0, 0, 0, 488, 12409, 46638, 0, 6, 1026, 4840, 3585, 0, 675, 316, 4716, 5946, 0, 10893], [0, 0, 0, 0, 406, 3280, 25411, 0, 0, 697, 3800, 4061, 0, 6895, 235, 9280, 12800, 2048, 6220, 6101, 153, 5538, 0, 1288, 0, 7166], [3775, 0, 0, 1987, 14998, 44420, 0, 0, 5865, 4961, 7910, 0, 2035, 1482, 2498, 6523, 13116]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

