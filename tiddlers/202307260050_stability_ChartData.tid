created: 20230726005038000
creator: Drevarr
tags: ChartData
title: 202307260050_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Grasszanine", "Govinda Ektar", "Vera Khin", "Charr Surethang", "Atros Aegisshroud", "Johosh The Mighty", "Violet Stab", "Newtype Khan", "Jimbo The Pleb", "A\u00fcrora Windrunner", "Sub Train", "Jerryatric Reflexes", "Traidoruns Maximus", "Koralia Danai", "Norn Name Generator", "Explorer Theodora", "Sister Elon\u00edth", "Scarlet Merc\u00fcry"];
const professions = ["Spellbreaker", "Vindicator", "Firebrand", "Berserker", "Firebrand", "Berserker", "Firebrand", "Spellbreaker", "Berserker", "Firebrand", "Firebrand", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[6.4032, 0.8686, 1.1302, 0.0, 6.8058, 1.228, 3.0391, 3.4354], [2.033, 0.0, 0.0, 0.0, 0.0, 0.0, 1.6896, 0.0, 2.6496, 0.0, 0.512, 0.0, 8.6936, 1.4742, 0.0, 0.5208, 0.0, 0.0952, 0.0142, 0.4374, 0.0, 0.0, 3.9407, 1.5265, 0.9512, 3.7842, 0.0, 0.8775, 0.0, 0.0], [0.1971, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2208, 1.2566, 0.4733, 1.2107, 7.1461, 1.3591, 5.2164, 12.2692, 4.9442, 1.6824, 1.428, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1567, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.6206, 1.0349, 0.0, 0.0, 0.0, 0.0, 3.4776, 0.0, 0.9853, 0.0, 3.2139, 0.9264, 0.0, 1.0516, 0.0, 0.0, 1.323, 0.4284, 0.0, 2.2745, 2.1299, 1.8196, 0.741, 0.8788, 0.8505, 2.606, 0.8596, 1.0618, 0.0, 0.0, 2.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.7595, 0.0, 1.305, 0.0, 1.9721, 0.0, 0.0, 2.0749, 0.0, 1.2789, 0.0, 1.8137, 1.3689], [14.0119, 5.184, 7.7896, 8.0326, 0.0, 1.1818, 6.8647], [4.9421, 3.006, 2.4396, 2.2915, 0.0, 1.7503, 0.0, 0.8555, 1.8876, 1.1536, 8.1144, 0.0, 0.5313, 1.1012, 5.5581, 0.8478, 2.7443, 6.3099, 0.7258, 0.0, 1.407, 1.0652, 0.0, 0.8674, 2.187], [7.627, 1.9262, 4.0576, 7.5559, 4.368, 4.7995, 0.6115, 2.8653, 10.8821, 5.3914], [2.9203, 2.25, 3.1458, 1.848, 0.0, 0.0, 0.0, 0.2444, 1.848, 0.0, 5.244, 0.0, 0.0, 0.0, 0.7582, 3.2129, 0.6722, 1.9665, 0.0, 2.4835, 5.784, 2.223, 2.212, 1.4042, 0.0, 4.2525, 0.0, 0.0, 0.0, 0.0, 1.7023, 0.0, 1.9053, 0.8554, 3.6115, 0.0, 0.0, 4.0324], [0.0, 0.0, 1.8678, 0.0, 5.9064, 1.3768, 1.7002, 1.4501, 3.7432, 1.193, 6.5903, 2.0639, 0.0, 0.0, 0.0, 0.0, 1.1518, 1.2247, 1.6245, 0.0, 2.223, 1.1492, 3.436, 3.8772, 1.1856, 0.7963, 1.2852, 2.43, 0.0, 0.0, 1.183, 0.0, 0.0, 3.2737, 1.7562, 0.8352, 1.2376, 1.9008, 0.0, 0.0, 1.8009, 1.3104, 0.0, 0.0, 1.2883, 0.9893, 2.822], [2.6957, 5.652, 5.4142, 2.8336, 0.0, 0.0, 0.0, 1.9963, 0.0, 10.9848, 0.2772, 3.0236, 3.9946, 9.944, 4.2651, 6.3504, 11.6383], [15.1351, 4.86, 14.1454, 10.1517, 0.0, 3.2912, 5.8462, 0.0, 0.0, 21.9144, 1.617, 2.6082], [1.1762, 3.1639, 5.5933, 1.2004, 1.659, 3.689, 1.5984, 4.9275, 2.0394, 3.291, 3.206, 0.4896, 2.0166, 1.1054, 1.8531, 3.7856, 4.1105, 2.6465, 3.0186, 7.7517, 2.4934, 3.5059, 1.9286, 2.4077, 9.1783, 2.9273], [4.3366, 0.0, 4.5329, 2.072, 4.2981, 2.5542, 0.3138, 20.148, 1.1365, 2.4633, 3.249, 14.3678, 1.3765, 7.8926, 19.2101], [20.021, 10.998, 11.7272, 7.7862, 2.3039, 5.5202, 0.231, 8.2906, 3.0624, 3.6023, 32.6232, 1.5246, 3.5742], [2.2578, 7.5524, 12.4578, 1.1708, 6.1494, 4.1888, 0.0, 11.1037, 2.0683, 4.7507, 0.224, 0.0, 2.0944, 5.0285, 1.8581, 5.22, 2.8574, 8.4823, 0.0, 4.914, 8.339, 2.275, 3.1384, 1.5254, 2.9005, 10.8271, 4.3173], [1.9958, 3.0816, 1.092, 0.0, 1.7552, 2.4743, 2.0704, 5.4511, 3.7436, 3.477, 2.9474, 11.839, 12.712, 1.0374, 4.7116, 4.3554, 0.0, 16.335, 0.0, 3.5114, 0.0, 5.8928, 2.4226, 8.5086, 3.094, 8.0784, 0.0, 4.5911, 9.396], [2.8858, 3.9674, 9.0104, 7.6713, 9.017, 6.6833, 2.0956, 14.1863, 23.835, 2.223, 9.3346, 7.854, 2.9393, 13.2975, 4.131, 0.973, 0.7704, 1.137, 9.3236, 2.5558, 8.7696, 2.093, 9.005, 2.5291, 4.1558, 18.1265, 9.8644, 0.9261, 2.7418, 2.0557, 14.5094, 6.7181], [16.4852, 2.8187, 10.6596, 23.2765, 8.7545, 2.1744, 1.155, 0.2099, 2.1956, 5.5742, 11.2849, 11.3715, 5.7023, 7.353, 4.9213, 9.9679, 19.7672, 5.0536, 9.2462, 5.6882, 0.0, 12.3525, 1.2987, 1.3357, 3.08, 0.1296, 7.4118, 3.724, 11.8494, 4.7138, 9.9554, 4.3535, 4.3243, 16.5996, 7.9352, 4.4026, 4.1328, 3.2102, 18.6864, 7.4763]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

