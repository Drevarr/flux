created: 20230710072127000
creator: Drevarr
tags: ChartData
title: 202307100721_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Enter Effore", "Legoh Brave", "Charr Surethang", "Hahrruun", "Scarlet Merc\u00fcry", "Erinthal", "Govinda Ektar", "Chocolate Teapot", "Locopuff", "Notorious H U D", "Gestern Yesteryear"];
const professions = ["Berserker", "Firebrand", "Tempest", "Berserker", "Revenant", "Firebrand", "Druid", "Vindicator", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.9315, 0.0, 0.693, 1.2191, 1.4256, 0.9048, 3.508, 1.4586], [2.898, 1.1626, 1.3266, 1.1564, 3.7382], [1.265, 0.5984, 0.0, 0.0918, 0.283, 0.0, 0.0, 0.0, 1.0603, 0.0, 0.8921, 2.2253, 0.7526, 0.0, 3.4749, 0.0], [0.7935, 0.0, 0.0, 0.0, 0.3973, 1.1694, 0.0, 1.6559, 0.0, 0.0, 0.8968, 0.0, 0.9731, 0.6605, 0.0, 0.0, 1.1111, 0.0, 0.0, 1.0514, 0.0, 1.2813, 1.0608, 0.0], [0.0, 0.0, 1.3371, 0.0, 0.0, 0.0, 0.0, 0.0, 2.1665, 0.0, 0.0, 0.9112, 7.0356], [6.279, 2.2781, 0.6468, 5.1005], [0.3795, 0.8333, 0.5247, 0.4194, 0.433, 0.0, 0.9355, 0.1856, 0.2831, 0.7683, 1.6212, 0.5098, 0.7013, 0.0, 0.3397, 0.7548, 0.3557, 0.0, 0.3595, 0.9687, 0.345, 0.7646, 1.1329, 0.0, 0.8228, 1.716, 0.303], [1.6371, 0.3845, 0.0, 2.3598, 11.2905, 0.3682, 0.2057, 0.0, 0.4717, 0.0, 0.0, 3.4968, 0.0393, 1.9712, 0.0, 1.9825, 5.5692], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.6918, 2.042, 4.9804, 2.866, 9.0435, 4.8994, 0.4402, 5.407], [2.4183, 1.453, 1.4714, 8.0606, 8.9012, 1.559, 3.094, 12.7413, 0.0], [0.676, 6.9827, 3.0167, 2.3595, 0.5076, 2.0844, 2.5394, 5.8344, 1.9737, 9.6551, 2.8181, 0.0, 2.9085, 0.0, 1.767, 3.9506, 9.2653, 2.9478, 3.672, 0.0, 0.1635], [6.21, 1.633, 0.9834, 1.1995, 6.1882, 1.4352, 9.9228, 3.1559, 5.045, 0.686, 2.4028, 2.8037, 5.1518, 3.6353, 12.3913, 3.7757, 4.5752, 0.2225, 4.8576, 6.0853, 5.9881, 0.0, 5.304, 0.7722, 3.5065]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

