created: 20230310230833000
creator: Drevarr
modified: 20230705163521607
modifier: drevarr
tags: ChartData
title: 202303102308_fireOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Mac Chiato", "Tegan Parker", "Alatreon", "Venomina The Siren", "High Sorcer Baradun", "Zefirokai"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fire Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 0.0, 0.0, 163.9375, 0.0, 71.1627, 0.0, 0.0, 0.0, 0.0, 24.455, 0.0, 0.0, 26.3921, 0.0, 47.0227, 0.0, 0.0, 0.0, 53.1225, 5.903, 109.9741, 1.4355, 124.416, 0.0, 0.0, 0.0, 26.5423], [0.0, 53.1783, 0.0, 0.0, 0.0, 310.3375, 26.4915, 73.1959, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.9864, 0.0, 51.9922, 22.2007, 75.8466, 64.26, 0.0, 0.0, 0.0, 0.0], [50.985, 229.9563, 89.562, 132.825, 0.0, 789.1875], [55.7865, 137.3652, 70.6376, 163.3345, 0.0, 665.6625, 26.523, 307.4519, 0.0, 61.2412, 0.0, 0.0, 64.1155, 26.3444, 69.6093, 103.1316, 0.0, 59.8479, 0.0, 26.7543, 0.0, 62.1584, 0.0, 26.1853, 0.0, 36.4095, 0.0, 74.3544, 0.0, 0.0, 0.0], [51.876, 278.0631, 76.3048, 144.256, 23.92, 1018.7, 0.0, 198.8199, 44.4415, 0.0, 0.0, 98.8579, 80.8607, 72.2883, 0.0, 9.0045, 0.0, 57.4816, 0.0, 0.0, 0.0, 71.172, 42.642, 0.0, 104.3206, 155.6486], [100.584, 230.5359, 77.924, 189.2555, 0.0, 1486.1125, 0.0, 277.2441, 54.6149, 85.5618, 0.0, 44.1595, 166.944, 69.3382, 59.8756, 64.9334, 26.3201, 0.0, 0.0, 53.2899, 0.0, 141.4873, 139.5416, 53.4301, 152.4452, 86.1039, 145.962]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

