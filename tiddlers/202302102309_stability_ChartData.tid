created: 20230210230955000
creator: Drevarr
modified: 20230705163519039
modifier: drevarr
tags: ChartData
title: 202302102309_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Tseli", "Arcanophage Farra", "Burnhard Riemann", "Ryvalia Fazebringer", "Mistwalker Caelon", "Air One Com", "Kahless The Drunk", "Ark Darkness", "Zaylen Harker", "Aronorf Xideliesi", "Ravioli Fetabringer", "Blanco Padre Guard", "Ace Hammers", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Berserker", "Spellbreaker", "Berserker", "Chronomancer", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.9912, 2.9314, 1.974, 2.0107, 0.0, 0.0, 0.0, 0.0, 0.9798, 1.6103], [3.4954, 4.6685, 0.0, 1.1675, 0.0, 1.8612, 0.4752, 0.0, 0.2613, 1.8488], [0.9912, 4.0171, 2.961, 2.2052, 0.0, 0.0, 0.0, 1.2326, 2.2209, 0.9542], [5.217, 4.1257, 0.0, 6.5509, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [4.8518, 7.4913, 3.3558, 6.2914, 0.0, 0.0, 0.0, 0.6723, 1.3064, 0.835], [2.0868, 9.0113, 5.1982, 4.0213, 0.0, 0.0, 0.0, 1.494, 3.5273, 0.9841], [3.5476, 6.5142, 3.2242, 7.9778, 0.0, 1.0237, 1.6632, 2.1663, 2.0902, 3.3995], [5.4257, 10.6399, 4.8034, 7.4589, 0.0, 0.0, 0.0, 2.0543, 2.2862], [5.8952, 13.897, 6.0536, 3.5024, 1.6243, 2.4196], [5.53, 10.3141, 3.4874, 8.8858, 0.0, 0.0, 0.198, 1.9048, 4.1805, 3.8468], [6.9908, 13.137, 8.8172, 15.307, 0.1805, 0.1861, 0.1584, 0.2988, 0.9145, 2.7733], [8.7124, 19.6512, 11.6466, 9.4696, 0.0, 11.7256, 1.8216, 2.3904, 1.9596, 7.9023], [7.7733, 14.8741, 6.251, 13.9449, 0.0, 15.2618, 1.1088, 2.6518, 10.7778, 3.4293], [9.1297, 14.5484, 13.2258, 13.6206, 2.2861, 6.142, 2.376, 3.4362, 11.1697, 7.0673], [9.0254, 20.0855, 15.3314, 16.9933, 0.0, 7.0726, 2.3364, 2.3531, 11.235, 6.5902], [6.8343, 16.5026, 16.1868, 15.3718, 2.8275, 2.9779, 8.6328, 2.9506, 13.9785, 8.8864]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

