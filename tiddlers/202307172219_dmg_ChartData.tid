created: 20230717221937000
creator: Drevarr
tags: ChartData
title: 202307172219_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Panacea Vandrish", "Klengah", "Kylo Milan", "Kylo Milan", "Xx Zen Xx", "Sia Roku", "Gamora Titus", "Mmathuss", "Koda Rv", "Cat Wigglebooty", "Ryvalia Fazebringer", "Belvyn Brightblade", "Tribal S", "Tegan Parker", "Willow Starrdust", "Sygaldry Verdandi", "Crusader Siolith", "Koralia Danai", "Drevarr Moonwillow", "Bella Sassy", "High Sorcer Baradun", "Drumina", "Miphest\u00f6", "Sub Train", "Solus Sanctus", "Aira Draugr", "Tootsy Pop Star", "Zefirokai", "Newtype Khan", "Black Raspberry Pie", "Soweng", "Elonith Requiem", "Blade Stacker", "Cedryn X", "Dizzy Bunnyhopper", "Daphne Agla\u00e9", "Gun Breaker", "Rozaalyna", "Oo Dads Mad", "Bee Nemesis", "Venomina", "Primal Clone", "Glorious Gluvs", "Shaca Booey", "Morton Saltbringer", "Rina Of Theros", "Lord Erin The Wise", "Legacy Of Mathus", "Eibh\u00ebar", "I Mad X King I", "Be\u00eb", "Inedible Plant", "Lucky Luprac\u00e1n", "Duke Silvver", "Xanvias Einzbern", "Cyclotechnist Farra", "Permanent Dawn", "Ateriuz", "Mistwalker Cael", "Johosh The Mighty"];
const professions = ["Firebrand", "Druid", "Mirage", "Chronomancer", "Druid", "Mirage", "Firebrand", "Firebrand", "Reaper", "Scrapper", "Chronomancer", "Firebrand", "Druid", "Tempest", "Herald", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Tempest", "Druid", "Tempest", "Firebrand", "Firebrand", "Herald", "Scourge", "Catalyst", "Spellbreaker", "Chronomancer", "Reaper", "Scourge", "Virtuoso", "Berserker", "Holosmith", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Scourge", "Chronomancer", "Berserker", "Berserker", "Chronomancer", "Scourge", "Weaver", "Berserker", "Chronomancer", "Holosmith", "Scourge", "Vindicator", "Scrapper", "Vindicator", "Berserker", "Scrapper", "Weaver", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[34.352, 0.0, 6.7188, 28.9953, 0.0], [3.434, 3.3488, 5.8485, 8.9444, 13.8603, 31.5312, 5.5938, 3.4692, 32.462], [157.2986], [229.3101], [4.1221, 28.5657, 39.2428, 14.9441, 26.6562, 19.1406, 32.782, 42.6329], [1.9416, 73.1023, 16.743, 23.9849, 14.965], [96.067, 55.875, 106.7188, 30.6588, 157.7278], [41.5288, 113.3855, 54.125, 54.0474, 83.1962], [15.3365, 422.019], [7.8547, 7.6948, 127.9495, 48.1317, 43.1955, 15.4688, 67.375, 49.346, 84.2215], [6.4, 30.0797, 11.8645, 10.9626, 39.3226, 5.718, 75.4444, 13.5309, 13.5419, 12.125, 15.1875, 19.109, 12.9241], [2.4957, 26.3379, 66.4655, 112.6822, 28.4358], [8.713, 4.2125, 12.8696, 56.6402, 43.5283, 2.2994, 113.1616, 41.9856, 31.3631, 0.0, 71.8594, 18.7299, 67.2911], [2.1565, 21.746, 9.8312, 20.1449, 34.6, 8.2965, 50.6465, 54.5041, 27.0279, 18.2188, 37.1875, 18.4787, 63.4367], [13.0609, 69.3762, 137.0, 9.8925], [5.8957, 30.5388, 36.3785, 0.0, 83.1852, 90.7933, 49.0938, 69.0312, 32.3697, 99.7532], [1.7739, 10.0925, 39.6266, 8.6495, 45.6302, 24.8983, 88.6869, 92.5473, 56.8659, 60.5, 121.2656, 14.7251, 17.4557], [0.0, 14.4123, 36.5038, 135.4579, 23.5547, 4.0203, 76.697, 85.5556, 24.7654, 22.6875, 60.2344, 5.4123, 118.5886], [25.7652, 15.7003, 34.1816, 80.9206, 106.6962, 7.8895, 102.5455, 96.0885, 33.2346, 30.5, 48.3594, 54.0948, 91.1456], [5.087, 50.356, 18.0256, 127.5374, 36.3566, 19.0814, 194.4747, 64.1379, 127.0223, 0.1875, 113.0625, 72.6398, 62.1835], [11.5478, 32.7906, 63.2327, 97.2009, 81.6396, 0.3692, 97.0, 96.8045, 116.5978, 23.5312, 144.4688, 37.1943, 178.462], [0.0, 28.6334, 70.376, 55.972, 72.7264, 24.4855, 329.7475, 130.5288, 98.2458, 61.0, 30.4844, 113.6777, 149.9494], [0.0, 25.0521, 100.9463, 2.1168, 149.4075, 39.7297, 204.3535, 221.0802, 123.1397], [0.0, 54.4155, 62.5064, 108.6355, 139.0604, 34.9884, 500.8081, 103.428, 121.5922, 146.1875, 266.7188, 49.3081, 156.5823], [7.513, 72.576, 46.3785, 70.4346, 81.3642, 61.1424, 478.0303, 108.4979, 162.1564, 351.5156, 78.5166, 226.4747], [41.287, 125.0584, 186.243, 128.7383, 371.6057], [20.8957, 77.7705, 93.2941, 332.7523, 395.8396, 104.5087, 31.7879], [622.3601, 397.0782, 439.0625, 658.6875, 254.7062, 436.8418], [43.1217, 51.2476, 106.601, 269.6776, 274.1415, 69.8576, 424.2727, 255.5556, 168.5531, 298.0938, 117.2812, 194.6019, 244.4051], [126.0174, 55.3549, 30.6394, 239.014, 253.5528, 82.0262, 455.9091, 335.7922, 388.9274, 43.2812, 504.2969, 147.2938, 185.5823], [0.0, 212.4859, 190.0888, 258.1792, 25.8343, 660.0606, 232.5226, 685.0279, 164.125, 506.4375, 58.3934, 415.057], [259.6811, 959.2961, 532.5938, 1407.7656, 626.9384, 1030.1266], [517.9293, 614.251, 864.4972, 204.0, 880.2344, 404.1517, 924.0633], [58.102, 341.8312, 501.9019, 429.07, 738.5307, 162.6562, 1983.0625, 64.7867, 649.0], [84.9596, 254.0281, 56.9159, 201.2491, 29.3488, 514.7778, 293.5535, 924.4022, 15.6875, 0.0, 138.9147, 1566.6582], [27.7826, 65.4145, 261.0818, 460.1495, 284.2472, 91.2587, 478.0303, 440.4691, 404.7095, 106.4375, 598.1562, 281.3175, 655.2785], [1164.3663, 1061.0391, 246.1562, 216.4062, 230.9905, 1238.3861], [34.2957, 129.0861, 577.6394, 584.5748, 25.8113, 36.9215, 1483.4848, 601.6008, 535.4358, 293.4062, 661.6406], [25.4, 185.4931, 490.5601, 875.2804, 1023.6887], [51.8226, 27.2616, 1372.1919, 787.9506, 1173.6089, 84.8125, 2028.0, 335.8057, 1131.7089], [92.5043, 75.2274, 242.2788, 215.4346, 309.0604, 73.3314, 812.8788, 476.1523, 800.1397, 162.7188, 1181.7188, 495.5403, 774.981], [42.2087, 208.0701, 106.844, 346.0701, 459.6849, 108.9186, 903.3333, 584.9753, 828.162, 334.9375, 382.9531, 374.1706, 575.0443], [23.9652, 79.1743, 290.4604, 526.3037, 426.8717, 72.2907, 754.6768, 925.177, 723.4525, 172.5625, 1904.6406, 194.128, 463.2532], [1251.3807, 1560.2402, 488.7188, 2743.2812, 516.2512, 1814.7089], [115.1478, 202.1148, 215.3504, 311.5701, 670.666, 93.6395, 1933.0505, 512.249, 905.2514, 357.8438, 295.875, 456.9621, 682.0633], [82.9478, 191.9416, 511.1611, 626.2196, 668.9925, 16.6076, 1274.0909, 691.3189, 585.8771, 225.875, 844.0312, 436.128, 789.6709], [1837.9383, 913.7318, 240.0312, 2921.2656, 737.9242, 2298.1519], [49.6522, 433.712, 519.798, 865.4019, 1324.6981, 386.0494, 1562.303], [199.2957, 251.0638, 324.9821, 1071.6963, 864.9717, 144.1657, 1976.1212, 671.8416, 845.2905, 480.25, 1438.8281, 428.7393, 1186.6582], [649.0698, 218.2122, 1166.5556, 1617.714, 1885.2737, 1220.875, 2708.3281, 579.872, 1694.6013], [130.4348, 294.7216, 280.023, 412.0374, 814.9698, 233.4128, 2169.8182, 987.6996, 623.3464, 423.6562, 1575.5625, 769.4408, 1340.9873], [141.4087, 232.9809, 329.5934, 1026.1776, 726.9509, 115.8692, 1983.6869, 971.0597, 1216.9497, 272.2812, 1577.8438, 445.9336, 1324.6392], [562.313, 351.0967, 469.9233, 585.514, 788.2547, 475.1076, 781.9293, 965.8765, 1148.2291, 164.5625, 1650.1875, 529.09, 313.5], [0.0, 306.8363, 825.7187, 1027.1495, 988.2245, 97.8779, 1097.1313, 1367.6687, 1357.7709, 537.0938, 1291.6406, 437.8626, 1520.1203], [21.8435, 990.1881, 1320.8619, 68.4907, 2461.4434, 245.0872, 813.4646], [145.7652, 612.5356, 797.3887, 1253.5327, 1176.1943, 172.6134, 1565.2727, 1376.8107, 816.6536, 173.6562, 1355.4219, 770.8768, 1543.6266], [110.8696, 137.5845, 960.0818, 1058.0374, 1350.2226, 142.0058, 4147.101, 1234.6605, 1551.4749, 951.4375, 3370.8906, 515.1896, 1784.7215], [0.0, 575.3401, 281.4885, 978.7336, 1529.1547, 133.0203, 4651.8485, 1923.677, 1586.2626, 221.4375, 3458.7188, 677.4265, 1504.5823], [143.313, 546.763, 624.133, 1842.715, 1859.1755, 363.6366, 4552.8182, 2438.4259, 1868.5922, 512.9688, 1790.6719, 1044.7393, 2560.9747], [49.2, 791.4198, 655.0102, 2007.3832, 1997.9679, 305.3895, 6222.5051, 2638.4321, 2619.4637, 169.2188, 4033.0625, 714.7773, 2857.0759]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

