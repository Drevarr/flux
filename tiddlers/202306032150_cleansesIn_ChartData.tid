created: 20230603215001000
creator: Drevarr
modified: 20230705163533364
modifier: drevarr
tags: ChartData
title: 202306032150_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Kyla Arachel\u00efe", "Miphest\u00f6", "Oo Dads Mad", "Manuel Radiador", "Kira Dragonblaze", "Smoulderling", "Xokaa", "High Sorcer Baradun", "Govinda Ektar", "Feberhinizer", "Melody Phoenixstorm", "Bianca Raveneye", "Belvyn Brightblade", "Sygaldry Verdandi", "Blackout Angel", "Rhaevynn", "Raffy The Swordsman", "Pocket Stabbs", "High Sorcer Baradun", "Mammary Mission", "Sygaldry Verdandi", "Koralia Danai", "Yngvar The Burdened", "Tacitus Tacitus", "Mistwalker Cael", "Arriasa", "Black Raspberry Pie", "Lord Erin The Wise", "Kary\u00edna", "Sumatra Satyricon", "Crusader Siolith", "Xanvias Einzbern", "Grasszanine", "Blanco Padre Guard", "Axunar", "Tootsie Pop Rocks", "Pamtastic", "Newtype Khan", "Be\u00eb", "Zadey Starbolt", "Duke Silvver", "Tegan Parker", "Aronorf Xideliesi", "Smol Gluvs", "Hyde En Sikh", "Tika Fiery", "Drevarr Moonwillow", "Tribal S", "Artakama Nahid", "Jo Hosh"];
const professions = ["Reaper", "Tempest", "Spellbreaker", "Scrapper", "Dragonhunter", "Reaper", "Willbender", "Tempest", "Renegade", "Soulbeast", "Scrapper", "Scrapper", "Firebrand", "Dragonhunter", "Reaper", "Reaper", "Bladesworn", "Firebrand", "Weaver", "Scourge", "Firebrand", "Firebrand", "Scourge", "Reaper", "Vindicator", "Druid", "Chronomancer", "Weaver", "Vindicator", "Soulbeast", "Firebrand", "Berserker", "Spellbreaker", "Firebrand", "Dragonhunter", "Scrapper", "Tempest", "Spellbreaker", "Scourge", "Scrapper", "Vindicator", "Tempest", "Firebrand", "Scourge", "Chronomancer", "Firebrand", "Scrapper", "Druid", "Tempest", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.527, 0.6071], [0.0, 0.1667, 0.0, 0.3774, 0.0, 0.4495], [0.0647, 0.1469, 0.4737, 0.0341, 0.3333], [0.0541, 0.3208, 0.0, 0.1835, 0.3962, 0.3226, 0.7059], [0.0474, 0.0427, 0.2105, 0.0227, 0.125, 0.027, 0.1698, 0.0, 0.1835, 0.2075, 0.4839], [0.4362, 0.2458, 0.4595, 0.0714], [0.2766, 0.2627, 0.4459, 0.2321, 0.359], [0.0, 0.4792, 0.3019, 0.3486, 0.7925], [0.2105, 0.0114, 0.1042, 0.4151, 0.2477, 0.0943, 0.0323, 0.0, 0.1064, 0.1017, 0.2297, 0.0, 0.3846], [0.0345, 0.0569, 0.0526, 0.0, 0.0, 0.2453, 0.0137, 0.0734, 0.0755, 0.0882, 0.3617, 0.0254, 0.2027, 0.1786, 0.4103], [0.0603, 0.1754, 0.2281, 0.3125, 0.1081, 0.2453, 0.0, 0.0917, 0.4151, 0.0968], [0.7766, 0.1864, 0.2973, 0.2857], [0.0216, 0.1422, 0.2456, 0.0, 0.25, 0.0, 0.1132, 0.0685, 0.4404, 0.3774, 0.2353], [0.0216, 0.109, 0.0877, 0.0227, 0.3333, 0.0, 0.3208, 0.0274, 0.422, 0.7925], [0.2661, 0.1132, 0.1613, 0.4894, 0.2458, 0.5946, 0.0357, 0.5897], [0.0, 0.1468, 0.2453, 0.5882, 0.5638, 0.1525, 0.527, 0.1607, 0.5641], [0.734, 0.5593, 0.8243], [0.2708, 0.027, 0.2264, 0.0411, 0.1376, 0.4151, 0.6765, 0.4043, 0.322, 0.1757, 0.3036, 0.359], [0.6765, 0.6064, 0.3814, 0.5811, 0.3393, 0.5897], [0.0, 0.3396, 0.0, 0.2752, 0.6604, 0.0, 0.4118, 0.0932, 0.8919, 0.1786, 0.8462], [0.7097, 0.5532, 0.4068, 0.5946, 0.5536, 0.7179], [0.0302, 0.0806, 0.1579, 0.0227, 0.2708, 0.0, 0.1132, 0.0, 0.1376, 0.4151, 0.3871, 0.2447, 0.3644, 0.5135, 0.3036, 0.3077], [0.0, 0.1887, 0.0, 0.2202, 0.3585, 0.2647, 0.5532, 0.4492, 0.5676, 0.0536, 0.6154], [0.0274, 0.1376, 0.4906, 0.0968, 0.6471, 0.6809, 0.6186, 0.4595, 0.3846], [0.0216, 0.1422, 0.3333, 0.0, 0.1042, 0.0, 0.1887, 0.0, 0.2752, 0.1887, 0.0882, 0.4149, 0.5, 0.6351, 0.1786, 0.0256], [0.3303, 0.5094, 0.129, 0.7059, 0.5426, 0.3136, 0.7432, 0.7321, 0.0513], [0.0, 0.2202, 0.5472, 0.7742, 0.4681, 0.6102, 0.473, 0.3393, 0.7949], [0.0388, 0.1517, 0.1579, 0.0455, 0.2917, 0.0, 0.2075, 0.0, 0.4404, 0.3585, 0.0323, 0.6471, 0.4149, 0.161, 0.2703, 0.2321, 0.5385], [0.0431, 0.1232, 0.5789, 0.0114, 0.3125, 0.027, 0.1887, 0.0, 0.1651, 0.1132, 0.0882, 0.5426, 0.5508, 0.473, 0.5128], [0.0431, 0.109, 0.2807, 0.0114, 0.2292, 0.0, 0.2642, 0.0, 0.3486, 0.7547, 0.6774, 0.6064, 0.3475, 0.3919, 0.25], [0.0431, 0.1374, 0.3333, 0.0, 0.2083, 0.0, 0.1887, 0.0137, 0.1468, 0.434, 0.7059, 0.3723, 0.5932, 0.5946, 0.2321, 0.5641], [0.0345, 0.0758, 0.3684, 0.0, 0.2292, 0.0541, 0.2264, 0.0, 0.3486, 0.2642, 0.2647, 0.5745, 0.4576, 0.6486, 0.5179, 0.4103], [0.4035, 0.0227, 0.2083, 0.027, 0.3019, 0.0, 0.3028, 0.3962, 0.0323, 0.9118, 0.5, 0.5169, 0.527, 0.5179, 0.4872], [0.1579, 0.0227, 0.4375, 0.0, 0.1698, 0.0274, 0.2936, 0.5283, 0.3548, 0.1765, 0.4468, 0.6356, 0.7297, 0.6786, 0.641], [0.0043, 0.1185, 0.2456, 0.0341, 0.2708, 0.027, 0.1887, 0.0411, 0.2018, 0.4717, 0.0, 1.1176, 0.4894, 0.5847, 0.3514, 0.7679, 0.4359], [0.0474, 0.109, 0.386, 0.0114, 0.4167, 0.3019, 0.0, 0.3119, 0.4151, 0.0645, 1.2059, 0.8404, 0.3898, 0.2297, 0.5, 0.0256], [0.0474, 0.1659, 0.3158, 0.0114, 0.5208, 0.0541, 0.3774, 0.0959, 0.5596, 0.3208, 0.3226, 0.0588, 0.2766, 0.4492, 0.4865, 0.1429, 0.8205], [0.0517, 0.1754, 0.5088, 0.0114, 0.3958, 0.1081, 0.1698, 0.0, 0.1009, 0.4717, 0.5882, 0.5745, 0.6695, 0.4189, 0.5, 0.8462], [0.0388, 0.1564, 0.3684, 0.0341, 0.2708, 0.1081, 0.3585, 0.0822, 0.3945, 0.0645, 0.6471, 0.5532, 0.6102, 0.4054, 0.5536, 0.8462], [0.0819, 0.2417, 0.3158, 0.3125, 0.027, 0.3019, 0.0, 0.5872, 0.7547, 0.0645, 0.5, 0.6702, 0.2119, 0.7432, 0.1071, 0.0769], [0.0302, 0.1659, 0.2982, 0.0114, 0.2917, 0.027, 0.3774, 0.0, 0.2661, 0.6415, 0.7941, 0.6809, 0.6695, 0.2568, 0.5714, 0.6923], [0.0474, 0.1517, 0.5263, 0.1477, 0.1667, 0.2264, 0.0411, 0.4037, 0.5283, 1.1765, 0.3298, 0.5763, 0.4324, 0.5357, 0.641], [0.0345, 0.1943, 0.3684, 0.0, 0.25, 0.1892, 0.3208, 0.0137, 0.3394, 0.5283, 0.0645, 0.9412, 0.6596, 0.4237, 0.7432, 0.4286, 0.4615], [0.0388, 0.218, 0.5263, 0.0114, 0.5625, 0.0811, 0.3962, 0.0274, 0.4404, 0.1509, 1.0588, 0.7128, 0.4407, 0.7432, 0.2679, 0.8718], [0.0431, 0.1991, 0.2807, 0.0114, 0.3542, 0.1622, 0.3208, 0.0274, 0.422, 0.5283, 1.2353, 0.7128, 0.5085, 0.7432, 0.2321, 0.9231], [0.0302, 0.1517, 0.9123, 0.0114, 0.4167, 0.0541, 0.2264, 0.0411, 0.4587, 0.6038, 0.0, 1.0, 0.766, 0.5593, 0.527, 0.375, 0.7949], [0.0517, 0.2227, 0.3509, 0.0114, 0.7708, 0.1081, 0.4151, 0.0137, 0.3578, 0.7358, 0.3548, 1.4118, 0.4681, 0.5254, 0.5405, 0.4464, 0.7949], [0.0302, 0.2133, 0.2807, 0.0, 0.1875, 0.1081, 0.3962, 0.0137, 0.6055, 1.3962, 1.1471, 0.6064, 0.5593, 0.5405, 0.7143, 0.0], [0.0216, 0.218, 0.5088, 0.0114, 0.1667, 0.0811, 0.3774, 0.0411, 0.5963, 0.4528, 0.7941, 0.4574, 0.3559, 1.027, 0.8036, 1.3846], [0.0431, 0.1848, 0.5614, 0.0114, 0.4167, 0.2432, 0.3019, 0.0, 0.5963, 1.0566, 0.3824, 0.6809, 0.6864, 0.6757, 0.6071, 1.0513]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

