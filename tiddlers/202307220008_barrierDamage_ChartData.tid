created: 20230722000818000
creator: Drevarr
tags: ChartData
title: 202307220008_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Xanvias Einzbern", "Squishy Jellyfish", "Venomina The Sly", "Permanent Dawn", "Sirplay", "Koralia Danai", "Mistwalker Cael", "Cedryn X", "Gestern Yesteryear", "Seiker Novus Terra", "Cosmedicz", "Klengah", "Black Raspberry Pie", "Aronorf Xideliesi", "Air One Com", "Raelyn Sunray", "Tegan Parker", "Glorious Gluvs", "Tribal S", "Sub Train", "Name Is What", "Bella Sassy", "Yummy Kiwi", "Primal Clone", "Gavann", "Wall Knot", "Oo Dads Mad", "Mike The Archmagus", "Johosh The Mighty", "Zaedy Zae", "Ryvalia Fazebringer", "Eibh\u00ebar", "Regis Hawkesburne", "Sofya De Nova", "Drevarr Moonwillow", "Daphne Agla\u00e9", "Cat Wigglebooty", "Grasszanine", "Arcanophage Farra", "Newtype Khan", "Lord Of Bones", "Rozaalyna", "Luke The Ghastly", "Mister Jekyll", "Be\u00eb", "Rina Of Theros", "Kahlianne", "Keypek The Drunk"];
const professions = ["Berserker", "Firebrand", "Druid", "Weaver", "Berserker", "Firebrand", "Vindicator", "Berserker", "Firebrand", "Tempest", "Soulbeast", "Druid", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Berserker", "Druid", "Firebrand", "Reaper", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Weaver", "Berserker", "Druid", "Chronomancer", "Chronomancer", "Berserker", "Weaver", "Scrapper", "Scourge", "Scrapper", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scourge", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1177, 0, 3461, 0, 445, 0, 1124, 269, 3339, 910, 4699, 12212, 4336, 0, 0, 0, 261], [1445, 0, 1389, 0, 1288, 0, 4666, 0, 2918, 4415, 3413, 10173, 3851, 2317, 0, 0, 0], [2296, 275, 0, 275, 0, 0, 1288, 2918, 421, 8611, 4717, 12835, 261, 0, 0, 0, 3085], [4824, 0, 2563, 295, 1170, 76, 550, 0, 889, 5966, 14353, 5230, 349, 2064, 0], [8618, 0, 445, 1586, 3736, 890, 1570, 1454, 0, 0, 9585, 10859], [2629, 866, 1516, 47, 1945, 0, 2771, 0, 4644, 4705, 3031, 10338, 100, 1145, 0, 0, 5809], [815, 0, 1722, 1733, 1855, 1774, 4132, 1721, 404, 5201, 994, 16071, 2186, 385, 0, 0, 1134], [4564, 0, 1274, 1480, 0, 0, 2942, 1254, 3858, 14058, 0, 9504, 0, 1488, 0, 0, 713], [2108, 2297, 905, 1016, 445, 0, 4394, 280, 2269, 8330, 6244, 10350, 2629, 452, 0, 0, 238], [2028, 0, 1288, 3217, 964, 0, 4954, 2953, 573, 4522, 2381, 20982], [6002, 11868, 16046, 3871, 1716, 0, 0, 4585], [3436, 60, 2503, 2008, 1772, 0, 550, 269, 9875, 2740, 1251, 14548, 680, 2784, 0, 0, 2937], [5064, 445, 0, 0, 1030, 0, 2453, 2508, 4225, 9246, 1569, 14399, 0, 1835, 0, 0, 2921], [6442, 371, 817, 275, 275, 1737, 4181, 2903, 1307, 8908, 5610, 10229, 749, 4086, 0, 0, 0], [2974, 0, 1284, 1724, 2190, 0, 8006, 4106, 4166, 11628, 5602, 5494, 0, 53, 0, 0, 2411], [8648, 0, 4671, 382, 445, 0, 3299, 875, 4837, 5315, 6587, 13791, 0, 0, 0, 820], [6358, 135, 2916, 1281, 0, 0, 6987, 0, 1341, 20635, 3403, 9085, 938, 1737, 0, 0], [6938, 180, 1041, 2109, 2353, 5166, 1715, 4173, 1457, 4044, 6976, 16660, 769, 945, 0, 0, 385], [5420, 0, 4225, 445, 550, 385, 5038, 783, 877, 9295, 7155, 17384, 663, 4821, 0, 0, 646], [5426, 0, 942, 895, 730, 746, 1200, 4294, 862, 11020, 8440, 19845, 1357, 646, 776, 0, 3704], [5304, 0, 1504, 3205, 2033, 0, 8104, 4213, 4314, 13058, 7638, 11541, 260, 1627, 0, 0, 0], [5993, 0, 2149, 3069, 2602, 0, 5528, 2936, 3219, 7001, 7299, 19428, 2585, 372, 0, 0, 1379], [4839, 0, 3392, 447, 1845, 0, 2941, 1775, 2513, 5414, 8009, 30861, 0, 2271, 0, 0, 0], [4191, 0, 8982, 3466, 445, 0, 10150, 399, 4784, 6267, 5503, 21485, 1869, 1114, 0, 11, 0], [5479, 0, 1448, 1718, 2920, 0, 5946, 2200, 6175, 11350, 9899, 19398, 2029, 1667, 0, 0], [3652, 0, 3952, 4485, 2545, 0, 4186, 6445, 6219, 20631, 7088, 13865, 0, 0, 0, 0, 612], [5724, 0, 4905, 1566, 1139, 657, 6416, 5378, 1298, 12720, 5126, 30877, 261, 0, 0, 2242], [7224, 720, 3394, 1468, 2287, 322, 4356, 4922, 334, 12738, 13799, 19163, 2942, 3321, 0, 0, 1492], [4748, 0, 7842, 1400, 1754, 585, 9832, 5727, 1017, 19975, 1423, 16009, 1220, 2203, 0, 0, 5515], [6529, 0, 3969, 2164, 5651, 1333, 6826, 1247, 3326, 5715, 10561, 28000, 1966, 3747, 0, 0, 2345], [8443, 0, 2308, 1616, 3482, 0, 3953, 9387, 1728, 7400, 12837, 22165, 5487, 2029, 0, 0, 3760], [11183, 0, 1288, 5614, 2502, 445, 4577, 10506, 4190, 14207, 4656, 28636, 672, 1223, 0, 1188, 0], [5824, 445, 4125, 1081, 4, 0, 6370, 0, 8033, 22806, 5660, 34062, 2017, 0, 0, 0, 3172], [718, 8675, 3077, 5388, 0, 9150, 575, 9591, 23317, 7025, 26551, 814, 1262, 0, 0, 1393], [6287, 546, 5769, 1847, 1352, 1360, 6498, 2157, 5129, 13931, 7208, 36160, 4714, 2349, 54, 0, 2858], [11342, 92, 13617, 5520, 4069, 2266, 5571, 9600, 8365, 16856, 7020, 4774, 7608, 3209, 0, 0, 7638], [2598, 276, 8412, 2215, 2951, 1901, 4583, 3991, 5483, 22082, 10632, 39030, 4540, 2053, 55, 0, 2212], [10790, 3391, 10008, 1811, 2250, 1571, 10188, 7240, 4613, 25419, 16665, 30019, 2948, 3156, 158, 0, 1422], [11201, 529, 2863, 8243, 2919, 2235, 11479, 5153, 17886, 34306, 14467, 47801, 2062, 5610, 0, 2638, 4593], [19953, 4670, 8475, 5565, 5576, 6360, 14401, 6633, 11635, 36799, 19094, 49111, 6444, 3065, 0, 0, 3634], [46067, 1673, 25881, 12477, 8402, 6238, 23004, 20902, 9887, 46613, 30246, 12039], [29319, 6538, 13117, 8242, 52, 8734, 14906, 6935, 41176, 8104, 104308, 12358, 5707, 0, 0], [39567, 5874, 26584, 14465, 7562, 4475, 20444, 18348, 11347, 58111, 19134, 13756, 1402, 8468, 3194, 2188, 16782], [40442, 2774, 21744, 11061, 16272, 4027, 19540, 23800, 13174, 12945, 23967, 95874, 10108, 3183, 0, 0, 10301], [34063, 3524, 23482, 9268, 7499, 2877, 22230, 1250, 8975, 47771, 21684, 125904, 16142, 2148, 0, 0, 4760], [43719, 2051, 23787, 8727, 8340, 686, 11566, 14915, 6327, 50643, 23157, 121688, 14848, 2836, 261, 0, 12041], [47508, 9576, 38988, 14956, 12554, 9013, 27806, 18658, 16826, 64450, 42852, 186379, 9685, 10519, 2188, 0, 17538], [63095, 871, 24610, 17436, 33415, 6834, 28452, 32817, 16320, 91810, 54216, 172718, 18227, 10078, 2735, 2228, 8170]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

