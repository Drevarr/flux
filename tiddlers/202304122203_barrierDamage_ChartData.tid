created: 20230412220340000
creator: Drevarr
modified: 20230705163525306
modifier: drevarr
tags: ChartData
title: 202304122203_barrierDamage_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Mac Chiato", "Belvyn Brightblade", "Sygaldry Verdandi", "Sp\u00edcy Cheese", "Xyntharos", "Estryl", "Lord Erin The Wise", "Mistwalker Caelon", "Ark Darkness", "Konztantin\u00eb", "Solus Sanctus", "Jeckyll Mbs", "Tegan Parker", "Demon Staph", "Sumatra Satyricon", "Xanvias Einzbern", "Primal Clone", "Inedible Plant", "Black Raspberry Pie", "Zadie Miststep", "Venomina The Siren", "Gavann", "K\u00f4sair", "Panther B Me", "Sub Train", "Ryvalia Fazebringer", "Fribble Bibble", "Smol Daddy Tika", "Lucas Ryn", "Tootsie Pop Rocks", "Eibh\u00ebar", "Arriasa", "Bella Sassy", "Rina Of Theros", "Nazhul Naxxremis", "Smol Gluvs", "Johoshua", "Be\u00eb", "Rozaalyna", "Grasszanine", "Arcanophage Farra", "Newtype Khan", "Drevarr Moonwillow", "Minka Bringer", "Skye Nightroad"];
const professions = ["Berserker", "Tempest", "Firebrand", "Firebrand", "Berserker", "Vindicator", "Berserker", "Weaver", "Vindicator", "Firebrand", "Vindicator", "Firebrand", "Berserker", "Tempest", "Druid", "Soulbeast", "Berserker", "Chronomancer", "Vindicator", "Chronomancer", "Tempest", "Tempest", "Firebrand", "Spellbreaker", "Scourge", "Firebrand", "Chronomancer", "Scrapper", "Berserker", "Firebrand", "Scrapper", "Chronomancer", "Druid", "Firebrand", "Scourge", "Scourge", "Scourge", "Scrapper", "Scourge", "Scourge", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Scrapper", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[5937, 1248, 0, 2749, 0, 3751, 7818, 0, 5081, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7685], [0, 0, 0, 720, 0, 4203, 3321, 0, 7833, 3437, 0, 3437, 0, 0, 0, 0, 0, 0, 11699], [2491, 0, 0, 5895, 573, 7774, 7924, 3437, 8234], [0, 0, 2, 0, 0, 7785, 1549, 3437, 6059, 2079, 0, 0, 0, 0, 384, 573, 394, 0, 14315], [5455, 0, 0, 0, 313, 3839, 8114, 0, 9062, 0, 1476, 0, 0, 0, 0, 0, 0, 8340], [6121, 0, 0, 2352, 269, 3739, 8921, 0, 7949, 0, 0, 0, 0, 0, 0, 0, 0, 304, 0, 8167], [17144, 0, 7150, 3437, 0, 0, 0, 3437, 0, 536, 0, 1098, 237, 7028], [8654, 0, 0, 1248, 7075, 297, 7941, 0, 12019, 0, 0, 0, 0, 0, 0, 0, 0, 273, 0, 3484], [7872, 0, 0, 3755, 0, 2552, 3946, 10228, 1439, 0, 0, 0, 0, 0, 612, 0, 1836, 0, 9722], [113, 0, 0, 6984, 0, 6852, 4874, 10845, 2507, 6847, 0, 0, 2603, 0, 269, 0, 0, 235, 0], [3455, 0, 0, 7218, 414, 3997, 14557, 0, 9674, 0, 0, 0, 3418], [957, 0, 0, 2804, 1545, 5968, 9174, 0, 8389, 4954, 2812, 0, 0, 2699, 0, 0, 0, 0, 0, 4024], [269, 0, 0, 2741, 0, 6174, 7474, 12736, 0, 0, 0, 0, 0, 538, 269, 269, 0, 13575], [11584, 0, 0, 1250, 1248, 2787, 13032, 5916, 0, 0, 0, 668, 0, 0, 3437, 0, 318, 0, 4151], [4435, 0, 0, 0, 0, 9888, 4119, 0, 8228, 3430, 1345, 0, 0, 0, 0, 5436, 0, 520, 0, 10734], [12938, 0, 0, 1304, 2507, 0, 6105, 0, 3879, 0, 0, 0, 5873, 0, 0, 0, 0, 0, 432, 15251], [5215, 0, 0, 945, 0, 4084, 2576, 0, 15806, 6852, 0, 0, 763, 0, 0, 0, 269, 0, 0, 12392], [7662, 420, 0, 269, 1492, 6609, 12866, 0, 2081, 1231, 3438, 0, 0, 4912, 0, 269, 0, 548, 0, 9175], [7481, 0, 0, 2744, 0, 4021, 11309, 0, 18975, 0, 3425, 0, 0, 0, 0, 185, 0, 928, 0, 2259], [3489, 0, 0, 3489, 0, 7271, 4179, 0, 9922, 7186, 4869, 0, 0, 0, 0, 0, 0, 0, 0, 12189], [2490, 0, 0, 2338, 0, 0, 7777, 0, 13682, 2465, 3436, 6901, 3437, 0, 2451, 110, 0, 0, 11574], [4104, 0, 0, 3720, 519, 6597, 8651, 0, 8373, 1334, 3437, 0, 3397, 2140, 0, 0, 0, 269, 0, 16371], [0, 0, 4990, 1766, 5837, 24338, 0, 9480, 2504, 5536, 0, 0, 0, 0, 0, 1776, 0, 0, 5934], [0, 34798, 3437, 9077, 0, 12710, 2969], [12843, 0, 0, 6818, 0, 8025, 19000, 0, 15163, 2663], [2482, 0, 0, 5091, 640, 2536, 20294, 0, 12563, 168, 1852, 0, 9569, 3437, 0, 3750, 0, 141, 687, 2599], [9731, 0, 0, 2527, 0, 11765, 12106, 0, 14958, 4741, 0, 0, 4507, 0, 0, 0, 0, 0, 0, 8639], [4713, 0, 49, 2280, 1118, 5786, 13743, 13356, 749, 4975, 798, 4602, 596, 23, 2212, 1027, 1362, 1173, 12383], [7089, 2070, 0, 4266, 327, 10810, 11073, 0, 15899, 0, 489, 6118, 0, 0, 0, 0, 0, 0, 15568], [2215, 1248, 1248, 6705, 1248, 6716, 17449, 17002, 677, 3329, 0, 6905, 2074, 0, 0, 2849, 0, 0, 6320], [3091, 0, 0, 695, 11174, 1248, 38089, 0, 17729, 310, 6566, 0, 620, 46, 0, 419, 78], [10873, 0, 0, 3748, 0, 15092, 14184, 0, 21427, 9337, 0, 0, 0, 0, 0, 0, 269, 0, 0, 16355], [7696, 0, 0, 1559, 2449, 9349, 19685, 0, 18174, 5555, 7700, 0, 4984, 4666, 0, 1576, 512, 650, 269, 6562], [19538, 0, 0, 5291, 0, 15345, 16781, 0, 17090, 4227, 3437, 0, 9537, 0, 0, 3437, 269, 0, 145, 0], [9767, 0, 0, 5455, 0, 8129, 17666, 0, 20820, 5956, 6173, 3010, 4699, 1288, 16899], [29446, 0, 0, 16182, 6208, 5931, 30844, 0, 14616, 6169], [10925, 1084, 1246, 4113, 330, 16796, 38227, 0, 30126, 7192], [15546, 0, 63, 5506, 1304, 8297, 22107, 0, 13978, 3564, 4520, 0, 13635, 5076, 0, 1358, 759, 581, 1480, 24910], [18104, 1248, 0, 8286, 3474, 27087, 35317, 0, 26214, 4776], [25306, 0, 0, 10094, 6374, 21190, 28483, 0, 28425, 6029], [5705, 0, 0, 6768, 250, 16187, 19451, 0, 32182, 6118, 2181, 0, 10295, 6772, 0, 3723, 0, 1248, 0, 26617], [13050, 0, 0, 1681, 0, 10412, 21354, 3437, 13695, 3443, 6861, 0, 10945, 0, 0, 2849, 0, 386, 269, 49644], [19344, 1174, 177, 10935, 599, 10654, 21000, 0, 18154, 3416, 8948, 0, 4578, 5480, 1098, 2291, 1257, 2053, 617, 38459], [18544, 0, 10, 5877, 3115, 21644, 25846, 23, 30313, 6598, 9041, 0, 16423, 9883, 0, 1113, 2625, 4142, 641, 18035], [0, 19444, 24070, 3196, 15839, 1711, 2490, 13967, 10333, 4630, 5094, 82411], [2905, 1752, 309, 17143, 21674, 29691, 54110, 0, 26414, 0, 21413, 6470, 0, 9857, 4781, 8156, 8849, 127018]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

