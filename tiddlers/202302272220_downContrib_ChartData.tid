created: 20230227222028000
creator: Drevarr
modified: 20230705163520373
modifier: drevarr
tags: ChartData
title: 202302272220_downContrib_ChartData
type: text/vnd.tiddlywiki


const names = ["King Squid", "Arcanophage Farra", "Husky Guard", "Demon Sekhmet", "Smol Gluvs", "Nelliel T", "Rina Of Theros", "Tootsie Pop Bringer", "M A C U M B E I R O", "Lord Erin The Wise", "\u00c1rk\u00e1ntor", "Jeckyll Mbs", "Be\u00eb", "What Charr U Saying", "Smol Daddy Tika", "Jupi Jupi Jupi", "Mike The Archmagus", "My Birthday Girl", "Sofya De Nova", "Sp\u00edcy Cheese", "Mistwalker Caelon", "Xanvias Tseli"];
const professions = ["Reaper", "Spellbreaker", "Dragonhunter", "Berserker", "Scourge", "Scourge", "Scourge", "Scrapper", "Weaver", "Weaver", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker", "Dragonhunter", "Weaver", "Scrapper", "Weaver", "Berserker", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Down Contribution in Damage per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[135477.0, 18694.0], [3848.0, 12563.0, 7813.0, 772.0, 44.0, 0.0, 0.0, 0.0, 0.0, 0.0, 34.0, 6945.0, 48008.0, 16563.0, 0.0, 16815.0, 2311.0, 10866.0, 124517.0, 0.0], [0.0, 8767.0, 6314.0, 0.0, 5441.0, 3739.0, 0.0, 0.0, 441.0, 0.0, 9804.0, 0.0, 0.0, 41383.0, 20686.0, 26024.0, 0.0, 13112.0, 139176.0, 5922.0], [41712.0, 69882.0, 60347.0, 9510.0, 48785.0, 793.0, 43281.0, 18042.0], [1293.0, 5825.0, 0.0, 0.0, 10214.0, 51472.0, 20165.0, 3484.0, 25239.0, 3762.0, 14539.0, 183319.0, 7104.0], [0.0, 0.0, 1647.0, 207.0, 4554.0, 4404.0, 0.0, 0.0, 2621.0, 5167.0, 46265.0, 5095.0, 15665.0, 1474.0, 27339.0, 212711.0, 2263.0], [776.0, 29927.0, 22591.0, 3189.0, 23766.0, 10360.0, 6632.0, 0.0, 2423.0, 437.0, 832.0, 729.0, 9599.0, 38577.0, 15619.0, 6191.0, 35509.0, 4987.0, 19090.0, 172617.0, 9378.0], [0.0, 601.0, 859.0, 0.0, 0.0, 655.0, 0.0, 0.0, 0.0, 0.0, 7524.0, 3666.0, 4289.0, 31924.0, 32761.0, 13873.0, 14055.0, 1647.0, 53385.0, 300784.0, 9310.0], [1441.0, 100118.0, 14193.0, 0.0, 27576.0, 0.0, 8211.0, 424434.0, 9434.0], [3374.0, 18104.0, 5884.0, 1886.0, 6364.0, 35516.0, 13609.0, 0.0, 9812.0, 0.0, 3007.0, 0.0, 9984.0, 85996.0, 37166.0, 50129.0, 0.0, 36942.0, 285683.0], [98429.0, 2831.0, 35349.0, 4434.0, 35762.0, 423757.0, 3618.0], [4589.0, 52122.0, 4167.0, 0.0, 0.0, 5286.0, 2131.0, 0.0, 0.0, 0.0, 0.0, 20897.0, 103559.0, 62064.0, 8564.0, 14422.0, 440.0, 16654.0, 363834.0, 11679.0], [4050.0, 46185.0, 3047.0, 0.0, 21652.0, 12907.0, 1572.0, 4740.0, 127616.0, 43240.0, 13753.0, 24709.0, 5238.0, 22877.0, 418178.0, 8467.0], [10057.0, 116000.0, 87160.0, 1941.0, 86208.0, 3811.0, 27945.0, 491992.0, 3728.0], [2703.0, 49920.0, 2491.0, 1845.0, 9152.0, 7338.0, 20188.0, 0.0, 0.0, 0.0, 7155.0, 1324.0, 42617.0, 132586.0, 10051.0, 5633.0, 95275.0, 13483.0, 36456.0, 367415.0, 24431.0], [29472.0, 115580.0, 17672.0, 13282.0, 21345.0, 11789.0, 34290.0, 325872.0, 40828.0, 14301.0, 77052.0, 10671.0, 16965.0, 186118.0], [9675.0, 45239.0, 21304.0, 0.0, 19779.0, 30070.0, 5490.0, 0.0, 9501.0, 7386.0, 1486.0, 0.0, 8196.0, 227451.0, 59687.0, 742.0, 164184.0, 3141.0, 45976.0, 320084.0], [3406.0, 50411.0, 0.0, 14342.0, 5427.0, 11034.0, 14113.0, 0.0, 0.0, 0.0, 15850.0, 3579.0, 6592.0, 167285.0, 54536.0, 6941.0, 45528.0, 15514.0, 37457.0, 584746.0, 10777.0], [5657.0, 16040.0, 12997.0, 12003.0, 16528.0, 8021.0, 4335.0, 6193.0, 11611.0, 301408.0, 50798.0, 0.0, 106122.0, 17.0, 15455.0, 501846.0, 10329.0], [1344.0, 96262.0, 9315.0, 30572.0, 34644.0, 6992.0, 2846.0, 2758.0, 4206.0, 7949.0, 5781.0, 0.0, 258152.0, 0.0, 5641.0, 45758.0, 2062.0, 25175.0, 559980.0, 16636.0], [4942.0, 77494.0, 35838.0, 0.0, 18234.0, 16887.0, 0.0, 0.0, 0.0, 0.0, 413.0, 11395.0, 31090.0, 151474.0, 51866.0, 6700.0, 65117.0, 0.0, 58260.0, 657698.0, 20929.0], [21364.0, 164561.0, 41705.0, 0.0, 28516.0, 33096.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3723.0, 17304.0, 159774.0, 36527.0, 20369.0, 67668.0, 8185.0, 54338.0, 817151.0, 45385.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

