created: 20230529221000000
creator: Drevarr
modified: 20230705163532190
modifier: drevarr
tags: ChartData
title: 202305292210_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Inedible Plant", "Cat Wigglebooty", "Zadey Starbolt", "Black Raspberry Pie", "Blanco Padre Guard", "Fribble Bibble", "Sister Elonith", "Tika Fiery", "Venomina The Siren", "Smol Bee", "Artakama Nahid", "Ryvalia Fazebringer", "\u00c4big\u00e4il", "Bella Sassy", "Sire Nighthawk", "Solus Sanctus", "Gabe Malhorn", "Sygaldry Verdandi", "Rosie Sunray", "Tegan Parker", "Mawsmer", "Drevarr Moonwillow", "Lucas Ryn", "Koralia Danai", "Johosh Of The North", "Aira Draugr", "Oo Dads Mad", "Legionstorm", "Scarlet Nighttshade", "Crusader Siolith", "Belvyn Brightblade", "Legacy Of Mathus", "Roynec", "Pamtastic", "Grilo Gringo", "Riann Swordbreak", "Tuandha Lan", "Rx Medic", "Riann Swordbreak", "Nibbib", "Crusader Siolith", "Fluffy Mccutestuff", "Alnerian", "Sword Of Damocl\u00e9s", "Nova Keenway", "Zihbb", "Pu Ella", "Alex Asesino", "Big T Rock", "Rose D Avatar"];
const professions = ["Vindicator", "Scrapper", "Scrapper", "Chronomancer", "Firebrand", "Scrapper", "Berserker", "Firebrand", "Tempest", "Vindicator", "Tempest", "Chronomancer", "Reaper", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Tempest", "Virtuoso", "Scrapper", "Firebrand", "Firebrand", "Tempest", "Herald", "Spellbreaker", "Soulbeast", "Willbender", "Firebrand", "Firebrand", "Berserker", "Reaper", "Tempest", "Dragonhunter", "Spellbreaker", "Renegade", "Firebrand", "Berserker", "Scrapper", "Dragonhunter", "Harbinger", "Dragonhunter", "Vindicator", "Soulbeast", "Chronomancer", "Firebrand", "Virtuoso", "Druid", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[82.9571, 106.3991, 0.1489, 318.3043, 212.5864, 640.9815, 141.4615, 806.9764, 474.5617, 520.0507, 196.05, 56.3274, 491.6989, 38.3659, 296.4458], [48.7636, 370.3455, 45.2889, 224.2308, 58.6792, 0.0, 158.8981, 439.9683, 55.5376, 943.2919, 27.122, 72.0741, 340.6893, 27.9231, 152.9579], [29.5224, 458.1962, 99.8667, 0.5714, 87.6437, 44.283, 52.3611, 471.8231, 47.6463, 589.6835, 13.9048, 106.0707, 613.0346, 73.6061, 129.1928], [5.3429, 300.0877, 12.6596, 13.9474, 87.8696, 80.9184, 159.8148, 90.9612, 64.6627, 940.648, 38.4146, 127.7456, 690.6739, 79.5814, 208.0902], [29.9104, 521.9445, 0.0, 0.0, 49.0621, 0.0, 74.4954, 3526.1176, 71.8447, 824.0939, 0.0, 65.225, 819.3818, 97.5682, 210.1046], [23.4714, 341.185, 65.9333, 75.5, 68.1056, 25.1538, 107.2913, 120.1667, 79.9125, 751.5474, 68.475, 115.6372, 283.2064, 10.1707, 130.7495], [92.9, 937.4043, 36.5116, 124.8, 573.0315, 107.65, 284.1122], [12.1739, 360.4525, 8.7857, 57.0952, 87.821, 40.4792, 87.3211, 268.189, 50.0793, 583.8223, 243.5385, 80.8926, 307.9895, 12.5303, 153.5081], [339.2, 440.9225, 90.323, 625.04, 0.0, 69.3217, 565.5272, 7.8333, 406.382], [0.0, 70.4925, 23.8667, 171.9091, 91.9012, 31.625, 131.037, 342.6846, 59.2086, 766.1562, 22.7436, 115.5378, 716.0055, 71.5385, 232.4395], [40.4167, 287.8028, 14.6596, 43.9231, 33.0252, 18.34, 48.5229, 148.1875, 62.6848, 442.8674, 68.2, 127.2906, 825.3889, 75.3333, 141.2696], [20.1642, 307.396, 67.3125, 16.9333, 117.9451, 0.0, 109.8796, 209.374, 72.48, 552.5623, 77.6, 83.5439, 233.9241, 63.1463, 167.6205], [87.541, 670.3918, 23.2195, 76.8889, 247.2284, 96.8776, 142.4851, 628.8254, 74.3659, 1532.1895, 296.6401], [13.0789, 303.619, 60.9149, 9.1, 58.9497, 0.0, 46.4766, 337.192, 61.0862, 462.3217, 20.8, 71.9304, 273.1759, 39.9744, 148.5141], [35.0784, 100.2569, 265.246, 111.3171, 816.1223, 58.7317, 56.2213, 361.7006, 39.2273, 337.016], [11.8209, 269.6892, 10.7949, 21.4, 102.3185, 113.3898, 163.1481, 127.2222, 24.8232, 431.8673, 22.125, 83.0619, 495.2358, 46.5, 110.9356], [321.8314, 5.5366, 61.5, 40.2236, 12.7925, 69.0734, 148.6417, 22.9689, 629.8951, 0.0, 95.3415, 207.1932, 64.6842, 182.2783], [0.0, 360.8362, 159.8696, 0.0, 51.6543, 0.0, 60.3211, 269.9225, 145.297, 362.0376, 0.0, 55.4146, 296.1662, 90.2923, 112.7586], [179.8108, 115.2569, 496.6484, 96.3681, 865.9502, 38.8529, 103.4118, 321.5443, 176.1053, 211.3629], [24.5147, 245.2131, 0.0, 0.0, 56.6087, 38.7708, 117.463, 107.5116, 18.0184, 604.1079, 72.3529, 106.8938, 280.9186, 36.475, 124.9152], [37.3191, 58.6522, 177.8765, 107.6042, 92.3578, 377.8819, 145.1963, 870.4856, 0.0, 199.2358, 1329.3], [34.2535, 250.2334, 23.0417, 0.0, 104.6832, 36.2115, 57.3119, 117.768, 79.6688, 388.8324, 26.0, 66.4672, 364.2861, 44.8154, 140.8129], [0.0, 226.7414, 34.4894, 0.0, 141.7654, 67.0667, 123.6111, 207.8175, 67.8757, 524.3391, 5.1875, 58.0992, 185.8184, 17.2308, 138.2585], [1.5211, 362.3862, 18.725, 43.8205, 0.0, 87.6514, 140.5814, 36.5039, 338.9351, 0.0, 73.8174, 234.295, 43.7105, 112.5083], [30.3429, 249.4235, 53.3111, 56.1818, 65.4313, 156.3061, 18.6667, 111.7869, 43.5505, 397.841, 26.25, 103.6609, 193.6606, 4.7121, 110.5352], [23.2714, 639.5965, 0.0, 0.0, 135.051, 17.5849, 244.785, 248.8968], [22.9615, 588.376, 27.7045, 1.0, 93.7375, 113.2727, 30.9266, 579.8175], [147.1609, 806.7668, 0.0, 324.5289, 659.2075], [0.0, 591.0845, 0.0, 137.2632, 106.0886, 133.1707, 155.0459], [39.7516, 427.1438, 0.0, 109.0702, 476.2005, 9.5439, 168.8629], [24.1449, 444.7189, 0.0638, 0.0, 40.3827, 0.0, 231.5741, 621.4496], [11.4918, 415.9894, 34.5526, 0.0, 49.1288, 393.4595, 143.945, 368.768, 142.2573], [95.403, 556.2866, 0.0, 213.5385, 293.8457, 273.9817, 224.7419], [134.7391, 107.5714, 111.4172, 60.4528, 75.6422, 181.424, 45.0602, 491.6065, 5.2121, 79.982, 443.4286], [136.3681, 812.7956, 21.8438, 103.7304, 473.5465, 24.8182, 203.2778], [28.831, 228.772, 46.2391, 0.0, 80.6646, 0.0, 27.4167, 236.9921, 28.3576, 353.7876], [7.1591, 0.0, 86.1728, 0.0, 333.7982, 162.9922, 149.5607, 779.2045, 62.5952, 166.6429, 11.2625], [59.3286, 134.2906, 11.9787, 0.0, 88.6211, 23.7593, 144.7615, 703.3861, 266.5924], [46.1515, 67.4359, 509.3307, 217.2154, 223.1657], [0.0, 430.9801, 22.4894, 115.3, 105.7179, 16.0784, 53.8611, 130.155], [38.2419, 395.1843, 88.1111, 276.4615, 162.2547, 184.7647, 46.1944, 139.7615], [85.0149, 532.6507], [20.3171, 420.0281], [68.6571, 345.9335], [69.8955, 221.8705, 49.7045, 7.0541, 1167.42, 76.5306], [305.4049], [131.0142], [175.845], [156.7944], [0.0174]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

