created: 20230701101710000
creator: Drevarr
modified: 20230705163540358
modifier: drevarr
tags: ChartData
title: 202307011017_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Sakis Ranger", "Ryvalia Routbringer", "Grim Breacher", "Gamora Titus", "Trodek", "F\u00f9gly", "Valkren Sothur", "F\u00f9gly", "Violet Stab", "No Reserv\u00e9", "Bella Sassy", "Dizzy Bunnyhopper", "Elonith Requiem", "Govinda Ektar", "Wall Knot", "Latedoctor", "Drumina", "Sister Elonith", "Legacy Of Mathus", "Gestern Yesteryear", "Drevarr Moonwillow", "Charr Surethang", "Ryvalia Fazebringer", "Atros Shroudkeeper"];
const professions = ["Druid", "Berserker", "Reaper", "Dragonhunter", "Scrapper", "Catalyst", "Dragonhunter", "Tempest", "Firebrand", "Vindicator", "Firebrand", "Holosmith", "Scourge", "Vindicator", "Firebrand", "Reaper", "Druid", "Berserker", "Berserker", "Firebrand", "Scrapper", "Berserker", "Chronomancer", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 1, 1, 0, 4, 5, 2], [13], [5, 1, 8], [1, 5, 4, 4, 1], [2, 2, 2, 5, 1, 1, 1, 0, 0, 0, 1], [0, 19], [16, 10], [13, 14], [15, 10, 2], [17, 1, 3, 1, 1, 4, 3], [0, 2, 0, 3, 0, 1, 9, 3, 4, 0, 11, 0, 0, 1, 0, 0], [3, 20, 0, 3, 0, 2, 3, 4], [2, 18, 0, 2, 4, 1, 2, 4, 5], [7, 0, 2, 3, 3, 3, 2, 14, 2, 1, 0, 2, 4], [8, 6, 2, 20, 2, 3, 1, 2, 5, 9], [2, 1, 2, 5, 1, 5, 8, 6, 2, 2, 15, 0, 1, 3, 2, 1, 3, 5], [5, 0, 5, 13, 8, 4, 3, 14, 0, 3, 0, 2, 2, 5], [0, 1, 4, 7, 1, 11, 22, 13, 6], [0, 2, 7, 9, 5, 2, 23, 1, 0, 2, 4, 6, 8], [1, 1, 4, 7, 1, 8, 16, 5, 4, 1, 14, 0, 0, 2, 2, 2, 4], [0, 6, 12, 10, 2, 1, 19, 2, 2, 5, 2, 3, 4, 7], [0, 0, 4, 5, 1, 10, 11, 2, 4, 2, 21, 1, 2, 4, 3, 5, 5], [16, 9, 4, 3, 25, 1, 1, 6, 2, 5, 8], [4, 47, 1, 2, 8, 3, 5, 9, 16]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

