created: 20230527000807000
creator: Drevarr
modified: 20230705163531729
modifier: drevarr
tags: ChartData
title: 202305270008_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Lucky Leipreach\u00e1n", "Elonith Primal", "Miphest\u00f6", "High Sorcer Baradun", "Lord Erin The Wise", "The Fancy Cheese", "Cyclotechnist Farra", "Arriasa", "Daddys Lil Orchid", "Aronorf Xideliesi", "Sofya De Nova", "Maw Rev", "Demon Sekhmet", "Drevarr Moonwillow"];
const professions = ["Scrapper", "Tempest", "Tempest", "Weaver", "Weaver", "Scrapper", "Scrapper", "Druid", "Vindicator", "Firebrand", "Weaver", "Renegade", "Spellbreaker", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 106.7088, 212.4954, 74.4149, 134.3458, 26.258, 110.7052, 23.9887, 18.7366, 67.9875, 74.0218, 8.368, 93.7406, 136.1036, 53.4924], [129.577, 152.7389, 0.0, 0.0, 183.6086, 23.4195, 41.7331, 67.4074, 0.0, 53.9137, 31.2287, 46.3382, 56.9498, 0.0, 31.3819, 31.3909, 32.2358, 61.2955, 37.0181, 0.0, 61.6783, 120.3706, 0.0, 32.6382, 73.4113, 37.4544], [320.3482, 229.2, 0.0, 301.2365, 38.3631, 67.7069, 109.9771, 0.0, 0.0, 9.5805, 0.0, 85.9264, 0.0, 34.1942, 25.1602, 9.0372, 0.0, 0.0, 83.815, 57.2544], [198.5126, 170.8915, 26.8088, 15.6332, 167.4547, 35.5718, 37.9392, 94.4458, 77.395, 0.0, 21.6125, 168.7168, 0.0, 66.0672, 39.8171, 0.0, 118.1707, 21.648, 82.6728, 229.1539, 29.5705, 136.1036, 18.6624], [382.6483, 362.3194, 32.2871, 11.8712, 8.0528, 422.5046, 88.9125, 165.1814, 143.1778, 28.1754, 139.2771], [387.9936, 217.0982, 39.0476, 18.392, 0.0, 252.7747, 0.0, 135.5597, 121.2326, 47.895, 0.0, 18.4992, 199.9514, 0.0, 23.4806, 34.0612, 9.8302, 62.9654, 23.1363, 140.7613, 178.9882, 41.184, 109.8334, 170.7289, 67.5216], [323.4816, 215.448, 89.2267, 24.5617, 316.9354, 80.4706, 146.5766, 130.4131, 33.9966, 80.6163, 0.0, 198.1952, 62.3621, 77.5574, 7.9483, 113.0627, 19.7673, 15.9236, 72.8282, 212.1139, 16.192, 48.2281, 95.9072, 54.4968], [655.6262, 782.2138, 89.6346, 38.0213, 752.6362, 49.5398, 203.6683, 8.316, 145.8892, 235.4127, 110.7245], [413.9827, 382.1222, 103.0973, 11.8378, 17.36, 496.2211, 64.5398, 109.6589, 118.6546, 25.4034, 118.1694, 53.706, 68.0861, 214.6278, 0.0, 151.2742, 35.9357, 8.554, 113.5663, 253.0099, 7.104, 86.7503, 159.4457, 87.8688], [472.5965, 554.8474, 111.14, 4.9993, 272.569, 107.3281, 174.1555, 98.4072, 0.0, 177.8475, 0.0, 147.3168, 261.417, 91.6013, 136.1853, 0.0, 256.1838, 37.7692, 167.9019, 398.8723, 60.6497, 190.0514, 89.91], [472.4122, 405.0422, 103.855, 15.8004, 19.2864, 571.0752, 81.4577, 184.0051, 140.4739, 34.7292, 153.0099, 118.1439, 31.8096, 344.5837, 0.0, 124.9474, 146.6885, 19.2397, 110.7052, 27.3035, 15.9236, 158.71, 305.4931, 17.216, 32.085, 153.3105, 78.9264], [189.8133, 123.3581, 656.6784, 224.8517, 325.2425, 35.5347, 540.0685, 82.763, 275.8661, 727.6762, 81.968, 167.868, 365.082, 183.546], [562.729, 662.8464, 135.7924, 57.7676, 41.6304, 644.3366, 114.7148, 209.3222, 167.3237, 53.7372, 250.5801, 131.7316, 139.2403, 367.6646, 31.9325, 128.2507, 217.9558, 56.8112, 267.5785, 57.6902, 72.665, 367.9277, 32.896, 165.6553], [1094.4922, 1156.0848, 179.2693, 54.9085, 0.0, 1665.4464, 192.0877, 573.2467, 311.5075, 94.5846, 335.0958, 239.7884, 164.9587, 713.1264, 15.4808, 209.9866, 313.1965, 173.4448, 751.1648, 101.3397, 80.7366, 353.2631, 1051.8451, 151.568, 288.564, 509.9301, 271.5444]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

