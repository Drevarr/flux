created: 20230318225613000
creator: Drevarr
modified: 20230705163522440
modifier: drevarr
tags: ChartData
title: 202303182256_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Euljian", "Gavann", "Drevarr Moonwillow", "Aronorf Xideliesi", "S\u00edzz", "Zaylen Harker", "Johosh The Great", "Koralia Danai", "Bella Sassy"];
const professions = ["Dragonhunter", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2.1756, 110.2813, 16.9936, 0.0, 0.0, 0.0, 18.8676, 16.6464, 0.0, 40.3676, 0.0, 84.2982, 36.1108, 12.9902], [20.776, 58.5446, 0.0, 29.4565, 82.8826, 113.7994, 0.0, 16.6904, 8.1984, 56.9652], [0.0, 34.1712, 0.0, 5.4481, 56.1792, 1.8605, 5.5649, 0.0, 21.8736, 14.0748, 29.4975, 24.7714, 40.3894, 31.9493, 30.668, 5.4108, 0.0, 1.0955, 2.7416, 12.6076, 52.4851, 13.398, 22.6325], [37.6194, 72.8179, 20.9786, 7.8181, 39.6902, 14.9614, 0.0, 0.0, 21.2352, 67.3548, 55.534, 10.4576, 4.7667, 4.6094, 12.4467, 0.0, 0.0, 1.7317, 7.3042, 4.7223, 21.847, 23.7591, 19.5858], [182.8845, 39.3794, 119.6787, 35.5291, 60.8274, 76.2804, 15.2755], [36.5435, 118.1174, 52.4191, 47.2781, 189.9878, 54.8066, 0.0, 55.3056, 64.824, 77.0081, 45.0657, 62.6909, 70.8365, 20.944, 10.2708, 1.8115, 12.5575, 22.0354, 144.4757, 136.0, 22.1003, 101.3105], [26.341, 220.3286, 33.0134, 97.8188, 306.432, 88.4503, 0.0, 2.0145, 63.6384, 149.2728, 119.7205, 87.5824, 166.7926, 45.1123, 58.0149, 15.2712, 46.0714, 25.1032, 32.7565, 51.5889, 185.2646, 50.1468, 65.9891], [253.8753, 201.7008, 70.4554, 256.6733, 111.9389, 14.6131, 37.5312, 153.4908, 142.8466, 9.3138, 100.5693, 29.5416, 17.8024, 24.8832, 51.8486, 14.8546, 37.7078, 109.0584, 225.3466, 77.6829, 91.4004], [222.1177, 367.416, 43.329, 13.2354, 482.1197, 169.8463, 53.631, 25.3568, 78.7248, 187.146, 268.1519, 73.2032, 152.1094, 21.6216, 43.9226, 41.9364, 22.8154, 21.4043, 73.1036, 150.8909, 110.5843, 86.181, 117.0461]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

