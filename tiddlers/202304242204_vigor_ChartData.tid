created: 20230424220408000
creator: Drevarr
modified: 20230705163526688
modifier: drevarr
tags: ChartData
title: 202304242204_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Blancooo Padreee", "Mistwalker Caelon", "Arriasa", "Tegan Parker", "Xyntharos", "Cat Wigglebooty", "Mac Aaroni", "Grasszanine", "Zadie Miststep", "Sassy Daddy Demon", "Newtype Khan", "Fribble Bibble", "Zefirokai", "Drevarr Moonwillow"];
const professions = ["Spellbreaker", "Vindicator", "Druid", "Tempest", "Vindicator", "Scrapper", "Tempest", "Spellbreaker", "Tempest", "Vindicator", "Spellbreaker", "Scrapper", "Tempest", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[191.7027, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 65.04], [159.7523, 0.0, 11.4774, 20.7929, 20.2406, 3.9254, 1.0022, 20.0602, 4.0214, 11.9438, 22.4028, 27.7187, 26.46], [80.2311, 0.0, 0.0, 78.3973, 38.5728, 0.0, 0.0, 74.711, 62.5027, 0.0, 0.0, 76.8563, 0.0], [243.2968, 0.0, 0.0, 31.6356, 14.327, 0.0, 0.0, 31.703, 0.0, 23.7773, 19.2276, 24.5116, 26.1], [160.4623, 8.3055, 30.0894, 33.0634, 21.4502, 8.287, 4.176, 19.1386, 25.2533, 21.6825, 16.758, 36.9201, 36.66], [158.5689, 0.0, 5.0252, 4.9974, 62.0928, 0.0, 0.0, 14.9914, 5.0098, 87.5017, 75.3669, 57.6136, 0.0], [233.83, 30.8945, 26.8633, 54.6595, 0.0, 0.0, 0.0, 30.8429, 31.8307, 31.6785, 31.7079, 31.384, 30.6], [351.9283, 0.0, 54.6262, 0.0, 0.0, 0.0, 0.0, 29.6755, 65.6381, 38.3302, 0.0, 58.8736, 38.88], [330.8647, 0.0, 27.7939, 26.1473, 52.3891, 0.0, 31.4314, 52.8998, 28.2523, 51.7073, 0.0, 61.928, 0.0], [452.7497, 47.726, 47.5226, 82.7701, 74.7802, 25.2837, 22.3555, 71.7312, 45.156, 90.9563, 62.2251], [409.4391, 0.0, 91.3849, 58.7645, 54.7814, 100.2214, 26.977, 54.0672, 52.2106, 122.6348, 156.6432, 51.8484, 143.04], [740.0671, 0.0, 91.3229, 45.4232, 48.7334, 0.0, 0.0, 123.8323, 83.2915, 51.7808, 149.8518, 35.6601, 165.84], [168.2957, 152.0018, 235.248, 177.623, 144.0562, 241.8885, 294.2793, 329.9134, 286.8], [989.9906, 41.405, 83.1336, 118.5553, 88.1395, 35.1927, 5.4288, 118.3334, 183.4526, 98.8942, 133.9758, 168.5647, 228.72]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

