created: 20230419215809000
creator: Drevarr
modified: 20230705163525925
modifier: drevarr
tags: ChartData
title: 202304192158_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Bagera Flametalon", "Xyntharos", "Sygaldry Verdandi", "Anita Strips", "My Birthday Girl", "Mac Chiato", "Gabe Malhorn", "Kos\u00e4ir", "Ark Darkness", "Smol Gluvs", "Johosh The Great", "Zadie Miststep", "Koralia Danai", "Mistwalker Caelon", "Xanvias Einzbern", "Grasszanine", "Eibh\u00ebar", "Abigail Ryn", "Drevarr Moonwillow", "Bella Sassy"];
const professions = ["Tempest", "Vindicator", "Firebrand", "Chronomancer", "Scrapper", "Tempest", "Firebrand", "Vindicator", "Firebrand", "Scourge", "Firebrand", "Tempest", "Firebrand", "Vindicator", "Berserker", "Spellbreaker", "Chronomancer", "Tempest", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[568, 502, 427, 255, 277, 7574, 4009, 390, 20647, 10334, 749, 186, 734, 3294], [319, 558, 492, 302, 324, 276, 474, 254, 220, 337, 368, 361, 291, 563, 2016, 312, 343, 2240, 1312, 245, 1322, 801], [4832, 559, 674, 525, 352, 202, 1385, 279, 710, 443, 421, 471, 329, 1837, 4515, 306, 1210, 1933, 1352, 221, 8862, 180], [533, 151, 3137, 318, 295, 234, 11385, 481, 174, 217, 326, 467, 315, 703, 352, 285, 511, 892, 1355, 300, 3860, 387], [296, 288, 1076, 456, 314, 255, 3502, 292, 518, 355, 336, 350, 3158, 588, 4120, 9082, 1774, 455, 785, 237, 5459, 1270], [506, 779, 267, 311, 379, 1881, 720, 511, 113, 304, 394, 282, 660, 273, 253, 1400, 2228, 1253, 176, 649, 3822], [458, 305, 279, 1573, 404, 403, 356, 302, 290, 3844, 1922, 315, 1333, 666, 1420, 270, 271, 5244], [279, 435, 783, 435, 245, 218, 9070, 452, 327, 201, 398, 301, 312, 467, 1630, 189, 443, 5593], [730, 842, 444, 4244, 282, 1946, 11384, 479, 216, 307, 363, 269, 366, 558, 335, 432, 8051], [291, 457, 562, 269, 274, 295, 1649, 210, 433, 145, 287, 263, 235, 335, 345, 301, 796, 1989, 1295, 190, 2207, 320], [560, 319, 833, 268, 225, 294, 455, 453, 412, 311, 281, 282, 807, 268, 225, 899, 1929, 1269, 211, 1698, 204], [474, 341, 237, 263, 248, 360, 249, 425, 181, 303, 491, 242, 4428, 469, 258, 836, 1935, 5644, 221, 417, 191], [311, 757, 259, 239, 280, 1437, 244, 198, 337, 297, 254, 5590, 325, 249, 1290, 1903, 1367, 224, 250, 200], [175, 336, 423, 257, 278, 333, 2667, 214, 265, 231, 458, 264, 367, 919, 1715, 258, 257, 2324, 1405, 258, 327, 4635], [218, 402, 502, 222, 212, 240, 811, 199, 340, 284, 258, 230, 1575, 312, 357, 250, 632, 1164, 173, 1876, 371], [419, 245, 2027, 209, 191, 311, 1876, 579, 304, 436, 226, 248, 2142, 361, 319, 1256, 306, 835, 142, 4190, 228], [239, 518, 236, 220, 209, 7558, 636, 213, 138, 249, 257, 208, 861, 250, 216, 678, 6764, 1125, 194, 4364, 4445], [217, 215, 475, 227, 206, 248, 390, 198, 308, 158, 269, 185, 223, 1956, 331, 340, 1257, 450, 1420, 205, 8033, 404], [387, 207, 2431, 184, 204, 317, 1859, 354, 216, 169, 202, 229, 215, 829, 422, 190, 1160, 2021, 1210, 151, 204, 177], [195, 210, 512, 136, 170, 208, 1308, 6126, 276, 212, 189, 201, 560, 277, 192, 1209, 1693, 583, 188, 4354, 155]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

