created: 20230913214750000
creator: Drevarr
tags: ChartData
title: 202309132147_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Etchery Howls", "Venomina The Fierce", "Tribal S", "Zaedy Zae", "Nebula Davar", "Rozaalyna", "Morv\u00e4rth", "Ka Otik Nightm\u00e6r", "Blaize Harlot", "Elonith Requiem", "Daphne Agla\u00e9", "Rina Of Theros", "Rahani Sunray", "Arcanophage Farra", "Primal Clone", "Eibh\u00ebar"];
const professions = ["Druid", "Spellbreaker", "Druid", "Druid", "Scourge", "Reaper", "Reaper", "Reaper", "Scourge", "Reaper", "Reaper", "Reaper", "Chronomancer", "Spellbreaker", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0489, 0.0168, 0.0556, 0.0195, 0.05, 0.0233, 0.0388, 0.0671, 0.0652, 0.021, 0.0185, 0.043, 0.1481], [0.3557, 0.2826, 0.1608, 0.0556, 0.0753, 0.0, 0.037], [0.0716, 0.0302, 0.0635, 0.0469, 0.1, 0.0698, 0.1085, 0.1007, 0.0652, 0.0629, 0.0556, 0.0215, 0.0, 0.1296], [0.0716, 0.0302, 0.0476, 0.0781, 0.1333, 0.0, 0.0698, 0.1085, 0.1409, 0.0652, 0.042, 0.0185, 0.043, 0.0, 0.1296], [0.1745, 0.7609, 0.3147, 0.1296, 0.129, 0.0, 0.1667], [0.1449, 0.104, 0.0317, 0.0977, 0.2, 0.3023, 0.0], [0.1571, 0.0369, 0.127, 0.0547, 0.2667, 0.0682, 0.5465, 0.0], [0.0503, 0.1429, 0.0977, 0.2833, 0.0, 0.3488, 0.4651, 0.2483, 0.087, 0.4336, 0.0926, 0.0, 0.3704], [0.1937, 0.2181, 0.1111, 0.1172, 0.25, 0.0, 0.3953, 0.0698, 0.1477, 0.3261], [0.1349, 0.1289, 0.45, 0.4535, 0.5814, 0.5705, 0.0761, 0.4545, 0.1852, 0.463], [0.1902, 0.0738, 0.2698, 0.0703, 0.1667, 0.0, 0.2674, 0.2248, 0.2819, 0.5217, 0.2727, 0.037, 0.172, 0.0, 0.4074], [0.2967, 0.1174, 0.1349, 0.0625, 0.5, 0.0, 0.3953, 0.2868, 0.0805, 0.7391, 0.4266, 0.037, 0.0538, 0.0213, 0.4815], [1.2016, 0.4832, 0.5217, 1.2238, 0.4074, 0.1505, 0.0, 0.6481], [0.2094, 0.2047, 0.246, 0.1758, 0.4667, 0.0455, 0.4535, 0.7519, 0.0805, 0.6522, 0.4056, 0.1111, 0.1183, 0.0, 1.8519], [0.3473, 0.2282, 0.1905, 0.1406, 1.5333, 0.0227, 0.6977, 1.0775, 0.5705, 0.2065, 0.6364, 0.0556, 0.172, 0.0213, 1.0741], [0.5393, 0.3356, 0.8095, 0.4609, 0.8833, 0.0, 1.1163, 1.5814, 0.906, 1.2717, 0.7483, 0.8889, 0.6667, 0.0, 0.5185]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

