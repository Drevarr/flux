created: 20230204220933000
creator: Drevarr
modified: 20230705163518659
modifier: drevarr
tags: ChartData
title: 202302042209_cleanses_ChartData
type: text/vnd.tiddlywiki


const names = ["Raziel Umbra", "Bambiae", "Tootsie Pop Bringer", "Black Raspberry Pie", "Cat Wigglebooty", "Zaidy Sagemist", "High Sorcer Baradun", "Tegan Parker", "Vinthry Stormgrave", "Arkintor", "Drevarr Moonwillow", "Mike The Archmagus"];
const professions = ["Chronomancer", "Chronomancer", "Scrapper", "Chronomancer", "Scrapper", "Vindicator", "Tempest", "Tempest", "Tempest", "Tempest", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2362, 0.0447, 0.2705, 0.1627, 0.2305, 0.1503, 0.0, 0.5056, 0.0, 0.2152, 0.3756], [0.3022, 0.2109, 0.0984, 0.1272, 0.3894, 0.2504, 0.3393, 0.2491, 0.12, 0.2928, 0.3019], [0.3345, 0.2457, 0.0, 0.5406, 0.2054, 0.0781, 0.16, 0.5732, 0.6003], [0.3525, 0.263, 0.2951, 0.3964, 0.5078, 0.2832, 0.3393, 0.2305, 0.44, 0.381, 0.3293], [0.7014, 0.2159, 0.0738, 0.2189, 0.6542, 0.3005, 0.3661, 0.1004, 0.4, 0.7196, 0.6141], [0.7866, 0.2506, 0.1967, 0.3994, 0.8006, 0.4905, 0.4732, 0.1264, 0.76, 0.1799, 0.7324], [0.8861, 0.2333, 0.3607, 0.6686, 1.0498, 0.7927, 0.8393, 0.8216, 0.6, 0.746, 0.9863], [1.4532, 0.3598, 0.623, 1.284, 1.6044, 1.2003, 1.3482, 0.7621, 1.92, 1.381, 1.5712], [1.3549, 0.5261, 0.7131, 0.997, 1.6417, 1.1952, 0.8929, 1.2528, 0.04, 1.3915, 1.717], [1.5384, 0.6452, 0.6803, 1.1686, 1.3863, 1.228, 1.25, 1.2565, 0.68, 1.5115, 1.434], [1.8981, 0.8015, 1.1066, 1.5533, 1.7632, 1.6097, 1.4286, 1.29, 1.56, 1.6349, 1.8473], [2.4173, 1.0149, 1.1639, 1.6834, 2.4548, 1.7427, 2.3125, 1.8476, 2.04, 2.0882, 2.4202]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

