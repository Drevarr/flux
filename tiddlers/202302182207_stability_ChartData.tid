created: 20230218220736000
creator: Drevarr
modified: 20230705163519650
modifier: drevarr
tags: ChartData
title: 202302182207_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Kira Dragonblaze", "Sumatra Satyricon", "Venomina The Fierce", "Belvyn Brightblade", "El Mas Prron Aki", "Aronorf Xideliesi", "Ace Hammers", "Sygaldry Verdandi", "Kahless The Drunk", "Anita Strips", "Blanco Padre Guard", "Johosh The Great", "Koralia Danai"];
const professions = ["Dragonhunter", "Soulbeast", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[3.5708, 2.3976, 2.2226, 1.9159, 0.0], [2.8829, 1.2654, 1.3759, 1.4232, 0.0, 2.8908, 1.4133, 0.0, 0.0, 0.0, 1.4372], [1.8612, 0.984, 3.469, 1.0921, 1.1218, 0.2686, 0.8554, 3.1223], [3.4398, 6.8598, 1.764, 2.737, 0.0], [7.1306, 1.7987, 0.0, 6.2941], [5.8313, 6.5268, 3.2105, 3.2844, 1.1563, 3.1478, 0.0, 0.0, 4.5595], [4.783, 0.0, 2.2579, 4.7624, 2.0074, 9.7645, 4.9465, 0.1402, 1.1574, 7.2358], [5.4945, 4.3747, 6.5141, 0.0, 10.4069, 5.8458, 0.2198, 5.402], [9.3366, 5.2947, 3.9161, 6.2951, 0.1574, 8.1585, 5.364, 2.1189, 1.514, 0.0, 5.6498], [12.5143, 8.1252, 4.4806, 4.4887, 0.0, 9.7645, 4.8501, 0.4051, 0.0, 1.2832, 6.988], [10.6142, 5.4945, 8.1497, 6.1309, 0.0, 8.4797, 4.4647, 2.2435, 0.0, 11.597], [10.6142, 6.9597, 3.9514, 4.8719, 0.0, 13.3619, 7.7409, 2.0254, 2.3687, 0.0, 10.5563], [14.0213, 10.9557, 8.5378, 7.9373, 0.0, 12.9122, 8.833, 0.0, 2.3199, 0.9309, 9.0695]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

