created: 20230814220552000
creator: Drevarr
tags: ChartData
title: 202308142205_dmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Mike The Archmagus", "Elisha Raskae", "Aqua Leon", "Squishy Jellyfish", "Alizayd Delnbone", "Raven H\u00ebx", "Zaedy Zae", "Seiker Novus Terra", "Pr\u00e6tor Lightbringer", "Tootsie Pop Rocks", "Koralia Danai", "Kisumaiassu", "Klengah", "Mielikki Embla", "Reddoring Frost", "Tegan Parker", "Crusader Siolith", "Sister Elon\u00edth", "Cat Wigglebooty", "Ryvalia Fazebringer", "Sygaldry Verdandi", "Bella Sassy", "Rewate", "Blancooo Padreee", "Tropcaller", "Heian I", "Drevarr Moonwillow", "My Birthday Girl", "High Sorcer Baradun", "Randlock", "Milvia Rosalyn", "Oo Dads Mad", "Blancooo Padreee", "Y U So Mean", "Darkandshadow", "Zeke Lightbringer", "Darks Na", "Rehdav", "Rozaalyna", "Jerryatric Reflexes", "Newtype Khan", "Kisumaiassu", "Revitiel", "Arcanophage Farra", "Name Is What", "Black Raspberry Pie", "Mort\u00e4rion", "Crabbedmermaid", "Daphne Agla\u00e9", "Raziel Umbra", "Morton Saltbringer", "Rina Of Theros", "Permanent Dawn", "Legacy Of Mathus", "Lord Erin The Wise", "Eibh\u00ebar", "Palm Sauce", "Be\u00eb", "Bee Nemesis", "Mike The Archmagus", "Mistwalker Cael", "Xanvias Einzbern"];
const professions = ["Tempest", "Virtuoso", "Vindicator", "Firebrand", "Firebrand", "Necromancer", "Druid", "Tempest", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Druid", "Druid", "Reaper", "Tempest", "Firebrand", "Firebrand", "Scrapper", "Chronomancer", "Firebrand", "Firebrand", "Herald", "Spellbreaker", "Firebrand", "Herald", "Scrapper", "Scrapper", "Tempest", "Untamed", "Druid", "Berserker", "Berserker", "Mirage", "Mirage", "Reaper", "Dragonhunter", "Daredevil", "Scourge", "Spellbreaker", "Spellbreaker", "Dragonhunter", "Vindicator", "Spellbreaker", "Scourge", "Chronomancer", "Scrapper", "Dragonhunter", "Scourge", "Chronomancer", "Chronomancer", "Scourge", "Weaver", "Berserker", "Weaver", "Chronomancer", "Vindicator", "Scourge", "Berserker", "Weaver", "Vindicator", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.331, 0.0, 1.4261, 0.0, 0.0], [89.9057, 0.0], [34.4333, 0.0, 54.1585, 47.9811, 8.2353], [18.969, 14.5681, 10.1549, 16.5783, 4.0, 26.5368, 8.2097], [56.8763, 38.8571, 93.7111, 10.1837, 35.3171, 90.6604, 16.1176], [193.0, 620.0], [72.6271, 11.0619, 3.8407, 0.0, 7.2048, 14.0696, 11.4632, 3.8148, 57.0656, 43.186, 0.0, 16.931, 31.2909, 46.3093, 0.0, 0.0, 5.6707, 97.3208, 22.0882], [277.5593, 84.1239], [2.3451, 14.5222, 9.6408, 0.0361, 4.6783, 31.1579, 9.4355, 31.4074, 73.2295, 16.5194, 166.2292, 214.5517], [60.6949, 73.708, 2.8278, 2.1408, 0.7952, 0.0, 12.7789, 0.0, 28.7213, 0.0, 20.4583, 0.0, 76.7455, 22.0309, 19.5, 23.4444, 27.4898, 22.2439, 70.7736, 0.0], [21.8814, 45.0885, 7.3314, 25.4507, 17.6386, 5.1217, 1.2211, 8.8148, 25.7377, 23.1938, 20.4792, 0.0, 51.4182, 52.0, 4.2143, 25.6778, 0.0, 80.4756, 63.9057, 0.0], [155.1864, 51.9823, 14.1621, 41.2465, 62.5542, 17.5043, 17.4737, 25.0484, 37.5185, 71.7869], [101.339, 26.7434, 10.462, 4.6408, 7.9277, 14.0, 16.3158, 18.4194, 0.0, 50.2787, 1.4419, 35.1875, 4.5517, 70.7091, 74.8763, 24.0357, 23.7667, 20.6939, 54.0244, 25.7736, 80.5], [6.708, 40.2769, 72.0704, 23.241, 59.2696, 53.4105, 4.2903, 8.6667], [82.2168, 63.3257], [54.322, 47.208, 4.9656, 1.5423, 8.6024, 12.487, 8.2526, 6.3548, 11.0656, 150.7083, 114.4828, 13.5455, 152.3814, 15.6071, 108.1667, 10.3265, 2.0122, 81.1509, 0.3824], [71.5841, 6.8623, 13.2254, 33.1205, 18.8522, 14.8947, 0.0, 53.4754, 7.5736, 88.8958, 24.3448, 98.0727, 138.2268, 4.5, 90.1, 0.0, 50.939, 67.5849, 68.3824], [17.7434, 38.2855, 8.3592, 17.0361, 0.0, 13.8526, 0.0, 11.5185, 26.2787, 23.876, 30.3958, 77.3793, 81.2, 105.2887, 37.4286, 54.4222, 0.0, 166.4146, 41.1509, 12.0882], [134.2712, 45.292, 15.0875, 6.5493, 11.6627, 3.2348, 48.2842, 0.0, 65.4098, 24.4729, 72.8542, 241.0, 114.6, 157.9072, 90.9889, 0.0, 106.1341, 0.0], [165.0, 8.7876, 49.6671, 29.3803, 12.747, 7.0609, 40.5158, 4.9194, 0.0, 193.918, 3.5039, 22.625, 55.8966, 47.4182, 165.5979, 53.8929, 11.6444, 0.0, 41.439, 100.4906, 36.3529], [101.0847, 7.208, 36.4118, 4.4577, 17.7229, 45.7826, 18.0211, 0.0, 14.8852, 34.2481, 194.6875, 33.0, 52.4182, 168.0722, 27.1786, 189.8667, 37.7143, 76.6341, 35.5472, 7.6176], [63.0, 51.7788, 25.9914, 11.5986, 9.012, 9.3217, 40.8526, 63.2903, 14.3704, 132.6393, 29.2171, 67.0208, 141.2069, 27.1273, 112.8969, 14.3929, 130.6667, 50.9592, 83.4878, 221.5472, 0.0], [336.6701, 0.0, 411.6667, 98.6735, 488.1829, 0.0], [45.4237, 58.2965, 37.7547, 42.7606, 97.4458, 46.9739, 42.1263, 0.0, 0.0, 284.5082, 8.2636, 297.7241, 354.6098], [27.8924, 12.1056, 29.0482, 5.3391, 48.6947, 3.4516, 144.0, 46.8527, 430.75, 351.4483, 140.7818, 256.0412, 62.5, 186.6, 18.1837, 88.3659, 93.6981, 268.5882], [100.9584, 99.5775, 270.0602, 82.6609, 359.6737, 28.1774], [176.678, 47.7876, 26.9684, 7.838, 7.2169, 15.4696, 5.8105, 37.0323, 8.6296, 197.6721, 49.4186, 97.5, 191.8621, 166.7273, 290.2062, 62.6071, 143.9667, 24.2653, 146.7073, 127.3585, 209.7059], [63.5932, 586.8451, 1.023, 5.3012, 16.5478, 2.6211, 0.0, 0.0, 36.7213, 11.969, 61.3542, 72.0345, 23.8727, 60.1031, 49.2857, 60.9444, 0.0, 45.3293, 15.3774, 18.8235], [338.0847, 33.5044, 24.3529, 4.5282, 69.0843, 19.713, 38.2, 0.0, 27.3607, 53.1628, 51.1667, 141.3793, 113.9636, 489.7423, 252.2222, 13.7755, 203.7927, 48.6792], [163.124, 391.2292, 446.2414, 277.8909, 33.433, 263.2143, 560.1333, 0.0, 588.1463, 100.7059], [13.6729, 6.6627, 71.4087, 209.4, 34.4677, 202.459, 70.7442, 281.7292, 353.6207, 353.5455, 334.7835, 156.5333, 49.2245, 134.4756, 292.7358, 102.8529], [250.3729, 0.0, 159.1506, 234.4648, 272.9036, 35.487, 52.1852], [320.1042, 853.4, 1125.7216, 132.75, 0.0, 0.0, 461.3585, 260.4412], [17.8028, 670.9518, 619.8609, 537.9368, 322.4355, 404.8889], [230.6552, 266.8727, 841.701, 90.7857, 731.3889, 32.7755, 529.2195, 0.0, 0.0], [60.4071, 172.8651, 172.7535, 192.9759, 152.1391, 367.2842, 70.5484, 43.9259], [135.9024, 480.7113, 93.4578, 185.2957, 204.5368, 141.629, 272.1148], [263.377, 142.2713, 244.6458, 882.2414, 498.2909, 985.7732, 273.0333, 0.0, 94.0122, 283.1887], [1679.0678, 20.7522, 75.594, 50.3239, 0.0, 33.6696, 102.3579, 30.4839, 220.7037, 886.3443, 529.8333, 1336.9655], [95.1239, 62.5466, 81.5563, 35.5663, 66.2609, 122.6526, 31.629, 366.8197, 55.2946, 558.7708, 499.5172, 378.8182, 499.5052, 34.25, 354.0444, 10.1633, 488.439, 260.9811, 29.7353], [258.4237, 77.0885, 59.4405, 7.1127, 51.4819, 15.1652, 74.9579, 34.0484, 113.1111, 188.9508, 127.3566, 332.1042, 755.5172, 637.6, 531.2371, 68.1429, 282.9667, 57.5918, 549.2927, 453.1132, 45.2353], [224.1938, 683.8542, 658.6897, 182.2909, 1356.3093, 12.0, 497.4222, 528.1837, 507.7927, 705.5849, 371.9118], [326.1726, 152.726, 154.5915, 287.2169, 130.0174, 136.7684, 155.6452, 185.8148, 948.8033, 92.4419, 1377.7292, 1583.8966], [559.7627, 165.4735, 94.5438, 14.7254, 53.8675, 24.8696, 65.3368, 37.129, 633.541, 5.6589, 517.8125, 798.8621, 503.3818, 845.9691, 591.2667, 0.0, 535.4634, 367.3585, 404.9412], [566.7119, 16.9513, 91.7532, 58.9296, 8.5663, 66.8435, 166.8316, 63.1129, 42.8519, 482.1148, 58.124, 604.5208, 1051.4483, 569.4, 978.2577, 42.4286, 392.9667, 50.6939, 1033.9756, 75.8302, 353.9706], [14.4336, 231.5997, 38.3662, 132.7711, 70.5739, 381.6737, 78.2097, 376.2295, 78.6124, 505.2083, 458.3793, 382.6727, 1125.5258, 48.25, 40.9667, 414.6939, 505.3537, 469.4906, 436.1471], [260.0646, 95.5915, 405.3373, 297.5913, 469.3368, 436.0323, 1117.4098, 451.3953, 390.6042, 2313.6897, 1493.2364], [0.0, 94.7565, 163.2421, 147.4032, 22.6667, 24.7377, 228.0543, 949.4792, 2342.6552, 1799.2545, 1667.1649, 250.3571, 1003.7, 27.7347, 1536.7805], [1039.7458, 148.5973, 132.7331, 69.8169, 55.8313, 71.9913, 230.9789, 111.1129, 32.7407, 644.6721, 308.6047, 1305.5, 1111.2069, 518.9091, 1045.9794, 107.0357, 498.2333, 49.3469, 792.439, 255.3585, 34.5294], [1000.678, 0.0, 296.3099, 230.9577, 257.8072, 94.3478, 189.4421, 103.9032, 120.7778, 498.0233, 383.8542, 929.5172, 324.2727, 1152.732, 999.8667, 14.2245, 591.439, 605.6604, 63.8824], [1174.8983, 80.615, 242.495, 90.7887, 183.5422, 149.1826, 191.5474, 149.3226, 178.1111, 1165.6042, 902.7931, 1155.7091, 1033.5567, 348.6429, 898.6444, 26.9592, 535.4146, 817.6792, 603.3235], [781.3729, 107.9646, 180.142, 73.662, 163.6386, 271.8087, 265.5684, 83.0161, 13.8889, 1043.3279, 354.6667, 711.7292, 1482.7586, 1332.7455, 1559.3402, 62.1429, 872.9444, 33.7143, 837.8049, 486.2075, 2367.0], [600.7301, 361.6485, 448.5, 58.6145, 282.7391, 202.4, 85.4839, 1491.7705, 215.0155, 2847.0, 243.6071, 2599.5556, 0.0, 2462.1341, 411.2642, 1088.5882], [761.8475, 19.8319, 375.1148, 352.6197, 666.9036, 139.4522, 234.9895, 134.4194, 276.5556, 134.4574, 908.9583, 1861.2069, 2025.1818, 2970.3814, 1907.9667, 156.2041, 2558.0366, 112.8679, 898.6765], [2112.3898, 77.385, 430.122, 237.3451, 348.2169, 21.287, 299.8211, 203.371, 197.7778, 257.377, 17.7829, 1077.3125, 2135.3448, 1796.1818, 2064.9278, 129.4286, 1575.6556, 157.4286, 2328.3049, 405.9434, 1811.2353], [1929.1017, 92.4912, 348.0316, 362.6831, 522.7952, 731.9565, 465.3263, 314.871, 429.9259, 1642.3607, 192.4264, 1509.5625, 1374.7586, 974.5818, 2110.0309, 277.75, 1204.0222, 79.4898, 1552.878, 321.1509, 1400.7647], [2233.0339, 94.4867, 328.7776, 251.1549, 207.6024, 148.7391, 425.6737, 60.1452, 214.5185, 2221.918, 200.6512, 1612.5208, 1935.5517, 2327.4545, 2741.6598, 2301.0444, 85.5918, 1877.9146, 530.2642, 607.7647], [681.5763, 128.9735, 409.6485, 497.7535, 126.8434, 80.713, 419.3368, 136.4516, 420.6667, 1999.0492, 492.1318, 1820.5, 2159.0, 2390.4545, 2294.8144, 260.4286, 1770.5889, 209.1837, 1513.9024, 662.8491, 2676.9118], [3229.6271, 26.2257, 353.8838, 145.7535, 139.8072, 136.0957, 454.4947, 94.7097, 179.5926, 891.3115, 294.7984, 1820.8542, 3561.7931, 3022.4727, 4178.2887, 70.7857, 1644.6222, 73.7143, 2396.3049, 1459.8868, 807.0588], [2433.0847, 885.2168, 517.0961, 3788.9344, 392.2171, 1636.0625, 3103.8276, 1824.3091, 2725.2268, 2194.7778, 0.0, 2546.2195, 43.4906, 932.3529], [2833.6271, 0.0, 600.7948, 603.3099, 259.2169, 156.8696, 625.6211, 214.7258, 342.4074, 1912.8033, 633.5194, 1571.375, 3942.2414, 2195.0182, 4680.2371, 302.1071, 3417.4444, 106.7143, 2680.5, 2025.2647], [4590.9322, 879.9513, 500.1047, 262.169, 187.8795, 206.6, 234.5579, 2902.377, 971.1705, 3152.375, 4515.1379, 2248.2182, 4642.6598, 83.5357, 3540.8111, 60.5102, 3246.5366, 957.6226, 2121.1176]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

