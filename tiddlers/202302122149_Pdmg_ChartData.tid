created: 20230212214943000
creator: Drevarr
modified: 20230705163519130
modifier: drevarr
tags: ChartData
title: 202302122149_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Legionstorm", "Shade Ilia", "Sizklea", "Smol Gluvs", "Ace Hammers", "Tootsie Pop Bringer", "Ez Mode Mathus", "Minka Bringer", "Rina Of Theros", "Morv\u00e4rth", "Whose Guardian", "Reverve Mk V", "Be\u00eb", "Lord Erin The Wise", "Harry Callahann", "Kosa\u00edr", "Xanvias Tseli"];
const professions = ["Soulbeast", "Soulbeast", "Dragonhunter", "Scourge", "Vindicator", "Scrapper", "Scourge", "Scrapper", "Scourge", "Scourge", "Willbender", "Herald", "Scourge", "Weaver", "Scrapper", "Scrapper", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 288.9551, 0.0, 575.9394, 187.61, 201.9333, 1285.5094, 794.6016], [1414.1169, 289.1923, 234.8065, 1326.1515, 105.74], [762.2338, 338.5481, 660.7455, 753.8485, 1224.59], [761.7403, 420.3301, 815.8638, 0.0, 539.84, 60.7, 121.3396, 661.2439], [1144.4156, 463.9263, 790.4516, 0.0, 1054.4, 47.4, 281.434, 944.5528], [248.2083, 1324.5914, 0.0, 1567.97, 0.0, 977.7736, 1861.0081], [445.6154, 1484.043, 26.2727, 1225.59, 847.7667, 173.3019, 1439.6667], [1699.1558, 887.9551, 1106.0573, 698.6364, 98.1333, 320.8868, 1259.9106], [1720.039, 751.9423, 1469.6738, 0.0, 696.67, 155.6667, 112.0566, 1555.5854], [1485.5195, 731.0417, 1551.1398, 677.6364, 736.38, 990.9667, 559.3585, 1468.7805], [1328.6753, 596.5224, 1835.2401, 0.0, 1864.49, 341.3667, 148.0, 1464.0894], [1820.3377, 999.5513, 1488.4229, 0.0, 560.05, 0.0, 992.6415, 2264.6504], [1530.6234, 834.3365, 2313.5054, 127.1212, 2238.79, 271.4667], [1629.3117, 818.2917, 2439.8172, 2037.7879, 1087.83, 1333.9, 2698.4906, 2440.6911], [3524.7143, 1507.5737, 2065.0573, 2682.7576, 2461.68, 837.8333, 1741.3585, 2049.1057], [1711.9936, 3532.0, 221.5455, 2713.35, 440.4333, 971.7547, 2951.0], [2711.2078, 1714.234, 4925.5914, 648.697, 2935.62, 403.6333, 396.4906, 3630.8699]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

