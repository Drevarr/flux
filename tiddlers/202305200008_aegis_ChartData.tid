created: 20230520000848000
creator: Drevarr
modified: 20230705163530618
modifier: drevarr
tags: ChartData
title: 202305200008_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Air One Com", "Drevarr Moonwillow", "Zaylen Harker", "Tika Fiery", "Spreadflamesoflight", "Aronorf Xideliesi", "Solus Sanctus", "Koralia Danai", "Bella Sassy", "Jupi Jupi Jupi"];
const professions = ["Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.3168, 297.8325, 0.0, 116.0174, 0.0, 7.9908, 0.0, 0.0, 31.768, 0.0, 37.7859, 30.2544, 0.0, 0.0, 0.0, 5.0039, 9.4683, 0.0, 0.0, 34.5435, 0.0, 12.9198, 0.0, 19.3973, 107.4713, 0.0], [36.4905, 248.6421, 22.6409, 102.0545, 0.0, 19.8827, 0.0, 2.9068, 62.2318, 7.048, 72.9722, 69.5376, 20.7514, 28.1299, 35.3205, 41.9244, 74.9083, 7.5294, 0.0, 0.0, 1.2707, 12.8159, 68.9937, 0.0284, 12.7512, 7.2122, 10.3307], [103.8429, 557.6193, 23.7976, 365.9885, 17.5757, 96.2676, 6.7452, 24.0146, 93.4648, 0.0, 165.348, 116.2656, 105.7949, 57.673, 10.3165, 23.7346, 170.0937], [48.8925, 476.1477, 43.247, 252.2414, 5.0778, 67.3244, 12.0516, 107.0597, 25.381, 102.6241, 21.9102, 82.8432, 232.8043, 20.5565, 23.9935, 93.248, 173.7805, 23.5611, 0.0, 0.0, 0.0, 0.0, 95.8001, 27.4435, 139.1813, 29.8952, 1.1012], [132.2244, 181.3896, 19.8992, 203.6549, 0.0, 75.3782, 0.0, 47.7189, 66.7729, 62.9455, 95.436, 99.9586, 27.7546, 8.507, 127.4637, 221.457, 115.6482, 5.6133, 0.0, 20.365, 150.2895, 276.0625, 96.3927, 67.62, 0.0, 11.327], [19.1754, 353.1717, 2.0992, 200.4763, 2.1458, 170.8278, 0.8448, 118.7316, 99.1162, 121.0793, 366.3466, 307.3752, 188.0592, 15.5443, 0.0, 29.888, 299.633, 119.0745, 49.7542, 0.0, 111.723, 82.0345, 243.0159, 42.2862, 175.1165, 122.6749, 62.0365], [65.1105, 782.0505, 26.518, 223.2938, 11.2694, 88.1509, 41.1048, 74.593, 90.3883, 72.7616, 215.296, 208.4544, 353.6069, 8.9866, 11.421, 137.8772, 240.3935, 110.6145, 15.5358, 19.6531, 64.6061, 36.0708, 118.9152, 42.4565, 234.4675, 30.6743, 86.2638], [97.6419, 841.2327, 20.3062, 338.7437, 6.6339, 138.2352, 11.8272, 148.8282, 53.0358, 125.2348, 246.3045, 283.8528, 395.7581, 38.8387, 9.917, 125.2322, 197.5768, 79.4817, 0.0, 0.0, 87.0109, 36.7774, 176.0437, 46.1317, 246.2141, 19.01, 50.0278], [58.8141, 697.1202, 29.2169, 390.2818, 46.1425, 109.0404, 14.4936, 146.1897, 108.6466, 120.4274, 374.6094, 307.9296, 568.8096, 127.3574, 52.076, 125.2322, 168.9206, 125.7579, 59.3649, 52.7349, 69.058, 326.8629, 17.7659, 201.8554, 117.1544, 108.6032], [161.6553, 856.989, 65.588, 487.4549, 26.3063, 165.6684, 47.784, 293.229, 92.9632, 166.2599, 188.1867, 431.64, 437.6314, 81.8726, 0.0, 316.1235, 328.6244, 216.4068, 0.0, 0.0, 90.823, 147.1738, 252.6838, 164.5047, 338.4091, 62.5283, 227.7994]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

