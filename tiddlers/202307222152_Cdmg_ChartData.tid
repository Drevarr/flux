created: 20230722215203000
creator: Drevarr
tags: ChartData
title: 202307222152_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Crusader Siolith", "Skylar Shadowmoon", "Mistwalker Cael", "Yummy Kiwi", "Drevarr Moonwillow", "Bella Sassy", "Nina Chan Fanboy", "Sirius Quack", "Glorious Gluvs", "Vee U", "Lord Erin The Wise", "Kosa\u00efr", "Sub Train", "Aronorf Xideliesi", "Belvyn Brightblade", "Keypek The Drunk", "Cedryn X", "Daphne Agla\u00e9", "Sygaldry Verdandi", "Edgy Nekrodancer", "Jimbo The Pleb", "Name Is What", "Johosh The Mighty", "Be\u00eb", "Charr Surethang", "Xanvias Einzbern"];
const professions = ["Firebrand", "Scrapper", "Vindicator", "Firebrand", "Scrapper", "Firebrand", "Druid", "Reaper", "Berserker", "Tempest", "Weaver", "Weaver", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Berserker", "Scourge", "Firebrand", "Harbinger", "Berserker", "Scourge", "Berserker", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 29.2122, 0.0, 0.0, 3.3103, 0.0, 0.0, 0.0, 5.0, 0.0, 17.4571, 0.0, 1.3171, 0.0, 0.0, 9.1379, 3.7847, 0.0, 0.5536], [41.5714, 22.6267, 0.0, 30.165, 12.8161, 5.9545, 0.0, 1.0185, 17.7706], [0.0, 21.6719, 0.0, 4.6019, 14.3678, 30.7121, 0.9275, 0.0, 7.945, 0.0, 9.4857, 8.4367, 1.8171, 0.7101, 10.1633, 54.6552, 12.1111, 6.2632, 11.4732], [49.1786, 23.9705, 0.0, 0.6505, 1.7586, 34.1818, 0.0, 0.0, 13.8991, 1.7595, 0.2805, 21.7246, 10.9388, 17.1034, 13.3333, 5.8684, 6.5], [59.0714, 24.4479, 0.0, 6.6311, 18.9195, 13.697, 0.1884, 0.0, 12.3853, 0.0, 0.0, 4.4241, 5.4024, 15.7536, 0.0, 18.9655, 14.4444, 8.9211, 6.7946], [49.3929, 21.1257, 0.0, 17.8155, 20.908, 28.0758, 0.0, 0.0, 17.3394, 0.4079, 4.5714, 14.3734, 2.7927, 0.0, 2.1429, 42.8621, 23.2639, 0.0, 13.2411], [37.4558, 0.0, 6.6214, 30.954, 44.4091, 1.1449, 0.0, 3.0459, 0.0, 50.5714, 5.2089, 3.6585, 0.0, 2.5714], [0.0, 28.4067, 0.0, 18.2621, 5.4483, 11.6818, 0.0, 0.0, 14.055, 0.0, 13.0571, 2.8987, 47.1585, 23.7826, 11.9592, 39.4138, 8.7986, 0.0, 10.6518], [5.6786, 14.2141, 0.0, 3.5631, 3.1609, 3.7576, 0.0, 0.0, 67.4954, 0.0, 77.5143, 48.4241, 1.6463, 0.0, 0.0, 0.0, 23.4583, 0.8158, 3.0446], [0.0, 29.5599, 0.0, 41.7476, 18.5632, 145.5606, 0.0, 21.1743, 0.0, 5.1143, 0.0, 6.5732, 3.8551, 28.5714, 24.7931, 1.0903], [0.0, 0.0, 51.9083, 0.0, 34.0857, 35.9494, 66.4268, 11.4348, 7.4286, 133.2414, 47.4931, 0.0, 85.4643], [35.1212, 3.2464, 0.0, 46.1376, 8.6053, 14.9714, 84.038, 8.1341, 11.5942, 10.6327, 59.4483, 54.7986, 0.0, 109.3839], [53.25, 41.2927, 1.1739, 36.9515, 18.5287, 20.4697, 0.0, 0.0, 24.0183, 0.0, 22.2, 7.6582, 7.622, 3.7536, 19.449, 47.7241, 2.9861, 2.7632, 92.9911], [36.8214, 33.0157, 15.3301, 0.5402, 43.4091, 0.0, 0.0, 40.422, 0.0, 152.5429, 8.8101, 8.0976, 37.6957, 2.4286, 330.9655, 13.4236, 0.0, 11.7768], [26.1071, 55.7839, 0.0, 46.6408, 19.7011, 162.3333, 2.6087, 0.0, 46.4587], [78.6786, 49.9725, 0.0, 27.8447, 54.7011, 29.8485, 12.8261, 20.0556, 42.5413, 0.0, 23.7714, 7.1013, 16.9878, 7.3333, 19.1837, 27.8276, 15.1319, 1.7105, 37.8214], [64.75, 21.5383, 9.7184, 47.3793, 54.803, 0.0, 0.0, 213.9725, 9.9051, 5.878, 5.4638, 8.9388, 132.2069, 31.1597, 2.0789, 45.0625], [15.1429, 62.4872, 0.0, 30.165, 30.092, 10.9848, 0.0, 0.0, 74.1284, 31.0949, 38.7073, 35.6957, 116.3469, 13.069, 47.2639, 0.0, 6.5357], [7.25, 78.5226, 0.0, 55.5534, 22.4253, 1.8333, 6.3043, 0.0, 70.156, 0.0, 60.9143, 6.0127, 72.561, 6.5362, 0.0, 29.2069, 33.1944, 0.0, 43.3929], [515.6092, 80.0, 9.029, 3.537, 57.0, 0.0, 279.6286, 78.5759, 140.939, 42.971, 77.4082, 0.7241, 39.0417], [41.3214, 98.831, 0.0, 74.1165, 63.8506, 34.4242, 0.0, 0.0, 51.7706, 0.0, 0.0, 73.6266, 23.9268, 38.5072, 82.6327, 308.7241, 47.0625, 2.9737, 9.2679], [76.8571, 55.9391, 119.8252, 121.7816, 204.7273, 16.5797, 0.0, 127.1468, 0.0, 56.8, 20.2468, 5.2683, 35.4783, 106.7143, 408.0, 94.9861, 4.2895, 85.8304], [33.4643, 112.9725, 0.0, 70.0291, 78.5057, 56.9545, 3.2029, 0.0, 328.7615, 0.0, 42.6857, 108.1076, 26.2561, 0.0, 73.8367], [13.9643, 129.0766, 0.0, 181.699, 65.8391, 125.3788, 2.3333, 7.4444, 190.1743, 0.0, 82.2857, 8.3481, 199.5488, 92.6667, 164.898, 81.5172, 149.2847, 2.3421, 36.9286], [172.9643, 136.9627, 0.0, 104.8932, 25.4828, 237.8182, 0.0, 0.0, 352.5138, 0.0, 266.8, 204.443], [179.7857, 86.387, 0.0, 111.4563, 40.0115, 89.5, 15.1594, 0.0, 342.4495, 0.0, 55.5429, 44.8101, 92.5488, 43.9275, 140.8367, 273.8621, 364.4236, 11.9211, 743.8125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

