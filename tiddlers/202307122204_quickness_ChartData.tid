created: 20230712220412000
creator: Drevarr
tags: ChartData
title: 202307122204_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Newtype Khan", "Arcanophage Farra", "Sub Train", "Crusader Siolith", "Sygaldry Verdandi", "Tika Fiery", "Solus Sanctus", "Koralia Danai"];
const professions = ["Firebrand", "Spellbreaker", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[54.3218, 17.316, 23.7918, 174.3894, 107.4733, 37.9348, 72.8992, 65.5625], [58.637, 0.0, 25.4334, 144.9063, 67.5147, 35.1502, 51.1511, 46.397, 39.2498, 23.2277, 79.9542, 71.9452, 0.0, 0.0, 24.0674, 0.0, 20.3229, 30.4922, 74.7684, 113.5282, 39.2251, 97.2031, 156.7335], [118.226, 30.3962, 13.5774, 40.7745, 101.7456, 28.7456, 48.8665, 32.3708, 111.6245, 96.4251, 140.1714, 92.8485, 0.0, 45.1669, 28.7599, 15.1483, 14.8824, 31.3453, 83.4759, 52.6671, 8.8532, 93.8275, 187.243], [48.3565, 0.0, 15.0936, 309.8862, 133.3156, 57.0843, 87.1111, 94.6142, 125.6094, 39.0429, 204.5682, 101.7315, 9.1806, 42.446, 43.7976, 27.287, 20.9898, 55.0125, 120.5699, 137.5474, 0.0, 64.0727], [80.6577, 21.019, 18.354, 238.374, 109.4577, 39.4556, 55.6016, 88.5469, 71.0987, 84.5716, 185.2182, 91.6148, 8.0652, 64.5481, 106.6145, 19.0106, 35.4335, 53.719, 108.3794, 101.331, 10.1825, 98.1407, 202.6185], [129.0776, 27.5458, 15.5382, 258.6567, 137.104, 38.7702, 80.376, 121.5244, 95.8021, 46.9346, 217.881, 85.1287, 51.48, 64.297, 81.5517, 46.9498, 23.0432, 133.9195, 21.4434, 103.2665, 184.989], [97.3476, 42.1445, 23.8488, 308.8407, 128.1742, 62.5036, 83.076, 95.7563, 83.3483, 58.0851, 186.6888, 106.2082, 21.45, 75.1387, 68.8248, 50.578, 37.6974, 75.68, 96.8274, 171.4495, 0.0, 92.8899, 198.513], [143.5465, 31.3553, 15.5154, 413.2861, 167.3661, 48.5591, 102.9846, 69.5955, 90.4939, 79.1721, 259.677, 104.8335, 32.8614, 72.3341, 89.586, 35.1287, 30.7476, 70.0384, 117.8415, 130.9172, 9.9066, 163.4011, 210.0245], [207.6411, 55.944, 19.7676, 306.9588, 168.5838, 72.4853, 103.8153, 126.3426, 121.9346, 92.8467, 222.7572, 95.0693, 32.032, 47.553, 71.0644, 36.366, 27.3253, 121.6659, 140.6552, 177.8922, 36.4162, 187.53, 221.053]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

