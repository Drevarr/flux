created: 20230731221126000
creator: Drevarr
tags: ChartData
title: 202307312211_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Primal Clone", "Rayla Shadowmoon", "Aira Draugr", "Cat Wigglebooty", "Audens Silvermarker", "Koralia Danai", "Marshall R", "Klenga", "Etchery Howls", "Oo Dads Mad", "Kisumaiasu", "Arriasa", "Cedryn X", "Rozaalyna", "Venomina The Sly", "Revitiel", "Tegan Parker", "Ex Warcraft", "Bella Sassy", "Crusader Siolith", "Black Raspberry Pie", "Glorious Gluvs", "Tootsie Pop Rocks", "My Birthday Girl", "Bee Nemesis", "Drevarr Moonwillow", "Xanvias Einzbern", "High Sorcer Baradun", "Ryvalia Fazebringer", "Sub Train", "Tribal S", "Blanco Padre Guard", "Name Is What", "Solus Sanctus", "Mistwalker Cael", "Sygaldry Verdandi", "Newtype Khan", "Keypek The Drunk", "Grasszanine", "Zaedy Zae", "Be\u00eb", "Mort\u00e4rion", "Daphne Agla\u00e9", "Arcanophage Farra", "Kary\u00edna", "Legacy Of Mathus", "Mike The Archmagus", "Mister Jekyll", "Eibh\u00ebar"];
const professions = ["Firebrand", "Chronomancer", "Herald", "Herald", "Scrapper", "Firebrand", "Firebrand", "Herald", "Firebrand", "Druid", "Berserker", "Scourge", "Druid", "Berserker", "Scourge", "Druid", "Vindicator", "Tempest", "Tempest", "Firebrand", "Firebrand", "Chronomancer", "Berserker", "Scrapper", "Scrapper", "Berserker", "Scrapper", "Berserker", "Tempest", "Chronomancer", "Firebrand", "Druid", "Firebrand", "Scourge", "Firebrand", "Vindicator", "Firebrand", "Spellbreaker", "Scrapper", "Spellbreaker", "Druid", "Scourge", "Scrapper", "Scourge", "Spellbreaker", "Vindicator", "Berserker", "Weaver", "Scourge", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3016, 0.0956, 0.2814, 0.0, 0.0], [0.1905, 0.0599, 0.2186, 0.0, 0.0, 0.0667, 0.0, 0.0863, 0.0143, 0.0, 0.0444, 0.2269, 0.075], [0.3651, 0.2772, 0.0338], [0.3016, 0.2207, 0.1576, 0.0, 0.0], [0.4603, 0.1546, 0.2026, 0.0, 0.025, 0.0, 0.1259, 0.1429, 0.0, 0.0, 0.1806, 0.075], [0.4603, 0.311, 0.0547, 0.0, 0.0, 0.0917, 0.0, 0.1115, 0.0857], [0.2381, 0.2372, 0.172, 0.0, 0.05, 0.0, 0.0791, 0.0286, 0.0, 0.0, 0.1388, 0.0], [0.4444, 0.2789, 0.2219, 0.0, 0.1083], [0.254, 0.2685, 0.119, 0.0, 0.1333, 0.0, 0.0504, 0.0143, 0.0714, 0.0, 0.0, 0.1564, 0.025, 0.0], [0.0476, 0.2328, 0.1961, 0.0278, 0.0917, 0.0189, 0.0899, 0.0286, 0.0714, 0.0444, 0.0392, 0.1894, 0.025], [0.1746, 0.305, 0.2797, 0.0], [0.1746, 0.1633, 0.299, 0.0, 0.1667, 0.05, 0.0189, 0.1403, 0.0429, 0.0179, 0.0, 0.0, 0.2291, 0.05, 0.0], [0.1746, 0.3015, 0.1527, 0.0667, 0.0, 0.0791, 0.0143, 0.0, 0.0222, 0.0392, 0.196, 0.0], [0.2857, 0.3119, 0.2508, 0.0, 0.0, 0.05, 0.0, 0.0863, 0.2, 0.0], [0.381, 0.2606, 0.2186, 0.0, 0.0, 0.05, 0.0755, 0.0143, 0.0, 0.0, 0.0, 0.2004, 0.05, 0.0], [0.0952, 0.2728, 0.2476, 0.0, 0.0278, 0.075, 0.1151, 0.0429, 0.0, 0.0, 0.0, 0.152, 0.1], [0.3175, 0.2945, 0.1174, 0.0, 0.0833, 0.0, 0.1547, 0.0, 0.0, 0.0, 0.0, 0.2357, 0.025, 0.0], [0.2381, 0.2911, 0.1833, 0.0, 0.125, 0.1259, 0.1286, 0.0179, 0.1762, 0.025, 0.0], [0.2222, 0.3632, 0.291], [0.3651, 0.3023, 0.2412, 0.0, 0.05, 0.0, 0.0791, 0.0571, 0.0357, 0.0, 0.0, 0.1278, 0.025], [0.0794, 0.2867, 0.2524, 0.0583, 0.0, 0.1259, 0.0143, 0.0, 0.0, 0.0, 0.1828, 0.05, 0.0], [0.1429, 0.2737, 0.2717, 0.0, 0.0333, 0.0, 0.0863, 0.1286, 0.0, 0.0, 0.0, 0.1982, 0.1], [0.2698, 0.2815, 0.1656, 0.0, 0.0833, 0.1417, 0.0, 0.2374, 0.1857, 0.0536, 0.0, 0.0, 0.1784, 0.025, 0.0], [0.3651, 0.2763, 0.2749, 0.0, 0.0, 0.0667, 0.1007, 0.0714, 0.0536, 0.0, 0.0, 0.1674, 0.075], [0.3492, 0.3136, 0.2122, 0.0, 0.0278, 0.1583, 0.1187, 0.1429, 0.0536, 0.0444, 0.0, 0.1278, 0.0, 0.0], [0.0952, 0.2502, 0.3215, 0.0, 0.125, 0.0, 0.2194, 0.0, 0.0357, 0.0, 0.0, 0.163, 0.1, 0.0], [0.3651, 0.3119, 0.2154, 0.0, 0.0556, 0.05, 0.0755, 0.1259, 0.0143, 0.0, 0.0889, 0.0, 0.1784, 0.05, 0.0], [0.2381, 0.3023, 0.2122, 0.0, 0.1167, 0.0, 0.1583, 0.0571, 0.0357, 0.0, 0.1982, 0.075], [0.3175, 0.3771, 0.0514, 0.0, 0.1, 0.1691, 0.0429, 0.0, 0.2313, 0.025, 0.0], [0.2222, 0.3093, 0.2508, 0.0, 0.0278, 0.1583, 0.0566, 0.0863, 0.0714, 0.0, 0.0, 0.0, 0.1784, 0.05], [0.254, 0.311, 0.2524, 0.0, 0.0833, 0.0, 0.1259, 0.0143, 0.0, 0.0, 0.0392, 0.1806, 0.0, 0.0], [0.254, 0.2815, 0.2428, 0.05, 0.0189, 0.2302, 0.0429, 0.0357, 0.0, 0.207, 0.025], [0.3968, 0.3032, 0.2379, 0.0, 0.0, 0.0667, 0.0, 0.1691, 0.0143, 0.0, 0.0, 0.0, 0.196, 0.025, 0.0], [0.5079, 0.3006, 0.2203, 0.0, 0.0417, 0.0, 0.1871, 0.1, 0.0, 0.0222, 0.0, 0.196, 0.0, 0.0], [0.127, 0.3371, 0.2251, 0.0, 0.05, 0.0377, 0.1223, 0.0, 0.0, 0.0, 0.2247, 0.125, 0.0], [0.2381, 0.318, 0.2235, 0.0, 0.0278, 0.1167, 0.0, 0.0252, 0.0571, 0.1071, 0.0444, 0.0, 0.2885, 0.05], [0.0794, 0.3023, 0.2942, 0.0, 0.0, 0.1167, 0.0, 0.1547, 0.0, 0.0, 0.0, 0.0, 0.2159, 0.0, 0.1818], [0.2222, 0.344, 0.1849, 0.0, 0.0556, 0.075, 0.0189, 0.205, 0.0429, 0.0, 0.0, 0.0392, 0.2115, 0.1, 0.0], [0.2698, 0.3249, 0.2701, 0.0, 0.0278, 0.1, 0.0189, 0.1367, 0.0571, 0.1607, 0.0222, 0.0, 0.1542, 0.1, 0.0], [0.127, 0.3284, 0.2605, 0.0, 0.1111, 0.1333, 0.0189, 0.1367, 0.1286, 0.0357, 0.0, 0.0, 0.1806, 0.0], [0.3175, 0.3658, 0.1945, 0.0, 0.075, 0.0, 0.1115, 0.0429, 0.0357, 0.0, 0.0196, 0.2093, 0.075, 0.0], [0.254, 0.3154, 0.201, 0.0, 0.1333, 0.0, 0.1583, 0.1429, 0.0357, 0.0444, 0.0196, 0.2709, 0.175, 0.0], [0.254, 0.3362, 0.4148, 0.0, 0.1083, 0.1259, 0.1571, 0.0], [0.6508, 0.3023, 0.2942, 0.0, 0.1083, 0.1043, 0.1, 0.0357, 0.2181], [0.3651, 0.3215, 0.2363, 0.0, 0.175, 0.0566, 0.1942, 0.2, 0.0, 0.0, 0.0, 0.1938, 0.175, 0.0], [0.4762, 0.3475, 0.2203, 0.0, 0.0, 0.1, 0.0189, 0.1691, 0.0571, 0.0179, 0.0, 0.0, 0.2907, 0.075, 0.0], [0.2222, 0.4049, 0.336, 0.0, 0.0, 0.075, 0.0, 0.1403, 0.0857, 0.0, 0.0222, 0.0, 0.2423, 0.125, 0.0], [0.3651, 0.4309, 0.2412, 0.0, 0.0556, 0.0917, 0.0, 0.1187, 0.0286, 0.0, 0.0222, 0.3238, 0.05, 0.0], [0.2698, 0.3779, 0.3923, 0.0833, 0.0, 0.1763, 0.0429, 0.0536, 0.3612, 0.15, 0.0], [0.4127, 0.4248, 0.2428, 0.0, 0.0278, 0.1667, 0.0377, 0.1763, 0.0571, 0.0, 0.0, 0.0, 0.4141, 0.15, 0.0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

