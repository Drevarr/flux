created: 20230709000753000
creator: Drevarr
tags: ChartData
title: 202307090007_dmg_taken_ChartData
type: text/vnd.tiddlywiki


const names = ["Whip \u00d1 Sl\u00e0pper", "Zayde Sunsabre", "Jmbrage Rev", "Aisling Vexwind", "Perpetual Hope", "Danaeryn", "Blaze All Might", "Jerryatric Reflexes", "Kittendo", "Scythe User", "Boof Floof", "Dalveirric", "K\u00e2 \u00d4tik R\u00e6j", "Lucky Leipreach\u00e1n", "Artakama Nahid", "Lost Uber Driver", "Sonia Truestrike", "Jerryatric Reflexes", "Zaedy Zae", "Jello Jawn", "Tru Master", "Greg The Knight", "Chainer Valentine", "Luke The Knight", "Naithan Stone", "Porlen", "Ggclaudx", "Miphest\u00f6", "Valaria Emberstorm", "K\u00e2 Otik", "Amiti\u00e9l", "Hayuf", "Prolly Getn Carried", "Hayuf", "Siofra Sen", "Executorj", "Brutal Araden", "Gwydianna", "Enginart", "Heavenm", "Magister Boombottom", "Zerille Maede", "Constantine Elvis", "Thalia Mavren", "Verna Mae", "Thats Not Nice", "Artofliving", "Bella Sassy", "Aidoneusz", "Carllgenii"];
const professions = ["Tempest", "Spellbreaker", "Vindicator", "Tempest", "Tempest", "Tempest", "Firebrand", "Berserker", "Soulbeast", "Reaper", "Firebrand", "Soulbeast", "Spellbreaker", "Scrapper", "Tempest", "Herald", "Firebrand", "Spellbreaker", "Druid", "Virtuoso", "Scourge", "Firebrand", "Soulbeast", "Berserker", "Tempest", "Ranger", "Holosmith", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Specter", "Dragonhunter", "Necromancer", "Reaper", "Renegade", "Virtuoso", "Mechanist", "Guardian", "Tempest", "Soulbeast", "Vindicator", "Firebrand", "Renegade", "Firebrand", "Vindicator", "Firebrand", "Firebrand", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Damage Taken per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[150.4793, 41.641, 117.8095, 2111.2368, 504.6699, 471.0635, 113.1429, 956.2143, 175.5714, 0.0, 307.8197, 838.7736], [1030.586, 0.0, 4465.4091, 811.7756, 2517.0, 468.7241, 5665.2353, 5065.7778], [279.7815, 102.7556, 0.0, 1948.8667, 539.6539, 617.6828, 103.5882, 3221.2826], [117.5263, 305.4444, 1247.1625, 457.5704, 404.9873, 13.931, 1495.4643, 221.0244, 315.0984, 5353.9231, 70.2143], [85.3445, 107.5882, 1451.0, 1158.8243, 421.0312, 254.631, 52.5833, 1918.1951, 147.3523, 65.2143, 361.541, 144.8553, 3876.5652], [61.3109, 24.8049, 38.7143, 1778.2766, 368.3249, 635.4192, 35.5, 1801.3158, 67.7488, 23.2917, 158.7049, 1416.0, 301.5625], [547.6716, 599.7711, 32.2812, 783.3253, 291.8894, 0.0, 171.2459, 0.0, 2885.0769], [875.8969, 24.8235, 1313.9882, 278.0192, 139.6071, 726.7869, 1468.8966, 1130.0588], [1452.7436, 101.4348, 940.88, 340.8325, 59.0, 431.4262, 3452.2174], [350.0167, 145.3421, 689.5238, 2080.6711, 733.0947], [155.0661, 14.9565, 117.8095, 335.0267, 358.634, 308.3571, 2.2353, 2044.2955, 252.6535, 283.7705, 264.3421, 1817.5294], [118.6017, 158.25, 2009.125, 394.0417, 8462.2857, 1740.1429, 568.0, 6567.375], [496.6024, 43.6571, 3341.1429, 294.2427, 306.7755, 2369.0714, 4032.0], [90.339, 270.9, 1185.5789, 1629.5063, 709.9424], [73.6053, 0.1282, 4103.2143, 272.7794, 499.4874, 0.0, 1081.6429, 126.3088, 107.2083, 450.4074, 80.2083], [656.8413, 82.6111, 1323.7033, 329.8942, 48.8, 136.9545, 3228.4815], [787.901, 2145.25, 602.8834, 0.0, 188.26, 71.125, 3275.7931], [166.9841, 358.0244, 213.2632, 1688.0312, 696.3053], [64.5124, 0.0732, 150.0526, 5296.05, 680.6029], [23.5917, 137.1346, 154.9545, 1254.8039, 559.1816], [346.5962, 4320.95, 0.0, 1443.3205, 170.8571, 3563.5833], [424.9751, 41.3636, 1424.5663, 1583.6203, 146.9565, 208.7541], [26.76, 228.7391, 1398.4524, 289.4467, 545.5094, 8120.625, 524.2558], [1025.8, 11.3571, 990.2222, 268.466, 437.2059, 286.4098, 4881.7059, 245.4074], [127.5333, 29.3571, 294.5833, 813.8101, 496.1833], [640.129, 386.8214, 803.3333, 300.9661, 73.92, 173.8], [445.2313, 26.2222, 1147.0875, 233.2657, 0.0, 389.541, 901.8679], [474.4939, 621.3125], [61.3223, 193.9524, 1250.5231, 399.2406], [90.1513, 72.3559, 479.103], [120.8214, 0.0588, 0.0, 1708.3621, 808.1124], [62.405, 98.0, 77.4706, 1165.3582, 207.6983], [186.5254, 128.6809, 176.6667, 2880.4186], [812.0175], [1584.8182, 221.7727, 550.9508], [78.1111, 465.6557, 8629.8182], [2307.0217, 0.0, 265.6557], [496.4356, 1552.6154], [1752.5588, 0.0, 656.8689], [282.4433, 0.0, 511.0164], [31.8571, 0.0714, 0.0, 947.5231], [114.2308, 383.551, 37.0], [153.5882, 412.5106], [161.1261], [136.0254], [126.6777], [92.9487], [77.7288], [25.843], [66.3125]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

