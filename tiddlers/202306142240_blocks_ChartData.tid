created: 20230614224052000
creator: Drevarr
modified: 20230705163535349
modifier: drevarr
tags: ChartData
title: 202306142240_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Rina Of Theros", "Morton Saltbringer", "Elonith Requiem", "Johosh The Mighty", "Permanent Dawn", "Cedryn X", "Smol Gluvs", "Venomina The Siren", "Zayde Sunsabre", "Mistwalker Cael", "Be\u00eb", "Xanvias Einzbern", "Artakama Nahid", "Shaca Booey", "Sakis Ranger", "Crusader Siolith", "Koralia Danai", "Arriasa", "Tika Fiery", "Momomeko", "Solus Sanctus", "Ryvalia Fazebringer", "Black Raspberry Pie"];
const professions = ["Scourge", "Chronomancer", "Scourge", "Spellbreaker", "Weaver", "Berserker", "Scourge", "Tempest", "Spellbreaker", "Vindicator", "Scourge", "Berserker", "Tempest", "Berserker", "Druid", "Firebrand", "Firebrand", "Druid", "Firebrand", "Chronomancer", "Firebrand", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 3, 2, 8, 1], [6, 2, 6, 2], [13, 4], [17, 2], [0, 2, 4, 6, 1, 2, 3, 4, 0], [10, 6, 8, 0], [2, 3, 0, 20, 10], [0, 3, 7, 14, 5, 5, 3, 3, 0], [5, 5, 9, 16, 8, 0], [7, 3, 8, 1, 7, 19, 0], [5, 5, 7, 32], [6, 5, 6, 12, 8, 10, 2], [3, 4, 5, 14, 4, 8, 6, 10, 0], [2, 4, 5, 18, 6, 6, 8, 8, 2], [5, 4, 7, 12, 10, 6, 6, 11], [1, 2, 4, 23, 6, 9, 11, 7, 5], [8, 5, 7, 15, 7, 5, 7, 17, 2], [4, 4, 10, 28, 6, 9, 11, 10, 1], [4, 5, 7, 24, 7, 10, 13, 11, 4], [2, 5, 6, 27, 13, 13, 4, 28, 5], [8, 3, 9, 29, 8, 14, 12, 17, 6], [6, 3, 16, 40, 9, 5, 14, 12, 4], [7, 4, 3, 46, 9, 18, 18, 28, 3]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

