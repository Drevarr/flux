created: 20230821080816000
creator: Drevarr
tags: ChartData
title: 202308210808_resistance_ChartData
type: text/vnd.tiddlywiki


const names = ["Xuerreux", "Govinda Ektar", "Gestern Yesteryear", "Chocolate Teapot", "Sapir Yong", "Darks Na", "Crabbedmermaid", "Hawaiian Supreme", "Mom Tapper"];
const professions = ["Berserker", "Vindicator", "Firebrand", "Chronomancer", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Resistance per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 55.9056, 48.1328, 0.0, 0.0, 0.0, 0.0, 0.0, 23.7006, 0.0, 0.0, 0.0, 22.0286, 0.0, 0.0, 0.0, 22.6044], [0.0, 4.5504, 70.68, 15.3028, 4.5501, 4.6294, 14.086, 1.1466, 4.6648, 4.5263, 0.0, 2.2972, 12.6243, 0.0, 13.8432, 39.9106], [0.0, 19.3435, 0.0, 0.0, 0.0, 9.4136, 18.8784, 0.0, 0.0, 0.0, 19.442, 0.0, 0.0, 0.0, 0.0, 15.0885, 16.1348, 0.0, 0.0, 0.0, 0.0, 95.4684, 19.3718, 19.3644, 0.0, 0.0, 0.0, 38.7195, 0.0, 16.2288, 0.0, 19.3771], [5.0131, 7.2846, 13.5522, 0.0, 13.5659, 91.7472, 14.606, 0.0, 21.2879, 1.8333, 5.5395, 7.2349, 0.0, 21.9184, 24.5366, 64.5225, 0.0, 0.0, 7.3948, 83.214, 26.3731, 23.8194], [12.3736, 33.1145, 18.4937, 6.5661, 6.3137, 90.744, 40.1464, 14.1071, 23.5616, 35.7673, 4.7183, 20.5762, 9.8597, 53.387, 60.7772, 68.2176, 0.0], [30.9053, 12.5136, 82.992, 59.8712, 4.7372, 6.4173, 31.8184, 0.0, 7.2055, 28.0546, 12.6641, 23.2492, 59.2724, 84.2061, 1.608, 0.0, 4.7749, 199.8792, 56.6304, 46.7082], [15.9949, 6.5712, 14.7064, 6.5331, 6.5629, 5.7559, 13.0478, 22.8578, 40.4206, 59.264, 2.478, 0.0, 4.856, 193.6692, 58.5725, 27.4626, 3.249, 34.2922, 96.9606, 16.3184, 39.3008, 42.2429, 109.6752], [152.0244, 40.5324, 242.2521, 112.8064, 195.552, 111.7994, 341.4998], [27.5594, 25.7951, 305.52, 44.0056, 34.4999, 27.3096, 6.804, 31.6659, 1.6929, 6.8486, 11.605, 53.7548, 84.2061, 0.0, 0.0, 21.8522, 107.7228, 60.8573, 60.5286, 0.0, 0.0, 5.012, 54.6555, 25.536, 48.9328, 57.2765, 190.8979]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

