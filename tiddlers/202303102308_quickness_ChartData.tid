created: 20230310230833000
creator: Drevarr
modified: 20230705163521649
modifier: drevarr
tags: ChartData
title: 202303102308_quickness_ChartData
type: text/vnd.tiddlywiki


const names = ["R\u00fana Bierdna", "K\u00f4sair", "Riann Swordbreak", "Arcanophage Farra", "K\u00f4sair", "Aronorf Xideliesi"];
const professions = ["Spellbreaker", "Berserker", "Spellbreaker", "Spellbreaker", "Spellbreaker", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Quickness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[12.672, 32.0229, 15.9896, 32.039, 6.3388, 142.5875, 53.7351, 7.3177, 0.0, 6.9483, 7.3242, 7.0838, 15.2788, 7.9923, 0.0, 0.0, 7.9411], [0.0, 0.0, 0.0, 0.0, 0.0, 362.1875], [22.1265, 59.2641, 22.4664, 41.1355, 0.0, 400.3125, 24.0975, 49.6687, 20.3021, 23.316, 13.7917, 10.915, 23.4624, 12.2078, 12.0555, 0.0, 7.2967, 0.0, 0.0, 10.7163, 0.0, 24.1436, 12.089, 0.0, 34.6847, 0.0, 24.246, 0.0, 0.0, 24.1432, 34.8096], [42.075, 63.9009, 78.0252, 53.3715, 11.1228, 378.2, 13.8915, 71.5984, 26.772, 14.9859, 9.413, 10.1069, 14.2889, 13.0824, 0.0, 14.7242, 1.0488, 15.1632, 2.2971, 33.1412, 45.0402, 9.9141, 30.1158, 0.0, 15.174, 13.9104, 0.0, 13.852, 13.7995], [0.0, 100.3539, 37.4808, 50.9018, 40.6148, 28.1793, 69.4848, 15.1011, 36.3897, 21.7589, 14.6763, 37.8651, 72.3533, 0.0, 84.4275, 98.5772, 70.3824, 67.9536, 43.587, 43.686, 35.2728, 0.0, 36.5474, 96.348], [81.0315, 166.7799, 107.272, 74.865, 56.6007, 899.75, 30.681, 187.6372, 54.1241, 42.5716, 40.2477, 32.3884, 63.3936, 18.9335, 60.724, 19.1162, 9.139, 32.1988, 5.2349, 73.5925, 0.0, 68.5317, 68.8728, 73.7123, 38.3526, 32.3379, 29.106, 44.1324, 33.3295, 33.2605, 101.8181]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

