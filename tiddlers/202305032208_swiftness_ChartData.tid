created: 20230503220838000
creator: Drevarr
modified: 20230705163528216
modifier: drevarr
tags: ChartData
title: 202305032208_swiftness_ChartData
type: text/vnd.tiddlywiki


const names = ["Artakama Nahid", "Maaaathexxs", "Belvyn Brightblade", "Black Raspberry Pie", "Husky Guard", "Soxx", "Ryvalia Fazebringer", "Kosa\u00efr", "Elonith Requiem", "Xkaet", "Solus Nex", "Blancooo Padreee", "Zadie Miststep", "Miphest\u00f6", "Demon Dalham", "Sub Train", "Sygaldry Verdandi", "Smol Daddy Tika", "Skye Nightroad", "Venomina The Fierce", "Gavann", "Koralia Danai", "Zaylen Harker", "Drevarr Moonwillow", "Lucas Ryn", "Johosh The Great", "Bella Sassy"];
const professions = ["Tempest", "Scourge", "Firebrand", "Chronomancer", "Dragonhunter", "Firebrand", "Chronomancer", "Catalyst", "Scourge", "Tempest", "Scourge", "Spellbreaker", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Firebrand", "Willbender", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Swiftness per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[594.2352, 174.1641, 0.0, 0.0, 17.1843, 0.0, 0.0, 343.9154, 0.0, 0.0, 169.4342, 312.8547], [1207.908, 378.5485, 28.1196, 3.3071, 136.8198, 106.1928], [795.8309, 310.1553, 0.0, 0.0, 82.4866, 132.6381, 0.0, 0.0, 579.6925], [656.4355, 305.3837, 14.6824, 0.0, 39.3627, 101.6652, 45.9265, 8.7834, 222.9246, 75.8503, 339.2122, 313.2276], [588.1262, 212.8673, 7.9395, 5.7635, 1.8248, 66.3705, 31.3528, 62.5814, 326.631, 0.0, 48.5576, 437.8483, 426.5862], [104.4407, 1261.3056, 1284.6061], [1464.4843, 78.7317, 0.0, 15.1987, 757.4988, 0.0, 0.0, 0.0, 26.5914, 0.0, 78.4875, 14.7782, 271.4639], [770.8397, 472.6555, 55.172, 73.1394, 198.0825, 43.8172, 58.5329, 718.411, 59.1883, 28.6322, 363.2698, 492.5877], [376.6929, 49.2215, 2.7558, 23.667, 25.6639, 18.3902, 1239.6024, 1.7366, 0.0, 1208.7226, 466.8583], [78.4598, 126.7102, 1380.5626, 1950.5876], [1119.0504, 279.935, 5.7403, 20.6237, 49.0451, 19.8597, 2.8125, 0.0, 741.9001, 0.0, 0.0, 990.8294, 493.3335], [1398.3965, 629.3237, 29.0575, 70.1229, 254.5746, 56.0578, 60.3513, 101.4905, 74.3645, 105.8639, 553.6685, 728.6271], [981.3211, 374.042, 0.0, 11.3968, 31.0582, 297.1752, 19.2399, 65.7723, 941.7788, 50.4413, 594.5664, 759.204], [1717.7285, 894.9438, 13.8415, 43.8774, 30.3878, 219.3828, 13.1995, 57.2977, 1299.8763, 10.7957, 0.0, 0.0], [1491.1416, 429.976, 31.8549, 76.8261, 153.8355, 126.1142, 0.0, 840.7314, 191.6351, 789.433, 787.9166], [1034.0803, 1032.7906, 20.827, 0.0, 67.3299, 2.6754, 111.1249, 10.6704, 1172.2376, 50.0904, 118.4638, 726.8832, 845.7145], [1778.8181, 613.6834, 33.6498, 30.4321, 77.8688, 0.2058, 199.0149, 54.9303, 1006.4845, 78.0689, 523.7683, 836.7652], [1578.3331, 681.0162, 20.3257, 0.9635, 32.9946, 343.1715, 42.9223, 27.0706, 998.9503, 13.8154, 23.8183, 665.3645, 819.9851], [1184.5829, 869.4952, 0.0, 0.0, 96.7123, 361.3848, 19.6874, 41.618, 1132.3505, 73.6317, 984.9869, 910.9703], [1260.1118, 674.389, 22.9776, 82.7473, 442.8816, 136.9806, 121.08, 1332.2291, 28.9138, 600.0653, 1127.2465], [1917.6581, 1650.9805, 175.8487, 6.2496, 118.3115, 502.8723, 170.6344, 238.9005, 1782.9534], [1443.3806, 1164.2753, 64.9711, 147.9173, 486.5112, 255.9037, 1576.87, 0.0, 89.1618, 1166.4499, 1134.7043], [2018.1782, 703.0187, 157.9, 211.7839, 561.4224, 162.3568, 154.5666, 2240.3254, 62.0784, 1324.8864, 1719.3958], [2045.9462, 1812.9505, 27.4081, 0.0, 69.6388, 488.775, 83.8311, 16.709, 2162.324, 52.488, 92.2594, 1917.7344, 1170.8746], [3066.1426, 1321.7387, 186.2946, 46.9762, 109.5973, 459.5514, 144.3953, 108.0765, 2257.6099, 71.1245, 87.8223, 1397.7466, 1642.5805], [3930.2827, 1271.6367, 39.762, 25.3543, 127.9566, 725.8566, 214.7712, 143.2442, 2727.8344, 158.0634, 1645.1962, 2403.2761], [4123.548, 1302.1221, 7.2442, 211.8584, 558.3354, 375.5573, 2844.8366, 391.4747, 2201.9578, 2664.2991]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

