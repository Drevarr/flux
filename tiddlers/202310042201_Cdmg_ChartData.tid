created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Amiti\u00e9l", "Morton Saltbringer", "Lhea Bloodhand", "Black Raspberry Pie", "Jmbrage Gaurdian", "Shadbaese", "Eibh\u00ebar", "Zaroclaw", "Atria Ruinheart", "Mistwalker Cael", "Etchery Howls", "Crusader Siolith", "Tootsie Pop Rocks", "Baal Acurio", "Sylia Raskae", "Mort\u00e4rion", "Drevarr Moonwillow", "Zanos Engine", "Sub Train", "Venom The Ferocious", "Oo Dads Mad", "Adjudicatrix Farra", "Kosair", "Irin The Undeath", "Glorious Gluvs", "Visterik", "Sister Elonith", "Latedoctor", "Solus Luxes", "Rafaellagabriela", "Cedryn X", "Rina Of Theros", "Lord Erin The Wise", "Cutie Piebringer", "Bearah", "Kurn The Drunk", "Jimbo The Pleb", "K\u00e2fkaa", "Astraeus Windrunner", "K\u00e2 \u00d4tik R\u00e6j", "Xanvias Tseli"];
const professions = ["Firebrand", "Chronomancer", "Reaper", "Chronomancer", "Firebrand", "Weaver", "Chronomancer", "Dragonhunter", "Firebrand", "Herald", "Druid", "Firebrand", "Scrapper", "Weaver", "Berserker", "Scrapper", "Scrapper", "Scrapper", "Firebrand", "Firebrand", "Berserker", "Reaper", "Willbender", "Reaper", "Berserker", "Firebrand", "Berserker", "Reaper", "Firebrand", "Firebrand", "Berserker", "Reaper", "Weaver", "Firebrand", "Firebrand", "Reaper", "Berserker", "Weaver", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[11.5211, 11.697, 0.6192, 8.7544, 5.0776, 0.0], [3.9225, 0.6818, 2.3342, 0.0, 0.0, 7.7453, 18.381, 8.5915, 2.7015, 0.0426, 0.0, 1.8261, 3.8636], [11.3028, 19.2273, 0.0, 14.8448, 0.7111], [0.0352, 0.6364, 1.126, 3.5603, 0.5556, 5.5789, 12.5943, 0.0, 9.7606, 5.209, 2.734, 16.4242, 0.0, 0.1818], [3.2535, 3.0, 2.1041, 2.4569, 0.0, 8.1579, 7.4151, 1.2857, 15.4225, 2.3582, 0.0213, 0.0, 32.9091], [22.2836, 30.8298, 0.0, 21.1818], [2.1338, 14.5909, 5.2493, 0.4138, 0.0, 6.0877, 3.5377, 6.3095, 7.0, 6.4179, 3.0745, 14.3939, 0.0, 0.9545], [47.5845], [28.7887, 9.697, 0.1534, 0.0, 3.069, 0.0, 14.8596, 2.8113, 0.0, 10.4225, 0.0, 1.8191, 6.2727, 0.0], [11.169, 25.7424, 0.2904, 0.0, 0.0, 0.0, 0.0, 12.5283, 11.4762, 3.9155, 9.1493, 8.3191, 0.0, 0.0, 0.0], [0.0, 0.0, 0.8438, 0.0, 0.0, 0.0, 0.0566, 1.0952, 3.9155, 0.6269, 14.2766, 9.9697, 0.0, 238.0455], [9.2042, 0.0, 2.0301, 0.0, 2.5431, 10.7111, 0.0, 1.3774, 17.7143, 43.338, 4.4701, 5.7128, 0.0, 0.0, 0.0], [5.7606, 4.697, 5.3973, 3.3879, 3.1778, 12.4912, 6.5094, 21.4048, 22.507, 0.903, 1.3511, 1.1014, 46.7727], [23.4528, 39.9014, 16.8507, 29.8511, 0.0, 0.0, 0.0], [32.4932, 2.3778], [10.9577, 67.4545, 8.5288, 0.1404, 3.9828, 0.5333, 4.5263, 0.5566, 5.381, 28.7465, 4.0075, 6.9894], [11.7887, 2.5455, 2.1671, 1.0877, 4.7845, 0.9333, 31.9649, 18.0943, 25.8333, 21.2535, 5.4328, 18.883, 18.0, 0.0, 46.8182], [7.0563, 5.1061, 20.0712, 0.7895, 3.0517, 11.5556, 15.9825, 9.1321, 4.4762, 12.8028, 9.1343, 4.5319, 0.6364, 6.8986, 1.9545], [14.5352, 7.5, 10.3068, 14.5439, 10.7414, 0.5111, 1.9474, 7.4528, 0.5, 10.4085, 6.291, 16.0532, 106.8485, 0.0, 14.5909], [3.7394, 0.0, 12.6027, 12.3778, 24.0877, 14.4811, 8.2857, 52.8451, 1.9179, 45.1915, 9.8485, 0.0], [19.1901, 118.9091, 22.011, 0.0, 14.3707], [29.2113, 11.0758, 10.1205, 16.3793, 0.0, 5.5439, 20.2264, 37.7143, 22.4789, 5.9851, 32.4149, 13.4545, 3.3333, 24.9545], [7.3099, 12.5455, 20.0027, 12.1724, 0.0, 12.5, 88.8095, 12.1831, 12.8209, 16.883, 53.0606, 2.6818], [27.1972, 15.9091, 11.8082, 0.0, 24.9655, 9.6, 23.0, 30.4151, 0.0476, 31.0141, 6.2313, 12.4894, 0.0, 25.3182], [24.6831, 0.0, 16.6384, 2.2807, 0.6983, 0.0, 4.7193, 21.8962, 0.0, 0.4225, 0.0, 107.9255, 0.0, 0.0], [1.0845, 74.6364, 7.2219, 0.0, 0.9914, 0.0, 100.7895, 25.4528, 23.1905, 1.1831, 18.3433, 17.4574, 32.0606, 1.1014, 12.8636], [18.1781, 1.6293, 21.2889, 43.7368, 26.3019, 18.2857, 89.1972, 21.8507, 6.3511, 0.0, 12.2464, 0.0], [35.1127, 39.4394, 13.4247, 16.7069, 1.0667, 25.0877, 25.4623, 11.619, 35.831, 9.7612, 28.4362, 5.2121, 0.0, 12.3636], [23.7606, 0.6364, 4.0192, 0.0, 40.3621, 0.0, 35.0175, 7.7736, 0.0, 27.6761, 16.5224, 3.9894, 0.0, 432.3182], [8.3873, 1.1515, 7.6384, 0.0, 4.9828, 0.0, 69.6316, 4.8679, 124.5, 0.0, 0.0224, 57.0426, 149.1212, 0.0, 106.4091], [22.9085, 16.1515, 19.8411, 19.9655, 0.0, 27.7368, 19.434, 97.3521, 16.8955, 35.7979, 0.0, 0.0, 0.0], [17.5141, 41.1364, 31.0082, 0.0, 13.2672, 8.7778, 33.3684, 11.1321, 51.7857, 35.3662, 17.2687, 15.8936, 0.0, 10.3188, 30.6364], [84.0634, 9.4091, 18.8356, 23.569, 12.7778, 29.2281, 3.8208, 0.0, 47.8873, 26.4701, 18.7447, 0.0, 0.0, 0.0], [44.4366, 34.6667, 24.6877, 0.0, 26.1466, 3.4, 8.4912, 15.0094, 108.9286, 58.2254, 0.2761, 24.5957, 13.0303, 2.6812, 16.2273], [689.7576, 10.1449, 603.6364], [48.162, 27.7424, 30.3534, 13.1379, 8.3556, 18.7544, 54.5849, 29.3333, 40.0141, 6.7463, 30.0213, 19.7879, 20.2029, 26.2727], [46.3592, 48.5606, 66.6575, 0.0, 42.1121, 0.0, 31.5614], [16.5423, 21.4697, 29.737, 0.0, 33.5172, 47.9111, 93.7719, 37.7264, 41.6905, 57.6338, 26.7612, 38.6277, 0.0, 0.0], [36.0282, 40.3485, 27.7315, 0.7895, 28.1897, 4.4444, 131.4035, 105.2358, 1.4762, 75.4085, 31.209, 21.4468, 102.3939, 5.3623, 8.7727], [45.4155, 13.3182, 52.4767, 0.0, 64.7672, 0.0, 103.0175, 5.4057, 94.4048, 81.0423, 13.0373, 42.8298, 118.4848, 0.0, 121.4091], [21.169, 38.4091, 82.3452, 0.0, 44.1466, 0.2889, 7.3509, 45.3113, 24.8095, 109.4366, 43.694, 69.4468, 0.0, 0.0, 168.9091]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

