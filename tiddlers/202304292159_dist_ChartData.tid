created: 20230429215910000
creator: Drevarr
modified: 20230705163527394
modifier: drevarr
tags: ChartData
title: 202304292159_dist_ChartData
type: text/vnd.tiddlywiki


const names = ["Jupi Jupi Jupi", "Oo Dads Mad", "Belvyn Brightblade", "Khailerian", "Duchess Hazel", "Lord Erin The Wise", "Gabe Malhorn", "Kaotic Reaper Z", "Zady Stardust", "Stark Gandalf", "Newtype Khan", "Drevarr Moonwillow", "Skye Nightroad", "Outer Ocean", "Rage Wildboy", "Smol Gluvs", "Johosh The Great", "Xanvias Tsolice"];
const professions = ["Firebrand", "Spellbreaker", "Firebrand", "Vindicator", "Vindicator", "Weaver", "Firebrand", "Tempest", "Firebrand", "Tempest", "Spellbreaker", "Scrapper", "Scrapper", "Berserker", "Warrior", "Scourge", "Firebrand", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Distance to Tag per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8509, 855, 880, 472, 333, 413, 821, 416, 617, 432, 444, 403, 817, 606], [3034, 342, 849, 1123, 446, 955, 1066, 610, 312, 359, 1062], [1433, 506, 1755, 4978, 22374, 545, 714, 516, 355, 436, 1066], [368, 1569, 763, 485, 1220, 1528, 596, 356, 228, 1021], [590, 375, 571, 501, 766, 881, 380, 315, 291, 10769], [602, 843, 777, 286, 1188, 897, 11677, 492, 447, 8165], [475, 460, 595, 296, 806, 773, 333, 307, 292, 698, 323, 485, 2286, 315, 316, 325, 436], [1079, 520, 397, 268, 289, 728, 302, 501, 4311, 434, 511, 813, 359], [380, 390, 1092, 425, 850, 965, 382, 237, 222, 684, 376, 773, 621, 345, 594, 324, 401], [321, 219, 791, 313, 466, 448, 2520, 526, 456], [394, 359, 365, 748, 410, 1200, 811, 467, 10968, 10886, 830, 484, 604, 440, 247, 527, 497, 482], [602, 524, 383, 664, 714, 568, 641, 307, 366, 935, 228, 515, 274, 325, 375, 264, 487], [326, 433, 652, 415, 987, 382, 282, 279, 281, 614, 334, 551, 3382, 426, 327, 512, 277], [492, 637, 627, 325, 854, 884, 1844, 264, 237, 601], [554, 297, 1527, 956, 3848, 360, 261, 797, 311, 698, 385, 253, 219, 536, 328], [456, 404, 635, 398, 1103, 519, 382, 283, 346, 440, 276, 495, 2073, 297, 306, 497, 467], [416, 270, 378, 288, 1095, 370, 538, 302, 303, 791, 339, 419, 270, 321, 611, 459], [358, 563, 348, 535, 274, 798, 437, 286, 272, 364, 505, 215, 467, 596, 293, 299, 379, 304]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

