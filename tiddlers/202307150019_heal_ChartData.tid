created: 20230715001922000
creator: Drevarr
tags: ChartData
title: 202307150019_heal_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "\u00c1rkantor", "Tika Fiery", "Solus Sanctus", "Vampdru", "Gestern Yesteryear", "Artakama Nahid", "Drevarr Moonwillow", "Tribal S", "Zaedy Zae", "Arriasa"];
const professions = ["Tempest", "Vindicator", "Firebrand", "Firebrand", "Druid", "Firebrand", "Tempest", "Scrapper", "Druid", "Druid", "Druid"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Healing per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[2021.0633], [2647.906, 590.6522, 7.7098, 0.0, 51.5185, 0.0, 40.8731, 8.2045, 1.5437, 25.4124, 23.0278, 61.8241, 0.0, 73.9655, 164.0169], [201.9231, 128.7597, 405.1585, 86.812, 0.0, 334.1772, 143.6495, 392.6933, 262.451, 160.5179, 121.3056, 58.4348, 98.5926, 316.2612, 0.0, 82.3689, 228.4463, 181.037, 160.8704, 78.5846, 244.2184, 264.3051, 0.0, 188.6471, 307.6081, 264.5513], [252.2937, 0.0, 130.2946, 516.0854, 223.5726, 106.8261, 476.4367, 205.0412, 245.9467, 201.902, 96.7143, 392.1528, 31.1739, 94.3111, 106.037, 157.6866, 2.4091, 4.932, 355.3729, 231.2407, 214.5926, 162.7846, 319.5632, 372.4576, 14.68, 368.5798, 221.2365, 359.859], [1022.4825, 0.0, 1228.4419, 4471.2683, 4221.0855, 1029.2174, 3879.2162, 4184.6667], [337.0629, 8.8077, 353.8527, 2161.3902, 1786.7265, 479.3913, 1047.4051, 1658.7216, 1999.52, 2058.4706, 725.7634, 786.8333, 381.2174, 360.4815, 1308.3209, 107.3523, 258.3495, 551.4294, 1069.3241, 484.4352, 570.2923, 1914.1034, 1792.8644, 127.16, 1719.5462, 1231.777, 977.2692], [821.3636, 35.5385, 627.3256, 3309.9634, 2449.0085, 203.7826, 2352.0949, 2133.2577, 2221.8533, 1026.7255, 1017.5536, 602.625, 386.1304, 937.6667, 633.4815, 1572.791, 336.1818, 401.5437, 1159.9492, 1353.1296, 951.9722, 1112.1385, 3278.4483, 2910.4576, 419.72, 1761.7731, 2436.25, 2332.8974], [60.9021, 3888.9241, 2898.1649, 3130.04, 3523.0392, 1782.6473, 964.9861, 225.9565, 906.1481, 774.7037, 2278.0299, 302.3409, 547.9515, 1895.2034, 2100.8889, 1424.3426, 1304.3846, 4099.5287, 3390.6949, 196.64, 2928.7143, 2636.8986, 2272.2949], [943.8811, 724.1783, 4094.2683, 275.5385, 1163.7391, 4373.3861, 2481.2268, 2993.6533, 1963.3137, 1627.1071, 805.7083, 15.4783, 795.6963, 33.7778, 2808.4328, 550.4432, 275.7282, 1960.4237, 2003.1019, 1516.6574, 802.3231, 4129.2989, 1959.1186, 75.72, 756.3193, 1963.3311, 1704.2821], [1135.6084, 0.0, 978.1395, 5634.6098, 4545.812, 707.9565, 1526.462, 3398.2062, 2853.0667, 1791.1569, 1200.6071, 169.4306, 34.1739, 1199.1185, 488.0, 1758.7537, 215.7386, 774.9806, 1936.5706, 3316.2037, 2617.4167, 1567.0, 5835.7701, 3639.9831, 359.6, 859.0504, 2670.7838, 554.6923], [1147.8951, 636.9225, 3551.2927, 2956.2222, 2381.5652, 2852.0, 3143.4742, 4137.64, 2792.3333, 1588.7009, 1512.4444, 1467.913, 1825.1259, 816.6296, 3261.2313, 158.9432, 595.6602, 2162.0565, 2336.2593, 2903.1852, 1679.5538, 4662.2529, 3416.8475, 852.4, 1813.3529, 3370.3514, 783.6923]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

