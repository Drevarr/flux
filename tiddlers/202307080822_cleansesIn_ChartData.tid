created: 20230708082208000
creator: Drevarr
tags: ChartData
title: 202307080822_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Heymerino", "Herm E Licious", "Conky Jr", "Pet Pirate", "Free H\u00e4nd", "Warrior W Warrior", "Luke The Knight", "Elonith Requiem", "My Heel Your Sack", "Lost Uber Driver", "Govinda Ektar", "Rapiorel", "Ain Sof Aur", "Heymerino", "Legacy Of Mathus", "No Reserv\u00e9", "Synomi\u00f1 Spyce", "Free H\u00e4nd", "Kittendoo", "Drevarr Moonwillow", "Elonith Requiem", "A\u00fcrora Windrunner", "Geradenil", "Emobilized", "Legoh Brave", "F\u00f9gly", "Shaca Booey", "Ateriuz", "Twinks R Us", "Aronorf Xideliesi", "Charr Surethang", "Wall Knot", "Bae Ken", "Gestern Yesteryear", "Mother Ship"];
const professions = ["Virtuoso", "Firebrand", "Herald", "Druid", "Renegade", "Spellbreaker", "Berserker", "Reaper", "Dragonhunter", "Herald", "Vindicator", "Willbender", "Guardian", "Chronomancer", "Berserker", "Vindicator", "Scourge", "Vindicator", "Firebrand", "Scrapper", "Scourge", "Firebrand", "Vindicator", "Vindicator", "Tempest", "Tempest", "Berserker", "Berserker", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Reaper", "Firebrand", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.3345, 0.118], [0.1613, 0.2429, 0.0, 0.2241, 0.1765], [0.0, 0.186, 0.0204, 0.3103, 0.3193], [0.2258, 0.3566, 0.0816, 0.5], [0.3525, 0.2422, 0.3704, 0.2419, 0.2268], [0.129, 0.3876, 0.0204, 0.3103, 0.2773], [0.0396, 0.0217, 0.0475, 0.0, 0.0, 0.1129, 0.0206, 0.0214, 0.0215, 0.28, 0.4176, 0.0462, 0.5758, 0.129, 0.1163], [0.018, 0.0373, 0.5252, 0.2586, 0.8519, 0.4032, 0.2474], [0.3777, 0.0559, 0.3056, 0.069, 0.8889, 0.4355, 0.2784], [0.5091, 0.7692, 0.0, 0.5152, 0.129, 0.261, 0.0, 0.3017, 0.1765], [0.2734, 0.1366, 0.0742, 0.0172, 0.1111, 0.2581, 0.0309, 0.086, 0.1891, 0.8462, 0.0645, 0.2274], [0.2518, 0.087, 0.5252, 0.1034, 0.7037, 0.3387, 0.2278, 0.172], [0.259, 0.0683, 0.0326, 0.0, 0.629, 0.0722, 0.089, 0.0538, 0.2545, 0.1429, 0.0, 0.0606, 0.0968, 0.2481, 0.0, 0.2069, 0.1345], [0.2414, 0.6296, 0.0484, 0.2474, 0.1993, 0.0538, 0.2836, 0.6923, 0.0154, 0.6364, 0.0, 0.2377, 0.0204, 0.1983, 0.2521], [0.3058, 0.236, 0.276, 0.5, 0.8148, 0.7258, 0.5258, 0.2669, 0.129], [0.1511, 0.0497, 0.1958, 0.0, 1.0, 0.129, 0.3608, 0.1779, 0.0215, 0.3345, 0.5385, 0.1231, 0.0606, 0.2258, 0.1757, 0.0204, 0.1724, 0.1765], [0.2811, 0.1828, 0.5564, 0.3516, 0.0, 0.4848, 0.1613, 0.3101, 0.0612, 0.5948, 0.2017], [0.2938, 0.1034, 0.2527, 0.0645, 0.3891, 0.8571, 0.0, 0.7576, 0.1613, 0.2558, 0.1224, 0.4569, 0.0672], [0.5484, 0.3505, 0.306, 0.086, 0.6982, 0.8022, 0.0, 0.3939, 0.2903, 0.3075], [0.4281, 0.3168, 0.3739, 0.3621, 1.3704, 0.629, 0.2371, 0.4093], [0.2491, 0.172, 0.7455, 1.0549, 0.7576, 0.1935, 0.3152, 0.102, 0.2672, 0.3361], [0.277, 0.236, 0.3858, 0.3276, 1.0, 0.3387, 0.1753, 0.0854, 0.0215, 0.1818, 0.5165, 0.0, 0.1818, 0.1613, 0.2429, 0.0, 0.2931, 0.1597], [0.2986, 0.1242, 0.4243, 0.4828, 0.2593, 0.3065, 0.4639, 0.1922, 0.1505, 0.1127, 0.6154, 0.0, 0.6061, 0.2258, 0.1835, 0.0, 0.4224, 0.3277], [0.1429, 0.365, 0.2759, 0.5926, 0.2903, 0.2474, 0.2705, 0.0968, 0.3709, 0.7033, 0.0, 0.3939, 0.3226, 0.2506, 0.0, 0.3103, 0.4958], [0.7478, 0.4138, 0.1481, 0.6452, 0.299, 0.4662, 0.2151, 0.8691], [0.0396, 0.4421, 0.3448, 0.8519, 0.7581, 0.3608, 0.2883, 0.4691, 0.8242, 0.0, 0.5455, 0.3871, 0.3721], [0.2842, 0.323, 0.5193, 0.0517, 0.7778, 0.1129, 0.4227, 0.0783, 0.172, 0.28, 0.4945, 0.0154, 0.2424, 0.2739, 0.0, 0.1466, 0.1849], [0.3165, 0.0994, 0.4837, 0.0517, 0.7407, 0.3387, 0.433, 0.2598, 0.172, 0.4109, 0.8681, 0.0, 0.3636, 0.3226, 0.2351, 0.0204, 0.3707, 0.2521], [0.3921, 0.3137, 0.4451, 0.5172, 1.4074, 0.3226, 0.3814, 0.3843, 0.4945, 1.0769, 0.0, 0.4242], [0.5282, 0.1207, 1.0, 0.4194, 0.1753, 0.274, 0.0968, 0.7891, 0.6264, 0.0, 0.9394, 0.3548, 0.3023, 0.0204, 0.3103, 0.3613], [0.1978, 0.205, 0.5816, 0.1897, 1.0741, 0.6452, 0.3505, 0.2883, 0.3636, 0.8681, 0.8182, 0.4194, 0.2687, 0.0408, 0.0862, 0.1345], [0.3561, 0.1832, 0.5134, 0.4483, 1.2963, 0.1935, 0.5361, 0.1139, 0.0645, 0.5418, 0.5165, 0.0, 0.8485, 0.3226, 0.3127, 0.0408, 0.3621, 0.1597], [0.3597, 0.264, 0.451, 0.0, 0.2593, 0.6129, 0.2371, 0.2206, 0.172, 0.6582, 0.7033, 0.0, 0.3939, 0.3548, 0.2558, 0.0612, 0.4569, 0.3866], [0.295, 0.3075, 0.3976, 0.1207, 1.1481, 0.9516, 0.5052, 0.3381, 0.0538, 0.6291, 0.6154, 0.0, 0.5455, 0.0323, 0.2765, 0.0204, 0.3103, 0.4286], [0.5719, 0.2547, 0.4777, 0.6552, 0.8519, 0.5645, 0.2577, 0.1601, 0.2473, 0.6, 0.7582, 0.0, 0.5758, 0.2903, 0.2661, 0.0816, 0.5431, 0.3782]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

