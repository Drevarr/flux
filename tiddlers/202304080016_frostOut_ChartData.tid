created: 20230408001602000
creator: Drevarr
modified: 20230705163524717
modifier: drevarr
tags: ChartData
title: 202304080016_frostOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Zenek Tryst", "Venomina The Siren", "Mac Chiato", "Tegan Parker", "Zadie Miststep", "Mike The Archmagus"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Frost Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.5166, 0.0, 27.9957, 19.3824, 11.1411, 0.0, 28.4227, 24.7695, 0.0, 28.151, 0.0, 26.5248, 20.1272, 0.0, 16.0574, 0.0, 69.7254, 64.0845, 56.5175, 88.608, 39.5366, 26.7485, 55.476, 44.6846, 28.576, 128.1987], [42.6947, 57.2967, 52.9352, 40.0722, 34.2544, 39.8539, 160.9258, 118.8127, 17.7223, 73.722, 37.0368, 80.2656, 106.6559, 20.0045, 15.3778, 30.7692, 161.6687, 72.2907, 168.26, 249.9744, 142.5341, 86.2735, 125.5248, 84.5275, 40.4576, 94.7621], [52.9528, 50.1848, 54.633, 16.0289, 63.6525, 75.4229, 54.3235, 91.2503, 0.0, 93.8247, 39.3552, 55.728, 35.8709, 107.6328, 16.0574, 39.1608, 214.1771, 150.2919, 160.975, 222.5184, 116.9251, 98.2873, 32.1816, 96.8722, 20.3228, 410.8356], [89.0511, 36.8651, 97.8339, 83.2706, 50.5636, 71.0621, 140.8867, 33.663, 0.0, 114.3567, 19.6416, 108.3168, 31.4874, 101.9794, 40.1011, 39.3384, 256.8982, 182.1438, 57.575, 264.576, 153.0922, 134.245, 114.9816, 81.9403, 39.3108, 319.5221], [88.6356, 94.0614, 101.1164, 64.5702, 101.4129, 91.5768, 174.217, 57.3667, 83.4049, 82.4856, 46.9296, 54.7488, 88.2882, 224.9779, 0.0, 21.0752, 166.3123, 177.5754, 112.095, 400.2336, 241.151, 108.8779, 277.4904, 172.3075, 77.3432, 724.81], [71.2357, 103.8854, 117.7176, 39.1628, 142.5493, 154.9032, 196.7779, 28.7018, 75.2875, 133.1002, 44.064, 70.8192, 129.4379, 285.4987, 99.0067, 56.2548, 93.8722, 213.2766, 290.5188, 475.6128, 269.4557, 95.1896, 168.7464, 168.9442, 91.1612, 553.1287]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

