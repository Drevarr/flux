created: 20230701101710000
creator: Drevarr
modified: 20230705163540290
modifier: drevarr
tags: ChartData
title: 202307011017_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Atros Shroudkeeper", "Bella Sassy", "Gestern Yesteryear", "Drevarr Moonwillow", "Trodek", "Ryvalia Routbringer", "Latedoctor", "Fluffy No Care Bear", "Sister Elonith", "Elonith Requiem", "Legacy Of Mathus", "Charr Surethang"];
const professions = ["Vindicator", "Firebrand", "Firebrand", "Scrapper", "Scrapper", "Berserker", "Reaper", "Berserker", "Berserker", "Scourge", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[10.7609, 17.8121, 5.6286, 4.0952, 35.1975, 55.6279, 56.0469, 30.4844, 4.675], [0.0, 0.0, 15.0526, 1.0385, 0.0, 15.9177, 7.2123, 2.0378, 141.617, 0.0, 16.8344, 0.0, 19.381, 2.1852, 0.0, 6.4219], [0.0, 1.9259, 11.2105, 31.6026, 12.3056, 12.3861, 10.9292, 3.4162, 113.5319, 5.3478, 10.6306, 0.0, 17.5476, 2.0864, 33.7969, 10.9219, 21.5], [38.25, 25.9177, 30.7075, 4.8405, 19.0638, 1.3913, 21.3376, 0.0, 1.5476, 4.284, 0.0, 1.1094, 5.9375, 23.9583], [0.0, 43.3617, 18.7826, 43.5573, 0.0, 34.7857, 30.2222, 6.7442, 0.0469, 1.2656, 44.6083], [240.9747], [2.1827, 2.4074, 41.4912, 12.4744, 0.0, 48.7025, 35.9104, 12.3027, 16.4894, 35.6957, 37.1146, 9.2, 17.9524, 12.8642, 36.4651, 12.4062, 48.8438, 40.3667], [645.9615, 53.8611], [7.5385, 3.5926, 123.0351, 357.2949, 0.0, 80.0696, 68.7877, 13.2919, 235.7447], [98.2826, 169.2771, 5.3143, 115.4524, 163.8272, 60.5814, 40.1719, 111.125, 161.5583], [71.6944, 0.0, 112.184, 25.673, 124.9787, 145.8913, 155.7516, 0.0, 38.9048, 70.7407, 52.5156, 98.3438, 120.7583], [0.0, 8.6111, 322.8596, 168.4103, 13.25, 98.3608, 34.3726, 17.7432, 238.5106, 191.2174, 118.3089, 0.0, 8.4048, 100.716, 67.2188, 108.9844, 136.8]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

