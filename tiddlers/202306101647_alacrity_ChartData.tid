created: 20230610164704000
creator: Drevarr
modified: 20230705163534770
modifier: drevarr
tags: ChartData
title: 202306101647_alacrity_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Drevarr Moonwillow", "Miphest\u00f6", "High Sorcer Baradun", "Pamtastic", "Morton Saltbringer", "Seikers Sorrow", "Eibh\u00ebar", "Zhavashian", "Tegan Parker", "Primal Clone", "Venomina The Siren", "Scintilla The Storm"];
const professions = ["Chronomancer", "Scrapper", "Tempest", "Tempest", "Tempest", "Chronomancer", "Chronomancer", "Chronomancer", "Tempest", "Tempest", "Chronomancer", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Alacrity per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[43.5181, 0.0, 34.224, 27.8554, 8.6083, 0.0, 0.0, 8.6086, 17.1626, 0.0, 0.0, 34.0587, 45.5998, 34.503, 101.3395, 0.0, 0.0, 22.5078, 0.0, 36.1267, 0.0, 28.2093], [2.709, 7.5398, 27.6, 10.7366, 69.4522, 0.0, 5.3242, 0.0, 0.0, 0.0, 5.5273, 0.0, 0.0, 0.0, 115.5072, 0.0, 0.0, 145.9331, 2.2908, 6.0838, 59.3013, 26.1307], [47.0979, 43.6682, 118.512, 78.6816, 112.0546, 146.4144, 48.1892, 63.2187], [82.9463, 0.0, 398.6681, 0.0, 43.4963, 27.6973, 129.1194], [173.7638, 128.0742, 247.4093, 134.6128], [34.5785, 0.0, 34.032, 21.7728, 20.9352, 0.0, 0.0, 10.2976, 0.0, 0.0, 25.9754, 5.331, 7.0013, 24.0948, 144.2035, 0.0, 23.0009, 105.1837, 23.1574, 66.4205, 58.1934, 82.2524], [72.1174, 35.4446, 0.0, 88.8192, 102.6557, 0.0, 32.0281, 0.0, 26.9321, 0.0, 0.0, 18.4671, 33.8395, 0.0, 0.0, 110.2733, 0.0, 0.0, 163.7334, 0.0, 29.0394, 50.4965, 122.4878], [32.1597, 15.1351, 0.0, 39.721, 47.9314, 0.0, 81.3598, 5.203, 70.8382, 0.0, 0.0, 0.0, 30.3846, 0.0, 242.7456, 0.0, 0.0, 251.8523, 61.8919, 34.5901, 65.3655, 187.864], [47.1559, 43.1138, 88.848, 55.8259, 89.0405, 0.0, 111.641, 75.5476, 114.5556, 0.0, 42.4235, 90.6422, 100.9466, 61.1811, 118.611, 155.3933, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 38.8634, 44.352, 63.7056, 83.7115, 0.0, 0.0, 0.0, 44.6228, 0.0, 0.0, 6.3261, 46.0803, 0.0, 108.6253, 201.3254, 30.2326, 0.0, 306.1359, 33.9864, 51.2109, 82.6836, 82.5988], [0.0, 0.0, 81.12, 15.6902, 73.727, 0.0, 97.7483, 0.0, 117.1583, 0.0, 0.0, 0.0, 0.0, 274.4198, 32.4958, 33.3905, 360.2724, 101.0012, 68.3648, 122.0428, 115.1632], [0.0, 10.464, 86.999, 86.2296, 0.0, 113.8871, 76.0435, 0.0, 38.3081, 81.7274, 0.0, 224.5171, 107.1059, 31.7294, 257.8838, 121.9096, 112.5824, 203.5019, 163.317], [67.9378, 62.8135, 20.976, 86.1466, 132.6677, 49.3447, 279.1024, 53.5247, 131.1147, 0.0, 23.1379, 43.8354, 103.8312, 375.3984, 83.3612, 33.4116, 532.3911, 140.652, 82.2886, 156.3291, 130.1092]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

