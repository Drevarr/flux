created: 20230215221053000
creator: Drevarr
modified: 20230705163519333
modifier: drevarr
tags: ChartData
title: 202302152210_evades_ChartData
type: text/vnd.tiddlywiki


const names = ["Abigail Ryn", "Blanco Padre Guard", "Veron Blackburn", "Tribal S", "Belvyn Brightblade", "Zadie Miststep", "Dark Sidiuz", "Call Me Ever", "Rina Of Theros", "Johosh The Great", "Skye Nightroad", "Black Raspberry Pie", "Smol Daddy Tika", "Nekro Atsume", "Etchery Howls", "Drevarr Moonwillow", "Lord Charrior", "\u00c9\u00efbhear", "Sp\u00edcy Cheese", "Kosair", "Mac Chiato", "Daring Deathblade", "K\u00e2 \u00d4tik R\u00e6j", "Raziel Umbra", "My Birthday Girl", "Husky Guard", "Jeckyll Mbs", "Be\u00eb", "Sister Elon\u00edth", "Sygaldry Verdandi", "Primal Clone", "Newtype Khan", "Xanvias Tseli", "Lord Erin The Wise", "Legacy Of Mathus", "Smol Gluvs", "Tegan Parker", "Domina Flagbringer", "Ark Darkness", "Ravioli Fetabringer", "Bambiae", "Grasszanine", "Ryvalia Fazebringer", "Ace Hammers", "Xyntharos", "Sassy Daddy Demon"];
const professions = ["Tempest", "Firebrand", "Herald", "Druid", "Firebrand", "Tempest", "Scourge", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Chronomancer", "Berserker", "Scourge", "Druid", "Scrapper", "Berserker", "Scrapper", "Berserker", "Firebrand", "Tempest", "Scourge", "Berserker", "Chronomancer", "Scrapper", "Dragonhunter", "Berserker", "Scourge", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Berserker", "Weaver", "Berserker", "Scourge", "Tempest", "Spellbreaker", "Firebrand", "Firebrand", "Chronomancer", "Spellbreaker", "Chronomancer", "Vindicator", "Vindicator", "Vindicator"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[1, 0, 0, 5, 2, 2, 0, 16, 17, 0, 16, 0, 0, 8, 0, 18, 1, 0, 0], [6, 21, 0, 2, 0, 0, 14, 0, 0, 0, 0, 0, 0, 3, 4, 11, 0, 0, 7, 1, 13, 0, 10, 2], [28, 62, 0, 7, 2, 0, 0], [12, 14, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 7, 0, 0, 20, 0, 6, 3, 4, 3, 6, 10, 0, 11], [45, 55, 0, 2], [7, 8, 0, 2, 0, 0, 0, 2, 0, 13, 8, 0, 1, 5, 5, 35, 0, 0, 0, 1, 9, 0, 0, 1, 7], [6, 28, 0, 2, 5, 2, 2, 0, 0, 0, 0, 0, 0, 20, 22, 2, 2, 2, 2, 13, 5, 1, 0, 0], [7, 12, 62, 0, 1, 17, 6, 9, 1, 3, 3], [11, 6, 0, 2, 0, 1, 7, 5, 0, 21, 0, 0, 21, 2, 0, 9, 0, 0, 0, 0, 24, 1, 2, 0, 12], [4, 7, 0, 1, 0, 0, 0, 5, 0, 23, 0, 0, 0, 6, 5, 0, 0, 4, 0, 15, 1, 39, 0, 14], [10, 14, 0, 2, 0, 1, 4, 0, 0, 12, 0, 8, 10, 0, 22, 0, 2, 0, 0, 22, 17, 0, 3], [1, 0, 6, 0, 0, 0, 4, 0, 2, 6, 0, 5, 12, 19, 0, 0, 1, 8, 39, 20, 1, 0, 14], [9, 14, 0, 4, 1, 0, 2, 3, 0, 33, 0, 0, 0, 3, 0, 17, 0, 1, 11, 0, 12, 9, 0, 24], [3, 0, 12, 5, 2, 26, 15, 0, 0, 20, 0, 11, 0, 0, 9, 3, 14, 0, 18, 10], [12, 23, 0, 4, 6, 2, 3, 0, 0, 16, 0, 0, 8, 5, 0, 11, 0, 0, 24, 13, 14, 9, 0, 0], [10, 6, 0, 4, 0, 0, 0, 0, 0, 23, 0, 0, 9, 4, 0, 17, 2, 0, 10, 0, 27, 0, 32, 13], [6, 0, 45, 6, 0, 21, 4, 0, 22, 0, 0, 5, 3, 19, 0, 2, 0, 24], [12, 19, 0, 2, 2, 0, 0, 2, 0, 14, 0, 0, 10, 9, 8, 0, 0, 13, 15, 32, 0, 18, 0, 3], [2, 0, 10, 3, 1, 0, 1, 0, 16, 3, 0, 21, 13, 0, 27, 0, 3, 24, 0, 10, 5, 12, 0, 8], [31, 4, 0, 19, 2, 3, 1, 0, 0, 5, 14, 49, 2, 8, 0, 25], [25, 35, 1, 6, 3, 0, 1, 4, 17, 12, 0, 10, 8, 11, 0, 2, 11, 3, 25], [6, 1, 14, 2, 0, 7, 24, 0, 13, 0, 4, 10, 25, 37, 0, 26, 0, 6], [1, 2, 8, 8, 0, 40, 14, 0, 8, 33, 6, 0, 2, 12, 7, 21, 2, 12], [1, 2, 1, 3, 1, 6, 0, 23, 29, 0, 12, 8, 4, 29, 0, 3, 6, 0, 49, 4, 3, 0, 1], [35, 35, 0, 2, 5, 1, 0, 13, 0, 13, 7, 0, 6, 0, 22, 0, 3, 1, 35, 8, 0, 4, 1], [2, 6, 4, 16, 2, 52, 10, 0, 19, 8, 11, 3, 3, 35, 2, 11, 3, 4], [18, 22, 0, 1, 1, 1, 0, 4, 0, 25, 17, 0, 10, 32, 9, 41, 0, 12, 1], [3, 0, 0, 0, 1, 1, 5, 0, 40, 5, 0, 13, 10, 18, 0, 0, 7, 10, 41, 13, 0, 29], [0, 2, 9, 3, 2, 1, 0, 21, 3, 0, 2, 9, 32, 0, 1, 3, 16, 22, 1, 43, 0, 26], [11, 6, 0, 0, 0, 1, 0, 13, 0, 13, 1, 0, 30, 17, 2, 20, 0, 0, 39, 7, 28, 1, 11, 2], [21, 7, 0, 1, 1, 2, 7, 10, 0, 14, 3, 0, 13, 22, 0, 33, 0, 0, 18, 30, 25, 0, 0, 0, 14], [66, 42, 0, 4, 5, 6, 2, 3, 18, 0, 0, 19, 0, 0, 14, 0, 0, 9, 9, 19, 0, 0, 1, 14], [25, 36, 0, 1, 0, 8, 0, 15, 0, 32, 4, 0, 15, 27, 17, 0, 0, 6, 6, 30, 0, 6, 0, 21], [58, 13, 0, 3, 1, 6, 0, 4, 0, 13, 29, 0, 3, 25, 0, 65, 0, 1, 0, 13, 20], [48, 65, 0, 3, 1, 6, 2, 7, 0, 1, 5, 0, 5, 29, 11, 0, 1, 2, 9, 34, 0, 20, 0, 7], [41, 63, 1, 9, 4, 1, 0, 2, 1, 22, 21, 0, 2, 19, 17, 2, 1, 10, 4, 25, 0, 13, 0, 5], [38, 37, 0, 3, 8, 1, 0, 2, 12, 2, 0, 23, 2, 0, 13, 0, 0, 5, 20, 27, 8, 39, 38], [25, 42, 0, 2, 0, 2, 0, 4, 0, 21, 14, 0, 14, 26, 20, 1, 4, 12, 35, 46, 0, 7, 6], [12, 28, 0, 3, 1, 0, 2, 1, 0, 37, 18, 0, 26, 19, 1, 33, 0, 0, 9, 37, 46, 21, 0, 13], [56, 56, 1, 2, 8, 10, 8, 3, 0, 34, 3, 0, 23, 7, 0, 37, 0, 0, 2, 14, 28, 1, 8, 11], [34, 39, 0, 2, 4, 4, 0, 11, 0, 52, 1, 0, 30, 15, 0, 28, 2, 1, 16, 0, 44, 2, 0, 0, 32], [51, 29, 0, 14, 0, 14, 1, 31, 0, 17, 18, 0, 7, 0, 34, 0, 0, 12, 7, 38, 0, 14, 0, 49], [27, 38, 0, 1, 2, 3, 7, 6, 1, 43, 15, 0, 38, 12, 59, 1, 5, 3, 16, 20, 0, 12, 0, 28], [20, 40, 0, 15, 3, 6, 8, 8, 0, 68, 3, 0, 15, 16, 49, 0, 0, 61, 23, 29, 26, 0, 6], [63, 120, 1, 32, 6, 5, 20, 11, 0, 35, 10, 0, 98, 0, 37, 4, 78], [100, 88, 0, 18, 15, 6, 13, 14, 1, 36, 23, 0, 120, 16, 0, 92, 0, 0, 24, 41, 60, 28, 44, 0, 22]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

