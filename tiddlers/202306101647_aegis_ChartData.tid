created: 20230610164704000
creator: Drevarr
modified: 20230705163534766
modifier: drevarr
tags: ChartData
title: 202306101647_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Ryvalia Fazebringer", "Traidoruns Maximus", "Drevarr Moonwillow", "Tika Fiery", "Aronorf Xideliesi", "Solus Sanctus", "Koralia Danai", "Gestern Yesteryear", "Bella Sassy"];
const professions = ["Chronomancer", "Firebrand", "Scrapper", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 22.2869, 3.6, 0.0, 0.0, 0.0, 19.3001, 0.0, 0.0, 0.0, 0.0, 7.1888, 0.0, 19.4022, 56.4, 1.4711, 4.2532, 74.879, 62.4334, 22.6733, 24.9567, 16.9751], [51.084, 45.8489, 61.872, 70.3181, 42.0461, 19.5298, 99.9944, 26.5448], [0.7353, 0.2033, 36.192, 3.1104, 5.8267, 1.8409, 16.222, 13.1305, 6.9028, 0.0, 0.0, 0.0, 0.0, 0.0, 79.5917, 10.5427, 0.0, 205.8069, 76.4694, 0.6899, 14.7524, 35.7813], [0.0, 63.7006, 36.72, 55.3421, 49.4832, 0.0, 84.6874, 0.0, 0.0, 0.0, 23.7708, 0.0, 0.0, 30.8016, 112.9805, 30.9304, 23.4559, 249.6457, 35.2775, 0.0, 86.7653, 38.4537], [0.0, 45.7195, 0.0, 19.6301, 80.4614, 44.8624, 192.9176, 1.6271, 103.2019, 0.0, 33.8033, 21.4704, 0.0, 0.0, 165.049, 83.5121, 18.642, 189.0363, 17.2014, 199.6691, 63.0914, 57.4579], [18.6534, 62.333, 15.648, 48.937, 42.0461, 0.0, 204.7306, 3.5002, 38.8893, 0.0, 0.0, 0.4793, 21.0496, 15.6499, 0.0, 148.0838, 47.018, 15.0236, 284.5107, 55.9359, 133.5622, 102.509, 114.5694], [21.3237, 63.793, 16.272, 97.0445, 50.3909, 0.0, 186.4288, 11.9953, 37.1542, 0.0, 0.0, 0.0, 23.3605, 44.044, 260.9741, 102.9756, 67.913, 458.689, 115.1623, 90.599, 195.4551, 81.411], [82.7213, 95.2829, 98.736, 67.7376, 119.9016, 56.3081, 367.2839, 100.1057, 180.0753, 15.5347, 0.0, 125.5635, 44.227, 84.9306, 15.376, 162.7027, 33.2879, 12.9605, 304.959, 98.0441, 87.7453, 157.2038, 108.1357], [60.2752, 63.0538, 167.184, 86.3539, 67.5197, 181.0505, 180.6055, 54.868, 81.4752, 23.4195, 79.2999, 183.3146, 101.3355, 71.8124, 163.1539, 55.1089, 49.9482, 294.0729, 102.1258, 87.4003, 188.6912, 206.8187]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

