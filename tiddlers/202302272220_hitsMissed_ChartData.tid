created: 20230227222028000
creator: Drevarr
modified: 20230705163520401
modifier: drevarr
tags: ChartData
title: 202302272220_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Oo Dads Mad", "Sumatra Satyricon", "Legacy Of Mathus", "Echo Monchichi", "Blanco Padre Guard", "Gavann", "Dark Sidiuz", "Etchery Howls", "Black Raspberry Pie", "Sofya De Nova", "Iris S K", "King Squid", "Jupi Jupi Jupi", "M A C U M B E I R O", "Ravioli Fetabringer", "Lord Erin The Wise", "Fribble Bibble", "Zadie Miststep", "Smol Gluvs", "Ark Darkness", "Primal Clone", "Rina Of Theros", "Mike The Archmagus", "Newtype Khan", "Nelliel T", "Cat Wigglebooty", "Husky Guard", "High Sorcer Baradun", "Zaylen Harker", "Tegan Parker", "What Charr U Saying", "My Birthday Girl", "\u00c1rk\u00e1ntor", "Tootsie Pop Bringer", "Mac Aaroni", "Tribal S", "Be\u00eb", "Koralia Danai", "Sygaldry Verdandi", "Venomina The Siren", "Sp\u00edcy Cheese", "Kahless The Drunk", "Eibh\u00ebar", "Smol Daddy Tika", "Arcanophage Farra", "Mistwalker Caelon", "Xanvias Tseli", "Jeckyll Mbs", "Drevarr Moonwillow", "Bella Sassy", "Ryvalia Fazebringer"];
const professions = ["Spellbreaker", "Soulbeast", "Berserker", "Renegade", "Firebrand", "Firebrand", "Scourge", "Druid", "Chronomancer", "Weaver", "Spellbreaker", "Reaper", "Dragonhunter", "Weaver", "Firebrand", "Weaver", "Scrapper", "Tempest", "Scourge", "Firebrand", "Chronomancer", "Scourge", "Weaver", "Spellbreaker", "Scourge", "Scrapper", "Dragonhunter", "Tempest", "Firebrand", "Tempest", "Berserker", "Scrapper", "Scourge", "Scrapper", "Tempest", "Druid", "Scourge", "Firebrand", "Firebrand", "Tempest", "Berserker", "Firebrand", "Chronomancer", "Berserker", "Spellbreaker", "Vindicator", "Berserker", "Berserker", "Scrapper", "Firebrand", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 6, 1, 0, 0, 1, 1, 2, 0, 2], [0, 2, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0, 2, 4, 0, 0, 3], [0, 0, 2, 1, 3, 0, 1, 0, 0, 0, 0, 3, 6, 0], [16, 1], [0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 1, 6, 0, 0, 0, 1, 0, 6], [0, 1, 2, 0, 1, 1, 0, 0, 0, 0, 0, 1, 2, 7, 3], [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 9, 2, 1], [0, 1, 5, 0, 3, 0, 1, 3, 1, 0, 0, 2, 4, 0, 0, 0, 0], [0, 0, 0, 1, 3, 0, 0, 2, 5, 1, 0, 2, 0, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 0, 1, 0, 0, 13, 0], [2, 4, 1, 4, 0, 0, 11, 0], [22, 1], [0, 1, 2, 0, 0, 0, 4, 7, 1, 0, 3, 0, 1, 5], [4, 4, 0, 0, 3, 0, 0, 13, 1], [0, 2, 2, 0, 1, 0, 0, 1, 0, 0, 0, 2, 6, 0, 0, 2, 0, 0, 11, 0], [0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 5, 0, 3, 1, 0, 13], [0, 4, 1, 0, 0, 0, 0, 0, 1, 0, 0, 3, 2, 7, 1, 0, 2, 0, 0, 7], [0, 3, 0, 1, 0, 0, 0, 1, 2, 0, 1, 2, 6, 1, 0, 2, 1, 1, 7, 1], [0, 2, 0, 3, 2, 6, 1, 0, 1, 0, 0, 13, 1], [7, 0, 2, 0, 0, 2, 2, 0, 0, 2, 11, 1, 0, 2, 0], [0, 2, 1, 2, 0, 1, 0, 0, 2, 0, 1, 2, 3, 2, 0, 2, 0, 1, 10, 1], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 3, 6, 1, 0, 1, 0, 0, 14, 0], [0, 1, 0, 0, 1, 0, 0, 0, 3, 1, 0, 0, 2, 9, 0, 0, 4, 0, 1, 9], [1, 0, 5, 0, 2, 23, 0], [0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 10, 0, 4, 0, 0, 11, 0], [0, 6, 4, 4, 3, 0, 0, 1, 0, 0, 1, 1, 5, 0, 0, 2, 0, 1, 6], [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 8, 1, 3, 0, 3, 17, 0], [1, 0, 3, 0, 2, 0, 1, 0, 0, 2, 0, 6, 0, 0, 0, 0, 1, 21, 0], [1, 3, 0, 0, 0, 1, 0, 0, 1, 2, 9, 0, 0, 0, 1, 19, 0], [1, 0, 1, 0, 0, 2, 3, 8, 1, 0, 1, 0, 1, 19, 0], [3, 9, 2, 0, 2, 1, 1, 17, 2], [0, 3, 1, 0, 0, 4, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 1, 0, 0, 23, 0], [8, 0, 5, 0, 0, 26, 0], [0, 3, 0, 0, 1, 2, 1, 0, 1, 3, 0, 0, 2, 2, 1, 0, 0, 0, 1, 22, 1], [0, 1, 2, 0, 1, 1, 1, 0, 0, 0, 1, 0, 2, 3, 2, 0, 1, 0, 1, 23, 1], [0, 3, 1, 3, 3, 0, 0, 2, 0, 0, 2, 3, 9, 0, 2, 0, 0, 11, 1], [0, 2, 0, 0, 1, 0, 0, 2, 10, 2, 0, 5, 0, 1, 18, 1], [0, 3, 7, 0, 1, 0, 0, 2, 4, 0, 3, 2, 2, 0, 0, 2, 0, 2, 14, 0], [0, 3, 5, 2, 4, 0, 0, 0, 0, 0, 1, 4, 9, 0, 0, 0, 1, 14, 0], [0, 3, 2, 1, 0, 0, 0, 0, 1, 0, 0, 4, 6, 0, 0, 3, 1, 1, 20, 1], [0, 3, 0, 1, 1, 1, 0, 0, 0, 0, 1, 3, 12, 0, 0, 2, 0, 1, 18, 0], [0, 7, 2, 1, 1, 0, 1, 1, 1, 1, 1, 2, 7, 1, 0, 1, 0, 1, 18, 0], [0, 3, 1, 1, 3, 0, 1, 5, 2, 0, 3, 3, 16, 0, 0, 1, 0, 1, 9, 0], [0, 1, 3, 0, 2, 3, 0, 1, 0, 0, 0, 4, 3, 6, 2, 0, 2, 0, 1, 21, 0], [0, 3, 4, 2, 0, 0, 1, 7, 3, 0, 1, 2, 6, 1, 0, 0, 0, 0, 21, 0], [1, 1, 3, 0, 1, 3, 0, 0, 0, 0, 0, 1, 3, 10, 3, 0, 0, 0, 1, 23, 1], [0, 0, 2, 0, 1, 0, 1, 0, 1, 2, 0, 3, 2, 13, 1, 0, 2, 0, 2, 20, 1], [0, 2, 1, 0, 2, 1, 0, 4, 1, 0, 0, 2, 5, 2, 0, 6, 0, 2, 22, 1], [0, 5, 1, 1, 1, 3, 3, 5, 0, 0, 2, 3, 6, 2, 0, 3, 0, 1, 16, 0], [0, 4, 4, 1, 3, 1, 1, 5, 0, 1, 0, 3, 9, 0, 0, 1, 0, 1, 21, 1], [0, 3, 6, 2, 2, 0, 0, 2, 1, 0, 4, 4, 11, 2, 0, 7, 0, 0, 24, 0]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

