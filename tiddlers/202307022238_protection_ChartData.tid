created: 20230702223827000
creator: Drevarr
modified: 20230705163541123
modifier: drevarr
tags: ChartData
title: 202307022238_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Gustav Glaivesson", "Kittendoo", "Demon Staph", "Spirita Demon", "Aronorf Xideliesi", "Thalia Mavren", "Amiti\u00e9l", "Artakama Nahid", "K\u00e2 Otik", "Pixzil", "Tika Fiery", "Silvyrs", "Thats Not Nice", "Bella Sassy"];
const professions = ["Tempest", "Firebrand", "Druid", "Druid", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[163.8504, 191.5317, 541.1133, 368.2501], [61.0701, 37.632, 92.9826, 180.0792, 31.752, 11.4715, 10.6882, 150.8031, 78.5842, 357.4692, 121.9428, 187.0053, 311.8599], [91.7293, 87.2093, 82.9709, 0.0, 128.1251, 76.464, 12.3006, 17.9002, 23.5935, 60.4909, 58.2434, 66.6806, 0.0, 166.1184, 31.7051, 279.8523, 189.2041, 42.1345, 17.7232, 19.3704, 104.9646, 109.3176, 110.943], [35.5384, 0.0, 247.4991, 225.4824, 27.9264, 99.5949, 0.0, 187.907, 32.4135, 29.8511, 146.4512, 0.0, 0.0, 4.5596, 51.5436, 22.493, 171.1886, 0.0, 59.1583, 108.9434, 118.5962, 11.8953, 0.0, 2.9938, 12.096, 190.5967], [53.6085, 60.8102, 105.3274, 7.1981, 98.1262, 0.0, 12.7538, 0.0, 21.1239, 35.19, 44.9147, 84.7805, 134.9208, 17.9154, 14.9877, 127.8169, 0.0, 0.0, 4.62, 68.8565, 24.5592, 18.144, 0.0, 128.5488, 48.7001, 249.9552, 22.7276, 72.5109, 33.993, 140.1939, 36.5148, 0.0, 186.7601, 0.4048, 0.0, 0.0, 58.2154, 48.0053, 87.9564, 57.2508, 43.8329, 127.5763, 35.8667, 0.0, 31.2595, 0.0, 103.1851, 45.396], [87.6162, 92.5523, 128.6397, 169.9958, 22.6246, 136.3982, 80.19, 56.7446, 65.9515, 28.0079, 107.2539, 109.2686, 0.0, 165.312, 41.1473, 388.9431, 239.5562, 0.0, 52.3992, 45.1352, 89.5536, 141.2586, 27.8507, 5.7878, 170.9955, 104.8073, 254.7072, 0.0, 106.25, 215.2557], [20.4259, 38.4858, 73.5638, 0.0, 232.0065, 0.0, 61.6325, 79.7089, 56.4039, 127.0288, 100.659, 111.4589, 0.0, 86.2344, 0.0, 99.9999, 234.6599, 69.384, 67.1563, 119.2968, 29.4462, 0.0, 56.764, 47.9214, 4.4273, 171.7848, 0.0, 99.1976, 179.6602, 69.8103, 0.0, 125.9809, 0.0, 0.0, 0.0, 40.9013, 73.2533, 249.5102, 0.0, 77.4493, 179.9998, 164.2776, 4.4525, 0.0, 41.7571, 38.6487, 201.1124], [28.8834, 111.8185, 50.4355, 139.3344, 46.8685, 305.6731, 85.914, 43.1816, 54.546, 49.9432, 70.7729, 107.0456, 0.0, 0.0, 38.808, 19.4384, 75.9213, 203.3816, 38.3095, 35.4955, 68.8632, 115.3275, 129.8592, 64.6002, 48.9146, 1.7354, 190.4058, 113.9173, 301.752, 57.5723, 72.3453, 103.2521, 89.4348, 36.678, 149.6102, 24.9458, 64.3678, 33.8124, 82.7261, 110.7691, 43.0272, 0.0, 133.5625, 220.6962, 38.0354, 74.4028, 25.3109, 0.0, 153.6979, 53.694], [93.0387, 52.079, 226.2806, 0.0, 206.3239, 24.624, 60.629, 95.1016, 68.0441, 175.9797, 96.188, 0.0, 117.0792, 30.902, 370.5156, 338.872, 115.2515, 0.0, 26.1744, 149.3712, 217.8576, 138.0078, 44.6589, 210.7404, 269.383, 317.5524, 22.501, 78.868, 79.4871, 310.0086, 90.4491, 0.0, 90.4106, 21.8718, 0.0, 124.3899, 88.8211, 174.6074, 0.0, 112.9077, 316.5599, 206.738, 76.4488, 23.1403, 88.4909, 44.363, 182.8038], [113.6516, 117.4774, 89.7802, 167.0447, 37.8, 25.4105, 17.0824, 108.9931, 137.7255, 207.184, 138.9281, 0.0, 272.4624, 118.0702, 366.0111, 153.6142, 80.614, 32.0376, 92.2539, 54.756, 144.6228, 31.5058, 0.0, 337.1562, 116.7269, 392.7528, 74.808, 104.8925, 23.8157, 409.0532, 277.6536, 280.3928, 0.0, 107.1664, 116.3524, 376.6274, 63.3652, 262.3585, 300.7364, 33.6506, 72.1855, 288.8056, 110.232], [24.0244, 134.0774, 112.7523, 259.7366, 100.464, 422.7914, 105.948, 14.8578, 49.2169, 63.7906, 71.2095, 57.6186, 158.5186, 23.7082, 277.4016, 96.1674, 498.771, 290.2007, 74.3232, 120.2661, 210.7944, 165.7152, 0.0, 19.2566, 239.7492, 199.1425, 44.3124, 21.3813, 196.4416, 78.6516, 329.1106, 142.2666, 26.2706, 193.7099, 0.0, 0.0, 0.0, 199.7382, 71.5928, 146.6976, 59.8752, 26.7571, 116.7566, 323.1867, 80.3756, 73.5025, 46.0728, 96.4753, 321.6671, 81.0], [67.6007, 72.0891, 109.6707, 226.1626, 0.0, 285.6018, 141.21, 65.1932, 0.0, 91.9926, 107.4473, 100.1731, 145.438, 262.4328, 62.2748, 313.1856, 390.978, 0.0, 57.8592, 187.3819, 180.5976, 207.8244, 9.1377, 16.5352, 229.8663, 129.1574, 433.026, 35.0979, 233.6573, 37.324, 450.1184, 127.7136, 351.0913, 0.0, 0.0, 45.6876, 116.6355, 250.8156, 0.0, 22.4718, 247.5673, 352.4697, 130.7992, 0.0, 43.6428, 23.5734, 331.8073], [73.4358, 30.9872, 100.368, 16.9133, 169.7784, 31.05, 30.6868, 0.0, 9.5917, 54.4004, 57.1327, 93.9674, 0.0, 35.028, 11.7129, 207.7803, 177.7306, 12.3675, 18.396, 64.3227, 137.8944, 96.201, 71.2655, 0.0, 232.9236, 0.0, 238.6692, 14.5697, 125.3213, 0.0, 308.2414, 97.1523, 40.4984, 21.7201, 0.0, 0.0, 7.3427, 72.3098, 127.9253, 0.0, 537.5425, 1687.9697, 196.0921, 262.553, 812.2032, 365.9093, 1552.7528], [206.391, 272.1395, 163.5802, 107.7946, 541.7801, 243.972, 74.0302, 41.1434, 94.5725, 42.3502, 156.6115, 210.0197, 39.3422, 358.3944, 279.9459, 749.1393, 583.6169, 56.984, 60.06, 299.5925, 490.86, 275.1462, 92.7155, 705.4542, 326.2565, 695.9304, 50.7873, 233.8559, 489.5005, 263.4534, 67.8044, 432.2144, 30.0058, 60.3098, 68.6647, 169.2617, 138.1095, 427.2878, 23.5008, 88.3717, 385.9456, 459.3527, 155.2306, 82.0855, 172.4328, 183.5244, 518.93]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

