created: 20230204220933000
creator: Drevarr
modified: 20230705163518715
modifier: drevarr
tags: ChartData
title: 202302042209_rips_ChartData
type: text/vnd.tiddlywiki


const names = ["Radmure", "Daring Deathblade", "Dark Sidiuz", "Oo Dads Mad", "Blood Ravana", "Nelliel T", "Domina Flagbringer", "Newtype Khan", "Smol Gluvs", "Rozaalyna", "Rina Of Theros", "Be\u00eb", "Grasszanine", "Fungus", "Raziel Umbra", "Black Raspberry Pie", "Bambiae"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Spellbreaker", "Chronomancer", "Scourge", "Spellbreaker", "Spellbreaker", "Scourge", "Scourge", "Scourge", "Scourge", "Spellbreaker", "Scourge", "Chronomancer", "Chronomancer", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Boon Strips per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0179, 0.3309, 0.0, 0.127, 0.1544], [0.1883, 0.1339, 0.2193, 0.08, 0.097, 0.1664], [0.0947, 0.2336, 0.0915, 0.2411, 0.2305, 0.0, 0.0882, 0.0806], [0.0228, 0.0794, 0.2213, 0.213, 0.3115, 0.1744, 0.0], [0.1415, 0.1067, 0.1885, 0.2988, 0.1246, 0.1451], [0.0528, 0.1017, 0.2377, 0.0444, 0.0, 0.1434, 0.0446, 0.1078, 0.0, 0.1605, 0.2333], [0.0576, 0.1067, 0.1803, 0.2604, 0.1994, 0.1641, 0.0, 0.3569, 0.0, 0.0705, 0.259], [0.0659, 0.0546, 0.1311, 0.2337, 0.3271, 0.1865, 0.3393, 0.3086, 0.0, 0.1164, 0.2007], [0.1139, 0.1017, 0.2869, 0.2781, 0.1869, 0.2003, 0.2946, 0.2677, 0.0, 0.1111, 0.2813], [0.1463, 0.1687, 0.3279, 0.2012, 0.3427, 0.0846, 0.3839, 0.4572, 0.0, 0.2275, 0.2642], [0.1751, 0.206, 0.3607, 0.3994, 0.405, 0.3212, 0.0, 0.4238, 0.0, 0.2169, 0.2504], [0.3525, 0.2184, 0.377, 0.4467, 0.2274, 0.4024, 0.4643, 0.5874, 0.0, 0.2469], [0.2374, 0.2035, 0.459, 0.358, 0.4174, 0.2487, 0.1964, 0.5576, 0.0, 0.2451, 0.3602], [0.2902, 0.1663, 0.2951, 0.3018, 0.4299, 0.3074, 0.5357, 0.4833, 0.0, 0.2152, 0.3173], [0.3118, 0.2109, 0.2787, 0.3402, 0.134, 0.4853, 0.3661, 0.4758, 0.4, 0.2857, 0.3225], [0.2482, 0.2084, 0.4426, 0.4882, 0.4486, 0.3195, 0.6071, 0.5204, 0.04, 0.2698, 0.3002], [0.5084, 0.3474, 0.7951, 0.6982, 0.3707, 0.5665, 0.6339, 0.5279, 0.64, 0.5679, 0.6106]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

