created: 20230304223548000
creator: Drevarr
modified: 20230705163521229
modifier: drevarr
tags: ChartData
title: 202303042235_Pdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Venomina The Fierce", "Demon Maddx", "Be\u00eb", "I Make Tools", "Kmpek", "Nelliel T", "Smol Gluvs", "Madrigal Moonshade", "Ace Hammers", "Husky Guard", "Demon Maddx", "Be\u00eb", "Nimplet", "Cerys Fireblade", "Legacy Of Mathus", "Lord Erin The Wise", "Sp\u00edcy Cheese", "Xanvias Tseli", "Sofya De Nova"];
const professions = ["Spellbreaker", "Scourge", "Scourge", "Scrapper", "Vindicator", "Reaper", "Reaper", "Vindicator", "Vindicator", "Dragonhunter", "Reaper", "Reaper", "Scrapper", "Berserker", "Berserker", "Weaver", "Berserker", "Berserker", "Weaver"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Power Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[18.216, 0.0, 113.2889, 0.0, 0.0, 291.0111, 0.0, 19.1778, 0.0, 76.9677, 184.9264, 322.15, 0.0, 40.6293, 128.9941, 98.3745, 109.1452, 320.72, 339.16, 113.9032], [184.645, 350.3383, 581.8667, 768.9231, 360.2449, 757.7889, 0.0, 85.1889, 83.6, 514.1452], [428.6124, 609.0526, 199.8, 98.4231, 429.3163, 803.4889, 0.0, 158.1, 335.371], [561.6, 168.0, 251.9698, 254.6864, 0.0, 28.1638, 384.2323, 1127.04, 241.72, 0.0], [290.7, 296.4118, 58.944, 180.9615, 29.1362, 0.0, 564.6935, 838.99, 1178.06, 0.0], [388.3753, 47.75, 74.9118, 279.9871, 321.0917, 30.1319, 33.7069, 355.9613, 81.93, 0.0], [359.7933, 118.5819, 223.932, 52.7489, 0.0, 443.9903, 833.17, 1127.76, 294.5161], [283.4556, 199.2406, 219.3778, 638.5238, 75.1923, 158.2551, 393.7, 142.8556, 0.0, 662.4032, 185.0261, 571.55, 102.2941, 155.7845, 311.8254, 153.1489, 36.181, 265.6645, 0.0], [177.4112, 326.2105, 1966.8889, 0.0, 0.0, 26.8061, 382.9667, 0.0, 113.2556, 1072.9355, 492.6722, 455.4, 167.9412, 41.9052, 164.426, 8.166, 0.0, 415.771, 158.16, 83.92, 450.4839], [278.0355, 38.3383, 352.6444, 725.0385, 117.1122, 109.1778, 55.3111, 653.4839, 540.6176, 444.35, 110.6765, 161.1509, 281.3254, 89.5447, 0.0, 393.6613, 735.99], [665.3254, 430.3448, 362.5473, 200.0638, 119.6293, 332.7548, 964.68, 1011.62, 357.871], [882.9667, 610.5, 90.8235, 419.3534, 752.6272, 120.6298, 46.7328, 437.6452, 1277.05, 1557.84, 400.5645], [459.905, 804.55, 296.8824, 625.9397, 676.8314, 130.4596, 23.8103, 943.8613, 831.93, 1556.98, 2417.2419], [395.5089, 259.0752, 6.9111, 479.9048, 0.0, 361.5918, 596.1, 0.0, 59.1556, 0.0, 1182.6452, 741.1734, 0.0, 454.9706, 239.2716, 229.7574, 48.7021, 28.3448, 593.3452, 1045.96, 1378.12, 1349.6129], [129.3432, 336.3158, 2106.7778, 734.7619, 0.0, 772.1633, 325.3111, 190.2222, 0.0, 230.0645, 1130.0974, 159.5, 337.5588, 50.0603, 350.5473, 137.6298, 14.7931, 701.3194, 696.64, 1451.32, 731.0645], [346.4349, 111.6992, 1251.8889, 2806.6667, 839.9231, 293.1327, 1287.2889, 857.2, 307.6333, 0.0, 2715.6935, 1331.9525, 94.8, 298.8235, 749.5603, 607.8639, 3.434], [661.926, 954.782, 0.0, 332.1154, 1596.4898, 88.3111, 38.7333, 0.0, 1658.6935, 1728.2043, 244.95, 189.8235, 163.2629, 362.3757, 42.4426, 57.0, 1049.4774, 1305.98, 421.5645], [901.9704, 1537.9023, 1384.7778, 983.0952, 430.4231, 112.6531, 172.9222, 162.6, 0.0, 1041.4194, 1343.6532, 318.2, 722.7059, 93.1078, 478.1154, 47.1702, 0.0, 872.1677, 1565.13, 3941.34, 1536.5968], [7.0602, 2026.2222, 1459.2381, 5614.1154, 2476.6735, 2782.9222, 856.4444, 220.3222, 0.0, 5422.0968, 1217.2233, 1754.55, 671.5588, 669.7543, 847.6538, 83.0468, 16.3793, 1007.3323, 675.61, 1184.72, 772.8226]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{id: 'dataZoomX', type: 'slider', xAxisIndex: [0], left: 10, height: 10, filterMode: 'empty', start: 0, end: 100},{id: 'dataZoomY', type: 'slider', yAxisIndex: [0], filterMode: 'empty', start: 0, end: 100}],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

