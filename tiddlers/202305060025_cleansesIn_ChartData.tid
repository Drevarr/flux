created: 20230506002551000
creator: Drevarr
modified: 20230705163528254
modifier: drevarr
tags: ChartData
title: 202305060025_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Mistwalker Caelon", "\u00c1rkantor", "Xina Xino", "Viral Marketing", "Zaylen Harker", "Nero Arien", "Temperstep", "Mistwalker Caelon", "Mrs Stealth Monkey", "Miphest\u00f6", "High Sorcer Baradun", "Hauzzy", "Lord Erin The Wise", "Mac Adaymia", "Rojin Rumei", "Koralia Danai", "Sister Elonith", "Demon Dalham", "Rina Of Theros", "Ark Darkness", "Air One Com", "Lucas Ryn", "Bella Sassy", "Venngi", "Kmpek", "Stoic Rapidfire", "Xanvias Einzbern", "Newtype Khan", "Be\u00eb", "Morv\u00e4rth", "Kos\u00e4ir", "Smol Gluvs", "Aronorf Xideliesi", "Khailerian", "Johosh The Great", "Artakama Nahid", "Solus Sanctus", "Primal Clone", "Hyde En Sikh", "Zaidy Sagemist", "Jupi Jupi Jupi", "Permanent Dawn", "Rozaalyna", "Smol Daddy Tika", "Eibh\u00ebar", "Blancooo Padreee", "Tegan Parker", "Venomina The Siren", "Drevarr Moonwillow", "Black Raspberry Pie"];
const professions = ["Herald", "Vindicator", "Firebrand", "Firebrand", "Firebrand", "Chronomancer", "Tempest", "Vindicator", "Vindicator", "Tempest", "Tempest", "Berserker", "Weaver", "Vindicator", "Spellbreaker", "Firebrand", "Berserker", "Dragonhunter", "Scourge", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Scrapper", "Vindicator", "Druid", "Berserker", "Spellbreaker", "Scourge", "Scourge", "Vindicator", "Scourge", "Firebrand", "Vindicator", "Willbender", "Tempest", "Firebrand", "Chronomancer", "Chronomancer", "Vindicator", "Firebrand", "Weaver", "Scourge", "Spellbreaker", "Chronomancer", "Spellbreaker", "Tempest", "Tempest", "Scrapper", "Chronomancer"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.461], [0.1139, 0.2676, 0.0268, 0.1351, 0.0435, 0.3594], [0.0467, 0.245, 0.3236], [0.1139, 0.2817, 0.0134, 0.2162, 0.0, 0.0435, 0.3767], [0.099, 0.2324, 0.0671, 0.1081, 0.0, 0.4994], [0.045, 0.0723, 0.0758, 0.0, 0.1029, 0.2599, 0.2336, 0.1733, 0.2548], [0.0415, 0.034, 0.0, 0.1458, 0.3235, 0.2738, 0.2056, 0.2483, 0.2163], [0.0842, 0.3151, 0.0201, 0.0135, 0.0, 0.0217, 0.1938, 0.2681, 0.1667, 0.1771, 0.0588, 0.2341, 0.0935, 0.2167, 0.2365], [0.1673, 0.047, 0.2973, 0.0, 0.3494, 0.1903, 0.3106, 0.0455, 0.0208, 0.0735, 0.1349, 0.2804, 0.065, 0.2218], [0.1436, 0.3327, 0.0872, 0.1486, 0.0, 0.4907, 0.1938, 0.3106, 0.1061, 0.0, 0.0882, 0.3472], [0.1436, 0.5511, 0.047, 0.0541, 0.0435, 0.6939, 0.218], [0.1881, 0.3046, 0.0604, 0.0676, 0.0, 0.0435, 0.5415, 0.1903, 0.3702, 0.0909, 0.0417, 0.0441, 0.3175], [0.1287, 0.338, 0.1208, 0.0405, 0.087, 0.0, 0.4981, 0.2976, 0.417, 0.1667, 0.1562, 0.0, 0.3294, 0.1869], [0.1089, 0.2412, 0.047, 0.1622, 0.0, 0.0217, 0.3792, 0.2215, 0.3872, 0.0909, 0.0417, 0.1471, 0.2321, 0.2243, 0.185, 0.1815], [0.5366, 0.2699, 0.2468, 0.1667, 0.0521, 0.1618, 0.2817, 0.2056, 0.1667, 0.2466], [0.1238, 0.3011, 0.0336, 0.0946, 0.0, 0.0, 0.368, 0.2699, 0.2426, 0.1364, 0.0833, 0.0735, 0.25, 0.2336, 0.2117, 0.2062], [0.1188, 0.3556, 0.0671, 0.0811, 0.0, 0.0, 0.2454, 0.3356, 0.1149, 0.0303, 0.0417, 0.0735, 0.2778, 0.1308, 0.1817, 0.3226], [0.2228, 0.3116, 0.0336, 0.1216, 0.0, 0.0, 0.3321, 0.2768, 0.3106, 0.0455, 0.1042, 0.2647, 0.1984, 0.0935, 0.2717, 0.2291], [0.1634, 0.3732, 0.1275, 0.0405, 0.0, 0.0217, 0.3829, 0.2388, 0.3064, 0.0909, 0.1042, 0.0588, 0.2579, 0.215, 0.1033, 0.2695], [0.2327, 0.3327, 0.0671, 0.1351, 0.0, 0.0435, 0.347, 0.3218, 0.2681, 0.0909, 0.0938, 0.0735, 0.2659, 0.2617, 0.2183, 0.2218], [0.2426, 0.3257, 0.0336, 0.0, 0.0, 0.0, 0.3841, 0.263, 0.2681, 0.0303, 0.0521, 0.0147, 0.1964, 0.215, 0.2617, 0.2585], [0.1485, 0.3433, 0.1074, 0.1892, 0.0, 0.0435, 0.3866, 0.3322, 0.234, 0.0303, 0.0521, 0.2794, 0.2103, 0.1963, 0.2483, 0.2246], [0.198, 0.2782, 0.0604, 0.1486, 0.0, 0.0, 0.4511, 0.3322, 0.2383, 0.0909, 0.0312, 0.2222, 0.2056, 0.2933, 0.1989], [0.0652, 0.6382, 0.2353, 0.383, 0.1515, 0.1354, 0.3088, 0.3274, 0.243, 0.32, 0.1577], [0.1881, 0.5704, 0.0738, 0.1081, 0.0, 0.0, 0.1983, 0.0934, 0.2936, 0.0303, 0.1875, 0.0441, 0.2659, 0.2056, 0.2133, 0.308], [0.0941, 0.3257, 0.0671, 0.0405, 0.0, 0.0, 0.5353, 0.3564, 0.4, 0.0909, 0.0312, 0.0882, 0.2917, 0.271, 0.27, 0.0807], [0.1634, 0.3063, 0.0671, 0.1892, 0.0, 0.0217, 0.4696, 0.2526, 0.2638, 0.1364, 0.0208, 0.0441, 0.2222, 0.1589, 0.25, 0.2337], [0.2772, 0.4789, 0.1141, 0.1081, 0.0, 0.0, 0.4907, 0.2872, 0.3702, 0.0909, 0.0104, 0.0735, 0.2837, 0.1776, 0.26, 0.0477], [0.1634, 0.3415, 0.0805, 0.0405, 0.0, 0.0652, 0.4226, 0.3529, 0.217, 0.0, 0.252, 0.1215, 0.2317, 0.2731], [0.0604, 0.0217, 0.5898, 0.2768, 0.0758, 0.0208, 0.0147, 0.3175, 0.1869, 0.3267, 0.3382], [0.1188, 0.3891, 0.0403, 0.0811, 0.0, 0.0, 0.4027, 0.2215, 0.3021, 0.1212, 0.0417, 0.0, 0.254, 0.1776, 0.2633, 0.264], [0.0842, 0.2852, 0.0604, 0.1757, 0.0, 0.1087, 0.513, 0.1211, 0.4043, 0.1212, 0.0938, 0.0588, 0.2639, 0.1963, 0.23, 0.2502], [0.0704, 0.0403, 0.0811, 0.0217, 0.5737, 0.2976, 0.3319, 0.0758, 0.1146, 0.1324, 0.2698, 0.2897, 0.26, 0.3144], [0.1832, 0.3204, 0.0537, 0.0811, 0.0, 0.0, 0.4796, 0.263, 0.2, 0.0606, 0.0312, 0.0588, 0.3115, 0.2804, 0.255, 0.2603], [0.1238, 0.3979, 0.0738, 0.0135, 0.0, 0.0217, 0.4362, 0.2491, 0.3362, 0.0606, 0.1146, 0.1176, 0.2163, 0.1308, 0.2517, 0.2961], [0.1089, 0.3187, 0.0805, 0.0811, 0.0, 0.4957, 0.2734, 0.3021, 0.0152, 0.0, 0.0588, 0.25, 0.2243, 0.31, 0.2667], [0.104, 0.3838, 0.047, 0.0676, 0.0, 0.0652, 0.518, 0.2491, 0.2723, 0.0758, 0.0521, 0.0294, 0.2579, 0.2056, 0.2667, 0.2493], [0.1782, 0.3204, 0.047, 0.2838, 0.0, 0.0217, 0.425, 0.3772, 0.2894, 0.1515, 0.1667, 0.0147, 0.246, 0.1495, 0.325, 0.2566], [0.2228, 0.3486, 0.0671, 0.2838, 0.0, 0.0, 0.5204, 0.2457, 0.2298, 0.1061, 0.0417, 0.0441, 0.2798, 0.1495, 0.3217, 0.2484], [0.1386, 0.3803, 0.1007, 0.1081, 0.0, 0.1087, 0.5626, 0.308, 0.3021, 0.0, 0.0588, 0.254, 0.2336, 0.2517, 0.2456], [0.104, 0.3081, 0.047, 0.1081, 0.0, 0.0435, 0.4944, 0.218, 0.366, 0.0152, 0.0417, 0.0588, 0.2937, 0.2056, 0.2583, 0.3401], [0.1733, 0.2518, 0.094, 0.0135, 0.0, 0.0, 0.5056, 0.3737, 0.3702, 0.0758, 0.0417, 0.0294, 0.3075, 0.2523, 0.2933, 0.286], [0.1238, 0.1919, 0.047, 0.0811, 0.0, 0.5502, 0.2353, 0.4085, 0.1818, 0.0208, 0.0147, 0.2222, 0.1963, 0.345, 0.341], [0.297, 0.4014, 0.0671, 0.0946, 0.0, 0.0, 0.4126, 0.3356, 0.417, 0.2424, 0.0625, 0.0588, 0.3413, 0.2336, 0.2333, 0.2621], [0.2228, 0.3433, 0.0872, 0.1757, 0.0, 0.513, 0.2595, 0.434, 0.1061, 0.0312, 0.0441, 0.3313, 0.1963, 0.3217, 0.2126], [0.1832, 0.4525, 0.1611, 0.0405, 0.0, 0.0, 0.4944, 0.263, 0.3617, 0.197, 0.0208, 0.1912, 0.2817, 0.1682, 0.2417, 0.3043], [0.1535, 0.4577, 0.0738, 0.1622, 0.0, 0.5081, 0.2388, 0.366, 0.2273, 0.1458, 0.0735, 0.3472, 0.3925, 0.3083, 0.2869], [0.1733, 0.412, 0.0336, 0.1486, 0.0435, 0.5898, 0.1142, 0.2723, 0.2121, 0.1562, 0.1176, 0.3294, 0.3364, 0.26, 0.3419], [0.8528, 0.1832, 0.2676, 0.047, 0.2297, 0.0, 0.0, 0.5167, 0.3633, 0.3362, 0.0758, 0.1146, 0.0882, 0.3194, 0.2056, 0.275, 0.2539], [0.1139, 0.3662, 0.047, 0.1622, 0.0, 0.0435, 0.6803, 0.3875, 0.417, 0.1515, 0.0833, 0.1324, 0.2996, 0.215, 0.2567, 0.3401]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

