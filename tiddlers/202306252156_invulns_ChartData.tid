created: 20230625215649000
creator: Drevarr
modified: 20230705163536947
modifier: drevarr
tags: ChartData
title: 202306252156_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Tika Fiery", "Grasszanine", "Drevarr Moonwillow", "Raziel Umbra", "Malvader", "Grim Rafty", "Etchery Howls", "Lord Erin The Wise", "Sygaldry Verdandi", "Xanvias Einzbern", "Demon Staph", "Momomeko", "Smol Gluvs", "Mammary Mission", "Rina Of Theros", "Rozaalyna", "Solus Sanctus", "Johosh The Mighty", "Mmathuss", "Mistwalker Cael", "Inedible Plant", "Koralia Danai", "Bella Sassy", "Mister Jekyll", "Tootsy Pop Star", "Blancooo Padreee", "Jacob Pine", "Sumatra Satyricon", "Newtype Khan", "Zayde Sunsabre", "Tegan Parker", "Elon The Mender", "Pale Pam", "Tribal S", "Ryvalia Fazebringer", "Crusader Siolith", "Primal Clone", "Elonith Requiem", "Arcanophage Farra", "Grimdox", "Artakama Nahid", "Irish Mini Rev", "Cerys Fireblade", "Raelyn Sunray", "Cedryn X", "Euljian", "Eibh\u00ebar", "Miphest\u00f6", "Black Raspberry Pie", "High Sorcer Baradun"];
const professions = ["Firebrand", "Spellbreaker", "Scrapper", "Chronomancer", "Mechanist", "Reaper", "Druid", "Weaver", "Firebrand", "Berserker", "Druid", "Chronomancer", "Reaper", "Scourge", "Reaper", "Reaper", "Firebrand", "Berserker", "Firebrand", "Vindicator", "Vindicator", "Firebrand", "Firebrand", "Reaper", "Reaper", "Spellbreaker", "Reaper", "Soulbeast", "Spellbreaker", "Spellbreaker", "Tempest", "Druid", "Druid", "Druid", "Chronomancer", "Firebrand", "Chronomancer", "Reaper", "Spellbreaker", "Firebrand", "Tempest", "Herald", "Berserker", "Firebrand", "Berserker", "Willbender", "Chronomancer", "Tempest", "Chronomancer", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 21, 0, 0, 9, 0, 14, 39, 0], [0, 0, 0, 0, 0, 3, 0, 0, 22, 0, 0, 19, 0, 36, 9, 32], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 25, 0, 0, 26, 21, 7, 15, 0], [10, 2, 0, 0, 11, 0, 0, 11, 7, 0, 0, 40, 0, 14, 8, 0, 0, 0, 0, 9, 15], [0, 0, 10, 10, 29, 0, 3, 14, 0, 0, 46, 0, 13, 7], [67, 26, 0, 44], [9, 0, 0, 0, 0, 0, 0, 1, 0, 0, 29, 0, 26, 37, 22, 16, 0], [0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 14, 19, 38, 0, 0, 0, 20, 0, 19, 21], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 38, 0, 54, 36, 11], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 26, 0, 44, 13, 3, 3, 48], [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 3, 0, 20, 6, 0, 25, 26, 32, 34, 8], [0, 0, 0, 3, 0, 0, 5, 0, 0, 30, 13, 0, 19, 19, 0, 0, 3, 2, 59, 28], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 74, 0, 0, 17, 15, 29, 16, 10], [0, 3, 0, 0, 21, 34, 0, 0, 14, 0, 11, 37, 35, 33], [0, 12, 0, 22, 21, 22, 5, 110], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 4, 43, 0, 50, 0, 64, 20, 5], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, 23, 31, 0, 0, 11, 0, 69, 0, 16], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 8, 0, 0, 35, 0, 73, 18, 39], [0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 11, 0, 5, 11, 0, 0, 23, 0, 89, 22, 13], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 34, 19, 114, 14, 7], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 23, 0, 0, 26, 0, 9, 76, 15, 41], [0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 28, 0, 25, 55, 0, 34, 4, 39, 22, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 46, 0, 0, 5, 0, 0, 12, 18, 58, 32, 37], [0, 0, 0, 0, 0, 0, 0, 0, 22, 15, 0, 28, 34, 0, 0, 48, 0, 0, 28, 50], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 26, 24, 35, 0, 0, 62, 36, 15, 3, 0], [0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 1, 21, 0, 23, 31, 0, 18, 1, 95, 23, 5], [0, 0, 0, 0, 0, 34, 0, 0, 43, 0, 0, 26, 16, 61, 13, 36], [0, 0, 0, 0, 23, 0, 0, 39, 2, 0, 32, 13, 0, 0, 0, 15, 23, 23, 31, 33], [0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 26, 0, 0, 42, 0, 0, 4, 39, 69, 12, 26], [0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 48, 0, 49, 0, 26, 30, 25, 34, 18], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 11, 0, 0, 18, 0, 161, 18, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 28, 1, 0, 23, 86, 33, 6, 29], [0, 23, 0, 0, 4, 2, 0, 32, 0, 0, 47, 48, 99], [35, 0, 11, 0, 9, 0, 28, 20, 0, 0, 26, 42, 36, 21, 28], [0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 16, 0, 36, 77, 0, 0, 24, 0, 70, 26, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 33, 23, 0, 0, 33, 17, 44, 16, 18], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 34, 0, 0, 41, 0, 0, 32, 0, 108, 32, 34], [0, 0, 30, 0, 5, 0, 0, 52, 0, 0, 22, 13, 54, 26, 85], [0, 0, 0, 0, 0, 0, 0, 4, 0, 46, 4, 41, 30, 5, 20, 10, 0, 45, 8, 57, 0, 46], [35, 0, 32, 0, 38, 41, 33, 0, 21, 28, 43, 23, 23], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 0, 0, 37, 0, 91, 0, 125, 26, 13], [0, 0, 4, 0, 16, 0, 0, 18, 6, 14, 11, 31, 0, 7, 36, 0, 52, 0, 61, 6, 81], [0, 0, 0, 0, 17, 0, 0, 0, 0, 33, 0, 21, 0, 48, 2, 0, 0, 23, 44, 63, 76, 25], [22, 0, 61, 24, 0, 43, 0, 87, 25, 90], [0, 0, 0, 0, 42, 0, 0, 8, 13, 0, 34, 40, 0, 13, 17, 19, 54, 18, 45, 17, 49], [0, 0, 45, 13, 26, 0, 0, 45, 9, 0, 16, 17, 0, 42, 67, 36, 23, 30], [3, 0, 1, 25, 1, 2, 15, 0, 12, 34, 73, 0, 24, 35, 0, 1, 31, 61, 77, 30, 16], [3, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 77, 0, 28, 94, 7, 0, 53, 0, 135, 49, 19], [0, 0, 0, 0, 23, 0, 0, 29, 0, 5, 0, 79, 0, 8, 39, 0, 0, 26, 28, 169, 34, 75], [0, 0, 0, 0, 0, 0, 0, 67, 0, 26, 51, 56, 0, 9, 0, 37, 13, 208, 39, 102]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

