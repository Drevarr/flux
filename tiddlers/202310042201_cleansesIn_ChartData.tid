created: 20231004220141000
creator: Drevarr
tags: ChartData
title: 202310042201_cleansesIn_ChartData
type: text/vnd.tiddlywiki


const names = ["Lhea Bloodhand", "Garphon", "Sylia Raskae", "Baal Acurio", "Amiti\u00e9l", "Bella Bitty", "Oo Dads Mad", "Tegan Parker", "Jmbrage Gaurdian", "Rafaellagabriela", "Amiti\u00e9l", "Cedryn X", "Cat Wigglebooty", "Jimbo The Pleb", "Solus Luxes", "Cutie Piebringer", "Visterik", "Jimbo The Pleb", "Etchery Howls", "Crusader Siolith", "Sub Train", "Astraeus Windrunner", "Klengah", "K\u00e2fkaa", "Venom The Ferocious", "Zaedy Zae", "K\u00e2 \u00d4tik R\u00e6j", "Atria Ruinheart", "Tootsie Pop Rocks", "Lord Erin The Wise", "Kosair", "Black Raspberry Pie", "Morton Saltbringer", "Glorious Gluvs", "Eibh\u00ebar", "Xanvias Tseli", "Zanos Engine", "Grasszanine", "Mort\u00e4rion", "Sister Elonith", "Ryvalia Fazebringer", "Kurn The Drunk", "Newtype Khan", "Irin The Undeath", "Drevarr Moonwillow", "Mistwalker Cael", "Rina Of Theros", "Adjudicatrix Farra", "No Reserv\u00e9", "Latedoctor"];
const professions = ["Reaper", "Herald", "Berserker", "Weaver", "Firebrand", "Firebrand", "Berserker", "Tempest", "Firebrand", "Firebrand", "Willbender", "Berserker", "Scrapper", "Berserker", "Firebrand", "Firebrand", "Firebrand", "Spellbreaker", "Druid", "Firebrand", "Firebrand", "Berserker", "Druid", "Weaver", "Firebrand", "Druid", "Berserker", "Firebrand", "Scrapper", "Weaver", "Willbender", "Chronomancer", "Chronomancer", "Berserker", "Chronomancer", "Berserker", "Scrapper", "Spellbreaker", "Scrapper", "Berserker", "Chronomancer", "Reaper", "Spellbreaker", "Reaper", "Scrapper", "Herald", "Reaper", "Reaper", "Vindicator", "Reaper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condition Cleanses Incoming per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.1056, 0.2727, 0.0521, 0.1466, 0.0], [0.1321, 0.0476, 0.493, 0.1194, 0.0745, 0.0, 0.0, 0.0], [0.2082, 0.0222], [0.2264, 0.2958, 0.1493, 0.1383, 0.0, 0.0, 0.0], [0.0986, 0.2121, 0.1397, 0.0, 0.0603, 0.0], [0.0563, 0.1818, 0.0904, 0.0, 0.0776, 0.0, 0.4561], [0.1901, 0.0152, 0.189, 0.0526, 0.1034], [0.0, 0.0877, 0.4906, 0.119, 0.4085, 0.0746, 0.5213, 0.0303, 0.0, 0.1364], [0.0352, 0.1212, 0.0795, 0.0172, 0.0, 0.2632, 0.3868, 0.0476, 0.2394, 0.0821, 0.266, 0.0, 0.0909], [0.0352, 0.1818, 0.0685, 0.0, 0.0431, 0.0, 0.2982, 0.3585, 0.0714, 0.1268, 0.2313, 0.2234, 0.0, 0.0, 0.1818], [0.3509, 0.5283, 0.2143, 0.4366, 0.291, 0.3511, 0.0, 0.0], [0.0352, 0.1364, 0.1096, 0.0776, 0.0, 0.4561, 0.0377, 0.6479, 0.2388, 0.1915, 0.0, 0.0, 0.0455], [0.1831, 0.2424, 0.0822, 0.0, 0.1121, 0.1579, 0.1667, 0.2958, 0.1716, 0.4787, 0.0, 0.0909], [0.1901, 0.4545, 0.1973, 0.0, 0.069, 0.0, 1.0351], [0.0352, 0.0758, 0.1205, 0.0, 0.0776, 0.0, 0.2456, 0.566, 0.0476, 0.3803, 0.2164, 0.2128, 0.0606, 0.1364], [0.0915, 0.1061, 0.1233, 0.0, 0.069, 0.0, 0.5614, 0.3868, 0.0238, 0.3944, 0.1791, 0.1383, 0.1212, 0.0, 0.2727], [0.0986, 0.1667, 0.1151, 0.0, 0.0086, 0.0, 0.2456, 0.4528, 0.119, 0.3803, 0.2313, 0.2872, 0.0909, 0.0, 0.0455], [0.7453, 0.0, 0.6901, 0.3731, 0.4468, 0.0, 0.0, 0.2273], [0.0563, 0.0909, 0.0932, 0.0175, 0.0086, 0.2281, 0.3679, 0.0952, 0.3803, 0.2836, 0.5319, 0.0, 0.0, 0.2273], [0.0423, 0.1212, 0.1479, 0.0, 0.0431, 0.0, 0.386, 0.5094, 0.0714, 0.169, 0.2313, 0.3404, 0.0, 0.0, 0.0455], [0.0563, 0.197, 0.0904, 0.0, 0.1121, 0.0, 0.3333, 0.3774, 0.119, 0.3803, 0.1642, 0.4362, 0.0909, 0.0, 0.1818], [0.1197, 0.1364, 0.1288, 0.0, 0.0431, 0.0, 0.5088, 0.434, 0.0, 0.2254, 0.2164, 0.234, 0.3636, 0.0, 0.0], [0.1127, 0.1515, 0.1781, 0.0, 0.0603, 0.0, 0.3158, 0.3208, 0.0238, 0.2535, 0.2463, 0.3191, 0.0, 0.0, 0.0455], [0.0986, 0.2727, 0.1342, 0.0, 0.0948, 0.0, 0.2281, 0.5189, 0.2143, 0.4648, 0.1269, 0.1915, 0.0, 0.0455], [0.162, 0.1364, 0.1178, 0.0222, 0.2105, 0.717, 0.119, 0.1972, 0.2164, 0.2234, 0.0, 0.2273], [0.0211, 0.1212, 0.1397, 0.0, 0.0517, 0.0, 0.1579, 0.3679, 0.0, 0.4789, 0.3284, 0.5106, 0.1212, 0.0, 0.0909], [0.1549, 0.1818, 0.137, 0.0, 0.2155, 0.0, 0.3158, 0.2736, 0.0238, 0.4225, 0.1716, 0.5, 0.1515, 0.0, 0.1364], [0.1549, 0.1515, 0.1288, 0.0, 0.0345, 0.0, 0.2456, 0.5943, 0.0, 0.5352, 0.2313, 0.2553, 0.1212, 0.4091], [0.1056, 0.2727, 0.1452, 0.0431, 0.0, 0.3684, 0.5755, 0.0476, 0.2817, 0.2761, 0.3298, 0.0, 0.2273], [0.0845, 0.2879, 0.2082, 0.0431, 0.0222, 0.6316, 0.4245, 0.0714, 0.3239, 0.2537, 0.1596, 0.0, 0.0, 0.0], [0.1127, 0.2576, 0.1589, 0.1983, 0.0, 0.6132, 0.0714, 0.4507, 0.2015, 0.3298, 0.0, 0.2727], [0.1268, 0.2273, 0.1342, 0.0776, 0.0, 0.193, 0.6038, 0.119, 0.4085, 0.3209, 0.3404, 0.1212, 0.0145, 0.0455], [0.1901, 0.1667, 0.1425, 0.0889, 0.2982, 0.6887, 0.1667, 0.5775, 0.1493, 0.3191, 0.0606, 0.029, 0.1364], [0.1408, 0.2879, 0.1562, 0.0, 0.1034, 0.0, 0.4737, 0.5472, 0.0476, 0.3521, 0.2537, 0.3298, 0.0, 0.2273], [0.2324, 0.4091, 0.1425, 0.1207, 0.0222, 0.2281, 0.4528, 0.0952, 0.5634, 0.2463, 0.266, 0.0303, 0.0145, 0.2273], [0.1831, 0.3939, 0.1233, 0.0, 0.1466, 0.0, 0.2456, 0.5377, 0.2143, 0.493, 0.2612, 0.2553, 0.1515, 0.0, 0.2273], [0.162, 0.3333, 0.1205, 0.0, 0.0431, 0.0889, 0.386, 0.7736, 0.1429, 0.6479, 0.291, 0.0532, 0.0606, 0.0, 0.0], [0.0845, 0.3636, 0.1616, 0.1034, 0.0222, 0.614, 0.7358, 0.0714, 0.493, 0.1716, 0.1809, 0.0606, 0.1364], [0.2394, 0.3788, 0.2274, 0.0, 0.0862, 0.0, 0.2807, 0.3208, 0.0714, 0.3239, 0.3806, 0.2979], [0.1479, 0.1207, 0.0222, 0.7544, 0.6132, 0.0476, 0.493, 0.306, 0.5426, 0.0, 0.0145, 0.0909], [0.1479, 0.2576, 0.1644, 0.0, 0.1121, 0.0, 0.3684, 0.5094, 0.119, 0.5915, 0.2463, 0.3936, 0.0909, 0.0, 0.3182], [0.1408, 0.4394, 0.1452, 0.1638, 0.0, 0.4561, 0.6698, 0.119, 0.3803, 0.2164, 0.3936, 0.0606, 0.0, 0.2273], [0.0704, 0.3485, 0.1918, 0.0, 0.1207, 0.0444, 0.2807, 0.6698, 0.1429, 0.5493, 0.3284, 0.266, 0.0606, 0.0, 0.1364], [0.1972, 0.2727, 0.1616, 0.0, 0.1379, 0.0, 0.5263, 0.6792, 0.119, 0.493, 0.2612, 0.2872, 0.0, 0.3182], [0.162, 0.3333, 0.1014, 0.0, 0.1379, 0.0222, 0.5439, 0.6415, 0.1905, 0.4366, 0.2537, 0.5745, 0.0, 0.0, 0.3636], [0.1056, 0.2727, 0.1699, 0.0, 0.0862, 0.0, 0.5263, 0.783, 0.119, 0.3662, 0.291, 0.3936, 0.0, 0.029, 0.3636], [0.1268, 0.303, 0.1863, 0.0, 0.0776, 0.0444, 0.4912, 0.9434, 0.119, 0.5775, 0.2015, 0.4043, 0.0, 0.0, 0.1364], [0.0775, 0.3333, 0.1863, 0.1034, 0.0222, 0.2982, 0.8774, 0.119, 0.7465, 0.1866, 0.4894, 0.0909, 0.0, 0.2273], [0.1549, 0.2424, 0.1397, 0.0345, 0.0, 0.7719, 0.6887, 0.1667, 0.5211, 0.3284, 0.6383, 0.0, 0.2727], [0.1901, 0.2879, 0.1479, 0.181, 0.0222, 0.7895, 0.8774, 0.0952, 0.8169, 0.3209, 0.5426, 0.0606, 0.0, 0.1818]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

