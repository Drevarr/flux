created: 20230920220658000
creator: Drevarr
tags: ChartData
title: 202309202206_Cdmg_ChartData
type: text/vnd.tiddlywiki


const names = ["Raelyn Sunray", "Leafzel", "Lord Erin The Wise", "Necrotic Windrunner", "Drevarr Moonwillow", "Cat Wigglebooty", "Mellody Moon", "Eibh\u00ebar", "Lowella Slytherin", "Bella Sassy", "Oo Dads Mad", "Mistwalker Cael", "Sub Train", "Solus Luxes", "Ateriuz", "Belvyn Brightblade", "Latedoctor", "Jmbrage Warrior", "Daphne Agla\u00e9", "Mar\u00eda Callas", "Koralia Danai", "Alhana Lafay", "Rafaellagabriela", "Meme Soulmessor", "Dark Sidiuz", "Rina Of Theros", "Jimbo The Pleb", "Dugup", "Be\u00eb", "Mike The Archmagus", "Venomina", "Kurn The Drunk", "Glorious Gluvs", "Cedryn X", "Xanvias Einzbern"];
const professions = ["Firebrand", "Firebrand", "Weaver", "Reaper", "Scrapper", "Scrapper", "Dragonhunter", "Chronomancer", "Scourge", "Firebrand", "Berserker", "Herald", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Reaper", "Berserker", "Reaper", "Dragonhunter", "Firebrand", "Reaper", "Firebrand", "Reaper", "Reaper", "Reaper", "Berserker", "Berserker", "Reaper", "Weaver", "Reaper", "Reaper", "Berserker", "Berserker", "Berserker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[30.3382, 8.8947, 4.3077, 3.0857, 0.0, 1.2131, 0.027, 7.9688], [16.8095, 0.0, 0.0, 9.9559, 3.7167, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [18.8268], [0.0, 24.6029, 0.4667, 20.4493, 14.75, 14.5088, 19.4835, 8.3857, 5.2093, 11.3279, 0.0], [0.8896, 0.0, 7.7838, 8.2647, 6.4667, 0.0, 23.2609, 13.25, 12.6842, 8.0659, 0.0, 3.3857, 6.7674, 6.9672, 20.6216, 7.0938], [0.7273, 0.0, 0.0, 30.25, 28.0833, 10.4638, 29.1912, 4.4, 1.0, 0.0, 0.0, 7.9531], [9.5455, 0.0, 21.6216, 30.5, 25.0667, 0.0, 17.5507], [15.0882, 24.4167, 0.0, 1.7971, 22.2279, 14.8421, 9.2747, 0.0, 21.9714, 12.5116, 10.4754, 7.2973, 0.125], [49.0989, 0.0, 108.4186, 13.8852, 14.5541, 0.0], [37.2647, 5.45, 0.0, 12.3043, 4.5956, 24.3158, 10.5604, 3.7286, 0.0, 0.0, 0.0, 103.4219], [3.0584, 0.0, 68.8235, 4.1167, 0.0, 76.6087, 0.0, 19.3158, 16.9341, 0.0, 7.0286], [4.3983, 0.0, 0.0, 0.0, 0.0, 0.0, 20.3768, 26.1103, 0.0, 24.4505, 8.5417, 68.0571, 5.5814, 6.3443, 0.5, 2.8906], [8.9567, 0.0, 11.5946, 4.75, 8.3, 0.0, 20.3768, 28.6544, 21.9474, 21.5165, 0.0, 17.3571, 0.2558, 0.0, 2.6486, 7.0938], [8.6061, 0.0, 0.0, 15.5735, 0.0, 0.0, 12.4203, 7.4191, 5.5614, 65.4505, 0.0, 11.2714, 6.8605, 7.8197, 0.0, 31.8125], [0.0, 17.4419, 86.3115, 15.0405, 157.7188], [15.0455, 0.0, 0.0, 1.0147, 12.4333, 0.0, 69.087, 40.9485, 0.0], [38.1912, 52.3667, 0.0, 62.4203, 28.875, 5.4737, 35.1209, 3.0417, 12.3286], [0.0, 94.4857, 72.5116, 31.4262, 26.8378, 122.8125], [12.5195, 0.0, 60.7794, 14.7333, 63.9855, 16.9118, 4.5965, 25.1209, 0.0, 20.9714, 1.093, 1.8197, 0.7568, 19.3125], [41.9706, 64.6833, 0.0, 60.7536, 26.9412, 64.193, 53.9451, 0.0, 5.2], [2.7684, 0.0, 13.4324, 1.2059, 56.85, 0.0, 67.8116, 41.1324, 0.5439, 6.2308, 68.7143, 0.0, 10.6721, 29.3378, 0.0312], [23.4459, 10.6618, 55.15, 0.0, 32.3768, 15.8824, 0.7368, 10.8132, 90.9583, 43.3], [21.2059, 143.4, 0.0, 15.7101, 46.4559, 11.2982, 32.7912, 0.0, 14.2, 0.5116, 0.0, 13.3378, 72.8125], [21.3939, 95.72, 40.3784, 41.5441, 28.65, 48.2319, 53.6912, 19.4211, 59.4396], [41.8506, 25.6, 31.5405, 94.9265, 62.35, 9.0662, 28.193, 59.011, 0.0, 18.8], [36.7013, 0.0, 49.1471, 56.7333, 10.75, 39.4783, 23.9779, 11.4211, 53.5714, 63.4583, 31.1714, 3.2326, 2.8689, 8.9324, 41.4219], [95.2574, 116.5965, 46.9451, 52.0417, 176.0429, 29.9535, 0.0, 13.473, 83.1875], [61.4118, 31.0667, 0.0, 172.0435, 125.9338, 115.2632, 0.0, 0.0, 59.2143], [54.0649, 34.56, 0.5135, 45.7353, 54.2833, 73.3043, 44.5956, 16.7018, 52.8791, 31.3333, 19.8714, 2.5581, 22.377, 1.0135, 37.1406], [34.474, 23.52, 11.8378, 47.9853, 14.1, 4.3438, 67.5652, 137.0368, 18.4035, 49.5385, 4.125, 53.1429, 23.093, 2.2459, 14.0135, 37.125], [45.3203, 64.56, 0.0, 49.2794, 139.05, 55.2319, 45.9044, 36.0702, 55.7802, 47.7917, 25.8714, 36.2326, 25.5738, 9.7297, 12.4844], [62.6234, 90.0, 92.1, 0.0, 88.6377, 54.9191, 30.5789, 22.6154, 120.4167, 64.6429, 21.3488, 1.9016, 3.473, 10.6875], [23.7489, 0.0, 0.0, 4.0588, 171.9333, 0.0, 369.1449, 209.0588, 102.7544, 0.0, 0.0, 13.9571, 17.8837, 0.0, 0.0, 0.0], [23.8831, 0.0, 107.6029, 131.2833, 81.5217, 272.8897, 58.3684, 104.7582, 0.5833, 57.5571, 48.7209, 55.8197, 133.1081, 0.0], [86.7662, 6.44, 52.8649, 95.1324, 10.3833, 0.0, 253.3913, 0.0147, 130.5263, 248.0, 0.0, 91.6857, 10.1163, 77.7705, 14.9189, 84.7969]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

