created: 20230527220043000
creator: Drevarr
modified: 20230705163531872
modifier: drevarr
tags: ChartData
title: 202305272200_aegis_ChartData
type: text/vnd.tiddlywiki


const names = ["Grilo Gringo", "Zadey Starbolt", "Zaylen Harker", "Drevarr Moonwillow", "Kaehln Lao", "Bravatska", "Crusader Siolith", "Sygaldry Verdandi", "Lucas Ryn", "Aronorf Xideliesi", "Koralia Danai", "Bella Sassy"];
const professions = ["Dragonhunter", "Scrapper", "Firebrand", "Scrapper", "Firebrand", "Guardian", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Aegis per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[7.536, 88.9882, 4.6374, 13.1868, 0.687, 0.9713, 76.2262, 0.0, 37.2204, 84.6342, 41.3854, 40.2268, 21.932, 0.0, 0.0, 0.0, 0.0, 7.392], [7.296, 0.0, 0.0, 0.0, 20.772, 8.6768, 33.9552, 13.4622, 31.8931, 61.7883, 26.28, 18.468, 75.9217, 4.0846, 21.677, 61.9164, 50.1606, 31.0751, 0.0, 12.8622, 11.1699, 0.0, 48.6486, 6.5728, 17.6064], [117.3666, 48.8659, 16.375, 46.896, 20.4415, 216.543, 39.6414, 46.1402, 24.9063], [38.648, 10.9372, 0.0, 0.0, 13.032, 5.5123, 51.7188, 7.9218, 24.2272, 75.6006, 31.7462, 6.885, 29.4622, 1.0968, 49.3819, 41.5422, 31.2228, 64.89, 0.0, 21.4016, 5.6246, 0.0, 31.2197, 18.328, 18.7712], [0.0, 90.56, 76.6231, 156.0258, 95.1048, 70.1533, 98.0106, 78.2208], [134.501, 142.479, 188.4283, 0.0, 186.8076, 21.735], [87.1328, 74.5454, 76.9796, 0.0, 48.528, 70.5373, 94.7916, 26.892, 6.4365, 34.5309, 17.3448, 33.777, 96.1567, 11.4405, 28.5163, 60.417, 84.2184, 29.1284, 0.0, 15.5142, 7.0333, 33.7491, 15.8253, 11.648], [37.4227, 92.421, 196.927, 38.6899, 229.7534, 90.4932, 117.8982, 186.018, 0.0, 77.9953, 32.0714, 87.3029, 67.2557, 107.2125, 30.688], [50.7459, 34.6663, 10.248, 16.077, 49.992, 5.8186, 132.1266, 29.4678, 42.8858, 117.4051, 24.0199, 146.61, 138.0027, 12.8588, 104.386, 117.0414, 27.9342, 128.7706, 0.0, 31.7179, 52.0602, 40.5443, 35.6895, 27.176, 28.0], [97.1561, 0.0, 63.196, 0.0, 32.916, 20.6967, 173.8632, 1.8144, 77.8163, 83.168, 11.8786, 132.111, 140.5118, 75.7913, 107.226, 219.5298, 94.8402, 217.8862, 0.0, 23.5232, 27.1312, 0.0, 91.0949, 47.4, 29.3888], [0.0, 10.3295, 83.7262, 6.5755, 34.572, 11.2033, 320.2164, 49.8798, 60.2787, 150.687, 90.5083, 248.751, 181.6294, 58.2995, 180.3715, 208.593, 77.6034, 217.1652, 0.0, 102.6324, 62.1587, 107.8654, 57.7395, 79.9232], [31.3753, 27.8866, 139.3386, 45.4115, 64.152, 102.0545, 350.8704, 100.9422, 44.7661, 137.6828, 153.3175, 232.065, 275.6007, 52.1727, 213.1769, 272.3616, 124.2108, 222.5006, 7.5504, 78.2075, 0.0, 15.6643, 110.0138, 64.3376, 55.104]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

