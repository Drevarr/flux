created: 20230710221759000
creator: Drevarr
tags: ChartData
title: 202307102217_vigor_ChartData
type: text/vnd.tiddlywiki


const names = ["Tribal Z", "Rosreipp", "Tootsie Pop Rocks", "Fribble Bibble", "Nidircc", "Newtype Khan", "Drevarr Moonwillow", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Scrapper", "Scrapper", "Tempest", "Spellbreaker", "Scrapper", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Vigor per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[308.9896, 0.0, 92.9466, 92.6688, 13.5864, 31.9171, 83.2608, 0.0, 23.2214, 0.0, 0.0, 0.0, 125.8168, 15.2444, 23.5997, 34.7655, 7.9498, 22.0704, 0.0, 0.0, 30.7406, 0.0, 0.0], [22.5779, 13.2384, 177.7906, 582.1984, 43.8926, 190.4899, 465.5196], [252.031, 0.0, 0.0, 0.0, 152.2528, 85.6231, 170.5788, 0.0, 35.0064, 2.7955, 70.0315, 0.0, 403.5473, 0.0, 14.1715, 138.4691, 18.0398, 28.608, 56.7744, 58.5307, 58.3484, 35.1974], [671.5117, 0.0, 5.2147, 216.5119, 320.8912, 53.195, 10.414, 314.2566, 30.1272, 14.5411, 81.4733, 14.8402, 79.2288, 17.3979, 50.377, 33.467, 57.134, 89.5877, 0.0, 34.848, 5.2118, 39.1992, 37.7363], [88.2059, 123.8054, 112.2509, 117.2971, 79.2288, 1235.8903, 136.6807, 71.2675, 81.3351, 166.7156, 63.2928, 50.688, 46.7016, 202.8096, 24.986, 168.3352], [458.4523, 0.0, 0.0, 0.0, 388.08, 51.4814, 57.8092, 321.3126, 46.886, 103.9421, 100.3968, 58.9685, 76.2264, 516.8461, 58.8698, 111.7325, 84.0301, 96.3908, 38.5056, 0.0, 45.8232, 101.581, 98.9491], [1089.7076, 40.9147, 10.3622, 286.6309, 344.8032, 77.6995, 85.5712, 369.117, 27.1924, 81.9562, 88.1933, 106.7707, 75.1464, 650.9376, 77.933, 115.3925, 150.8661, 174.2068, 18.192, 39.1488, 80.1394, 109.3347, 35.3912, 100.5142], [1746.2301, 36.5765, 24.3802, 434.1924, 724.1024, 203.796, 184.7766, 591.0282, 59.4449, 199.4256, 169.7741, 148.1952, 90.0936, 1306.1185, 12.9532, 122.039, 318.9263, 236.5054, 59.3472, 82.2912, 56.9789, 231.3181, 166.1093]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

