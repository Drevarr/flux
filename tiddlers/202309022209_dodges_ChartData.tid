created: 20230902220918000
creator: Drevarr
tags: ChartData
title: 202309022209_dodges_ChartData
type: text/vnd.tiddlywiki


const names = ["Scarlet Redwitch", "Unnamed Charr", "Lady Sherena", "Fqa Necr", "Melmyr", "Aira Draugr", "Zatoshin", "Eat More Rice", "Sygaldry Verdandi", "Adredhel Winter", "Melmyr", "Melody Phoenixstorm", "Revenant Brandorf", "Sygaldry Verdandi", "Xanvias Einzbern", "Daphne Agla\u00e9", "Elfina Lightborn", "Aethli", "Scuba Steves", "Leyviathan", "Sofya De Nova", "Mistwalker Cael", "Zaedy Zae", "Greg The Knight", "Tootsie Pop Rocks", "Bella Sassy", "Sub Train", "Hyde En Sikh", "Belvyn Brightblade", "Lord Erin The Wise", "Puppy Sky", "Leriel Nova", "Unbreakable Nemesis", "Legacy Of Mathus", "Gabe Malhorn", "Koralia Danai", "Val Haden", "Be\u00eb", "Rina Of Theros", "Mistwalker Cael", "Agent Pickpocket", "Crusader Siolith", "Kandy Land", "Sly The Ele", "Jamaass", "Drevarr Moonwillow", "Sight Beyond Sights", "Mort\u00e4rion", "Glorious Gluvs", "Newtype Khan"];
const professions = ["Harbinger", "Dragonhunter", "Willbender", "Scourge", "Firebrand", "Herald", "Herald", "Specter", "Firebrand", "Firebrand", "Willbender", "Scrapper", "Herald", "Willbender", "Berserker", "Reaper", "Berserker", "Renegade", "Spellbreaker", "Herald", "Tempest", "Herald", "Druid", "Firebrand", "Scrapper", "Firebrand", "Dragonhunter", "Chronomancer", "Firebrand", "Weaver", "Reaper", "Tempest", "Firebrand", "Berserker", "Firebrand", "Firebrand", "Reaper", "Reaper", "Reaper", "Vindicator", "Thief", "Firebrand", "Soulbeast", "Tempest", "Reaper", "Scrapper", "Vindicator", "Scrapper", "Berserker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Dodge Attempts per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 2, 17, 4, 0, 1], [3, 0, 19, 2, 1], [9, 13, 2, 0, 2], [0, 7, 1, 4, 9, 2, 3, 1], [9, 2, 9, 5, 4], [1, 0, 13, 2, 1, 1, 0, 0, 2, 13, 6], [0, 4, 0, 2, 5, 2, 7, 1, 5, 8, 5], [7, 10, 4, 5, 3, 7, 3], [7, 6, 0, 4, 1, 0, 6, 6, 6, 4], [10, 0, 34], [10, 0, 0, 0, 3, 6, 8, 2, 2, 4, 2, 2, 2, 6], [2, 17, 1, 0, 3, 2, 3, 14, 6], [0, 2, 9, 1, 4, 1, 5, 10, 6, 5, 10], [1, 0, 24, 4, 0, 2, 1, 3, 10, 7, 2], [3, 0, 7, 1, 0, 0, 1, 0, 9, 2, 4, 3, 4, 0, 2, 1, 3, 0, 4, 7, 3], [1, 0, 8, 1, 0, 1, 0, 1, 5, 7, 3, 4, 4, 3, 3, 2, 2, 1, 3, 4, 4], [0, 0, 0, 15, 2, 2, 5, 3, 1, 6, 2, 3, 5, 5, 3, 5], [5, 20, 10, 5, 21], [14, 1, 0, 0, 0, 0, 0, 14, 4, 0, 0, 10, 0, 6, 0, 0, 7, 2, 2, 3], [2, 0, 5, 1, 0, 2, 0, 0, 12, 0, 4, 0, 8, 2, 5, 11, 4, 5, 5], [5, 3, 6, 7, 5, 0, 8, 1, 5, 13, 8, 6, 3], [2, 9, 9, 1, 12, 1, 6, 9, 7, 8, 10], [0, 15, 0, 0, 0, 0, 0, 2, 16, 5, 6, 3, 6, 1, 3, 2, 3, 3, 4, 3, 4], [1, 4, 1, 3, 4, 14, 1, 6, 6, 1, 7, 3, 0, 11, 1, 3, 11], [5, 15, 3, 0, 1, 0, 0, 0, 14, 5, 1, 6, 3, 0, 5, 3, 2, 12, 1, 2, 4], [1, 12, 2, 0, 0, 0, 2, 7, 4, 3, 4, 6, 2, 9, 0, 3, 10, 6, 7, 5], [3, 0, 26, 4, 0, 2, 0, 1, 3, 8, 2, 6, 8, 7, 2, 9, 1, 4], [3, 13, 1, 0, 0, 0, 0, 3, 3, 6, 8, 11, 0, 6, 1, 4, 13, 9, 8, 2], [4, 0, 31, 3, 0, 4, 7, 4, 34, 12], [3, 0, 1, 3, 15, 10, 3, 4, 6, 5, 11, 2, 1, 13, 8, 4, 11], [9, 2, 32, 4, 1, 7, 4, 1, 8, 29, 8], [0, 25, 1, 1, 8, 0, 1, 0, 26, 5, 3, 3, 8, 3, 13, 4, 6], [5, 2, 2, 4, 6, 20, 6, 0, 14, 1, 6, 13, 5, 12, 12], [4, 0, 14, 2, 0, 3, 1, 1, 8, 11, 4, 2, 5, 11, 1, 6, 0, 1, 15, 5, 10, 7], [6, 2, 17, 3, 0, 0, 4, 1, 5, 21, 6, 1, 4, 4, 2, 12, 2, 5, 4, 4, 6, 7], [2, 0, 26, 5, 1, 0, 0, 10, 3, 5, 8, 9, 1, 7, 1, 3, 12, 9, 8, 6], [4, 1, 3, 4, 30, 6, 1, 7, 7, 4, 11, 2, 9, 6, 5, 9, 7], [1, 0, 21, 4, 0, 3, 0, 1, 1, 19, 9, 4, 7, 10, 0, 8, 1, 4, 11, 10, 4, 3], [5, 0, 21, 3, 0, 2, 0, 1, 2, 17, 7, 3, 3, 6, 2, 6, 3, 8, 14, 3, 9, 7], [6, 0, 39, 5, 0, 9, 1, 6, 44, 17], [3, 35, 12, 0, 1, 14, 8, 24, 5, 9, 3, 16, 2], [3, 24, 4, 0, 1, 0, 2, 4, 18, 5, 7, 8, 8, 1, 12, 0, 5, 14, 4, 6, 9], [4, 22, 5, 0, 5, 1, 2, 3, 10, 14, 3, 7, 3, 3, 13, 3, 6, 12, 6, 9, 13], [3, 1, 9, 4, 9, 22, 10, 5, 10, 9, 1, 15, 3, 6, 17, 5, 9, 11], [2, 2, 3, 10, 36, 12, 2, 5, 6, 23, 3, 10, 4, 6, 5, 20], [8, 1, 30, 3, 0, 1, 0, 2, 3, 28, 7, 4, 7, 9, 4, 6, 3, 3, 11, 8, 8, 9], [1, 35, 0, 4, 8, 48, 16, 4, 12, 8, 9, 2, 2, 12, 2, 1], [8, 1, 30, 4, 0, 2, 4, 2, 29, 9, 3, 9, 1, 5, 14, 4, 9, 13, 8, 4, 9], [4, 0, 38, 6, 2, 3, 3, 5, 5, 32, 14, 3, 9, 14, 1, 18, 5, 6, 11, 7, 8, 16], [8, 29, 6, 2, 2, 2, 3, 7, 38, 14, 0, 9, 12, 4, 17, 3, 7, 16, 8, 11, 22]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
	  	<td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

