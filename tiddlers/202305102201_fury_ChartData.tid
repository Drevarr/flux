created: 20230510220110000
creator: Drevarr
modified: 20230705163529506
modifier: drevarr
tags: ChartData
title: 202305102201_fury_ChartData
type: text/vnd.tiddlywiki


const names = ["Miphest\u00f6", "Kosa\u00efr", "Lord Erin The Wise", "Permanent Dawn", "No Reserv\u00e9", "Mike The Archmagus", "Demon Sekhmet", "Etchery Howls", "Tribal S", "Blancooo Padreee", "Johoshua", "Drevarr Moonwillow"];
const professions = ["Tempest", "Weaver", "Weaver", "Weaver", "Herald", "Weaver", "Spellbreaker", "Druid", "Druid", "Spellbreaker", "Scrapper", "Scrapper"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fury per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 71.0145, 78.4947, 85.9248, 231.6014, 0.0, 15.9682, 0.0, 29.0864, 41.1247, 215.2394, 14.8944, 159.7906], [43.6738, 9.1453, 332.502, 129.7228, 19.992, 526.9382, 27.2246, 24.1488, 12.758, 31.6991, 63.2664, 20.0655, 226.4584, 43.9128], [35.231, 7.9966, 196.8955, 245.1238, 53.0808, 449.5133, 96.1805, 26.2454, 14.1207, 31.9108, 17.3729, 56.1452, 343.4273, 51.1032, 31.752, 177.1919], [25.0059, 292.132, 214.2768, 42.7584, 448.1667, 67.5648, 28.3046, 5.6654, 46.5696, 45.9448, 48.119, 319.7426, 56.1878, 210.1539], [15.8184, 18.6881, 373.0555, 242.0942, 75.4392, 385.1047, 125.3923, 47.7173, 0.0, 34.1863, 40.6112, 72.0065, 295.0192, 120.5419, 35.6152, 155.9422], [12.1586, 40.005, 351.586, 264.4032, 61.7712, 473.5262, 71.8704, 36.2981, 42.9181, 40.7827, 64.4389, 349.2446, 50.3328, 34.9625, 177.6938], [92.8418, 68.3023, 437.2805, 360.2494, 102.3672, 337.7521, 46.1693, 87.5722, 38.3168, 79.8034, 36.6838, 93.0275, 629.7206, 145.6056, 52.0204, 209.8193], [50.4757, 563.5285, 436.1276, 83.9256, 629.2737, 159.8371, 57.5078, 65.3562, 53.6966, 77.3955, 603.9583, 99.3302], [16.1554, 59.0245, 719.1365, 555.9353, 86.7408, 962.9862, 91.6099, 57.0586, 32.1256, 37.044, 33.0137, 89.0144, 569.4702, 40.4203, 54.6311, 186.3945], [107.7242, 107.2911, 426.087, 508.9762, 236.7216, 771.556, 366.7046, 58.6498, 0.0, 106.6867, 82.5087, 142.637, 668.1562, 183.5093, 20.8681, 590.1376], [62.9366, 80.6285, 971.082, 737.1616, 190.74, 1223.3134, 149.2387, 60.0163, 43.4458, 69.6956, 80.5021, 20.9063, 577.9883, 128.8109, 76.5576, 380.653], [70.9769, 115.3761, 929.244, 763.6019, 255.4488, 1272.6858, 186.0682, 125.5738, 36.203, 123.9386, 109.8286, 142.1784, 1121.2807, 195.733, 87.1592, 661.416]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

