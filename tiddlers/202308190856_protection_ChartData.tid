created: 20230819085635000
creator: Drevarr
tags: ChartData
title: 202308190856_protection_ChartData
type: text/vnd.tiddlywiki


const names = ["Oats Guardian", "Vee U", "Govinda Ektar", "Grae Leon", "Nose Llama", "Darks Na", "Grootsmaid", "Unbreakable Nemesis", "Kosa\u00efr", "Crabbedmermaid", "Drevarr Moonwillow", "Gestern Yesteryear"];
const professions = ["Firebrand", "Tempest", "Vindicator", "Tempest", "Tempest", "Firebrand", "Firebrand", "Firebrand", "Tempest", "Firebrand", "Scrapper", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Protection per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[36.3911, 139.4662, 132.5686, 17.631, 23.6993], [14.2544, 0.0, 34.3592, 53.2152, 17.7192, 18.2282, 52.4165, 13.734, 0.0, 19.1475, 0.0, 45.8872, 12.615, 80.9655, 27.588], [15.275, 33.1968, 32.2092, 32.8481, 33.8515, 0.0, 0.0, 66.4415, 55.047, 9.4355, 59.1979, 42.2978, 39.2081, 12.191, 20.8102], [92.8872, 33.0206, 0.0, 35.392, 0.0, 0.0, 0.0, 28.303, 71.5523, 14.0134, 69.9182, 61.4209, 153.9945, 46.6803, 0.0, 0.0], [54.432, 74.5888, 58.2784, 85.2948, 58.0428, 78.4303, 55.468, 63.18, 80.919], [23.7913, 29.92, 19.5112, 150.7308, 55.3766, 0.0, 207.1775, 26.558, 205.259, 9.5137], [105.4255, 20.482, 16.74, 18.1855, 167.245, 154.7865, 18.7091, 78.349, 13.6937, 88.308, 87.6015, 6.9523], [87.3293, 18.2072, 4.5472, 47.1048, 54.1843, 48.5388, 138.3685, 25.648, 0.0, 88.393, 27.2655, 112.926, 63.4285, 50.9487, 36.4412], [58.3616, 54.1024, 65.6868, 46.3183, 77.1034, 97.8415, 58.982, 0.0, 20.72, 146.2875, 139.7415, 0.0, 131.2964], [70.2012, 100.6848, 128.8082, 91.2055, 91.126, 0.0, 124.949, 244.352, 36.6832, 34.9453, 232.9394, 44.5421], [31.0943, 81.1184, 65.656, 98.154, 77.9314, 31.6375, 140.5015, 61.376, 15.996, 82.436, 166.7885, 202.7535, 13.8368, 172.397, 114.741], [126.3049, 59.8312, 168.8032, 151.5744, 149.4209, 208.9613, 291.4705, 68.012, 62.004, 82.0105, 498.083, 404.799, 54.2726, 406.6809, 94.3008, 368.5275, 141.4381, 83.4877, 90.639]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            //console.log(params.value);
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

