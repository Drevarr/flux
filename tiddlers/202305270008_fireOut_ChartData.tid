created: 20230527000807000
creator: Drevarr
modified: 20230705163531722
modifier: drevarr
tags: ChartData
title: 202305270008_fireOut_ChartData
type: text/vnd.tiddlywiki


const names = ["Tegan Parker", "Miphest\u00f6", "Venomina The Siren", "Zefirokai", "Johosh Of The North", "Artakama Nahid"];
const professions = ["Tempest", "Tempest", "Tempest", "Tempest", "Tempest", "Tempest"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Fire Aura per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[75.7555, 0.0, 72.442, 0.0, 0.0, 26.6198, 0.0, 0.0, 26.4725, 0.0, 71.4611, 0.0, 0.0, 47.5418, 0.0, 0.0, 26.6437, 0.0, 0.0, 0.0, 26.2704, 0.0, 0.0, 0.0, 0.0, 0.0], [56.0333, 19.9862, 0.0, 40.4986, 0.0, 0.0, 54.2026, 0.0, 20.0057, 15.0616, 39.841, 194.432, 15.9662, 87.0926, 77.142, 47.838, 0.0, 19.888, 39.7591, 202.8442], [70.7789, 172.9085, 89.4015, 0.0, 142.8826, 0.0, 2.3347, 90.7987, 0.0, 26.2787, 44.2176, 52.2038, 131.712, 0.0, 0.0, 31.3945, 0.0, 0.0, 98.0652, 228.745, 52.304, 0.0, 70.7316, 52.9092], [409.3747, 437.6803, 73.3162, 26.3173, 53.6256, 114.215, 0.0, 189.2582, 128.4638, 56.6478, 65.6967], [276.6643, 208.1136, 20.9808, 26.0665, 21.336, 357.889, 52.8641, 123.5942, 60.6163, 53.1508, 74.2487, 26.4403, 198.3206, 52.6306, 16.3185, 0.0, 76.3247, 26.5594, 26.3529, 101.8181, 143.136, 0.0, 23.7872, 52.749, 52.974], [467.2512, 329.6813, 83.8649, 24.1604, 0.0, 68.0285, 71.5521, 118.7059, 70.8029, 0.0, 126.5616, 75.4463, 0.0, 172.6054, 63.3442, 161.2268, 0.0, 183.3954, 0.0, 72.6106, 258.8717, 46.672, 53.2571]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

