created: 20230626011754000
creator: Drevarr
modified: 20230705163537990
modifier: drevarr
tags: ChartData
title: 202306260117_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Zhavashian", "Seiker Novus Terra", "Daddy Demon", "Rozaalyna", "Oo Dads Mad", "Black Raspberry Pie", "Kosair", "Traidoruns Maximus", "Cerys Fireblade", "Tika Fiery", "Tegan Parker", "Air One Com", "Koralia Danai", "Xanvias Einzbern", "Johosh The Mighty", "Gabe Malhorn", "Drevarr Moonwillow", "Warrior Constantine", "Bella Sassy", "Solus Sanctus", "Miphest\u00f6", "Mr Juebacca", "Grasszanine", "Zayde Sunsabre", "Tribal S", "Blancooo Padreee", "Newtype Khan", "Arcanophage Farra"];
const professions = ["Tempest", "Tempest", "Tempest", "Reaper", "Spellbreaker", "Chronomancer", "Firebrand", "Firebrand", "Berserker", "Firebrand", "Tempest", "Firebrand", "Firebrand", "Berserker", "Berserker", "Firebrand", "Scrapper", "Spellbreaker", "Firebrand", "Firebrand", "Tempest", "Herald", "Spellbreaker", "Spellbreaker", "Druid", "Spellbreaker", "Spellbreaker", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 0.0, 36.1669, 30.87, 3.888, 0.0, 0.0, 0.0, 3.6824, 3.0296, 0.156, 4.9942, 4.324, 16.2578, 0.0, 3.818, 26.0606, 0.0, 0.0, 0.0], [1.6767, 0.0, 0.0, 29.6352, 3.5424, 0.0, 5.3354, 0.3024, 0.0, 0.0, 2.8249, 4.5252, 11.3505, 19.8904, 0.0, 0.0, 51.0, 7.6248, 1.434], [1.3365, 1.8147, 6.2829, 8.5201, 0.0, 0.0, 1.5893, 9.5634, 0.0251, 8.1162, 3.8074, 4.9933, 15.2853, 30.441, 0.0, 0.0, 3.128, 19.3208, 5.5135, 1.4651, 0.0, 0.0, 1.8728, 1.5152, 14.6, 0.0, 0.0], [3.6936, 5.1648, 0.0, 7.7792, 9.072, 1.7371, 4.0867, 3.8556, 2.4077, 2.9308, 3.5618, 3.4329, 8.0967, 15.3934, 14.2085, 2.1815, 4.692, 7.3014, 1.9894, 3.3442, 2.9792, 3.784, 3.9136, 2.2108, 23.2, 1.3176], [1.0449, 16.8904, 11.6798, 38.2788, 48.0384, 12.6773, 12.4872, 3.2886, 3.7996, 27.5049], [5.346, 9.8178, 17.3183, 16.6698, 22.464, 3.2525, 0.0, 4.7628, 0.0, 13.0761, 4.094, 4.8372, 12.2585, 15.5664, 2.0493, 0.0, 0.046, 24.3756, 6.224, 6.9115, 5.1391, 5.3054, 0.0, 0.0, 14.0, 5.5296, 0.0], [9.4978, 9.9792, 5.9816, 14.4288, 8.1471, 3.5109, 14.5286, 24.7333, 16.531, 3.818, 22.6907, 3.3536, 6.2744, 6.6287, 5.5784, 5.1621, 0.0, 34.2, 4.536], [7.1442, 10.7019, 11.1965, 30.4996, 3.5424, 0.887, 3.784, 8.7696, 4.7527, 8.3416, 5.3222, 8.1141, 13.1666, 12.569, 3.3545, 2.668, 12.581, 8.8102, 6.2426, 4.6922, 0.7022, 2.9052, 0.5092, 25.6, 4.9896, 2.1857], [5.1516, 6.1885, 13.8546, 14.4472, 22.5504, 2.9568, 10.2925, 5.3298, 1.4797, 7.515, 6.837, 0.7022, 3.8051, 10.2465, 0.4493, 10.6859, 12.0711, 11.5816, 6.2026, 1.8007, 1.4904, 45.0, 2.2248, 2.156], [0.5832, 9.6317, 28.9175, 13.0889, 4.32, 1.4045, 0.8703, 5.5566, 0.0, 3.4569, 7.6558, 8.5822, 13.6206, 17.9878, 13.5254, 1.8728, 5.152, 26.8469, 1.0231, 1.7518, 2.6068, 1.5994, 4.898, 1.9375, 32.6, 2.916, 3.0461], [29.6424, 80.015, 0.0, 2.1806, 1.5514, 4.8384, 2.8557, 3.1114, 5.5394, 0.0, 55.5202, 1.3662, 0.0, 0.0, 0.0, 4.4904, 4.3953, 0.0, 7.2949, 0.0, 0.0, 58.2, 2.3976, 0.0], [2.7216, 5.5371, 5.6385, 12.2245, 2.9376, 6.7267, 0.0, 11.6046, 3.762, 9.018, 3.1208, 16.3447, 43.24, 17.4874, 10.81, 38.8662, 1.0515, 7.8351, 3.9474, 3.901, 7.227, 0.0, 48.8, 1.2528, 0.0], [1.1421, 7.0726, 38.1001, 23.7082, 6.3072, 3.3264, 3.7462, 3.4398, 7.6653, 9.2524, 16.0721, 7.34, 48.6018, 16.8043, 6.3798, 3.45, 46.617, 1.3642, 2.3251, 8.6397, 0.0, 3.9857, 45.4, 2.9376, 2.0472], [4.4955, 8.7476, 13.6129, 33.957, 12.7008, 3.6221, 12.3737, 10.017, 1.4797, 12.8507, 10.1941, 15.526, 9.8371, 31.9976, 17.0775, 3.2928, 17.94, 17.2988, 7.8439, 8.9499, 5.4743, 6.4366, 2.1609, 1.5525, 42.0, 7.3224, 1.6318], [7.9704, 12.5166, 11.5186, 27.1656, 21.168, 9.7944, 9.9519, 12.3606, 5.5301, 6.3126, 4.5034, 10.9228, 24.8198, 39.7808, 15.8479, 3.7044, 15.824, 20.4441, 4.4619, 8.6313, 5.3998, 8.1531, 6.7708, 1.5277, 26.8, 7.2576, 4.6681], [4.5927, 15.7271, 31.9784, 27.9065, 19.7856, 1.4414, 2.7623, 7.9014, 19.0369, 12.7882, 47.9099, 42.7621, 6.1328, 13.984, 45.4937, 4.8882, 5.5419, 4.1709, 0.156, 4.4899, 0.5092, 44.8, 6.5448, 0.0], [11.421, 12.8423, 23.8428, 26.9186, 14.9472, 3.659, 8.9681, 16.5564, 1.4546, 19.6893, 11.586, 13.3414, 28.6789, 50.5043, 34.2916, 0.7203, 10.166, 11.3453, 7.3608, 8.5995, 4.0219, 8.3872, 6.2666, 5.117, 52.2, 8.532, 3.5703], [12.8547, 18.8447, 44.0824, 31.536, 5.6179, 7.7194, 18.4842, 0.0, 19.9148, 19.4874, 31.13, 26.6358, 85.2693, 59.5663, 2.2432, 21.85, 34.4853, 15.2615], [5.1273, 18.0536, 43.3359, 43.5884, 21.168, 4.8048, 7.7572, 17.955, 2.6961, 9.8446, 9.8665, 25.3565, 0.0, 0.0, 22.1324, 10.0842, 15.548, 52.2335, 2.1315, 5.7967, 12.3637, 8.6212, 9.3399, 6.21, 97.0, 3.7368, 0.6429], [4.0581, 24.2421, 15.1434, 42.7241, 10.368, 4.3982, 4.957, 13.608, 1.3919, 10.4459, 11.7088, 21.5335, 17.2528, 61.9197, 36.4775, 7.7998, 6.946, 31.4524, 3.6378, 3.8857, 9.4962, 3.901, 14.6461, 8.3462, 77.0, 6.3936, 2.0769], [1.2636, 0.0, 37.9289, 36.018, 141.9851, 7.4745, 53.3806, 31.0582, 21.9236, 0.7683, 168.6, 25.9848, 0.0], [2.8188, 21.1712, 54.9351, 60.6287, 23.1552, 11.125, 11.6169, 6.6528, 9.9442, 11.047, 20.3881, 52.1174, 33.1435, 89.5933, 17.3507, 13.2329, 19.596, 15.9509, 8.0429, 5.1916, 19.8117, 10.2596, 5.2342, 5.3654, 81.2], [13.851, 36.3865, 23.6817, 66.1853, 4.1472, 32.508, 6.9095, 38.8526, 17.8089, 37.9177, 50.5476, 111.7322, 45.9043, 17.836, 20.2586, 23.0549, 8.3075, 2.9808, 127.2, 11.9664, 6.923], [21.6513, 28.616, 104.711, 8.208, 7.4659, 24.3432, 32.1642, 33.7755, 50.9471, 63.3358, 137.6762, 11.9158, 35.512, 65.9377, 19.553, 22.9001, 14.8588, 22.1187, 16.5669, 8.0978, 187.6, 22.032, 6.6758], [28.5768, 35.2697, 24.5677, 37.4144, 20.3742, 0.0, 64.3284, 32.1788, 40.1023, 62.4278, 115.0184, 82.5185, 0.0, 53.866, 35.1593, 32.1999, 26.7858, 18.8062, 27.6191, 14.7661, 1.006, 180.0, 19.98, 0.0], [20.9709, 13.8194, 43.4165, 114.5894, 70.2432, 7.4659, 18.5416, 28.1988, 8.1761, 67.7102, 6.4276, 61.6358, 70.6758, 179.3595, 89.896, 10.2077, 35.512, 56.9513, 19.6382, 27.2636, 26.8128, 22.3917, 27.1553, 13.5502, 49.2, 10.3054], [26.5356, 44.8549, 45.3496, 105.8224, 55.4688, 8.3899, 6.2436, 21.6972, 30.6231, 47.1241, 61.444, 156.5288, 99.1861, 3.1899, 33.902, 90.9873, 23.276, 21.1803, 32.5105, 21.1434, 18.6318, 3.105, 202.6, 14.9472, 7.6351], [25.272, 14.3312, 41.4833, 104.8345, 53.136, 23.1739, 29.4017, 35.5698, 4.4392, 72.144, 38.7292, 60.3875, 43.4346, 186.7968, 91.9453, 38.64, 70.8802, 28.1926, 32.0411, 26.4032, 33.8607, 28.1157, 5.1543, 178.6, 18.468, 16.8229]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

