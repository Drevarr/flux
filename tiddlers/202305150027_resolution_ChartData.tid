created: 20230515002743000
creator: Drevarr
modified: 20230705163530066
modifier: drevarr
tags: ChartData
title: 202305150027_resolution_ChartData
type: text/vnd.tiddlywiki


const names = ["Belvyn Brightblade", "Cuscuszera", "Ark Darkness", "Ever Moore", "Sub Train", "Aronorf Xideliesi", "Drogo Discourteous", "Lucas Ryn", "Gabe Malhorn", "Koralia Danai"];
const professions = ["Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FFD166", "Berserker": "#B39247", "Spellbreaker": "#665429", "Bladesworn": "#19150A", "Guardian": "#72C1D9", "Dragonhunter": "#508798", "Firebrand": "#2E4D57", "Willbender": "#0B1316", "Revenant": "#D16E5A", "Herald": "#924D3F", "Renegade": "#542C24", "Vindicator": "#2A1612", "Engineer": "#D09C59", "Scrapper": "#926D3E", "Holosmith": "#533E24", "Mechanist": "#2A1F12", "Ranger": "#8CDC82", "Druid": "#629A5B", "Soulbeast": "#385834", "Untamed": "#1C2C1A", "Thief": "#C08F95", "Daredevil": "#866468", "Deadeye": "#4D393C", "Specter": "#261D1E", "Elementalist": "#F68A87", "Tempest": "#AC615F", "Weaver": "#623736", "Catalyst": "#311C1B", "Mesmer": "#B679D5", "Chronomancer": "#7F5595", "Mirage": "#493055", "Virtuoso": "#24182B", "Necromancer": "#52A76F", "Reaper": "#39754E", "Scourge": "#21432C", "Harbinger": "#08110B"};
option = {
  title: [
    {text: 'Resolution per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[198.8345, 398.3897, 519.2411, 239.5786, 111.9928, 72.0369, 21.7455], [233.532, 177.7835, 393.6745, 563.141, 205.7194, 245.7555, 58.476], [338.6167, 806.6959, 305.4437, 76.6832, 243.4224, 156.522, 29.6142, 47.9232], [584.9103, 49.761, 37.4595, 355.1821, 432.4289, 329.7941, 304.278, 146.872], [535.6434, 227.7323, 126.5772, 148.1064, 102.201, 15.708, 218.5911, 399.8961, 566.1964, 250.3301, 300.7834, 0.0], [174.3206, 553.045, 679.288, 357.662, 123.1998, 199.0638, 97.0425, 38.7618, 81.4944, 98.2234, 214.2032, 331.793, 149.688, 96.5204, 0.0], [949.4035, 1306.7182, 513.4639, 256.7622, 187.6992, 150.879], [361.7827, 654.746, 989.1096, 422.0108, 228.361, 261.0192, 127.11, 44.7678, 112.5228, 212.5247, 407.8271, 579.4681, 327.3917, 244.6726, 64.812], [146.3857, 1156.9434, 761.0031, 461.7114, 346.162, 201.0675, 26.5881, 73.0548, 205.7289, 548.1223, 679.7221, 338.7754, 230.448, 150.238], [509.6801, 1337.3474, 1395.0256, 681.9649, 438.2996, 510.1239, 178.3245, 27.0963, 158.964, 268.1835, 555.9165, 802.032, 240.6835, 369.6422, 222.486]]
    },
    {
      transform: {
        type: 'boxplot',
        config: {
          itemNameFormatter: function (params) {
            return names[params.value];
          }
        }
      },
    },
    {
      fromDatasetIndex: 1,
      fromTransformResult: 1
    }
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '20%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
    {
      name: 'boxplot',
      type: 'boxplot',
      datasetIndex: 1,
      tooltip: {trigger: 'item',
          formatter: function (params) {
            console.log(params.value);
            //Low = params.value[1]
          return `<u><b>${params.value[0]}</b></u>
    <table>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Low   :</td>
        <td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q1    :</td>
        <td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q2    :</td>
        <td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">Q3    :</td>
        <td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
      </tr>
      <tr>
      	<td align="right">&#x2022;</td>
        <td align="left">High  :</td>
        <td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
      </tr>  
    </table>`;              
        },    
        axisPointer: {type: 'shadow'}},      
      itemStyle: {
        borderColor: function (seriesIndex) {
          let myIndex = names.indexOf(seriesIndex.name);
          return ProfessionColor[professions[myIndex]];
                },
        borderWidth: 2
      },
      encode:{tooltip: [ 1, 2, 3, 4, 5]},
      },
    {
      name: 'outlier',
      type: 'scatter',
      encode: { x: 1, y: 0 },
      datasetIndex: 2,
    }
  ]
};

